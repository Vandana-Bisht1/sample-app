{"version":3,"file":"static/js/main.5d4f71cc.js","mappings":";iCAcmEA,EAAOC,QAGjE,wBAcL,IAAIC,EAAgB,SAASC,EAAGC,GAI5B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,CAAA,GACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOC,OAAOK,UAAUC,eAAeC,KAAKR,EAAGK,KAAIN,EAAEM,GAAKL,EAAEK,GAAA,GAC3EN,EAAGC,EAAA,EASxBS,EAAW,WAQX,OAPAA,EAAWR,OAAOS,QAAU,SAAkBX,GAC1C,IAAK,IAAIC,EAAGK,EAAI,EAAGM,EAAIC,UAAUC,OAAQR,EAAIM,EAAGN,IAE5C,IAAK,IAAIS,KADTd,EAAIY,UAAUP,GACOJ,OAAOK,UAAUC,eAAeC,KAAKR,EAAGc,KAAIf,EAAEe,GAAKd,EAAEc,IAE9E,OAAOf,CAAA,GAEKgB,MAAMC,KAAMJ,UAAA,EAEhC,SAASE,EAAcf,EAAIC,EAAMK,GAC7B,GAAIA,GAA6B,IAArBO,UAAUC,OAAc,IAAK,IAA4BF,EAAxBG,EAAI,EAAGG,EAAIjB,EAAKa,OAAYC,EAAIG,EAAGH,KACxEH,GAAQG,KAAKd,KACJW,EAAJA,GAASP,MAAME,UAAUY,MAAMV,KAAKR,EAAM,EAAGc,IAC/CA,GAAKd,EAAKc,IAGrB,OAAOf,EAAGoB,OAAOR,GAAMP,MAAME,UAAUY,MAAMV,KAAKR,GAAA,CAGtD,IAAIoB,EAAgC,oBAAfC,WAA6BA,WAC9B,oBAATC,KAAuBA,KACR,oBAAXC,OAAyBA,OAC5BC,EAAAA,EAERC,EAAOxB,OAAOyB,KACdC,EAAUvB,MAAMwB,QAIpB,SAASC,EAAO7B,EAAKK,GACjB,MAAyB,iBAAdA,GAEXoB,EAAKpB,GAAWyB,SAAQ,SAAU/B,GAC9BC,EAAID,GAAOM,EAAUN,EAAA,IAFdC,CAAA,CALQ,oBAAZ+B,SAA4BX,EAAQW,UAC3CX,EAAQW,QAAUA,SAUtB,IAAIC,EAAW/B,OAAOgC,eAClB5B,EAAU,CAAC,EAAEE,eACjB,SAAS2B,EAAOnC,EAAKC,GACjB,OAAOK,EAAQG,KAAKT,EAAKC,EAAA,CAE7B,SAASW,EAAMX,EAAOK,GACO,mBAAdA,IACPA,EAAYA,EAAU2B,EAAShC,MACf,oBAAZmC,QAA0BV,EAAOU,QAAQC,SAAS/B,GAAWyB,SAAQ,SAAU/B,GACnFsC,EAAQrC,EAAOD,EAAKM,EAAUN,GAAA,IAGtC,IAAIuC,EAAiBrC,OAAOsC,eAC5B,SAASF,EAAQtC,EAAKC,EAAMK,EAAkBM,GAC1C2B,EAAevC,EAAKC,EAAM6B,EAAOxB,GAAoB6B,EAAO7B,EAAkB,QAA0C,mBAAzBA,EAAiBmC,IAC5G,CAAEA,IAAKnC,EAAiBmC,IAAKC,IAAKpC,EAAiBoC,IAAKC,cAAA,GACxD,CAAEC,MAAOtC,EAAkBqC,cAAA,EAAoBE,UAAA,GAAkBjC,GAAA,CAEzE,SAASM,EAAOjB,GACZ,MAAO,CACH6C,KAAM,SAAU9C,GAGZ,OAFAC,EAAMM,UAAYL,OAAO6C,OAAO/C,EAAOO,WACvC+B,EAAQrC,EAAMM,UAAW,cAAeN,GACjC,CACH+C,OAAQpC,EAAMqC,KAAK,KAAMhD,EAAMM,WAAA,GAK/C,IAAI2C,EAA2BhD,OAAOiD,yBAMlCC,EAAS,GAAGjC,MAChB,SAASkC,EAAMrD,EAAMC,EAAOK,GACxB,OAAO8C,EAAO3C,KAAKT,EAAMC,EAAOK,EAAA,CAEpC,SAASgD,EAAStD,EAAUC,GACxB,OAAOA,EAAiBD,EAAA,CAE5B,SAASuD,EAAOvD,GACZ,IAAKA,EACD,MAAM,IAAIwD,MAAM,oBAExB,SAASC,EAAOzD,GACRqB,EAAQqC,aACRA,aAAa1D,GAEb2D,WAAW3D,EAAI,GAUvB,SAAS4D,EAAa5D,EAAKC,GACvB,GAAuB,iBAAZA,GAAwBkC,EAAOnC,EAAKC,GAC3C,OAAOD,EAAIC,GACf,IAAKA,EACD,OAAOD,EACX,GAAuB,iBAAZC,EAAsB,CAE7B,IADA,IAAIK,EAAK,GACAM,EAAI,EAAGG,EAAId,EAAQa,OAAQF,EAAIG,IAAKH,EAAG,CAC5C,IAAIM,EAAM0C,EAAa5D,EAAKC,EAAQW,IACpCN,EAAGuD,KAAK3C,EAAA,CAEZ,OAAOZ,CAAA,CAEX,IAAIwB,EAAS7B,EAAQ6D,QAAQ,KAC7B,IAAgB,IAAZhC,EAAe,CACf,IAAIS,EAAWvC,EAAIC,EAAQ8D,OAAO,EAAGjC,IACrC,OAAmB,MAAZS,OAAA,EAA+BqB,EAAarB,EAAUtC,EAAQ8D,OAAOjC,EAAS,KAI7F,SAASkC,EAAahE,EAAKC,EAASK,GAChC,GAAKN,QAAA,IAAOC,MAER,aAAcC,UAAUA,OAAO+D,SAASjE,IAE5C,GAAuB,iBAAZC,GAAwB,WAAYA,EAAS,CACpDsD,EAAwB,iBAAVjD,GAAsB,WAAYA,GAChD,IAAK,IAAIM,EAAI,EAAGG,EAAId,EAAQa,OAAQF,EAAIG,IAAKH,EACzCoD,EAAahE,EAAKC,EAAQW,GAAIN,EAAMM,GAAA,KAGvC,CACD,IAEQM,EACAY,EAHJS,EAAStC,EAAQ6D,QAAQ,MACb,IAAZvB,GACIrB,EAAiBjB,EAAQ8D,OAAO,EAAGxB,GAEd,MADrBT,EAAmB7B,EAAQ8D,OAAOxB,EAAS,aAEvCjC,EACIsB,EAAQ5B,KAASkE,MAAMC,SAASjD,IAChClB,EAAIoE,OAAOlD,EAAgB,UAEpBlB,EAAIkB,GAGflB,EAAIkB,GAAkBZ,EAK1B0D,EADIzB,GAFAA,EAAWvC,EAAIkB,KACDiB,EAAOnC,EAAKkB,GAEjBqB,EADGvC,EAAIkB,GAAkB,CAAC,EAChBY,EAAkBxB,SAAA,IAIzCA,EACIsB,EAAQ5B,KAASkE,MAAMC,SAASlE,IAChCD,EAAIoE,OAAOnE,EAAS,UAEbD,EAAIC,GAGfD,EAAIC,GAAWK,CAAA,EAY/B,SAAS+D,EAAarE,GAClB,IACSC,EADLK,EAAK,CAAC,EACV,IAASL,KAAKD,EACNmC,EAAOnC,EAAKC,KACZK,EAAGL,GAAKD,EAAIC,IAEpB,OAAOK,CAAA,CAEX,IAAIL,EAAS,GAAGmB,OAChB,SAASkD,EAAQtE,GACb,OAAOC,EAAOe,MAAM,GAAIhB,EAAA,CAE5B,IAAIA,EAAqB,iNACpBuE,MAAM,KAAKnD,OAAOkD,EAAQ,CAAC,EAAG,GAAI,GAAI,IAAIE,KAAI,SAAUvE,GAAO,MAAO,CAAC,MAAO,OAAQ,SAASuE,KAAI,SAAUxE,GAAK,OAAOA,EAAIC,EAAM,gBAAkBwE,QAAO,SAAUzE,GAAK,OAAOqB,EAAQrB,EAAA,IAC3L0E,EAAiB,IAAIC,IAAI3E,EAAmBwE,KAAI,SAAUxE,GAAK,OAAOqB,EAAQrB,EAAA,KAgB9E4E,EAAe,KACnB,SAASC,EAAU7E,GAIf,OAHA4E,EAAe,IAAIE,QACf9E,EAIR,SAASA,EAAeC,GACpB,IAAKA,GAAkB,iBAANA,EACb,OAAOA,EACX,IAAIK,EAAKsE,EAAanC,IAAIxC,GAC1B,GAAIK,EACA,OAAOA,EACX,GAAIsB,EAAQ3B,GAAI,CACZK,EAAK,GACLsE,EAAalC,IAAIzC,EAAGK,GACpB,IAAK,IAAIM,EAAI,EAAGG,EAAId,EAAEa,OAAQF,EAAIG,IAAKH,EACnCN,EAAGuD,KAAK7D,EAAeC,EAAEW,IAAA,MAG5B,GAAI8D,EAAeK,IAAI9E,EAAE+E,aAC1B1E,EAAKL,MAEJ,CACD,IAGSiB,EAHLY,EAAQG,EAAShC,GAGrB,IAASiB,KAFTZ,EAAKwB,IAAU5B,OAAOK,UAAY,CAAC,EAAIL,OAAO6C,OAAOjB,GACrD8C,EAAalC,IAAIzC,EAAGK,GACHL,EACTkC,EAAOlC,EAAGiB,KACVZ,EAAGY,GAAQlB,EAAeC,EAAEiB,IAAA,CAIxC,OAAOZ,CAAA,CA1BX,CAJ4BN,GACxB4E,EAAe,KACR5E,CAAA,CA8BX,IAAIiF,EAAW,CAAC,EAAEC,SAClB,SAASC,EAAYnF,GACjB,OAAOiF,EAASxE,KAAKT,GAAGmB,MAAM,GAAI,GAEtC,IAAIiE,EAAmC,oBAAXC,OACxBA,OAAOC,SACP,aACAC,EAA0C,iBAAnBH,EAA8B,SAAUpF,GAC/D,IAAIC,EACJ,OAAY,MAALD,IAAcC,EAAID,EAAEoF,KAAoBnF,EAAEe,MAAMhB,EAAA,EACvD,WAAc,OAAO,MACzB,SAASwF,EAAaxF,EAAGC,GAIrB,OAFS,IADLA,EAAID,EAAE8D,QAAQ7D,KAEdD,EAAEoE,OAAOnE,EAAG,GACJ,GAALA,CAAA,CAEX,IAAIwF,EAAgB,CAAC,EACrB,SAASC,EAAW1F,GAChB,IAAIC,EAAGK,EAAGM,EAAGG,EACb,GAAyB,IAArBF,UAAUC,OAAc,CACxB,GAAIc,EAAQ5B,GACR,OAAOA,EAAUmB,QACrB,GAAIF,OAASwE,GAAsC,iBAAdzF,EACjC,MAAO,CAACA,GACZ,GAAKe,EAAKwE,EAAcvF,GAAa,CAEjC,IADAM,EAAI,KACIM,EAAIG,EAAG4E,QAAYC,MACvBtF,EAAEuD,KAAKjD,EAAEgC,OACb,OAAOtC,CAAA,CAEX,GAAiB,MAAbN,EACA,MAAO,CAACA,GAEZ,GAAiB,iBADjBC,EAAID,EAAUc,QAOd,MAAO,CAACd,GAJJ,IADAM,EAAI,IAAID,MAAMJ,GACPA,KACHK,EAAEL,GAAKD,EAAUC,GACrB,OAAOK,CAAA,CAMf,IAFAL,EAAIY,UAAUC,OACdR,EAAI,IAAID,MAAMJ,GACPA,KACHK,EAAEL,GAAKY,UAAUZ,GACrB,OAAOK,CAAA,CAEX,IAAIuF,EAAoC,oBAAXR,OACvB,SAAUrF,GAAM,MAAkC,kBAA3BA,EAAGqF,OAAOS,YAAA,EACjC,WAAc,OAAO,GAoCvBC,EAlCkB,CAClB,SACA,OACA,aACA,gBACA,SACA,UACA,eACA,aACA,iBACA,kBACA,iBACA,cACA,WACA,iBACA,kBACA,gBAkB4B3E,OAhB5B4E,GAAmB,CACnB,UACA,aACA,OACA,sBACA,WACA,UACA,WACA,eACA,gBACA,QACA,UACA,gBACA,SACA,cAGAC,EAAe,CACfC,eAAgB,wDAChBC,eAAgB,2BAChBC,MAAO,sBACPC,oBAAqB,8CACrBC,WAAY,oEAEhB,SAASC,EAAWvG,EAAMC,GACtBgB,KAAKuF,KAAOxG,EACZiB,KAAKwF,QAAUxG,CAAA,CAKnB,SAASyG,EAAqB1G,EAAKC,GAC/B,OAAOD,EAAM,aAAeE,OAAOyB,KAAK1B,GACnCuE,KAAI,SAAUxE,GAAO,OAAOC,EAASD,GAAKkF,UAAA,IAC1CT,QAAO,SAAUzE,EAAGC,EAAGK,GAAK,OAAOA,EAAEwD,QAAQ9D,KAAOC,CAAA,IACpD0G,KAAK,MAEd,SAASC,EAAY5G,EAAKC,EAAUK,EAAcM,GAC9CK,KAAK4F,SAAW5G,EAChBgB,KAAK6F,WAAalG,EAClBK,KAAK8F,aAAezG,EACpBW,KAAKwF,QAAUC,EAAqB1G,EAAKC,EAAA,CAG7C,SAAS+G,EAAUhH,EAAKC,GACpBgB,KAAKuF,KAAO,YACZvF,KAAK4F,SAAW3G,OAAOyB,KAAK1B,GAAUuE,KAAI,SAAUxE,GAAO,OAAOC,EAASD,EAAA,IAC3EiB,KAAKgG,cAAgBhH,EACrBgB,KAAKwF,QAAUC,EAAqB1G,EAAKiB,KAAK4F,SAAA,CApBlD3F,EAAOqF,GAAYzD,KAAKU,OAAOR,OAAO,CAClCkC,SAAU,WAAc,OAAOjE,KAAKuF,KAAO,KAAOvF,KAAKwF,OAAA,IAc3DvF,EAAO0F,GAAa9D,KAAKyD,GAOzBrF,EAAO8F,GAAWlE,KAAKyD,GACvB,IAAIW,EAAWnB,EAAUoB,QAAO,SAAUnH,EAAKC,GAAQ,OAAQD,EAAIC,GAAQA,EAAO,QAASD,CAAA,GAAS,CAAC,GACjGoH,EAAgBb,EAChBc,EAAatB,EAAUoB,QAAO,SAAUnH,EAAKM,GAC7C,IAAIM,EAAWN,EAAO,QACtB,SAASL,EAAWD,EAAYC,GAC5BgB,KAAKuF,KAAO5F,EACPZ,EAI0B,iBAAfA,GACZiB,KAAKwF,QAAU,GAAGrF,OAAOpB,GAAYoB,OAAQnB,EAAa,MAAQA,EAAb,IACrDgB,KAAKqG,MAAQrH,GAAS,MAEK,iBAAfD,IACZiB,KAAKwF,QAAU,GAAGrF,OAAOpB,EAAWwG,KAAM,KAAKpF,OAAOpB,EAAWyG,SACjExF,KAAKqG,MAAQtH,IATbiB,KAAKwF,QAAUR,EAAa3F,IAASM,EACrCK,KAAKqG,MAAQ,MAarB,OAFApG,EAAOjB,GAAY6C,KAAKsE,GACxBpH,EAAIM,GAAQL,EACLD,CAAA,GACR,CAAC,GACJqH,EAAWE,OAASC,YACpBH,EAAWI,KAAOC,UAClBL,EAAWM,MAAQC,WACnB,IAAIC,EAAe7B,GAAiBmB,QAAO,SAAUnH,EAAKC,GAEtD,OADAD,EAAIC,EAAO,SAAWoH,EAAWpH,GAC1BD,CAAA,GACR,CAAC,GAYA8H,EAAqB/B,EAAUoB,QAAO,SAAUnH,EAAKC,GAGrD,OAFmD,IAA/C,CAAC,SAAU,OAAQ,SAAS6D,QAAQ7D,KACpCD,EAAIC,EAAO,SAAWoH,EAAWpH,IAC9BD,CAAA,GACR,CAAC,GAKJ,SAAS+H,IAAA,CACT,SAASC,EAAOhI,GAAO,OAAOA,CAAA,CAC9B,SAASiI,EAAkBhI,EAAIK,GAC3B,OAAU,MAANL,GAAcA,IAAO+H,EACd1H,EACJ,SAAUN,GACb,OAAOM,EAAGL,EAAGD,GAAA,EAGrB,SAASkI,EAASlI,EAAKC,GACnB,OAAO,WACHD,EAAIgB,MAAMC,KAAMJ,WAChBZ,EAAIe,MAAMC,KAAMJ,UAAA,EAGxB,SAASsH,EAAkBpH,EAAIG,GAC3B,OAAIH,IAAOgH,EACA7G,EACJ,WACH,IAAIlB,EAAMe,EAAGC,MAAMC,KAAMJ,gBAAA,IACrBb,IACAa,UAAU,GAAKb,GACnB,IAAIC,EAAYgB,KAAKmH,UACrB9H,EAAUW,KAAKoH,QACfpH,KAAKmH,UAAY,KACjBnH,KAAKoH,QAAU,KACf,IAAIzH,EAAOM,EAAGF,MAAMC,KAAMJ,WAK1B,OAJIZ,IACAgB,KAAKmH,UAAYnH,KAAKmH,UAAYF,EAASjI,EAAWgB,KAAKmH,WAAanI,GACxEK,IACAW,KAAKoH,QAAUpH,KAAKoH,QAAUH,EAAS5H,EAASW,KAAKoH,SAAW/H,QAAA,IAC7DM,EAAqBA,EAAOZ,CAAA,EAG3C,SAASsI,GAAkBhI,EAAIM,GAC3B,OAAIN,IAAOyH,EACAnH,EACJ,WACHN,EAAGU,MAAMC,KAAMJ,WACf,IAAIb,EAAYiB,KAAKmH,UACrBnI,EAAUgB,KAAKoH,QACfpH,KAAKmH,UAAYnH,KAAKoH,QAAU,KAChCzH,EAAGI,MAAMC,KAAMJ,WACXb,IACAiB,KAAKmH,UAAYnH,KAAKmH,UAAYF,EAASlI,EAAWiB,KAAKmH,WAAapI,GACxEC,IACAgB,KAAKoH,QAAUpH,KAAKoH,QAAUH,EAASjI,EAASgB,KAAKoH,SAAWpI,EAAA,EAG5E,SAASsI,GAAkBxH,EAAIG,GAC3B,OAAIH,IAAOgH,EACA7G,EACJ,SAAUlB,GACb,IAAIC,EAAMc,EAAGC,MAAMC,KAAMJ,WACzBiB,EAAO9B,EAAeC,GACtB,IAAIK,EAAYW,KAAKmH,UACrBxH,EAAUK,KAAKoH,QAQf,OAPApH,KAAKmH,UAAY,KACjBnH,KAAKoH,QAAU,KACXrI,EAAOkB,EAAGF,MAAMC,KAAMJ,WACtBP,IACAW,KAAKmH,UAAYnH,KAAKmH,UAAYF,EAAS5H,EAAWW,KAAKmH,WAAa9H,GACxEM,IACAK,KAAKoH,QAAUpH,KAAKoH,QAAUH,EAAStH,EAASK,KAAKoH,SAAWzH,QAAA,IAC7DX,OAAA,IACFD,OAAA,EAAiCA,EACjC8B,EAAO7B,EAAKD,EAAA,EAGzB,SAASwI,GAA2BxI,EAAIC,GACpC,OAAID,IAAO+H,EACA9H,EACJ,WACH,WAAIA,EAAGe,MAAMC,KAAMJ,YAEZb,EAAGgB,MAAMC,KAAMJ,UAAA,EAG9B,SAAS4H,GAAgB1H,EAAIG,GACzB,OAAIH,IAAOgH,EACA7G,EACJ,WACH,IAAIlB,EAAMe,EAAGC,MAAMC,KAAMJ,WACzB,GAAIb,GAA2B,mBAAbA,EAAI0I,KAAqB,CAEvC,IADA,IAAIzI,EAAOgB,KAAMX,EAAIO,UAAUC,OAAQF,EAAO,IAAIP,MAAMC,GACjDA,KACHM,EAAKN,GAAKO,UAAUP,GACxB,OAAON,EAAI0I,MAAK,WACZ,OAAOxH,EAAGF,MAAMf,EAAMW,EAAA,IAG9B,OAAOM,EAAGF,MAAMC,KAAMJ,UAAA,EA/F9BiH,EAAmBa,YAAc/B,EACjCkB,EAAmBc,WAAarC,EAChCuB,EAAmBe,UAAY7B,EAiG/B,IAAI8B,GAA4B,oBAAbC,UACf,6CAA6CC,KAAKD,SAASE,MAC/D,SAASC,GAASlJ,GACd8I,GAAQ9I,CAAA,CAGZ,IAAImJ,GAAW,CAAC,EACZC,GAAkB,IAYZpD,IAZiBhG,EAA0B,oBAAZgC,QACrC,GACA,WACI,IAAIhC,EAAUgC,QAAQqH,UACtB,GAAsB,oBAAXC,SAA2BA,OAAOC,OACzC,MAAO,CAACvJ,EAASiC,EAASjC,GAAUA,GACxC,IAAIC,EAAUqJ,OAAOC,OAAOC,OAAO,UAAW,IAAIC,WAAW,CAAC,KAC9D,MAAO,CACHxJ,EACAgC,EAAShC,GACTD,EAAA,CARR,GAU8BA,EAAK,IACnC0J,IADuC3D,EAAqB/F,EAAK,GAAIA,EAAwBA,EAAK,GAAI+F,EAAoBA,GAAsBA,EAAmB2C,KACnJ1C,IAAyBA,GAAsBhB,aAC/D2E,KAAuB3J,EAIvB4J,GAAO,SAAU5J,EAAUC,GAC3B4J,GAAehG,KAAK,CAAC7D,EAAUC,IAC3B6J,KAJJC,eAAeC,IAMXF,IAAA,EAAuB,EAG3BG,IAAA,EACJH,IAAA,EACAI,GAAkB,GAClBC,GAAkB,GAClBC,GAAkBpC,EACdqC,GAAY,CACZC,GAAI,SACJ7I,QAAA,EACA8I,IAAK,EACLC,WAAY,GACZC,YAAa1C,EACb2C,KAAA,EACAC,IAAK,CAAC,EACNC,SAAU7C,GAEV8C,GAAMR,GACNR,GAAiB,GACjBiB,GAAoB,EACpBC,GAAiB,GACrB,SAASC,GAAahL,GAClB,GAAoB,iBAATiB,KACP,MAAM,IAAIyG,UAAU,wCACxBzG,KAAKgK,WAAa,GAClBhK,KAAKiK,MAAA,EACL,IAAIjL,EAAOgB,KAAKkK,KAAON,GACvB,GAAkB,mBAAP7K,EAAmB,CAC1B,GAAIA,IAAOmJ,GACP,MAAM,IAAIzB,UAAU,kBAKxB,OAJAzG,KAAKmK,OAASvK,UAAU,GACxBI,KAAKoK,OAASxK,UAAU,aACpBI,KAAKmK,QACLE,GAAgBrK,KAAMA,KAAKoK,QAAA,CAGnCpK,KAAKmK,OAAS,KACdnK,KAAKoK,OAAS,OACZpL,EAAIsK,IAsKV,SAAStK,EAAmBW,EAASZ,GACjC,IACIA,GAAG,SAAUM,GACT,GAAuB,OAAnBM,EAAQwK,OAAZ,CAEA,GAAI9K,IAAUM,EACV,MAAM,IAAI8G,UAAU,6CACxB,IAAI1H,EAAoBY,EAAQsK,MAAQK,KACpCjL,GAA+B,mBAAfA,EAAMoI,KACtBzI,EAAmBW,GAAS,SAAUZ,EAASC,GAC3CK,aAAiB0K,GACb1K,EAAMkL,MAAMxL,EAASC,GACrBK,EAAMoI,KAAK1I,EAASC,EAAA,KAI5BW,EAAQwK,QAAA,EACRxK,EAAQyK,OAAS/K,EACjBmL,GAAsB7K,IAEtBZ,GACA0L,IAAA,IACLJ,GAAgBrI,KAAK,KAAMrC,GAAA,CAElC,MAAOZ,GACHsL,GAAgB1K,EAASZ,EAAA,EAzBjC,CArKuBiB,KAAMjB,EAAA,CAE7B,IAAI2L,GAAW,CACXlJ,IAAK,WACD,IAAIF,EAAMsI,GAAK5K,EAAc2L,GAC7B,SAAS5L,EAAKM,EAAaM,GACvB,IAAIG,EAAQE,KACRC,GAAiBqB,EAAId,SAAWc,IAAQsI,IAAO5K,IAAgB2L,IAC/D9J,EAAUZ,IAAkB2K,KAC5B7L,EAAK,IAAIgL,IAAa,SAAUhL,EAASC,GACzC6L,GAAoB/K,EAAO,IAAIgL,GAASC,GAA0B1L,EAAaiC,EAAKrB,EAAeY,GAAUkK,GAA0BpL,EAAY2B,EAAKrB,EAAeY,GAAU9B,EAASC,EAAQsC,GAAA,IAItM,OAFItB,KAAKgL,eACLjM,EAAGiM,aAAehL,KAAKgL,cACpBjM,CAAA,CAGX,OADAA,EAAKO,UAAY4I,GACVnJ,CAAA,EAEX0C,IAAK,SAAU1C,GACXsC,EAAQrB,KAAM,OAAQjB,GAASA,EAAMO,YAAc4I,GAC/CwC,GACA,CACIlJ,IAAK,WACD,OAAOzC,CAAA,EAEX0C,IAAKiJ,GAASjJ,KAAA,GAuC9B,SAASqJ,GAAS/L,EAAaC,EAAYK,EAASM,EAAQG,GACxDE,KAAKiL,YAAqC,mBAAhBlM,EAA6BA,EAAc,KACrEiB,KAAKkL,WAAmC,mBAAflM,EAA4BA,EAAa,KAClEgB,KAAKoI,QAAU/I,EACfW,KAAKmL,OAASxL,EACdK,KAAKoL,IAAMtL,CAAA,CA2Hf,SAASuK,GAAgBtL,EAASC,GAE9B,IAEIK,EA4G2BM,EA/G/BuJ,GAAgBtG,KAAK5D,GACE,OAAnBD,EAAQoL,SAER9K,EAAoBN,EAAQkL,MAAQK,KACxCtL,EAASmK,GAAgBnK,GACzBD,EAAQoL,QAAA,EACRpL,EAAQqL,OAASpL,EAyGcW,EAxGLZ,EAyGrBkK,GAAgBoC,MAAK,SAAUtM,GAAK,OAAOA,EAAEqL,SAAWzK,EAAQyK,MAAA,KACjEnB,GAAgBrG,KAAKjD,GAzGzB6K,GAAsBzL,GAClBM,GACAoL,KAAA,CAER,SAASD,GAAsBzL,GAC3B,IAAIC,EAAYD,EAAQiL,WACxBjL,EAAQiL,WAAa,GACrB,IAAK,IAAI3K,EAAI,EAAGM,EAAMX,EAAUa,OAAQR,EAAIM,IAAON,EAC/CwL,GAAoB9L,EAASC,EAAUK,IAE3C,IAAIS,EAAMf,EAAQmL,OAChBpK,EAAIwJ,KAAOxJ,EAAI6J,WACS,IAAtBE,OACEA,GACFlB,IAAK,WAC2B,KAAtBkB,IACFyB,IAAA,GACL,KAGX,SAAST,GAAoB9L,EAASC,GAClC,GAAuB,OAAnBD,EAAQoL,OAAZ,CAIA,IAAI9K,EAAKN,EAAQoL,OAASnL,EAASiM,YAAcjM,EAASkM,WAC1D,GAAW,OAAP7L,EACA,OAAQN,EAAQoL,OAASnL,EAASoJ,QAAUpJ,EAASmM,QAAQpM,EAAQqL,UAEvEpL,EAASoM,IAAI9B,MACbO,GACFlB,GAAK4C,GAAc,CAAClM,EAAIN,EAASC,GAAA,MAT7BD,EAAQiL,WAAWpH,KAAK5D,EAAA,CAWhC,SAASuM,GAAaxM,EAAIC,EAASK,GAC/B,IACI,IAAIM,EAAKG,EAAQd,EAAQoL,QACpBpL,EAAQmL,QAAUjB,GAAgBrJ,SACnCqJ,GAAkB,IACtBvJ,EAAMkI,IAAS7I,EAAQgM,aAAehM,EAAQgM,aAAaQ,KAAI,WAAc,OAAOzM,EAAGe,EAAA,IAAaf,EAAGe,GAClGd,EAAQmL,SAA8C,IAApCjB,GAAgBrG,QAAQ/C,IAoEvD,SAA4Bf,GAExB,IADA,IAAIC,EAAIiK,GAAgBpJ,OACjBb,GACH,GAAIiK,KAAkBjK,GAAGoL,SAAWrL,EAAQqL,OAExC,OADAnB,GAAgB9F,OAAOnE,EAAG,GAJtC,CAnE+BA,GAEvBK,EAAS+I,QAAQzI,EAAA,CAErB,MAAOZ,GACHM,EAAS8L,OAAOpM,EAAA,CAEpB,QACgC,KAAtB8K,IACFyB,OACFjM,EAAS+L,IAAI9B,KAAOjK,EAAS+L,IAAIzB,UAAA,EAG3C,SAASZ,KACL0C,GAAOrC,IAAW,WACdkB,MAAyBG,IAAA,IAGjC,SAASH,KACL,IAAIvL,EAAciK,GAGlB,OADAH,GADAG,IAAA,EAEOjK,CAAA,CAEX,SAAS0L,KACL,IAAI1L,EAAWC,EAAGK,EAClB,GACI,KAA+B,EAAxBuJ,GAAe/I,QAIlB,IAHAd,EAAY6J,GACZA,GAAiB,GACjBvJ,EAAIN,EAAUc,OACTb,EAAI,EAAGA,EAAIK,IAAKL,EAAG,CACpB,IAAIW,EAAOZ,EAAUC,GACrBW,EAAK,GAAGI,MAAM,KAAMJ,EAAK,WAGJ,EAAxBiJ,GAAe/I,QAExBgJ,GADAG,IAAA,CAAqB,CAGzB,SAASsC,KACL,IAAIvM,EAAgBkK,GACpBA,GAAkB,GAClBlK,EAAc+B,SAAQ,SAAU/B,GAC5BA,EAAEmL,KAAKV,YAAYhK,KAAK,KAAMT,EAAEqL,OAAQrL,EAAA,IAI5C,IAFA,IAAIC,EAAa8K,GAAe5J,MAAM,GAClCb,EAAIL,EAAWa,OACZR,GACHL,IAAaK,IAAA,CA0BrB,SAASqM,GAAc3M,GACnB,OAAO,IAAIgL,GAAa7B,IAAA,EAAiBnJ,EAAA,CAE7C,SAAS4M,GAAKtM,EAAIM,GACd,IAAIG,EAAM8J,GACV,OAAO,WACH,IAAI7K,EAAcuL,KAAuBtL,EAAa4K,GACtD,IAEI,OADAgC,GAAa9L,GAAA,GACNT,EAAGU,MAAMC,KAAMJ,UAAA,CAE1B,MAAOb,GACHY,GAAgBA,EAAaZ,EAAA,CAEjC,QACI6M,GAAa5M,GAAA,GACTD,GACA0L,IAAA,GAhThB9K,EAAMoK,GAAazK,UAAW,CAC1BmI,KAAMiD,GACNH,MAAO,SAAUxL,EAAaC,GAC1B6L,GAAoB7K,KAAM,IAAI8K,GAAS,KAAM,KAAM/L,EAAaC,EAAY4K,IAAA,EAEhFiC,MAAO,SAAU9M,GACb,GAAyB,IAArBa,UAAUC,OACV,OAAOG,KAAKyH,KAAK,KAAM1I,GAC3B,IAAIC,EAHSD,EAGYM,EAAUO,UAAU,GAC7C,MAAuB,mBAATZ,EAAsBgB,KAAKyH,KAAK,MAAM,SAAU1I,GAC1D,OAAOA,aAAeC,EAAOK,EAAeqM,IAAP3M,EAAA,IAEnCiB,KAAKyH,KAAK,MAAM,SAAU1I,GACxB,OAAOA,GAAOA,EAAIwG,OAASvG,EAAOK,EAAeqM,IAAP3M,EAAA,KAGtD+M,QAAS,SAAU9M,GACf,OAAOgB,KAAKyH,MAAK,SAAU1I,GACvB,OAAOgL,GAAa3B,QAAQpJ,KAAayI,MAAK,WAAc,OAAO1I,CAAA,OACpE,SAAUA,GACT,OAAOgL,GAAa3B,QAAQpJ,KAAayI,MAAK,WAAc,OAAOiE,GAAc3M,EAAA,QAGzFgN,QAAS,SAAUpM,EAAIG,GACnB,IAAIG,EAAQD,KACZ,OAAOL,EAAK,IACR,IAAIoK,IAAa,SAAUhL,EAASC,GAChC,IAAIK,EAASqD,YAAW,WAAc,OAAO1D,EAAO,IAAIoH,EAAW4F,QAAQlM,GAAA,GAAUH,GACrFM,EAAMwH,KAAK1I,EAASC,GAAQ8M,QAAQG,aAAajK,KAAK,KAAM3C,GAAA,IAC3DW,IAAA,IAGK,oBAAXoE,QAA0BA,OAAOS,aACxCxD,EAAQ0I,GAAazK,UAAW8E,OAAOS,YAAa,iBACxDuE,GAAUM,IAAMwC,KAQhBvM,EAAMoK,GAAc,CAChBoC,IAAK,WACD,IAAIlM,EAASwE,EAAW1E,MAAM,KAAMH,WAC/B2D,IAAI6I,IACT,OAAO,IAAIrC,IAAa,SAAU1K,EAASM,GACjB,IAAlBM,EAAOJ,QACPR,EAAQ,IACZ,IAAIS,EAAYG,EAAOJ,OACvBI,EAAOa,SAAQ,SAAU/B,EAAGC,GAAK,OAAO+K,GAAa3B,QAAQrJ,GAAG0I,MAAK,SAAU1I,GAC3EkB,EAAOjB,GAAKD,IACLe,GACHT,EAAQY,EAAA,GACbN,EAAA,QAGXyI,QAAS,SAAU/I,GACf,OAAIA,aAAiB0K,GACV1K,EACPA,GAA+B,mBAAfA,EAAMoI,KACf,IAAIsC,IAAa,SAAUhL,EAASC,GACvCK,EAAMoI,KAAK1I,EAASC,EAAA,IAEnB,IAAI+K,GAAa7B,IAAA,EAAgB7I,EAAA,EAG9C8L,OAAQO,GACRW,KAAM,WACF,IAAItN,EAAS0F,EAAW1E,MAAM,KAAMH,WAAW2D,IAAI6I,IACnD,OAAO,IAAIrC,IAAa,SAAU/K,EAASK,GACvCN,EAAOwE,KAAI,SAAUxE,GAAS,OAAOgL,GAAa3B,QAAQrJ,GAAO0I,KAAKzI,EAASK,EAAA,QAGvFiN,IAAK,CACD9K,IAAK,WAAc,OAAOoI,EAAA,EAC1BnI,IAAK,SAAU1C,GAAS,OAAO6K,GAAM7K,CAAA,GAEzCwN,YAAa,CAAE/K,IAAK,WAAc,OAAOmJ,EAAA,GACzC6B,OAAQC,GACRC,OAAQjB,GACRkB,UAAW,CACPnL,IAAK,WAAc,OAAOmH,EAAA,EAC1BlH,IAAK,SAAU1C,GAAS4J,GAAO5J,CAAA,GAEnC6N,gBAAiB,CACbpL,IAAK,WAAc,OAAO2H,EAAA,EAC1B1H,IAAK,SAAU1C,GAASoK,GAAkBpK,CAAA,GAE9C8N,OAAQ,SAAU/M,EAAIT,GAClB,OAAO,IAAI0K,IAAa,SAAUhL,EAASC,GACvC,OAAOyN,IAAS,SAAUpN,EAASM,GAC/B,IAAIZ,EAAM6K,GACV7K,EAAIwK,WAAa,GACjBxK,EAAIyK,YAAc7J,EAClBZ,EAAI4K,SAAW1C,GAAS,WACpB,IAuK8BjI,EAvK1BD,EAAQiB,KAuKkBhB,EAtKW,WACT,IAA5BD,EAAMwK,WAAW1J,OAAeR,IAAYM,EAAOZ,EAAMwK,WAAW,KA0KxFO,GAAelH,MAJf,SAAS7D,IACLC,IACA8K,GAAe3G,OAAO2G,GAAejH,QAAQ9D,GAAY,QAG3D8K,GACFlB,IAAK,WAC2B,KAAtBkB,IACFyB,IAAA,GACL,MA7KYvM,EAAI4K,UACP7J,GAAA,GACDT,EAAWN,EAASC,EAAA,OAI/ByJ,KACIA,GAAcqE,YACdzL,EAAQ0I,GAAc,cAAc,WAChC,IAAIhL,EAAmB0F,EAAW1E,MAAM,KAAMH,WAAW2D,IAAI6I,IAC7D,OAAO,IAAIrC,IAAa,SAAU1K,GACE,IAA5BN,EAAiBc,QACjBR,EAAQ,IACZ,IAAIM,EAAYZ,EAAiBc,OAC7BC,EAAU,IAAIV,MAAMO,GACxBZ,EAAiB+B,SAAQ,SAAU/B,EAAGC,GAAK,OAAO+K,GAAa3B,QAAQrJ,GAAG0I,MAAK,SAAU1I,GAAS,OAAOe,EAAQd,GAAK,CAAE+N,OAAQ,YAAapL,MAAO5C,EAAA,IAAY,SAAUA,GAAU,OAAOe,EAAQd,GAAK,CAAE+N,OAAQ,WAAYC,OAAQjO,EAAA,IACjO0I,MAAK,WAAc,QAAS9H,GAAaN,EAAQS,EAAA,aAG9D2I,GAAcwE,KAAiC,oBAAnBC,gBAC5B7L,EAAQ0I,GAAc,OAAO,WACzB,IAAIhL,EAAmB0F,EAAW1E,MAAM,KAAMH,WAAW2D,IAAI6I,IAC7D,OAAO,IAAIrC,IAAa,SAAU1K,EAASM,GACP,IAA5BZ,EAAiBc,QACjBF,EAAO,IAAIuN,eAAe,KAC9B,IAAIpN,EAAYf,EAAiBc,OAC7BI,EAAW,IAAIb,MAAMU,GACzBf,EAAiB+B,SAAQ,SAAU/B,EAAGC,GAAK,OAAO+K,GAAa3B,QAAQrJ,GAAG0I,MAAK,SAAU1I,GAAS,OAAOM,EAAQN,EAAA,IAAW,SAAUA,GAClIkB,EAASjB,GAAKD,IACPe,GACHH,EAAO,IAAIuN,eAAejN,GAAA,cAkLlD,IAAIkN,GAAO,CAAEC,OAAQ,EAAGC,OAAQ,EAAGhE,GAAI,GACnCiE,GAAc,EACdC,GAAY,GACZC,GAAa,EACb7C,GAAc,EACd8C,GAAkB,EACtB,SAAShB,GAAS1N,EAAIC,EAAOK,EAAIM,GAC7B,IAAIG,EAAS8J,GAAK3J,EAAMhB,OAAO6C,OAAOhC,GAyBtC,OAxBAG,EAAIyN,OAAS5N,EACbG,EAAIqJ,IAAM,EACVrJ,EAAIO,QAAA,EACJP,EAAIoJ,KAAOoE,GACXrE,GAAUM,IACVzJ,EAAIyJ,IAAMhB,GAAqB,CAC3B3H,QAASgJ,GACT4D,YAAa,CAAEhM,MAAOoI,GAAcrI,cAAA,EAAoBE,UAAA,GACxDuK,IAAKpC,GAAaoC,IAClBE,KAAMtC,GAAasC,KACnBS,WAAY/C,GAAa+C,WACzBG,IAAKlD,GAAakD,IAClB7E,QAAS2B,GAAa3B,QACtB+C,OAAQpB,GAAaoB,QACrB,CAAC,EACDnM,GACA6B,EAAOZ,EAAKjB,KACdc,EAAOwJ,IACTrJ,EAAI0J,SAAW,aACT3J,KAAK0N,OAAOpE,KAAOtJ,KAAK0N,OAAO/D,UAAA,EAEjChK,EAAK8L,GAAOxL,EAAKlB,EAAIM,EAAIM,GACb,IAAZM,EAAIqJ,KACJrJ,EAAI0J,WACDhK,CAAA,CAEX,SAASiO,KAKL,OAJKT,GAAK9D,KACN8D,GAAK9D,KAAOiE,MACdH,GAAKC,OACPD,GAAKE,QAAUlF,GACRgF,GAAK9D,EAAA,CAEhB,SAASuB,KACL,QAAKuC,GAAKC,SAEY,KAAhBD,GAAKC,SACPD,GAAK9D,GAAK,GACd8D,GAAKE,OAASF,GAAKC,OAASjF,IAAA,EACrB,CAKX,SAASiE,GAAyBrN,GAC9B,OAAIoO,GAAKE,QAAUtO,GAAmBA,EAAgBgF,cAAgB0E,IAClEmF,KACO7O,EAAgB0I,MAAK,SAAU1I,GAElC,OADA6L,KACO7L,CAAA,IACR,SAAUA,GAET,OADA6L,KACOiD,GAAU9O,EAAA,KAGlBA,CAAA,CAUX,SAAS+O,KACL,IAAI/O,EAAOwO,GAAUA,GAAU1N,OAAS,GACxC0N,GAAUQ,MACVnC,GAAa7M,GAAA,EAAM,CAEvB,SAAS6M,GAAa7M,EAAYC,GAC9B,IAUQK,EAVJM,EAAciK,IACd5K,GAAgBmO,GAAKE,QAAYG,MAAgBzO,IAAe6K,IAAO4D,MAAkBA,IAAczO,IAAe6K,KACtHd,eAAe9J,EAhBvB,SAAuBD,KACjB4L,GACGwC,GAAKE,QAA4B,KAAhBF,GAAKE,SACvBF,GAAKE,OAASF,GAAKC,OAASD,GAAK9D,GAAK,GAE1CkE,GAAU3K,KAAKgH,IACfgC,GAAa7M,GAAA,EAAY,EAUwBiD,KAAK,KAAMjD,GAAc+O,IAEtE/O,IAAe6K,KAEnBA,GAAM7K,EACFY,IAAgByJ,KAChBA,GAAUM,IAAMwC,MAChBxD,KACIrJ,EAAgB+J,GAAUM,IAAI3I,QAC9B/B,EAAYD,EAAW2K,KACvB/J,EAAYa,QAAUzB,EAAWyB,UACjCvB,OAAOsC,eAAenB,EAAS,UAAWpB,EAAU2O,aACpDtO,EAAc8M,IAAMnN,EAAUmN,IAC9B9M,EAAcgN,KAAOrN,EAAUqN,KAC/BhN,EAAc+I,QAAUpJ,EAAUoJ,QAClC/I,EAAc8L,OAASnM,EAAUmM,OAC7BnM,EAAU8N,aACVzN,EAAcyN,WAAa9N,EAAU8N,YACrC9N,EAAUiO,MACV5N,EAAc4N,IAAMjO,EAAUiO,OAAA,CAI9C,SAASf,KACL,IAAInN,EAAgBqB,EAAQW,QAC5B,OAAO2H,GAAqB,CACxB3H,QAAShC,EACT4O,YAAa1O,OAAOiD,yBAAyB9B,EAAS,WACtD+L,IAAKpN,EAAcoN,IACnBE,KAAMtN,EAAcsN,KACpBS,WAAY/N,EAAc+N,WAC1BG,IAAKlO,EAAckO,IACnB7E,QAASrJ,EAAcqJ,QACvB+C,OAAQpM,EAAcoM,QACtB,CAAC,CAAD,CAER,SAASM,GAAO1M,EAAKC,EAAIK,EAAIM,EAAIG,GAC7B,IAAIG,EAAa2J,GACjB,IAEI,OADAgC,GAAa7M,GAAA,GACNC,EAAGK,EAAIM,EAAIG,EAAA,CAEtB,QACI8L,GAAa3L,GAAA,EAAY,EAGjC,SAAS8K,GAA0B/L,EAAIK,EAAMM,EAAeG,GACxD,MAAqB,mBAAPd,EAAoBA,EAAK,WACnC,IAAID,EAAY6K,GACZjK,GACAiO,KACJhC,GAAavM,GAAA,GACb,IACI,OAAOL,EAAGe,MAAMC,KAAMJ,UAAA,CAE1B,QACIgM,GAAa7M,GAAA,GACTe,GACAgJ,eAAe8B,GAAA,GAI/B,SAASoD,GAAoBjP,GACrBgC,UAAY0H,IAAiC,IAAhB0E,GAAKE,OACf,IAAfG,GACAzO,IAGAkP,uBAAuBlP,GAI3B2D,WAAW3D,EAAI,IAxGoC,KAAtD,GAAK+F,GAAmBjC,QAAQ,mBACjC+K,GAA0BhD,GAA0B9D,GA0GxD,IAAI+G,GAAY9D,GAAaoB,OA6CzB+C,GAAYC,OAAOC,aAAa,OAEhCC,GAAuB,oGACvBC,GAAkB,mBAClBC,GAAc,GACdC,GAAa,YACbC,GAAW,WACXC,GAAY,YAEhB,SAASC,GAAQ5P,EAASC,GACtB,OAAOD,EACHC,EACI,WAAc,OAAOD,EAAQgB,MAAMC,KAAMJ,YAAcZ,EAAQe,MAAMC,KAAMJ,UAAA,EAC3Eb,EACJC,CAAA,CAGR,IAAI4P,GAAW,CACXC,KAAM,EACNC,OAAA,IACAC,WAAA,EACAC,MAAO,CAAC,IACRC,WAAA,GAGJ,SAASC,GAA8BlQ,GACnC,MAA0B,iBAAZA,GAAyB,KAAK+I,KAAK/I,GAQ3C,SAAUD,GAAO,OAAOA,CAAA,EAPxB,SAAUA,GAKR,YAAO,IAJHA,EAAIC,IAA2BA,KAAWD,UAC1CA,EAAM6E,EAAU7E,IACLC,GAERD,CAAA,EAKnB,SAASoQ,KACL,MAAM/I,EAAWI,MAAA,CAGrB,SAAS4I,GAAIrQ,EAAGC,GACZ,IACI,IAAIK,EAAKgQ,GAAKtQ,GACVY,EAAK0P,GAAKrQ,GACd,GAAIK,IAAOM,EACP,MAAW,UAAPN,EACO,EACA,UAAPM,GACQ,EACD,WAAPN,EACO,EACA,WAAPM,GACQ,EACD,WAAPN,EACO,EACA,WAAPM,GACQ,EACD,SAAPN,EACO,EACA,SAAPM,EACO2P,KACH,EAEZ,OAAQjQ,GACJ,IAAK,SACL,IAAK,OACL,IAAK,SACD,OAAWL,EAAJD,EAAQ,EAAIA,EAAIC,GAAK,EAAI,EACpC,IAAK,SACD,OAoBhB,SAA4BD,EAAGC,GAI3B,IAHA,IAAIK,EAAKN,EAAEc,OACPF,EAAKX,EAAEa,OACPC,EAAIT,EAAKM,EAAKN,EAAKM,EACdM,EAAI,EAAGA,EAAIH,IAAKG,EACrB,GAAIlB,EAAEkB,KAAOjB,EAAEiB,GACX,OAAOlB,EAAEkB,GAAKjB,EAAEiB,IAAM,EAAI,EAElC,OAAOZ,IAAOM,EAAK,EAAIN,EAAKM,GAAM,EAAI,EAR1C,CApB0C4P,GAAcxQ,GAAIwQ,GAAcvQ,IAE9D,IAAK,QACD,OAMhB,SAAuBD,EAAGC,GAItB,IAHA,IAAIK,EAAKN,EAAEc,OACPF,EAAKX,EAAEa,OACPC,EAAIT,EAAKM,EAAKN,EAAKM,EACdM,EAAI,EAAGA,EAAIH,IAAKG,EAAG,CACxB,IAAIY,EAAMuO,GAAIrQ,EAAEkB,GAAIjB,EAAEiB,IACtB,GAAY,IAARY,EACA,OAAOA,CAAA,CAEf,OAAOxB,IAAOM,EAAK,EAAIN,EAAKM,GAAM,EAAI,EAT1C,CANqCZ,EAAGC,GAAA,CAGpC,MAAOD,GAAA,CACP,OAAOuQ,GAAA,CAuBX,SAASD,GAAKtQ,GACV,IAAIC,SAAWD,EACf,MAAU,UAANC,EACOA,EACPwQ,YAAYC,OAAO1Q,IAGN,iBADbA,EAAQmF,EAAYnF,IADb,SAEiCA,CAAA,CAEhD,SAASwQ,GAAcxQ,GACnB,OAAIA,aAAayJ,WACNzJ,EACPyQ,YAAYC,OAAO1Q,GACZ,IAAIyJ,WAAWzJ,EAAE2Q,OAAQ3Q,EAAE4Q,WAAY5Q,EAAE6Q,YAC7C,IAAIpH,WAAWzJ,EAAA,CAG1B,IAAI8Q,IAGAC,GAAMxQ,UAAUyQ,OAAS,SAAUhR,EAAMY,EAAIX,GACzC,IAAIK,EAAQW,KAAKgQ,KAAOpG,GAAIqG,MACxBnQ,EAAYE,KAAKuF,KACjBtF,EAAO4H,IAA4B,oBAAZqI,SAA2BA,QAAQC,YAAcD,QAAQC,WAAW,UAAUhQ,OAAgB,aAATpB,EAAsB,OAAS,QAAS,KAAKoB,OAAOH,KAAKuF,OACzK,SAAS1E,EAAwB9B,EAASC,EAAQK,GAC9C,IAAKA,EAAM+Q,OAAOtQ,GACd,MAAM,IAAIsG,EAAWiK,SAAS,SAAWvQ,EAAY,4BACzD,OAAOH,EAAGN,EAAMiR,SAAUjR,EAAA,CAE9B,IAAIiC,EAAcgJ,KAClB,IACI,IAAIxL,EAAIO,GAASA,EAAMkR,GAAGC,SAAWxQ,KAAKuQ,GAAGC,OACzCnR,IAAUuK,GAAIqG,MACV5Q,EAAMoR,SAAS1R,EAAM8B,EAAyB7B,GAC9CyN,IAAS,WAAc,OAAOpN,EAAMoR,SAAS1R,EAAM8B,EAAyB7B,EAAA,GAAiB,CAAEiR,MAAO5Q,EAAOqR,UAAW9G,GAAI8G,WAAa9G,KAjL7J,SAAS5K,EAAgBK,EAAIM,EAAMG,EAAYG,GAC3C,GAAKZ,EAAGsR,QAAWtR,EAAG8K,OAAOyG,cAAkBhH,GAAIiH,YAAexR,EAAGyR,MAWhE,CACD,IAAIjQ,EAAQxB,EAAG0R,mBAAmBpR,EAAMG,EAAYT,EAAG2R,WACvD,IACInQ,EAAMiB,SACNzC,EAAG8K,OAAO8G,eAAiB,EAE/B,MAAOlS,GACH,OAAIA,EAAGwG,OAASU,EAASiL,cAAgB7R,EAAG8R,UAAyC,IAA3B9R,EAAG8K,OAAO8G,gBAChEf,QAAQkB,KAAK,4BACb/R,EAAGgS,MAAM,CAAEC,iBAAA,IACJjS,EAAGkS,OAAO9J,MAAK,WAAc,OAAOzI,EAAgBK,EAAIM,EAAMG,EAAYG,EAAA,KAE9E4N,GAAU9O,EAAA,CAErB,OAAO8B,EAAM4P,SAAS9Q,GAAM,SAAUZ,EAASC,GAC3C,OAAOyN,IAAS,WAEZ,OADA7C,GAAIqG,MAAQpP,EACLZ,EAAGlB,EAASC,EAAQ6B,EAAA,OAEhC4G,MAAK,SAAU1I,GACd,GAAa,cAATY,EACA,IACIkB,EAAMyP,SAASkB,QAAA,CAEnB,MAAOzS,GAAA,CACX,MAAgB,aAATY,EAAsBZ,EAAS8B,EAAM4Q,YAAYhK,MAAK,WAAc,OAAO1I,CAAA,OAnCtF,GAAIM,EAAG8K,OAAOyG,aACV,OAAO/C,GAAU,IAAIzH,EAAWlB,eAAe7F,EAAG8K,OAAOuH,cAE7D,IAAKrS,EAAG8K,OAAOwH,cAAe,CAC1B,IAAKtS,EAAG8K,OAAOyH,SACX,OAAO/D,GAAU,IAAIzH,EAAWlB,gBACpC7F,EAAGkS,OAAO1F,MAAM/E,EAAA,CAEpB,OAAOzH,EAAG8K,OAAO0H,eAAepK,MAAK,WAAc,OAAOzI,EAAgBK,EAAIM,EAAMG,EAAYG,EAAA,IAVxG,CAkLgCD,KAAKuQ,GAAIxR,EAAM,CAACiB,KAAKuF,MAAO1E,GAQhD,OAPIZ,IACAnB,EAAEkM,aAAe/K,EACjBnB,EAAIA,EAAE+M,OAAM,SAAU9M,GAElB,OADAmR,QAAQ4B,MAAM/S,GACP8O,GAAU9O,EAAA,KAGlBD,CAAA,CAEX,QACQwC,GACAmJ,IAAA,GAGZqF,GAAMxQ,UAAUkC,IAAM,SAAUxC,EAAWD,GACvC,IAAIM,EAAQW,KACZ,OAAIhB,GAAaA,EAAU+E,cAAgB9E,OAChCe,KAAK+R,MAAM/S,GAAWgT,MAAMjT,GACtB,MAAbC,EACO6O,GAAU,IAAIzH,EAAWI,KAAK,oCAClCxG,KAAK+P,OAAO,YAAY,SAAUhR,GACrC,OAAOM,EAAM4S,KAAKzQ,IAAI,CAAEyO,MAAOlR,EAAOmT,IAAKlT,IACtCyI,MAAK,SAAU1I,GAAO,OAAOM,EAAM8S,KAAKC,QAAQC,KAAKtT,EAAA,OAC3D0I,KAAK1I,EAAA,EAEZ+Q,GAAMxQ,UAAUyS,MAAQ,SAAU9R,GAC9B,GAA2B,iBAAhBA,EACP,OAAO,IAAID,KAAKuQ,GAAG+B,YAAYtS,KAAMC,GACzC,GAAIU,EAAQV,GACR,OAAO,IAAID,KAAKuQ,GAAG+B,YAAYtS,KAAM,IAAIG,OAAOF,EAAYyF,KAAK,KAAM,MAC3E,IAAIrG,EAAWoB,EAAKR,GACpB,GAAwB,IAApBZ,EAASQ,OACT,OAAOG,KACF+R,MAAM1S,EAAS,IACfkT,OAAOtS,EAAYZ,EAAS,KACrC,IAAIN,EAAgBiB,KAAKoQ,OAAOoC,QAAQrS,OAAOH,KAAKoQ,OAAOqC,SAASjP,QAAO,SAAUxE,GACjF,GAAIA,EAAG0T,UACHrT,EAASsT,OAAM,SAAU5T,GAAW,OAAsC,GAA/BC,EAAG4T,QAAQ/P,QAAQ9D,EAAA,IAAmB,CACjF,IAAK,IAAIA,EAAI,EAAGA,EAAIM,EAASQ,SAAUd,EACnC,IAAyC,IAArCM,EAASwD,QAAQ7D,EAAG4T,QAAQ7T,IAC5B,OAAO,EAEf,OAAO,EAEX,OAAO,KACR8T,MAAK,SAAU9T,EAAGC,GAAK,OAAOD,EAAE6T,QAAQ/S,OAASb,EAAE4T,QAAQ/S,MAAA,IAAW,GACzE,GAAId,GAAiBiB,KAAKuQ,GAAGuC,UAAY5E,GAAW,CAChD,IAAIlP,EAAuBD,EAAc6T,QAAQ1S,MAAM,EAAGb,EAASQ,QACnE,OAAOG,KACF+R,MAAM/S,GACNuT,OAAOvT,EAAqBuE,KAAI,SAAUxE,GAAM,OAAOkB,EAAYlB,EAAA,MAEvEA,GAAiB8I,IAClBqI,QAAQkB,KAAK,aAAajR,OAAO4S,KAAKC,UAAU/S,GAAc,QAAQE,OAAOH,KAAKuF,KAAM,0BACpF,mBAAmBpF,OAAOd,EAASqG,KAAK,KAAM,MACtD,IAAI7E,EAAYb,KAAKoQ,OAAO6C,UACxBtT,EAAMK,KAAKuQ,GAAG2C,MAAMC,UACxB,SAAS7R,EAAOvC,EAAGC,GACf,OAAyB,IAAlBW,EAAIyT,IAAIrU,EAAGC,EAAA,CAEtB,IAAIc,EAAKT,EAAS6G,QAAO,SAAUnH,EAAIC,GACnC,IAAIK,EAAYN,EAAG,GAAIY,EAAeZ,EAAG,GAErCe,GADAf,EAAQ8B,EAAU7B,GACViB,EAAYjB,IACxB,MAAO,CACHK,GAAaN,EACbM,IAAcN,EACV4P,GAAQhP,EAAcZ,GAASA,EAAMsU,MACjC,SAAUtU,GAEN,OADIA,EAAO4D,EAAa5D,EAAGC,GACpB2B,EAAQ5B,IAASA,EAAKsM,MAAK,SAAUtM,GAAQ,OAAOuC,EAAOxB,EAAOf,EAAA,KACzE,SAAUA,GAAK,OAAOuC,EAAOxB,EAAO6C,EAAa5D,EAAGC,GAAA,GAC1DW,EAAA,GAEX,CAAC,KAAM,OACV,OADkBX,EAAMc,EAAG,GAAIA,EAAiBA,EAAG,GAC5Cd,EACHgB,KAAK+R,MAAM/S,EAAIuG,MAAMgN,OAAOtS,EAAYjB,EAAI4T,UACvCpP,OAAO1D,GACZf,EACIiB,KAAKwD,OAAO1D,GACZE,KAAK+R,MAAM1S,GAAUkT,OAAO,KAExCzC,GAAMxQ,UAAUkE,OAAS,SAAUzE,GAC/B,OAAOiB,KAAKsT,eAAeC,IAAIxU,EAAA,EAEnC+Q,GAAMxQ,UAAUkU,MAAQ,SAAUzU,GAC9B,OAAOiB,KAAKsT,eAAeE,MAAMzU,EAAA,EAErC+Q,GAAMxQ,UAAUmU,OAAS,SAAU1U,GAC/B,OAAOiB,KAAKsT,eAAeG,OAAO1U,EAAA,EAEtC+Q,GAAMxQ,UAAUoU,MAAQ,SAAU3U,GAC9B,OAAOiB,KAAKsT,eAAeI,MAAM3U,EAAA,EAErC+Q,GAAMxQ,UAAUqU,KAAO,SAAU5U,GAC7B,OAAOiB,KAAKsT,eAAeK,KAAK5U,EAAA,EAEpC+Q,GAAMxQ,UAAUsU,QAAU,SAAU7U,GAChC,OAAOiB,KAAKsT,eAAeM,QAAQ7U,EAAA,EAEvC+Q,GAAMxQ,UAAUgU,aAAe,WAC3B,OAAO,IAAItT,KAAKuQ,GAAGsD,WAAW,IAAI7T,KAAKuQ,GAAG+B,YAAYtS,MAAA,EAE1D8P,GAAMxQ,UAAUwU,QAAU,SAAU/U,GAChC,OAAO,IAAIiB,KAAKuQ,GAAGsD,WAAW,IAAI7T,KAAKuQ,GAAG+B,YAAYtS,KAAMW,EAAQ5B,GAChE,IAAIoB,OAAOpB,EAAM2G,KAAK,KAAM,KAC5B3G,GAAA,EAER+Q,GAAMxQ,UAAUyU,QAAU,WACtB,OAAO/T,KAAKsT,eAAeS,SAAA,EAE/BjE,GAAMxQ,UAAU0U,WAAa,SAAUrU,GACnC,IAG8BZ,EAHfC,EAANgB,KAAcuQ,GAAIlR,EAAlBW,KAAiCuF,KAKlC,SAASzF,IACL,OAAkB,OAAXf,GAAmBA,EAAOgB,MAAMC,KAAMJ,YAAcI,IAAA,EALvEA,KAAKoQ,OAAO6D,YAActU,GACVL,qBAAqB6P,KAt1C7C,SAAmBpQ,EAAGC,GAClB,GAAiB,mBAANA,GAA0B,OAANA,EAC3B,MAAM,IAAIyH,UAAU,uBAAyB0H,OAAOnP,GAAK,iCAE7D,SAASK,IAAOW,KAAK+D,YAAchF,CAAA,CADnCD,EAAcC,EAAGC,GAEjBD,EAAEO,UAAkB,OAANN,EAAaC,OAAO6C,OAAO9C,IAAMK,EAAGC,UAAYN,EAAEM,UAAW,IAAID,EAAA,CALnF,CAw1C0BS,EADYf,EAYxBY,GAPEV,OAAOsC,eAAezB,EAAQR,UAAW,KAAM,CAC3CkC,IAAK,WAAc,OAAOxC,CAAA,EAC1BkV,YAAA,EACAxS,cAAA,IAEJ5B,EAAQR,UAAU6U,MAAQ,WAAc,OAAO9U,CAAA,EAVnDM,EAWWG,GAIf,IADA,IAAIG,EAAiB,IAAIyD,IAChB7C,EAAQlB,EAAYL,UAAWuB,EAAOA,EAAQG,EAASH,GAC5D5B,OAAOmV,oBAAoBvT,GAAOC,SAAQ,SAAU/B,GAAY,OAAOkB,EAAeoU,IAAItV,EAAA,IAE/E,SAAXuC,EAAqBvC,GACrB,IAAKA,EACD,OAAOA,EACX,IACSC,EADLK,EAAMJ,OAAO6C,OAAOnC,EAAYL,WACpC,IAASN,KAAKD,EACV,IAAKkB,EAAe6D,IAAI9E,GACpB,IACIK,EAAIL,GAAKD,EAAIC,EAAA,CAEjB,MAAOD,GAAA,CACf,OAAOM,CAAA,CAOX,OALIW,KAAKoQ,OAAOkE,UACZtU,KAAKmS,KAAKC,QAAQmC,YAAYvU,KAAKoQ,OAAOkE,UAE9CtU,KAAKoQ,OAAOkE,SAAWhT,EACvBtB,KAAKmS,KAAK,UAAW7Q,GACd3B,CAAA,EAEXmQ,GAAMxQ,UAAUkV,YAAc,WAI1B,OAAOxU,KAAKgU,YAHZ,SAAejV,GACX8B,EAAOb,KAAMjB,EAAA,KAIrB+Q,GAAMxQ,UAAU+U,IAAM,SAAUrV,EAAKK,GACjC,IAAIM,EAAQK,KACRjB,EAAKiB,KAAKoQ,OAAOqC,QAAS3S,EAAOf,EAAG0V,KAAMxU,EAAUlB,EAAG6T,QACvD/R,EAAW7B,EAIf,OAHIiB,GAAWH,IACXe,EAAWqO,GAA8BjP,EAA9BiP,CAAuClQ,IAE/CgB,KAAK+P,OAAO,aAAa,SAAUhR,GACtC,OAAOY,EAAMsS,KAAKyC,OAAO,CAAEzE,MAAOlR,EAAO8P,KAAM,MAAOnO,KAAa,MAAPrB,EAAc,CAACA,GAAO,KAAMsV,OAAQ,CAAC9T,IAAA,IAClG4G,MAAK,SAAU1I,GAAO,OAAOA,EAAI6V,YAAc7K,GAAaoB,OAAOpM,EAAI6G,SAAS,IAAM7G,EAAI8V,UAAA,IACxFpN,MAAK,SAAU1I,GAChB,GAAIkB,EACA,IACI8C,EAAa/D,EAAKiB,EAASlB,EAAA,CAE/B,MAAOA,GAAA,CAEX,OAAOA,CAAA,KAGf+Q,GAAMxQ,UAAUwV,OAAS,SAAU/V,EAAaC,GAC5C,MAA2B,iBAAhBD,GAA6B4B,EAAQ5B,GAOrCiB,KAAK+R,MAAM,OAAOQ,OAAOxT,GAAagW,OAAO/V,QALpD,KADID,EAAM4D,EAAa5D,EAAaiB,KAAKoQ,OAAOqC,QAAQG,UAE7C/E,GAAU,IAAIzH,EAAW4O,gBAAgB,kDAC7ChV,KAAK+R,MAAM,OAAOQ,OAAOxT,GAAKgW,OAAO/V,EAAA,EAMpD8Q,GAAMxQ,UAAU2V,IAAM,SAAUjW,EAAKK,GACjC,IAAIM,EAAQK,KACRjB,EAAKiB,KAAKoQ,OAAOqC,QAAS3S,EAAOf,EAAG0V,KAAMxU,EAAUlB,EAAG6T,QACvD/R,EAAW7B,EAIf,OAHIiB,GAAWH,IACXe,EAAWqO,GAA8BjP,EAA9BiP,CAAuClQ,IAE/CgB,KAAK+P,OAAO,aAAa,SAAUhR,GAAS,OAAOY,EAAMsS,KAAKyC,OAAO,CAAEzE,MAAOlR,EAAO8P,KAAM,MAAO8F,OAAQ,CAAC9T,GAAWH,KAAa,MAAPrB,EAAc,CAACA,GAAO,UACpJoI,MAAK,SAAU1I,GAAO,OAAOA,EAAI6V,YAAc7K,GAAaoB,OAAOpM,EAAI6G,SAAS,IAAM7G,EAAI8V,UAAA,IAC1FpN,MAAK,SAAU1I,GAChB,GAAIkB,EACA,IACI8C,EAAa/D,EAAKiB,EAASlB,EAAA,CAE/B,MAAOA,GAAA,CAEX,OAAOA,CAAA,KAGf+Q,GAAMxQ,UAAU4V,OAAS,SAAUlW,GAC/B,IAAIK,EAAQW,KACZ,OAAOA,KAAK+P,OAAO,aAAa,SAAUhR,GAAS,OAAOM,EAAM4S,KAAKyC,OAAO,CAAEzE,MAAOlR,EAAO8P,KAAM,SAAUnO,KAAM,CAAC1B,IAAA,IAC9GyI,MAAK,SAAU1I,GAAO,OAAOA,EAAI6V,YAAc7K,GAAaoB,OAAOpM,EAAI6G,SAAS,SAAM,MAE/FkK,GAAMxQ,UAAU6V,MAAQ,WACpB,IAAInW,EAAQgB,KACZ,OAAOA,KAAK+P,OAAO,aAAa,SAAUhR,GAAS,OAAOC,EAAMiT,KAAKyC,OAAO,CAAEzE,MAAOlR,EAAO8P,KAAM,cAAeuG,MAAOxG,IAAA,IACnHnH,MAAK,SAAU1I,GAAO,OAAOA,EAAI6V,YAAc7K,GAAaoB,OAAOpM,EAAI6G,SAAS,SAAM,MAE/FkK,GAAMxQ,UAAU+V,QAAU,SAAUrW,GAChC,IAAIK,EAAQW,KACZ,OAAOA,KAAK+P,OAAO,YAAY,SAAUhR,GACrC,OAAOM,EAAM4S,KAAKqD,QAAQ,CACtB5U,KAAM1B,EACNiR,MAAOlR,IACR0I,MAAK,SAAU1I,GAAU,OAAOA,EAAOwE,KAAI,SAAUxE,GAAO,OAAOM,EAAM8S,KAAKC,QAAQC,KAAKtT,EAAA,WAGtG+Q,GAAMxQ,UAAUiW,QAAU,SAAU5V,EAASZ,EAAeC,GACxD,IAAIiB,EAAQD,KACRa,EAAOzB,MAAMwB,QAAQ7B,GAAiBA,OAAA,EAEtCuC,GADJtC,EAAUA,IAAY6B,OAAA,EAAmB9B,IACbC,EAAQwW,aAAA,EACpC,OAAOxV,KAAK+P,OAAO,aAAa,SAAUhR,GACtC,IAA+BM,GAA3BL,EAAKiB,EAAMmQ,OAAOqC,SAAmBgC,KACzC,IAD+CzV,EAAUA,EAAG4T,UAC7C/R,EACX,MAAM,IAAIuF,EAAW4O,gBAAgB,gEACzC,GAAInU,GAAQA,EAAKhB,SAAWF,EAAQE,OAChC,MAAM,IAAIuG,EAAW4O,gBAAgB,wDACzC,IAAIlV,EAAaH,EAAQE,OACrBb,EAAeA,GAAWK,EAC1BM,EAAQ4D,IAAI2L,GAA8BlQ,IAC1CW,EACJ,OAAOM,EAAMgS,KAAKyC,OAAO,CAAEzE,MAAOlR,EAAO8P,KAAM,MAAOnO,KAAMG,EAAM8T,OAAQ3V,EAAcyW,YAAanU,IAChGmG,MAAK,SAAU1I,GAChB,IAAIC,EAAcD,EAAG6V,YAAavV,EAAUN,EAAG2W,QAAS/V,EAAaZ,EAAG8V,WAExE,GAFoF9V,EAAWA,EAAG6G,SAE9E,IAAhB5G,EACA,OAFSsC,EAAcjC,EAAUM,EAGrC,MAAM,IAAIoG,EAAU,GAAG5F,OAAOF,EAAMsF,KAAM,gBAAgBpF,OAAOnB,EAAa,QAAQmB,OAAOL,EAAY,sBAAuBf,EAAA,QAI5I+Q,GAAMxQ,UAAUqW,QAAU,SAAUhW,EAASZ,EAAeC,GACxD,IAAIiB,EAAQD,KACRa,EAAOzB,MAAMwB,QAAQ7B,GAAiBA,OAAA,EAEtCuC,GADJtC,EAAUA,IAAY6B,OAAA,EAAmB9B,IACbC,EAAQwW,aAAA,EACpC,OAAOxV,KAAK+P,OAAO,aAAa,SAAUhR,GACtC,IAA+BM,GAA3BL,EAAKiB,EAAMmQ,OAAOqC,SAAmBgC,KACzC,IAD+CzV,EAAUA,EAAG4T,UAC7C/R,EACX,MAAM,IAAIuF,EAAW4O,gBAAgB,gEACzC,GAAInU,GAAQA,EAAKhB,SAAWF,EAAQE,OAChC,MAAM,IAAIuG,EAAW4O,gBAAgB,wDACzC,IAAIlV,EAAaH,EAAQE,OACrBb,EAAeA,GAAWK,EAC1BM,EAAQ4D,IAAI2L,GAA8BlQ,IAC1CW,EACJ,OAAOM,EAAMgS,KAAKyC,OAAO,CAAEzE,MAAOlR,EAAO8P,KAAM,MAAOnO,KAAMG,EAAM8T,OAAQ3V,EAAcyW,YAAanU,IAChGmG,MAAK,SAAU1I,GAChB,IAAIC,EAAcD,EAAG6V,YAAavV,EAAUN,EAAG2W,QAAS/V,EAAaZ,EAAG8V,WAExE,GAFoF9V,EAAWA,EAAG6G,SAE9E,IAAhB5G,EACA,OAFSsC,EAAcjC,EAAUM,EAGrC,MAAM,IAAIoG,EAAU,GAAG5F,OAAOF,EAAMsF,KAAM,gBAAgBpF,OAAOnB,EAAa,QAAQmB,OAAOL,EAAY,sBAAuBf,EAAA,QAI5I+Q,GAAMxQ,UAAUsW,WAAa,SAAU5W,GACnC,IAAIiD,EAAQjC,KACRX,EAAYW,KAAKiS,KACjBtS,EAAOX,EAAeuE,KAAI,SAAUxE,GAAS,OAAOA,EAAMmT,GAAA,IAC1DpS,EAAcd,EAAeuE,KAAI,SAAUxE,GAAS,OAAOA,EAAM8W,OAAA,IACjE1T,EAAY,GAChB,OAAOnC,KAAK+P,OAAO,aAAa,SAAUhR,GACtC,OAAOM,EAAUiW,QAAQ,CAAErF,MAAOlR,EAAO2B,KAAMf,EAAMmW,MAAO,UAAWrO,MAAK,SAAUzG,GAClF,IAAIK,EAAa,GACbjB,EAAa,GACjBpB,EAAe8B,SAAQ,SAAU/B,EAAIC,GACjC,IAAIK,EAAMN,EAAGmT,IAAKvS,EAAUZ,EAAG8W,QAC3B/V,EAAMkB,EAAKhC,GACf,GAAIc,EAAK,CACL,IAAK,IAAIG,EAAK,EAAGY,EAAK5B,OAAOyB,KAAKf,GAAUM,EAAKY,EAAGhB,OAAQI,IAAM,CAC9D,IAAIqB,EAAUT,EAAGZ,GACbnB,EAAQa,EAAQ2B,GACpB,GAAIA,IAAYW,EAAMmO,OAAOqC,QAAQG,SACjC,GAAwB,IAApBxD,GAAItQ,EAAOO,GACX,MAAM,IAAI+G,EAAW2P,WAAW,kDAIpChT,EAAajD,EAAKwB,EAASxC,EAAA,CAGnCqD,EAAUS,KAAK5D,GACfqC,EAAWuB,KAAKvD,GAChBe,EAAWwC,KAAK9C,EAAA,KAGxB,IAAIhB,EAAauC,EAAWxB,OAC5B,OAAOR,EACFqV,OAAO,CACRzE,MAAOlR,EACP8P,KAAM,MACNnO,KAAMW,EACNsT,OAAQvU,EACR4V,QAAS,CACLtV,KAAMf,EACNsW,YAAanW,KAGhB2H,MAAK,SAAU1I,GAChB,IAAIC,EAAcD,EAAG6V,YAAavV,EAAWN,EAAG6G,SAChD,GAAoB,IAAhB5G,EACA,OAAOF,EACX,IAAK,IAAIa,EAAK,EAAGG,EAAKb,OAAOyB,KAAKrB,GAAWM,EAAKG,EAAGD,OAAQF,IAAM,CAC/D,IAGQM,EAHJY,EAASf,EAAGH,GACZ2B,EAAea,EAAU+T,OAAOrV,IAChB,MAAhBS,IACIrB,EAAUZ,EAASwB,UAChBxB,EAASwB,GAChBxB,EAASiC,GAAgBrB,EAAA,CAGjC,MAAM,IAAI8F,EAAU,GAAG5F,OAAO8B,EAAMsD,KAAM,mBAAmBpF,OAAOnB,EAAa,QAAQmB,OAAOrB,EAAY,sBAAuBO,EAAA,WAKnJyQ,GAAMxQ,UAAU6W,WAAa,SAAUnX,GACnC,IAAIW,EAAQK,KACRF,EAAUd,EAAKa,OACnB,OAAOG,KAAK+P,OAAO,aAAa,SAAUhR,GACtC,OAAOY,EAAMsS,KAAKyC,OAAO,CAAEzE,MAAOlR,EAAO8P,KAAM,SAAUnO,KAAM1B,GAAA,IAChEyI,MAAK,SAAU1I,GACd,IAAIC,EAAcD,EAAG6V,YAAavV,EAAaN,EAAG8V,WAClD,GAD8D9V,EAAWA,EAAG6G,SACxD,IAAhB5G,EACA,OAAOK,EACX,MAAM,IAAI0G,EAAU,GAAG5F,OAAOR,EAAM4F,KAAM,mBAAmBpF,OAAOnB,EAAa,QAAQmB,OAAOL,EAAS,sBAAuBf,EAAA,KAGjI+Q,IAhXP,SAASA,KAAA,CAmXb,SAASsG,GAAOtW,GAEH,SAALd,EAAeD,EAAWC,GAC1B,GAAIA,EAAY,CAEZ,IADA,IAAIK,EAAIO,UAAUC,OAAQF,EAAO,IAAIP,MAAMC,EAAI,KACtCA,GACLM,EAAKN,EAAI,GAAKO,UAAUP,GAE5B,OADAwB,EAAI9B,GAAWsX,UAAUtW,MAAM,KAAMJ,GAC9BG,CAAA,CAEN,GAA2B,iBAAhBf,EACZ,OAAO8B,EAAI9B,EAAA,CAVnB,IAAI8B,EAAM,CAAC,EAaX7B,EAAGsX,aAAehV,EAClB,IAAK,IAAIvC,EAAI,EAAGM,EAAIO,UAAUC,OAAQd,EAAIM,IAAKN,EAC3CuC,EAAI1B,UAAUb,IAElB,OAAOC,EACP,SAASsC,EAAIvC,EAAWM,EAAeM,GACnC,GAAyB,iBAAdZ,EAAX,CAuBJ,IAA6Be,EApBrBT,EADCA,GACekI,GAGpB,IAAItH,EAAU,CACVsW,YAAa,GACblE,KAHA1S,EADCA,GACiBmH,EAIlBuP,UAAW,SAAUtX,IACwB,IAArCkB,EAAQsW,YAAY1T,QAAQ9D,KAC5BkB,EAAQsW,YAAY3T,KAAK7D,GACzBkB,EAAQoS,KAAOhT,EAAcY,EAAQoS,KAAMtT,GAAA,EAGnDwV,YAAa,SAAUvV,GACnBiB,EAAQsW,YAActW,EAAQsW,YAAY/S,QAAO,SAAUzE,GAAM,OAAOA,IAAOC,CAAA,IAC/EiB,EAAQoS,KAAOpS,EAAQsW,YAAYrQ,OAAO7G,EAAeM,EAAA,GAIjE,OADAkB,EAAI9B,GAAaC,EAAGD,GAAakB,CAAA,CAIjCQ,EADyBX,EAtBMf,GAuBrB+B,SAAQ,SAAU/B,GACxB,IAAIC,EAAOc,EAAIf,GACf,GAAI4B,EAAQ3B,GACRsC,EAAIvC,EAAWe,EAAIf,GAAW,GAAIe,EAAIf,GAAW,QAEhD,IAAa,SAATC,EAaL,MAAM,IAAIoH,EAAW4O,gBAAgB,wBAZrC,IAAI3V,EAAUiC,EAAIvC,EAAWgI,GAAQ,WAEjC,IADA,IAAIhI,EAAIa,UAAUC,OAAQb,EAAO,IAAII,MAAML,GACpCA,KACHC,EAAKD,GAAKa,UAAUb,GACxBM,EAAQkX,YAAYzV,SAAQ,SAAU/B,GAClCyD,GAAO,WACHzD,EAAGgB,MAAM,KAAMf,EAAA,eAW3C,SAASwX,GAAqBzX,EAAWC,GAErC,OADAiB,EAAOjB,GAAa6C,KAAK,CAAEvC,UAAWP,IAC/BC,CAAA,CAkBX,SAASyX,GAAgB1X,EAAKC,GAC1B,QAASD,EAAIyE,QAAUzE,EAAI2X,WAAa3X,EAAI4X,MACvC3X,EAAoBD,EAAI6X,WAAa7X,EAAI8X,aAAA,CAElD,SAASC,GAAU/X,EAAKC,GACpBD,EAAIyE,OAASmL,GAAQ5P,EAAIyE,OAAQxE,EAAA,CAErC,SAAS+X,GAAgBhY,EAAKC,EAASK,GACnC,IAAIM,EAAOZ,EAAI8X,aACf9X,EAAI8X,aAAelX,EAAO,WAAc,OAAOgP,GAAQhP,IAAQX,IAAA,EAAgBA,EAC/ED,EAAI6X,UAAYvX,IAAkBM,CAAA,CAKtC,SAASqX,GAAgBjY,EAAKC,GAC1B,GAAID,EAAIkY,UACJ,OAAOjY,EAAWkY,WACtB,IAAI7X,EAAQL,EAAWmY,kBAAkBpY,EAAIqY,OAC7C,IAAK/X,EACD,MAAM,IAAI+G,EAAWiR,OAAO,WAAatY,EAAIqY,MAAQ,oBAAsBpY,EAAWuG,KAAO,mBACjG,OAAOlG,CAAA,CAEX,SAASiY,GAAWvY,EAAKC,EAAWK,GAChC,IAAIM,EAAQqX,GAAgBjY,EAAKC,EAAUoR,QAC3C,OAAOpR,EAAUuY,WAAW,CACxBtH,MAAO5Q,EACPsV,QAAS5V,EAAIyY,SACbzD,QAAqB,SAAZhV,EAAI0Y,IACbC,SAAU3Y,EAAI2Y,OACdC,MAAO,CACHP,MAAOzX,EACPyV,MAAOrW,EAAIqW,QAAA,CAIvB,SAASwC,GAAK7Y,EAAKkB,EAAIjB,EAAWK,GAC9B,IAAIwB,EAAS9B,EAAI8X,aAAelI,GAAQ5P,EAAIyE,OAAQzE,EAAI8X,gBAAkB9X,EAAIyE,OAC9E,GAAKzE,EAAI4X,GAGJ,CACD,IAAIrV,EAAQ,CAAC,EACT3B,EAAQ,SAAUZ,EAAMC,EAAQK,GAChC,IACQM,EACAG,EAFHe,IAAUA,EAAO7B,EAAQK,GAAS,SAAUN,GAAU,OAAOC,EAAO6Y,KAAK9Y,EAAA,IAAY,SAAUA,GAAO,OAAOC,EAAO8Y,KAAK/Y,EAAA,MAG9G,0BADRe,EAAM,IADNH,EAAaX,EAAOkY,eAGpBpX,EAAM,GAAK,IAAI0I,WAAW7I,IACzBuB,EAAOI,EAAOxB,KACfwB,EAAMxB,IAAA,EACNG,EAAGlB,EAAMC,EAAQK,IAAA,EAI7B,OAAO0B,QAAQoL,IAAI,CACfpN,EAAI4X,GAAGoB,SAASpY,EAAOX,GACvBgZ,GAAQV,GAAWvY,EAAKM,EAAWL,GAAYD,EAAI2X,UAAW/W,GAAQZ,EAAIyY,UAAYzY,EAAIkZ,cAAA,CAlB9F,OAAOD,GAAQV,GAAWvY,EAAKM,EAAWL,GAAY2P,GAAQ5P,EAAI2X,UAAW7V,GAASZ,GAAKlB,EAAIyY,UAAYzY,EAAIkZ,YAAA,CAsBvH,SAASD,GAAQjZ,EAAeY,EAAQG,EAAIG,GACxC,IACIY,EAAY8K,GADD1L,EAAc,SAAUlB,EAAGC,EAAGK,GAAK,OAAOS,EAAGG,EAAYlB,GAAIC,EAAGK,EAAA,EAAQS,GAEvF,OAAOf,EAAc0I,MAAK,SAAUpI,GAChC,GAAIA,EACA,OAAOA,EAAO6Y,OAAM,WAChB,IAAIlZ,EAAI,WAAc,OAAOK,EAAO8Y,UAAA,EAC/BxY,IAAUA,EAAON,GAAQ,SAAUN,GAAY,OAAOC,EAAID,CAAA,IAAa,SAAUA,GAAOM,EAAOwY,KAAK9Y,GAAMC,EAAI8H,CAAA,IAAQ,SAAU/H,GAAKM,EAAOyY,KAAK/Y,GAAIC,EAAI8H,CAAA,KAC1JjG,EAAUxB,EAAOsC,MAAOtC,GAAQ,SAAUN,GAAY,OAAOC,EAAID,CAAA,IACrEC,GAAA,OAMZD,EAAgBqF,SAApB,IACIgU,IAIAC,GAAiB/Y,UAAUgZ,QAAU,SAAUvZ,GAE3C,QAAI,IAAAiB,KAAKqU,IAAmB,CACxB,IAAIrV,EAAOgB,KAAKqU,IAChB,GAAI1T,EAAQ3B,GACR,OAAOc,EAAcA,EAAc,GAAKa,EAAQ5B,GAASA,EAAQ,OAAYC,GAAA,GAAY6T,OAE7F,GAAoB,iBAAT7T,EACP,OAAQkX,OAAOnX,IAAU,GAAKC,EAClC,GAAoB,iBAATA,EACP,IACI,OAAOuZ,OAAOxZ,GAASC,CAAA,CAE3B,MAAOD,GACH,OAAOwZ,OAAO,GAAKvZ,CAAA,CAG3B,MAAM,IAAIyH,UAAU,gBAAgBtG,OAAOnB,GAAA,CAE/C,QAAI,IAAAgB,KAAKwY,OAAsB,CAC3B,IAAInZ,EAAeW,KAAKwY,OACxB,GAAI7X,EAAQtB,GACR,OAAOsB,EAAQ5B,GAASA,EAAMyE,QAAO,SAAUzE,GAAQ,OAAQM,EAAaoZ,SAAS1Z,EAAA,IAAU8T,OAAS,GAE5G,GAA4B,iBAAjBxT,EACP,OAAO6W,OAAOnX,GAASM,EAC3B,GAA4B,iBAAjBA,EACP,IACI,OAAOkZ,OAAOxZ,GAASM,CAAA,CAE3B,MAAON,GACH,OAAOwZ,OAAO,GAAKlZ,CAAA,CAG3B,MAAM,IAAIoH,UAAU,sBAAsBtG,OAAOd,GAAA,CAGrD,OADIL,EAAgD,QAA7BA,EAAKgB,KAAK0Y,qBAAA,IAA2B1Z,OAAA,EAAyBA,EAAG,KAChD,iBAAVD,GAAsBA,EAAM4Z,WAAW3Z,GAC1DgB,KAAK0Y,cAAc,GAAK3Z,EAAM6Z,UAAU5Z,EAAgBa,QAE5Dd,CAAA,EAEJsZ,IA7CP,SAASA,GAAiBtZ,GACtBE,OAAOS,OAAOM,KAAMjB,EAAA,CA+C5B,IAAI8Z,IAGAC,GAAWxZ,UAAUyZ,MAAQ,SAAUha,EAAIC,GACvC,IAAIK,EAAMW,KAAKgZ,KACf,OAAO3Z,EAAI4Z,MACP5Z,EAAI8U,MAAMpE,OAAO,KAAMlC,GAAU7L,KAAK,KAAM3C,EAAI4Z,QAChD5Z,EAAI8U,MAAMpE,OAAO,WAAYhR,GAAI0I,KAAKzI,EAAA,EAE9C8Z,GAAWxZ,UAAU4Z,OAAS,SAAUna,GACpC,IAAIC,EAAMgB,KAAKgZ,KACf,OAAOha,EAAIia,MACPja,EAAImV,MAAMpE,OAAO,KAAMlC,GAAU7L,KAAK,KAAMhD,EAAIia,QAChDja,EAAImV,MAAMpE,OAAO,YAAahR,EAAI,WAE1C+Z,GAAWxZ,UAAU6Z,cAAgB,SAAUpa,GAC3C,IAAIC,EAAMgB,KAAKgZ,KACfha,EAAI0X,UAAY/H,GAAQ3P,EAAI0X,UAAW3X,EAAA,EAE3C+Z,GAAWxZ,UAAUyY,SAAW,SAAUhZ,EAAIC,GAC1C,OAAO4Y,GAAK5X,KAAKgZ,KAAMja,EAAIC,EAAWgB,KAAKgZ,KAAK7E,MAAMlC,KAAA,EAE1D6G,GAAWxZ,UAAU8Z,MAAQ,SAAUra,GACnC,IAAIC,EAAKC,OAAO6C,OAAO9B,KAAK+D,YAAYzE,WAAYD,EAAMJ,OAAO6C,OAAO9B,KAAKgZ,MAI7E,OAHIja,GACA8B,EAAOxB,EAAKN,GAChBC,EAAGga,KAAO3Z,EACHL,CAAA,EAEX8Z,GAAWxZ,UAAU+Z,IAAM,WAEvB,OADArZ,KAAKgZ,KAAKf,YAAc,KACjBjY,IAAA,EAEX8Y,GAAWxZ,UAAUqU,KAAO,SAAU3U,GAClC,IAAIK,EAAMW,KAAKgZ,KACf,OAAOhZ,KAAK+Y,OAAM,SAAUha,GAAS,OAAO6Y,GAAKvY,EAAKL,EAAID,EAAOM,EAAI8U,MAAMlC,KAAA,KAE/E6G,GAAWxZ,UAAUkU,MAAQ,SAAUzU,GACnC,IAAIe,EAAQE,KACZ,OAAOA,KAAK+Y,OAAM,SAAUha,GACxB,IAAIC,EAAMc,EAAMkZ,KACZ3Z,EAAYL,EAAImV,MAAMlC,KAC1B,GAAIwE,GAAgBzX,GAAA,GAChB,OAAOK,EAAUmU,MAAM,CACnBvD,MAAOlR,EACP4Y,MAAO,CACHP,MAAOJ,GAAgBhY,EAAKK,EAAU+Q,QACtCgF,MAAOpW,EAAIoW,SAEhB3N,MAAK,SAAU1I,GAAS,OAAOua,KAAKC,IAAIxa,EAAOC,EAAI0U,MAAA,IAGtD,IAAI/T,EAAQ,EACZ,OAAOiY,GAAK5Y,GAAK,WAAuB,QAAPW,GAAA,CAAc,GAAUZ,EAAOM,GAC3DoI,MAAK,WAAc,OAAO9H,CAAA,OAEpC8H,KAAK1I,EAAA,EAEZ+Z,GAAWxZ,UAAUka,OAAS,SAAUza,EAASC,GAC7C,IAAIK,EAAQN,EAAQuE,MAAM,KAAKyQ,UAAWpU,EAAWN,EAAM,GAAIS,EAAYT,EAAMQ,OAAS,EAC1F,SAASI,EAAOlB,EAAKC,GACjB,OAAIA,EACOiB,EAAOlB,EAAIM,EAAML,IAAKA,EAAI,GAC9BD,EAAIY,EAAA,CAEf,IAAIkB,EAA0B,SAAlBb,KAAKgZ,KAAKvB,IAAiB,GAAK,EAC5C,SAASnW,EAAOvC,EAAGC,GAEf,OADID,EAAOkB,EAAOlB,EAAGe,KAAYd,EAAOiB,EAAOjB,EAAGc,KAC5Be,EAAe7B,EAAPD,EAAc8B,EAAQ,EAExD,OAAOb,KAAK4T,SAAQ,SAAU7U,GAC1B,OAAOA,EAAE8T,KAAKvR,EAAA,IACfmG,KAAKzI,EAAA,EAEZ8Z,GAAWxZ,UAAUsU,QAAU,SAAU7U,GACrC,IAAIkB,EAAQD,KACZ,OAAOA,KAAK+Y,OAAM,SAAUha,GACxB,IAAIC,EAAMiB,EAAM+Y,KAChB,GAAgB,SAAZha,EAAIyY,KAAkBhB,GAAgBzX,GAAA,IAA0B,EAAZA,EAAI0U,MAAW,CACnE,IAAIrU,EAAgBL,EAAIiZ,YACpBtY,EAAQqX,GAAgBhY,EAAKA,EAAImV,MAAMlC,KAAK7B,QAChD,OAAOpR,EAAImV,MAAMlC,KAAK0F,MAAM,CACxB1H,MAAOlR,EACP2U,MAAO1U,EAAI0U,MACXiB,QAAA,EACAgD,MAAO,CACHP,MAAOzX,EACPyV,MAAOpW,EAAIoW,SAEhB3N,MAAK,SAAU1I,GAEd,OADIA,EAASA,EAAG0a,OACTpa,EAAgBN,EAAOwE,IAAIlE,GAAiBN,CAAA,IAIvD,IAAIe,EAAM,GACV,OAAO8X,GAAK5Y,GAAK,SAAUD,GAAQ,OAAOe,EAAI8C,KAAK7D,EAAA,GAAUA,EAAOC,EAAImV,MAAMlC,MAAMxK,MAAK,WAAc,OAAO3H,CAAA,MAEnHf,EAAA,EAEP+Z,GAAWxZ,UAAUmU,OAAS,SAAUzU,GACpC,IAAID,EAAMiB,KAAKgZ,KACf,OAAIha,GAAU,IAEdD,EAAI0U,QAAUzU,EACVyX,GAAgB1X,GAChBgY,GAAgBhY,GAAK,WACjB,IAAIM,EAAaL,EACjB,OAAO,SAAUD,EAAQC,GACrB,OAAmB,IAAfK,IAEe,IAAfA,IACEA,EAGNL,GAAQ,WACJD,EAAO2a,QAAQra,GACfA,EAAa,QAJN,KAWnB0X,GAAgBhY,GAAK,WACjB,IAAIA,EAAaC,EACjB,OAAO,WAAc,QAAUD,EAAa,OAvBzCiB,IAAA,EA4Bf8Y,GAAWxZ,UAAUoU,MAAQ,SAAU3U,GAUnC,OATAiB,KAAKgZ,KAAKtF,MAAQ4F,KAAKC,IAAIvZ,KAAKgZ,KAAKtF,MAAO3U,GAC5CgY,GAAgB/W,KAAKgZ,MAAM,WACvB,IAAIrZ,EAAWZ,EACf,OAAO,SAAUA,EAAQC,EAASK,GAG9B,QAFMM,GAAY,GACdX,EAAQK,GACO,GAAZM,CAAA,QAGRK,IAAA,EAEX8Y,GAAWxZ,UAAUqa,MAAQ,SAAUha,EAAgBG,GAUnD,OATAgX,GAAU9W,KAAKgZ,MAAM,SAAUja,EAAQC,EAASK,GAC5C,OAAIM,EAAeZ,EAAO4C,SACtB3C,EAAQK,GACDS,EAAA,IAMRE,IAAA,EAEX8Y,GAAWxZ,UAAU0S,MAAQ,SAAUjT,GACnC,OAAOiB,KAAK0T,MAAM,GAAGE,SAAQ,SAAU7U,GAAK,OAAOA,EAAE,MAAO0I,KAAK1I,EAAA,EAErE+Z,GAAWxZ,UAAUsa,KAAO,SAAU7a,GAClC,OAAOiB,KAAK+T,UAAU/B,MAAMjT,EAAA,EAEhC+Z,GAAWxZ,UAAUkE,OAAS,SAAUxE,GAnR5C,IAAwBD,EAwRhB,OAJA+X,GAAU9W,KAAKgZ,MAAM,SAAUja,GAC3B,OAAOC,EAAeD,EAAO4C,MAAA,KArRjB5C,EAuRDiB,KAAKgZ,MAtRpBa,QAAUlL,GAAQ5P,EAAI8a,QAsRI7a,GACnBgB,IAAA,EAEX8Y,GAAWxZ,UAAUiU,IAAM,SAAUxU,GACjC,OAAOiB,KAAKwD,OAAOzE,EAAA,EAEvB+Z,GAAWxZ,UAAUqX,GAAK,SAAU5X,GAChC,OAAO,IAAIiB,KAAKuQ,GAAG+B,YAAYtS,KAAKgZ,KAAK7E,MAAOpV,EAAWiB,KAAA,EAE/D8Y,GAAWxZ,UAAUyU,QAAU,WAI3B,OAHA/T,KAAKgZ,KAAKvB,IAAyB,SAAlBzX,KAAKgZ,KAAKvB,IAAiB,OAAS,OACjDzX,KAAK8Z,oBACL9Z,KAAK8Z,mBAAmB9Z,KAAKgZ,KAAKvB,KAC/BzX,IAAA,EAEX8Y,GAAWxZ,UAAUya,KAAO,WACxB,OAAO/Z,KAAK+T,SAAA,EAEhB+E,GAAWxZ,UAAU0a,QAAU,SAAU3a,GACrC,IAAIN,EAAMiB,KAAKgZ,KAEf,OADAja,EAAIyY,UAAYzY,EAAI8a,QACb7Z,KAAK2T,MAAK,SAAU5U,EAAKC,GAAUK,EAAGL,EAAOkT,IAAKlT,EAAA,KAE7D8Z,GAAWxZ,UAAU2a,cAAgB,SAAUlb,GAE3C,OADAiB,KAAKgZ,KAAKtB,OAAS,SACZ1X,KAAKga,QAAQjb,EAAA,EAExB+Z,GAAWxZ,UAAU4a,eAAiB,SAAU7a,GAC5C,IAAIN,EAAMiB,KAAKgZ,KAEf,OADAja,EAAIyY,UAAYzY,EAAI8a,QACb7Z,KAAK2T,MAAK,SAAU5U,EAAKC,GAAUK,EAAGL,EAAOkY,WAAYlY,EAAA,KAEpE8Z,GAAWxZ,UAAUoB,KAAO,SAAU3B,GAClC,IAAIC,EAAMgB,KAAKgZ,KACfha,EAAIwY,UAAYxY,EAAI6a,QACpB,IAAIxa,EAAI,GACR,OAAOW,KAAK2T,MAAK,SAAU5U,EAAMC,GAC7BK,EAAEuD,KAAK5D,EAAOkT,IAAA,IACfzK,MAAK,WACJ,OAAOpI,CAAA,IACRoI,KAAK1I,EAAA,EAEZ+Z,GAAWxZ,UAAU6a,YAAc,SAAUpb,GACzC,IAAIM,EAAMW,KAAKgZ,KACf,GAAgB,SAAZ3Z,EAAIoY,KAAkBhB,GAAgBpX,GAAA,IAA0B,EAAZA,EAAIqU,MACxD,OAAO1T,KAAK+Y,OAAM,SAAUha,GACxB,IAAIC,EAAQgY,GAAgB3X,EAAKA,EAAI8U,MAAMlC,KAAK7B,QAChD,OAAO/Q,EAAI8U,MAAMlC,KAAK0F,MAAM,CACxB1H,MAAOlR,EACP4V,QAAA,EACAjB,MAAOrU,EAAIqU,MACXiE,MAAO,CACHP,MAAOpY,EACPoW,MAAO/V,EAAI+V,QAAA,IAGpB3N,MAAK,SAAU1I,GAEd,OADaA,EAAG0a,MAAA,IAEjBhS,KAAK1I,GAEZM,EAAImY,UAAYnY,EAAIwa,QACpB,IAAIla,EAAI,GACR,OAAOK,KAAK2T,MAAK,SAAU5U,EAAMC,GAC7BW,EAAEiD,KAAK5D,EAAOkY,WAAA,IACfzP,MAAK,WACJ,OAAO9H,CAAA,IACR8H,KAAK1I,EAAA,EAEZ+Z,GAAWxZ,UAAU8a,WAAa,SAAUrb,GAExC,OADAiB,KAAKgZ,KAAKtB,OAAS,SACZ1X,KAAKU,KAAK3B,EAAA,EAErB+Z,GAAWxZ,UAAU+a,SAAW,SAAUtb,GACtC,OAAOiB,KAAK0T,MAAM,GAAGhT,MAAK,SAAU3B,GAAK,OAAOA,EAAE,MAAO0I,KAAK1I,EAAA,EAElE+Z,GAAWxZ,UAAUgb,QAAU,SAAUvb,GACrC,OAAOiB,KAAK+T,UAAUsG,SAAStb,EAAA,EAEnC+Z,GAAWxZ,UAAUib,SAAW,WAC5B,IAAqBxb,EACrB,KADqBA,GAAjBA,EAAMiB,KAAKgZ,MAAgB5B,OAASrY,EAAIoV,MAAM/D,OAAO6C,UAAUlU,EAAIqY,UAC1DrY,EAAIsU,MACb,OAAOrT,KACX,IAAIX,EAAM,CAAC,EAOX,OANAyX,GAAU9W,KAAKgZ,MAAM,SAAUja,GAC3B,IAAIC,EAASD,EAAOmY,WAAWjT,WAG/B,OAFIlF,EAAQmC,EAAO7B,EAAKL,GACxBK,EAAIL,IAAA,GACID,CAAA,IAELiB,IAAA,EAEX8Y,GAAWxZ,UAAUyV,OAAS,SAAUtV,GACpC,IAAIJ,EAAQW,KACRL,EAAMK,KAAKgZ,KACf,OAAOhZ,KAAKkZ,QAAO,SAAU/W,GACzB,IAKQtB,EACAS,EACJe,EAwBoB,SAApBC,EAA8BvD,EAAeC,GAC7C,IAAIK,EAAWL,EAAI4G,SAAU5G,EAAcA,EAAI4V,YAC/C5T,GAAgBjC,EAAgBC,EAChC,IAAK,IAAIW,EAAK,EAAGG,EAAKW,EAAKpB,GAAWM,EAAKG,EAAGD,OAAQF,IAAM,CACxD,IAAIM,EAAMH,EAAGH,GACbb,EAAc8D,KAAKvD,EAASY,GAAA,EAlChCoC,EADmB,mBAAZ5C,EACIA,GAGPoB,EAAWJ,EAAKhB,GAChB6B,EAAUT,EAAShB,OACZ,SAAUd,GAEjB,IADA,IAAIC,GAAA,EACKK,EAAI,EAAGA,EAAIiC,IAAWjC,EAAG,CAC9B,IAAIM,EAAUkB,EAASxB,GACnBS,EAAML,EAAQE,GACdM,EAAU0C,EAAa5D,EAAMY,GAC7BG,aAAesY,IACfrV,EAAahE,EAAMY,EAASG,EAAIwY,QAAQrY,IACxCjB,GAAA,GAEKiB,IAAYH,IACjBiD,EAAahE,EAAMY,EAASG,GAC5Bd,GAAA,EAAmB,CAG3B,OAAOA,CAAA,GAGf,IAAIwD,EAAY7C,EAAIwU,MAAMlC,KACtBlT,EAAKyD,EAAU4N,OAAO8G,WAAYhW,EAAWnC,EAAGyb,SAAUpY,EAAarD,EAAG0b,WAC1ErX,EAAQ/D,EAAMkR,GAAGmK,SAASC,iBAAmB,IAC7C7b,EAAgB,GAChBkC,EAAe,EACfhC,EAAa,GASjB,OAAOK,EAAM+Z,QAAQe,cAAc1S,MAAK,SAAUpG,GAO9B,SAAZjB,EAAsBtB,GACtB,IAAIkC,EAAQsY,KAAKC,IAAInW,EAAO/B,EAAKxB,OAASf,GAC1C,OAAO0D,EAAU8S,QAAQ,CACrBrF,MAAO9N,EACPzB,KAAMW,EAAKnB,MAAMpB,EAAQA,EAASkC,GAClC8U,MAAO,cACRrO,MAAK,SAAU1I,GAKd,IAJA,IAAIM,EAAY,GACZL,EAAY,GACZW,EAAUuB,EAAW,GAAK,KAC1BpB,EAAa,GACRG,EAAI,EAAGA,EAAIe,IAASf,EAAG,CAC5B,IAAIY,EAAY9B,EAAOkB,GACnBqB,EAAQ,CACRK,MAAOiC,EAAU/C,GACjB4R,QAASpR,EAAKvC,EAASmB,KAAA,IAEvBoC,EAAS7C,KAAK8B,EAAOA,EAAMK,MAAOL,KACf,MAAfA,EAAMK,MACN7B,EAAW8C,KAAKvB,EAAKvC,EAASmB,IAExBiB,GAAoE,IAAxDkO,GAAIhN,EAAWvB,GAAYuB,EAAWd,EAAMK,SAK9D3C,EAAU4D,KAAKtB,EAAMK,OACjBT,GACAvB,EAAQiD,KAAKvB,EAAKvC,EAASmB,MAN/BH,EAAW8C,KAAKvB,EAAKvC,EAASmB,IAC9BZ,EAAUuD,KAAKtB,EAAMK,QAAA,CASjC,OAAOZ,QAAQqH,QAA2B,EAAnB/I,EAAUQ,QAC7B2C,EAAUkS,OAAO,CAAEzE,MAAO9N,EAAO0M,KAAM,MAAO8F,OAAQtV,IACjDoI,MAAK,SAAU1I,GAChB,IAAK,IAAIC,KAAOD,EAAI6G,SAChB9F,EAAWqD,OAAOD,SAASlE,GAAM,GAErCsD,EAAkBjD,EAAUQ,OAAQd,EAAA,KACpC0I,MAAK,WAAc,OAA2B,EAAnBzI,EAAUa,QAAeoC,GAA+B,iBAAZxC,IAC3E+C,EAAUkS,OAAO,CACbzE,MAAO9N,EACP0M,KAAM,MACNnO,KAAMf,EACNgV,OAAQ3V,EACR4b,SAAU3Y,EACV4Y,WAA+B,mBAAZpb,GACZA,EACPqb,kBAA4B,EAAThc,IACpB2I,MAAK,SAAU1I,GAAO,OAAOuD,EAAkBtD,EAAUa,OAAQd,EAAA,OAAa0I,MAAK,WAAc,OAA4B,EAApB3H,EAAWD,QAAeoC,GAAYxC,IAAYsb,KAC9JvY,EAAUkS,OAAO,CACbzE,MAAO9N,EACP0M,KAAM,SACNnO,KAAMZ,EACN8a,SAAU3Y,EACV6Y,kBAA4B,EAAThc,IACpB2I,MAAK,SAAU1I,GAAO,OAAOuD,EAAkBxC,EAAWD,OAAQd,EAAA,OAAa0I,MAAK,WACvF,OAAOpG,EAAKxB,OAASf,EAASkC,GAASZ,EAAUtB,EAASsE,EAAA,OA/DtE,IAAInB,EAAWwU,GAAgB9W,IAC3BA,EAAI+T,QAAU,MACM,mBAAZjU,GAA0BA,IAAYsb,KAAmB,CACjE3D,MAAOzX,EAAIyX,MACXhC,MAAOzV,EAAIyV,OA+Df,OAAOhV,EAAU,GAAGqH,MAAK,WACrB,GAA2B,EAAvB3I,EAAce,OACd,MAAM,IAAI8F,EAAY,sCAAuC7G,EAAekC,EAAchC,GAC9F,OAAOqC,EAAKxB,MAAA,WAK5BiZ,GAAWxZ,UAAU4V,OAAS,WAC1B,IAAIpV,EAAME,KAAKgZ,KAAM3Z,EAAQS,EAAIsV,MACjC,OAAIqB,GAAgB3W,KACfA,EAAImX,WAA4B,IAAf5X,EAAMwP,MAEjB7O,KAAKkZ,QAAO,SAAUna,GACzB,IAAIC,EAAac,EAAIqU,MAAMlC,KAAK7B,OAAO8G,WACnCvX,EAAYN,EAChB,OAAOS,EAAIqU,MAAMlC,KAAKuB,MAAM,CAAEvD,MAAOlR,EAAO4Y,MAAO,CAAEP,MAAOpY,EAAYoW,MAAOzV,KAAe8H,MAAK,SAAUpI,GACzG,OAAOS,EAAIqU,MAAMlC,KAAKyC,OAAO,CAAEzE,MAAOlR,EAAO8P,KAAM,cAAeuG,MAAOzV,IACpE8H,MAAK,SAAU1I,GAChB,IAAIC,EAAWD,EAAG6G,SAClB,GAD4B7G,EAAG8V,WAAY9V,EAAG2W,QAAa3W,EAAcA,EAAG6V,YAExE,MAAM,IAAIjP,EAAY,+BAAgC1G,OAAOyB,KAAK1B,GAAUuE,KAAI,SAAUxE,GAAO,OAAOC,EAASD,EAAA,IAAUM,EAAQN,GACvI,OAAOM,EAAQN,CAAA,UAKxBiB,KAAK+U,OAAOgG,GAAA,EAEhBjC,IA5YP,SAASA,KAAA,CA8Yb,IAAIiC,GAAiB,SAAUhc,EAAOC,GAAO,OAAOA,EAAI2C,MAAQ,MAsChE,SAASqZ,GAAcjc,EAAGC,GACtB,OAAOD,EAAIC,GAAK,EAAID,IAAMC,EAAI,EAAI,EAEtC,SAASic,GAAqBlc,EAAGC,GAC7B,OAAWA,EAAJD,GAAS,EAAIA,IAAMC,EAAI,EAAI,EAGtC,SAASkc,GAAKnc,EAAyBC,EAAKK,GAKxC,OAJIN,EAAaA,aAAmCoc,GAChD,IAAIpc,EAAwB8U,WAAW9U,GACvCA,GACOia,KAAKC,MAAY,IAAJ5Z,GAAqBoH,WAAXzH,GAC3BD,CAAA,CAEX,SAASqc,GAAgBrc,GACrB,OAAO,IAAIA,EAAY8U,WAAW9U,GAAa,WAAc,OAAOsc,GAAW,OAAQ3H,MAAM,GAmCjG,SAAS4H,GAAuBvc,EAAaD,EAAOO,EAASM,GACzD,IAAIG,EAAOkB,EAAOK,EAASjB,EAAc6B,EAAcE,EAAWE,EAAeC,EAAajD,EAAQQ,OACtG,IAAKR,EAAQsT,OAAM,SAAU5T,GAAK,MAAoB,iBAANA,CAAA,IAC5C,OAAOmc,GAAKnc,EAAauP,IAE7B,SAAStP,EAAcD,GACnBe,EAtCW,SAsCUf,EArCrB,SAAUA,GAAK,OAAOA,EAAEwc,aAAA,EACxB,SAAUxc,GAAK,OAAOA,EAAEyc,aAAA,EAqCxBxa,EAlCW,SAkCUjC,EAjCrB,SAAUA,GAAK,OAAOA,EAAEyc,aAAA,EACxB,SAAUzc,GAAK,OAAOA,EAAEwc,aAAA,EAiCxBla,EAAmB,SAARtC,EAAiBic,GAAgBC,GAC5C,IAAIjc,EAAeK,EAAQkE,KAAI,SAAUxE,GACrC,MAAO,CAAE+P,MAAO9N,EAAMjC,GAASiQ,MAAOlP,EAAMf,GAAA,IAC7C8T,MAAK,SAAU9T,EAAGC,GACjB,OAAOqC,EAAQtC,EAAE+P,MAAO9P,EAAE8P,MAAA,IAE9B1O,EAAepB,EAAauE,KAAI,SAAUxE,GAAM,OAAOA,EAAGiQ,KAAA,IAC1D/M,EAAejD,EAAauE,KAAI,SAAUxE,GAAM,OAAOA,EAAG+P,KAAA,IAE1DzM,EAAyB,UADzBF,EAAYpD,GACsB,GAAKY,CAAA,CAE3CX,EAAc,SACVD,EAAI,IAAIA,EAAY8U,WAAW9U,GAAa,WAAc,OAAO0c,GAAYrb,EAAa,GAAI6B,EAAaK,EAAa,GAAK3C,EAAA,KAC/Hma,mBAAqB,SAAU/a,GAC7BC,EAAcD,EAAA,EAElB,IAAIyD,EAAsB,EA4B1B,OA3BAzD,EAAEoa,eAAc,SAAUpa,EAAQC,EAASK,GACvC,IAAIM,EAAMZ,EAAOmT,IACjB,GAAmB,iBAARvS,EACP,OAAO,EACX,IAAIG,EAAWkB,EAAMrB,GACrB,GAAIb,EAAMgB,EAAUmC,EAAcO,GAC9B,OAAO,EAIP,IADA,IAAIvC,EAAuB,KAClBY,EAAI2B,EAAqB3B,EAAIyB,IAAczB,EAAG,CACnD,IAAIS,EA3DpB,SAAoBvC,EAAKC,EAAUK,EAAaM,EAAaG,EAAKG,GAG9D,IAFA,IAAIY,EAASyY,KAAKC,IAAIxa,EAAIc,OAAQF,EAAYE,QAC1CyB,GAAO,EACFxC,EAAI,EAAGA,EAAI+B,IAAU/B,EAAG,CAC7B,IAAIkC,EAAahC,EAASF,GAC1B,GAAIkC,IAAerB,EAAYb,GAC3B,OAAIgB,EAAIf,EAAID,GAAIO,EAAYP,IAAM,EACvBC,EAAI+D,OAAO,EAAGhE,GAAKO,EAAYP,GAAKO,EAAYyD,OAAOhE,EAAI,GAClEgB,EAAIf,EAAID,GAAIa,EAAYb,IAAM,EACvBC,EAAI+D,OAAO,EAAGhE,GAAKa,EAAYb,GAAKO,EAAYyD,OAAOhE,EAAI,GAC3D,GAAPwC,EACOvC,EAAI+D,OAAO,EAAGxB,GAAOtC,EAASsC,GAAOjC,EAAYyD,OAAOxB,EAAM,GAClE,KAEPxB,EAAIf,EAAID,GAAIkC,GAAc,IAC1BM,EAAMxC,EAAA,CAEd,OAAI+B,EAASlB,EAAYE,QAAkB,SAARI,EACxBlB,EAAMM,EAAYyD,OAAO/D,EAAIc,QACpCgB,EAAS9B,EAAIc,QAAkB,SAARI,EAChBlB,EAAI+D,OAAO,EAAGzD,EAAYQ,QAC7ByB,EAAM,EAAI,KAAOvC,EAAI+D,OAAO,EAAGxB,GAAO3B,EAAY2B,GAAOjC,EAAYyD,OAAOxB,EAAM,GArB9F,CA2DwC3B,EAAKG,EAAUM,EAAaS,GAAIoB,EAAapB,GAAIQ,EAASc,GACnE,OAAXb,GAA4C,OAAzBrB,EACnBuC,EAAsB3B,EAAI,GACI,OAAzBZ,GAAyE,EAAxCoB,EAAQpB,EAAsBqB,MACpErB,EAAuBqB,EAAA,CAS/B,OALItC,EADyB,OAAzBiB,EACQ,WAAclB,EAAOoZ,SAASlY,EAAuBoC,EAAA,EAGrDhD,IAAA,CAEL,IAGRN,CAAA,CAEX,SAAS0c,GAAY1c,EAAOC,EAAOK,EAAWM,GAC1C,MAAO,CACHkP,KAAM,EACNC,MAAO/P,EACPiQ,MAAOhQ,EACP+P,UAAW1P,EACX4P,UAAWtP,EAAA,CAGnB,SAAS0b,GAAWtc,GAChB,MAAO,CACH8P,KAAM,EACNC,MAAO/P,EACPiQ,MAAOjQ,EAAA,CAIf,IAAIoc,IAGAlc,OAAOsC,eAAema,GAAYpc,UAAW,aAAc,CACvDkC,IAAK,WACD,OAAOxB,KAAKgZ,KAAK7E,MAAM5D,GAAGsD,UAAA,EAE9BK,YAAA,EACAxS,cAAA,IAEJga,GAAYpc,UAAUqc,QAAU,SAAU5c,EAAOC,EAAOK,EAAcM,GAClEN,GAAA,IAAeA,EACfM,GAAA,IAAeA,EACf,IACI,OAA+B,EAA1BK,KAAK4b,KAAK7c,EAAOC,IACW,IAA5BgB,KAAK4b,KAAK7c,EAAOC,KAAiBK,GAAgBM,MAAmBN,IAAgBM,GAC/Eyb,GAAgBpb,MACpB,IAAIA,KAAK6T,WAAW7T,MAAM,WAAc,OAAOyb,GAAY1c,EAAOC,GAAQK,GAAeM,EAAA,IAEpG,MAAOZ,GACH,OAAOmc,GAAKlb,KAAMqO,GAAA,GAG1BqN,GAAYpc,UAAUiT,OAAS,SAAUxT,GACrC,OAAa,MAATA,EACOmc,GAAKlb,KAAMqO,IACf,IAAIrO,KAAK6T,WAAW7T,MAAM,WAAc,OAAOqb,GAAWtc,EAAA,KAErE2c,GAAYpc,UAAUuc,MAAQ,SAAU9c,GACpC,OAAa,MAATA,EACOmc,GAAKlb,KAAMqO,IACf,IAAIrO,KAAK6T,WAAW7T,MAAM,WAAc,OAAOyb,GAAY1c,OAAA,GAAO,EAAW,KAExF2c,GAAYpc,UAAUwc,aAAe,SAAU/c,GAC3C,OAAa,MAATA,EACOmc,GAAKlb,KAAMqO,IACf,IAAIrO,KAAK6T,WAAW7T,MAAM,WAAc,OAAOyb,GAAY1c,OAAA,GAAO,EAAW,KAExF2c,GAAYpc,UAAUyc,MAAQ,SAAUhd,GACpC,OAAa,MAATA,EACOmc,GAAKlb,KAAMqO,IACf,IAAIrO,KAAK6T,WAAW7T,MAAM,WAAc,OAAOyb,QAAA,EAAuB1c,GAAA,GAAO,EAAO,KAE/F2c,GAAYpc,UAAU0c,aAAe,SAAUjd,GAC3C,OAAa,MAATA,EACOmc,GAAKlb,KAAMqO,IACf,IAAIrO,KAAK6T,WAAW7T,MAAM,WAAc,OAAOyb,QAAA,EAAuB1c,EAAA,KAEjF2c,GAAYpc,UAAUqZ,WAAa,SAAU5Z,GACzC,MAAmB,iBAARA,EACAmc,GAAKlb,KAAMsO,IACftO,KAAK2b,QAAQ5c,EAAKA,EAAMmP,IAAA,GAAW,EAAM,EAEpDwN,GAAYpc,UAAU2c,qBAAuB,SAAUld,GACnD,MAAY,KAARA,EACOiB,KAAK2Y,WAAW5Z,GACpBuc,GAAuBtb,MAAM,SAAUjB,EAAGC,GAAK,OAA2B,IAApBD,EAAE8D,QAAQ7D,EAAE,MAAc,CAACD,GAAMmP,GAAA,EAElGwN,GAAYpc,UAAU4c,iBAAmB,SAAUnd,GAC/C,OAAOuc,GAAuBtb,MAAM,SAAUjB,EAAGC,GAAK,OAAOD,IAAMC,EAAE,KAAO,CAACD,GAAM,KAEvF2c,GAAYpc,UAAU6c,gBAAkB,WACpC,IAAIpd,EAAM0F,EAAW1E,MAAMyE,EAAe5E,WAC1C,OAAmB,IAAfb,EAAIc,OACGub,GAAgBpb,MACpBsb,GAAuBtb,MAAM,SAAUjB,EAAGC,GAAK,OAAyB,IAAlBA,EAAE6D,QAAQ9D,EAAA,GAAcA,EAAK,KAE9F2c,GAAYpc,UAAU8c,0BAA4B,WAC9C,IAAIrd,EAAM0F,EAAW1E,MAAMyE,EAAe5E,WAC1C,OAAmB,IAAfb,EAAIc,OACGub,GAAgBpb,MACpBsb,GAAuBtb,MAAM,SAAUhB,EAAGD,GAAK,OAAOA,EAAEsM,MAAK,SAAUtM,GAAK,OAAwB,IAAjBC,EAAE6D,QAAQ9D,EAAA,MAAiBA,EAAKmP,GAAA,EAE9HwN,GAAYpc,UAAU+c,MAAQ,WAC1B,IAAIrd,EAAQgB,KACRF,EAAM2E,EAAW1E,MAAMyE,EAAe5E,WACtCK,EAAUD,KAAK4b,KACnB,IACI9b,EAAI+S,KAAK5S,EAAA,CAEb,MAAOlB,GACH,OAAOmc,GAAKlb,KAAMqO,GAAA,CAEtB,GAAmB,IAAfvO,EAAID,OACJ,OAAOub,GAAgBpb,MAC3B,IAAIjB,EAAI,IAAIiB,KAAK6T,WAAW7T,MAAM,WAAc,OAAOyb,GAAY3b,EAAI,GAAIA,EAAIA,EAAID,OAAS,OAC5Fd,EAAE+a,mBAAqB,SAAU/a,GAC7BkB,EAAyB,SAAdlB,EACPC,EAAMsd,WACNtd,EAAMud,YACVzc,EAAI+S,KAAK5S,EAAA,EAEb,IAAIY,EAAI,EAkBR,OAjBA9B,EAAEoa,eAAc,SAAUpa,EAAQC,EAASK,GAEvC,IADA,IAAIM,EAAMZ,EAAOmT,IACa,EAAvBjS,EAAQN,EAAKG,EAAIe,KAEpB,KADEA,IACQf,EAAID,OAEV,OADAb,EAAQK,IAAA,EAIhB,OAA6B,IAAzBY,EAAQN,EAAKG,EAAIe,MAIjB7B,GAAQ,WAAcD,EAAOoZ,SAASrY,EAAIe,GAAA,OACnC,IAGR9B,CAAA,EAEX2c,GAAYpc,UAAUkd,SAAW,SAAUzd,GACvC,OAAOiB,KAAKyc,WAAW,CAAC,EAAC,IAAQ1d,GAAQ,CAACA,EAAOiB,KAAKuQ,GAAGuC,UAAW,CAAE4J,eAAA,EAAsBC,eAAA,GAAe,EAE/GjB,GAAYpc,UAAUsd,OAAS,WAC3B,IAAI7d,EAAM0F,EAAW1E,MAAMyE,EAAe5E,WAC1C,GAAmB,IAAfb,EAAIc,OACJ,OAAO,IAAIG,KAAK6T,WAAW7T,MAC/B,IACIjB,EAAI8T,KAAK7S,KAAKsc,WAAA,CAElB,MAAOvd,GACH,OAAOmc,GAAKlb,KAAMqO,GAAA,CAEtB,IAAIrP,EAASD,EAAImH,QAAO,SAAUnH,EAAKC,GAAO,OAAOD,EACjDA,EAAIoB,OAAO,CAAC,CAACpB,EAAIA,EAAIc,OAAS,GAAG,GAAIb,KACrC,CAAC,EAAC,IAAQA,GAAA,GAAU,MAExB,OADAA,EAAO4D,KAAK,CAAC7D,EAAIA,EAAIc,OAAS,GAAIG,KAAKuQ,GAAGuC,UACnC9S,KAAKyc,WAAWzd,EAAQ,CAAE0d,eAAA,EAAsBC,eAAA,GAAe,EAE1EjB,GAAYpc,UAAUmd,WAAa,SAAU1d,EAAQC,GACjD,IAAIiB,EAAQD,KACRa,EAAMb,KAAK4b,KAAMta,EAAYtB,KAAKsc,WAAYjd,EAAaW,KAAKuc,YAAazd,EAAMkB,KAAK6c,KAAM7b,EAAMhB,KAAK8c,KAC7G,GAAsB,IAAlB/d,EAAOc,OACP,OAAOub,GAAgBpb,MAC3B,IAAKjB,EAAO4T,OAAM,SAAU5T,GACxB,YAAO,IAAAA,EAAM,aACTA,EAAM,IACNuC,EAAUvC,EAAM,GAAIA,EAAM,KAAO,KAErC,OAAOmc,GAAKlb,KAAM,6HAA8HoG,EAAW4O,iBAE/J,IAkBI3T,EAlBA1B,GAAiBX,IAAA,IAAWA,EAAQ0d,cACpC5c,EAAgBd,IAAA,IAAWA,EAAQ2d,cAenCvc,EAAgBkB,EACpB,SAASW,EAAYlD,EAAGC,GAAK,OAAOoB,EAAcrB,EAAE,GAAIC,EAAE,IAE1D,KACIqC,EAAMtC,EAAOmH,QAlBjB,SAAkBnH,EAAQC,GAEtB,IADA,IAAIK,EAAI,EAAGM,EAAIZ,EAAOc,OACfR,EAAIM,IAAKN,EAAG,CACf,IAAIS,EAAQf,EAAOM,GACnB,GAAIwB,EAAI7B,EAAS,GAAIc,EAAM,IAAM,GAAkC,EAA7Be,EAAI7B,EAAS,GAAIc,EAAM,IAAS,CAClEA,EAAM,GAAKhB,EAAIgB,EAAM,GAAId,EAAS,IAClCc,EAAM,GAAKkB,EAAIlB,EAAM,GAAId,EAAS,IAClC,OAKR,OAFIK,IAAMM,GACNZ,EAAO6D,KAAK5D,GACTD,CAAA,GAMuB,KAC1B8T,KAAK5Q,EAAA,CAEb,MAAOlD,GACH,OAAOmc,GAAKlb,KAAMqO,GAAA,CAEtB,IAAIlM,EAAW,EACXE,EAA0BvC,EAC1B,SAAUf,GAAO,OAA0C,EAAnCuC,EAAUvC,EAAKsC,EAAIc,GAAU,KACrD,SAAUpD,GAAO,OAA2C,GAApCuC,EAAUvC,EAAKsC,EAAIc,GAAU,KACrDG,EAA0B3C,EAC1B,SAAUZ,GAAO,OAA2C,EAApCM,EAAWN,EAAKsC,EAAIc,GAAU,KACtD,SAAUpD,GAAO,OAA4C,GAArCM,EAAWN,EAAKsC,EAAIc,GAAU,KAItDK,EAAWH,EAsCf,OArCItD,EAAI,IAAIiB,KAAK6T,WAAW7T,MAAM,WAAc,OAAOyb,GAAYpa,EAAI,GAAG,GAAIA,EAAIA,EAAIxB,OAAS,GAAG,IAAKF,GAAgBG,EAAA,KACrHga,mBAAqB,SAAU/a,GAGzBqB,EAFc,SAAdrB,GACAyD,EAAWH,EACKf,IAGhBkB,EAAWF,EACKjD,GAEpBgC,EAAIwR,KAAK5Q,EAAA,EAEblD,EAAEoa,eAAc,SAAUpa,EAAQC,EAASK,GAEvC,IADA,IAjB2BM,EAiBvBG,EAAMf,EAAOmT,IACV1P,EAAS1C,IAEZ,KADEqC,IACed,EAAIxB,OAEjB,OADAb,EAAQK,IAAA,EAIhB,OAxBQgD,EADmB1C,EAyBDG,KAxBewC,EAAwB3C,KA2BlB,IAAtCM,EAAM2b,KAAK9b,EAAKuB,EAAIc,GAAU,KAAmD,IAAtClC,EAAM2b,KAAK9b,EAAKuB,EAAIc,GAAU,KAI9EnD,GAAQ,WACAoB,IAAkBkB,EAClBvC,EAAOoZ,SAAS9W,EAAIc,GAAU,IAE9BpD,EAAOoZ,SAAS9W,EAAIc,GAAU,UAP/B,IAYRpD,CAAA,EAEX2c,GAAYpc,UAAUyd,gBAAkB,WACpC,IAAIhe,EAAM0F,EAAW1E,MAAMyE,EAAe5E,WAC1C,OAAKb,EAAI4T,OAAM,SAAU5T,GAAK,MAAoB,iBAANA,CAAA,IAGzB,IAAfA,EAAIc,OACGub,GAAgBpb,MACpBA,KAAKyc,WAAW1d,EAAIwE,KAAI,SAAUxE,GAAO,MAAO,CAACA,EAAKA,EAAMmP,GAAA,KAJxDgN,GAAKlb,KAAM,8CAMnB0b,IAnOP,SAASA,KAAA,CAwPb,SAASsB,GAAmBhe,GACxB,OAAO2M,IAAK,SAAU5M,GAGlB,OAFAke,GAAele,GACfC,EAAOD,EAAMme,OAAOjE,QAAA,CACb,IAGf,SAASgE,GAAele,GAChBA,EAAMoe,iBACNpe,EAAMoe,kBACNpe,EAAMqe,gBACNre,EAAMqe,gBAAA,CAGd,IAAIC,GAAmC,iBACnCC,GAAiC,qBACjCC,GAAenH,GAAO,KAAMiH,IAE5BG,IAGAC,GAAYne,UAAUoe,MAAQ,WAK1B,OAJApb,GAAQsH,GAAIpJ,UACVR,KAAK2d,UACgB,IAAnB3d,KAAK2d,WAAoB/T,GAAIpJ,SAC7BoJ,GAAIgU,aAAe5d,MAChBA,IAAA,EAEXyd,GAAYne,UAAUue,QAAU,WAE5B,GADAvb,GAAQsH,GAAIpJ,QACa,KAAnBR,KAAK2d,UAGP,IAFK/T,GAAIpJ,SACLoJ,GAAIgU,aAAe,MACY,EAA5B5d,KAAK8d,cAAcje,SAAeG,KAAK+d,WAAW,CACrD,IAAIhf,EAAWiB,KAAK8d,cAAcE,QAClC,IACIvS,GAAO1M,EAAS,GAAIA,EAAS,IAEjC,MAAOA,GAAA,EAGf,OAAOiB,IAAA,EAEXyd,GAAYne,UAAUye,QAAU,WAC5B,OAAO/d,KAAK2d,WAAa/T,GAAIgU,eAAiB5d,IAAA,EAElDyd,GAAYne,UAAUwC,OAAS,SAAU9C,GACrC,IAAIK,EAAQW,KACZ,IAAKA,KAAKie,KACN,OAAOje,KACX,IAAIjB,EAAQiB,KAAKuQ,GAAGI,MAChBhR,EAAcK,KAAKuQ,GAAGpG,OAAOuH,YAEjC,GADApP,GAAQtC,KAAKsQ,WACRtR,IAAaD,EACd,OAAQY,GAAeA,EAAY4F,MAC/B,IAAK,sBACD,MAAM,IAAIa,EAAWlB,eAAevF,GACxC,IAAK,kBACD,MAAM,IAAIyG,EAAWf,WAAW1F,EAAY6F,QAAS7F,GACzD,QACI,MAAM,IAAIyG,EAAW8X,WAAWve,GAG5C,IAAKK,KAAKme,OACN,MAAM,IAAI/X,EAAWhB,oBAuBzB,OAtBA9C,EAAmC,OAA5BtC,KAAKyR,YAAYtH,SACxBnL,EAAWgB,KAAKsQ,SAAWtR,IACtBgB,KAAKuQ,GAAG0B,MAEHlT,GADaqf,YAAYpe,KAAKqe,WAAYre,KAAKie,KAAM,CAAEK,WAAYte,KAAKue,+BAEzEnX,QAAUuE,IAAK,SAAU5M,GAC9Bke,GAAele,GACfM,EAAMmf,QAAQxf,EAASia,MAAA,IAE3Bja,EAASyf,QAAU9S,IAAK,SAAU5M,GAC9Bke,GAAele,GACfM,EAAM8e,QAAU9e,EAAMmf,QAAQ,IAAIpY,EAAWjB,MAAMnG,EAASia,QAC5D5Z,EAAM8e,QAAA,EACN9e,EAAMqf,GAAG,SAASrM,KAAKtT,EAAA,IAE3BC,EAAS2f,WAAahT,IAAK,WACvBtM,EAAM8e,QAAA,EACN9e,EAAMuf,WACF,iBAAkB5f,GAClBue,GAAasB,eAAexM,KAAKrT,EAAuB8f,aAAA,IAGzD9e,IAAA,EAEXyd,GAAYne,UAAUmR,SAAW,SAAUpR,EAAMM,EAAIG,GACjD,IAAIG,EAAQD,KACZ,GAAa,cAATX,GAAsC,cAAdW,KAAKie,KAC7B,OAAOpQ,GAAU,IAAIzH,EAAW2Y,SAAS,4BAC7C,IAAK/e,KAAKme,OACN,OAAOtQ,GAAU,IAAIzH,EAAWhB,qBACpC,GAAIpF,KAAK+d,UACL,OAAO,IAAIhU,IAAa,SAAUhL,EAASC,GACvCiB,EAAM6d,cAAclb,KAAK,CAAC,WAClB3C,EAAMwQ,SAASpR,EAAMM,EAAIG,GAAY2H,KAAK1I,EAASC,EAAA,EACpD4K,IAAA,IAGV,GAAI9J,EACL,OAAO2M,IAAS,WACZ,IAAI1N,EAAI,IAAIgL,IAAa,SAAUhL,EAASC,GACxCiB,EAAMyd,QACN,IAAIre,EAAKM,EAAGZ,EAASC,EAAQiB,GACzBZ,GAAMA,EAAGoI,MACTpI,EAAGoI,KAAK1I,EAASC,EAAA,IAIzB,OAFAD,EAAE+M,SAAQ,WAAc,OAAO7L,EAAM4d,SAAA,IACrC9e,EAAEkL,MAAA,EACKlL,CAAA,IAIX,IAAIA,EAAI,IAAIgL,IAAa,SAAUhL,EAASC,GACxC,IAAIK,EAAKM,EAAGZ,EAASC,EAAQiB,GACzBZ,GAAMA,EAAGoI,MACTpI,EAAGoI,KAAK1I,EAASC,EAAA,IAGzB,OADAD,EAAEkL,MAAA,EACKlL,CAAA,EAGf0e,GAAYne,UAAU0f,MAAQ,WAC1B,OAAOhf,KAAK0N,OAAS1N,KAAK0N,OAAOsR,QAAUhf,IAAA,EAE/Cyd,GAAYne,UAAU2f,QAAU,SAAUlgB,GACtC,IAQQC,EARJW,EAAOK,KAAKgf,QACZlf,EAAUiK,GAAa3B,QAAQrJ,GAC/BY,EAAKuf,YACLvf,EAAKuf,YAAcvf,EAAKuf,YAAYzX,MAAK,WAAc,OAAO3H,CAAA,KAG9DH,EAAKuf,YAAcpf,EACnBH,EAAKwf,cAAgB,GACjBngB,EAAQW,EAAK2Q,SAAS8O,YAAYzf,EAAK0e,WAAW,IACrD,SAAStf,IAEN,MADEY,EAAK0f,WACA1f,EAAKwf,cAActf,QACrBF,EAAKwf,cAAcnB,OAAnBre,GACDA,EAAKuf,cACLlgB,EAAMwC,KAAA,KAAe2F,UAAYpI,EAAA,CALxC,IAQL,IAAIkB,EAAqBN,EAAKuf,YAC9B,OAAO,IAAInV,IAAa,SAAU/K,EAASK,GACvCS,EAAQ2H,MAAK,SAAU1I,GAAO,OAAOY,EAAKwf,cAAcvc,KAAK+I,GAAK3M,EAAQgD,KAAK,KAAMjD,IAAA,IAAW,SAAUA,GAAO,OAAOY,EAAKwf,cAAcvc,KAAK+I,GAAKtM,EAAO2C,KAAK,KAAMjD,IAAA,IAAW+M,SAAQ,WAClLnM,EAAKuf,cAAgBjf,IACrBN,EAAKuf,YAAc,aAKnCzB,GAAYne,UAAUggB,MAAQ,WACtBtf,KAAKme,SACLne,KAAKme,QAAA,EACDne,KAAKsQ,UACLtQ,KAAKsQ,SAASgP,QAClBtf,KAAKwe,QAAQ,IAAIpY,EAAWjB,OAAA,EAGpCsY,GAAYne,UAAU6U,MAAQ,SAAUpV,GACpC,IAAIC,EAAkBgB,KAAKuf,kBAAoBvf,KAAKuf,gBAAkB,CAAC,GACvE,GAAIre,EAAOlC,EAAgBD,GACvB,OAAOC,EAAeD,GAC1B,IAAIM,EAAcW,KAAKoQ,OAAOrR,GAC9B,IAAKM,EACD,MAAM,IAAI+G,EAAWiK,SAAS,SAAWtR,EAAY,4BAKzD,OAHIM,EAAwB,IAAIW,KAAKuQ,GAAGiP,MAAMzgB,EAAWM,EAAaW,OAChDiS,KAAOjS,KAAKuQ,GAAG0B,KAAKkC,MAAMpV,GAChDC,EAAeD,GAAaM,CAAA,EAGzBoe,IA7JP,SAASA,KAAA,CAsMb,SAASgC,GAAgB1gB,EAAMC,EAASK,EAAQM,EAAOG,EAAMG,EAAUY,GACnE,MAAO,CACH0E,KAAMxG,EACN6T,QAAS5T,EACT0Y,OAAQrY,EACRgU,MAAO1T,EACP8U,KAAM3U,EACN4S,SAAUzS,EACVyf,KAAMrgB,IAAWwB,EAAY,IAAM,KAAOlB,EAAQ,IAAM,KAAOG,EAAO,KAAO,IAAM6f,GAAgB3gB,GAAA,CAG3G,SAAS2gB,GAAgB5gB,GACrB,MAA0B,iBAAZA,EACVA,EACAA,EAAW,IAAM,GAAG2G,KAAKlG,KAAKT,EAAS,KAAO,IAAO,GAG7D,SAAS6gB,GAAkB7gB,EAAMC,EAASK,GACtC,MAAO,CACHkG,KAAMxG,EACN0T,QAASzT,EACTwT,QAASnT,EACT4U,YAAa,KACbhB,WAhtFsBtT,EAgtFY,SAAUZ,GAAS,MAAO,CAACA,EAAMwG,KAAMxG,EAAA,EAAhDM,EA/sFhB6G,QAAO,SAAUnH,EAAQC,EAAMK,GAIxC,OAHIA,EAAeM,EAAUX,EAAMK,MAE/BN,EAAOM,EAAa,IAAMA,EAAa,IACpCN,CAAA,GACR,CAAC,KANR,IAA8BY,CAAA,CAutF9B,IAAIkgB,GAAY,SAAU9gB,GACtB,IAGI,OAFAA,EAAY+gB,KAAK,CAAC,KAClBD,GAAY,WAAc,MAAO,CAAC,KAC3B,CAAC,IAEZ,MAAO9gB,GAEH,OADA8gB,GAAY,WAAc,OAAO3R,EAAA,EAC1BA,EAAA,GAIf,SAAS6R,GAAgB/gB,GACrB,OAAe,MAAXA,EACO,WAAa,EAEI,iBAAZA,EASK,KAFUK,EANML,GAOjBsE,MAAM,KAChBzD,OACC,SAAUd,GAAO,OAAOA,EAAIM,EAAA,EAG5B,SAAUN,GAAO,OAAO4D,EAAa5D,EAAKM,EAAA,EAT1C,SAAUN,GAAO,OAAO4D,EAAa5D,EAAKC,EAAA,EAGzD,IAAmCK,CAAA,CAUnC,SAAS2gB,GAASjhB,GACd,MAAO,GAAGmB,MAAMV,KAAKT,EAAA,CAEzB,IAAIkhB,GAAc,EAClB,SAASC,GAAgBnhB,GACrB,OAAkB,MAAXA,EACH,MACmB,iBAAZA,EACHA,EACA,IAAIoB,OAAOpB,EAAQ2G,KAAK,KAAM,KAE1C,SAASya,GAAaphB,EAAIe,EAAad,GAqDnC,SAASyB,EAAgB1B,GACrB,GAAmB,IAAfA,EAAM8P,KACN,OAAO,KACX,GAAmB,IAAf9P,EAAM8P,KACN,MAAM,IAAItM,MAAM,4CACpB,IAAIvD,EAAQD,EAAM+P,MAAOzP,EAAQN,EAAMiQ,MAAOrP,EAAYZ,EAAMgQ,UAQhE,OAR2EhQ,EAAYA,EAAMkQ,eAQtF,IAPQjQ,OAAA,IACXK,EACI,KACAS,EAAYsgB,WAAW/gB,IAASN,QAAA,IACpCM,EACIS,EAAYugB,WAAWrhB,IAASW,GAChCG,EAAYwgB,MAAMthB,EAAOK,IAASM,IAAaZ,EAAA,CAG3D,SAASM,EAAkBN,GACvB,IAwJekD,EAxJXxC,EAAYV,EAAYwG,KA+L5B,MAAO,CACHA,KAAM9F,EACN2Q,OAAQrR,EACR2V,OAjMJ,SAAgB3V,GACZ,IAAIuD,EAAQvD,EAAGkR,MAAOzN,EAAOzD,EAAG8P,KAAM3N,EAAOnC,EAAG2B,KAAM0B,EAASrD,EAAG4V,OAAQvR,EAAQrE,EAAGqW,MACrF,OAAO,IAAIrU,SAAQ,SAAU/B,EAASD,GAClCC,EAAU2M,GAAK3M,GACf,IAAIK,EAAQiD,EAAM8c,YAAY3f,GAC1BE,EAA4B,MAAjBN,EAAMuT,QACjB9S,EAAsB,QAAT0C,GAA2B,QAATA,EACnC,IAAK1C,GAAuB,WAAT0C,GAA8B,gBAATA,EACpC,MAAM,IAAID,MAAM,2BAA6BC,GACjD,IAMIvC,EANAY,GAAUK,GAAQkB,GAAU,CAAEvC,OAAQ,IAAKA,OAC/C,GAAIqB,GAAQkB,GAAUlB,EAAKrB,SAAWuC,EAAOvC,OACzC,MAAM,IAAI0C,MAAM,iEAEpB,GAAe,IAAX1B,EACA,OAAO7B,EAAQ,CAAE4V,YAAa,EAAGhP,SAAU,CAAC,EAAG8P,QAAS,GAAIb,gBAAA,IAK7C,SAAfvT,EAAyBvC,KACvBsC,EACF4b,GAAele,EAAA,CALnB,IAAID,EAAO,GACPkC,EAAW,GACXK,EAAc,EAKlB,GAAa,gBAATmB,EAAwB,CACxB,GAAmB,IAAfY,EAAMyL,KACN,OAAO7P,EAAQ,CAAE4V,YAAavT,EAAauE,SAAU5E,EAAU0U,QAAS,GAAIb,gBAAA,IAC7D,IAAfzR,EAAMyL,KACN/P,EAAK8D,KAAK3C,EAAMZ,EAAM8V,SAEtBrW,EAAK8D,KAAK3C,EAAMZ,EAAM6V,OAAOzU,EAAgB2C,IAAA,KAEhD,CACD,IAIkBhD,GAJdT,EAAKG,EACLH,EACI,CAACyC,EAAQlB,GACT,CAACkB,EAAQ,MACb,CAAClB,EAAM,OAAkB,GAAIe,EAAQtC,EAAG,GAC5C,GAAIG,EACA,IAAK,IAAIqC,EAAI,EAAGA,EAAItB,IAAUsB,EAC1BrD,EAAK8D,KAAK3C,EAAOgC,QAAA,IAASA,EAAME,GAC5B9C,EAAMmD,GAAMpC,EAAM+B,GAAIF,EAAME,IAC5B9C,EAAMmD,GAAMpC,EAAM+B,KACtBlC,EAAImH,QAAU9F,OAIlB,IAASa,EAAI,EAAGA,EAAItB,IAAUsB,EAC1BrD,EAAK8D,KAAK3C,EAAMZ,EAAMmD,GAAMpC,EAAM+B,KAClClC,EAAImH,QAAU9F,CAAA,CAIf,SAAPe,EAAiBtD,GACbA,EAAaA,EAAMme,OAAOzD,OAC9B3a,EAAKgC,SAAQ,SAAU/B,EAAKC,GAAK,OAAoB,MAAbD,EAAIka,QAAkBjY,EAAShC,GAAKD,EAAIka,MAAA,IAChFja,EAAQ,CACJ4V,YAAavT,EACbuE,SAAU5E,EACV0U,QAAkB,WAATlT,EAAoBtB,EAAOpC,EAAKyE,KAAI,SAAUxE,GAAO,OAAOA,EAAI0a,MAAA,IACzE5E,WAAY9V,GAAA,CAGpBkB,EAAImH,QAAU,SAAUrI,GACpBuC,EAAavC,GACbsD,EAAKtD,EAAA,EAETkB,EAAIkH,UAAY9E,CAAA,KAgIpBiT,QAAS,SAAUvW,GACf,IAAIqB,EAAQrB,EAAGkR,MAAOhO,EAAOlD,EAAG2B,KAChC,OAAO,IAAIK,SAAQ,SAAU/B,EAASD,GAClCC,EAAU2M,GAAK3M,GAef,IAdA,IAKIK,EALAM,EAAQS,EAAMgf,YAAY3f,GAC1BK,EAASmC,EAAKpC,OACdI,EAAS,IAAIb,MAAMU,GACnBe,EAAW,EACXS,EAAgB,EAEhBxC,EAAiB,SAAUC,GACvBA,EAAMA,EAAMme,OACXjd,EAAOlB,EAAIwhB,MAAQxhB,EAAI0a,SAEtBnY,IAAkBT,GACpB7B,EAAQiB,EAAA,EAEZe,EAAegc,GAAmBje,GAC7BsC,EAAI,EAAGA,EAAIvB,IAAUuB,EAEf,MADDY,EAAKZ,MAEXhC,EAAMM,EAAM6B,IAAIS,EAAKZ,KACjBkf,KAAOlf,EACXhC,EAAI8H,UAAYrI,EAChBO,EAAI+H,QAAUpG,IACZH,GAGO,IAAbA,GACA7B,EAAQiB,EAAA,KAGpBuB,IAAK,SAAUzC,GACX,IAAIY,EAAQZ,EAAGkR,MAAOnQ,EAAMf,EAAGmT,IAC/B,OAAO,IAAInR,SAAQ,SAAU/B,EAASD,GAClCC,EAAU2M,GAAK3M,GACf,IACIK,EADQM,EAAMyf,YAAY3f,GACd+B,IAAI1B,GACpBT,EAAI8H,UAAY,SAAUpI,GAAS,OAAOC,EAAQD,EAAMme,OAAOzD,OAAA,EAC/Dpa,EAAI+H,QAAU4V,GAAmBje,EAAA,KAGzC4Y,OArFW1V,EAqFEnD,EApFN,SAAUsB,GACb,OAAO,IAAIW,SAAQ,SAAU1B,EAASN,GAClCM,EAAUsM,GAAKtM,GACf,IAgBQM,EACAG,EAGAG,EApBJjB,EAAQoB,EAAQ6P,MAAOpP,EAAST,EAAQuU,OAAQrT,EAAQlB,EAAQsT,MAAO5U,EAAQsB,EAAQuX,MACvF3W,EAAkBM,IAAU,WAAuBA,EACnDD,EAAQvC,EAAMsY,MAIlB,GAJyBtY,EAAQA,EAAMsW,MACnCpW,EAAQA,EAAMogB,YAAY3f,GAC1B4B,EAASA,EAAMmf,aAAexhB,EAAQA,EAAMoY,MAAM/V,EAAMkE,MACxDzG,EAAc2B,EAAgB3B,GACpB,IAAVwC,EACA,OAAOjC,EAAQ,CAAEoa,OAAQ,KACzBxX,IACIjB,EAAMH,EACNQ,EAAOof,OAAO3hB,EAAakC,GAC3BK,EAAOqf,WAAW5hB,EAAakC,IAC/BmG,UAAY,SAAUpI,GAAS,OAAOM,EAAQ,CAAEoa,OAAQ1a,EAAMme,OAAOzD,QAAA,EACzEzY,EAAIoG,QAAU4V,GAAmBje,KAG7BY,EAAU,EACVG,GAAQe,GAAY,kBAAmBQ,EAEvCA,EAAOsf,cAAc7hB,GADrBuC,EAAOkW,WAAWzY,GAElBmB,EAAW,GACfH,EAAMqH,UAAY,SAAUpI,GACxB,IAAIC,EAASc,EAAM2Z,OACnB,OAAKza,GAELiB,EAAS2C,KAAK/B,EAAS7B,EAAO2C,MAAQ3C,EAAOkY,cACvCvX,IAAY2B,EACPjC,EAAQ,CAAEoa,OAAQxZ,SAC7BjB,EAAOmZ,YAJI9Y,EAAQ,CAAEoa,OAAQxZ,GAAA,EAMjCH,EAAMsH,QAAU4V,GAAmBje,GAAA,MAoD/CwY,WAxKJ,SAAoBxY,GAChB,IAAIiC,EAAQjC,EAAGkR,MAAOhQ,EAASlB,EAAG4V,OAAQ9T,EAAQ9B,EAAG4Y,MAAOrW,EAAUvC,EAAGgV,QAAS1S,EAAStC,EAAG2Y,OAC9F,OAAO,IAAI3W,SAAQ,SAAU/B,EAASK,GAClCL,EAAU2M,GAAK3M,GACf,IAAID,EAAQ8B,EAAMuW,MAAOzX,EAAQkB,EAAMuU,MACnCtV,EAAQkB,EAAMoe,YAAY3f,GAW1BX,GAVAgB,EAASf,EAAMyhB,aACf1gB,EACAA,EAAMsX,MAAMrY,EAAMwG,MAClBxG,EAAYuC,EACZD,EACI,aACA,OACJA,EACI,aACA,QACEpB,GAAY,kBAAmBH,EAErCA,EAAO6gB,cAAclgB,EAAgBd,GAAQZ,GAD7Ce,EAAOyX,WAAW9W,EAAgBd,GAAQZ,IAE9CD,EAAIsI,QAAU4V,GAAmB3d,GACjCP,EAAIqI,UAAYwE,IAAK,SAAU5M,GAC3B,IAOIY,EAGAG,EACAG,EAEAY,EAbAS,EAASxC,EAAI2a,OACZnY,GAILA,EAAOsf,QAAUX,GACjB3e,EAAOqD,MAAA,EACHhF,EAAkB2B,EAAO6W,SAASnW,KAAKV,GAGvCxB,GAFAA,EAA4BwB,EAAOuf,qBAEP/gB,EAA0BkC,KAAKV,GAC3DrB,EAAiBqB,EAAOoY,QAAQ1X,KAAKV,GAErCT,EAAyB,WAAc,MAAM,IAAI0B,MAAM,uBAC3DjB,EAAO2O,MAAQjP,EACfM,EAAOuW,KAAOvW,EAAO6W,SAAW7W,EAAOuf,mBAAqBvf,EAAOoY,QAHnC,WAAc,MAAM,IAAInX,MAAM,uBAI9DjB,EAAOwW,KAAOnM,GAAKtM,GACnBiC,EAAOoD,KAAO,WACV,IAAI3F,EAAQiB,KACRhB,EAAS,EACb,OAAOgB,KAAKkY,OAAM,WAAc,OAAOlZ,IAAWD,EAAMoZ,WAAapZ,EAAM8Y,MAAA,IAAWpQ,MAAK,WAAc,OAAO1I,CAAA,KAEpHuC,EAAO4W,MAAQ,SAAUnZ,GAUC,SAAlBC,IACA,GAAIF,EAAI2a,OACJ,IACI1a,GAAA,CAEJ,MAAOA,GACHuC,EAAOwW,KAAK/Y,EAAA,MAIhBuC,EAAOqD,MAAA,EACPrD,EAAO4W,MAAQ,WAAc,MAAM,IAAI3V,MAAM,6BAC7CjB,EAAOuW,MAAA,CArBf,IAAIxY,EAAmB,IAAI0B,SAAQ,SAAU/B,EAAkBD,GAC3DC,EAAmB2M,GAAK3M,GACxBF,EAAIsI,QAAU4V,GAAmBje,GACjCuC,EAAOwW,KAAO/Y,EACduC,EAAOuW,KAAO,SAAU9Y,GACpBuC,EAAOuW,KAAOvW,EAAO6W,SAAW7W,EAAOuf,mBAAqBvf,EAAOoY,QAAU7Y,EAC7E7B,EAAiBD,EAAA,KA0BzB,OARAD,EAAIqI,UAAYwE,IAAK,SAAU5M,GAC3BD,EAAIqI,UAAYnI,EAChBA,GAAA,IAEJsC,EAAO6W,SAAWxY,EAClB2B,EAAOuf,mBAAqB/gB,EAC5BwB,EAAOoY,QAAUzZ,EACjBjB,IACOK,CAAA,EAEXL,EAAQsC,IAvDJtC,EAAQ,QAwDbK,EAAA,KA0FPmU,MAAO,SAAUzU,GACb,IAAIC,EAAQD,EAAG4Y,MAAO7X,EAAQf,EAAGkR,MAC7BhQ,EAAQjB,EAAMoY,MAAOvW,EAAQ7B,EAAMoW,MACvC,OAAO,IAAIrU,SAAQ,SAAU/B,EAASD,GAClC,IAAIM,EAAQS,EAAMsf,YAAY3f,GAC1BE,EAASM,EAAMugB,aAAenhB,EAAQA,EAAM+X,MAAMnX,EAAMsF,OAExD5F,GADAN,EAAcoB,EAAgBI,IACVlB,EAAO6T,MAAMnU,GAAeM,EAAO6T,SACvDrM,UAAYwE,IAAK,SAAU5M,GAAM,OAAOC,EAAQD,EAAGme,OAAOzD,OAAA,IAC9D9Z,EAAIyH,QAAU4V,GAAmBje,EAAA,MAKjD,IAjUuBY,EAAIM,EACnBY,EAgUJS,GAjUuBrB,EAiUAjB,EAhUnB6B,EAASmf,IADMrgB,EAiUAZ,GAhUM+hB,kBAClB,CACH1Q,OAAQ,CACJ7K,KAAM5F,EAAG4F,KACTwb,OAAQlgB,EAAO0C,KAAI,SAAUxE,GAAS,OAAOkB,EAAMmf,YAAYrgB,EAAA,IAAWwE,KAAI,SAAUvE,GACpF,IAAID,EAAUC,EAAM4T,QAASvT,EAAgBL,EAAMgiB,cAC/CrhB,EAAWgB,EAAQ5B,GAEnBe,EAAiB,CAAC,EAkCtB,OAjCIT,EAAS,CACTkG,KAAMvG,EAAMuG,KACZ2R,WAAY,CACR3R,KAAM,KACNib,cAAA,EACAhG,SAPkB,MAAXzb,EAQP2T,SAAU/S,EACViT,QAAS7T,EACTiiB,cAAe3hB,EACfqY,QAAA,EACA+C,WAAYsF,GAAgBhhB,IAEhCyT,QAASwN,GAAShhB,EAAMiiB,YAAY1d,KAAI,SAAUxE,GAAa,OAAOC,EAAMoY,MAAMrY,EAAA,IAC7EwE,KAAI,SAAUxE,GACf,IAAIC,EAAOD,EAAMwG,KAAMlG,EAASN,EAAM2Y,OAAQ/X,EAAaZ,EAAMmiB,WAWjE,OAX6EniB,EAAUA,EAAM6T,QAEzFjT,EAAS,CACT4F,KAAMvG,EACN0T,SAHW/R,EAAQ5B,GAInB6T,QAAS7T,EACT2Y,OAAQrY,EACR6hB,WAAYvhB,EACZ8a,WAAYsF,GAAgBhhB,IAEhCe,EAAeogB,GAAgBnhB,IAAYY,CAAA,IAG/CwX,kBAAmB,SAAUpY,GAAW,OAAOe,EAAeogB,GAAgBnhB,GAAA,GAElFe,EAAe,OAAST,EAAO6X,WAChB,MAAXnY,IACAe,EAAeogB,GAAgBnhB,IAAYM,EAAO6X,YAE/C7X,CAAA,KAGf8hB,UAA2B,EAAhBtgB,EAAOhB,QAAe,WAAYI,EAAMmf,YAAYve,EAAO,OAC3C,oBAAdugB,WAA6B,SAASrZ,KAAKqZ,UAAUC,aACzD,oBAAoBtZ,KAAKqZ,UAAUC,YACpC,GAAGlhB,OAAOihB,UAAUC,UAAUC,MAAM,kBAAkB,GAAK,OAgRjBxiB,GAApBE,EAASsC,EAAG8O,OAAoB9O,EAAG6f,WAErEngB,GADAM,EAAStC,EAAO+hB,OAAOxd,IAAoClE,GAChD,CAAC,GAEhB,OADAiC,EAAOR,SAAQ,SAAU/B,GAAS,OAAOiC,EAASjC,EAAMwG,MAAQxG,CAAA,IACzD,CACHwiB,MAAO,SACPnD,YAAarf,EAAGqf,YAAYpc,KAAKjD,GACjCoV,MAAO,SAAUpV,GAEb,IADaiC,EAASjC,GAElB,MAAM,IAAIwD,MAAM,UAAUpC,OAAOpB,EAAM,gBAC3C,OAAOiC,EAASjC,EAAA,EAEpByiB,SAAA,IACAC,QAAS5B,GAAU/f,GACnBsQ,OAAQpR,EAAA,CAUhB,SAAS0iB,GAAuB3iB,EAAaC,EAAOK,EAAIM,GACpD,IAAIG,EAAcT,EAAGsiB,YAErB,OAFkCtiB,EAAG8T,UAE9B,CACHyO,QAVuBjiB,EAQQwgB,GAAanhB,EAAOc,EAAaH,GAAWZ,EAAY6iB,OAPxE1b,QAAO,SAAUnH,EAAMC,GAEtC,OADIA,EAASA,EAAG8C,OACRrC,EAASA,EAAS,CAAC,EAAGV,GAAOC,EAAOD,GAAA,GAC7CY,IAAA,CASP,SAASkiB,GAAyBxiB,EAAIN,GAClC,IAAIC,EAAQD,EAASwR,GACjBxR,EAAS2iB,GAAuBriB,EAAGyiB,aAAc9iB,EAAOK,EAAG6T,MAAOnU,GACtEM,EAAG4S,KAAOlT,EAAO6iB,OACjBviB,EAAG0hB,OAAOjgB,SAAQ,SAAU/B,GACxB,IAAIC,EAAYD,EAAMwG,KAClBlG,EAAG4S,KAAK7B,OAAO2Q,OAAO1V,MAAK,SAAUtM,GAAO,OAAOA,EAAIwG,OAASvG,CAAA,MAChED,EAAMkT,KAAO5S,EAAG4S,KAAKkC,MAAMnV,GACvBK,EAAGL,aAAsBK,EAAGmgB,QAC5BngB,EAAGL,GAAWiT,KAAOlT,EAAMkT,MAAA,IAM3C,SAAS8P,GAAcjiB,EAAIf,EAAMC,EAAYiB,GACzCjB,EAAW8B,SAAQ,SAAUzB,GACzB,IAAIM,EAASM,EAASZ,GACtBN,EAAK+B,SAAQ,SAAU/B,GACnB,IAAIC,EA9oGhB,SAASD,EAAsBC,EAAKK,GAGhC,OAFS4C,EAAyBjD,EAAKK,KAEzBL,EAAQgC,EAAShC,KAASD,EAAsBC,EAAOK,EAAA,CAHzE,CA8oGiDN,EAAKM,KACrCL,GAAa,UAAWA,QAAA,IAAYA,EAAS2C,SAC1C5C,IAAQe,EAAGkiB,YAAY1iB,WAAaP,aAAee,EAAGkiB,YACtD3gB,EAAQtC,EAAKM,EAAW,CACpBmC,IAAK,WAAc,OAAOxB,KAAKmU,MAAM9U,EAAA,EACrCoC,IAAK,SAAU1C,GACXuC,EAAetB,KAAMX,EAAW,CAAEsC,MAAO5C,EAAO6C,UAAA,EAAgBF,cAAA,EAAoBwS,YAAA,GAAY,IAKxGnV,EAAIM,GAAa,IAAIS,EAAG0f,MAAMngB,EAAWM,GAAA,OAM7D,SAASsiB,GAAgB5iB,EAAIN,GACzBA,EAAK+B,SAAQ,SAAU/B,GACnB,IAAK,IAAIC,KAAOD,EACRA,EAAIC,aAAgBK,EAAGmgB,cAChBzgB,EAAIC,EAAA,IAI3B,SAASkjB,GAAkBnjB,EAAGC,GAC1B,OAAOD,EAAEojB,KAAKC,QAAUpjB,EAAEmjB,KAAKC,OAAA,CAEnC,SAASC,GAAahjB,EAAIM,EAAYG,EAAiBf,GACnD,IAAIkB,EAAeZ,EAAG2R,UAClBlR,EAAgBghB,iBAAiBwB,SAAS,WAAariB,EAAasiB,QACpEtiB,EAAasiB,MAAQ3C,GAAkB,QAAS4C,GAAiB,IAAI,GAAI,IACzEnjB,EAAGojB,YAAY7f,KAAK,UAExB,IAAI/B,EAAQxB,EAAG0R,mBAAmB,YAAa1R,EAAGojB,YAAaxiB,GAC/DY,EAAMiB,OAAOhC,GACbe,EAAM4Q,YAAY5F,MAAM9M,GACxB,IAAIuC,EAAoBT,EAAM2d,QAAQxc,KAAKnB,GACvC/B,EAAY8K,GAAI8G,WAAa9G,GACjC6C,IAAS,WAGL,OAFA7C,GAAIqG,MAAQpP,EACZ+I,GAAI8G,UAAY5R,EACG,IAAfa,GAQAkiB,GAAyBxiB,EAAIS,GAkCFd,EAjCUW,IAiCjBZ,EAjCU8B,GAkC5Bwd,WAAW5F,SAAS,SACnB1Z,EAAMoV,MAAM,SAAS3S,IAAI,WAAWiG,MAAK,SAAU1I,GACtD,OAAsB,MAAfA,EAAsBA,EAAcC,CAAA,IAIxC+K,GAAa3B,QAAQpJ,IAvCnByI,MAAK,SAAU1I,GAAc,OA0CViC,EA1C4CjC,EA0ChCsC,EA1C4CR,EA0CrCT,EA1C4CN,EA2C3Fd,EAAQ,GACRD,GAFwBD,EA1C4CO,GA4CtDqjB,UACdzgB,EAAenD,EAAGkS,UAAY2R,GAAkB,EAAI7jB,EAAG6R,MAAOvQ,GAEzC,KADrBrB,EAAYA,EAASyE,QAAO,SAAUzE,GAAK,OAAOA,EAAEojB,KAAKC,SAAWphB,CAAA,KAC1DnB,QAGdd,EAAU+B,SAAQ,SAAUQ,GACxBtC,EAAM4D,MAAK,WACP,IAAI5D,EAAYiD,EACZlD,EAAYuC,EAAQ6gB,KAAKS,SAC7BC,GAA2B/jB,EAAIE,EAAWoB,GAC1CyiB,GAA2B/jB,EAAIC,EAAWqB,GAC1C6B,EAAenD,EAAGkS,UAAYjS,EAC9B,IAAIM,EAAOyjB,GAAc9jB,EAAWD,GACpCM,EAAKgV,IAAIvT,SAAQ,SAAU/B,GACvBgkB,GAAY3iB,EAAiBrB,EAAM,GAAIA,EAAM,GAAG0T,QAAS1T,EAAM,GAAGyT,QAAA,IAEtEnT,EAAK2jB,OAAOliB,SAAQ,SAAU/B,GAC1B,GAAIA,EAAOkkB,SACP,MAAM,IAAI7c,EAAW8c,QAAQ,4CAG7B,IAAIlkB,EAAUoB,EAAgBgf,YAAYrgB,EAAOwG,MACjDxG,EAAOsV,IAAIvT,SAAQ,SAAU/B,GAAO,OAAOokB,GAASnkB,EAASD,EAAA,IAC7DA,EAAOikB,OAAOliB,SAAQ,SAAU/B,GAC5BC,EAAQokB,YAAYrkB,EAAIwG,MACxB4d,GAASnkB,EAASD,EAAA,IAEtBA,EAAOskB,IAAIviB,SAAQ,SAAU/B,GAAW,OAAOC,EAAQokB,YAAYrkB,EAAA,OAG3E,IAAIY,EAAiB2B,EAAQ6gB,KAAKmB,eAClC,GAAI3jB,GAAkB2B,EAAQ6gB,KAAKC,QAAUphB,EAAY,CACrD6gB,GAAyB/iB,EAAIsB,GAC7BiB,EAAMke,gBAAkB,CAAC,EACzB,IAAIzf,EAAkBsD,EAAarE,GACnCM,EAAKgkB,IAAIviB,SAAQ,SAAU/B,GACvBe,EAAgBf,GAASC,EAAUD,EAAA,IAEvCkjB,GAAgBnjB,EAAI,CAACA,EAAGkjB,YAAY1iB,YACpCyiB,GAAcjjB,EAAI,CAACA,EAAGkjB,YAAY1iB,WAAYmB,EAAKX,GAAkBA,GACrEuB,EAAM+O,OAAStQ,EACf,IAIIG,EAJAY,EAA0B+D,EAAgBjF,GAc9C,OAbIkB,GACA+M,KAGAvO,EAAkB0K,GAAa8C,QAAO,WAEtC,IAEY9N,GAHZkB,EAAgBN,EAAe0B,KAEvBR,IACI9B,EAAc6L,GAAwB5I,KAAK,KAAM,MACrD/B,EAAcwH,KAAK1I,EAAaA,GAAA,IAIpCkB,GAA+C,mBAAvBA,EAAcwH,KAC1CsC,GAAa3B,QAAQnI,GAAiBZ,EAAgBoI,MAAK,WAAc,OAAOxH,CAAA,QAG5FjB,EAAM4D,MAAK,SAAU7D,GACjB,IAiGiBC,EAAWK,EAjGxBM,EAAY2B,EAAQ6gB,KAAKS,SAiGZ5jB,EAhGGW,EAgGQN,EAhGGN,EAiGvC,GAAGmB,MAAMV,KAAKH,EAASkR,GAAGuQ,kBAAkBhgB,SAAQ,SAAU/B,GAC1D,OAA+B,MAAxBC,EAAUD,IAAsBM,EAASkR,GAAGgT,kBAAkBxkB,EAAA,IAjGjEkjB,GAAgBnjB,EAAI,CAACA,EAAGkjB,YAAY1iB,YACpCyiB,GAAcjjB,EAAI,CAACA,EAAGkjB,YAAY1iB,WAAYR,EAAG2jB,YAAa3jB,EAAGkS,WACjE3P,EAAM+O,OAAStR,EAAGkS,SAAA,IAEtBhS,EAAM4D,MAAK,SAAU7D,GACbD,EAAG6R,MAAMmQ,iBAAiBwB,SAAS,WAC/BhJ,KAAKkK,KAAK1kB,EAAG6R,MAAMyR,QAAU,MAAQ9gB,EAAQ6gB,KAAKC,SAClDtjB,EAAG6R,MAAM4S,kBAAkB,gBACpBzkB,EAAGkS,UAAUuR,MACpBzjB,EAAG2jB,YAAc3jB,EAAG2jB,YAAYjf,QAAO,SAAUzE,GAAQ,MAAgB,UAATA,CAAA,KAGhEA,EAASqgB,YAAY,SAASnK,IAAI3T,EAAQ6gB,KAAKC,QAAS,kBAKxE,SAASrjB,IACL,OAAOC,EAAMa,OAASkK,GAAa3B,QAAQpJ,EAAMgf,OAANhf,CAAcqC,EAAMiP,WAAW7I,KAAK1I,GAC3EgL,GAAa3B,SAAA,CAFrB,GAIkBX,MAAK,WACnBgc,GAAoBxhB,EAAc7B,EAAA,KAjF3B2J,GAAa3B,UAN5B,IAAgCtJ,EAAIkC,EAAYK,EAAOjB,EAC/CpB,EAEAiD,CAAA,IA5CS4J,MAAMvK,KAVXb,EAAKR,GAAca,SAAQ,SAAU/B,GACjCgkB,GAAYjjB,EAAiBf,EAAWkB,EAAalB,GAAW0T,QAASxS,EAAalB,GAAWyT,QAAA,IAErGqP,GAAyBxiB,EAAIS,QAC7BiK,GAAa8C,QAAO,WAAc,OAAOxN,EAAGqf,GAAGgF,SAASrR,KAAKxR,EAAA,IAAWgL,MAAMvK,IAqC1F,IAAgCvC,EAAOC,CAAA,IA3BvC,SAAS0f,GAAoB3f,EAAIY,GAC7B8jB,GAAoB1kB,EAAGiS,UAAWrR,GAC9BA,EAAgB4Q,GAAG6R,QAAU,IAAO,GAAMziB,EAAgBmhB,iBAAiBwB,SAAS,UACpF3iB,EAAgB4Q,GAAGoT,kBAAkB,SAAStP,IAAIiF,KAAKkK,KAAM7jB,EAAgB4Q,GAAG6R,QAAU,GAAM,GAAI,WAExG,IAAIpjB,EAAe2jB,GAAkB,EAAI5jB,EAAG4R,MAAOhR,GACnDkjB,GAA2B9jB,EAAIA,EAAGiS,UAAWrR,GAc7C,IAbA,IAaSN,EAAK,EAAGS,EAbNgjB,GAAc9jB,EAAcD,EAAGiS,WAafgS,OAAQ3jB,EAAKS,EAAGD,OAAQR,IAAM,CACrD,IACIY,EAdM,SAAUjB,GACpB,GAAIA,EAAYgkB,OAAOnjB,QAAUb,EAAYikB,SAEzC,OADA/S,QAAQkB,KAAK,oCAAoCjR,OAAOnB,EAAYuG,KAAM,iEACnE,CAAE5D,WAAA,GAEb,IAAItC,EAAQM,EAAgByf,YAAYpgB,EAAYuG,MACpDvG,EAAYqV,IAAIvT,SAAQ,SAAU/B,GAC1B8I,IACAqI,QAAQ0T,MAAM,+CAA+CzjB,OAAOnB,EAAYuG,KAAM,KAAKpF,OAAOpB,EAAI2gB,MAC1GyD,GAAS9jB,EAAON,EAAA,IATV,CAaQe,EAAGT,IAErB,GAAuB,iBAAZY,EACP,OAAOA,EAAQ0B,KAAA,EAuG3B,SAASmhB,GAAc/jB,EAAWC,GAC9B,IAKIK,EALAM,EAAO,CACP0jB,IAAK,GACLhP,IAAK,GACL2O,OAAQ,IAGZ,IAAK3jB,KAASN,EACLC,EAAUK,IACXM,EAAK0jB,IAAIzgB,KAAKvD,GAEtB,IAAKA,KAASL,EAAW,CACrB,IAAIc,EAASf,EAAUM,GAAQY,EAASjB,EAAUK,GAClD,GAAKS,EAGA,CACD,IAAIe,EAAS,CACT0E,KAAMlG,EACNwkB,IAAK5jB,EACLgjB,UAAA,EACAI,IAAK,GACLhP,IAAK,GACL2O,OAAQ,IAEZ,GACA,IAAMljB,EAAO2S,QAAQG,SAAW,KAAU,IAAM3S,EAAOwS,QAAQG,SAAW,KACrE9S,EAAO2S,QAAQgC,OAASxU,EAAOwS,QAAQgC,KACxC5T,EAAOoiB,UAAA,EACPtjB,EAAKqjB,OAAOpgB,KAAK/B,OAEhB,CACD,IAAIS,EAAaxB,EAAOmT,UACpBnU,EAAamB,EAAOgT,UACpBjS,OAAA,EACJ,IAAKA,KAAWM,EACPxC,EAAWkC,IACZH,EAAOwiB,IAAIzgB,KAAK5B,GAExB,IAAKA,KAAWlC,EAAY,CACxB,IAAIuC,EAASC,EAAWN,GAAUZ,EAAStB,EAAWkC,GACjDK,EAEIA,EAAOqe,MAAQtf,EAAOsf,KAC3B7e,EAAOmiB,OAAOpgB,KAAKxC,GAFnBS,EAAOwT,IAAIzR,KAAKxC,EAAA,EAIA,EAApBS,EAAOwiB,IAAIxjB,QAAkC,EAApBgB,EAAOwT,IAAIxU,QAAqC,EAAvBgB,EAAOmiB,OAAOnjB,SAChEF,EAAKqjB,OAAOpgB,KAAK/B,EAAA,OAjCzBlB,EAAK0U,IAAIzR,KAAK,CAACvD,EAAOY,GAAA,CAsC9B,OAAON,CAAA,CAEX,SAASojB,GAAYhkB,EAAUC,EAAWK,EAASM,GAC/C,IAAIG,EAAQf,EAASwR,GAAGoT,kBAAkB3kB,EAAWK,EAAQuT,QACzD,CAAEA,QAASvT,EAAQuT,QAASoO,cAAe3hB,EAAQoV,MACnD,CAAEuM,cAAe3hB,EAAQoV,OAE7B,OADA9U,EAAQmB,SAAQ,SAAU/B,GAAO,OAAOokB,GAASrjB,EAAOf,EAAA,IACjDe,CAAA,CAEX,SAAS2jB,GAAoBzkB,EAAWK,GACpCoB,EAAKzB,GAAW8B,SAAQ,SAAU/B,GACzBM,EAASkR,GAAGuQ,iBAAiBwB,SAASvjB,KACnC8I,IACAqI,QAAQ0T,MAAM,gCAAiC7kB,GACnDgkB,GAAY1jB,EAAUN,EAAWC,EAAUD,GAAW0T,QAASzT,EAAUD,GAAWyT,SAAA,IAShG,SAAS2Q,GAASpkB,EAAOC,GACrBD,EAAM+kB,YAAY9kB,EAAIuG,KAAMvG,EAAI4T,QAAS,CAAE8E,OAAQ1Y,EAAI0Y,OAAQwJ,WAAYliB,EAAIqU,OAAA,CAEnF,SAASsP,GAAkB5jB,EAAIC,EAAOsC,GAClC,IAAIxC,EAAe,CAAC,EAepB,OAdmBsD,EAAMpD,EAAM8hB,iBAAkB,GACpChgB,SAAQ,SAAU/B,GAK3B,IAJA,IAAIC,EAAQsC,EAAS8d,YAAYrgB,GAE7BM,EAAUogB,GAAgBE,GAD1B9e,EAAU7B,EAAM4T,SACoC/R,GAAW,IAAI,OAAe7B,EAAMgiB,cAAengB,GAA8B,iBAAZA,GAAA,GACzHlB,EAAU,GACLG,EAAI,EAAGA,EAAId,EAAMiiB,WAAWphB,SAAUC,EAAG,CAC9C,IACAe,GADIZ,EAAWjB,EAAMoY,MAAMpY,EAAMiiB,WAAWnhB,KACzB8S,QACf3S,EAAQwf,GAAgBxf,EAASsF,KAAM1E,IAAWZ,EAASyX,SAAUzX,EAASihB,YAAA,EAAmBrgB,GAA8B,iBAAZA,GAAA,GACvHlB,EAAQiD,KAAK3C,EAAA,CAEjBnB,EAAaC,GAAa6gB,GAAkB7gB,EAAWM,EAASM,EAAA,IAE7Db,CAAA,CAaX,SAAS+jB,GAA2B9jB,EAAIC,EAAQK,GAE5C,IADA,IAAIM,EAAaN,EAASkR,GAAGuQ,iBACpBhhB,EAAI,EAAGA,EAAIH,EAAWE,SAAUC,EAAG,CACxC,IAAIG,EAAYN,EAAWG,GACvBe,EAAQxB,EAAS+f,YAAYnf,GACjClB,EAAGglB,WAAa,WAAYljB,EAC5B,IAAK,IAAIS,EAAI,EAAGA,EAAIT,EAAMogB,WAAWphB,SAAUyB,EAAG,CAC9C,IAAIxC,EAAY+B,EAAMogB,WAAW3f,GAC7BN,EAAUH,EAAMuW,MAAMtY,GAAW8T,QACjCvR,EAA+B,iBAAZL,EAAuBA,EAAU,IAAMoB,EAAMpB,GAAS0E,KAAK,KAAO,KACrF1G,EAAOiB,KACHe,EAAYhC,EAAOiB,GAAWgT,UAAU5R,MAExCL,EAAUuE,KAAOzG,SACVE,EAAOiB,GAAWgT,UAAU5R,GACnCrC,EAAOiB,GAAWgT,UAAUnU,GAAakC,EAAA,EAKhC,oBAAdogB,WAA6B,SAASrZ,KAAKqZ,UAAUC,aAC3D,oBAAoBtZ,KAAKqZ,UAAUC,YACpCjhB,EAAQ4jB,mBAAqB5jB,aAAmBA,EAAQ4jB,mBACxD,GAAG7jB,OAAOihB,UAAUC,UAAUC,MAAM,kBAAkB,GAAK,MAC3DviB,EAAGglB,YAAA,EAAa,CAGxB,SAASvB,GAAiBzjB,GACtB,OAAOA,EAAkBuE,MAAM,KAAKC,KAAI,SAAUxE,EAAOC,GAErD,IAAIK,GADJN,EAAQA,EAAMklB,QACGC,QAAQ,eAAgB,IACrCvkB,EAAU,MAAMoI,KAAK1I,GAAQA,EAAKiiB,MAAM,cAAc,GAAGhe,MAAM,KAAOjE,EAC1E,OAAOogB,GAAgBpgB,EAAMM,GAAW,KAAM,KAAKoI,KAAKhJ,GAAQ,KAAKgJ,KAAKhJ,GAAQ,OAAOgJ,KAAKhJ,GAAQ4B,EAAQhB,GAAuB,IAAbX,EAAA,IAIhI,IAAImlB,IAGAC,GAAQ9kB,UAAU+kB,iBAAmB,SAAU1kB,EAAQG,GACnDW,EAAKd,GAAQmB,SAAQ,SAAU/B,GAC3B,GAA0B,OAAtBY,EAAOZ,GAAqB,CAC5B,IAAIC,EAAUwjB,GAAiB7iB,EAAOZ,IAClCM,EAAUL,EAAQgf,QAEtB,GADA3e,EAAQqY,QAAA,EACJrY,EAAQgU,MACR,MAAM,IAAIjN,EAAWiR,OAAO,sCAChCrY,EAAQ8B,SAAQ,SAAU/B,GACtB,GAAIA,EAAI0V,KACJ,MAAM,IAAIrO,EAAWiR,OAAO,wDAChC,IAAKtY,EAAI6T,QACL,MAAM,IAAIxM,EAAWiR,OAAO,2DAEpCvX,EAAUf,GAAa6gB,GAAkB7gB,EAAWM,EAASL,EAAA,MAIzEolB,GAAQ9kB,UAAUglB,OAAS,SAAUvlB,GACjC,IAAIC,EAAKgB,KAAKuQ,GACdvQ,KAAKmiB,KAAKoC,aAAevkB,KAAKmiB,KAAKoC,aAC/B1jB,EAAOb,KAAKmiB,KAAKoC,aAAcxlB,GAC/BA,EACAA,EAAWC,EAAG0jB,UAAlB,IACIrjB,EAAa,CAAC,EACdM,EAAW,CAAC,EAUhB,OATAZ,EAAS+B,SAAQ,SAAU/B,GACvB8B,EAAOxB,EAAYN,EAAQojB,KAAKoC,cAChC5kB,EAAYZ,EAAQojB,KAAKS,SAAW,CAAC,EACrC7jB,EAAQslB,iBAAiBhlB,EAAYM,EAAA,IAEzCX,EAAGgS,UAAYrR,EACfsiB,GAAgBjjB,EAAI,CAACA,EAAGwlB,WAAYxlB,EAAIA,EAAGgjB,YAAY1iB,YACvDyiB,GAAc/iB,EAAI,CAACA,EAAGwlB,WAAYxlB,EAAIA,EAAGgjB,YAAY1iB,UAAWU,KAAKmiB,KAAKpB,QAAStgB,EAAKd,GAAWA,GACnGX,EAAGyjB,YAAchiB,EAAKd,GACfK,IAAA,EAEXokB,GAAQ9kB,UAAUmlB,QAAU,SAAU1lB,GAElC,OADAiB,KAAKmiB,KAAKmB,eAAiB9b,GAAgBxH,KAAKmiB,KAAKmB,gBAAkBxc,EAAK/H,GACrEiB,IAAA,EAEJokB,IA3CP,SAASA,KAAA,CA2Db,SAASM,GAAgB3lB,EAAWC,GAChC,IAAIK,EAAYN,EAAsB4lB,WAStC,OARKtlB,IACDA,EAAYN,EAAsB4lB,WAAI,IAAIC,GAAQpW,GAAY,CAC1DqW,OAAQ,GACR1R,UAAWpU,EACX4iB,YAAa3iB,KAEPojB,QAAQ,GAAGkC,OAAO,CAAEQ,QAAS,SAEpCzlB,EAAU8U,MAAM,WAE3B,SAAS4Q,GAAmBhmB,GACxB,OAAOA,GAA4C,mBAAxBA,EAAUimB,SAAA,CAyBzC,SAASC,GAAIlmB,GACT,OAAO0N,IAAS,WAEZ,OADA7C,GAAIiH,YAAA,EACG9R,GAAA,IAmBf,SAASmmB,GAAanmB,GAClB,QAAS,SAAUA,EAAA,CAEvB,IAAIomB,GAAW,SAAUpmB,EAAYC,GACjC,IAAIgB,KAGC,CACD,IAAIX,EAAK,IAAI8lB,GAIb,OAHIpmB,GAAe,MAAOA,GACtB8B,EAAOxB,EAAIN,GAERM,CAAA,CAPPwB,EAAOb,KAAMJ,UAAUC,OAAS,CAAEsC,EAAG,EAAGN,KAAM9C,EAAYqmB,GAAuB,EAAnBxlB,UAAUC,OAAab,EAAKD,GAAe,CAAEoD,EAAG,KA6BtH,SAASkjB,GAAStmB,EAAQC,EAAMK,GAC5B,IAAIM,EAAOyP,GAAIpQ,EAAMK,GACrB,IAAI4D,MAAMtD,GAAV,CAEA,GAAW,EAAPA,EACA,MAAMgH,aACV,GAAIue,GAAanmB,GACb,OAAO8B,EAAO9B,EAAQ,CAAE8C,KAAM7C,EAAMomB,GAAI/lB,EAAI8C,EAAG,IACnD,IAAIrC,EAAOf,EAAOsC,EAElB,GADI1B,EAAQZ,EAAOY,EACfyP,GAAI/P,EAAIN,EAAO8C,MAAQ,EAIvB,OAHA/B,EACMulB,GAASvlB,EAAMd,EAAMK,GACpBN,EAAOsC,EAAI,CAAEQ,KAAM7C,EAAMomB,GAAI/lB,EAAI8C,EAAG,EAAGd,EAAG,KAAM1B,EAAG,MACnD2lB,GAAUvmB,GAErB,GAA2B,EAAvBqQ,GAAIpQ,EAAMD,EAAOqmB,IAIjB,OAHAzlB,EACM0lB,GAAS1lB,EAAOX,EAAMK,GACrBN,EAAOY,EAAI,CAAEkC,KAAM7C,EAAMomB,GAAI/lB,EAAI8C,EAAG,EAAGd,EAAG,KAAM1B,EAAG,MACnD2lB,GAAUvmB,GAEjBqQ,GAAIpQ,EAAMD,EAAO8C,MAAQ,IACzB9C,EAAO8C,KAAO7C,EACdD,EAAOsC,EAAI,KACXtC,EAAOoD,EAAIxC,EAAQA,EAAMwC,EAAI,EAAI,GAEZ,EAArBiN,GAAI/P,EAAIN,EAAOqmB,MACfrmB,EAAOqmB,GAAK/lB,EACZN,EAAOY,EAAI,KACXZ,EAAOoD,EAAIpD,EAAOsC,EAAItC,EAAOsC,EAAEc,EAAI,EAAI,GAEvC9C,GAAkBN,EAAOY,EACzBG,IAASf,EAAOsC,GAChBkkB,GAAYxmB,EAAQe,GAEpBH,GAASN,GACTkmB,GAAYxmB,EAAQY,EAAA,EAG5B,SAAS4lB,GAAYxmB,EAAQC,GASpBkmB,GAAalmB,IARlB,SAASD,EAAaC,EAAQK,GAC1B,IAAIM,EAAON,EAAGwC,KAAM/B,EAAKT,EAAG+lB,GAAInlB,EAAIZ,EAAGgC,EAAGhC,EAAIA,EAAGM,EACjD0lB,GAASrmB,EAAQW,EAAMG,GACnBG,GACAlB,EAAaC,EAAQiB,GACrBZ,GACAN,EAAaC,EAAQK,EAAA,CAN7B,CASiBN,EAAQC,EAAA,CAE7B,SAASwmB,GAAczmB,EAAWC,GAC9B,IAAIK,EAAKomB,GAAoBzmB,GACzBW,EAAcN,EAAGqF,OACrB,GAAI/E,EAAYgF,KACZ,OAAO,EAKX,IAJA,IAAI7E,EAAIH,EAAYgC,MAChB1B,EAAKwlB,GAAoB1mB,GACzB8B,EAAcZ,EAAGyE,KAAK5E,EAAE+B,MACxBP,EAAIT,EAAYc,OACZhC,EAAYgF,OAAS9D,EAAY8D,MAAM,CAC3C,GAAIyK,GAAI9N,EAAEO,KAAM/B,EAAEslB,KAAO,GAA0B,GAArBhW,GAAI9N,EAAE8jB,GAAItlB,EAAE+B,MACtC,OAAO,EACXuN,GAAItP,EAAE+B,KAAMP,EAAEO,MAAQ,EACf/B,GAAKH,EAAcN,EAAGqF,KAAKpD,EAAEO,OAAOF,MACpCL,GAAKT,EAAcZ,EAAGyE,KAAK5E,EAAE+B,OAAOF,KAAA,CAE/C,OAAO,EAEX,SAAS8jB,GAAoB1mB,GACzB,IAAIM,EAAQ6lB,GAAanmB,GAAQ,KAAO,CAAED,EAAG,EAAGO,EAAGN,GACnD,MAAO,CACH2F,KAAM,SAAU3F,GAEZ,IADA,IAAIC,EAAiC,EAAnBY,UAAUC,OACrBR,GACH,OAAQA,EAAMP,GACV,KAAK,EAED,GADAO,EAAMP,EAAI,EACNE,EACA,KAAOK,EAAMA,EAAEgC,GAAK+N,GAAIrQ,EAAKM,EAAMA,EAAEwC,MAAQ,GACzCxC,EAAQ,CAAEqmB,GAAIrmB,EAAOA,EAAGA,EAAMA,EAAEgC,EAAGvC,EAAG,QAG1C,KAAOO,EAAMA,EAAEgC,GACXhC,EAAQ,CAAEqmB,GAAIrmB,EAAOA,EAAGA,EAAMA,EAAEgC,EAAGvC,EAAG,GAElD,KAAK,EAED,GADAO,EAAMP,EAAI,GACLE,GAAeoQ,GAAIrQ,EAAKM,EAAMA,EAAE+lB,KAAO,EACxC,MAAO,CAAEzjB,MAAOtC,EAAMA,EAAGsF,MAAA,GACjC,KAAK,EACD,GAAItF,EAAMA,EAAEM,EAAG,CACXN,EAAMP,EAAI,EACVO,EAAQ,CAAEqmB,GAAIrmB,EAAOA,EAAGA,EAAMA,EAAEM,EAAGb,EAAG,GACtC,SAER,KAAK,EACDO,EAAQA,EAAMqmB,GAG1B,MAAO,CAAE/gB,MAAA,EAAM,GAI3B,SAAS2gB,GAAUvmB,GACf,IAIQC,EACAK,EAJJM,IAA6B,QAAnBX,EAAKD,EAAOY,SAAA,IAAeX,OAAA,EAAyBA,EAAGmD,IAAM,KAA2B,QAAnB9C,EAAKN,EAAOsC,SAAA,IAAehC,OAAA,EAAyBA,EAAG8C,IAAM,GAC5IrC,EAAW,EAAPH,EAAW,IAAMA,GAAQ,EAAI,IAAM,GACvCG,IACId,EAAU,KAANc,EAAY,IAAM,IACtBT,EAAYI,EAAS,CAAC,EAAGV,GACzBY,EAAeZ,EAAOe,GAC1Bf,EAAO8C,KAAOlC,EAAakC,KAC3B9C,EAAOqmB,GAAKzlB,EAAaylB,GACzBrmB,EAAOe,GAAKH,EAAaG,GACzBT,EAAUS,GAAKH,EAAaX,IAC5BD,EAAOC,GAAKK,GACF8C,EAAIwjB,GAAatmB,IAE/BN,EAAOoD,EAAIwjB,GAAa5mB,EAAA,CAE5B,SAAS4mB,GAAa5mB,GAClB,IAAIC,EAAID,EAAGY,EACX,OADcZ,EAAIA,EAAGsC,GACbrC,EAAKD,EAAIua,KAAKsM,IAAI5mB,EAAEmD,EAAGpD,EAAEoD,GAAKnD,EAAEmD,EAAKpD,EAAIA,EAAEoD,EAAI,GAAK,EAGhE,SAAS0jB,GAAuB7mB,EAAQK,GAOpC,OANAoB,EAAKpB,GAAQyB,SAAQ,SAAU/B,GACvBC,EAAOD,GACPwmB,GAAYvmB,EAAOD,GAAOM,EAAON,IAEjCC,EAAOD,GA9nHnB,SAASA,EAAsBC,GAC3B,IACSK,EAEGM,EAHRG,EAAK,CAAC,EACV,IAAST,KAAKL,EACNkC,EAAOlC,EAAGK,KACNM,EAAIX,EAAEK,GACVS,EAAGT,IAAMM,GAAkB,iBAANA,GAAkB8D,EAAeK,IAAInE,EAAEoE,aAAepE,EAAIZ,EAAsBY,IAE7G,OAAOG,CAAA,CAPX,CA8nHiDT,EAAON,GAAA,IAE7CC,CAAA,CAGX,SAAS8mB,GAAe9mB,EAAKK,GACzB,OAAOL,EAAImN,KAAO9M,EAAI8M,KAAOlN,OAAOyB,KAAK1B,GAAKqM,MAAK,SAAUtM,GAAO,OAAOM,EAAIN,IAAQymB,GAAcnmB,EAAIN,GAAMC,EAAID,GAAA,IA7JvHY,EAAMwlB,GAAS7lB,YAAYwF,EAAK,CACxBuP,IAAK,SAAUtV,GAEX,OADAwmB,GAAYvlB,KAAMjB,GACXiB,IAAA,EAEX+lB,OAAQ,SAAUhnB,GAEd,OADAsmB,GAASrlB,KAAMjB,EAAKA,GACbiB,IAAA,EAEXgmB,QAAS,SAAUjnB,GACf,IAAIC,EAAQgB,KAEZ,OADAjB,EAAK+B,SAAQ,SAAU/B,GAAO,OAAOsmB,GAASrmB,EAAOD,EAAKA,EAAA,IACnDiB,IAAA,IAGZmE,GAAkB,WACjB,OAAOshB,GAAoBzlB,KAAA,EAE/B8E,IA8IJ,IAAImhB,GAAQ,CAAC,EAETC,GAAkB,CAAC,EACnBC,IAAA,EACJ,SAASC,GAAwBrnB,GAC7B8mB,GAAuBK,GAAiBnnB,GACnConB,KACDA,IAAA,EACAzjB,YAAW,WACPyjB,IAAA,EAGAE,GAFYH,KACZA,GAAkB,CAAC,GAAD,GAEnB,IAGX,SAASG,GAAqBtnB,EAAcC,QAAA,IACpCA,IAAyCA,GAAA,GAC7C,IAAIK,EAAkB,IAAIqE,IAC1B,GAAI3E,EAAaoN,IACb,IAAK,IAAIxM,EAAK,EAAGG,EAAKb,OAAO0V,OAAOsR,IAAQtmB,EAAKG,EAAGD,OAAQF,IAExD2mB,GADIzlB,EAAWf,EAAGH,GACgBZ,EAAcM,EAAiBL,QAIrE,IAAK,IAAIiB,KAAOlB,EAAc,CAC1B,IAGQ8B,EAHJS,EAAQ,yBAAyBilB,KAAKtmB,GACtCqB,IACIrB,EAASqB,EAAM,GAAIA,EAAYA,EAAM,IACrCT,EAAWolB,GAAM,SAAS9lB,OAAOF,EAAQ,KAAKE,OAAOmB,MAErDglB,GAAwBzlB,EAAU9B,EAAcM,EAAiBL,GAAA,CAIjFK,EAAgByB,SAAQ,SAAU/B,GAAW,OAAOA,GAAA,IAExD,SAASunB,GAAwBvnB,EAAUC,EAAcK,EAAoBM,GAEzE,IADA,IAAIG,EAAoB,GACfG,EAAK,EAAGY,EAAK5B,OAAOunB,QAAQznB,EAAS0nB,QAAQ9O,OAAQ1X,EAAKY,EAAGhB,OAAQI,IAAM,CAGhF,IAFA,IAAIqB,EAAKT,EAAGZ,GAAKnB,EAAYwC,EAAG,GAC5BN,EAAkB,GACbK,EAAK,EAAGjB,EAF6BkB,EAAG,GAEXD,EAAKjB,EAAUP,OAAQwB,IAAM,CAC/D,IAAIY,EAAQ7B,EAAUiB,GAClBykB,GAAe9mB,EAAciD,EAAMykB,QACnCzkB,EAAMsU,YAAYzV,SAAQ,SAAU/B,GAAW,OAAOM,EAAmBgV,IAAItV,EAAA,IAExEY,GACLqB,EAAgB4B,KAAKX,EAAA,CAGzBtC,GACAG,EAAkB8C,KAAK,CAAC9D,EAAWkC,GAAA,CAE3C,GAAIrB,EACA,IAAK,IAAIwC,EAAK,EAAGE,EAAsBvC,EAAmBqC,EAAKE,EAAoBxC,OAAQsC,IAAM,CAC7F,IAAIG,EAAKD,EAAoBF,GAAKrD,EAAYwD,EAAG,GAAItB,EAAkBsB,EAAG,GAC1EvD,EAAS0nB,QAAQ9O,MAAM7Y,GAAakC,CAAA,EAKhD,SAAS2lB,GAAUvmB,GACf,IAAI6B,EAAQ7B,EAAG+J,OACXxK,EAAYS,EAAG8S,MAAMC,UACzB,GAAIlR,EAAM0P,eAAiBvR,EAAGuQ,MAC1B,OAAO1O,EAAM4P,eAAepK,MAAK,WAAc,OAAOxF,EAAMyP,YACxD7D,GAAU5L,EAAMyP,aAChBtR,CAAA,IACR6B,EAAM0P,eAAA,EACN1P,EAAMyP,YAAc,KACpBzP,EAAM2O,cAAA,EACN,IAAI5R,EAAgBiD,EAAM2kB,cACtBzkB,EAAkBmX,KAAKuN,MAAiB,GAAXzmB,EAAG0mB,OAChCzkB,GAAA,EACJ,SAAStD,IACL,GAAIkD,EAAM2kB,gBAAkB5nB,EACxB,MAAM,IAAIoH,EAAWlB,eAAe,2BAI5B,SAAZ5C,IAA0B,OAAO,IAAIyH,IAAa,SAAUjL,EAASO,GAErE,GADAN,KACKY,EACD,MAAM,IAAIyG,EAAWf,WACzB,IAAIrE,EAASZ,EAAGmF,KACZlE,EAAMY,EAAM8kB,aAAe5kB,EAC3BxC,EAAU4R,KAAKvQ,GACfrB,EAAU4R,KAAKvQ,EAAQmB,GAC3B,IAAKd,EACD,MAAM,IAAI+E,EAAWf,WACzBhE,EAAI+F,QAAU4V,GAAmB3d,GACjCgC,EAAI2lB,UAAYrb,GAAKvL,EAAG6mB,gBACxB5lB,EAAI6lB,gBAAkBvb,IAAK,SAAU5M,GAEjC,IAIQC,EALRwD,EAAqBnB,EAAI+c,YACrBnc,EAAM8kB,aAAe3mB,EAAGsa,SAASyM,cACjC9lB,EAAI+F,QAAU6V,GACdza,EAAmB8c,QACnBje,EAAIoY,OAAOpI,SACPrS,EAASW,EAAUynB,eAAepmB,IAC/BmG,UAAYnI,EAAOoI,QAAUuE,IAAK,WACrCtM,EAAO,IAAI+G,EAAWihB,eAAe,YAAYlnB,OAAOa,EAAQ,wBAIpEwB,EAAmB4E,QAAU4V,GAAmB3d,GAC5CN,EAASA,EAAEuoB,WAAahO,KAAKiO,IAAI,EAAG,IAAM,EAAIxoB,EAAEuoB,WACpDpmB,EAAanC,EAAS,EACtBqB,EAAGuQ,MAAQtP,EAAIoY,OACXpX,GACAqc,GAAoBte,EAAIoC,GAE5B6f,GAAajiB,EAAIrB,EAAS,GAAIyD,EAAoBnD,GAAA,GAEvDA,GACHgC,EAAI8F,UAAYwE,IAAK,WACjBnJ,EAAqB,KACrB,IA5cczD,EAAIC,EAAOK,EA5rBRM,EAg0BDG,EAwUZG,EAAQG,EAAGuQ,MAAQtP,EAAIoY,OACvB5Y,EAAmBuB,EAAMnC,EAAM6gB,kBACnC,GAA8B,EAA1BjgB,EAAiBhB,OACjB,IACI,IAAIyB,EAAWrB,EAAMme,YA3oCR,KADJze,EA4oC4CkB,GA3oCnDhB,OAAeF,EAAW,GAAKA,EA2oCuC,YACxE,GAAIsC,EAAM8kB,WAjdA/nB,EAkdeiB,EAldRZ,EAkdeiC,GAld1BvC,EAkdeqB,GAjdlC0mB,MAAQ9nB,EAAMojB,QAAU,GACvB/iB,EAAeN,EAAGiS,UAAY2R,GAAkB,EAAI3jB,EAAOK,GAC/DN,EAAG0jB,YAAcrgB,EAAMpD,EAAM8hB,iBAAkB,GAC/CiB,GAAchjB,EAAI,CAACA,EAAGylB,YAAa/jB,EAAKpB,GAAeA,QAidnC,GADAwjB,GAA2BziB,EAAIA,EAAG4Q,UAAW1P,KA5c7DxB,EAAOgjB,GADWH,GAAkB,GADb7iB,EA+coBM,GA9cAuQ,MA8cIrP,GA7cTxB,EAAGkR,YAC/BqD,IAAIxU,QAAUC,EAAKkjB,OAAO3X,MAAK,SAAUtM,GAAM,OAAOA,EAAGsV,IAAIxU,QAAUd,EAAGikB,OAAOnjB,MAAA,OA4c9BwC,EAKzC,OAJA6N,QAAQkB,KAAK,oLACbnR,EAAMoR,QACNlP,EAAkBlC,EAAMmiB,QAAU,EAClC/f,GAAA,EACOvD,EAAQwD,KAGvBuf,GAAyBzhB,EAAIkB,EAAA,CAEjC,MAAOvC,GAAA,CAEXwP,GAAY3L,KAAKxC,GACjBH,EAAMunB,gBAAkB7b,IAAK,SAAU5M,GACnCkD,EAAMwlB,SAAA,EACNrnB,EAAGse,GAAG,iBAAiBrM,KAAKtT,EAAA,IAEhCkB,EAAMynB,QAAU/b,IAAK,SAAU5M,GAC3BqB,EAAGse,GAAG,SAASrM,KAAKtT,EAAA,IAEpBmC,IArWYpB,EAsWOM,EAAG8S,MAtWN5R,EAsWaN,EArWrCf,EAAYH,EAAGqT,UAAWrT,EAAcA,EAAG6hB,YAC9CoD,GAAmB9kB,IAChBqB,IAASkN,IACTkW,GAAgBzkB,EAAWH,GAAamV,IAAI,CAAE1P,KAAMjE,IAAQuK,MAAM/E,IAmW9DhI,GAAA,GACDO,EAAA,IACJwM,OAAM,SAAU9M,GACf,OAAQ,MAAAA,OAAA,EAA0CA,EAAIwG,MAClD,IAAK,eACD,GAA2B,EAAvBtD,EAAMgP,eAGN,OAFAhP,EAAMgP,iBACNf,QAAQkB,KAAK,uDACN9O,IAEX,MACJ,IAAK,eACD,GAAsB,EAAlBH,EAEA,OADAA,EAAkB,EACXG,IAInB,OAAOyH,GAAaoB,OAAOpM,EAAA,IAvF/B,IAxQIM,EAwQAS,EAAiBmC,EAAM0lB,eAC3BnlB,EAAqB,KAAMtB,GAAA,EAwF3B,OAAO6I,GAAasC,KAAK,CACrBrN,GACsB,oBAAdoiB,UAA4BrX,GAAa3B,WAxWrCgZ,UAAUwG,eACtB,WAAW7f,KAAKqZ,UAAUC,aACzB,iBAAiBtZ,KAAKqZ,UAAUC,YACnBlO,UAAU6R,UAGrB,IAAIjkB,SAAQ,SAAUhC,GACZ,SAATC,IAAuB,OAAOmU,UAAU6R,YAAYlZ,QAAQ/M,EAAA,CAChEM,EAAawoB,YAAY7oB,EAAQ,KACjCA,GAAA,IACD8M,SAAQ,WAAc,OAAOgc,cAAczoB,EAAA,IANnC0B,QAAQqH,WAoW0DX,KAAKnF,KAC/EmF,MAAK,WAGJ,OAFA1I,IACAkD,EAAM8lB,kBAAoB,GACnBhe,GAAa3B,QAAQ6c,IAAI,WAAc,OAAO7kB,EAAGse,GAAGsJ,MAAM3V,KAAKjS,EAAG6nB,IAAA,KAAUxgB,MAAK,SAAS1I,IAC7F,GAAqC,EAAjCkD,EAAM8lB,kBAAkBloB,OAAY,CACpC,IAAIb,EAAeiD,EAAM8lB,kBAAkB7hB,OAAOsB,GAAiBV,GAEnE,OADA7E,EAAM8lB,kBAAoB,GACnBhe,GAAa3B,QAAQ6c,IAAI,WAAc,OAAOjmB,EAAaoB,EAAG6nB,IAAA,KAAUxgB,KAAK1I,EAAA,QAG7F+M,SAAQ,WACH7J,EAAM2kB,gBAAkB5nB,IACxBiD,EAAM8lB,kBAAoB,KAC1B9lB,EAAM0P,eAAA,EAAgB,IAE3B9F,OAAM,SAAU9M,GACfkD,EAAMyP,YAAc3S,EACpB,IACIyD,GAAsBA,EAAmB8c,OAAA,CAE7C,MAAOvgB,GAAA,CAIP,OAHIC,IAAkBiD,EAAM2kB,eACxBxmB,EAAG8nB,SAEAra,GAAU9O,EAAA,IAClB+M,SAAQ,WACP7J,EAAM2O,cAAA,EACN9Q,GAAA,IACD2H,MAAK,WACJ,IACQpI,EAWR,OAZI6B,IACI7B,EAAe,CAAC,EACpBe,EAAG2gB,OAAOjgB,SAAQ,SAAU9B,GACxBA,EAAMoR,OAAOoC,QAAQ1R,SAAQ,SAAU/B,GAC/BA,EAAIwG,OACJlG,EAAa,SAASc,OAAOC,EAAGmF,KAAM,KAAKpF,OAAOnB,EAAMuG,KAAM,KAAKpF,OAAOpB,EAAIwG,OAAS,IAAI4f,IAAA,IAAoB,CAAC,CAAC,UAEzH9lB,EAAa,SAASc,OAAOC,EAAGmF,KAAM,KAAKpF,OAAOnB,EAAMuG,KAAM,MAAQlG,EAAa,SAASc,OAAOC,EAAGmF,KAAM,KAAKpF,OAAOnB,EAAMuG,KAAM,WAAa,IAAI4f,IAAA,IAAoB,CAAC,CAAC,SAE/K5H,GAAaF,IAAkChL,KAAKhT,GACpDgnB,GAAqBhnB,GAAA,IAElBe,CAAA,IAIf,SAAS+nB,GAAcnpB,GACJ,SAAXD,EAAqBA,GAAU,OAAOC,EAAS0F,KAAK3F,EAAA,CAAxD,IAAkIY,EAAYN,EAAKN,GAAWe,EAAUT,GAA1F,SAAUN,GAAS,OAAOC,EAASopB,MAAMrpB,EAAA,IACvH,SAASM,EAAKA,GACV,OAAO,SAAUN,GACb,IAAIC,EAAOK,EAAQN,GACnB,OADyBA,EAAQC,EAAK2C,MAC/B3C,EAAK2F,KAAO5F,EACbA,GAA+B,mBAAfA,EAAM0I,KAEpB1I,EAAM0I,KAAK9H,EAAWG,GADtBa,EAAQ5B,GAASgC,QAAQoL,IAAIpN,GAAO0I,KAAK9H,EAAWG,GAAWH,EAAUZ,EAAA,EAIzF,OAAOM,EAAKN,EAALM,EAAA,CAyEX,SAASgpB,GAAItpB,EAAGC,EAAOK,GAEnB,IADA,IAAIM,EAASgB,EAAQ5B,GAAKA,EAAEmB,QAAU,CAACnB,GAC9Be,EAAI,EAAGA,EAAIT,IAASS,EACzBH,EAAOiD,KAAK5D,GAChB,OAAOW,CAAA,CA8GX,IAAI2oB,GAAyB,CACzB/G,MAAO,SACPhc,KAAM,yBACNgjB,MAAO,EACPzmB,OAhHJ,SAAsC1B,GAClC,OAAOX,EAASA,EAAS,CAAC,EAAGW,GAAO,CAAE+T,MAAO,SAAUpV,GAC/C,IAAI8B,EAAQT,EAAK+T,MAAMpV,GACnBC,EAAS6B,EAAMuP,OACf9O,EAAc,CAAC,EACfxC,EAAoB,GACxB,SAASkC,EAAkBjC,EAASC,EAASK,GACzC,IAAIM,EAAeugB,GAAgBnhB,GAC/Be,EAAawB,EAAY3B,GAAgB2B,EAAY3B,IAAiB,GACtEM,EAAuB,MAAXlB,EAAkB,EAAuB,iBAAZA,EAAuB,EAAIA,EAAQc,OAC5EgB,EAAsB,EAAV7B,EAehB,OAdI6B,EAAepB,EAASA,EAAS,CAAC,EAAGJ,GAAgB,CAAEkG,KAAM1E,EACvD,GAAGV,OAAOR,EAAc,kBAAkBQ,OAAOd,EAAckG,KAAM,KACrElG,EAAckG,KAAMijB,cAAenpB,EAAeopB,UAAW5nB,EAAW6nB,QAAS1pB,EAAS2pB,UAAW1oB,EAAWwa,WAAYsF,GAAgBhhB,GAAU2Y,QAAS7W,GAAaxB,EAAcqY,SACpM5X,EAAU8C,KAAK/B,GACVA,EAAa2f,cACd1hB,EAAkB8D,KAAK/B,GAEX,EAAZZ,GAIAe,EAHmC,IAAdf,EACjBlB,EAAQ,GACRA,EAAQmB,MAAM,EAAGD,EAAY,GACCjB,EAAU,EAAGK,GAEnDS,EAAU+S,MAAK,SAAU9T,EAAGC,GAAK,OAAOD,EAAE2pB,QAAU1pB,EAAE0pB,OAAA,IAC/C7nB,CAAA,CAEP9B,EAAaiC,EAAkBhC,EAAOkY,WAAWtE,QAAS,EAAG5T,EAAOkY,YACxE5V,EAAY,OAAS,CAACvC,GACtB,IAAK,IAAIM,EAAK,EAAGM,EAAKX,EAAOwT,QAASnT,EAAKM,EAAGE,OAAQR,IAAM,CACxD,IAAIS,EAAQH,EAAGN,GACf2B,EAAkBlB,EAAM8S,QAAS,EAAG9S,EAAA,CAiBxC,SAASuB,EAAiBtC,GACtB,IAZoBC,EAYhBK,EAAQN,EAAI4Y,MAAMP,MACtB,OAAO/X,EAAMopB,UAAYhpB,EAASA,EAAS,CAAC,EAAGV,GAAM,CAAE4Y,MAAO,CACtDP,MAAO/X,EAAMmpB,cACbpT,OAfYpW,EAeUD,EAAI4Y,MAAMvC,MAfb/V,EAeoBA,EAAMqpB,QAd9C,CACH7Z,KAAqB,IAAf7P,EAAM6P,KACR,EACA7P,EAAM6P,KACVC,MAAOuZ,GAAIrpB,EAAM8P,MAAO9P,EAAM+P,UAAY3O,EAAKqhB,QAAUrhB,EAAKohB,QAASniB,GACvE0P,WAAA,EACAC,MAAOqZ,GAAIrpB,EAAMgQ,MAAOhQ,EAAMiQ,UAAY7O,EAAKohB,QAAUphB,EAAKqhB,QAASpiB,GACvE4P,WAAA,OAQOlQ,CAAA,CAoDf,OAlDaU,EAASA,EAAS,CAAC,EAAGoB,GAAQ,CAAEuP,OAAQ3Q,EAASA,EAAS,CAAC,EAAGT,GAAS,CAAEkY,WAAYnY,EAAYyT,QAAS1T,EAAmBqY,kBAtB1I,SAAuBpY,GAEnB,OADIA,EAASuC,EAAY4e,GAAgBnhB,MACxBA,EAAO,MAoBmJyU,MAAO,SAAUzU,GACxL,OAAO8B,EAAM2S,MAAMnS,EAAiBtC,GAAA,EACrC4Y,MAAO,SAAU5Y,GAChB,OAAO8B,EAAM8W,MAAMtW,EAAiBtC,GAAA,EACrCwY,WAAY,SAAUvY,GACrB,IAAID,EAAKC,EAAI2Y,MAAMP,MAAOzX,EAAUZ,EAAG2pB,QAASrpB,EAAYN,EAAG0pB,UAAW3oB,EAAYf,EAAG4pB,UACzF,OAAKtpB,EAyCEwB,EAAM0W,WAAWlW,EAAiBrC,IACpCyI,MAAK,SAAU1I,GAAU,OAAOA,GAAUkB,EAAoBlB,EAAA,IAzCxD8B,EAAM0W,WAAWvY,GAC5B,SAASiB,EAAoBZ,GAqCzB,OA1BoBJ,OAAO6C,OAAOzC,EAAQ,CACtC8Y,SAAU,CAAExW,MAXhB,SAAmB5C,GACR,MAAPA,EACIM,EAAO8Y,SAASkQ,GAAItpB,EAAKC,EAAI+U,QAAU3T,EAAKqhB,QAAUrhB,EAAKohB,QAAS7hB,IACpEX,EAAI0Y,OACArY,EAAO8Y,SAAS9Y,EAAO6S,IAAIhS,MAAM,EAAGJ,GAC/BK,OAAOnB,EAAI+U,QACV3T,EAAKohB,QACLphB,EAAKqhB,QAAS9hB,IACpBN,EAAO8Y,UAAA,GAIf0I,mBAAoB,CAChBlf,MAAO,SAAU5C,EAAKC,GAClBK,EAAOwhB,mBAAmBwH,GAAItpB,EAAKqB,EAAKqhB,QAAS9hB,GAAUX,EAAA,GAGnEkY,WAAY,CACR1V,IAAK,WACD,OAAOnC,EAAO6X,UAAA,GAGtBhF,IAAK,CACD1Q,IAAK,WACD,IAAIzC,EAAMM,EAAO6S,IACjB,OAAqB,IAAdpS,EACHf,EAAI,GACJA,EAAImB,MAAM,EAAGJ,EAAA,GAGzB6B,MAAO,CACHH,IAAK,WACD,OAAOnC,EAAOsC,KAAA,cAmBlD,SAASinB,GAAc9oB,EAAGG,EAAGY,EAAIS,GA+B7B,OA9BAT,EAAKA,GAAM,CAAC,EACZS,EAAOA,GAAQ,GACfb,EAAKX,GAAGgB,SAAQ,SAAU/B,GACtB,IAIQC,EAAcK,EAEVM,EANPuB,EAAOjB,EAAGlB,IAIPC,EAAKc,EAAEf,GAAOM,EAAKY,EAAElB,GACP,iBAAPC,GAAiC,iBAAPK,GAAmBL,GAAMK,GACtDM,EAAauE,EAAYlF,MACZkF,EAAY7E,GAEzBwB,EAAGS,EAAOvC,GAAQkB,EAAElB,GAEA,WAAfY,EACLipB,GAAc5pB,EAAIK,EAAIwB,EAAIS,EAAOvC,EAAO,KAEnCC,IAAOK,IACZwB,EAAGS,EAAOvC,GAAQkB,EAAElB,IAGnBC,IAAOK,IACZwB,EAAGS,EAAOvC,GAAQkB,EAAElB,KAlBxB8B,EAAGS,EAAOvC,QAAA,CAAQ,IAqB1B0B,EAAKR,GAAGa,SAAQ,SAAU/B,GACjBmC,EAAOpB,EAAGf,KACX8B,EAAGS,EAAOvC,GAAQkB,EAAElB,GAAA,IAGrB8B,CAAA,CAGX,SAASgoB,GAAiB9pB,EAAYC,GAClC,MAAiB,WAAbA,EAAI6P,KACG7P,EAAI0B,KACR1B,EAAI0B,MAAQ1B,EAAI2V,OAAOpR,IAAIxE,EAAW0b,WAAA,CAGjD,IAAIqO,GAAkB,CAClBvH,MAAO,SACPhc,KAAM,kBACNgjB,MAAO,EACPzmB,OAAQ,SAAU/C,GAAY,OAAQU,EAASA,EAAS,CAAC,EAAGV,GAAW,CAAEoV,MAAO,SAAUxU,GAClF,IAAI2C,EAAYvD,EAASoV,MAAMxU,GAC3B6C,EAAaF,EAAU8N,OAAO8G,WA6GlC,OA5GsBzX,EAASA,EAAS,CAAC,EAAG6C,GAAY,CAAEoS,OAAQ,SAAU3V,GACpE,IAAIC,EAAU4K,GAAIqG,MACd5Q,EAAKL,EAAQmV,MAAMxU,GAAWwS,KAAMlQ,EAAW5C,EAAG0pB,SAAU5mB,EAAW9C,EAAG2pB,SAAU3mB,EAAWhD,EAAG4pB,SACtG,OAAQlqB,EAAI8P,MACR,IAAK,MACD,GAAI1M,EAASkQ,OAASvL,EAClB,MACJ,OAAO9H,EAAQyR,SAAS,aAAa,WAAc,OAAO5P,EAAe9B,EAAA,OAC7E,IAAK,MACD,GAAIoD,EAASkQ,OAASvL,GAAOzE,EAASgQ,OAASvL,EAC3C,MACJ,OAAO9H,EAAQyR,SAAS,aAAa,WAAc,OAAO5P,EAAe9B,EAAA,OAC7E,IAAK,SACD,GAAIkD,EAASoQ,OAASvL,EAClB,MACJ,OAAO9H,EAAQyR,SAAS,aAAa,WAAc,OAAO5P,EAAe9B,EAAA,OAC7E,IAAK,cACD,GAAIkD,EAASoQ,OAASvL,EAClB,MACJ,OAAO9H,EAAQyR,SAAS,aAAa,WAAc,OAwE3D,SAASpR,EAAgBM,EAAOG,EAAOG,GACnC,OAAOqC,EAAUqV,MAAM,CAAE1H,MAAOtQ,EAAOgV,QAAA,EAAegD,MAAO,CAAEP,MAAO5U,EAAY4S,MAAOtV,GAAS4T,MAAOzT,IACpGwH,MAAK,SAAU1I,GAChB,IAAIC,EAASD,EAAG0a,OAChB,OAAO5Y,EAAe,CAAEgO,KAAM,SAAUnO,KAAM1B,EAAQiR,MAAOtQ,IAAS8H,MAAK,SAAU1I,GACjF,OAAsB,EAAlBA,EAAI6V,YACG7T,QAAQoK,OAAOpM,EAAI6G,SAAS,IACnC5G,EAAOa,OAASI,EACT,CAAE2F,SAAU,GAAIgP,YAAa,EAAGC,gBAAA,GAGhCxV,EAAgBM,EAAOF,EAASA,EAAS,CAAC,EAAGK,GAAQ,CAAEgP,MAAO9P,EAAOA,EAAOa,OAAS,GAAIkP,WAAA,IAAoB9O,EAAA,OAXpI,CAxE8ElB,EAsE/CkR,MAtE+ClR,EAsEpCqW,MAAO,WApEjD,OAAO9S,EAAUoS,OAAO3V,GACxB,SAAS8B,EAAeG,GACpB,IAwFGjC,EAAOC,EAAKK,EAxFXgC,EAAUuI,GAAIqG,MACd7P,EAAOY,EAAIN,MAAQmoB,GAAiBrmB,EAAYxB,GACpD,IAAKZ,EACD,MAAM,IAAImC,MAAM,gBAMpB,MAJiB,YADjBvB,EAAmB,QAAbA,EAAI6N,MAA+B,QAAb7N,EAAI6N,KAAiBpP,EAASA,EAAS,CAAC,EAAGuB,GAAM,CAAEN,KAAMN,IAAUX,EAAS,CAAC,EAAGuB,IACpG6N,OACJ7N,EAAI2T,OAAS7U,EAAc,GAAIkB,EAAI2T,QAAA,IACnC3T,EAAIN,OACJM,EAAIN,KAAOZ,EAAc,GAAIkB,EAAIN,MAAA,IAgFlC3B,EA/EsBuD,EA+EVjD,EA/E0Be,GAgFzC,SADUpB,EA/E0BgC,GAgF7C6N,KACL9N,QAAQqH,QAAQ,IAChBrJ,EAAMuW,QAAQ,CAAErF,MAAOjR,EAAIiR,MAAOvP,KAAMrB,EAAeyW,MAAO,eAlFDrO,MAAK,SAAUnG,GAC1D,IAAIxC,EAAWsB,EAAKmD,KAAI,SAAUxE,EAAKC,GACnC,IAgBQK,EACAM,EAEIG,EAnBRG,EAAgBqB,EAAetC,GAC/B6B,EAAM,CAAEuG,QAAS,KAAMD,UAAW,MA6BtC,MA5BiB,WAAbnG,EAAI6N,KACJ5M,EAASoQ,KAAK7S,KAAKqB,EAAK9B,EAAKkB,EAAeoB,GAE1B,QAAbL,EAAI6N,WAAA,IAAkB5O,GACvBZ,EAAsB8C,EAASkQ,KAAK7S,KAAKqB,EAAK9B,EAAKiC,EAAI2T,OAAO3V,GAAIqC,GAC3D,MAAPtC,GAAsC,MAAvBM,IAEf2B,EAAIN,KAAK1B,GADTD,EAAMM,EAEDmD,EAAWgY,UACZzX,EAAa/B,EAAI2T,OAAO3V,GAAIwD,EAAWoQ,QAAS7T,MAKpDM,EAAaupB,GAAc3oB,EAAee,EAAI2T,OAAO3V,KACrDW,EAAsB0C,EAASgQ,KAAK7S,KAAKqB,EAAKxB,EAAYN,EAAKkB,EAAeoB,MAE1EvB,EAAmBkB,EAAI2T,OAAO3V,GAClCC,OAAOyB,KAAKf,GAAqBmB,SAAQ,SAAU/B,GAC3CmC,EAAOpB,EAAkBf,GACzBe,EAAiBf,GAAWY,EAAoBZ,GAGhDgE,EAAajD,EAAkBf,EAASY,EAAoBZ,GAAA,MAKrE8B,CAAA,IAEX,OAAOyB,EAAUoS,OAAO1T,GAAKyG,MAAK,SAAU1I,GAExC,IADA,IAAIC,EAAWD,EAAG6G,SAAUvG,EAAUN,EAAG2W,QAAS/V,EAAcZ,EAAG6V,YAC1D9U,GADuEf,EAAaA,EAAG8V,WACnF,GAAG/U,EAAIM,EAAKP,SAAUC,EAAG,CAClC,IAAIG,GAAUZ,GAAuBe,GAALN,GAC5Be,EAAM/B,EAASgB,GACJ,MAAXG,EACAY,EAAIuG,SAAWvG,EAAIuG,QAAQpI,EAASc,IAGpCe,EAAIsG,WAAatG,EAAIsG,UAAuB,QAAbnG,EAAI6N,MAAkBvN,EAAexB,GAChEkB,EAAI2T,OAAO7U,GACXG,EAAA,CAIZ,MAAO,CAAE2F,SAAU5G,EAAU0W,QAASrW,EAASuV,YAAajV,EAAakV,WAAY9V,EAAA,IACtF8M,OAAM,SAAU7M,GAEf,OADAF,EAASgC,SAAQ,SAAU/B,GAAO,OAAOA,EAAIqI,SAAWrI,EAAIqI,QAAQpI,EAAA,IAC7D+B,QAAQoK,OAAOnM,EAAA,gBAiCtD,SAASkqB,GAAwBnqB,EAAMC,EAAOK,GAC1C,IACI,IAAKL,EACD,OAAO,KACX,GAAIA,EAAM0B,KAAKb,OAASd,EAAKc,OACzB,OAAO,KAEX,IADA,IAAIF,EAAS,GACJG,EAAI,EAAGG,EAAI,EAAGH,EAAId,EAAM0B,KAAKb,QAAUI,EAAIlB,EAAKc,SAAUC,EAC3B,IAAhCsP,GAAIpQ,EAAM0B,KAAKZ,GAAIf,EAAKkB,MAE5BN,EAAOiD,KAAKvD,EAAQuE,EAAU5E,EAAM2V,OAAO7U,IAAMd,EAAM2V,OAAO7U,MAC5DG,GAEN,OAAON,EAAOE,SAAWd,EAAKc,OAASF,EAAS,KAEpD,MAAOZ,GACH,OAAO,MAGf,IAAIoqB,GAAgC,CAChC5H,MAAO,SACPgH,OAAQ,EACRzmB,OAAQ,SAAU9C,GACd,MAAO,CACHmV,MAAO,SAAUpV,GACb,IAAIM,EAAQL,EAAKmV,MAAMpV,GACvB,OAAOU,EAASA,EAAS,CAAC,EAAGJ,GAAQ,CAAEiW,QAAS,SAAUtW,GAClD,IAAKA,EAAI8W,MACL,OAAOzW,EAAMiW,QAAQtW,GAEzB,IAAID,EAAemqB,GAAwBlqB,EAAI0B,KAAM1B,EAAIiR,MAAcmZ,OAAiB,UAAdpqB,EAAI8W,OAC9E,OAAI/W,EACOgL,GAAa3B,QAAQrJ,GAEzBM,EAAMiW,QAAQtW,GAAKyI,MAAK,SAAU1I,GAKrC,OAJAC,EAAIiR,MAAcmZ,OAAI,CAClB1oB,KAAM1B,EAAI0B,KACViU,OAAsB,UAAd3V,EAAI8W,MAAoBlS,EAAU7E,GAAOA,GAE9CA,CAAA,KAEZ2V,OAAQ,SAAU3V,GAGjB,MAFiB,QAAbA,EAAI8P,OACJ9P,EAAIkR,MAAcmZ,OAAI,MACnB/pB,EAAMqV,OAAO3V,EAAA,QAO5C,SAASsqB,GAAkBtqB,EAAKC,GAC5B,MAA2B,aAAnBD,EAAIkR,MAAMgO,QACZlf,EAAIuqB,SACLvqB,EAAIkR,MAAMsZ,UACqB,aAAhCxqB,EAAIkR,MAAMM,GAAGmK,SAAS5E,QACrB9W,EAAMoR,OAAO8G,WAAWsD,QAAA,CAGjC,SAASgP,GAAkBzqB,EAAMC,GAC7B,OAAQD,GACJ,IAAK,QACD,OAAOC,EAAI2V,SAAW3V,EAAI0Y,OAC9B,IAAK,MAEL,IAAK,UAEL,IAAK,QAEL,IAAK,aACD,OAAO,GAInB,IAAI+R,GAA0B,CAC1BlI,MAAO,SACPgH,MAAO,EACPhjB,KAAM,gBACNzD,OAAQ,SAAUnC,GACd,IAAIyC,EAASzC,EAAKyQ,OAAO7K,KACrBnC,EAAa,IAAI+hB,GAASxlB,EAAK6hB,QAAS7hB,EAAK8hB,SACjD,OAAOhiB,EAASA,EAAS,CAAC,EAAGE,GAAO,CAAEye,YAAa,SAAUrf,EAAQC,EAAMK,GACnE,GAAIuK,GAAI0f,QAAmB,aAATtqB,EACd,MAAM,IAAIoH,EAAW2Y,SAAS,+DAA+D5e,OAAOyJ,GAAI8f,UAE5G,OAAO/pB,EAAKye,YAAYrf,EAAQC,EAAMK,EAAA,EACvC8U,MAAO,SAAUhS,GAChB,IAAIE,EAAQ1C,EAAKwU,MAAMhS,GACnBG,EAASD,EAAM+N,OACf5N,EAAaF,EAAO4U,WAAYnY,EAAUuD,EAAOkQ,QACjDxR,EAAawB,EAAWiY,WAAYpZ,EAAWmB,EAAWgY,SAC1DtZ,EAAuBsB,EAAWwe,eAAiBjiB,EAAQyE,QAAO,SAAUzE,GAAS,OAAOA,EAAM2T,UAAY3T,EAAM6T,QAAQ6F,SAASjW,EAAWoQ,QAAA,IAChJ5T,EAAaS,EAASA,EAAS,CAAC,EAAG4C,GAAQ,CAAEqS,OAAQ,SAAU5U,GAGzC,SAAdG,EAAwBlB,GAExB,OADIA,EAAO,SAASoB,OAAOiC,EAAQ,KAAKjC,OAAOgC,EAAW,KAAKhC,OAAOpB,GAC9DM,EAAaN,KAChBM,EAAaN,GAAQ,IAAIomB,GAAA,CALlC,IA8JMpmB,EAAqB8B,EAASS,EA9JhCtC,EAAQc,EAAImQ,MACZ5Q,EAAeS,EAAIgf,eAAiBhf,EAAIgf,aAAe,CAAC,GAMxDnf,EAAaM,EAAY,IACzBnB,EAAemB,EAAY,SAC3Be,EAAOlB,EAAI+O,KACXxN,EAAkB,gBAAbvB,EAAI+O,KACP,CAAC/O,EAAIsV,OACQ,WAAbtV,EAAI+O,KACA,CAAC/O,EAAIY,MACLZ,EAAI6U,OAAO9U,OAAS,GAChB,CAACgpB,GAAiBrmB,EAAY1C,GAAK0D,QAAO,SAAUzE,GAAM,OAAOA,CAAA,IAAQe,EAAI6U,QAC7E,GAAIvU,EAAOiB,EAAG,GAAIY,EAAUZ,EAAG,GAsB7C,OArBIA,EAAWvB,EAAImQ,MAAcmZ,OAC7BzoB,EAAQP,IACRT,EAAWqmB,QAAQ5lB,IACfiB,EAAmB,WAATL,GAAqBZ,EAAKP,SAAWoC,EAAQpC,OAASqpB,GAAwB9oB,EAAMiB,GAAY,OAE1GvC,EAAaknB,QAAQ5lB,IAErBiB,GAAWY,KAsIblD,EArIuBkB,EAqIFY,EArIuBQ,EAqIdC,EArIuBW,EAAjBK,EAyJvDkQ,QAAQ1R,SAnBf,SAA0B9B,GACtB,IAAIK,EAAWN,EAAYC,EAAGuG,MAAQ,IACtC,SAAS5F,EAAWZ,GAChB,OAAc,MAAPA,EAAcC,EAAGyb,WAAW1b,GAAO,KAE3B,SAAfe,EAAyBf,GAAO,OAAOC,EAAGkiB,YAAcvgB,EAAQ5B,GAC9DA,EAAI+B,SAAQ,SAAU/B,GAAO,OAAOM,EAAS0mB,OAAOhnB,EAAA,IACpDM,EAAS0mB,OAAOhnB,EAAA,EACrB8B,GAAWS,GAASR,SAAQ,SAAU/B,EAAGC,GACtC,IAAIK,EAASwB,GAAWlB,EAAWkB,EAAQ7B,IAEf,IAAxBoQ,GAAI/P,EADJL,EAASsC,GAAW3B,EAAW2B,EAAQtC,OAEzB,MAAVK,GACAS,EAAaT,GACH,MAAVL,GACAc,EAAad,GAAA,SAlJAoB,GACD6B,EAAQ,CAAEJ,KAAMzB,EAAK0O,MAAOsW,GAAIhlB,EAAK4O,OACzClQ,EAAauV,IAAIpS,GACjBtC,EAAW0U,IAAIpS,KAGftC,EAAW0U,IAAIjR,GACftE,EAAauV,IAAIjR,GACjBd,EAAOkQ,QAAQ1R,SAAQ,SAAU/B,GAAO,OAAOkB,EAAYlB,EAAIwG,MAAM8O,IAAIjR,EAAA,KAEtEf,EAAMqS,OAAO5U,GAAK2H,MAAK,SAAU1I,GAapC,OAZIqB,GAAsB,QAAbN,EAAI+O,MAA+B,QAAb/O,EAAI+O,OACnClP,EAAWqmB,QAAQjnB,EAAI2W,SACnBxU,GACAA,EAAqBJ,SAAQ,SAAU9B,GACnC,IAAIK,EAAUS,EAAI6U,OAAOpR,KAAI,SAAUxE,GAAK,OAAOC,EAAIyb,WAAW1b,EAAA,IAC9DY,EAAQX,EAAI4T,QAAQ+W,WAAU,SAAU5qB,GAAQ,OAAOA,IAASyD,EAAWoQ,OAAA,IAC/E7T,EAAI2W,QAAQ5U,SAAQ,SAAU/B,GAAM,OAAOM,EAAQM,GAASZ,CAAA,IAC5DkB,EAAYjB,EAAIuG,MAAMygB,QAAQ3mB,EAAA,KAI1CL,EAAM8f,aAAe+G,GAAuB7mB,EAAM8f,cAAgB,CAAC,EAAGzf,GAC/DN,CAAA,OAWfqB,GARArB,EAAW,SAAUA,GAEFA,GAAfC,EAAKD,EAAG4Y,OAAkBP,MAD9B,IACqCpY,EAAQA,EAAGoW,MAChD,MAAO,CACHrW,EACA,IAAIomB,GAAgC,QAAtBpmB,EAAKC,EAAM8P,aAAA,IAAmB/P,EAAgBA,EAAKY,EAAK6hB,QAAgC,QAAtBxiB,EAAKA,EAAMgQ,aAAA,IAAmBhQ,EAAgBA,EAAKW,EAAK8hB,SAAA,EAG1H,CAClBjgB,IAAK,SAAUzC,GAAO,MAAO,CAACyD,EAAY,IAAI2iB,GAASpmB,EAAImT,KAAA,EAC3DoD,QAAS,SAAUvW,GAAO,MAAO,CAACyD,GAAY,IAAI2iB,IAAWa,QAAQjnB,EAAI2B,MAAA,EACzE8S,MAAOzU,EACP4Y,MAAO5Y,EACPwY,WAAYxY,IAuFhB,OArFA0B,EAAKL,GAAiBU,SAAQ,SAAUhC,GACpCE,EAAWF,GAAU,SAAUgB,GAC3B,IACId,KADAD,EAAS6K,GAAI0f,QAGbjqB,EADWgqB,GAAkBzf,GAAKvH,IAAUmnB,GAAkB1qB,EAAQgB,GAEpEA,EAAI4mB,OAAS,CAAC,EACd3nB,EACN,GAAIC,EAAa,CACb,IAAIW,EAAc,SAAUZ,GAExB,OADIA,EAAO,SAASoB,OAAOiC,EAAQ,KAAKjC,OAAOgC,EAAW,KAAKhC,OAAOpB,GAC9DM,EAAON,KACVM,EAAON,GAAQ,IAAIomB,GAAA,EAExBllB,EAAeN,EAAY,IAC3BkB,EAAiBlB,EAAY,SAC4BZ,GAAtBC,GAAnCD,EAAKqB,EAAgBtB,GAAQgB,IAAwB,GAAoBf,EAAG,IAOhF,IANe,UAAXD,GAAsBE,EAAawhB,eAAiB1gB,EAAI6U,OACxD9T,EAGAlB,EAAYX,EAAauG,MAAQ,KAHlB8O,IAAItV,IAKlBC,EAAawhB,aAAc,CAC5B,GAAe,UAAX1hB,EAGC,CACD,IAAIwC,EAA2B,UAAXxC,GAChBuC,GACAvB,EAAI6U,QACJtS,EAAMsV,MAAMlY,EAASA,EAAS,CAAC,EAAGK,GAAM,CAAE6U,QAAA,KAC9C,OAAOtS,EAAMvD,GAAQiB,MAAMC,KAAMJ,WAAW6H,MAAK,SAAUzI,GACvD,GAAe,UAAXF,EAAoB,CACpB,GAAIuC,GAAYvB,EAAI6U,OAChB,OAAOrT,EAAcmG,MAAK,SAAU1I,GAGhC,OAFIA,EAAgBA,EAAG0a,OACvBxZ,EAAa+lB,QAAQjnB,GACdC,CAAA,IAGf,IAAID,EAAQe,EAAI6U,OACV3V,EAAIya,OAAOlW,IAAIvC,GACfhC,EAAIya,QACN3Z,EAAI6U,OACJ1U,EAGAY,GAHamlB,QAAQjnB,EAAA,MAMxB,GAAe,eAAXD,EAAyB,CAC9B,IAAIO,EAAWL,EACXW,EAAeG,EAAI6U,OACvB,OAAQtV,GACJJ,OAAO6C,OAAOzC,EAAU,CACpB6S,IAAK,CACD1Q,IAAK,WAED,OADAX,EAAeklB,OAAO1mB,EAAS6X,YACxB7X,EAAS6S,GAAA,GAGxBgF,WAAY,CACR1V,IAAK,WACD,IAAIzC,EAAOM,EAAS6X,WAEpB,OADArW,EAAeklB,OAAOhnB,GACfA,CAAA,GAGf4C,MAAO,CACHH,IAAK,WAED,OADA7B,GAAgBM,EAAa8lB,OAAO1mB,EAAS6X,YACtC7X,EAASsC,KAAA,KAKpC,OAAO3C,CAAA,IApDX6B,EAAewT,IAAIjR,EAAA,EAyD/B,OAAOf,EAAMvD,GAAQiB,MAAMC,KAAMJ,UAAA,KAGlCZ,CAAA,MA2BvB,SAAS4qB,GAA6B7qB,EAAUC,EAAKK,GACjD,GAAwB,IAApBA,EAAIuV,YACJ,OAAO5V,EACX,GAAiB,gBAAbA,EAAI6P,KACJ,OAAO,KAEX,IAAIlP,EAAaX,EAAI0B,KACf1B,EAAI0B,KAAKb,OACT,WAAYb,GAAOA,EAAI2V,OACnB3V,EAAI2V,OAAO9U,OACX,EACV,OAAIR,EAAIuV,cAAgBjV,EACb,MAEPX,EAAQS,EAAS,CAAC,EAAGT,GACrB2B,EAAQ3B,EAAM0B,QACd1B,EAAM0B,KAAO1B,EAAM0B,KAAK8C,QAAO,SAAUzE,EAAGC,GAAK,QAASA,KAAKK,EAAIuG,SAAA,KAEnE,WAAY5G,GAAS2B,EAAQ3B,EAAM2V,UACnC3V,EAAM2V,OAAS3V,EAAM2V,OAAOnR,QAAO,SAAUzE,EAAGC,GAAK,QAASA,KAAKK,EAAIuG,SAAA,KAEpE5G,EAAA,CAiBX,SAAS6qB,GAAc9qB,EAAKC,GACxB,OAfkBK,EAeEN,QAAA,KAfGY,EAeEX,GAdZ8P,QAEPnP,EAAMoP,UACsB,EAAxBK,GAAI/P,EAAKM,EAAMmP,OACU,GAAzBM,GAAI/P,EAAKM,EAAMmP,gBAUuB,IAAK9P,EAPxCgQ,QAEPhQ,EAAMiQ,UACFG,GAAIrQ,EAAKC,EAAMgQ,OAAS,EACxBI,GAAIrQ,EAAKC,EAAMgQ,QAAU,IALvC,IAPsB3P,EAAKM,CAAA,CAkB3B,SAASmqB,GAAmB/qB,EAAQuC,EAAKtC,EAAKK,EAAOM,EAAYb,GAC7D,IAAKE,GAAsB,IAAfA,EAAIa,OACZ,OAAOd,EACX,IAAIe,EAAQwB,EAAIqW,MAAMP,MAClBpW,EAAalB,EAAMohB,WACnB7f,EAAaC,EAAIqW,MAAMvC,MAEvBhV,EADaf,EAAM+Q,OAAO8G,WACEuD,WAC5BxY,EAAenC,EAAM2a,WACrBxa,GAAwBH,EAAM0oB,eAAiB1oB,GAAO2a,WA+C1D,OA9CIzb,EAAcA,EAAIkH,QAAO,SAAUnH,EAAQC,GAC3C,IAAIK,EAAgBN,EAChBY,EAA6B,QAAZX,EAAG6P,MAA8B,QAAZ7P,EAAG6P,KACvC7P,EAAG2V,OAAOnR,QAAO,SAAUzE,GAEzB,OADIA,EAAMkD,EAAalD,GAChBiC,GAAcL,EAAQ5B,GACvBA,EAAIsM,MAAK,SAAUtM,GAAK,OAAO8qB,GAAc9qB,EAAGsC,EAAA,IAChDwoB,GAAc9qB,EAAKsC,EAAA,IAC1BkC,KAAI,SAAUxE,GAIb,OAHAA,EAAI6E,EAAU7E,GACVD,GACAG,OAAO8qB,OAAOhrB,GACXA,CAAA,IAET,GACN,OAAQC,EAAG6P,MACP,IAAK,MACDxP,EAAgBN,EAAOoB,OAAOmB,EAAIqT,OAC5BhV,EACAA,EAAe4D,KAAI,SAAUxE,GAAK,OAAOqB,EAAerB,EAAA,KAC9D,MACJ,IAAK,MACD,IAAIe,GAAW,IAAIqlB,IAAWa,QAAQhnB,EAAG2V,OAAOpR,KAAI,SAAUxE,GAAK,OAAOqB,EAAerB,EAAA,KACzFM,EAAgBN,EACXyE,QAAO,SAAUzE,GAElB,OADIA,EAAMuC,EAAIqT,OAASvU,EAAerB,GAAQA,GACtCymB,GAAc,IAAIL,GAASpmB,GAAMe,EAAA,IAExCK,OAAOmB,EAAIqT,OACVhV,EACAA,EAAe4D,KAAI,SAAUxE,GAAK,OAAOqB,EAAerB,EAAA,KAC9D,MACJ,IAAK,SACD,IAAIkB,GAAiB,IAAIklB,IAAWa,QAAQhnB,EAAG0B,MAC/CrB,EAAgBN,EAAOyE,QAAO,SAAUzE,GAEpC,OADIA,EAAMuC,EAAIqT,OAASvU,EAAerB,GAAQA,GACtCymB,GAAc,IAAIL,GAASpmB,GAAMkB,EAAA,IAE7C,MACJ,IAAK,cACD,IAAIY,EAAU7B,EAAGoW,MACjB/V,EAAgBN,EAAOyE,QAAO,SAAUzE,GAAQ,OAAQ8qB,GAAczpB,EAAerB,GAAO8B,EAAA,IAGpG,OAAOxB,CAAA,GACRN,GACCC,IAAgBD,EACTA,GACXC,EAAY6T,MAAK,SAAU9T,EAAGC,GAC1B,OAAOoQ,GAAInP,EAAqBlB,GAAIkB,EAAqBjB,KACrDoQ,GAAIhP,EAAerB,GAAIqB,EAAepB,GAAA,IAE1CsC,EAAIoS,OAASpS,EAAIoS,MAAQ,MACrB1U,EAAYa,OAASyB,EAAIoS,MACzB1U,EAAYa,OAASyB,EAAIoS,MAEpB3U,EAAOc,SAAWyB,EAAIoS,OAAS1U,EAAYa,OAASyB,EAAIoS,QAC7D/T,EAAWqqB,OAAA,IAGZlrB,EAAYG,OAAO8qB,OAAO/qB,GAAeA,EAAA,CAGpD,SAASirB,GAAelrB,EAAIC,GACxB,OAAoC,IAA5BoQ,GAAIrQ,EAAG+P,MAAO9P,EAAG8P,QACO,IAA5BM,GAAIrQ,EAAGiQ,MAAOhQ,EAAGgQ,UACfjQ,EAAGgQ,aAAgB/P,EAAG+P,aACtBhQ,EAAGkQ,aAAgBjQ,EAAGiQ,SAAA,CAmChC,SAASib,GAAanrB,EAAIC,GACtB,OAjCJ,SAAuBD,EAAQC,EAAQK,EAAYM,GAC/C,QAAI,IAAAZ,EACA,YAAO,IAAAC,GAAwB,EAAI,EACvC,QAAI,IAAAA,EACA,OAAO,EAEX,GAAU,KADNA,EAAIoQ,GAAIrQ,EAAQC,IACP,CACT,GAAIK,GAAcM,EACd,OAAO,EACX,GAAIN,EACA,OAAO,EACX,GAAIM,EACA,OAAQ,EAEhB,OAAOX,CAAA,CAdX,CAiC0BD,EAAG+P,MAAO9P,EAAG8P,MAAO/P,EAAGgQ,UAAW/P,EAAG+P,YAAc,GACJ,GAlBzE,SAAuBhQ,EAAQC,EAAQK,EAAYM,GAC/C,QAAI,IAAAZ,EACA,YAAO,IAAAC,EAAuB,EAAI,EACtC,QAAI,IAAAA,EACA,OAAQ,EAEZ,GAAU,KADNA,EAAIoQ,GAAIrQ,EAAQC,IACP,CACT,GAAIK,GAAcM,EACd,OAAO,EACX,GAAIN,EACA,OAAQ,EACZ,GAAIM,EACA,OAAO,EAEf,OAAOX,CAAA,CAdX,CAkBsBD,EAAGiQ,MAAOhQ,EAAGgQ,MAAOjQ,EAAGkQ,UAAWjQ,EAAGiQ,UAAA,CA2C3D,SAASkb,GAAsB9qB,EAAYM,EAAWG,EAASf,GAC3DM,EAAWkX,YAAYlC,IAAIvU,GAC3Bf,EAAOqrB,iBAAiB,SAAS,WAOrC,IAA0BrrB,EAAYC,EAN9BK,EAAWkX,YAAYrB,OAAOpV,GACM,IAAhCT,EAAWkX,YAAY8T,OAKTtrB,EAJGM,EAISL,EAJGW,EAKrC+C,YAAW,WAC6B,IAAhC3D,EAAWwX,YAAY8T,MACvB9lB,EAAavF,EAAWD,EAAA,GAE7B,SAGP,IAAIurB,GAAkB,CAClB/I,MAAO,SACPgH,MAAO,EACPhjB,KAAM,QACNzD,OAAQ,SAAUa,GACd,IAAIU,EAASV,EAAKyN,OAAO7K,KA8LzB,OA7La9F,EAASA,EAAS,CAAC,EAAGkD,GAAO,CAAEyb,YAAa,SAAUhb,EAAQ3D,EAAMV,GACzE,IAEQ0B,EACAzB,EAHJ2B,EAAWgC,EAAKyb,YAAYhb,EAAQ3D,EAAMV,GAwE9C,MAvEa,cAATU,IAEIT,GADAyB,EAAO,IAAI8pB,iBACGC,OACdzrB,EAAiB,SAAUqD,GAAgB,OAAO,WAElD,GADA3B,EAAK6e,QACQ,cAAT7f,EAAsB,CAEtB,IADA,IAAIT,EAAwB,IAAI0E,IACvB3E,EAAK,EAAGM,EAAW+D,EAAQrE,EAAKM,EAASQ,OAAQd,IAAM,CAC5D,IAAIY,EAAYN,EAASN,GACrBe,EAAWmmB,GAAM,SAAS9lB,OAAOkD,EAAQ,KAAKlD,OAAOR,IACzD,GAAIG,EAAU,CACV,IAAIG,EAAQ0C,EAAKwR,MAAMxU,GACnBkB,EAAMf,EAAS2qB,cAAcjnB,QAAO,SAAUzE,GAAM,OAAOA,EAAGkR,QAAUtP,CAAA,IAC5E,GAAIA,EAAS+pB,WAAatoB,GAAgBzB,EAASme,aAC/C,IAAK,IAAIxd,EAAK,EAAGxC,EAAKG,OAAO0V,OAAO7U,EAAS2mB,QAAQ9O,OAAQrW,EAAKxC,EAAGe,OAAQyB,IAEzE,IADA,IACSN,EAAK,EAAGK,GADbc,EAAUrD,EAAGwC,IACapB,QAASc,EAAKK,EAAGxB,OAAQmB,IAE/C8kB,IADAzjB,EAAQhB,EAAGL,IACU0lB,OAAQ/lB,EAASme,gBACtCva,EAAapC,EAASE,GACtBA,EAAMkU,YAAYzV,SAAQ,SAAU/B,GAAW,OAAOC,EAAsBqV,IAAItV,EAAA,UAK3F,GAAiB,EAAb8B,EAAIhB,OAAY,CACrBC,EAAS2qB,cAAgB3qB,EAAS2qB,cAAcjnB,QAAO,SAAUzE,GAAM,OAAOA,EAAGkR,QAAUtP,CAAA,IAC3F,IAAK,IAAIP,EAAK,EAAG6B,EAAKhD,OAAO0V,OAAO7U,EAAS2mB,QAAQ9O,OAAQvX,EAAK6B,EAAGpC,OAAQO,IAEzE,IADA,IAAI+B,EAEIE,EAMQC,EAPPE,EAAK,EAAGtB,GADbiB,EAAUF,EAAG7B,IACaF,QAASsC,EAAKtB,EAAGrB,OAAQ2C,IAElC,OADbH,EAAQnB,EAAGsB,IACLmoB,KACNhqB,EAASme,eAEL1c,IAAiBC,EAAM2nB,OACnB1nB,EAAgBrD,OAAO+D,SAASX,EAAMsoB,KACtCroB,EAASwnB,GAAmBznB,EAAMsoB,IAAKtoB,EAAMuoB,IAAK/pB,EAAKZ,EAAOoC,EAAOC,GACrED,EAAM2nB,OACNzlB,EAAapC,EAASE,GACtBA,EAAMkU,YAAYzV,SAAQ,SAAU/B,GAAW,OAAOC,EAAsBqV,IAAItV,EAAA,KAE3EuD,IAAWD,EAAMsoB,MACtBtoB,EAAMsoB,IAAMroB,EACZD,EAAMwoB,QAAU9gB,GAAa3B,QAAQ,CAAEqR,OAAQnX,OAI/CD,EAAM2nB,OACNzlB,EAAapC,EAASE,GAE1BA,EAAMkU,YAAYzV,SAAQ,SAAU/B,GAAW,OAAOC,EAAsBqV,IAAItV,EAAA,QAQ5GC,EAAsB8B,SAAQ,SAAU/B,GAAW,OAAOA,GAAA,OAGlE4B,EAASypB,iBAAiB,QAASrrB,GAAA,GAAuB,CACtDyrB,OAAQxrB,IAEZ2B,EAASypB,iBAAiB,QAASrrB,GAAA,GAAuB,CACtDyrB,OAAQxrB,IAEZ2B,EAASypB,iBAAiB,WAAYrrB,GAAA,GAAsB,CACxDyrB,OAAQxrB,KAGT2B,CAAA,EACRwT,MAAO,SAAUnT,GAChB,IAAIK,EAAYsB,EAAKwR,MAAMnT,GACvBlB,EAAUuB,EAAU+O,OAAO8G,WA+G/B,OA9GczX,EAASA,EAAS,CAAC,EAAG4B,GAAY,CAAEqT,OAAQ,SAAU1V,GAC5D,IAAID,EAAQ6K,GAAIqG,MAChB,GAAInQ,EAAQ0a,UACoB,aAA5Bzb,EAAMwR,GAAGmK,SAAS5E,OAClB/W,EAAMwqB,SAEN,OAAOloB,EAAUqT,OAAO1V,GAE5B,IAAIK,EAAW4mB,GAAM,SAAS9lB,OAAOkD,EAAQ,KAAKlD,OAAOa,IACzD,OAAK3B,GAEDN,EAAUsC,EAAUqT,OAAO1V,GACb,QAAbA,EAAI6P,MAA+B,QAAb7P,EAAI6P,QAAyC,IAArB7P,EAAI2V,OAAO9U,QAAgBgpB,GAAiB/oB,EAASd,GAAKqM,MAAK,SAAUtM,GAAO,OAAc,MAAPA,CAAA,MAgBtIM,EAASorB,cAAc7nB,KAAK5D,GAC5BA,EAAI8f,cAAgBsH,GAAwBpnB,EAAI8f,cAChD/f,EAAQ0I,MAAK,SAAU1I,GACG,EAAlBA,EAAI6V,cACJrQ,EAAalF,EAASorB,cAAezrB,IACjCD,EAAc6qB,GAA6B,EAAU5qB,EAAKD,KAE1DM,EAASorB,cAAc7nB,KAAK7D,GAEhCC,EAAI8f,cAAgBsH,GAAwBpnB,EAAI8f,cAAA,IAGxD/f,EAAQ8M,OAAM,WACVtH,EAAalF,EAASorB,cAAezrB,GACrCA,EAAI8f,cAAgBsH,GAAwBpnB,EAAI8f,aAAA,KA7BpD/f,EAAQ0I,MAAK,SAAU9H,GACnB,IAQIZ,EAAc6qB,GAA6B,EARrBnqB,EAASA,EAAS,CAAC,EAAGT,GAAM,CAAE2V,OAAQ3V,EAAI2V,OAAOpR,KAAI,SAAUxE,EAAOC,GACxF,IAAIK,EAKJ,OADA0D,EAHIhE,EAA2C,QAA1BM,EAAKS,EAAQ8S,eAAA,IAAqBvT,GAAyBA,EAAGoZ,SAAS,KACtF7U,EAAU7E,GACVU,EAAS,CAAC,EAAGV,GACQe,EAAQ8S,QAASjT,EAAI+V,QAAQ1W,IACjDD,CAAA,MAE+DY,GAC9EN,EAASorB,cAAc7nB,KAAK7D,GAC5B+J,gBAAe,WAAc,OAAO9J,EAAI8f,cAAgBsH,GAAwBpnB,EAAI8f,aAAA,OAqBrF/f,GAnCIsC,EAAUqT,OAAO1V,EAmCrB,EACR2Y,MAAO,SAAU3Y,GAEhB,IAAKqqB,GAAkBzf,GAAKvI,KAAemoB,GAAkB,QAASxqB,GAClE,OAAOqC,EAAUsW,MAAM3Y,GAC3B,IAAIc,EAAiG,eAA3D,QAApBG,EAAK2J,GAAIqG,aAAA,IAAmBhQ,OAAA,EAAyBA,EAAGsQ,GAAGmK,SAAS5E,OAC5EzW,GAAVN,EAAK6K,IAAkBkhB,QAASnrB,EAASZ,EAAGyrB,OAC5CvqB,EAhM5B,SAA6BlB,EAAQC,EAAWK,EAAMM,GAClD,IAAIG,EAAWmmB,GAAM,SAAS9lB,OAAOpB,EAAQ,KAAKoB,OAAOnB,IACzD,IAAKc,EACD,MAAO,GAEX,KADId,EAAUc,EAAS2mB,QAAQpnB,IAE3B,MAAO,CAAC,MAAM,EAAOS,EAAU,MACnC,IACIG,EAAUjB,GADEW,EAAIgY,MAAQhY,EAAIgY,MAAMP,MAAM7R,KAAO,OAChB,IACnC,IAAKtF,EACD,MAAO,CAAC,MAAM,EAAOH,EAAU,MACnC,OAAQT,GACJ,IAAK,QACD,IAAIwB,EAAaZ,EAAQ8qB,MAAK,SAAUhsB,GACpC,OAAOA,EAAM6rB,IAAIlX,QAAU/T,EAAI+T,OAC3B3U,EAAM6rB,IAAIjW,SAAWhV,EAAIgV,QACzBsV,GAAelrB,EAAM6rB,IAAIjT,MAAMvC,MAAOzV,EAAIgY,MAAMvC,MAAA,IAExD,OAAIvU,EACO,CACHA,GAAA,EAEAf,EACAG,GAQD,CANUA,EAAQ8qB,MAAK,SAAUhsB,GAEpC,OADY,UAAWA,EAAM6rB,IAAM7rB,EAAM6rB,IAAIlX,MAAQ,MACpC/T,EAAI+T,SAChB/T,EAAIgV,QAAS5V,EAAM6rB,IAAIjW,SACxBuV,GAAanrB,EAAM6rB,IAAIjT,MAAMvC,MAAOzV,EAAIgY,MAAMvC,MAAA,OAE3BtV,EAAUG,GACzC,IAAK,QAID,OAHIY,EAAaZ,EAAQ8qB,MAAK,SAAUhsB,GACpC,OAAOkrB,GAAelrB,EAAM6rB,IAAIjT,MAAMvC,MAAOzV,EAAIgY,MAAMvC,MAAA,IAEpD,CAACvU,IAAcA,EAAYf,EAAUG,GAAA,CApCxD,CAgMqDoD,EAAQrC,EAAW,QAAShC,GAAM6B,EAAaZ,EAAG,GAAIlB,EAAakB,EAAG,GAAIqB,EAAWrB,EAAG,GAAInB,EAAYmB,EAAG,GAoDxI,OAnDIY,GAAc9B,EACd8B,EAAW6lB,OAAS1nB,EAAI0nB,QAGpB3nB,EAAUsC,EAAUsW,MAAM3Y,GAAKyI,MAAK,SAAU1I,GAC9C,IAAIC,EAASD,EAAI0a,OAGjB,GAFI5Y,IACAA,EAAW8pB,IAAM3rB,GACjBc,EAAe,CACf,IAAK,IAAIT,EAAI,EAAGM,EAAIX,EAAOa,OAAQR,EAAIM,IAAKN,EACxCJ,OAAO8qB,OAAO/qB,EAAOK,IAEzBJ,OAAO8qB,OAAO/qB,EAAA,MAGdD,EAAI0a,OAAS7V,EAAU5E,GAE3B,OAAOD,CAAA,IACR8M,OAAM,SAAU9M,GAGf,OAFID,GAAa+B,GACb0D,EAAazF,EAAW+B,GACrBE,QAAQoK,OAAOpM,EAAA,IAE1B8B,EAAa,CACT6lB,OAAQ1nB,EAAI0nB,OACZmE,QAAS9rB,EACTwX,YAAa,IAAI7S,IACjBmL,KAAM,QACN+b,IAAK5rB,EACLgrB,OAAA,GAEAlrB,EACAA,EAAU8D,KAAK/B,IAGf/B,EAAY,CAAC+B,IAETS,EADCA,IACU2kB,GAAM,SAAS9lB,OAAOkD,EAAQ,KAAKlD,OAAOa,IAAc,CAC/DylB,QAAS,CACL9O,MAAO,CAAC,EACRnE,MAAO,CAAC,GAEZwX,KAAM,IAAIC,IACVR,cAAe,GACfS,gBAAiB,CAAC,KAGjBzE,QAAQ9O,MAAM3Y,EAAI2Y,MAAMP,MAAM7R,MAAQ,IAAMzG,IAG7DqrB,GAAsBtpB,EAAY/B,EAAWO,EAASM,GAC/CkB,EAAWgqB,QAAQpjB,MAAK,SAAU1I,GACrC,MAAO,CACH0a,OAAQqQ,GAAmB/qB,EAAI0a,OAAQza,EAAK,MAAAsC,OAAA,EAAoDA,EAASmpB,cAAeppB,EAAWR,EAAYf,GAAA,YAU/K,SAASqrB,GAAOpsB,EAAQY,GACpB,OAAO,IAAIyrB,MAAMrsB,EAAQ,CACrByC,IAAK,SAAUzC,EAAQC,EAAMK,GACzB,MAAa,OAATL,EACOW,EACJwB,QAAQK,IAAIzC,EAAQC,EAAMK,EAAA,IAK7C,IAAIulB,IA0HAyG,GAAM/rB,UAAU8iB,QAAU,SAAUpjB,GAChC,GAAIiE,MAAMjE,IAAkBA,EAAgB,GACxC,MAAM,IAAIoH,EAAWI,KAAK,0CAE9B,GADAxH,EAAgBsa,KAAKuN,MAAsB,GAAhB7nB,GAAsB,GAC7CgB,KAAK2Q,OAAS3Q,KAAKmK,OAAOwH,cAC1B,MAAM,IAAIvL,EAAWiR,OAAO,4CAChCrX,KAAK8mB,MAAQxN,KAAKsM,IAAI5lB,KAAK8mB,MAAO9nB,GAClC,IAAID,EAAWiB,KAAK0iB,UAChBrjB,EAAkBN,EAASyE,QAAO,SAAUzE,GAAK,OAAOA,EAAEojB,KAAKC,UAAYpjB,CAAA,IAAkB,GACjG,OAAIK,IAEJA,EAAkB,IAAIW,KAAKsrB,QAAQtsB,GACnCD,EAAS6D,KAAKvD,GACdN,EAAS8T,KAAKqP,IACd7iB,EAAgBilB,OAAO,CAAC,GACxBtkB,KAAKmK,OAAO4c,YAAA,EACL1nB,EAAA,EAEXgsB,GAAM/rB,UAAUisB,WAAa,SAAUxsB,GACnC,IAAIM,EAAQW,KACZ,OAAQA,KAAK2Q,QAAU3Q,KAAKmK,OAAOyG,cAAgBhH,GAAIiH,YAAc7Q,KAAK8Q,MAAS/R,IAAO,IAAIgL,IAAa,SAAUhL,EAASC,GAC1H,GAAIK,EAAM8K,OAAOyG,aACb,OAAO5R,EAAO,IAAIoH,EAAWlB,eAAe7F,EAAM8K,OAAOuH,cAE7D,IAAKrS,EAAM8K,OAAOwH,cAAe,CAC7B,IAAKtS,EAAM8K,OAAOyH,SAEd,YADA5S,EAAO,IAAIoH,EAAWlB,gBAG1B7F,EAAMkS,OAAO1F,MAAM/E,EAAA,CAEvBzH,EAAM8K,OAAO0H,eAAepK,KAAK1I,EAASC,EAAA,IAC3CyI,KAAK1I,EAAA,EAEZssB,GAAM/rB,UAAUksB,IAAM,SAAUzsB,GAC5B,IAAIC,EAAQD,EAAGwiB,MAAOliB,EAASN,EAAG+C,OAAQnC,EAAQZ,EAAGwpB,MAAOzoB,EAAOf,EAAGwG,KAMtE,OALIzF,GACAE,KAAKyrB,MAAM,CAAElK,MAAOviB,EAAOuG,KAAMzF,KACjCf,EAAciB,KAAK8hB,aAAa9iB,KAAWgB,KAAK8hB,aAAa9iB,GAAS,KAC9D4D,KAAK,CAAE2e,MAAOviB,EAAO8C,OAAQzC,EAAQkpB,MAAgB,MAAT5oB,EAAgB,GAAKA,EAAO4F,KAAMzF,IAC1Ff,EAAY8T,MAAK,SAAU9T,EAAGC,GAAK,OAAOD,EAAEwpB,MAAQvpB,EAAEupB,KAAA,IAC/CvoB,IAAA,EAEXqrB,GAAM/rB,UAAUmsB,MAAQ,SAAU1sB,GAC9B,IAAIC,EAAQD,EAAGwiB,MAAOliB,EAAON,EAAGwG,KAAM5F,EAASZ,EAAG+C,OAQlD,OAPI9C,GAASgB,KAAK8hB,aAAa9iB,KAC3BgB,KAAK8hB,aAAa9iB,GAASgB,KAAK8hB,aAAa9iB,GAAOwE,QAAO,SAAUzE,GACjE,OAAOY,EAASZ,EAAG+C,SAAWnC,IAC1BN,GAAON,EAAGwG,OAASlG,CAAA,KAIxBW,IAAA,EAEXqrB,GAAM/rB,UAAUiS,KAAO,WACnB,IAAIxS,EAAQiB,KACZ,OAAOyL,GAAOrC,IACd,WAAc,OAAOud,GAAU5nB,EAAA,KAEnCssB,GAAM/rB,UAAU4oB,OAAS,WACrB,IAAI7oB,EAAQW,KAAKmK,OACbpL,EAAMwP,GAAY1L,QAAQ7C,MAG9B,GAFW,GAAPjB,GACAwP,GAAYpL,OAAOpE,EAAK,GACxBiB,KAAK2Q,MAAO,CACZ,IACI3Q,KAAK2Q,MAAMU,OAAA,CAEf,MAAOtS,GAAA,CACPiB,KAAK2Q,MAAQ,KAEZtR,EAAMsS,gBACPtS,EAAMwS,eAAiB,IAAI9H,IAAa,SAAUhL,GAC9CM,EAAMsoB,eAAiB5oB,CAAA,IAE3BM,EAAMunB,cAAgB,IAAI7c,IAAa,SAAUhL,EAAGC,GAChDK,EAAMqsB,WAAa1sB,CAAA,MAI/BqsB,GAAM/rB,UAAU+R,MAAQ,SAAUtS,GAC9B,IAAyDC,QAAA,IAAhDD,EAAgB,CAAEuS,iBAAA,GAA0BvS,GAAyBuS,gBAC1EvS,EAAQiB,KAAKmK,OACbnL,GACID,EAAM4S,eACN5S,EAAM2sB,WAAW,IAAItlB,EAAWlB,gBAEpClF,KAAKkoB,SACLnpB,EAAM6S,UAAA,EACN7S,EAAM2S,YAAc,IAAItL,EAAWlB,iBAGnClF,KAAKkoB,SACLnpB,EAAM6S,SAAW5R,KAAK0a,SAAS9I,UAC3B7S,EAAM4S,cACV5S,EAAM6R,cAAA,EACN7R,EAAM2S,YAAc,OAG5B2Z,GAAM/rB,UAAU4V,OAAS,SAAU7V,GAC/B,IAAIS,EAAQE,UAAA,IACRX,IAA2BA,EAAe,CAAEiS,iBAAA,IAChD,IAAIrR,EAAyC,EAAnBL,UAAUC,QAAsC,iBAAjBD,UAAU,GAC/DiB,EAAQb,KAAKmK,OACjB,OAAO,IAAIJ,IAAa,SAAUpK,EAASX,GACxB,SAAXD,IACAe,EAAMuR,MAAMhS,GACZ,IAAIN,EAAMe,EAAMoT,MAAMC,UAAUiU,eAAetnB,EAAMyF,MACrDxG,EAAIoI,UAAYwE,IAAK,WAvrDrC,IAA4B5M,EAAIC,EACxBK,EADoBN,EAwrDWe,EAAMoT,MAxrDblU,EAwrDoBc,EAAMyF,KAvrDlDlG,EAAYN,EAAGoU,UAAWpU,EAAcA,EAAG4iB,YAC9CoD,GAAmB1lB,IAChBL,IAASwP,IACTkW,GAAgBrlB,EAAWN,GAAamW,OAAOlW,GAAM6M,MAAM/E,GAqrD/CnH,GAAA,IAEJZ,EAAIqI,QAAU4V,GAAmBhe,GACjCD,EAAIioB,UAAYlnB,EAAMmnB,cAAA,CAE1B,GAAIhnB,EACA,MAAM,IAAImG,EAAW4O,gBAAgB,gDACrCnU,EAAM8Q,cACN9Q,EAAMgR,eAAepK,KAAK1I,GAG1BA,GAAA,KAIZssB,GAAM/rB,UAAUqsB,UAAY,WACxB,OAAO3rB,KAAK2Q,KAAA,EAEhB0a,GAAM/rB,UAAU6R,OAAS,WACrB,OAAsB,OAAfnR,KAAK2Q,KAAA,EAEhB0a,GAAM/rB,UAAUssB,cAAgB,WAC5B,IAAI7sB,EAAciB,KAAKmK,OAAOuH,YAC9B,OAAO3S,GAAqC,mBAArBA,EAAYwG,IAAA,EAEvC8lB,GAAM/rB,UAAUusB,UAAY,WACxB,OAAmC,OAA5B7rB,KAAKmK,OAAOuH,WAAA,EAEvB2Z,GAAM/rB,UAAUwsB,kBAAoB,WAChC,OAAO9rB,KAAKmK,OAAO4c,UAAA,EAEvB9nB,OAAOsC,eAAe8pB,GAAM/rB,UAAW,SAAU,CAC7CkC,IAAK,WACD,IAAIxC,EAAQgB,KACZ,OAAOS,EAAKT,KAAKwkB,YAAYjhB,KAAI,SAAUxE,GAAQ,OAAOC,EAAMwlB,WAAWzlB,EAAA,KAE/EmV,YAAA,EACAxS,cAAA,IAEJ2pB,GAAM/rB,UAAU8e,YAAc,WAC1B,IAAIrf,EA9yCZ,SAAgCA,EAAMC,EAAaK,GAC/C,IAAIM,EAAIC,UAAUC,OAClB,GAAIF,EAAI,EACJ,MAAM,IAAIyG,EAAW4O,gBAAgB,qBAEzC,IADA,IAAIlV,EAAO,IAAIV,MAAMO,EAAI,KAChBA,GACLG,EAAKH,EAAI,GAAKC,UAAUD,GAG5B,OAFAN,EAAYS,EAAKiO,MAEV,CAAChP,EADKsE,EAAQvD,GACCT,EAAA,EAqyCgBU,MAAMC,KAAMJ,WAC9C,OAAOI,KAAK+rB,aAAahsB,MAAMC,KAAMjB,EAAA,EAEzCssB,GAAM/rB,UAAUysB,aAAe,SAAUhtB,EAAMC,EAAQK,GACnD,IAAIM,EAAQK,KACRF,EAAoB8J,GAAIqG,MACvBnQ,GAAqBA,EAAkByQ,KAAOvQ,OAA+B,IAAvBjB,EAAK8D,QAAQ,OACpE/C,EAAoB,MACxB,IAEIG,EAASY,EAFTS,GAA0C,IAAvBvC,EAAK8D,QAAQ,KACpC9D,EAAOA,EAAKmlB,QAAQ,IAAK,IAAIA,QAAQ,IAAK,IAE1C,IAOI,GANArjB,EAAa7B,EAAOuE,KAAI,SAAUxE,GAE9B,GAAyB,iBADrBA,EAAYA,aAAiBY,EAAM6f,MAAQzgB,EAAMwG,KAAOxG,GAExD,MAAM,IAAI0H,UAAU,mFACxB,OAAO1H,CAAA,IAEC,KAARA,GAAeA,IAAS0P,GACxBxO,EAAUwO,OACT,IAAY,MAAR1P,GAAgBA,GAAQ2P,GAG7B,MAAM,IAAItI,EAAW4O,gBAAgB,6BAA+BjW,GAFpEkB,EAAUyO,EAAA,CAGd,GAAI5O,EAAmB,CACnB,GAAIA,EAAkBme,OAASxP,IAAYxO,IAAYyO,GAAW,CAC9D,IAAIpN,EAIA,MAAM,IAAI8E,EAAW4lB,eAAe,0FAHpClsB,EAAoB,KAKxBA,GACAe,EAAWC,SAAQ,SAAU/B,GACzB,GAAIe,IAA0E,IAArDA,EAAkBue,WAAWxb,QAAQ9D,GAAmB,CAC7E,IAAIuC,EAIA,MAAM,IAAI8E,EAAW4lB,eAAe,SAAWjtB,EAC3C,wCAJJe,EAAoB,SAQhCwB,GAAoBxB,IAAsBA,EAAkBqe,SAC5Dre,EAAoB,OAIhC,MAAOT,GACH,OAAOS,EACHA,EAAkB2Q,SAAS,MAAM,SAAU1R,EAAGC,GAAUA,EAAOK,EAAA,IAC/DwO,GAAUxO,EAAA,CAElB,IAAIP,EAz1CZ,SAASgB,EAAsBG,EAAIY,EAAMS,EAAYxC,EAAmBkC,GACpE,OAAO+I,GAAa3B,UAAUX,MAAK,WAC/B,IAAI1I,EAAY6K,GAAI8G,WAAa9G,GAC7B5K,EAAQiB,EAAG8Q,mBAAmBlQ,EAAMS,EAAYrB,EAAG+Q,UAAWlS,GAMlE,GALAE,EAAMuqB,UAAA,EACFxqB,EAAY,CACZkR,MAAOjR,EACP0R,UAAW3R,GAEXD,EACAE,EAAMsR,SAAWxR,EAAkBwR,cAGnC,IACItR,EAAM8C,SACN9C,EAAMsR,SAASoa,WAAA,EACfzqB,EAAGkK,OAAO8G,eAAiB,EAE/B,MAAOlS,GACH,OAAIA,EAAGwG,OAASU,EAASiL,cAAgBjR,EAAGkR,UAAyC,IAA3BlR,EAAGkK,OAAO8G,gBAChEf,QAAQkB,KAAK,4BACbnR,EAAGoR,MAAM,CAAEC,iBAAA,IACJrR,EAAGsR,OAAO9J,MAAK,WAAc,OAAO3H,EAAsBG,EAAIY,EAAMS,EAAY,KAAMN,EAAA,KAE1F6M,GAAU9O,EAAA,CAGzB,IAIIM,EAJAM,EAAmBiF,EAAgB5D,GAiBvC,OAhBIrB,GACAiO,KAGA7O,EAAkBgL,GAAa8C,QAAO,WAEtC,IAEY9N,GAHZM,EAAc2B,EAAUxB,KAAKR,EAAOA,MAE5BW,GACIZ,EAAc6L,GAAwB5I,KAAK,KAAM,MACrD3C,EAAYoI,KAAK1I,EAAaA,IAEG,mBAArBM,EAAYqF,MAAoD,mBAAtBrF,EAAY+oB,QAClE/oB,EAAc8oB,GAAc9oB,IAAA,GAGrCN,IACKM,GAA2C,mBAArBA,EAAYoI,KACtCsC,GAAa3B,QAAQ/I,GAAaoI,MAAK,SAAU1I,GAAK,OAAOC,EAAMmf,OAC/Dpf,EACE8O,GAAU,IAAIzH,EAAW6lB,gBAAgB,kEAC7CltB,EAAgB0I,MAAK,WAAc,OAAOpI,CAAA,KAAiBoI,MAAK,SAAU1I,GAG5E,OAFID,GACAE,EAAM4f,WACH5f,EAAMyS,YAAYhK,MAAK,WAAc,OAAO1I,CAAA,OACpD8M,OAAM,SAAU9M,GAEf,OADAC,EAAMwf,QAAQzf,GACP8O,GAAU9O,EAAA,QAmyCwBiD,KAAK,KAAMhC,KAAMC,EAASY,EAAYf,EAAmBT,GACtG,OAAQS,EACJA,EAAkB2Q,SAASxQ,EAASnB,EAAkB,QACtD8K,GAAIqG,MACAxE,GAAO7B,GAAI8G,WAAW,WAAc,OAAO/Q,EAAM4rB,WAAWzsB,EAAA,IAC5DkB,KAAKurB,WAAWzsB,EAAA,EAE5BusB,GAAM/rB,UAAU6U,MAAQ,SAAUpV,GAC9B,IAAKmC,EAAOlB,KAAKwkB,WAAYzlB,GACzB,MAAM,IAAIqH,EAAW8lB,aAAa,SAAS/rB,OAAOpB,EAAW,oBAEjE,OAAOiB,KAAKwkB,WAAWzlB,EAAA,EAEpBssB,IAlVP,SAASA,GAAMtsB,EAAMC,GACjB,IAAIiB,EAAQD,KACZA,KAAK8hB,aAAe,CAAC,EACrB9hB,KAAK8mB,MAAQ,EACb,IAAIznB,EAAOgsB,GAAMc,aACjBnsB,KAAK0a,SAAW1b,EAAUS,EAAS,CAC/BolB,OAAQwG,GAAMxG,OAAQjT,UAAA,EACtBuB,UAAW9T,EAAK8T,UAAWwO,YAAatiB,EAAKsiB,YAAa7L,MAAO,UAAY9W,GACjFgB,KAAKkT,MAAQ,CACTC,UAAWnU,EAAQmU,UACnBwO,YAAa3iB,EAAQ2iB,aAErBtiB,EAASL,EAAQ6lB,OACrB7kB,KAAKgR,UAAY,CAAC,EAClBhR,KAAK0iB,UAAY,GACjB1iB,KAAKyiB,YAAc,GACnBziB,KAAKwkB,WAAa,CAAC,EACnBxkB,KAAK2Q,MAAQ,KACb3Q,KAAKwQ,OAASxQ,KACd,IAr7F6Ba,EA9hBLlB,EAumCM2B,EA21BJxB,EAhiCIhB,EAijF1BkC,EAAQ,CACR0Q,YAAa,KACbC,eAAA,EACAoW,kBAAmB,KACnBnX,cAAA,EACA+W,eAAgB7gB,EAChB+K,eAAgB,KAChB6Z,WAAY5kB,EACZ8f,cAAe,KACfG,YAAA,EACA9V,eAAgB,EAChBW,SAAU5S,EAAQ4S,UAEtB5Q,EAAM6Q,eAAiB,IAAI9H,IAAa,SAAUhL,GAC9CiC,EAAM2mB,eAAiB5oB,CAAA,IAE3BiC,EAAM4lB,cAAgB,IAAI7c,IAAa,SAAUhL,EAAGC,GAChDgC,EAAM0qB,WAAa1sB,CAAA,IAEvBgB,KAAKmK,OAASnJ,EACdhB,KAAKuF,KAAOxG,EACZiB,KAAK0e,GAAKtI,GAAOpW,KAAM,WAAY,UAAW,gBAAiB,QAAS,CAAEgoB,MAAO,CAACxgB,GAAiBV,KACnG9G,KAAK0e,GAAGsJ,MAAM3R,UAAYhU,EAASrC,KAAK0e,GAAGsJ,MAAM3R,WAAW,SAAUvW,GAClE,OAAO,SAAUT,EAAYM,GACzB0rB,GAAMpD,KAAI,WACN,IAcQjpB,EAdJD,EAAQkB,EAAMkK,OACdpL,EAAM6R,cACD7R,EAAM2S,aACP3H,GAAa3B,UAAUX,KAAKpI,GAC5BM,GACAG,EAAUT,IAETN,EAAMgpB,mBACXhpB,EAAMgpB,kBAAkBnlB,KAAKvD,GACzBM,GACAG,EAAUT,KAGdS,EAAUT,GACNL,EAAOiB,EACNN,GACDG,GAAU,SAASf,IACfC,EAAK0f,GAAGsJ,MAAMzT,YAAYlV,GAC1BL,EAAK0f,GAAGsJ,MAAMzT,YAAYxV,EAAA,YAMlDiB,KAAK6T,YAt+FwBhT,EAs+FiBb,KAr+F3CwW,GAAqBqC,GAAWvZ,WAAW,SAAoBP,EAAaC,GAC/EgB,KAAKuQ,GAAK1P,EACV,IAAIxB,EAAWuP,GAAUjP,EAAQ,KACjC,GAAIX,EACA,IACIK,EAAWL,GAAA,CAEf,MAAOD,GACHY,EAAQZ,CAAA,CAEhB,IAAIe,EAAWf,EAAYia,KAEvBja,GADAC,EAAQc,EAASqU,OACGhC,KAAKC,QAAQC,KACrCrS,KAAKgZ,KAAO,CACR7E,MAAOnV,EACPoY,MAAOtX,EAASsX,MAChBH,WAAanX,EAASsX,OAAUpY,EAAMoR,OAAOqC,QAAQG,SAAW9S,EAASsX,QAAUpY,EAAMoR,OAAOqC,QAAQlN,KACxG6P,MAAO/V,EACPmY,UAAA,EACAC,IAAK,OACLC,OAAQ,GACRhB,UAAW,KACXlT,OAAQ,KACRqT,aAAc,KACdD,WAAA,EACAiD,QAAS,KACTpG,OAAQ,EACRC,MAAO,IACPuF,MAAOtZ,EACPgX,GAAI7W,EAAS6W,GACbsB,YAAalZ,IAAgBgI,EAAShI,EAAc,UAw8FxDiB,KAAKwf,OArgHmB7f,EAqgHYK,KApgHjCwW,GAAqB3G,GAAMvQ,WAAW,SAAeP,EAAMC,EAAaK,GAC3EW,KAAKuQ,GAAK5Q,EACVK,KAAKgQ,IAAM3Q,EACXW,KAAKuF,KAAOxG,EACZiB,KAAKoQ,OAASpR,EACdgB,KAAKmS,KAAOxS,EAAG6kB,WAAWzlB,GAAQY,EAAG6kB,WAAWzlB,GAAMoT,KAAOiE,GAAO,KAAM,CACtE4S,SAAY,CAAC9hB,EAAmBJ,GAChCsL,QAAW,CAACpL,EAAmBD,GAC/BkiB,SAAY,CAAC3hB,GAAmBR,GAChCiiB,SAAY,CAAC1hB,GAAmBP,IAAA,KA4/GpC9G,KAAKgiB,aA/5EyB1gB,EA+5EkBtB,KA95E7CwW,GAAqBgH,GAAYle,WAAW,SAAqBP,EAAMC,EAAYK,EAAUM,EAA6BG,GAC7H,IAAIG,EAAQD,KACZA,KAAKuQ,GAAKjP,EACVtB,KAAKie,KAAOlf,EACZiB,KAAKqe,WAAarf,EAClBgB,KAAKoQ,OAAS/Q,EACdW,KAAKue,4BAA8B5e,EACnCK,KAAKsQ,SAAW,KAChBtQ,KAAK0e,GAAKtI,GAAOpW,KAAM,WAAY,QAAS,SAC5CA,KAAK0N,OAAS5N,GAAU,KACxBE,KAAKme,QAAA,EACLne,KAAK2d,UAAY,EACjB3d,KAAK8d,cAAgB,GACrB9d,KAAK4e,SAAW,KAChB5e,KAAKwe,QAAU,KACfxe,KAAKkf,YAAc,KACnBlf,KAAKmf,cAAgB,KACrBnf,KAAKqf,WAAa,EAClBrf,KAAKyR,YAAc,IAAI1H,IAAa,SAAUhL,EAASC,GACnDiB,EAAM2e,SAAW7f,EACjBkB,EAAMue,QAAUxf,CAAA,IAEpBgB,KAAKyR,YAAYhK,MAAK,WAClBxH,EAAMke,QAAA,EACNle,EAAMye,GAAG0N,SAAS/Z,MAAA,IACnB,SAAUtT,GACT,IAAIC,EAAYiB,EAAMke,OAMtB,OALAle,EAAMke,QAAA,EACNle,EAAMye,GAAGzF,MAAM5G,KAAKtT,GACpBkB,EAAMyN,OACFzN,EAAMyN,OAAO8Q,QAAQzf,GACrBC,GAAaiB,EAAMqQ,UAAYrQ,EAAMqQ,SAASgP,QAC3CzR,GAAU9O,EAAA,QA+3ErBiB,KAAKsrB,SArkDqBxrB,EAqkDcE,KApkDrCwW,GAAqB2N,GAAQ7kB,WAAW,SAAiBP,GAC5DiB,KAAKuQ,GAAKzQ,EACVE,KAAKmiB,KAAO,CACRC,QAASrjB,EACTwlB,aAAc,KACd3B,SAAU,CAAC,EACX7B,OAAQ,CAAC,EACTuC,eAAgB,UA8jDpBtjB,KAAKsS,aAtmFyBxT,EAsmFkBkB,KArmF7CwW,GAAqB2E,GAAY7b,WAAW,SAAqBP,EAAOC,EAAOK,GAYlF,GAXAW,KAAKuQ,GAAKzR,EACVkB,KAAKgZ,KAAO,CACR7E,MAAOpV,EACPqY,MAAiB,QAAVpY,EAAkB,KAAOA,EAChC2X,GAAItX,GAERW,KAAK4b,KAAO5b,KAAKsc,WAAalN,GAC9BpP,KAAKuc,YAAc,SAAUxd,EAAGC,GAAK,OAAOoQ,GAAIpQ,EAAGD,EAAA,EACnDiB,KAAK8c,KAAO,SAAU/d,EAAGC,GAAK,OAAmB,EAAZoQ,GAAIrQ,EAAGC,GAASD,EAAIC,CAAA,EACzDgB,KAAK6c,KAAO,SAAU9d,EAAGC,GAAK,OAAOoQ,GAAIrQ,EAAGC,GAAK,EAAID,EAAIC,CAAA,EACzDgB,KAAKqsB,aAAevtB,EAAGoU,MAAMyO,aACxB3hB,KAAKqsB,aACN,MAAM,IAAIjmB,EAAWf,UAAA,KAylFzBrF,KAAK0e,GAAG,iBAAiB,SAAU3f,GACX,EAAhBA,EAAGutB,WACHpc,QAAQkB,KAAK,iDAAiDjR,OAAOF,EAAMsF,KAAM,6CAEjF2K,QAAQkB,KAAK,gDAAgDjR,OAAOF,EAAMsF,KAAM,oDACpFtF,EAAMoR,MAAM,CAAEC,iBAAA,GAAiB,IAEnCtR,KAAK0e,GAAG,WAAW,SAAU3f,IACpBA,EAAGutB,YAAcvtB,EAAGutB,WAAavtB,EAAGuoB,WACrCpX,QAAQkB,KAAK,iBAAiBjR,OAAOF,EAAMsF,KAAM,mBAEjD2K,QAAQkB,KAAK,YAAYjR,OAAOF,EAAMsF,KAAM,kDAAkDpF,OAAOpB,EAAGuoB,WAAa,QAE7HtnB,KAAK8S,QAAU+M,GAAU7gB,EAAQ2iB,aACjC3hB,KAAK+Q,mBAAqB,SAAUhS,EAAMC,EAAYK,EAAUM,GAAqB,OAAO,IAAIM,EAAM+hB,YAAYjjB,EAAMC,EAAYK,EAAUY,EAAMya,SAAS6D,4BAA6B5e,EAAA,EAC1LK,KAAKinB,eAAiB,SAAUjoB,GAC5BiB,EAAMye,GAAG,WAAWrM,KAAKrT,GACzBuP,GACK/K,QAAO,SAAUzE,GAAK,OAAOA,EAAEwG,OAAStF,EAAMsF,MAAQxG,IAAMkB,IAAUlB,EAAEoL,OAAOsd,OAAA,IAC/ElkB,KAAI,SAAUxE,GAAK,OAAOA,EAAE2f,GAAG,iBAAiBrM,KAAKrT,EAAA,KAE9DgB,KAAKwrB,IAAIrC,IACTnpB,KAAKwrB,IAAIlB,IACTtqB,KAAKwrB,IAAI/B,IACTzpB,KAAKwrB,IAAIlD,IACTtoB,KAAKwrB,IAAI1C,IACT,IAAIznB,EAAQ,IAAI+pB,MAAMprB,KAAM,CACxBwB,IAAK,SAAUzC,EAAGC,EAAMK,GACpB,GAAa,SAATL,EACA,OAAO,EACX,GAAa,UAATA,EACA,OAAO,SAAUD,GAAa,OAAOosB,GAAOlrB,EAAMkU,MAAMpV,GAAYsC,EAAA,EACxE,IAAI1B,EAAKwB,QAAQK,IAAIzC,EAAGC,EAAMK,GAC9B,OAAIM,aAAckQ,GACPsb,GAAOxrB,EAAI0B,GACT,WAATrC,EACOW,EAAG4D,KAAI,SAAUxE,GAAK,OAAOosB,GAAOpsB,EAAGsC,EAAA,IACrC,uBAATrC,EACO,WAEH,OAAOmsB,GADExrB,EAAGI,MAAMC,KAAMJ,WACNyB,EAAA,EAEnB1B,CAAA,IAGfK,KAAKioB,IAAM5mB,EACXhC,EAAOyB,SAAQ,SAAU/B,GAAS,OAAOA,EAAMkB,EAAA,IA8NnD6E,EAAqC,oBAAXV,QAA0B,eAAgBA,OAClEA,OAAOmoB,WACP,eAFN,IAgBIC,GAbAC,IAIAC,GAAWptB,UAAU+W,UAAY,SAAUtX,EAAGC,EAAOK,GACjD,OAAOW,KAAK2sB,WAAY5tB,GAAkB,mBAANA,EAAmEA,EAAhD,CAAE2F,KAAM3F,EAAGka,MAAOja,EAAOotB,SAAU/sB,GAAA,EAE9FqtB,GAAWptB,UAAUwF,GAAoB,WACrC,OAAO9E,IAAA,EAEJ0sB,IATP,SAASA,GAAW3tB,GAChBiB,KAAK2sB,WAAa5tB,CAAA,CAY1B,IACIytB,GAAU,CACNrZ,UAAW/S,EAAQ+S,WAAa/S,EAAQwsB,cAAgBxsB,EAAQysB,iBAAmBzsB,EAAQ0sB,YAC3FnL,YAAavhB,EAAQuhB,aAAevhB,EAAQ2sB,kBAAA,CAGpD,MAAOhuB,GACHytB,GAAU,CAAErZ,UAAW,KAAMwO,YAAa,MAG9C,SAAShL,GAAU1U,GACf,IACIE,EADAE,GAAA,EAEAtD,EAAa,IAAI0tB,IAAW,SAAU9sB,GACtC,IAkBIM,EAlBAH,EAAmB8E,EAAgB3C,GAiBnCpB,GAAA,EAEAS,EAAY,CAAC,EACbxC,EAAa,CAAC,EACdC,EAAe,CACf,UAAAiuB,GACI,OAAOnsB,CAAA,EAEX0T,YAAa,WACL1T,IAEJA,GAAA,EACIZ,GACAA,EAAgBqf,QAChBte,GACAuc,GAAasB,eAAetK,YAAYnU,GAAA,GAGpDT,EAASuY,OAASvY,EAASuY,MAAMnZ,GACjC,IAAIiC,GAAA,EACAK,EAAU,WAAc,OAAO2M,GAAoBhP,EAAA,EAInDoB,EAAmB,SAAUrB,GAC7B8mB,GAAuBvkB,EAAWvC,GAH3B+mB,GAAehnB,EAAYwC,IAK9BD,GAAA,EAGJrC,EAAW,WACX,IAMIA,EAIAK,EAOAN,GAjBA8B,GACC2rB,GAAQrZ,YAIb7R,EAAY,CAAC,EACTtC,EAAS,CAAC,EACViB,GACAA,EAAgBqf,QACpBrf,EAAkB,IAAIsqB,gBAQlBxrB,EAhER,SAAiBA,GACb,IAAIC,EAAcsL,KAClB,IACQxK,GACA8N,KAEJ,IAAIvO,EAAKoN,GAASxK,EAASlD,GAI3B,OAFIM,EADAS,EACKT,EAAGyM,QAAQlB,IAEbvL,CAAA,CAEX,QACIL,GAAeyL,IAAA,EAbvB,CAyDQpL,EAAM,CACNiqB,OAAQtqB,EACRwrB,OAAQvqB,EAAgBuqB,OACxBM,QAASzpB,EACTqoB,QAASznB,EACTgO,MAAO,OAGXlP,QAAQqH,QAAQrJ,GAAK0I,MAAK,SAAU1I,GAChCsD,GAAA,EACAF,EAAepD,EACX8B,GAAUxB,EAAImrB,OAAOyC,UAGzB3rB,EAAY,CAAC,EAh0K7B,SAAuBvC,GACnB,IAAK,IAAIC,KAAKD,EACV,GAAImC,EAAOnC,EAAGC,GACV,OACR,OAAO,EAJX,CAi0KgBF,EAAaE,IACsBgC,IAC/Buc,GAAaF,GAAkCjd,GAC/CY,GAAA,GAEJgN,IAAoB,WAAc,OAAQnN,GAAUlB,EAAS+E,MAAQ/E,EAAS+E,KAAK3F,EAAA,QACpF,SAAUA,GACTsD,GAAA,EACK,CAAC,sBAAuB,cAAcoW,SAAS,MAAA1Z,OAAA,EAA0CA,EAAIwG,OACzF1E,GACDmN,IAAoB,WACZnN,GAEJlB,EAASsZ,OAAStZ,EAASsZ,MAAMla,EAAA,SAMrD,OADA2D,WAAWrB,EAAS,GACbtC,CAAA,IAIX,OAFAA,EAAWmuB,SAAW,WAAc,OAAO7qB,CAAA,EAC3CtD,EAAWouB,SAAW,WAAc,OAAOhrB,CAAA,EACpCpD,CAAA,CAGX,IAAIquB,GAAQxI,GAsGZ,SAASyI,GAAiBtuB,GACtB,IAAIC,EAAQsuB,GACZ,IACIA,IAAA,EACA/P,GAAasB,eAAexM,KAAKtT,GACjCsnB,GAAqBtnB,GAAA,EAAa,CAEtC,QACIuuB,GAAqBtuB,CAAA,EA7G7BW,EAAMytB,GAAO3tB,EAASA,EAAS,CAAC,EAAGoH,GAAqB,CACpDqO,OAAQ,SAAUnW,GAEd,OADS,IAAIquB,GAAMruB,EAAc,CAAE8lB,OAAQ,KACjC3P,QAAA,EAEdqY,OAAQ,SAAUxuB,GACd,OAAO,IAAIquB,GAAMruB,EAAM,CAAE8lB,OAAQ,KAAMtT,OAAO9J,MAAK,SAAU1I,GAEzD,OADAA,EAAGsS,SAAA,CACI,IACRxF,MAAM,uBAAuB,WAAc,OAAO,MAEzD2hB,iBAAkB,SAAUzuB,GACxB,IACI,OAt8DJM,GADkBL,EAu8DUouB,GAAMjB,cAt8DnBhZ,UAAWnU,EAAcA,EAAG2iB,aACxCoD,GAAmB1lB,GACpB0B,QAAQqH,QAAQ/I,EAAU2lB,aAAavd,MAAK,SAAU1I,GACpD,OAAOA,EACFwE,KAAI,SAAUxE,GAAQ,OAAOA,EAAKwG,IAAA,IAClC/B,QAAO,SAAUzE,GAAQ,OAAOA,IAASyP,EAAA,OAEhDkW,GAAgBrlB,EAAWL,GAAasU,eAAe6G,eA+7DT1S,KAAK1I,EAAA,CAErD,MAAOA,GACH,OAAO8O,GAAU,IAAIzH,EAAWf,WAAA,CA18D5C,IAA0BrG,EAClBK,CAAA,EA48DJmV,YAAa,WAIT,OAHA,SAAezV,GACX8B,EAAOb,KAAMjB,EAAA,GAGlB0uB,kBAAmB,SAAU1uB,GAC5B,OAAO6K,GAAIqG,MACPxE,GAAO7B,GAAI8G,UAAW3R,GACtBA,GAAA,EACLkpB,IAAKhD,GAAKyI,MAAO,SAAU1uB,GAC1B,OAAO,WACH,IACI,IAAID,EAAKopB,GAAcnpB,EAAYe,MAAMC,KAAMJ,YAC/C,OAAKb,GAAyB,mBAAZA,EAAG0I,KAEd1I,EADIgL,GAAa3B,QAAQrJ,EAAA,CAGpC,MAAOA,GACH,OAAO8O,GAAU9O,EAAA,IAG1B4uB,MAAO,SAAU5uB,EAAaC,EAAMK,GACnC,IACI,IAAIM,EAAKwoB,GAAcppB,EAAYgB,MAAMV,EAAML,GAAQ,KACvD,OAAKW,GAAyB,mBAAZA,EAAG8H,KAEd9H,EADIoK,GAAa3B,QAAQzI,EAAA,CAGpC,MAAOZ,GACH,OAAO8O,GAAU9O,EAAA,GAGzB6uB,mBAAoB,CAChBpsB,IAAK,WAAc,OAAOoI,GAAIqG,OAAS,OACxCgP,QAAS,SAAUlgB,EAAmBC,GAKrC,OAJIA,EAAU+K,GAAa3B,QAAqC,mBAAtBrJ,EACtCquB,GAAMK,kBAAkB1uB,GACxBA,GACCgN,QAAQ/M,GAAmB,KACzB4K,GAAIqG,MACPrG,GAAIqG,MAAMgP,QAAQjgB,GAClBA,CAAA,EAER+B,QAASgJ,GACT6Z,MAAO,CACHpiB,IAAK,WAAc,OAAOqG,EAAA,EAC1BpG,IAAK,SAAU1C,GACXkJ,GAASlJ,EAAA,GAGjB8uB,OAAQ5tB,EAAQ8B,OAAQlB,EAAQitB,MAAOnuB,EAAOouB,SAAU1rB,EACxD2rB,OAAQ5X,GAAQsI,GAAInB,GAAc0Q,UAAWtX,GAAWuX,uBAAwBrI,GAChFsI,aAAcxrB,EAAcyrB,aAAcrrB,EAAcsrB,aAn8K5D,SAAsBrvB,EAAKD,GACA,iBAAZA,EACPgE,EAAa/D,EAAKD,OAAA,GACb,WAAYA,GACjB,GAAGwE,IAAI/D,KAAKT,GAAS,SAAUA,GAC3BgE,EAAa/D,EAAKD,OAAA,EAAI,KA87KsDuvB,aAAclrB,EAAcmrB,UAAW3qB,EAAW4qB,cAAe5F,GAAexV,IAAKhE,GAAKqf,KAAMjsB,EACpLksB,QAAA,IACA7J,OAAQ,GACR8J,YAAapgB,GACbqgB,SAAU3oB,EACVkmB,aAAcK,GAAS1W,MAAOmQ,GAC9B4I,OAvhJgB,QAuhJOzM,QAvhJP,QAuhJ8B9e,MAAM,KAC/CC,KAAI,SAAUxE,GAAK,OAAOmE,SAASnE,EAAA,IACnCmH,QAAO,SAAUnH,EAAGC,EAAGK,GAAK,OAAON,EAAKC,EAAIsa,KAAKiO,IAAI,GAAQ,EAAJloB,EAAA,OAClE+tB,GAAM0B,OAASjP,GAAUuN,GAAMjB,aAAaxK,aAEf,oBAAlBoN,eAA6D,oBAArB3E,mBAC/C7M,GAAaF,IAAkC,SAAUte,GAChDuuB,KAEDvuB,EAAU,IAAIiwB,YAAY1R,GAAgC,CACtD2R,OAAQlwB,IAEZuuB,IAAA,EACAyB,cAAchwB,GACduuB,IAAA,EAAqB,IAG7BlD,iBAAiB9M,IAAgC,SAAUve,GACnDA,EAASA,EAAGkwB,OACX3B,IACDD,GAAiBtuB,EAAA,KAe7B,IAEImwB,GAFA5B,IAAA,EAGA6B,GAAW,aAyEf,MAxEgC,oBAArBC,oBACPD,GAAW,YACPD,GAAK,IAAIE,iBAAiB9R,KACvB+R,UAAY,SAAUtwB,GAAM,OAAOA,EAAGuwB,MAAQjC,GAAiBtuB,EAAGuwB,KAAA,MAGjD,mBAAbJ,GAAGK,OACVL,GAAGK,QAEPhS,GAAaF,IAAkC,SAAUte,GAChDuuB,IACD4B,GAAGM,YAAYzwB,EAAA,KAKK,oBAArBqrB,mBACPA,iBAAiB,YAAY,SAAUrrB,GACnC,IAAK6lB,GAAQ6K,gBAAkB1wB,EAAM2wB,UAAW,CACxC7nB,IACAqI,QAAQ0T,MAAM,sCAClB,MAAAsL,IAAwCA,GAAG7d,QAC3C,IAAK,IAAIrS,EAAK,EAAGK,EAAgBkP,GAAavP,EAAKK,EAAcQ,OAAQb,IAC5DK,EAAcL,GACpBqS,MAAM,CAAEC,iBAAA,GAAiB,KAIxC8Y,iBAAiB,YAAY,SAAUrrB,IAC9B6lB,GAAQ6K,gBAAkB1wB,EAAM2wB,YAC7B7nB,IACAqI,QAAQ0T,MAAM,sCAClBuL,KACA9B,GAAiB,CAAElhB,IAAK,IAAIgZ,IAAA,IAAoB,CAAC,YAiB7Dpb,GAAa6C,gBAl0Kb,SAAkB7N,EAAUC,GACxB,OAAKD,GAAYA,aAAoBuG,GAAcvG,aAAoB0H,WAAa1H,aAAoBwH,cAAgBxH,EAASwG,OAASqB,EAAa7H,EAASwG,MACrJxG,GACPC,EAAK,IAAI4H,EAAa7H,EAASwG,MAAMvG,GAAWD,EAASyG,QAASzG,GAClE,UAAWA,GACXsC,EAAQrC,EAAI,QAAS,CAAEwC,IAAK,WACpB,OAAOxB,KAAKqG,MAAMkb,KAAA,IAGvBviB,EAAA,EA0zKXiJ,GAASJ,IAmBTpI,EAASmlB,GAjBuB3lB,OAAO8qB,OAAO,CAC1C5qB,UAAW,KACXwwB,MAAO/K,GACPqJ,UAAWtX,GACXiZ,OAAQzgB,GACRiE,IAAKhE,GACLygB,cAAe9wB,EACf+wB,iBAAkB1X,GAClBM,cAfJ,SAAuB3Z,EAAGC,GACtB,OAAO,IAAIoZ,GAAiB,CAAEM,cAAe,CAAC3Z,EAAGC,IAAA,EAejDqV,IAxBJ,SAAatV,GACT,OAAO,IAAIqZ,GAAiB,CAAE/D,IAAKtV,GAAA,EAwBnCyZ,OArBJ,SAAgBzZ,GACZ,OAAO,IAAIqZ,GAAiB,CAAEI,OAAQzZ,GAAA,EAqBtCgxB,QAAWnL,GACXoL,SAAU7K,GACV8K,YAAa1K,GACb2K,cAAe1K,KAGa,CAAEuK,QAASnL,KAEpCA,EAAA,CAxvLyE5lB,+BCFvE,IAAImxB,EAAGC,EAAQ,IAASC,EAAGD,EAAQ,KAAa,SAAS/tB,EAAExB,GAAG,IAAI,IAAIuB,EAAE,yDAAyDvB,EAAEG,EAAE,EAAEA,EAAEpB,UAAUC,OAAOmB,IAAIoB,GAAG,WAAWkuB,mBAAmB1wB,UAAUoB,IAAI,MAAM,yBAAyBH,EAAE,WAAWuB,EAAE,gHAAgH,CAAC,IAAImuB,EAAG,IAAI7sB,IAAI8sB,EAAG,CAAC,EAAE,SAASC,EAAG5vB,EAAEuB,GAAGsuB,EAAG7vB,EAAEuB,GAAGsuB,EAAG7vB,EAAE,UAAUuB,EAAE,CACxb,SAASsuB,EAAG7vB,EAAEuB,GAAW,IAARouB,EAAG3vB,GAAGuB,EAAMvB,EAAE,EAAEA,EAAEuB,EAAEvC,OAAOgB,IAAI0vB,EAAGlc,IAAIjS,EAAEvB,GAAG,CAC5D,IAAI8vB,IAAK,qBAAqBpwB,QAAQ,qBAAqBA,OAAOqwB,UAAU,qBAAqBrwB,OAAOqwB,SAASC,eAAeC,EAAG7xB,OAAOK,UAAUC,eAAewxB,EAAG,8VAA8VC,EACpgB,CAAC,EAAEC,EAAG,CAAC,EACiN,SAASzuB,EAAE3B,EAAEuB,EAAEpB,EAAEmB,EAAEpD,EAAEqB,EAAEgD,GAAGpD,KAAKkxB,gBAAgB,IAAI9uB,GAAG,IAAIA,GAAG,IAAIA,EAAEpC,KAAKmxB,cAAchvB,EAAEnC,KAAKoxB,mBAAmBryB,EAAEiB,KAAKqxB,gBAAgBrwB,EAAEhB,KAAKsxB,aAAazwB,EAAEb,KAAK6O,KAAKzM,EAAEpC,KAAKuxB,YAAYnxB,EAAEJ,KAAKwxB,kBAAkBpuB,CAAC,CAAC,IAAI2C,EAAE,CAAC,EACpb,uIAAuIzC,MAAM,KAAKxC,SAAQ,SAASD,GAAGkF,EAAElF,GAAG,IAAI2B,EAAE3B,EAAE,GAAE,EAAGA,EAAE,MAAK,GAAG,EAAG,IAAG,CAAC,CAAC,gBAAgB,kBAAkB,CAAC,YAAY,SAAS,CAAC,UAAU,OAAO,CAAC,YAAY,eAAeC,SAAQ,SAASD,GAAG,IAAIuB,EAAEvB,EAAE,GAAGkF,EAAE3D,GAAG,IAAII,EAAEJ,EAAE,GAAE,EAAGvB,EAAE,GAAG,MAAK,GAAG,EAAG,IAAG,CAAC,kBAAkB,YAAY,aAAa,SAASC,SAAQ,SAASD,GAAGkF,EAAElF,GAAG,IAAI2B,EAAE3B,EAAE,GAAE,EAAGA,EAAE2a,cAAc,MAAK,GAAG,EAAG,IAC1e,CAAC,cAAc,4BAA4B,YAAY,iBAAiB1a,SAAQ,SAASD,GAAGkF,EAAElF,GAAG,IAAI2B,EAAE3B,EAAE,GAAE,EAAGA,EAAE,MAAK,GAAG,EAAG,IAAG,8OAA8OyC,MAAM,KAAKxC,SAAQ,SAASD,GAAGkF,EAAElF,GAAG,IAAI2B,EAAE3B,EAAE,GAAE,EAAGA,EAAE2a,cAAc,MAAK,GAAG,EAAG,IACxb,CAAC,UAAU,WAAW,QAAQ,YAAY1a,SAAQ,SAASD,GAAGkF,EAAElF,GAAG,IAAI2B,EAAE3B,EAAE,GAAE,EAAGA,EAAE,MAAK,GAAG,EAAG,IAAG,CAAC,UAAU,YAAYC,SAAQ,SAASD,GAAGkF,EAAElF,GAAG,IAAI2B,EAAE3B,EAAE,GAAE,EAAGA,EAAE,MAAK,GAAG,EAAG,IAAG,CAAC,OAAO,OAAO,OAAO,QAAQC,SAAQ,SAASD,GAAGkF,EAAElF,GAAG,IAAI2B,EAAE3B,EAAE,GAAE,EAAGA,EAAE,MAAK,GAAG,EAAG,IAAG,CAAC,UAAU,SAASC,SAAQ,SAASD,GAAGkF,EAAElF,GAAG,IAAI2B,EAAE3B,EAAE,GAAE,EAAGA,EAAE2a,cAAc,MAAK,GAAG,EAAG,IAAG,IAAIiW,EAAG,gBAAgB,SAASC,EAAG7wB,GAAG,OAAOA,EAAE,GAAG0a,aAAa,CAIxZ,SAASoW,EAAG9wB,EAAEuB,EAAEpB,EAAEmB,GAAG,IAAIpD,EAAEgH,EAAExG,eAAe6C,GAAG2D,EAAE3D,GAAG,MAAQ,OAAOrD,EAAE,IAAIA,EAAE8P,KAAK1M,KAAK,EAAEC,EAAEvC,SAAS,MAAMuC,EAAE,IAAI,MAAMA,EAAE,IAAI,MAAMA,EAAE,IAAI,MAAMA,EAAE,MAP9I,SAAYvB,EAAEuB,EAAEpB,EAAEmB,GAAG,GAAG,OAAOC,GAAG,qBAAqBA,GADqE,SAAYvB,EAAEuB,EAAEpB,EAAEmB,GAAG,GAAG,OAAOnB,GAAG,IAAIA,EAAE6N,KAAK,OAAM,EAAG,cAAczM,GAAG,IAAK,WAAW,IAAK,SAAS,OAAM,EAAG,IAAK,UAAU,OAAGD,IAAc,OAAOnB,GAASA,EAAEkwB,gBAAmD,WAAnCrwB,EAAEA,EAAE2a,cAActb,MAAM,EAAE,KAAsB,UAAUW,GAAE,QAAQ,OAAM,EAAG,CAC/T+wB,CAAG/wB,EAAEuB,EAAEpB,EAAEmB,GAAG,OAAM,EAAG,GAAGA,EAAE,OAAM,EAAG,GAAG,OAAOnB,EAAE,OAAOA,EAAE6N,MAAM,KAAK,EAAE,OAAOzM,EAAE,KAAK,EAAE,OAAM,IAAKA,EAAE,KAAK,EAAE,OAAOa,MAAMb,GAAG,KAAK,EAAE,OAAOa,MAAMb,IAAI,EAAEA,EAAE,OAAM,CAAE,CAOtEyvB,CAAGzvB,EAAEpB,EAAEjC,EAAEoD,KAAKnB,EAAE,MAAMmB,GAAG,OAAOpD,EARxK,SAAY8B,GAAG,QAAGiwB,EAAGtxB,KAAKyxB,EAAGpwB,KAAeiwB,EAAGtxB,KAAKwxB,EAAGnwB,KAAekwB,EAAGhpB,KAAKlH,GAAUowB,EAAGpwB,IAAG,GAAGmwB,EAAGnwB,IAAG,GAAS,GAAE,CAQwDixB,CAAG1vB,KAAK,OAAOpB,EAAEH,EAAEkxB,gBAAgB3vB,GAAGvB,EAAEmxB,aAAa5vB,EAAE,GAAGpB,IAAIjC,EAAEsyB,gBAAgBxwB,EAAE9B,EAAEuyB,cAAc,OAAOtwB,EAAE,IAAIjC,EAAE8P,MAAQ,GAAG7N,GAAGoB,EAAErD,EAAEoyB,cAAchvB,EAAEpD,EAAEqyB,mBAAmB,OAAOpwB,EAAEH,EAAEkxB,gBAAgB3vB,IAAapB,EAAE,KAAXjC,EAAEA,EAAE8P,OAAc,IAAI9P,IAAG,IAAKiC,EAAE,GAAG,GAAGA,EAAEmB,EAAEtB,EAAEoxB,eAAe9vB,EAAEC,EAAEpB,GAAGH,EAAEmxB,aAAa5vB,EAAEpB,KAAI,CAHjd,0jCAA0jCsC,MAAM,KAAKxC,SAAQ,SAASD,GAAG,IAAIuB,EAAEvB,EAAEqjB,QAAQuN,EACzmCC,GAAI3rB,EAAE3D,GAAG,IAAII,EAAEJ,EAAE,GAAE,EAAGvB,EAAE,MAAK,GAAG,EAAG,IAAG,2EAA2EyC,MAAM,KAAKxC,SAAQ,SAASD,GAAG,IAAIuB,EAAEvB,EAAEqjB,QAAQuN,EAAGC,GAAI3rB,EAAE3D,GAAG,IAAII,EAAEJ,EAAE,GAAE,EAAGvB,EAAE,gCAA+B,GAAG,EAAG,IAAG,CAAC,WAAW,WAAW,aAAaC,SAAQ,SAASD,GAAG,IAAIuB,EAAEvB,EAAEqjB,QAAQuN,EAAGC,GAAI3rB,EAAE3D,GAAG,IAAII,EAAEJ,EAAE,GAAE,EAAGvB,EAAE,wCAAuC,GAAG,EAAG,IAAG,CAAC,WAAW,eAAeC,SAAQ,SAASD,GAAGkF,EAAElF,GAAG,IAAI2B,EAAE3B,EAAE,GAAE,EAAGA,EAAE2a,cAAc,MAAK,GAAG,EAAG,IACldzV,EAAEmsB,UAAU,IAAI1vB,EAAE,YAAY,GAAE,EAAG,aAAa,gCAA+B,GAAG,GAAI,CAAC,MAAM,OAAO,SAAS,cAAc1B,SAAQ,SAASD,GAAGkF,EAAElF,GAAG,IAAI2B,EAAE3B,EAAE,GAAE,EAAGA,EAAE2a,cAAc,MAAK,GAAG,EAAG,IAE5L,IAAI2W,EAAGhC,EAAGiC,mDAAmDC,EAAGjuB,OAAOkuB,IAAI,iBAAiBC,EAAGnuB,OAAOkuB,IAAI,gBAAgBE,EAAGpuB,OAAOkuB,IAAI,kBAAkBG,EAAGruB,OAAOkuB,IAAI,qBAAqBI,EAAGtuB,OAAOkuB,IAAI,kBAAkBK,EAAGvuB,OAAOkuB,IAAI,kBAAkBM,EAAGxuB,OAAOkuB,IAAI,iBAAiBO,EAAGzuB,OAAOkuB,IAAI,qBAAqBQ,EAAG1uB,OAAOkuB,IAAI,kBAAkBS,EAAG3uB,OAAOkuB,IAAI,uBAAuBU,EAAG5uB,OAAOkuB,IAAI,cAAcW,EAAG7uB,OAAOkuB,IAAI,cAAcluB,OAAOkuB,IAAI,eAAeluB,OAAOkuB,IAAI,0BACje,IAAIY,EAAG9uB,OAAOkuB,IAAI,mBAAmBluB,OAAOkuB,IAAI,uBAAuBluB,OAAOkuB,IAAI,eAAeluB,OAAOkuB,IAAI,wBAAwB,IAAIa,EAAG/uB,OAAOC,SAAS,SAAS+uB,EAAGvyB,GAAG,OAAG,OAAOA,GAAG,kBAAkBA,EAAS,KAAwC,oBAAnCA,EAAEsyB,GAAItyB,EAAEsyB,IAAKtyB,EAAE,eAA0CA,EAAE,IAAI,CAAC,IAAoBwyB,EAAhBnvB,EAAEjF,OAAOS,OAAU,SAAS4zB,EAAGzyB,GAAG,QAAG,IAASwyB,EAAG,IAAI,MAAM9wB,OAAQ,CAAC,MAAMvB,GAAG,IAAIoB,EAAEpB,EAAEugB,MAAM0C,OAAO3C,MAAM,gBAAgB+R,EAAGjxB,GAAGA,EAAE,IAAI,EAAE,CAAC,MAAM,KAAKixB,EAAGxyB,CAAC,CAAC,IAAI0yB,GAAG,EACzb,SAASC,EAAG3yB,EAAEuB,GAAG,IAAIvB,GAAG0yB,EAAG,MAAM,GAAGA,GAAG,EAAG,IAAIvyB,EAAEuB,MAAMkxB,kBAAkBlxB,MAAMkxB,uBAAkB,EAAO,IAAI,GAAGrxB,EAAE,GAAGA,EAAE,WAAW,MAAMG,OAAQ,EAAEtD,OAAOsC,eAAea,EAAE9C,UAAU,QAAQ,CAACmC,IAAI,WAAW,MAAMc,OAAQ,IAAI,kBAAkBpB,SAASA,QAAQuyB,UAAU,CAAC,IAAIvyB,QAAQuyB,UAAUtxB,EAAE,GAAG,CAAC,MAAMf,GAAG,IAAIc,EAAEd,CAAC,CAACF,QAAQuyB,UAAU7yB,EAAE,GAAGuB,EAAE,KAAK,CAAC,IAAIA,EAAE5C,MAAM,CAAC,MAAM6B,GAAGc,EAAEd,CAAC,CAACR,EAAErB,KAAK4C,EAAE9C,UAAU,KAAK,CAAC,IAAI,MAAMiD,OAAQ,CAAC,MAAMlB,GAAGc,EAAEd,CAAC,CAACR,GAAG,CAAC,CAAC,MAAMQ,GAAG,GAAGA,GAAGc,GAAG,kBAAkBd,EAAEkgB,MAAM,CAAC,IAAI,IAAIxiB,EAAEsC,EAAEkgB,MAAMje,MAAM,MACnflD,EAAE+B,EAAEof,MAAMje,MAAM,MAAMF,EAAErE,EAAEc,OAAO,EAAEoC,EAAE7B,EAAEP,OAAO,EAAE,GAAGuD,GAAG,GAAGnB,GAAGlD,EAAEqE,KAAKhD,EAAE6B,IAAIA,IAAI,KAAK,GAAGmB,GAAG,GAAGnB,EAAEmB,IAAInB,IAAI,GAAGlD,EAAEqE,KAAKhD,EAAE6B,GAAG,CAAC,GAAG,IAAImB,GAAG,IAAInB,EAAG,MAAMmB,IAAQ,IAAJnB,GAASlD,EAAEqE,KAAKhD,EAAE6B,GAAG,CAAC,IAAIU,EAAE,KAAK5D,EAAEqE,GAAG8gB,QAAQ,WAAW,QAA6F,OAArFrjB,EAAE8yB,aAAahxB,EAAE8V,SAAS,iBAAiB9V,EAAEA,EAAEuhB,QAAQ,cAAcrjB,EAAE8yB,cAAqBhxB,CAAC,QAAO,GAAGS,GAAG,GAAGnB,GAAG,KAAK,CAAC,CAAC,CAAC,QAAQsxB,GAAG,EAAGhxB,MAAMkxB,kBAAkBzyB,CAAC,CAAC,OAAOH,EAAEA,EAAEA,EAAE8yB,aAAa9yB,EAAE0E,KAAK,IAAI+tB,EAAGzyB,GAAG,EAAE,CAC9Z,SAAS+yB,EAAG/yB,GAAG,OAAOA,EAAEgzB,KAAK,KAAK,EAAE,OAAOP,EAAGzyB,EAAEgO,MAAM,KAAK,GAAG,OAAOykB,EAAG,QAAQ,KAAK,GAAG,OAAOA,EAAG,YAAY,KAAK,GAAG,OAAOA,EAAG,gBAAgB,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,OAAOzyB,EAAE2yB,EAAG3yB,EAAEgO,MAAK,GAAM,KAAK,GAAG,OAAOhO,EAAE2yB,EAAG3yB,EAAEgO,KAAKilB,QAAO,GAAM,KAAK,EAAE,OAAOjzB,EAAE2yB,EAAG3yB,EAAEgO,MAAK,GAAM,QAAQ,MAAM,GAAG,CACxR,SAASklB,EAAGlzB,GAAG,GAAG,MAAMA,EAAE,OAAO,KAAK,GAAG,oBAAoBA,EAAE,OAAOA,EAAE8yB,aAAa9yB,EAAE0E,MAAM,KAAK,GAAG,kBAAkB1E,EAAE,OAAOA,EAAE,OAAOA,GAAG,KAAK2xB,EAAG,MAAM,WAAW,KAAKD,EAAG,MAAM,SAAS,KAAKG,EAAG,MAAM,WAAW,KAAKD,EAAG,MAAM,aAAa,KAAKK,EAAG,MAAM,WAAW,KAAKC,EAAG,MAAM,eAAe,GAAG,kBAAkBlyB,EAAE,OAAOA,EAAEmzB,UAAU,KAAKpB,EAAG,OAAO/xB,EAAE8yB,aAAa,WAAW,YAAY,KAAKhB,EAAG,OAAO9xB,EAAEozB,SAASN,aAAa,WAAW,YAAY,KAAKd,EAAG,IAAIzwB,EAAEvB,EAAEizB,OAC7Z,OADoajzB,EAAEA,EAAE8yB,eACnd9yB,EAAE,MADieA,EAAEuB,EAAEuxB,aAClfvxB,EAAEmD,MAAM,IAAY,cAAc1E,EAAE,IAAI,cAAqBA,EAAE,KAAKmyB,EAAG,OAA6B,QAAtB5wB,EAAEvB,EAAE8yB,aAAa,MAAcvxB,EAAE2xB,EAAGlzB,EAAEgO,OAAO,OAAO,KAAKokB,EAAG7wB,EAAEvB,EAAEqzB,SAASrzB,EAAEA,EAAEszB,MAAM,IAAI,OAAOJ,EAAGlzB,EAAEuB,GAAG,CAAC,MAAMpB,GAAG,EAAE,OAAO,IAAI,CAC3M,SAASozB,EAAGvzB,GAAG,IAAIuB,EAAEvB,EAAEgO,KAAK,OAAOhO,EAAEgzB,KAAK,KAAK,GAAG,MAAM,QAAQ,KAAK,EAAE,OAAOzxB,EAAEuxB,aAAa,WAAW,YAAY,KAAK,GAAG,OAAOvxB,EAAE6xB,SAASN,aAAa,WAAW,YAAY,KAAK,GAAG,MAAM,qBAAqB,KAAK,GAAG,OAAkB9yB,GAAXA,EAAEuB,EAAE0xB,QAAWH,aAAa9yB,EAAE0E,MAAM,GAAGnD,EAAEuxB,cAAc,KAAK9yB,EAAE,cAAcA,EAAE,IAAI,cAAc,KAAK,EAAE,MAAM,WAAW,KAAK,EAAE,OAAOuB,EAAE,KAAK,EAAE,MAAM,SAAS,KAAK,EAAE,MAAM,OAAO,KAAK,EAAE,MAAM,OAAO,KAAK,GAAG,OAAO2xB,EAAG3xB,GAAG,KAAK,EAAE,OAAOA,IAAIqwB,EAAG,aAAa,OAAO,KAAK,GAAG,MAAM,YACtf,KAAK,GAAG,MAAM,WAAW,KAAK,GAAG,MAAM,QAAQ,KAAK,GAAG,MAAM,WAAW,KAAK,GAAG,MAAM,eAAe,KAAK,GAAG,MAAM,gBAAgB,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,KAAK,GAAG,GAAG,oBAAoBrwB,EAAE,OAAOA,EAAEuxB,aAAavxB,EAAEmD,MAAM,KAAK,GAAG,kBAAkBnD,EAAE,OAAOA,EAAE,OAAO,IAAI,CAAC,SAASiyB,EAAGxzB,GAAG,cAAcA,GAAG,IAAK,UAAU,IAAK,SAAS,IAAK,SAAS,IAAK,YAAqB,IAAK,SAAS,OAAOA,EAAE,QAAQ,MAAM,GAAG,CACra,SAASyzB,EAAGzzB,GAAG,IAAIuB,EAAEvB,EAAEgO,KAAK,OAAOhO,EAAEA,EAAE0zB,WAAW,UAAU1zB,EAAE2a,gBAAgB,aAAapZ,GAAG,UAAUA,EAAE,CAEtF,SAASoyB,EAAG3zB,GAAGA,EAAE4zB,gBAAgB5zB,EAAE4zB,cADvD,SAAY5zB,GAAG,IAAIuB,EAAEkyB,EAAGzzB,GAAG,UAAU,QAAQG,EAAE/B,OAAOiD,yBAAyBrB,EAAEkD,YAAYzE,UAAU8C,GAAGD,EAAE,GAAGtB,EAAEuB,GAAG,IAAIvB,EAAEtB,eAAe6C,IAAI,qBAAqBpB,GAAG,oBAAoBA,EAAEQ,KAAK,oBAAoBR,EAAES,IAAI,CAAC,IAAI1C,EAAEiC,EAAEQ,IAAIpB,EAAEY,EAAES,IAAiL,OAA7KxC,OAAOsC,eAAeV,EAAEuB,EAAE,CAACV,cAAa,EAAGF,IAAI,WAAW,OAAOzC,EAAES,KAAKQ,KAAK,EAAEyB,IAAI,SAASZ,GAAGsB,EAAE,GAAGtB,EAAET,EAAEZ,KAAKQ,KAAKa,EAAE,IAAI5B,OAAOsC,eAAeV,EAAEuB,EAAE,CAAC8R,WAAWlT,EAAEkT,aAAmB,CAACiZ,SAAS,WAAW,OAAOhrB,CAAC,EAAEuyB,SAAS,SAAS7zB,GAAGsB,EAAE,GAAGtB,CAAC,EAAE8zB,aAAa,WAAW9zB,EAAE4zB,cACxf,YAAY5zB,EAAEuB,EAAE,EAAE,CAAC,CAAkDwyB,CAAG/zB,GAAG,CAAC,SAASg0B,EAAGh0B,GAAG,IAAIA,EAAE,OAAM,EAAG,IAAIuB,EAAEvB,EAAE4zB,cAAc,IAAIryB,EAAE,OAAM,EAAG,IAAIpB,EAAEoB,EAAE+qB,WAAehrB,EAAE,GAAqD,OAAlDtB,IAAIsB,EAAEmyB,EAAGzzB,GAAGA,EAAEi0B,QAAQ,OAAO,QAAQj0B,EAAEc,QAAOd,EAAEsB,KAAanB,IAAGoB,EAAEsyB,SAAS7zB,IAAG,EAAM,CAAC,SAASk0B,EAAGl0B,GAAwD,GAAG,qBAAxDA,EAAEA,IAAI,qBAAqB+vB,SAASA,cAAS,IAAkC,OAAO,KAAK,IAAI,OAAO/vB,EAAEm0B,eAAen0B,EAAEo0B,IAAI,CAAC,MAAM7yB,GAAG,OAAOvB,EAAEo0B,IAAI,CAAC,CACpa,SAASC,EAAGr0B,EAAEuB,GAAG,IAAIpB,EAAEoB,EAAE0yB,QAAQ,OAAO5wB,EAAE,CAAC,EAAE9B,EAAE,CAAC+yB,oBAAe,EAAOC,kBAAa,EAAOzzB,WAAM,EAAOmzB,QAAQ,MAAM9zB,EAAEA,EAAEH,EAAEw0B,cAAcC,gBAAgB,CAAC,SAASC,EAAG10B,EAAEuB,GAAG,IAAIpB,EAAE,MAAMoB,EAAEgzB,aAAa,GAAGhzB,EAAEgzB,aAAajzB,EAAE,MAAMC,EAAE0yB,QAAQ1yB,EAAE0yB,QAAQ1yB,EAAE+yB,eAAen0B,EAAEqzB,EAAG,MAAMjyB,EAAET,MAAMS,EAAET,MAAMX,GAAGH,EAAEw0B,cAAc,CAACC,eAAenzB,EAAEqzB,aAAax0B,EAAEy0B,WAAW,aAAarzB,EAAEyM,MAAM,UAAUzM,EAAEyM,KAAK,MAAMzM,EAAE0yB,QAAQ,MAAM1yB,EAAET,MAAM,CAAC,SAAS+zB,EAAG70B,EAAEuB,GAAe,OAAZA,EAAEA,EAAE0yB,UAAiBnD,EAAG9wB,EAAE,UAAUuB,GAAE,EAAG,CAC9d,SAASuzB,EAAG90B,EAAEuB,GAAGszB,EAAG70B,EAAEuB,GAAG,IAAIpB,EAAEqzB,EAAGjyB,EAAET,OAAOQ,EAAEC,EAAEyM,KAAK,GAAG,MAAM7N,EAAK,WAAWmB,GAAM,IAAInB,GAAG,KAAKH,EAAEc,OAAOd,EAAEc,OAAOX,KAAEH,EAAEc,MAAM,GAAGX,GAAOH,EAAEc,QAAQ,GAAGX,IAAIH,EAAEc,MAAM,GAAGX,QAAQ,GAAG,WAAWmB,GAAG,UAAUA,EAA8B,YAA3BtB,EAAEkxB,gBAAgB,SAAgB3vB,EAAE7C,eAAe,SAASq2B,GAAG/0B,EAAEuB,EAAEyM,KAAK7N,GAAGoB,EAAE7C,eAAe,iBAAiBq2B,GAAG/0B,EAAEuB,EAAEyM,KAAKwlB,EAAGjyB,EAAEgzB,eAAe,MAAMhzB,EAAE0yB,SAAS,MAAM1yB,EAAE+yB,iBAAiBt0B,EAAEs0B,iBAAiB/yB,EAAE+yB,eAAe,CACla,SAAS5kB,EAAG1P,EAAEuB,EAAEpB,GAAG,GAAGoB,EAAE7C,eAAe,UAAU6C,EAAE7C,eAAe,gBAAgB,CAAC,IAAI4C,EAAEC,EAAEyM,KAAK,KAAK,WAAW1M,GAAG,UAAUA,QAAG,IAASC,EAAET,OAAO,OAAOS,EAAET,OAAO,OAAOS,EAAE,GAAGvB,EAAEw0B,cAAcG,aAAax0B,GAAGoB,IAAIvB,EAAEc,QAAQd,EAAEc,MAAMS,GAAGvB,EAAEu0B,aAAahzB,CAAC,CAAU,MAATpB,EAAEH,EAAE0E,QAAc1E,EAAE0E,KAAK,IAAI1E,EAAEs0B,iBAAiBt0B,EAAEw0B,cAAcC,eAAe,KAAKt0B,IAAIH,EAAE0E,KAAKvE,EAAE,CACzV,SAAS40B,GAAG/0B,EAAEuB,EAAEpB,GAAM,WAAWoB,GAAG2yB,EAAGl0B,EAAEg1B,iBAAiBh1B,IAAE,MAAMG,EAAEH,EAAEu0B,aAAa,GAAGv0B,EAAEw0B,cAAcG,aAAa30B,EAAEu0B,eAAe,GAAGp0B,IAAIH,EAAEu0B,aAAa,GAAGp0B,GAAE,CAAC,IAAI80B,GAAG12B,MAAMwB,QAC7K,SAASm1B,GAAGl1B,EAAEuB,EAAEpB,EAAEmB,GAAe,GAAZtB,EAAEA,EAAEm1B,QAAW5zB,EAAE,CAACA,EAAE,CAAC,EAAE,IAAI,IAAIrD,EAAE,EAAEA,EAAEiC,EAAEnB,OAAOd,IAAIqD,EAAE,IAAIpB,EAAEjC,KAAI,EAAG,IAAIiC,EAAE,EAAEA,EAAEH,EAAEhB,OAAOmB,IAAIjC,EAAEqD,EAAE7C,eAAe,IAAIsB,EAAEG,GAAGW,OAAOd,EAAEG,GAAGi1B,WAAWl3B,IAAI8B,EAAEG,GAAGi1B,SAASl3B,GAAGA,GAAGoD,IAAItB,EAAEG,GAAGk1B,iBAAgB,EAAG,KAAK,CAAmB,IAAlBl1B,EAAE,GAAGqzB,EAAGrzB,GAAGoB,EAAE,KAASrD,EAAE,EAAEA,EAAE8B,EAAEhB,OAAOd,IAAI,CAAC,GAAG8B,EAAE9B,GAAG4C,QAAQX,EAAiD,OAA9CH,EAAE9B,GAAGk3B,UAAS,OAAG9zB,IAAItB,EAAE9B,GAAGm3B,iBAAgB,IAAW,OAAO9zB,GAAGvB,EAAE9B,GAAGo3B,WAAW/zB,EAAEvB,EAAE9B,GAAG,CAAC,OAAOqD,IAAIA,EAAE6zB,UAAS,EAAG,CAAC,CACxY,SAASG,GAAGv1B,EAAEuB,GAAG,GAAG,MAAMA,EAAEi0B,wBAAwB,MAAM9zB,MAAMF,EAAE,KAAK,OAAO6B,EAAE,CAAC,EAAE9B,EAAE,CAACT,WAAM,EAAOyzB,kBAAa,EAAOkB,SAAS,GAAGz1B,EAAEw0B,cAAcG,cAAc,CAAC,SAASe,GAAG11B,EAAEuB,GAAG,IAAIpB,EAAEoB,EAAET,MAAM,GAAG,MAAMX,EAAE,CAA+B,GAA9BA,EAAEoB,EAAEk0B,SAASl0B,EAAEA,EAAEgzB,aAAgB,MAAMp0B,EAAE,CAAC,GAAG,MAAMoB,EAAE,MAAMG,MAAMF,EAAE,KAAK,GAAGyzB,GAAG90B,GAAG,CAAC,GAAG,EAAEA,EAAEnB,OAAO,MAAM0C,MAAMF,EAAE,KAAKrB,EAAEA,EAAE,EAAE,CAACoB,EAAEpB,CAAC,CAAC,MAAMoB,IAAIA,EAAE,IAAIpB,EAAEoB,CAAC,CAACvB,EAAEw0B,cAAc,CAACG,aAAanB,EAAGrzB,GAAG,CACnY,SAASw1B,GAAG31B,EAAEuB,GAAG,IAAIpB,EAAEqzB,EAAGjyB,EAAET,OAAOQ,EAAEkyB,EAAGjyB,EAAEgzB,cAAc,MAAMp0B,KAAIA,EAAE,GAAGA,KAAMH,EAAEc,QAAQd,EAAEc,MAAMX,GAAG,MAAMoB,EAAEgzB,cAAcv0B,EAAEu0B,eAAep0B,IAAIH,EAAEu0B,aAAap0B,IAAI,MAAMmB,IAAItB,EAAEu0B,aAAa,GAAGjzB,EAAE,CAAC,SAASs0B,GAAG51B,GAAG,IAAIuB,EAAEvB,EAAE61B,YAAYt0B,IAAIvB,EAAEw0B,cAAcG,cAAc,KAAKpzB,GAAG,OAAOA,IAAIvB,EAAEc,MAAMS,EAAE,CAAC,SAASu0B,GAAG91B,GAAG,OAAOA,GAAG,IAAK,MAAM,MAAM,6BAA6B,IAAK,OAAO,MAAM,qCAAqC,QAAQ,MAAM,+BAA+B,CAC7c,SAAS+1B,GAAG/1B,EAAEuB,GAAG,OAAO,MAAMvB,GAAG,iCAAiCA,EAAE81B,GAAGv0B,GAAG,+BAA+BvB,GAAG,kBAAkBuB,EAAE,+BAA+BvB,CAAC,CAChK,IAAIg2B,GAAeh2B,GAAZi2B,IAAYj2B,GAAsJ,SAASA,EAAEuB,GAAG,GAAG,+BAA+BvB,EAAEk2B,cAAc,cAAcl2B,EAAEA,EAAEm2B,UAAU50B,MAAM,CAA2F,KAA1Fy0B,GAAGA,IAAIjG,SAASC,cAAc,QAAUmG,UAAU,QAAQ50B,EAAE60B,UAAUhzB,WAAW,SAAa7B,EAAEy0B,GAAGK,WAAWr2B,EAAEq2B,YAAYr2B,EAAEs2B,YAAYt2B,EAAEq2B,YAAY,KAAK90B,EAAE80B,YAAYr2B,EAAEu2B,YAAYh1B,EAAE80B,WAAW,CAAC,EAAvb,qBAAqBG,OAAOA,MAAMC,wBAAwB,SAASl1B,EAAEpB,EAAEmB,EAAEpD,GAAGs4B,MAAMC,yBAAwB,WAAW,OAAOz2B,GAAEuB,EAAEpB,EAAM,GAAE,EAAEH,IACtK,SAAS02B,GAAG12B,EAAEuB,GAAG,GAAGA,EAAE,CAAC,IAAIpB,EAAEH,EAAEq2B,WAAW,GAAGl2B,GAAGA,IAAIH,EAAE22B,WAAW,IAAIx2B,EAAEy2B,SAAwB,YAAdz2B,EAAE02B,UAAUt1B,EAAS,CAACvB,EAAE61B,YAAYt0B,CAAC,CACtH,IAAIu1B,GAAG,CAACC,yBAAwB,EAAGC,aAAY,EAAGC,mBAAkB,EAAGC,kBAAiB,EAAGC,kBAAiB,EAAGC,SAAQ,EAAGC,cAAa,EAAGC,iBAAgB,EAAGC,aAAY,EAAGC,SAAQ,EAAGC,MAAK,EAAGC,UAAS,EAAGC,cAAa,EAAGC,YAAW,EAAGC,cAAa,EAAGC,WAAU,EAAGC,UAAS,EAAGC,SAAQ,EAAGC,YAAW,EAAGC,aAAY,EAAGC,cAAa,EAAGC,YAAW,EAAGC,eAAc,EAAGC,gBAAe,EAAGC,iBAAgB,EAAGC,YAAW,EAAGC,WAAU,EAAGC,YAAW,EAAGC,SAAQ,EAAGC,OAAM,EAAGC,SAAQ,EAAGC,SAAQ,EAAGC,QAAO,EAAGC,QAAO,EAClfC,MAAK,EAAGC,aAAY,EAAGC,cAAa,EAAGC,aAAY,EAAGC,iBAAgB,EAAGC,kBAAiB,EAAGC,kBAAiB,EAAGC,eAAc,EAAGC,aAAY,GAAIC,GAAG,CAAC,SAAS,KAAK,MAAM,KAA6H,SAASC,GAAG35B,EAAEuB,EAAEpB,GAAG,OAAO,MAAMoB,GAAG,mBAAmBA,GAAG,KAAKA,EAAE,GAAGpB,GAAG,kBAAkBoB,GAAG,IAAIA,GAAGu1B,GAAGp4B,eAAesB,IAAI82B,GAAG92B,IAAI,GAAGuB,GAAG6hB,OAAO7hB,EAAE,IAAI,CACzb,SAASq4B,GAAG55B,EAAEuB,GAAa,IAAI,IAAIpB,KAAlBH,EAAEA,EAAE65B,MAAmBt4B,EAAE,GAAGA,EAAE7C,eAAeyB,GAAG,CAAC,IAAImB,EAAE,IAAInB,EAAE6B,QAAQ,MAAM9D,EAAEy7B,GAAGx5B,EAAEoB,EAAEpB,GAAGmB,GAAG,UAAUnB,IAAIA,EAAE,YAAYmB,EAAEtB,EAAE85B,YAAY35B,EAAEjC,GAAG8B,EAAEG,GAAGjC,CAAC,CAAC,CADYE,OAAOyB,KAAKi3B,IAAI72B,SAAQ,SAASD,GAAG05B,GAAGz5B,SAAQ,SAASsB,GAAGA,EAAEA,EAAEvB,EAAE+5B,OAAO,GAAGrf,cAAc1a,EAAE+X,UAAU,GAAG+e,GAAGv1B,GAAGu1B,GAAG92B,EAAE,GAAE,IAChI,IAAIg6B,GAAG32B,EAAE,CAAC42B,UAAS,GAAI,CAACC,MAAK,EAAGC,MAAK,EAAGC,IAAG,EAAGC,KAAI,EAAGC,OAAM,EAAGC,IAAG,EAAGC,KAAI,EAAGC,OAAM,EAAGC,QAAO,EAAGC,MAAK,EAAGC,MAAK,EAAGC,OAAM,EAAGC,QAAO,EAAGC,OAAM,EAAGC,KAAI,IAClT,SAASC,GAAGj7B,EAAEuB,GAAG,GAAGA,EAAE,CAAC,GAAGy4B,GAAGh6B,KAAK,MAAMuB,EAAEk0B,UAAU,MAAMl0B,EAAEi0B,yBAAyB,MAAM9zB,MAAMF,EAAE,IAAIxB,IAAI,GAAG,MAAMuB,EAAEi0B,wBAAwB,CAAC,GAAG,MAAMj0B,EAAEk0B,SAAS,MAAM/zB,MAAMF,EAAE,KAAK,GAAG,kBAAkBD,EAAEi0B,2BAA2B,WAAWj0B,EAAEi0B,yBAAyB,MAAM9zB,MAAMF,EAAE,IAAK,CAAC,GAAG,MAAMD,EAAEs4B,OAAO,kBAAkBt4B,EAAEs4B,MAAM,MAAMn4B,MAAMF,EAAE,IAAK,CAAC,CAClW,SAAS05B,GAAGl7B,EAAEuB,GAAG,IAAI,IAAIvB,EAAEgC,QAAQ,KAAK,MAAM,kBAAkBT,EAAE45B,GAAG,OAAOn7B,GAAG,IAAK,iBAAiB,IAAK,gBAAgB,IAAK,YAAY,IAAK,gBAAgB,IAAK,gBAAgB,IAAK,mBAAmB,IAAK,iBAAiB,IAAK,gBAAgB,OAAM,EAAG,QAAQ,OAAM,EAAG,CAAC,IAAIo7B,GAAG,KAAK,SAASC,GAAGr7B,GAA6F,OAA1FA,EAAEA,EAAEqc,QAAQrc,EAAEs7B,YAAY57B,QAAS67B,0BAA0Bv7B,EAAEA,EAAEu7B,yBAAgC,IAAIv7B,EAAE42B,SAAS52B,EAAEw7B,WAAWx7B,CAAC,CAAC,IAAIy7B,GAAG,KAAKC,GAAG,KAAKC,GAAG,KACpc,SAASC,GAAG57B,GAAG,GAAGA,EAAE67B,GAAG77B,GAAG,CAAC,GAAG,oBAAoBy7B,GAAG,MAAM/5B,MAAMF,EAAE,MAAM,IAAID,EAAEvB,EAAE87B,UAAUv6B,IAAIA,EAAEw6B,GAAGx6B,GAAGk6B,GAAGz7B,EAAE87B,UAAU97B,EAAEgO,KAAKzM,GAAG,CAAC,CAAC,SAASy6B,GAAGh8B,GAAG07B,GAAGC,GAAGA,GAAG55B,KAAK/B,GAAG27B,GAAG,CAAC37B,GAAG07B,GAAG17B,CAAC,CAAC,SAASi8B,KAAK,GAAGP,GAAG,CAAC,IAAI17B,EAAE07B,GAAGn6B,EAAEo6B,GAAoB,GAAjBA,GAAGD,GAAG,KAAKE,GAAG57B,GAAMuB,EAAE,IAAIvB,EAAE,EAAEA,EAAEuB,EAAEvC,OAAOgB,IAAI47B,GAAGr6B,EAAEvB,GAAG,CAAC,CAAC,SAASk8B,GAAGl8B,EAAEuB,GAAG,OAAOvB,EAAEuB,EAAE,CAAC,SAAS46B,KAAK,CAAC,IAAIC,IAAG,EAAG,SAASC,GAAGr8B,EAAEuB,EAAEpB,GAAG,GAAGi8B,GAAG,OAAOp8B,EAAEuB,EAAEpB,GAAGi8B,IAAG,EAAG,IAAI,OAAOF,GAAGl8B,EAAEuB,EAAEpB,EAAE,CAAC,QAAWi8B,IAAG,GAAG,OAAOV,IAAI,OAAOC,MAAGQ,KAAKF,KAAI,CAAC,CAChb,SAASK,GAAGt8B,EAAEuB,GAAG,IAAIpB,EAAEH,EAAE87B,UAAU,GAAG,OAAO37B,EAAE,OAAO,KAAK,IAAImB,EAAEy6B,GAAG57B,GAAG,GAAG,OAAOmB,EAAE,OAAO,KAAKnB,EAAEmB,EAAEC,GAAGvB,EAAE,OAAOuB,GAAG,IAAK,UAAU,IAAK,iBAAiB,IAAK,gBAAgB,IAAK,uBAAuB,IAAK,cAAc,IAAK,qBAAqB,IAAK,cAAc,IAAK,qBAAqB,IAAK,YAAY,IAAK,mBAAmB,IAAK,gBAAgBD,GAAGA,EAAEg0B,YAAqBh0B,IAAI,YAAbtB,EAAEA,EAAEgO,OAAuB,UAAUhO,GAAG,WAAWA,GAAG,aAAaA,IAAIA,GAAGsB,EAAE,MAAMtB,EAAE,QAAQA,GAAE,EAAG,GAAGA,EAAE,OAAO,KAAK,GAAGG,GAAG,oBACleA,EAAE,MAAMuB,MAAMF,EAAE,IAAID,SAASpB,IAAI,OAAOA,CAAC,CAAC,IAAIo8B,IAAG,EAAG,GAAGzM,EAAG,IAAI,IAAI0M,GAAG,CAAC,EAAEp+B,OAAOsC,eAAe87B,GAAG,UAAU,CAAC77B,IAAI,WAAW47B,IAAG,CAAE,IAAI78B,OAAO6pB,iBAAiB,OAAOiT,GAAGA,IAAI98B,OAAO+8B,oBAAoB,OAAOD,GAAGA,GAAG,CAAC,MAAMx8B,IAAGu8B,IAAG,CAAE,CAAC,SAASG,GAAG18B,EAAEuB,EAAEpB,EAAEmB,EAAEpD,EAAEqB,EAAEgD,EAAEnB,EAAEU,GAAG,IAAItB,EAAEjC,MAAME,UAAUY,MAAMV,KAAKI,UAAU,GAAG,IAAIwC,EAAErC,MAAMiB,EAAEK,EAAE,CAAC,MAAMH,GAAGlB,KAAKw9B,QAAQt8B,EAAE,CAAC,CAAC,IAAIu8B,IAAG,EAAGC,GAAG,KAAKC,IAAG,EAAGC,GAAG,KAAKC,GAAG,CAACL,QAAQ,SAAS38B,GAAG48B,IAAG,EAAGC,GAAG78B,CAAC,GAAG,SAASi9B,GAAGj9B,EAAEuB,EAAEpB,EAAEmB,EAAEpD,EAAEqB,EAAEgD,EAAEnB,EAAEU,GAAG86B,IAAG,EAAGC,GAAG,KAAKH,GAAGx9B,MAAM89B,GAAGj+B,UAAU,CACjW,SAASm+B,GAAGl9B,GAAG,IAAIuB,EAAEvB,EAAEG,EAAEH,EAAE,GAAGA,EAAEm9B,UAAU,KAAK57B,EAAE67B,QAAQ77B,EAAEA,EAAE67B,WAAW,CAACp9B,EAAEuB,EAAE,GAAO,KAAa,MAAjBA,EAAEvB,GAASq9B,SAAcl9B,EAAEoB,EAAE67B,QAAQp9B,EAAEuB,EAAE67B,aAAap9B,EAAE,CAAC,OAAO,IAAIuB,EAAEyxB,IAAI7yB,EAAE,IAAI,CAAC,SAASm9B,GAAGt9B,GAAG,GAAG,KAAKA,EAAEgzB,IAAI,CAAC,IAAIzxB,EAAEvB,EAAEu9B,cAAsE,GAAxD,OAAOh8B,IAAkB,QAAdvB,EAAEA,EAAEm9B,aAAqB57B,EAAEvB,EAAEu9B,gBAAmB,OAAOh8B,EAAE,OAAOA,EAAEi8B,UAAU,CAAC,OAAO,IAAI,CAAC,SAASC,GAAGz9B,GAAG,GAAGk9B,GAAGl9B,KAAKA,EAAE,MAAM0B,MAAMF,EAAE,KAAM,CAE1S,SAASk8B,GAAG19B,GAAW,OAAO,QAAfA,EADtN,SAAYA,GAAG,IAAIuB,EAAEvB,EAAEm9B,UAAU,IAAI57B,EAAE,CAAS,GAAG,QAAXA,EAAE27B,GAAGl9B,IAAe,MAAM0B,MAAMF,EAAE,MAAM,OAAOD,IAAIvB,EAAE,KAAKA,CAAC,CAAC,IAAI,IAAIG,EAAEH,EAAEsB,EAAEC,IAAI,CAAC,IAAIrD,EAAEiC,EAAEi9B,OAAO,GAAG,OAAOl/B,EAAE,MAAM,IAAIqB,EAAErB,EAAEi/B,UAAU,GAAG,OAAO59B,EAAE,CAAY,GAAG,QAAd+B,EAAEpD,EAAEk/B,QAAmB,CAACj9B,EAAEmB,EAAE,QAAQ,CAAC,KAAK,CAAC,GAAGpD,EAAEy/B,QAAQp+B,EAAEo+B,MAAM,CAAC,IAAIp+B,EAAErB,EAAEy/B,MAAMp+B,GAAG,CAAC,GAAGA,IAAIY,EAAE,OAAOs9B,GAAGv/B,GAAG8B,EAAE,GAAGT,IAAI+B,EAAE,OAAOm8B,GAAGv/B,GAAGqD,EAAEhC,EAAEA,EAAEq+B,OAAO,CAAC,MAAMl8B,MAAMF,EAAE,KAAM,CAAC,GAAGrB,EAAEi9B,SAAS97B,EAAE87B,OAAOj9B,EAAEjC,EAAEoD,EAAE/B,MAAM,CAAC,IAAI,IAAIgD,GAAE,EAAGnB,EAAElD,EAAEy/B,MAAMv8B,GAAG,CAAC,GAAGA,IAAIjB,EAAE,CAACoC,GAAE,EAAGpC,EAAEjC,EAAEoD,EAAE/B,EAAE,KAAK,CAAC,GAAG6B,IAAIE,EAAE,CAACiB,GAAE,EAAGjB,EAAEpD,EAAEiC,EAAEZ,EAAE,KAAK,CAAC6B,EAAEA,EAAEw8B,OAAO,CAAC,IAAIr7B,EAAE,CAAC,IAAInB,EAAE7B,EAAEo+B,MAAMv8B,GAAG,CAAC,GAAGA,IAC5fjB,EAAE,CAACoC,GAAE,EAAGpC,EAAEZ,EAAE+B,EAAEpD,EAAE,KAAK,CAAC,GAAGkD,IAAIE,EAAE,CAACiB,GAAE,EAAGjB,EAAE/B,EAAEY,EAAEjC,EAAE,KAAK,CAACkD,EAAEA,EAAEw8B,OAAO,CAAC,IAAIr7B,EAAE,MAAMb,MAAMF,EAAE,KAAM,CAAC,CAAC,GAAGrB,EAAEg9B,YAAY77B,EAAE,MAAMI,MAAMF,EAAE,KAAM,CAAC,GAAG,IAAIrB,EAAE6yB,IAAI,MAAMtxB,MAAMF,EAAE,MAAM,OAAOrB,EAAE27B,UAAU+B,UAAU19B,EAAEH,EAAEuB,CAAC,CAAkBu8B,CAAG99B,IAAmB+9B,GAAG/9B,GAAG,IAAI,CAAC,SAAS+9B,GAAG/9B,GAAG,GAAG,IAAIA,EAAEgzB,KAAK,IAAIhzB,EAAEgzB,IAAI,OAAOhzB,EAAE,IAAIA,EAAEA,EAAE29B,MAAM,OAAO39B,GAAG,CAAC,IAAIuB,EAAEw8B,GAAG/9B,GAAG,GAAG,OAAOuB,EAAE,OAAOA,EAAEvB,EAAEA,EAAE49B,OAAO,CAAC,OAAO,IAAI,CAC1X,IAAII,GAAGxO,EAAGyO,0BAA0BC,GAAG1O,EAAG2O,wBAAwBC,GAAG5O,EAAG6O,qBAAqBC,GAAG9O,EAAG+O,sBAAsBx6B,GAAEyrB,EAAGgP,aAAaC,GAAGjP,EAAGkP,iCAAiCC,GAAGnP,EAAGoP,2BAA2BC,GAAGrP,EAAGsP,8BAA8BC,GAAGvP,EAAGwP,wBAAwBC,GAAGzP,EAAG0P,qBAAqBC,GAAG3P,EAAG4P,sBAAsBC,GAAG,KAAKC,GAAG,KACvV,IAAIC,GAAG9mB,KAAK+mB,MAAM/mB,KAAK+mB,MAAiC,SAAYx/B,GAAU,OAAPA,KAAK,EAAS,IAAIA,EAAE,GAAG,IAAIy/B,GAAGz/B,GAAG0/B,GAAG,GAAG,CAAC,EAA/ED,GAAGhnB,KAAKknB,IAAID,GAAGjnB,KAAKmnB,IAA4D,IAAIC,GAAG,GAAGC,GAAG,QAC7H,SAASC,GAAG//B,GAAG,OAAOA,GAAGA,GAAG,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,GAAG,OAAO,GAAG,KAAK,GAAG,OAAO,GAAG,KAAK,GAAG,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,OAAO,KAAK,OAAO,KAAK,OAAO,KAAK,QAAQ,KAAK,QAAQ,OAAS,QAAFA,EAAU,KAAK,QAAQ,KAAK,QAAQ,KAAK,SAAS,KAAK,SAAS,KAAK,SAAS,OAAS,UAAFA,EAAY,KAAK,UAAU,OAAO,UAAU,KAAK,UAAU,OAAO,UAAU,KAAK,UAAU,OAAO,UAAU,KAAK,WAAW,OAAO,WACzgB,QAAQ,OAAOA,EAAE,CAAC,SAASggC,GAAGhgC,EAAEuB,GAAG,IAAIpB,EAAEH,EAAEigC,aAAa,GAAG,IAAI9/B,EAAE,OAAO,EAAE,IAAImB,EAAE,EAAEpD,EAAE8B,EAAEkgC,eAAe3gC,EAAES,EAAEmgC,YAAY59B,EAAI,UAAFpC,EAAY,GAAG,IAAIoC,EAAE,CAAC,IAAInB,EAAEmB,GAAGrE,EAAE,IAAIkD,EAAEE,EAAEy+B,GAAG3+B,GAAS,KAAL7B,GAAGgD,KAAUjB,EAAEy+B,GAAGxgC,GAAI,MAAa,KAAPgD,EAAEpC,GAAGjC,GAAQoD,EAAEy+B,GAAGx9B,GAAG,IAAIhD,IAAI+B,EAAEy+B,GAAGxgC,IAAI,GAAG,IAAI+B,EAAE,OAAO,EAAE,GAAG,IAAIC,GAAGA,IAAID,GAAG,KAAKC,EAAErD,MAAKA,EAAEoD,GAAGA,KAAE/B,EAAEgC,GAAGA,IAAQ,KAAKrD,GAAG,KAAO,QAAFqB,IAAY,OAAOgC,EAA0C,GAAxC,KAAO,EAAFD,KAAOA,GAAK,GAAFnB,GAA4B,KAAtBoB,EAAEvB,EAAEogC,gBAAwB,IAAIpgC,EAAEA,EAAEqgC,cAAc9+B,GAAGD,EAAE,EAAEC,GAAcrD,EAAE,IAAbiC,EAAE,GAAGo/B,GAAGh+B,IAAUD,GAAGtB,EAAEG,GAAGoB,IAAIrD,EAAE,OAAOoD,CAAC,CACvc,SAASg/B,GAAGtgC,EAAEuB,GAAG,OAAOvB,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,OAAOuB,EAAE,IAAI,KAAK,EAAE,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,OAAO,KAAK,OAAO,KAAK,OAAO,KAAK,QAAQ,KAAK,QAAQ,OAAOA,EAAE,IAAuJ,QAAQ,OAAO,EAAE,CACrN,SAASg/B,GAAGvgC,GAAgC,OAAO,KAApCA,GAAkB,WAAhBA,EAAEigC,cAAsCjgC,EAAI,WAAFA,EAAa,WAAW,CAAC,CAAC,SAASwgC,KAAK,IAAIxgC,EAAE6/B,GAAoC,OAA1B,KAAQ,SAAfA,KAAK,MAAqBA,GAAG,IAAW7/B,CAAC,CAAC,SAASygC,GAAGzgC,GAAG,IAAI,IAAIuB,EAAE,GAAGpB,EAAE,EAAE,GAAGA,EAAEA,IAAIoB,EAAEQ,KAAK/B,GAAG,OAAOuB,CAAC,CAC3a,SAASm/B,GAAG1gC,EAAEuB,EAAEpB,GAAGH,EAAEigC,cAAc1+B,EAAE,YAAYA,IAAIvB,EAAEkgC,eAAe,EAAElgC,EAAEmgC,YAAY,IAAGngC,EAAEA,EAAE2gC,YAAWp/B,EAAE,GAAGg+B,GAAGh+B,IAAQpB,CAAC,CACzH,SAASygC,GAAG5gC,EAAEuB,GAAG,IAAIpB,EAAEH,EAAEogC,gBAAgB7+B,EAAE,IAAIvB,EAAEA,EAAEqgC,cAAclgC,GAAG,CAAC,IAAImB,EAAE,GAAGi+B,GAAGp/B,GAAGjC,EAAE,GAAGoD,EAAEpD,EAAEqD,EAAEvB,EAAEsB,GAAGC,IAAIvB,EAAEsB,IAAIC,GAAGpB,IAAIjC,CAAC,CAAC,CAAC,IAAIoF,GAAE,EAAE,SAASu9B,GAAG7gC,GAAS,OAAO,GAAbA,IAAIA,GAAa,EAAEA,EAAE,KAAO,UAAFA,GAAa,GAAG,UAAU,EAAE,CAAC,CAAC,IAAI8gC,GAAGC,GAAGC,GAAGC,GAAGC,GAAGC,IAAG,EAAGC,GAAG,GAAGC,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,IAAIpX,IAAIqX,GAAG,IAAIrX,IAAIsX,GAAG,GAAGC,GAAG,6PAA6Pl/B,MAAM,KAChiB,SAASm/B,GAAG5hC,EAAEuB,GAAG,OAAOvB,GAAG,IAAK,UAAU,IAAK,WAAWqhC,GAAG,KAAK,MAAM,IAAK,YAAY,IAAK,YAAYC,GAAG,KAAK,MAAM,IAAK,YAAY,IAAK,WAAWC,GAAG,KAAK,MAAM,IAAK,cAAc,IAAK,aAAaC,GAAGntB,OAAO9S,EAAEsgC,WAAW,MAAM,IAAK,oBAAoB,IAAK,qBAAqBJ,GAAGptB,OAAO9S,EAAEsgC,WAAW,CACnT,SAASC,GAAG9hC,EAAEuB,EAAEpB,EAAEmB,EAAEpD,EAAEqB,GAAG,OAAG,OAAOS,GAAGA,EAAE+hC,cAAcxiC,GAASS,EAAE,CAACgiC,UAAUzgC,EAAE0gC,aAAa9hC,EAAE+hC,iBAAiB5gC,EAAEygC,YAAYxiC,EAAE4iC,iBAAiB,CAACjkC,IAAI,OAAOqD,IAAY,QAARA,EAAEs6B,GAAGt6B,KAAaw/B,GAAGx/B,IAAIvB,IAAEA,EAAEkiC,kBAAkB5gC,EAAEC,EAAEvB,EAAEmiC,iBAAiB,OAAOjkC,IAAI,IAAIqD,EAAES,QAAQ9D,IAAIqD,EAAEQ,KAAK7D,GAAU8B,EAAC,CAEpR,SAASoiC,GAAGpiC,GAAG,IAAIuB,EAAE8gC,GAAGriC,EAAEqc,QAAQ,GAAG,OAAO9a,EAAE,CAAC,IAAIpB,EAAE+8B,GAAG37B,GAAG,GAAG,OAAOpB,EAAE,GAAW,MAARoB,EAAEpB,EAAE6yB,MAAY,GAAW,QAARzxB,EAAE+7B,GAAGn9B,IAA4D,OAA/CH,EAAEgiC,UAAUzgC,OAAE2/B,GAAGlhC,EAAEsiC,UAAS,WAAWtB,GAAG7gC,EAAE,SAAgB,GAAG,IAAIoB,GAAGpB,EAAE27B,UAAU+B,QAAQN,cAAcgF,aAAmE,YAArDviC,EAAEgiC,UAAU,IAAI7hC,EAAE6yB,IAAI7yB,EAAE27B,UAAU0G,cAAc,KAAY,CAACxiC,EAAEgiC,UAAU,IAAI,CAClT,SAASS,GAAGziC,GAAG,GAAG,OAAOA,EAAEgiC,UAAU,OAAM,EAAG,IAAI,IAAIzgC,EAAEvB,EAAEmiC,iBAAiB,EAAE5gC,EAAEvC,QAAQ,CAAC,IAAImB,EAAEuiC,GAAG1iC,EAAEiiC,aAAajiC,EAAEkiC,iBAAiB3gC,EAAE,GAAGvB,EAAE+hC,aAAa,GAAG,OAAO5hC,EAAiG,OAAe,QAARoB,EAAEs6B,GAAG17B,KAAa4gC,GAAGx/B,GAAGvB,EAAEgiC,UAAU7hC,GAAE,EAA3H,IAAImB,EAAE,IAAtBnB,EAAEH,EAAE+hC,aAAwB7+B,YAAY/C,EAAE6N,KAAK7N,GAAGi7B,GAAG95B,EAAEnB,EAAEkc,OAAO6R,cAAc5sB,GAAG85B,GAAG,KAA0D75B,EAAE4b,OAAO,CAAC,OAAM,CAAE,CAAC,SAASwlB,GAAG3iC,EAAEuB,EAAEpB,GAAGsiC,GAAGziC,IAAIG,EAAEkU,OAAO9S,EAAE,CAAC,SAASqhC,KAAKzB,IAAG,EAAG,OAAOE,IAAIoB,GAAGpB,MAAMA,GAAG,MAAM,OAAOC,IAAImB,GAAGnB,MAAMA,GAAG,MAAM,OAAOC,IAAIkB,GAAGlB,MAAMA,GAAG,MAAMC,GAAGvhC,QAAQ0iC,IAAIlB,GAAGxhC,QAAQ0iC,GAAG,CACnf,SAASE,GAAG7iC,EAAEuB,GAAGvB,EAAEgiC,YAAYzgC,IAAIvB,EAAEgiC,UAAU,KAAKb,KAAKA,IAAG,EAAG3R,EAAGyO,0BAA0BzO,EAAGwP,wBAAwB4D,KAAK,CAC5H,SAASE,GAAG9iC,GAAG,SAASuB,EAAEA,GAAG,OAAOshC,GAAGthC,EAAEvB,EAAE,CAAC,GAAG,EAAEohC,GAAGpiC,OAAO,CAAC6jC,GAAGzB,GAAG,GAAGphC,GAAG,IAAI,IAAIG,EAAE,EAAEA,EAAEihC,GAAGpiC,OAAOmB,IAAI,CAAC,IAAImB,EAAE8/B,GAAGjhC,GAAGmB,EAAE0gC,YAAYhiC,IAAIsB,EAAE0gC,UAAU,KAAK,CAAC,CAAyF,IAAxF,OAAOX,IAAIwB,GAAGxB,GAAGrhC,GAAG,OAAOshC,IAAIuB,GAAGvB,GAAGthC,GAAG,OAAOuhC,IAAIsB,GAAGtB,GAAGvhC,GAAGwhC,GAAGvhC,QAAQsB,GAAGkgC,GAAGxhC,QAAQsB,GAAOpB,EAAE,EAAEA,EAAEuhC,GAAG1iC,OAAOmB,KAAImB,EAAEogC,GAAGvhC,IAAK6hC,YAAYhiC,IAAIsB,EAAE0gC,UAAU,MAAM,KAAK,EAAEN,GAAG1iC,QAAiB,QAARmB,EAAEuhC,GAAG,IAAYM,WAAYI,GAAGjiC,GAAG,OAAOA,EAAE6hC,WAAWN,GAAGvkB,OAAO,CAAC,IAAI4lB,GAAGzR,EAAG0R,wBAAwBC,IAAG,EAC5a,SAASC,GAAGljC,EAAEuB,EAAEpB,EAAEmB,GAAG,IAAIpD,EAAEoF,GAAE/D,EAAEwjC,GAAGI,WAAWJ,GAAGI,WAAW,KAAK,IAAI7/B,GAAE,EAAE8/B,GAAGpjC,EAAEuB,EAAEpB,EAAEmB,EAAE,CAAC,QAAQgC,GAAEpF,EAAE6kC,GAAGI,WAAW5jC,CAAC,CAAC,CAAC,SAAS8jC,GAAGrjC,EAAEuB,EAAEpB,EAAEmB,GAAG,IAAIpD,EAAEoF,GAAE/D,EAAEwjC,GAAGI,WAAWJ,GAAGI,WAAW,KAAK,IAAI7/B,GAAE,EAAE8/B,GAAGpjC,EAAEuB,EAAEpB,EAAEmB,EAAE,CAAC,QAAQgC,GAAEpF,EAAE6kC,GAAGI,WAAW5jC,CAAC,CAAC,CACjO,SAAS6jC,GAAGpjC,EAAEuB,EAAEpB,EAAEmB,GAAG,GAAG2hC,GAAG,CAAC,IAAI/kC,EAAEwkC,GAAG1iC,EAAEuB,EAAEpB,EAAEmB,GAAG,GAAG,OAAOpD,EAAEolC,GAAGtjC,EAAEuB,EAAED,EAAEkH,GAAGrI,GAAGyhC,GAAG5hC,EAAEsB,QAAQ,GANtF,SAAYtB,EAAEuB,EAAEpB,EAAEmB,EAAEpD,GAAG,OAAOqD,GAAG,IAAK,UAAU,OAAO8/B,GAAGS,GAAGT,GAAGrhC,EAAEuB,EAAEpB,EAAEmB,EAAEpD,IAAG,EAAG,IAAK,YAAY,OAAOojC,GAAGQ,GAAGR,GAAGthC,EAAEuB,EAAEpB,EAAEmB,EAAEpD,IAAG,EAAG,IAAK,YAAY,OAAOqjC,GAAGO,GAAGP,GAAGvhC,EAAEuB,EAAEpB,EAAEmB,EAAEpD,IAAG,EAAG,IAAK,cAAc,IAAIqB,EAAErB,EAAE2jC,UAAkD,OAAxCL,GAAG5gC,IAAIrB,EAAEuiC,GAAGN,GAAG7gC,IAAIpB,IAAI,KAAKS,EAAEuB,EAAEpB,EAAEmB,EAAEpD,KAAU,EAAG,IAAK,oBAAoB,OAAOqB,EAAErB,EAAE2jC,UAAUJ,GAAG7gC,IAAIrB,EAAEuiC,GAAGL,GAAG9gC,IAAIpB,IAAI,KAAKS,EAAEuB,EAAEpB,EAAEmB,EAAEpD,KAAI,EAAG,OAAM,CAAE,CAM1QqlC,CAAGrlC,EAAE8B,EAAEuB,EAAEpB,EAAEmB,GAAGA,EAAEgb,uBAAuB,GAAGslB,GAAG5hC,EAAEsB,GAAK,EAAFC,IAAM,EAAEogC,GAAG3/B,QAAQhC,GAAG,CAAC,KAAK,OAAO9B,GAAG,CAAC,IAAIqB,EAAEs8B,GAAG39B,GAA0D,GAAvD,OAAOqB,GAAGuhC,GAAGvhC,GAAiB,QAAdA,EAAEmjC,GAAG1iC,EAAEuB,EAAEpB,EAAEmB,KAAagiC,GAAGtjC,EAAEuB,EAAED,EAAEkH,GAAGrI,GAAMZ,IAAIrB,EAAE,MAAMA,EAAEqB,CAAC,CAAC,OAAOrB,GAAGoD,EAAEgb,iBAAiB,MAAMgnB,GAAGtjC,EAAEuB,EAAED,EAAE,KAAKnB,EAAE,CAAC,CAAC,IAAIqI,GAAG,KACpU,SAASk6B,GAAG1iC,EAAEuB,EAAEpB,EAAEmB,GAA2B,GAAxBkH,GAAG,KAAwB,QAAXxI,EAAEqiC,GAAVriC,EAAEq7B,GAAG/5B,KAAuB,GAAW,QAARC,EAAE27B,GAAGl9B,IAAYA,EAAE,UAAU,GAAW,MAARG,EAAEoB,EAAEyxB,KAAW,CAAS,GAAG,QAAXhzB,EAAEs9B,GAAG/7B,IAAe,OAAOvB,EAAEA,EAAE,IAAI,MAAM,GAAG,IAAIG,EAAE,CAAC,GAAGoB,EAAEu6B,UAAU+B,QAAQN,cAAcgF,aAAa,OAAO,IAAIhhC,EAAEyxB,IAAIzxB,EAAEu6B,UAAU0G,cAAc,KAAKxiC,EAAE,IAAI,MAAMuB,IAAIvB,IAAIA,EAAE,MAAW,OAALwI,GAAGxI,EAAS,IAAI,CAC7S,SAASwjC,GAAGxjC,GAAG,OAAOA,GAAG,IAAK,SAAS,IAAK,QAAQ,IAAK,QAAQ,IAAK,cAAc,IAAK,OAAO,IAAK,MAAM,IAAK,WAAW,IAAK,WAAW,IAAK,UAAU,IAAK,YAAY,IAAK,OAAO,IAAK,UAAU,IAAK,WAAW,IAAK,QAAQ,IAAK,UAAU,IAAK,UAAU,IAAK,WAAW,IAAK,QAAQ,IAAK,YAAY,IAAK,UAAU,IAAK,QAAQ,IAAK,QAAQ,IAAK,OAAO,IAAK,gBAAgB,IAAK,cAAc,IAAK,YAAY,IAAK,aAAa,IAAK,QAAQ,IAAK,SAAS,IAAK,SAAS,IAAK,SAAS,IAAK,cAAc,IAAK,WAAW,IAAK,aAAa,IAAK,eAAe,IAAK,SAAS,IAAK,kBAAkB,IAAK,YAAY,IAAK,mBAAmB,IAAK,iBAAiB,IAAK,oBAAoB,IAAK,aAAa,IAAK,YAAY,IAAK,cAAc,IAAK,OAAO,IAAK,mBAAmB,IAAK,QAAQ,IAAK,aAAa,IAAK,WAAW,IAAK,SAAS,IAAK,cAAc,OAAO,EAAE,IAAK,OAAO,IAAK,YAAY,IAAK,WAAW,IAAK,YAAY,IAAK,WAAW,IAAK,YAAY,IAAK,WAAW,IAAK,YAAY,IAAK,cAAc,IAAK,aAAa,IAAK,cAAc,IAAK,SAAS,IAAK,SAAS,IAAK,YAAY,IAAK,QAAQ,IAAK,aAAa,IAAK,aAAa,IAAK,eAAe,IAAK,eAAe,OAAO,EACpqC,IAAK,UAAU,OAAOy+B,MAAM,KAAKE,GAAG,OAAO,EAAE,KAAKE,GAAG,OAAO,EAAE,KAAKE,GAAG,KAAKE,GAAG,OAAO,GAAG,KAAKE,GAAG,OAAO,UAAU,QAAQ,OAAO,GAAG,QAAQ,OAAO,GAAG,CAAC,IAAIsE,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAK,SAASC,KAAK,GAAGD,GAAG,OAAOA,GAAG,IAAI3jC,EAAkBsB,EAAhBC,EAAEmiC,GAAGvjC,EAAEoB,EAAEvC,OAASd,EAAE,UAAUulC,GAAGA,GAAG3iC,MAAM2iC,GAAG5N,YAAYt2B,EAAErB,EAAEc,OAAO,IAAIgB,EAAE,EAAEA,EAAEG,GAAGoB,EAAEvB,KAAK9B,EAAE8B,GAAGA,KAAK,IAAIuC,EAAEpC,EAAEH,EAAE,IAAIsB,EAAE,EAAEA,GAAGiB,GAAGhB,EAAEpB,EAAEmB,KAAKpD,EAAEqB,EAAE+B,GAAGA,KAAK,OAAOqiC,GAAGzlC,EAAEmB,MAAMW,EAAE,EAAEsB,EAAE,EAAEA,OAAE,EAAO,CACxY,SAASuiC,GAAG7jC,GAAG,IAAIuB,EAAEvB,EAAE8jC,QAA+E,MAAvE,aAAa9jC,EAAgB,KAAbA,EAAEA,EAAE+jC,WAAgB,KAAKxiC,IAAIvB,EAAE,IAAKA,EAAEuB,EAAE,KAAKvB,IAAIA,EAAE,IAAW,IAAIA,GAAG,KAAKA,EAAEA,EAAE,CAAC,CAAC,SAASgkC,KAAK,OAAM,CAAE,CAAC,SAASC,KAAK,OAAM,CAAE,CAC5K,SAASC,GAAGlkC,GAAG,SAASuB,EAAEA,EAAED,EAAEpD,EAAEqB,EAAEgD,GAA6G,IAAI,IAAIpC,KAAlHhB,KAAKglC,WAAW5iC,EAAEpC,KAAKilC,YAAYlmC,EAAEiB,KAAK6O,KAAK1M,EAAEnC,KAAK4iC,YAAYxiC,EAAEJ,KAAKkd,OAAO9Z,EAAEpD,KAAKklC,cAAc,KAAkBrkC,EAAEA,EAAEtB,eAAeyB,KAAKoB,EAAEvB,EAAEG,GAAGhB,KAAKgB,GAAGoB,EAAEA,EAAEhC,GAAGA,EAAEY,IAAgI,OAA5HhB,KAAKmlC,oBAAoB,MAAM/kC,EAAEglC,iBAAiBhlC,EAAEglC,kBAAiB,IAAKhlC,EAAEilC,aAAaR,GAAGC,GAAG9kC,KAAKslC,qBAAqBR,GAAU9kC,IAAI,CAC9E,OAD+EkE,EAAE9B,EAAE9C,UAAU,CAAC8d,eAAe,WAAWpd,KAAKolC,kBAAiB,EAAG,IAAIvkC,EAAEb,KAAK4iC,YAAY/hC,IAAIA,EAAEuc,eAAevc,EAAEuc,iBAAiB,mBAAmBvc,EAAEwkC,cAC7exkC,EAAEwkC,aAAY,GAAIrlC,KAAKmlC,mBAAmBN,GAAG,EAAE1nB,gBAAgB,WAAW,IAAItc,EAAEb,KAAK4iC,YAAY/hC,IAAIA,EAAEsc,gBAAgBtc,EAAEsc,kBAAkB,mBAAmBtc,EAAE0kC,eAAe1kC,EAAE0kC,cAAa,GAAIvlC,KAAKslC,qBAAqBT,GAAG,EAAEW,QAAQ,WAAW,EAAEC,aAAaZ,KAAYziC,CAAC,CACjR,IAAoLsjC,GAAGC,GAAGC,GAAtLC,GAAG,CAACC,WAAW,EAAEC,QAAQ,EAAEC,WAAW,EAAEC,UAAU,SAASplC,GAAG,OAAOA,EAAEolC,WAAWC,KAAKC,KAAK,EAAEf,iBAAiB,EAAEgB,UAAU,GAAGC,GAAGtB,GAAGc,IAAIS,GAAGpiC,EAAE,CAAC,EAAE2hC,GAAG,CAACU,KAAK,EAAEtX,OAAO,IAAIuX,GAAGzB,GAAGuB,IAAaG,GAAGviC,EAAE,CAAC,EAAEoiC,GAAG,CAACI,QAAQ,EAAEC,QAAQ,EAAEC,QAAQ,EAAEC,QAAQ,EAAEC,MAAM,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,OAAO,EAAEC,QAAQ,EAAEC,iBAAiBC,GAAGC,OAAO,EAAEC,QAAQ,EAAEC,cAAc,SAAS3mC,GAAG,YAAO,IAASA,EAAE2mC,cAAc3mC,EAAE4mC,cAAc5mC,EAAEs7B,WAAWt7B,EAAE6mC,UAAU7mC,EAAE4mC,YAAY5mC,EAAE2mC,aAAa,EAAEG,UAAU,SAAS9mC,GAAG,MAAG,cAC3eA,EAASA,EAAE8mC,WAAU9mC,IAAI+kC,KAAKA,IAAI,cAAc/kC,EAAEgO,MAAM62B,GAAG7kC,EAAE6lC,QAAQd,GAAGc,QAAQf,GAAG9kC,EAAE8lC,QAAQf,GAAGe,SAAShB,GAAGD,GAAG,EAAEE,GAAG/kC,GAAU6kC,GAAE,EAAEkC,UAAU,SAAS/mC,GAAG,MAAM,cAAcA,EAAEA,EAAE+mC,UAAUjC,EAAE,IAAIkC,GAAG9C,GAAG0B,IAAiCqB,GAAG/C,GAA7B7gC,EAAE,CAAC,EAAEuiC,GAAG,CAACsB,aAAa,KAA4CC,GAAGjD,GAA9B7gC,EAAE,CAAC,EAAEoiC,GAAG,CAACkB,cAAc,KAA0ES,GAAGlD,GAA5D7gC,EAAE,CAAC,EAAE2hC,GAAG,CAACqC,cAAc,EAAEC,YAAY,EAAEC,cAAc,KAAcC,GAAGnkC,EAAE,CAAC,EAAE2hC,GAAG,CAACyC,cAAc,SAASznC,GAAG,MAAM,kBAAkBA,EAAEA,EAAEynC,cAAc/nC,OAAO+nC,aAAa,IAAIC,GAAGxD,GAAGsD,IAAyBG,GAAGzD,GAArB7gC,EAAE,CAAC,EAAE2hC,GAAG,CAACvW,KAAK,KAAcmZ,GAAG,CAACC,IAAI,SACxfC,SAAS,IAAIC,KAAK,YAAYC,GAAG,UAAUC,MAAM,aAAaC,KAAK,YAAYC,IAAI,SAASC,IAAI,KAAKC,KAAK,cAAcC,KAAK,cAAcC,OAAO,aAAaC,gBAAgB,gBAAgBC,GAAG,CAAC,EAAE,YAAY,EAAE,MAAM,GAAG,QAAQ,GAAG,QAAQ,GAAG,QAAQ,GAAG,UAAU,GAAG,MAAM,GAAG,QAAQ,GAAG,WAAW,GAAG,SAAS,GAAG,IAAI,GAAG,SAAS,GAAG,WAAW,GAAG,MAAM,GAAG,OAAO,GAAG,YAAY,GAAG,UAAU,GAAG,aAAa,GAAG,YAAY,GAAG,SAAS,GAAG,SAAS,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KACtf,IAAI,KAAK,IAAI,KAAK,IAAI,MAAM,IAAI,MAAM,IAAI,MAAM,IAAI,UAAU,IAAI,aAAa,IAAI,QAAQC,GAAG,CAACC,IAAI,SAASC,QAAQ,UAAUC,KAAK,UAAUC,MAAM,YAAY,SAASC,GAAG/oC,GAAG,IAAIuB,EAAEpC,KAAK4iC,YAAY,OAAOxgC,EAAEglC,iBAAiBhlC,EAAEglC,iBAAiBvmC,MAAIA,EAAE0oC,GAAG1oC,OAAMuB,EAAEvB,EAAK,CAAC,SAASwmC,KAAK,OAAOuC,EAAE,CAChS,IAAIC,GAAG3lC,EAAE,CAAC,EAAEoiC,GAAG,CAACp0B,IAAI,SAASrR,GAAG,GAAGA,EAAEqR,IAAI,CAAC,IAAI9P,EAAEqmC,GAAG5nC,EAAEqR,MAAMrR,EAAEqR,IAAI,GAAG,iBAAiB9P,EAAE,OAAOA,CAAC,CAAC,MAAM,aAAavB,EAAEgO,KAAc,MAARhO,EAAE6jC,GAAG7jC,IAAU,QAAQsN,OAAOC,aAAavN,GAAI,YAAYA,EAAEgO,MAAM,UAAUhO,EAAEgO,KAAKy6B,GAAGzoC,EAAE8jC,UAAU,eAAe,EAAE,EAAEmF,KAAK,EAAEhiC,SAAS,EAAEk/B,QAAQ,EAAEC,SAAS,EAAEC,OAAO,EAAEC,QAAQ,EAAE4C,OAAO,EAAEC,OAAO,EAAE5C,iBAAiBC,GAAGzC,SAAS,SAAS/jC,GAAG,MAAM,aAAaA,EAAEgO,KAAK61B,GAAG7jC,GAAG,CAAC,EAAE8jC,QAAQ,SAAS9jC,GAAG,MAAM,YAAYA,EAAEgO,MAAM,UAAUhO,EAAEgO,KAAKhO,EAAE8jC,QAAQ,CAAC,EAAEsF,MAAM,SAASppC,GAAG,MAAM,aAC7eA,EAAEgO,KAAK61B,GAAG7jC,GAAG,YAAYA,EAAEgO,MAAM,UAAUhO,EAAEgO,KAAKhO,EAAE8jC,QAAQ,CAAC,IAAIuF,GAAGnF,GAAG8E,IAAiIM,GAAGpF,GAA7H7gC,EAAE,CAAC,EAAEuiC,GAAG,CAAC/D,UAAU,EAAE0H,MAAM,EAAEC,OAAO,EAAEC,SAAS,EAAEC,mBAAmB,EAAEC,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAEC,YAAY,EAAEC,UAAU,KAAmIC,GAAG9F,GAArH7gC,EAAE,CAAC,EAAEoiC,GAAG,CAACwE,QAAQ,EAAEC,cAAc,EAAEC,eAAe,EAAE9D,OAAO,EAAEC,QAAQ,EAAEH,QAAQ,EAAEC,SAAS,EAAEG,iBAAiBC,MAA0E4D,GAAGlG,GAA3D7gC,EAAE,CAAC,EAAE2hC,GAAG,CAACvU,aAAa,EAAE6W,YAAY,EAAEC,cAAc,KAAc8C,GAAGhnC,EAAE,CAAC,EAAEuiC,GAAG,CAAC0E,OAAO,SAAStqC,GAAG,MAAM,WAAWA,EAAEA,EAAEsqC,OAAO,gBAAgBtqC,GAAGA,EAAEuqC,YAAY,CAAC,EACnfC,OAAO,SAASxqC,GAAG,MAAM,WAAWA,EAAEA,EAAEwqC,OAAO,gBAAgBxqC,GAAGA,EAAEyqC,YAAY,eAAezqC,GAAGA,EAAE0qC,WAAW,CAAC,EAAEC,OAAO,EAAEC,UAAU,IAAIC,GAAG3G,GAAGmG,IAAIS,GAAG,CAAC,EAAE,GAAG,GAAG,IAAIzjC,GAAGyoB,GAAI,qBAAqBpwB,OAAOqI,GAAG,KAAK+nB,GAAI,iBAAiBC,WAAWhoB,GAAGgoB,SAASgb,cAAc,IAAIljC,GAAGioB,GAAI,cAAcpwB,SAASqI,GAAGK,GAAG0nB,KAAMzoB,IAAIU,IAAI,EAAEA,IAAI,IAAIA,IAAIvB,GAAG8G,OAAOC,aAAa,IAAIpF,IAAG,EAC1W,SAASa,GAAGhJ,EAAEuB,GAAG,OAAOvB,GAAG,IAAK,QAAQ,OAAO,IAAI8qC,GAAG9oC,QAAQT,EAAEuiC,SAAS,IAAK,UAAU,OAAO,MAAMviC,EAAEuiC,QAAQ,IAAK,WAAW,IAAK,YAAY,IAAK,WAAW,OAAM,EAAG,QAAQ,OAAM,EAAG,CAAC,SAAS97B,GAAGhI,GAAc,MAAM,kBAAjBA,EAAEA,EAAEouB,SAAkC,SAASpuB,EAAEA,EAAEyuB,KAAK,IAAI,CAAC,IAAIznB,IAAG,EAE9Q,IAAIc,GAAG,CAACkjC,OAAM,EAAGC,MAAK,EAAGC,UAAS,EAAG,kBAAiB,EAAGC,OAAM,EAAGC,OAAM,EAAGC,QAAO,EAAGC,UAAS,EAAG/2B,OAAM,EAAGg3B,QAAO,EAAGC,KAAI,EAAGC,MAAK,EAAGC,MAAK,EAAGC,KAAI,EAAGC,MAAK,GAAI,SAAS7iC,GAAG/I,GAAG,IAAIuB,EAAEvB,GAAGA,EAAE0zB,UAAU1zB,EAAE0zB,SAAS/Y,cAAc,MAAM,UAAUpZ,IAAIuG,GAAG9H,EAAEgO,MAAM,aAAazM,CAAO,CAAC,SAASmF,GAAG1G,EAAEuB,EAAEpB,EAAEmB,GAAG06B,GAAG16B,GAAsB,GAAnBC,EAAE6F,GAAG7F,EAAE,aAAgBvC,SAASmB,EAAE,IAAIqlC,GAAG,WAAW,SAAS,KAAKrlC,EAAEmB,GAAGtB,EAAE+B,KAAK,CAAC8pC,MAAM1rC,EAAE2rC,UAAUvqC,IAAI,CAAC,IAAI8G,GAAG,KAAKiE,GAAG,KAAK,SAAS3F,GAAG3G,GAAG4H,GAAG5H,EAAE,EAAE,CAAC,SAASyG,GAAGzG,GAAe,GAAGg0B,EAAT1sB,GAAGtH,IAAY,OAAOA,CAAC,CACpe,SAASuI,GAAGvI,EAAEuB,GAAG,GAAG,WAAWvB,EAAE,OAAOuB,CAAC,CAAC,IAAI0H,IAAG,EAAG,GAAG6mB,EAAG,CAAC,IAAIjmB,GAAG,GAAGimB,EAAG,CAAC,IAAIxnB,GAAG,YAAYynB,SAAS,IAAIznB,GAAG,CAAC,IAAIiD,GAAGwkB,SAASC,cAAc,OAAOzkB,GAAG4lB,aAAa,UAAU,WAAW7oB,GAAG,oBAAoBiD,GAAGwgC,OAAO,CAACliC,GAAGvB,EAAE,MAAMuB,IAAG,EAAGZ,GAAGY,MAAMkmB,SAASgb,cAAc,EAAEhb,SAASgb,aAAa,CAAC,SAASnhC,KAAKvB,KAAKA,GAAG2jC,YAAY,mBAAmBt/B,IAAIJ,GAAGjE,GAAG,KAAK,CAAC,SAASqE,GAAG1M,GAAG,GAAG,UAAUA,EAAEywB,cAAchqB,GAAG6F,IAAI,CAAC,IAAI/K,EAAE,GAAGmF,GAAGnF,EAAE+K,GAAGtM,EAAEq7B,GAAGr7B,IAAIq8B,GAAG11B,GAAGpF,EAAE,CAAC,CAC/b,SAASkJ,GAAGzK,EAAEuB,EAAEpB,GAAG,YAAYH,GAAG4J,KAAU0C,GAAGnM,GAARkI,GAAG9G,GAAU0qC,YAAY,mBAAmBv/B,KAAK,aAAa1M,GAAG4J,IAAI,CAAC,SAASiB,GAAG7K,GAAG,GAAG,oBAAoBA,GAAG,UAAUA,GAAG,YAAYA,EAAE,OAAOyG,GAAG6F,GAAG,CAAC,SAAStC,GAAGhK,EAAEuB,GAAG,GAAG,UAAUvB,EAAE,OAAOyG,GAAGlF,EAAE,CAAC,SAASuI,GAAG9J,EAAEuB,GAAG,GAAG,UAAUvB,GAAG,WAAWA,EAAE,OAAOyG,GAAGlF,EAAE,CAAiE,IAAI8L,GAAG,oBAAoBjP,OAAO+8B,GAAG/8B,OAAO+8B,GAA5G,SAAYn7B,EAAEuB,GAAG,OAAOvB,IAAIuB,IAAI,IAAIvB,GAAG,EAAEA,IAAI,EAAEuB,IAAIvB,IAAIA,GAAGuB,IAAIA,CAAC,EACtW,SAASkL,GAAGzM,EAAEuB,GAAG,GAAG8L,GAAGrN,EAAEuB,GAAG,OAAM,EAAG,GAAG,kBAAkBvB,GAAG,OAAOA,GAAG,kBAAkBuB,GAAG,OAAOA,EAAE,OAAM,EAAG,IAAIpB,EAAE/B,OAAOyB,KAAKG,GAAGsB,EAAElD,OAAOyB,KAAK0B,GAAG,GAAGpB,EAAEnB,SAASsC,EAAEtC,OAAO,OAAM,EAAG,IAAIsC,EAAE,EAAEA,EAAEnB,EAAEnB,OAAOsC,IAAI,CAAC,IAAIpD,EAAEiC,EAAEmB,GAAG,IAAI2uB,EAAGtxB,KAAK4C,EAAErD,KAAKmP,GAAGrN,EAAE9B,GAAGqD,EAAErD,IAAI,OAAM,CAAE,CAAC,OAAM,CAAE,CAAC,SAASsP,GAAGxN,GAAG,KAAKA,GAAGA,EAAEq2B,YAAYr2B,EAAEA,EAAEq2B,WAAW,OAAOr2B,CAAC,CACtU,SAAS0K,GAAG1K,EAAEuB,GAAG,IAAwBD,EAApBnB,EAAEqN,GAAGxN,GAAO,IAAJA,EAAE,EAAYG,GAAG,CAAC,GAAG,IAAIA,EAAEy2B,SAAS,CAA0B,GAAzBt1B,EAAEtB,EAAEG,EAAE01B,YAAY72B,OAAUgB,GAAGuB,GAAGD,GAAGC,EAAE,MAAM,CAAC2qC,KAAK/rC,EAAEyS,OAAOrR,EAAEvB,GAAGA,EAAEsB,CAAC,CAACtB,EAAE,CAAC,KAAKG,GAAG,CAAC,GAAGA,EAAEgsC,YAAY,CAAChsC,EAAEA,EAAEgsC,YAAY,MAAMnsC,CAAC,CAACG,EAAEA,EAAEq7B,UAAU,CAACr7B,OAAE,CAAM,CAACA,EAAEqN,GAAGrN,EAAE,CAAC,CAAC,SAAS4M,GAAG/M,EAAEuB,GAAG,SAAOvB,IAAGuB,KAAEvB,IAAIuB,KAAKvB,GAAG,IAAIA,EAAE42B,YAAYr1B,GAAG,IAAIA,EAAEq1B,SAAS7pB,GAAG/M,EAAEuB,EAAEi6B,YAAY,aAAax7B,EAAEA,EAAEyhB,SAASlgB,KAAGvB,EAAEosC,4BAAwD,GAA7BpsC,EAAEosC,wBAAwB7qC,KAAY,CAC9Z,SAASqL,KAAK,IAAI,IAAI5M,EAAEN,OAAO6B,EAAE2yB,IAAK3yB,aAAavB,EAAEqsC,mBAAmB,CAAC,IAAI,IAAIlsC,EAAE,kBAAkBoB,EAAE+qC,cAAcrlC,SAASE,IAAI,CAAC,MAAM7F,GAAGnB,GAAE,CAAE,CAAC,IAAGA,EAAyB,MAAMoB,EAAE2yB,GAA/Bl0B,EAAEuB,EAAE+qC,eAAgCvc,SAAS,CAAC,OAAOxuB,CAAC,CAAC,SAASqK,GAAG5L,GAAG,IAAIuB,EAAEvB,GAAGA,EAAE0zB,UAAU1zB,EAAE0zB,SAAS/Y,cAAc,OAAOpZ,IAAI,UAAUA,IAAI,SAASvB,EAAEgO,MAAM,WAAWhO,EAAEgO,MAAM,QAAQhO,EAAEgO,MAAM,QAAQhO,EAAEgO,MAAM,aAAahO,EAAEgO,OAAO,aAAazM,GAAG,SAASvB,EAAEusC,gBAAgB,CACxa,SAAS/iC,GAAGxJ,GAAG,IAAIuB,EAAEqL,KAAKzM,EAAEH,EAAEwsC,YAAYlrC,EAAEtB,EAAEysC,eAAe,GAAGlrC,IAAIpB,GAAGA,GAAGA,EAAE60B,eAAejoB,GAAG5M,EAAE60B,cAAc0X,gBAAgBvsC,GAAG,CAAC,GAAG,OAAOmB,GAAGsK,GAAGzL,GAAG,GAAGoB,EAAED,EAAE+V,WAAc,KAARrX,EAAEsB,EAAEqrC,OAAiB3sC,EAAEuB,GAAG,mBAAmBpB,EAAEA,EAAEysC,eAAerrC,EAAEpB,EAAE0sC,aAAap0B,KAAKC,IAAI1Y,EAAEG,EAAEW,MAAM9B,aAAa,IAAGgB,GAAGuB,EAAEpB,EAAE60B,eAAejF,WAAWxuB,EAAEurC,aAAaptC,QAASqtC,aAAa,CAAC/sC,EAAEA,EAAE+sC,eAAe,IAAI7uC,EAAEiC,EAAE01B,YAAY72B,OAAOO,EAAEkZ,KAAKC,IAAIpX,EAAE+V,MAAMnZ,GAAGoD,OAAE,IAASA,EAAEqrC,IAAIptC,EAAEkZ,KAAKC,IAAIpX,EAAEqrC,IAAIzuC,IAAI8B,EAAEkB,QAAQ3B,EAAE+B,IAAIpD,EAAEoD,EAAEA,EAAE/B,EAAEA,EAAErB,GAAGA,EAAEwM,GAAGvK,EAAEZ,GAAG,IAAIgD,EAAEmI,GAAGvK,EACvfmB,GAAGpD,GAAGqE,IAAI,IAAIvC,EAAEgtC,YAAYhtC,EAAEitC,aAAa/uC,EAAEguC,MAAMlsC,EAAEktC,eAAehvC,EAAE0U,QAAQ5S,EAAEmtC,YAAY5qC,EAAE2pC,MAAMlsC,EAAEotC,cAAc7qC,EAAEqQ,WAAUrR,EAAEA,EAAE8rC,eAAgBC,SAASpvC,EAAEguC,KAAKhuC,EAAE0U,QAAQ5S,EAAEutC,kBAAkBhuC,EAAE+B,GAAGtB,EAAEwtC,SAASjsC,GAAGvB,EAAEkB,OAAOqB,EAAE2pC,KAAK3pC,EAAEqQ,UAAUrR,EAAEksC,OAAOlrC,EAAE2pC,KAAK3pC,EAAEqQ,QAAQ5S,EAAEwtC,SAASjsC,IAAI,CAAM,IAALA,EAAE,GAAOvB,EAAEG,EAAEH,EAAEA,EAAEw7B,YAAY,IAAIx7B,EAAE42B,UAAUr1B,EAAEQ,KAAK,CAAC2rC,QAAQ1tC,EAAE2tC,KAAK3tC,EAAE4tC,WAAWC,IAAI7tC,EAAE8tC,YAAmD,IAAvC,oBAAoB3tC,EAAE4tC,OAAO5tC,EAAE4tC,QAAY5tC,EAAE,EAAEA,EAAEoB,EAAEvC,OAAOmB,KAAIH,EAAEuB,EAAEpB,IAAKutC,QAAQE,WAAW5tC,EAAE2tC,KAAK3tC,EAAE0tC,QAAQI,UAAU9tC,EAAE6tC,GAAG,CAAC,CACzf,IAAIlkC,GAAGmmB,GAAI,iBAAiBC,UAAU,IAAIA,SAASgb,aAAa7gC,GAAG,KAAKyC,GAAG,KAAKzE,GAAG,KAAK4C,IAAG,EAC3F,SAASf,GAAG/J,EAAEuB,EAAEpB,GAAG,IAAImB,EAAEnB,EAAET,SAASS,EAAEA,EAAE4vB,SAAS,IAAI5vB,EAAEy2B,SAASz2B,EAAEA,EAAE60B,cAAclqB,IAAI,MAAMZ,IAAIA,KAAKgqB,EAAG5yB,KAAU,mBAALA,EAAE4I,KAAyB0B,GAAGtK,GAAGA,EAAE,CAAC+V,MAAM/V,EAAEsrC,eAAeD,IAAIrrC,EAAEurC,cAAuFvrC,EAAE,CAAC2rC,YAA3E3rC,GAAGA,EAAE0zB,eAAe1zB,EAAE0zB,cAAc8X,aAAaptC,QAAQqtC,gBAA+BE,WAAWC,aAAa5rC,EAAE4rC,aAAaC,UAAU7rC,EAAE6rC,UAAUC,YAAY9rC,EAAE8rC,aAAcllC,IAAIuE,GAAGvE,GAAG5G,KAAK4G,GAAG5G,EAAsB,GAApBA,EAAE8F,GAAGuF,GAAG,aAAgB3N,SAASuC,EAAE,IAAIikC,GAAG,WAAW,SAAS,KAAKjkC,EAAEpB,GAAGH,EAAE+B,KAAK,CAAC8pC,MAAMtqC,EAAEuqC,UAAUxqC,IAAIC,EAAE8a,OAAOnS,KAAK,CACtf,SAAS+C,GAAGjN,EAAEuB,GAAG,IAAIpB,EAAE,CAAC,EAAiF,OAA/EA,EAAEH,EAAE2a,eAAepZ,EAAEoZ,cAAcxa,EAAE,SAASH,GAAG,SAASuB,EAAEpB,EAAE,MAAMH,GAAG,MAAMuB,EAASpB,CAAC,CAAC,IAAI4K,GAAG,CAACijC,aAAa/gC,GAAG,YAAY,gBAAgBghC,mBAAmBhhC,GAAG,YAAY,sBAAsBihC,eAAejhC,GAAG,YAAY,kBAAkBkhC,cAAclhC,GAAG,aAAa,kBAAkBD,GAAG,CAAC,EAAE3B,GAAG,CAAC,EACpF,SAASoC,GAAGzN,GAAG,GAAGgN,GAAGhN,GAAG,OAAOgN,GAAGhN,GAAG,IAAI+K,GAAG/K,GAAG,OAAOA,EAAE,IAAYG,EAARoB,EAAEwJ,GAAG/K,GAAK,IAAIG,KAAKoB,EAAE,GAAGA,EAAE7C,eAAeyB,IAAIA,KAAKkL,GAAG,OAAO2B,GAAGhN,GAAGuB,EAAEpB,GAAG,OAAOH,CAAC,CAA/X8vB,IAAKzkB,GAAG0kB,SAASC,cAAc,OAAO6J,MAAM,mBAAmBn6B,gBAAgBqL,GAAGijC,aAAaI,iBAAiBrjC,GAAGkjC,mBAAmBG,iBAAiBrjC,GAAGmjC,eAAeE,WAAW,oBAAoB1uC,eAAeqL,GAAGojC,cAAchL,YAAwJ,IAAIv4B,GAAG6C,GAAG,gBAAgB4gC,GAAG5gC,GAAG,sBAAsB6gC,GAAG7gC,GAAG,kBAAkB8gC,GAAG9gC,GAAG,iBAAiB+gC,GAAG,IAAIpkB,IAAIqkB,GAAG,smBAAsmBhsC,MAAM,KAC/lC,SAASisC,GAAG1uC,EAAEuB,GAAGitC,GAAG5tC,IAAIZ,EAAEuB,GAAGquB,EAAGruB,EAAE,CAACvB,GAAG,CAAC,IAAI,IAAI2uC,GAAG,EAAEA,GAAGF,GAAGzvC,OAAO2vC,KAAK,CAAC,IAAIC,GAAGH,GAAGE,IAA2DD,GAApDE,GAAGj0B,cAAuD,MAAtCi0B,GAAG,GAAGl0B,cAAck0B,GAAGvvC,MAAM,IAAiB,CAACqvC,GAAG9jC,GAAG,kBAAkB8jC,GAAGL,GAAG,wBAAwBK,GAAGJ,GAAG,oBAAoBI,GAAG,WAAW,iBAAiBA,GAAG,UAAU,WAAWA,GAAG,WAAW,UAAUA,GAAGH,GAAG,mBAAmB1e,EAAG,eAAe,CAAC,WAAW,cAAcA,EAAG,eAAe,CAAC,WAAW,cAAcA,EAAG,iBAAiB,CAAC,aAAa,gBAC7cA,EAAG,iBAAiB,CAAC,aAAa,gBAAgBD,EAAG,WAAW,oEAAoEntB,MAAM,MAAMmtB,EAAG,WAAW,uFAAuFntB,MAAM,MAAMmtB,EAAG,gBAAgB,CAAC,iBAAiB,WAAW,YAAY,UAAUA,EAAG,mBAAmB,2DAA2DntB,MAAM,MAAMmtB,EAAG,qBAAqB,6DAA6DntB,MAAM,MAC/fmtB,EAAG,sBAAsB,8DAA8DntB,MAAM,MAAM,IAAIosC,GAAG,6NAA6NpsC,MAAM,KAAKqsC,GAAG,IAAIjsC,IAAI,0CAA0CJ,MAAM,KAAKnD,OAAOuvC,KACzZ,SAASE,GAAG/uC,EAAEuB,EAAEpB,GAAG,IAAImB,EAAEtB,EAAEgO,MAAM,gBAAgBhO,EAAEqkC,cAAclkC,EAlDjE,SAAYH,EAAEuB,EAAEpB,EAAEmB,EAAEpD,EAAEqB,EAAEgD,EAAEnB,EAAEU,GAA4B,GAAzBm7B,GAAG/9B,MAAMC,KAAKJ,WAAc69B,GAAG,CAAC,IAAGA,GAAgC,MAAMl7B,MAAMF,EAAE,MAA1C,IAAIhB,EAAEq8B,GAAGD,IAAG,EAAGC,GAAG,KAA8BC,KAAKA,IAAG,EAAGC,GAAGv8B,EAAE,CAAC,CAkDpEwuC,CAAG1tC,EAAEC,OAAE,EAAOvB,GAAGA,EAAEqkC,cAAc,IAAI,CACxG,SAASz8B,GAAG5H,EAAEuB,GAAGA,EAAE,KAAO,EAAFA,GAAK,IAAI,IAAIpB,EAAE,EAAEA,EAAEH,EAAEhB,OAAOmB,IAAI,CAAC,IAAImB,EAAEtB,EAAEG,GAAGjC,EAAEoD,EAAEuqC,MAAMvqC,EAAEA,EAAEwqC,UAAU9rC,EAAE,CAAC,IAAIT,OAAE,EAAO,GAAGgC,EAAE,IAAI,IAAIgB,EAAEjB,EAAEtC,OAAO,EAAE,GAAGuD,EAAEA,IAAI,CAAC,IAAInB,EAAEE,EAAEiB,GAAGT,EAAEV,EAAE6tC,SAASzuC,EAAEY,EAAEijC,cAA2B,GAAbjjC,EAAEA,EAAE8tC,SAAYptC,IAAIvC,GAAGrB,EAAEumC,uBAAuB,MAAMzkC,EAAE+uC,GAAG7wC,EAAEkD,EAAEZ,GAAGjB,EAAEuC,CAAC,MAAM,IAAIS,EAAE,EAAEA,EAAEjB,EAAEtC,OAAOuD,IAAI,CAAoD,GAA5CT,GAAPV,EAAEE,EAAEiB,IAAO0sC,SAASzuC,EAAEY,EAAEijC,cAAcjjC,EAAEA,EAAE8tC,SAAYptC,IAAIvC,GAAGrB,EAAEumC,uBAAuB,MAAMzkC,EAAE+uC,GAAG7wC,EAAEkD,EAAEZ,GAAGjB,EAAEuC,CAAC,CAAC,CAAC,CAAC,GAAGg7B,GAAG,MAAM98B,EAAE+8B,GAAGD,IAAG,EAAGC,GAAG,KAAK/8B,CAAE,CAC5a,SAASyD,GAAEzD,EAAEuB,GAAG,IAAIpB,EAAEoB,EAAE4tC,SAAI,IAAShvC,IAAIA,EAAEoB,EAAE4tC,IAAI,IAAItsC,KAAK,IAAIvB,EAAEtB,EAAE,WAAWG,EAAE8C,IAAI3B,KAAK8tC,GAAG7tC,EAAEvB,EAAE,GAAE,GAAIG,EAAEqT,IAAIlS,GAAG,CAAC,SAAS+tC,GAAGrvC,EAAEuB,EAAEpB,GAAG,IAAImB,EAAE,EAAEC,IAAID,GAAG,GAAG8tC,GAAGjvC,EAAEH,EAAEsB,EAAEC,EAAE,CAAC,IAAI+tC,GAAG,kBAAkB72B,KAAK82B,SAASnsC,SAAS,IAAI/D,MAAM,GAAG,SAASmwC,GAAGxvC,GAAG,IAAIA,EAAEsvC,IAAI,CAACtvC,EAAEsvC,KAAI,EAAG5f,EAAGzvB,SAAQ,SAASsB,GAAG,oBAAoBA,IAAIutC,GAAG7rC,IAAI1B,IAAI8tC,GAAG9tC,GAAE,EAAGvB,GAAGqvC,GAAG9tC,GAAE,EAAGvB,GAAG,IAAG,IAAIuB,EAAE,IAAIvB,EAAE42B,SAAS52B,EAAEA,EAAEg1B,cAAc,OAAOzzB,GAAGA,EAAE+tC,MAAM/tC,EAAE+tC,KAAI,EAAGD,GAAG,mBAAkB,EAAG9tC,GAAG,CAAC,CACjb,SAAS6tC,GAAGpvC,EAAEuB,EAAEpB,EAAEmB,GAAG,OAAOkiC,GAAGjiC,IAAI,KAAK,EAAE,IAAIrD,EAAEglC,GAAG,MAAM,KAAK,EAAEhlC,EAAEmlC,GAAG,MAAM,QAAQnlC,EAAEklC,GAAGjjC,EAAEjC,EAAEiD,KAAK,KAAKI,EAAEpB,EAAEH,GAAG9B,OAAE,GAAQq+B,IAAI,eAAeh7B,GAAG,cAAcA,GAAG,UAAUA,IAAIrD,GAAE,GAAIoD,OAAE,IAASpD,EAAE8B,EAAEupB,iBAAiBhoB,EAAEpB,EAAE,CAACsvC,SAAQ,EAAGC,QAAQxxC,IAAI8B,EAAEupB,iBAAiBhoB,EAAEpB,GAAE,QAAI,IAASjC,EAAE8B,EAAEupB,iBAAiBhoB,EAAEpB,EAAE,CAACuvC,QAAQxxC,IAAI8B,EAAEupB,iBAAiBhoB,EAAEpB,GAAE,EAAG,CAClV,SAASmjC,GAAGtjC,EAAEuB,EAAEpB,EAAEmB,EAAEpD,GAAG,IAAIqB,EAAE+B,EAAE,GAAG,KAAO,EAAFC,IAAM,KAAO,EAAFA,IAAM,OAAOD,EAAEtB,EAAE,OAAO,CAAC,GAAG,OAAOsB,EAAE,OAAO,IAAIiB,EAAEjB,EAAE0xB,IAAI,GAAG,IAAIzwB,GAAG,IAAIA,EAAE,CAAC,IAAInB,EAAEE,EAAEw6B,UAAU0G,cAAc,GAAGphC,IAAIlD,GAAG,IAAIkD,EAAEw1B,UAAUx1B,EAAEo6B,aAAat9B,EAAE,MAAM,GAAG,IAAIqE,EAAE,IAAIA,EAAEjB,EAAE87B,OAAO,OAAO76B,GAAG,CAAC,IAAIT,EAAES,EAAEywB,IAAI,IAAG,IAAIlxB,GAAG,IAAIA,MAAKA,EAAES,EAAEu5B,UAAU0G,iBAAkBtkC,GAAG,IAAI4D,EAAE80B,UAAU90B,EAAE05B,aAAat9B,GAAE,OAAOqE,EAAEA,EAAE66B,MAAM,CAAC,KAAK,OAAOh8B,GAAG,CAAS,GAAG,QAAXmB,EAAE8/B,GAAGjhC,IAAe,OAAe,GAAG,KAAXU,EAAES,EAAEywB,MAAc,IAAIlxB,EAAE,CAACR,EAAE/B,EAAEgD,EAAE,SAASvC,CAAC,CAACoB,EAAEA,EAAEo6B,UAAU,CAAC,CAACl6B,EAAEA,EAAE87B,MAAM,CAACf,IAAG,WAAW,IAAI/6B,EAAE/B,EAAErB,EAAEm9B,GAAGl7B,GAAGoC,EAAE,GACpfvC,EAAE,CAAC,IAAIoB,EAAEotC,GAAG7tC,IAAIX,GAAG,QAAG,IAASoB,EAAE,CAAC,IAAIU,EAAE0jC,GAAGhnC,EAAEwB,EAAE,OAAOA,GAAG,IAAK,WAAW,GAAG,IAAI6jC,GAAG1jC,GAAG,MAAMH,EAAE,IAAK,UAAU,IAAK,QAAQ8B,EAAEunC,GAAG,MAAM,IAAK,UAAU7qC,EAAE,QAAQsD,EAAEqlC,GAAG,MAAM,IAAK,WAAW3oC,EAAE,OAAOsD,EAAEqlC,GAAG,MAAM,IAAK,aAAa,IAAK,YAAYrlC,EAAEqlC,GAAG,MAAM,IAAK,QAAQ,GAAG,IAAIhnC,EAAEsmC,OAAO,MAAMzmC,EAAE,IAAK,WAAW,IAAK,WAAW,IAAK,YAAY,IAAK,YAAY,IAAK,UAAU,IAAK,WAAW,IAAK,YAAY,IAAK,cAAc8B,EAAEklC,GAAG,MAAM,IAAK,OAAO,IAAK,UAAU,IAAK,YAAY,IAAK,WAAW,IAAK,YAAY,IAAK,WAAW,IAAK,YAAY,IAAK,OAAOllC,EAC1iBmlC,GAAG,MAAM,IAAK,cAAc,IAAK,WAAW,IAAK,YAAY,IAAK,aAAanlC,EAAEkoC,GAAG,MAAM,KAAKp/B,GAAG,KAAKyjC,GAAG,KAAKC,GAAGxsC,EAAEslC,GAAG,MAAM,KAAKmH,GAAGzsC,EAAEsoC,GAAG,MAAM,IAAK,SAAStoC,EAAE6jC,GAAG,MAAM,IAAK,QAAQ7jC,EAAE+oC,GAAG,MAAM,IAAK,OAAO,IAAK,MAAM,IAAK,QAAQ/oC,EAAE4lC,GAAG,MAAM,IAAK,oBAAoB,IAAK,qBAAqB,IAAK,gBAAgB,IAAK,cAAc,IAAK,cAAc,IAAK,aAAa,IAAK,cAAc,IAAK,YAAY5lC,EAAEwnC,GAAG,IAAInrC,EAAE,KAAO,EAAFoD,GAAK6E,GAAGjI,GAAG,WAAW6B,EAAEF,EAAE3B,EAAE,OAAOiD,EAAEA,EAAE,UAAU,KAAKA,EAAEjD,EAAE,GAAG,IAAI,IAAQsC,EAAJ7B,EAAE0C,EAAI,OAC/e1C,GAAG,CAAK,IAAIqF,GAARxD,EAAE7B,GAAUk9B,UAAsF,GAA5E,IAAIr7B,EAAEuyB,KAAK,OAAO/uB,IAAIxD,EAAEwD,EAAE,OAAOnE,IAAc,OAAVmE,EAAEq4B,GAAG19B,EAAEkB,KAAY3B,EAAE4D,KAAK4tC,GAAG/wC,EAAEqF,EAAExD,MAAS2F,EAAE,MAAMxH,EAAEA,EAAEw+B,MAAM,CAAC,EAAEj/B,EAAEa,SAASoC,EAAE,IAAIU,EAAEV,EAAE5C,EAAE,KAAK2B,EAAEjC,GAAGqE,EAAER,KAAK,CAAC8pC,MAAMzqC,EAAE0qC,UAAU3tC,IAAI,CAAC,CAAC,GAAG,KAAO,EAAFoD,GAAK,CAA4E,GAAnCO,EAAE,aAAa9B,GAAG,eAAeA,KAAtEoB,EAAE,cAAcpB,GAAG,gBAAgBA,IAA2CG,IAAIi7B,MAAK58B,EAAE2B,EAAEwmC,eAAexmC,EAAEymC,eAAevE,GAAG7jC,KAAIA,EAAEoxC,OAAgB9tC,GAAGV,KAAGA,EAAElD,EAAEwB,SAASxB,EAAEA,GAAGkD,EAAElD,EAAE82B,eAAe5zB,EAAE0rC,aAAa1rC,EAAEyuC,aAAanwC,OAAUoC,GAAqCA,EAAER,EAAiB,QAAf9C,GAAnCA,EAAE2B,EAAEwmC,eAAexmC,EAAE0mC,WAAkBxE,GAAG7jC,GAAG,QAC9dA,KAAR4H,EAAE82B,GAAG1+B,KAAU,IAAIA,EAAEw0B,KAAK,IAAIx0B,EAAEw0B,OAAKx0B,EAAE,QAAUsD,EAAE,KAAKtD,EAAE8C,GAAKQ,IAAItD,GAAE,CAAgU,GAA/TL,EAAE6oC,GAAG/iC,EAAE,eAAenE,EAAE,eAAelB,EAAE,QAAW,eAAeoB,GAAG,gBAAgBA,IAAE7B,EAAEmrC,GAAGrlC,EAAE,iBAAiBnE,EAAE,iBAAiBlB,EAAE,WAAUwH,EAAE,MAAMtE,EAAEV,EAAEkG,GAAGxF,GAAGrB,EAAE,MAAMjC,EAAE4C,EAAEkG,GAAG9I,IAAG4C,EAAE,IAAIjD,EAAE8F,EAAErF,EAAE,QAAQkD,EAAE3B,EAAEjC,IAAKme,OAAOjW,EAAEhF,EAAEulC,cAAclmC,EAAEwD,EAAE,KAAKo+B,GAAGnkC,KAAKoD,KAAInD,EAAE,IAAIA,EAAE2B,EAAElB,EAAE,QAAQJ,EAAE2B,EAAEjC,IAAKme,OAAO5b,EAAEtC,EAAEwoC,cAAcvgC,EAAEnC,EAAE9F,GAAGiI,EAAEnC,EAAKnC,GAAGtD,EAAE+C,EAAE,CAAa,IAARzB,EAAEtB,EAAEI,EAAE,EAAM6B,EAAhBtC,EAAE2D,EAAkBrB,EAAEA,EAAEqvC,GAAGrvC,GAAG7B,IAAQ,IAAJ6B,EAAE,EAAMwD,EAAEnE,EAAEmE,EAAEA,EAAE6rC,GAAG7rC,GAAGxD,IAAI,KAAK,EAAE7B,EAAE6B,GAAGtC,EAAE2xC,GAAG3xC,GAAGS,IAAI,KAAK,EAAE6B,EAAE7B,GAAGkB,EACpfgwC,GAAGhwC,GAAGW,IAAI,KAAK7B,KAAK,CAAC,GAAGT,IAAI2B,GAAG,OAAOA,GAAG3B,IAAI2B,EAAEq9B,UAAU,MAAM57B,EAAEpD,EAAE2xC,GAAG3xC,GAAG2B,EAAEgwC,GAAGhwC,EAAE,CAAC3B,EAAE,IAAI,MAAMA,EAAE,KAAK,OAAO2D,GAAGiuC,GAAGxtC,EAAEnB,EAAEU,EAAE3D,GAAE,GAAI,OAAOK,GAAG,OAAO4H,GAAG2pC,GAAGxtC,EAAE6D,EAAE5H,EAAEL,GAAE,EAAG,CAA8D,GAAG,YAA1C2D,GAAjBV,EAAEE,EAAEgG,GAAGhG,GAAG5B,QAAWg0B,UAAUtyB,EAAEsyB,SAAS/Y,gBAA+B,UAAU7Y,GAAG,SAASV,EAAE4M,KAAK,IAAIgiC,EAAGznC,QAAQ,GAAGQ,GAAG3H,GAAG,GAAG6H,GAAG+mC,EAAGlmC,OAAO,CAACkmC,EAAGnlC,GAAG,IAAIolC,EAAGxlC,EAAE,MAAM3I,EAAEV,EAAEsyB,WAAW,UAAU5xB,EAAE6Y,gBAAgB,aAAavZ,EAAE4M,MAAM,UAAU5M,EAAE4M,QAAQgiC,EAAGhmC,IACrV,OAD4VgmC,IAAKA,EAAGA,EAAGhwC,EAAEsB,IAAKoF,GAAGnE,EAAEytC,EAAG7vC,EAAEjC,IAAW+xC,GAAIA,EAAGjwC,EAAEoB,EAAEE,GAAG,aAAatB,IAAIiwC,EAAG7uC,EAAEozB,gBAClfyb,EAAGrb,YAAY,WAAWxzB,EAAE4M,MAAM+mB,GAAG3zB,EAAE,SAASA,EAAEN,QAAOmvC,EAAG3uC,EAAEgG,GAAGhG,GAAG5B,OAAcM,GAAG,IAAK,WAAa+I,GAAGknC,IAAK,SAASA,EAAG1D,mBAAgBriC,GAAG+lC,EAAGtjC,GAAGrL,EAAE4G,GAAG,MAAK,MAAM,IAAK,WAAWA,GAAGyE,GAAGzC,GAAG,KAAK,MAAM,IAAK,YAAYY,IAAG,EAAG,MAAM,IAAK,cAAc,IAAK,UAAU,IAAK,UAAUA,IAAG,EAAGf,GAAGxH,EAAEpC,EAAEjC,GAAG,MAAM,IAAK,kBAAkB,GAAGyL,GAAG,MAAM,IAAK,UAAU,IAAK,QAAQI,GAAGxH,EAAEpC,EAAEjC,GAAG,IAAIgyC,EAAG,GAAG7oC,GAAG9F,EAAE,CAAC,OAAOvB,GAAG,IAAK,mBAAmB,IAAImwC,EAAG,qBAAqB,MAAM5uC,EAAE,IAAK,iBAAiB4uC,EAAG,mBACpe,MAAM5uC,EAAE,IAAK,oBAAoB4uC,EAAG,sBAAsB,MAAM5uC,EAAE4uC,OAAG,CAAM,MAAMnpC,GAAGgC,GAAGhJ,EAAEG,KAAKgwC,EAAG,oBAAoB,YAAYnwC,GAAG,MAAMG,EAAE2jC,UAAUqM,EAAG,sBAAsBA,IAAK/nC,IAAI,OAAOjI,EAAEgpC,SAASniC,IAAI,uBAAuBmpC,EAAG,qBAAqBA,GAAInpC,KAAKkpC,EAAGtM,OAAYF,GAAG,UAARD,GAAGvlC,GAAkBulC,GAAG3iC,MAAM2iC,GAAG5N,YAAY7uB,IAAG,IAAiB,GAAZipC,EAAG7oC,GAAG9F,EAAE6uC,IAASnxC,SAASmxC,EAAG,IAAIxI,GAAGwI,EAAGnwC,EAAE,KAAKG,EAAEjC,GAAGqE,EAAER,KAAK,CAAC8pC,MAAMsE,EAAGrE,UAAUmE,IAAKC,EAAGC,EAAG1hB,KAAKyhB,EAAa,QAATA,EAAGloC,GAAG7H,MAAegwC,EAAG1hB,KAAKyhB,MAAUA,EAAGroC,GA5BhM,SAAY7H,EAAEuB,GAAG,OAAOvB,GAAG,IAAK,iBAAiB,OAAOgI,GAAGzG,GAAG,IAAK,WAAW,OAAG,KAAKA,EAAE6nC,MAAa,MAAKjhC,IAAG,EAAU3B,IAAG,IAAK,YAAY,OAAOxG,EAAEuB,EAAEktB,QAASjoB,IAAI2B,GAAG,KAAKnI,EAAE,QAAQ,OAAO,KAAK,CA4BEyJ,CAAGzJ,EAAEG,GA3Bzd,SAAYH,EAAEuB,GAAG,GAAGyF,GAAG,MAAM,mBAAmBhH,IAAIqH,IAAI2B,GAAGhJ,EAAEuB,IAAIvB,EAAE4jC,KAAKD,GAAGD,GAAGD,GAAG,KAAKz8B,IAAG,EAAGhH,GAAG,KAAK,OAAOA,GAAG,IAAK,QAAgQ,QAAQ,OAAO,KAA3P,IAAK,WAAW,KAAKuB,EAAE4kC,SAAS5kC,EAAE8kC,QAAQ9kC,EAAE+kC,UAAU/kC,EAAE4kC,SAAS5kC,EAAE8kC,OAAO,CAAC,GAAG9kC,EAAE6uC,MAAM,EAAE7uC,EAAE6uC,KAAKpxC,OAAO,OAAOuC,EAAE6uC,KAAK,GAAG7uC,EAAE6nC,MAAM,OAAO97B,OAAOC,aAAahM,EAAE6nC,MAAM,CAAC,OAAO,KAAK,IAAK,iBAAiB,OAAOhhC,IAAI,OAAO7G,EAAE4nC,OAAO,KAAK5nC,EAAEktB,KAAyB,CA2BqFxkB,CAAGjK,EAAEG,MACje,GADoemB,EAAE8F,GAAG9F,EAAE,kBACvetC,SAASd,EAAE,IAAIypC,GAAG,gBAAgB,cAAc,KAAKxnC,EAAEjC,GAAGqE,EAAER,KAAK,CAAC8pC,MAAM3tC,EAAE4tC,UAAUxqC,IAAIpD,EAAEuwB,KAAKyhB,GAAG,CAACtoC,GAAGrF,EAAEhB,EAAE,GAAE,CAAC,SAASouC,GAAG3vC,EAAEuB,EAAEpB,GAAG,MAAM,CAAC8uC,SAASjvC,EAAEkvC,SAAS3tC,EAAE8iC,cAAclkC,EAAE,CAAC,SAASiH,GAAGpH,EAAEuB,GAAG,IAAI,IAAIpB,EAAEoB,EAAE,UAAUD,EAAE,GAAG,OAAOtB,GAAG,CAAC,IAAI9B,EAAE8B,EAAET,EAAErB,EAAE49B,UAAU,IAAI59B,EAAE80B,KAAK,OAAOzzB,IAAIrB,EAAEqB,EAAY,OAAVA,EAAE+8B,GAAGt8B,EAAEG,KAAYmB,EAAE+uC,QAAQV,GAAG3vC,EAAET,EAAErB,IAAc,OAAVqB,EAAE+8B,GAAGt8B,EAAEuB,KAAYD,EAAES,KAAK4tC,GAAG3vC,EAAET,EAAErB,KAAK8B,EAAEA,EAAEo9B,MAAM,CAAC,OAAO97B,CAAC,CAAC,SAASwuC,GAAG9vC,GAAG,GAAG,OAAOA,EAAE,OAAO,KAAK,GAAGA,EAAEA,EAAEo9B,aAAap9B,GAAG,IAAIA,EAAEgzB,KAAK,OAAOhzB,GAAI,IAAI,CACnd,SAAS+vC,GAAG/vC,EAAEuB,EAAEpB,EAAEmB,EAAEpD,GAAG,IAAI,IAAIqB,EAAEgC,EAAE4iC,WAAW5hC,EAAE,GAAG,OAAOpC,GAAGA,IAAImB,GAAG,CAAC,IAAIF,EAAEjB,EAAE2B,EAAEV,EAAE+7B,UAAU38B,EAAEY,EAAE06B,UAAU,GAAG,OAAOh6B,GAAGA,IAAIR,EAAE,MAAM,IAAIF,EAAE4xB,KAAK,OAAOxyB,IAAIY,EAAEZ,EAAEtC,EAAa,OAAV4D,EAAEw6B,GAAGn8B,EAAEZ,KAAYgD,EAAE8tC,QAAQV,GAAGxvC,EAAE2B,EAAEV,IAAKlD,GAAc,OAAV4D,EAAEw6B,GAAGn8B,EAAEZ,KAAYgD,EAAER,KAAK4tC,GAAGxvC,EAAE2B,EAAEV,KAAMjB,EAAEA,EAAEi9B,MAAM,CAAC,IAAI76B,EAAEvD,QAAQgB,EAAE+B,KAAK,CAAC8pC,MAAMtqC,EAAEuqC,UAAUvpC,GAAG,CAAC,IAAI+tC,GAAG,SAASC,GAAG,iBAAiB,SAASC,GAAGxwC,GAAG,OAAO,kBAAkBA,EAAEA,EAAE,GAAGA,GAAGqjB,QAAQitB,GAAG,MAAMjtB,QAAQktB,GAAG,GAAG,CAAC,SAASE,GAAGzwC,EAAEuB,EAAEpB,GAAW,GAARoB,EAAEivC,GAAGjvC,GAAMivC,GAAGxwC,KAAKuB,GAAGpB,EAAE,MAAMuB,MAAMF,EAAE,KAAM,CAAC,SAASkvC,KAAK,CAC9e,IAAIC,GAAG,KAAKC,GAAG,KAAK,SAASC,GAAG7wC,EAAEuB,GAAG,MAAM,aAAavB,GAAG,aAAaA,GAAG,kBAAkBuB,EAAEk0B,UAAU,kBAAkBl0B,EAAEk0B,UAAU,kBAAkBl0B,EAAEi0B,yBAAyB,OAAOj0B,EAAEi0B,yBAAyB,MAAMj0B,EAAEi0B,wBAAwBsb,MAAM,CAC5P,IAAIC,GAAG,oBAAoBlvC,WAAWA,gBAAW,EAAOmvC,GAAG,oBAAoB5lC,aAAaA,kBAAa,EAAO6lC,GAAG,oBAAoB/wC,QAAQA,aAAQ,EAAOgxC,GAAG,oBAAoBjpC,eAAeA,eAAe,qBAAqBgpC,GAAG,SAASjxC,GAAG,OAAOixC,GAAG1pC,QAAQ,MAAMX,KAAK5G,GAAGgL,MAAMmmC,GAAG,EAAEJ,GAAG,SAASI,GAAGnxC,GAAG6B,YAAW,WAAW,MAAM7B,CAAE,GAAE,CACpV,SAASoxC,GAAGpxC,EAAEuB,GAAG,IAAIpB,EAAEoB,EAAED,EAAE,EAAE,EAAE,CAAC,IAAIpD,EAAEiC,EAAEgsC,YAA6B,GAAjBnsC,EAAEs2B,YAAYn2B,GAAMjC,GAAG,IAAIA,EAAE04B,SAAS,GAAY,QAATz2B,EAAEjC,EAAEuwB,MAAc,CAAC,GAAG,IAAIntB,EAA0B,OAAvBtB,EAAEs2B,YAAYp4B,QAAG4kC,GAAGvhC,GAAUD,GAAG,KAAK,MAAMnB,GAAG,OAAOA,GAAG,OAAOA,GAAGmB,IAAInB,EAAEjC,CAAC,OAAOiC,GAAG2iC,GAAGvhC,EAAE,CAAC,SAAS8vC,GAAGrxC,GAAG,KAAK,MAAMA,EAAEA,EAAEA,EAAEmsC,YAAY,CAAC,IAAI5qC,EAAEvB,EAAE42B,SAAS,GAAG,IAAIr1B,GAAG,IAAIA,EAAE,MAAM,GAAG,IAAIA,EAAE,CAAU,GAAG,OAAZA,EAAEvB,EAAEyuB,OAAiB,OAAOltB,GAAG,OAAOA,EAAE,MAAM,GAAG,OAAOA,EAAE,OAAO,IAAI,CAAC,CAAC,OAAOvB,CAAC,CACjY,SAASsxC,GAAGtxC,GAAGA,EAAEA,EAAEuxC,gBAAgB,IAAI,IAAIhwC,EAAE,EAAEvB,GAAG,CAAC,GAAG,IAAIA,EAAE42B,SAAS,CAAC,IAAIz2B,EAAEH,EAAEyuB,KAAK,GAAG,MAAMtuB,GAAG,OAAOA,GAAG,OAAOA,EAAE,CAAC,GAAG,IAAIoB,EAAE,OAAOvB,EAAEuB,GAAG,KAAK,OAAOpB,GAAGoB,GAAG,CAACvB,EAAEA,EAAEuxC,eAAe,CAAC,OAAO,IAAI,CAAC,IAAIC,GAAG/4B,KAAK82B,SAASnsC,SAAS,IAAI/D,MAAM,GAAGoyC,GAAG,gBAAgBD,GAAGE,GAAG,gBAAgBF,GAAG5B,GAAG,oBAAoB4B,GAAGrC,GAAG,iBAAiBqC,GAAGG,GAAG,oBAAoBH,GAAGI,GAAG,kBAAkBJ,GAClX,SAASnP,GAAGriC,GAAG,IAAIuB,EAAEvB,EAAEyxC,IAAI,GAAGlwC,EAAE,OAAOA,EAAE,IAAI,IAAIpB,EAAEH,EAAEw7B,WAAWr7B,GAAG,CAAC,GAAGoB,EAAEpB,EAAEyvC,KAAKzvC,EAAEsxC,IAAI,CAAe,GAAdtxC,EAAEoB,EAAE47B,UAAa,OAAO57B,EAAEo8B,OAAO,OAAOx9B,GAAG,OAAOA,EAAEw9B,MAAM,IAAI39B,EAAEsxC,GAAGtxC,GAAG,OAAOA,GAAG,CAAC,GAAGG,EAAEH,EAAEyxC,IAAI,OAAOtxC,EAAEH,EAAEsxC,GAAGtxC,EAAE,CAAC,OAAOuB,CAAC,CAAKpB,GAAJH,EAAEG,GAAMq7B,UAAU,CAAC,OAAO,IAAI,CAAC,SAASK,GAAG77B,GAAkB,QAAfA,EAAEA,EAAEyxC,KAAKzxC,EAAE4vC,MAAc,IAAI5vC,EAAEgzB,KAAK,IAAIhzB,EAAEgzB,KAAK,KAAKhzB,EAAEgzB,KAAK,IAAIhzB,EAAEgzB,IAAI,KAAKhzB,CAAC,CAAC,SAASsH,GAAGtH,GAAG,GAAG,IAAIA,EAAEgzB,KAAK,IAAIhzB,EAAEgzB,IAAI,OAAOhzB,EAAE87B,UAAU,MAAMp6B,MAAMF,EAAE,IAAK,CAAC,SAASu6B,GAAG/7B,GAAG,OAAOA,EAAE0xC,KAAK,IAAI,CAAC,IAAIG,GAAG,GAAGC,IAAI,EAAE,SAASC,GAAG/xC,GAAG,MAAM,CAAC69B,QAAQ79B,EAAE,CACve,SAAS4C,GAAE5C,GAAG,EAAE8xC,KAAK9xC,EAAE69B,QAAQgU,GAAGC,IAAID,GAAGC,IAAI,KAAKA,KAAK,CAAC,SAAS7rC,GAAEjG,EAAEuB,GAAGuwC,KAAKD,GAAGC,IAAI9xC,EAAE69B,QAAQ79B,EAAE69B,QAAQt8B,CAAC,CAAC,IAAIywC,GAAG,CAAC,EAAE7rC,GAAE4rC,GAAGC,IAAIC,GAAGF,IAAG,GAAIG,GAAGF,GAAG,SAASG,GAAGnyC,EAAEuB,GAAG,IAAIpB,EAAEH,EAAEgO,KAAKokC,aAAa,IAAIjyC,EAAE,OAAO6xC,GAAG,IAAI1wC,EAAEtB,EAAE87B,UAAU,GAAGx6B,GAAGA,EAAE+wC,8CAA8C9wC,EAAE,OAAOD,EAAEgxC,0CAA0C,IAAS/yC,EAALrB,EAAE,CAAC,EAAI,IAAIqB,KAAKY,EAAEjC,EAAEqB,GAAGgC,EAAEhC,GAAoH,OAAjH+B,KAAItB,EAAEA,EAAE87B,WAAYuW,4CAA4C9wC,EAAEvB,EAAEsyC,0CAA0Cp0C,GAAUA,CAAC,CAC9d,SAASq0C,GAAGvyC,GAAyB,OAAO,QAA7BA,EAAEA,EAAEwyC,yBAAmC,IAASxyC,CAAC,CAAC,SAASyyC,KAAK7vC,GAAEqvC,IAAIrvC,GAAEuD,GAAE,CAAC,SAASusC,GAAG1yC,EAAEuB,EAAEpB,GAAG,GAAGgG,GAAE03B,UAAUmU,GAAG,MAAMtwC,MAAMF,EAAE,MAAMyE,GAAEE,GAAE5E,GAAG0E,GAAEgsC,GAAG9xC,EAAE,CAAC,SAASwyC,GAAG3yC,EAAEuB,EAAEpB,GAAG,IAAImB,EAAEtB,EAAE87B,UAAgC,GAAtBv6B,EAAEA,EAAEixC,kBAAqB,oBAAoBlxC,EAAEsxC,gBAAgB,OAAOzyC,EAAwB,IAAI,IAAIjC,KAA9BoD,EAAEA,EAAEsxC,kBAAiC,KAAK10C,KAAKqD,GAAG,MAAMG,MAAMF,EAAE,IAAI+xB,EAAGvzB,IAAI,UAAU9B,IAAI,OAAOmF,EAAE,CAAC,EAAElD,EAAEmB,EAAE,CACxX,SAASuxC,GAAG7yC,GAA2G,OAAxGA,GAAGA,EAAEA,EAAE87B,YAAY97B,EAAE8yC,2CAA2Cd,GAAGE,GAAG/rC,GAAE03B,QAAQ53B,GAAEE,GAAEnG,GAAGiG,GAAEgsC,GAAGA,GAAGpU,UAAe,CAAE,CAAC,SAASkV,GAAG/yC,EAAEuB,EAAEpB,GAAG,IAAImB,EAAEtB,EAAE87B,UAAU,IAAIx6B,EAAE,MAAMI,MAAMF,EAAE,MAAMrB,GAAGH,EAAE2yC,GAAG3yC,EAAEuB,EAAE2wC,IAAI5wC,EAAEwxC,0CAA0C9yC,EAAE4C,GAAEqvC,IAAIrvC,GAAEuD,IAAGF,GAAEE,GAAEnG,IAAI4C,GAAEqvC,IAAIhsC,GAAEgsC,GAAG9xC,EAAE,CAAC,IAAI6yC,GAAG,KAAKC,IAAG,EAAGC,IAAG,EAAG,SAASC,GAAGnzC,GAAG,OAAOgzC,GAAGA,GAAG,CAAChzC,GAAGgzC,GAAGjxC,KAAK/B,EAAE,CAChW,SAASozC,KAAK,IAAIF,IAAI,OAAOF,GAAG,CAACE,IAAG,EAAG,IAAIlzC,EAAE,EAAEuB,EAAE+B,GAAE,IAAI,IAAInD,EAAE6yC,GAAG,IAAI1vC,GAAE,EAAEtD,EAAEG,EAAEnB,OAAOgB,IAAI,CAAC,IAAIsB,EAAEnB,EAAEH,GAAG,GAAGsB,EAAEA,GAAE,SAAU,OAAOA,EAAE,CAAC0xC,GAAG,KAAKC,IAAG,CAAE,CAAC,MAAM/0C,GAAG,MAAM,OAAO80C,KAAKA,GAAGA,GAAG3zC,MAAMW,EAAE,IAAIg+B,GAAGW,GAAGyU,IAAIl1C,CAAE,CAAC,QAAQoF,GAAE/B,EAAE2xC,IAAG,CAAE,CAAC,CAAC,OAAO,IAAI,CAAC,IAAIG,GAAG,GAAGC,GAAG,EAAEC,GAAG,KAAKC,GAAG,EAAEC,GAAG,GAAGC,GAAG,EAAEC,GAAG,KAAKC,GAAG,EAAEC,GAAG,GAAG,SAASC,GAAG9zC,EAAEuB,GAAG8xC,GAAGC,MAAME,GAAGH,GAAGC,MAAMC,GAAGA,GAAGvzC,EAAEwzC,GAAGjyC,CAAC,CACjV,SAASwyC,GAAG/zC,EAAEuB,EAAEpB,GAAGszC,GAAGC,MAAME,GAAGH,GAAGC,MAAMG,GAAGJ,GAAGC,MAAMC,GAAGA,GAAG3zC,EAAE,IAAIsB,EAAEsyC,GAAG5zC,EAAE6zC,GAAG,IAAI31C,EAAE,GAAGqhC,GAAGj+B,GAAG,EAAEA,KAAK,GAAGpD,GAAGiC,GAAG,EAAE,IAAIZ,EAAE,GAAGggC,GAAGh+B,GAAGrD,EAAE,GAAG,GAAGqB,EAAE,CAAC,IAAIgD,EAAErE,EAAEA,EAAE,EAAEqB,GAAG+B,GAAG,GAAGiB,GAAG,GAAGa,SAAS,IAAI9B,IAAIiB,EAAErE,GAAGqE,EAAEqxC,GAAG,GAAG,GAAGrU,GAAGh+B,GAAGrD,EAAEiC,GAAGjC,EAAEoD,EAAEuyC,GAAGt0C,EAAES,CAAC,MAAM4zC,GAAG,GAAGr0C,EAAEY,GAAGjC,EAAEoD,EAAEuyC,GAAG7zC,CAAC,CAAC,SAASg0C,GAAGh0C,GAAG,OAAOA,EAAEo9B,SAAS0W,GAAG9zC,EAAE,GAAG+zC,GAAG/zC,EAAE,EAAE,GAAG,CAAC,SAASi0C,GAAGj0C,GAAG,KAAKA,IAAIuzC,IAAIA,GAAGF,KAAKC,IAAID,GAAGC,IAAI,KAAKE,GAAGH,KAAKC,IAAID,GAAGC,IAAI,KAAK,KAAKtzC,IAAI2zC,IAAIA,GAAGF,KAAKC,IAAID,GAAGC,IAAI,KAAKG,GAAGJ,KAAKC,IAAID,GAAGC,IAAI,KAAKE,GAAGH,KAAKC,IAAID,GAAGC,IAAI,IAAI,CAAC,IAAIQ,GAAG,KAAKC,GAAG,KAAKvwC,IAAE,EAAGwwC,GAAG,KACje,SAASC,GAAGr0C,EAAEuB,GAAG,IAAIpB,EAAEm0C,GAAG,EAAE,KAAK,KAAK,GAAGn0C,EAAEo0C,YAAY,UAAUp0C,EAAE27B,UAAUv6B,EAAEpB,EAAEi9B,OAAOp9B,EAAgB,QAAduB,EAAEvB,EAAEw0C,YAAoBx0C,EAAEw0C,UAAU,CAACr0C,GAAGH,EAAEq9B,OAAO,IAAI97B,EAAEQ,KAAK5B,EAAE,CACxJ,SAASs0C,GAAGz0C,EAAEuB,GAAG,OAAOvB,EAAEgzB,KAAK,KAAK,EAAE,IAAI7yB,EAAEH,EAAEgO,KAAyE,OAAO,QAA3EzM,EAAE,IAAIA,EAAEq1B,UAAUz2B,EAAEwa,gBAAgBpZ,EAAEmyB,SAAS/Y,cAAc,KAAKpZ,KAAmBvB,EAAE87B,UAAUv6B,EAAE2yC,GAAGl0C,EAAEm0C,GAAG9C,GAAG9vC,EAAE80B,aAAY,GAAO,KAAK,EAAE,OAAoD,QAA7C90B,EAAE,KAAKvB,EAAE00C,cAAc,IAAInzC,EAAEq1B,SAAS,KAAKr1B,KAAYvB,EAAE87B,UAAUv6B,EAAE2yC,GAAGl0C,EAAEm0C,GAAG,MAAK,GAAO,KAAK,GAAG,OAA+B,QAAxB5yC,EAAE,IAAIA,EAAEq1B,SAAS,KAAKr1B,KAAYpB,EAAE,OAAOwzC,GAAG,CAACnrC,GAAGorC,GAAGe,SAASd,IAAI,KAAK7zC,EAAEu9B,cAAc,CAACC,WAAWj8B,EAAEqzC,YAAYz0C,EAAE00C,UAAU,aAAY10C,EAAEm0C,GAAG,GAAG,KAAK,KAAK,IAAKxY,UAAUv6B,EAAEpB,EAAEi9B,OAAOp9B,EAAEA,EAAE29B,MAAMx9B,EAAE+zC,GAAGl0C,EAAEm0C,GAClf,MAAK,GAAO,QAAQ,OAAM,EAAG,CAAC,SAASW,GAAG90C,GAAG,OAAO,KAAY,EAAPA,EAAEod,OAAS,KAAa,IAARpd,EAAEq9B,MAAU,CAAC,SAAS0X,GAAG/0C,GAAG,GAAG4D,GAAE,CAAC,IAAIrC,EAAE4yC,GAAG,GAAG5yC,EAAE,CAAC,IAAIpB,EAAEoB,EAAE,IAAIkzC,GAAGz0C,EAAEuB,GAAG,CAAC,GAAGuzC,GAAG90C,GAAG,MAAM0B,MAAMF,EAAE,MAAMD,EAAE8vC,GAAGlxC,EAAEgsC,aAAa,IAAI7qC,EAAE4yC,GAAG3yC,GAAGkzC,GAAGz0C,EAAEuB,GAAG8yC,GAAG/yC,EAAEnB,IAAIH,EAAEq9B,OAAe,KAATr9B,EAAEq9B,MAAY,EAAEz5B,IAAE,EAAGswC,GAAGl0C,EAAE,CAAC,KAAK,CAAC,GAAG80C,GAAG90C,GAAG,MAAM0B,MAAMF,EAAE,MAAMxB,EAAEq9B,OAAe,KAATr9B,EAAEq9B,MAAY,EAAEz5B,IAAE,EAAGswC,GAAGl0C,CAAC,CAAC,CAAC,CAAC,SAASg1C,GAAGh1C,GAAG,IAAIA,EAAEA,EAAEo9B,OAAO,OAAOp9B,GAAG,IAAIA,EAAEgzB,KAAK,IAAIhzB,EAAEgzB,KAAK,KAAKhzB,EAAEgzB,KAAKhzB,EAAEA,EAAEo9B,OAAO8W,GAAGl0C,CAAC,CACha,SAASi1C,GAAGj1C,GAAG,GAAGA,IAAIk0C,GAAG,OAAM,EAAG,IAAItwC,GAAE,OAAOoxC,GAAGh1C,GAAG4D,IAAE,GAAG,EAAG,IAAIrC,EAAkG,IAA/FA,EAAE,IAAIvB,EAAEgzB,QAAQzxB,EAAE,IAAIvB,EAAEgzB,OAAgBzxB,EAAE,UAAXA,EAAEvB,EAAEgO,OAAmB,SAASzM,IAAIsvC,GAAG7wC,EAAEgO,KAAKhO,EAAEk1C,gBAAmB3zC,IAAIA,EAAE4yC,IAAI,CAAC,GAAGW,GAAG90C,GAAG,MAAMm1C,KAAKzzC,MAAMF,EAAE,MAAM,KAAKD,GAAG8yC,GAAGr0C,EAAEuB,GAAGA,EAAE8vC,GAAG9vC,EAAE4qC,YAAY,CAAO,GAAN6I,GAAGh1C,GAAM,KAAKA,EAAEgzB,IAAI,CAAgD,KAA7BhzB,EAAE,QAApBA,EAAEA,EAAEu9B,eAAyBv9B,EAAEw9B,WAAW,MAAW,MAAM97B,MAAMF,EAAE,MAAMxB,EAAE,CAAiB,IAAhBA,EAAEA,EAAEmsC,YAAgB5qC,EAAE,EAAEvB,GAAG,CAAC,GAAG,IAAIA,EAAE42B,SAAS,CAAC,IAAIz2B,EAAEH,EAAEyuB,KAAK,GAAG,OAAOtuB,EAAE,CAAC,GAAG,IAAIoB,EAAE,CAAC4yC,GAAG9C,GAAGrxC,EAAEmsC,aAAa,MAAMnsC,CAAC,CAACuB,GAAG,KAAK,MAAMpB,GAAG,OAAOA,GAAG,OAAOA,GAAGoB,GAAG,CAACvB,EAAEA,EAAEmsC,WAAW,CAACgI,GACjgB,IAAI,CAAC,MAAMA,GAAGD,GAAG7C,GAAGrxC,EAAE87B,UAAUqQ,aAAa,KAAK,OAAM,CAAE,CAAC,SAASgJ,KAAK,IAAI,IAAIn1C,EAAEm0C,GAAGn0C,GAAGA,EAAEqxC,GAAGrxC,EAAEmsC,YAAY,CAAC,SAASiJ,KAAKjB,GAAGD,GAAG,KAAKtwC,IAAE,CAAE,CAAC,SAASyxC,GAAGr1C,GAAG,OAAOo0C,GAAGA,GAAG,CAACp0C,GAAGo0C,GAAGryC,KAAK/B,EAAE,CAAC,IAAIs1C,GAAGhkB,EAAG0R,wBAChM,SAASuS,GAAGv1C,EAAEuB,EAAEpB,GAAW,GAAG,QAAXH,EAAEG,EAAEsI,MAAiB,oBAAoBzI,GAAG,kBAAkBA,EAAE,CAAC,GAAGG,EAAEq1C,OAAO,CAAY,GAAXr1C,EAAEA,EAAEq1C,OAAY,CAAC,GAAG,IAAIr1C,EAAE6yB,IAAI,MAAMtxB,MAAMF,EAAE,MAAM,IAAIF,EAAEnB,EAAE27B,SAAS,CAAC,IAAIx6B,EAAE,MAAMI,MAAMF,EAAE,IAAIxB,IAAI,IAAI9B,EAAEoD,EAAE/B,EAAE,GAAGS,EAAE,OAAG,OAAOuB,GAAG,OAAOA,EAAEkH,KAAK,oBAAoBlH,EAAEkH,KAAKlH,EAAEkH,IAAIgtC,aAAal2C,EAASgC,EAAEkH,KAAIlH,EAAE,SAASvB,GAAG,IAAIuB,EAAErD,EAAEw3C,KAAK,OAAO11C,SAASuB,EAAEhC,GAAGgC,EAAEhC,GAAGS,CAAC,EAAEuB,EAAEk0C,WAAWl2C,EAASgC,EAAC,CAAC,GAAG,kBAAkBvB,EAAE,MAAM0B,MAAMF,EAAE,MAAM,IAAIrB,EAAEq1C,OAAO,MAAM9zC,MAAMF,EAAE,IAAIxB,GAAI,CAAC,OAAOA,CAAC,CAC/c,SAAS21C,GAAG31C,EAAEuB,GAAuC,MAApCvB,EAAE5B,OAAOK,UAAU2E,SAASzE,KAAK4C,GAASG,MAAMF,EAAE,GAAG,oBAAoBxB,EAAE,qBAAqB5B,OAAOyB,KAAK0B,GAAGsD,KAAK,MAAM,IAAI7E,GAAI,CAAC,SAAS41C,GAAG51C,GAAiB,OAAOuB,EAAfvB,EAAEszB,OAAetzB,EAAEqzB,SAAS,CACrM,SAASwiB,GAAG71C,GAAG,SAASuB,EAAEA,EAAEpB,GAAG,GAAGH,EAAE,CAAC,IAAIsB,EAAEC,EAAEizC,UAAU,OAAOlzC,GAAGC,EAAEizC,UAAU,CAACr0C,GAAGoB,EAAE87B,OAAO,IAAI/7B,EAAES,KAAK5B,EAAE,CAAC,CAAC,SAASA,EAAEA,EAAEmB,GAAG,IAAItB,EAAE,OAAO,KAAK,KAAK,OAAOsB,GAAGC,EAAEpB,EAAEmB,GAAGA,EAAEA,EAAEs8B,QAAQ,OAAO,IAAI,CAAC,SAASt8B,EAAEtB,EAAEuB,GAAG,IAAIvB,EAAE,IAAIoqB,IAAI,OAAO7oB,GAAG,OAAOA,EAAE8P,IAAIrR,EAAEY,IAAIW,EAAE8P,IAAI9P,GAAGvB,EAAEY,IAAIW,EAAEgV,MAAMhV,GAAGA,EAAEA,EAAEq8B,QAAQ,OAAO59B,CAAC,CAAC,SAAS9B,EAAE8B,EAAEuB,GAAsC,OAAnCvB,EAAE81C,GAAG91C,EAAEuB,IAAKgV,MAAM,EAAEvW,EAAE49B,QAAQ,KAAY59B,CAAC,CAAC,SAAST,EAAEgC,EAAEpB,EAAEmB,GAAa,OAAVC,EAAEgV,MAAMjV,EAAMtB,EAA6C,QAAjBsB,EAAEC,EAAE47B,YAA6B77B,EAAEA,EAAEiV,OAAQpW,GAAGoB,EAAE87B,OAAO,EAAEl9B,GAAGmB,GAAEC,EAAE87B,OAAO,EAASl9B,IAArGoB,EAAE87B,OAAO,QAAQl9B,EAAqF,CAAC,SAASoC,EAAEhB,GACzd,OAD4dvB,GAC7f,OAAOuB,EAAE47B,YAAY57B,EAAE87B,OAAO,GAAU97B,CAAC,CAAC,SAASH,EAAEpB,EAAEuB,EAAEpB,EAAEmB,GAAG,OAAG,OAAOC,GAAG,IAAIA,EAAEyxB,MAAWzxB,EAAEw0C,GAAG51C,EAAEH,EAAEod,KAAK9b,IAAK87B,OAAOp9B,EAAEuB,KAAEA,EAAErD,EAAEqD,EAAEpB,IAAKi9B,OAAOp9B,EAASuB,EAAC,CAAC,SAASO,EAAE9B,EAAEuB,EAAEpB,EAAEmB,GAAG,IAAI/B,EAAEY,EAAE6N,KAAK,OAAGzO,IAAIoyB,EAAUtxB,EAAEL,EAAEuB,EAAEpB,EAAE8sB,MAAMwI,SAASn0B,EAAEnB,EAAEkR,KAAQ,OAAO9P,IAAIA,EAAEgzC,cAAch1C,GAAG,kBAAkBA,GAAG,OAAOA,GAAGA,EAAE4zB,WAAWf,GAAIwjB,GAAGr2C,KAAKgC,EAAEyM,QAAa1M,EAAEpD,EAAEqD,EAAEpB,EAAE8sB,QAASxkB,IAAI8sC,GAAGv1C,EAAEuB,EAAEpB,GAAGmB,EAAE87B,OAAOp9B,EAAEsB,KAAEA,EAAE00C,GAAG71C,EAAE6N,KAAK7N,EAAEkR,IAAIlR,EAAE8sB,MAAM,KAAKjtB,EAAEod,KAAK9b,IAAKmH,IAAI8sC,GAAGv1C,EAAEuB,EAAEpB,GAAGmB,EAAE87B,OAAOp9B,EAASsB,EAAC,CAAC,SAASd,EAAER,EAAEuB,EAAEpB,EAAEmB,GAAG,OAAG,OAAOC,GAAG,IAAIA,EAAEyxB,KACjfzxB,EAAEu6B,UAAU0G,gBAAgBriC,EAAEqiC,eAAejhC,EAAEu6B,UAAUma,iBAAiB91C,EAAE81C,iBAAsB10C,EAAE20C,GAAG/1C,EAAEH,EAAEod,KAAK9b,IAAK87B,OAAOp9B,EAAEuB,KAAEA,EAAErD,EAAEqD,EAAEpB,EAAEs1B,UAAU,KAAM2H,OAAOp9B,EAASuB,EAAC,CAAC,SAASlB,EAAEL,EAAEuB,EAAEpB,EAAEmB,EAAE/B,GAAG,OAAG,OAAOgC,GAAG,IAAIA,EAAEyxB,MAAWzxB,EAAE40C,GAAGh2C,EAAEH,EAAEod,KAAK9b,EAAE/B,IAAK69B,OAAOp9B,EAAEuB,KAAEA,EAAErD,EAAEqD,EAAEpB,IAAKi9B,OAAOp9B,EAASuB,EAAC,CAAC,SAASoC,EAAE3D,EAAEuB,EAAEpB,GAAG,GAAG,kBAAkBoB,GAAG,KAAKA,GAAG,kBAAkBA,EAAE,OAAOA,EAAEw0C,GAAG,GAAGx0C,EAAEvB,EAAEod,KAAKjd,IAAKi9B,OAAOp9B,EAAEuB,EAAE,GAAG,kBAAkBA,GAAG,OAAOA,EAAE,CAAC,OAAOA,EAAE4xB,UAAU,KAAK3B,EAAG,OAAOrxB,EAAE61C,GAAGz0C,EAAEyM,KAAKzM,EAAE8P,IAAI9P,EAAE0rB,MAAM,KAAKjtB,EAAEod,KAAKjd,IACjfsI,IAAI8sC,GAAGv1C,EAAE,KAAKuB,GAAGpB,EAAEi9B,OAAOp9B,EAAEG,EAAE,KAAKuxB,EAAG,OAAOnwB,EAAE20C,GAAG30C,EAAEvB,EAAEod,KAAKjd,IAAKi9B,OAAOp9B,EAAEuB,EAAE,KAAK6wB,EAAiB,OAAOzuB,EAAE3D,GAAEsB,EAAnBC,EAAE+xB,OAAmB/xB,EAAE8xB,UAAUlzB,GAAG,GAAG80B,GAAG1zB,IAAIgxB,EAAGhxB,GAAG,OAAOA,EAAE40C,GAAG50C,EAAEvB,EAAEod,KAAKjd,EAAE,OAAQi9B,OAAOp9B,EAAEuB,EAAEo0C,GAAG31C,EAAEuB,EAAE,CAAC,OAAO,IAAI,CAAC,SAASzC,EAAEkB,EAAEuB,EAAEpB,EAAEmB,GAAG,IAAIpD,EAAE,OAAOqD,EAAEA,EAAE8P,IAAI,KAAK,GAAG,kBAAkBlR,GAAG,KAAKA,GAAG,kBAAkBA,EAAE,OAAO,OAAOjC,EAAE,KAAKkD,EAAEpB,EAAEuB,EAAE,GAAGpB,EAAEmB,GAAG,GAAG,kBAAkBnB,GAAG,OAAOA,EAAE,CAAC,OAAOA,EAAEgzB,UAAU,KAAK3B,EAAG,OAAOrxB,EAAEkR,MAAMnT,EAAE4D,EAAE9B,EAAEuB,EAAEpB,EAAEmB,GAAG,KAAK,KAAKowB,EAAG,OAAOvxB,EAAEkR,MAAMnT,EAAEsC,EAAER,EAAEuB,EAAEpB,EAAEmB,GAAG,KAAK,KAAK8wB,EAAG,OAAiBtzB,EAAEkB,EACpfuB,GADwerD,EAAEiC,EAAEmzB,OACxenzB,EAAEkzB,UAAU/xB,GAAG,GAAG2zB,GAAG90B,IAAIoyB,EAAGpyB,GAAG,OAAO,OAAOjC,EAAE,KAAKmC,EAAEL,EAAEuB,EAAEpB,EAAEmB,EAAE,MAAMq0C,GAAG31C,EAAEG,EAAE,CAAC,OAAO,IAAI,CAAC,SAASsB,EAAEzB,EAAEuB,EAAEpB,EAAEmB,EAAEpD,GAAG,GAAG,kBAAkBoD,GAAG,KAAKA,GAAG,kBAAkBA,EAAE,OAAwBF,EAAEG,EAAnBvB,EAAEA,EAAEW,IAAIR,IAAI,KAAW,GAAGmB,EAAEpD,GAAG,GAAG,kBAAkBoD,GAAG,OAAOA,EAAE,CAAC,OAAOA,EAAE6xB,UAAU,KAAK3B,EAAG,OAA2C1vB,EAAEP,EAAtCvB,EAAEA,EAAEW,IAAI,OAAOW,EAAE+P,IAAIlR,EAAEmB,EAAE+P,MAAM,KAAW/P,EAAEpD,GAAG,KAAKwzB,EAAG,OAA2ClxB,EAAEe,EAAtCvB,EAAEA,EAAEW,IAAI,OAAOW,EAAE+P,IAAIlR,EAAEmB,EAAE+P,MAAM,KAAW/P,EAAEpD,GAAG,KAAKk0B,EAAiB,OAAO3wB,EAAEzB,EAAEuB,EAAEpB,GAAEZ,EAAvB+B,EAAEgyB,OAAuBhyB,EAAE+xB,UAAUn1B,GAAG,GAAG+2B,GAAG3zB,IAAIixB,EAAGjxB,GAAG,OAAwBjB,EAAEkB,EAAnBvB,EAAEA,EAAEW,IAAIR,IAAI,KAAWmB,EAAEpD,EAAE,MAAMy3C,GAAGp0C,EAAED,EAAE,CAAC,OAAO,IAAI,CAC9f,SAAS9C,EAAEN,EAAEqE,EAAEnB,EAAEU,GAAG,IAAI,IAAItB,EAAE,KAAKH,EAAE,KAAKI,EAAE8B,EAAE3D,EAAE2D,EAAE,EAAEzC,EAAE,KAAK,OAAOW,GAAG7B,EAAEwC,EAAEpC,OAAOJ,IAAI,CAAC6B,EAAE8V,MAAM3X,GAAGkB,EAAEW,EAAEA,EAAE,MAAMX,EAAEW,EAAEm9B,QAAQ,IAAIp/B,EAAEM,EAAEZ,EAAEuC,EAAEW,EAAExC,GAAGkD,GAAG,GAAG,OAAOtD,EAAE,CAAC,OAAOiC,IAAIA,EAAEX,GAAG,KAAK,CAACE,GAAGS,GAAG,OAAOjC,EAAE2+B,WAAW57B,EAAErD,EAAEuC,GAAG8B,EAAEhD,EAAEf,EAAE+D,EAAE3D,GAAG,OAAOyB,EAAEG,EAAEhC,EAAE6B,EAAEu9B,QAAQp/B,EAAE6B,EAAE7B,EAAEiC,EAAEX,CAAC,CAAC,GAAGlB,IAAIwC,EAAEpC,OAAO,OAAOmB,EAAEjC,EAAEuC,GAAGmD,IAAGkwC,GAAG51C,EAAEU,GAAG4B,EAAE,GAAG,OAAOC,EAAE,CAAC,KAAK7B,EAAEwC,EAAEpC,OAAOJ,IAAkB,QAAd6B,EAAEkD,EAAEzF,EAAEkD,EAAExC,GAAGkD,MAAcS,EAAEhD,EAAEkB,EAAE8B,EAAE3D,GAAG,OAAOyB,EAAEG,EAAEC,EAAEJ,EAAEu9B,QAAQn9B,EAAEJ,EAAEI,GAAc,OAAXmD,IAAGkwC,GAAG51C,EAAEU,GAAU4B,CAAC,CAAC,IAAIC,EAAEa,EAAEpD,EAAEuC,GAAG7B,EAAEwC,EAAEpC,OAAOJ,IAAsB,QAAlBkB,EAAE2B,EAAEhB,EAAEvC,EAAEU,EAAEwC,EAAExC,GAAGkD,MAAc9B,GAAG,OAAOF,EAAEq9B,WAAW18B,EAAE4T,OAAO,OACvfvU,EAAEuR,IAAIzS,EAAEkB,EAAEuR,KAAK9O,EAAEhD,EAAEO,EAAEyC,EAAE3D,GAAG,OAAOyB,EAAEG,EAAEV,EAAEO,EAAEu9B,QAAQ99B,EAAEO,EAAEP,GAAuD,OAApDE,GAAGS,EAAER,SAAQ,SAASD,GAAG,OAAOuB,EAAErD,EAAE8B,EAAE,IAAG4D,IAAGkwC,GAAG51C,EAAEU,GAAU4B,CAAC,CAAC,SAASrC,EAAED,EAAEqE,EAAEnB,EAAEU,GAAG,IAAItB,EAAE+xB,EAAGnxB,GAAG,GAAG,oBAAoBZ,EAAE,MAAMkB,MAAMF,EAAE,MAAkB,GAAG,OAAfJ,EAAEZ,EAAE7B,KAAKyC,IAAc,MAAMM,MAAMF,EAAE,MAAM,IAAI,IAAIf,EAAED,EAAE,KAAKH,EAAEkC,EAAE3D,EAAE2D,EAAE,EAAEzC,EAAE,KAAKtB,EAAE4C,EAAEyC,OAAO,OAAOxD,IAAI7B,EAAEsF,KAAKlF,IAAIJ,EAAE4C,EAAEyC,OAAO,CAACxD,EAAEkW,MAAM3X,GAAGkB,EAAEO,EAAEA,EAAE,MAAMP,EAAEO,EAAEu9B,QAAQ,IAAIz/B,EAAEW,EAAEZ,EAAEmC,EAAE7B,EAAEsC,MAAMgB,GAAG,GAAG,OAAO3D,EAAE,CAAC,OAAOkC,IAAIA,EAAEP,GAAG,KAAK,CAACE,GAAGK,GAAG,OAAOlC,EAAEg/B,WAAW57B,EAAErD,EAAEmC,GAAGkC,EAAEhD,EAAEpB,EAAEoE,EAAE3D,GAAG,OAAO6B,EAAED,EAAErC,EAAEsC,EAAEm9B,QAAQz/B,EAAEsC,EAAEtC,EAAEkC,EAAEP,CAAC,CAAC,GAAGtB,EAAEsF,KAAK,OAAO3D,EAAEjC,EACzfmC,GAAGuD,IAAGkwC,GAAG51C,EAAEU,GAAG4B,EAAE,GAAG,OAAOH,EAAE,CAAC,MAAM7B,EAAEsF,KAAKlF,IAAIJ,EAAE4C,EAAEyC,OAAwB,QAAjBrF,EAAEmF,EAAEzF,EAAEM,EAAEsC,MAAMgB,MAAcS,EAAEhD,EAAEf,EAAE+D,EAAE3D,GAAG,OAAO6B,EAAED,EAAEhC,EAAEiC,EAAEm9B,QAAQp/B,EAAEiC,EAAEjC,GAAc,OAAXoF,IAAGkwC,GAAG51C,EAAEU,GAAU4B,CAAC,CAAC,IAAIH,EAAEiB,EAAEpD,EAAEmC,IAAI7B,EAAEsF,KAAKlF,IAAIJ,EAAE4C,EAAEyC,OAA4B,QAArBrF,EAAEiD,EAAEpB,EAAEnC,EAAEU,EAAEJ,EAAEsC,MAAMgB,MAAc9B,GAAG,OAAOxB,EAAE2+B,WAAW98B,EAAEgU,OAAO,OAAO7V,EAAE6S,IAAIzS,EAAEJ,EAAE6S,KAAK9O,EAAEhD,EAAEf,EAAE+D,EAAE3D,GAAG,OAAO6B,EAAED,EAAEhC,EAAEiC,EAAEm9B,QAAQp/B,EAAEiC,EAAEjC,GAAuD,OAApDwB,GAAGK,EAAEJ,SAAQ,SAASD,GAAG,OAAOuB,EAAErD,EAAE8B,EAAE,IAAG4D,IAAGkwC,GAAG51C,EAAEU,GAAU4B,CAAC,CAG3T,OAH4T,SAAS4F,EAAEpG,EAAEsB,EAAE/B,EAAE6B,GAAkF,GAA/E,kBAAkB7B,GAAG,OAAOA,GAAGA,EAAEyO,OAAO2jB,GAAI,OAAOpyB,EAAE8R,MAAM9R,EAAEA,EAAE0tB,MAAMwI,UAAa,kBAAkBl2B,GAAG,OAAOA,EAAE,CAAC,OAAOA,EAAE4zB,UAAU,KAAK3B,EAAGxxB,EAAE,CAAC,IAAI,IAAI8B,EAC7hBvC,EAAE8R,IAAI7Q,EAAEc,EAAE,OAAOd,GAAG,CAAC,GAAGA,EAAE6Q,MAAMvP,EAAE,CAAU,IAATA,EAAEvC,EAAEyO,QAAY2jB,GAAI,GAAG,IAAInxB,EAAEwyB,IAAI,CAAC7yB,EAAEH,EAAEQ,EAAEo9B,UAASt8B,EAAEpD,EAAEsC,EAAEjB,EAAE0tB,MAAMwI,WAAY2H,OAAOp9B,EAAEA,EAAEsB,EAAE,MAAMtB,CAAC,OAAO,GAAGQ,EAAE+zC,cAAczyC,GAAG,kBAAkBA,GAAG,OAAOA,GAAGA,EAAEqxB,WAAWf,GAAIwjB,GAAG9zC,KAAKtB,EAAEwN,KAAK,CAAC7N,EAAEH,EAAEQ,EAAEo9B,UAASt8B,EAAEpD,EAAEsC,EAAEjB,EAAE0tB,QAASxkB,IAAI8sC,GAAGv1C,EAAEQ,EAAEjB,GAAG+B,EAAE87B,OAAOp9B,EAAEA,EAAEsB,EAAE,MAAMtB,CAAC,CAACG,EAAEH,EAAEQ,GAAG,KAAK,CAAMe,EAAEvB,EAAEQ,GAAGA,EAAEA,EAAEo9B,OAAO,CAACr+B,EAAEyO,OAAO2jB,IAAIrwB,EAAE60C,GAAG52C,EAAE0tB,MAAMwI,SAASz1B,EAAEod,KAAKhc,EAAE7B,EAAE8R,MAAO+rB,OAAOp9B,EAAEA,EAAEsB,KAAIF,EAAE40C,GAAGz2C,EAAEyO,KAAKzO,EAAE8R,IAAI9R,EAAE0tB,MAAM,KAAKjtB,EAAEod,KAAKhc,IAAKqH,IAAI8sC,GAAGv1C,EAAEsB,EAAE/B,GAAG6B,EAAEg8B,OAAOp9B,EAAEA,EAAEoB,EAAE,CAAC,OAAOmB,EAAEvC,GAAG,KAAK0xB,EAAG1xB,EAAE,CAAC,IAAIQ,EAAEjB,EAAE8R,IAAI,OACzf/P,GAAG,CAAC,GAAGA,EAAE+P,MAAM7Q,EAAC,CAAC,GAAG,IAAIc,EAAE0xB,KAAK1xB,EAAEw6B,UAAU0G,gBAAgBjjC,EAAEijC,eAAelhC,EAAEw6B,UAAUma,iBAAiB12C,EAAE02C,eAAe,CAAC91C,EAAEH,EAAEsB,EAAEs8B,UAASt8B,EAAEpD,EAAEoD,EAAE/B,EAAEk2B,UAAU,KAAM2H,OAAOp9B,EAAEA,EAAEsB,EAAE,MAAMtB,CAAC,CAAMG,EAAEH,EAAEsB,GAAG,KAAM,CAAKC,EAAEvB,EAAEsB,GAAGA,EAAEA,EAAEs8B,OAAO,EAACt8B,EAAE40C,GAAG32C,EAAES,EAAEod,KAAKhc,IAAKg8B,OAAOp9B,EAAEA,EAAEsB,CAAC,CAAC,OAAOiB,EAAEvC,GAAG,KAAKoyB,EAAG,OAAiBhsB,EAAEpG,EAAEsB,GAAdd,EAAEjB,EAAE+zB,OAAc/zB,EAAE8zB,UAAUjyB,GAAG,GAAG6zB,GAAG11B,GAAG,OAAOf,EAAEwB,EAAEsB,EAAE/B,EAAE6B,GAAG,GAAGmxB,EAAGhzB,GAAG,OAAOpB,EAAE6B,EAAEsB,EAAE/B,EAAE6B,GAAGu0C,GAAG31C,EAAET,EAAE,CAAC,MAAM,kBAAkBA,GAAG,KAAKA,GAAG,kBAAkBA,GAAGA,EAAE,GAAGA,EAAE,OAAO+B,GAAG,IAAIA,EAAE0xB,KAAK7yB,EAAEH,EAAEsB,EAAEs8B,UAASt8B,EAAEpD,EAAEoD,EAAE/B,IAAK69B,OAAOp9B,EAAEA,EAAEsB,IACnfnB,EAAEH,EAAEsB,IAAGA,EAAEy0C,GAAGx2C,EAAES,EAAEod,KAAKhc,IAAKg8B,OAAOp9B,EAAEA,EAAEsB,GAAGiB,EAAEvC,IAAIG,EAAEH,EAAEsB,EAAE,CAAS,CAAC,IAAI80C,GAAGP,IAAG,GAAIQ,GAAGR,IAAG,GAAIS,GAAGvE,GAAG,MAAMwE,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAK,SAASC,KAAKD,GAAGD,GAAGD,GAAG,IAAI,CAAC,SAASI,GAAG32C,GAAG,IAAIuB,EAAE+0C,GAAGzY,QAAQj7B,GAAE0zC,IAAIt2C,EAAE42C,cAAcr1C,CAAC,CAAC,SAASs1C,GAAG72C,EAAEuB,EAAEpB,GAAG,KAAK,OAAOH,GAAG,CAAC,IAAIsB,EAAEtB,EAAEm9B,UAA+H,IAApHn9B,EAAE82C,WAAWv1C,KAAKA,GAAGvB,EAAE82C,YAAYv1C,EAAE,OAAOD,IAAIA,EAAEw1C,YAAYv1C,IAAI,OAAOD,IAAIA,EAAEw1C,WAAWv1C,KAAKA,IAAID,EAAEw1C,YAAYv1C,GAAMvB,IAAIG,EAAE,MAAMH,EAAEA,EAAEo9B,MAAM,CAAC,CACnZ,SAAS2Z,GAAG/2C,EAAEuB,GAAGg1C,GAAGv2C,EAAEy2C,GAAGD,GAAG,KAAsB,QAAjBx2C,EAAEA,EAAEsrB,eAAuB,OAAOtrB,EAAEg3C,eAAe,KAAKh3C,EAAEi3C,MAAM11C,KAAK21C,IAAG,GAAIl3C,EAAEg3C,aAAa,KAAK,CAAC,SAASG,GAAGn3C,GAAG,IAAIuB,EAAEvB,EAAE42C,cAAc,GAAGH,KAAKz2C,EAAE,GAAGA,EAAE,CAACo3C,QAAQp3C,EAAEq3C,cAAc91C,EAAEsC,KAAK,MAAM,OAAO2yC,GAAG,CAAC,GAAG,OAAOD,GAAG,MAAM70C,MAAMF,EAAE,MAAMg1C,GAAGx2C,EAAEu2C,GAAGjrB,aAAa,CAAC2rB,MAAM,EAAED,aAAah3C,EAAE,MAAMw2C,GAAGA,GAAG3yC,KAAK7D,EAAE,OAAOuB,CAAC,CAAC,IAAI+1C,GAAG,KAAK,SAASC,GAAGv3C,GAAG,OAAOs3C,GAAGA,GAAG,CAACt3C,GAAGs3C,GAAGv1C,KAAK/B,EAAE,CACvY,SAASw3C,GAAGx3C,EAAEuB,EAAEpB,EAAEmB,GAAG,IAAIpD,EAAEqD,EAAEk2C,YAA+E,OAAnE,OAAOv5C,GAAGiC,EAAE0D,KAAK1D,EAAEo3C,GAAGh2C,KAAKpB,EAAE0D,KAAK3F,EAAE2F,KAAK3F,EAAE2F,KAAK1D,GAAGoB,EAAEk2C,YAAYt3C,EAASu3C,GAAG13C,EAAEsB,EAAE,CAAC,SAASo2C,GAAG13C,EAAEuB,GAAGvB,EAAEi3C,OAAO11C,EAAE,IAAIpB,EAAEH,EAAEm9B,UAAqC,IAA3B,OAAOh9B,IAAIA,EAAE82C,OAAO11C,GAAGpB,EAAEH,EAAMA,EAAEA,EAAEo9B,OAAO,OAAOp9B,GAAGA,EAAE82C,YAAYv1C,EAAgB,QAAdpB,EAAEH,EAAEm9B,aAAqBh9B,EAAE22C,YAAYv1C,GAAGpB,EAAEH,EAAEA,EAAEA,EAAEo9B,OAAO,OAAO,IAAIj9B,EAAE6yB,IAAI7yB,EAAE27B,UAAU,IAAI,CAAC,IAAI6b,IAAG,EAAG,SAASC,GAAG53C,GAAGA,EAAE63C,YAAY,CAACC,UAAU93C,EAAEu9B,cAAcwa,gBAAgB,KAAKC,eAAe,KAAKC,OAAO,CAACC,QAAQ,KAAKT,YAAY,KAAKR,MAAM,GAAGkB,QAAQ,KAAK,CAC/e,SAASC,GAAGp4C,EAAEuB,GAAGvB,EAAEA,EAAE63C,YAAYt2C,EAAEs2C,cAAc73C,IAAIuB,EAAEs2C,YAAY,CAACC,UAAU93C,EAAE83C,UAAUC,gBAAgB/3C,EAAE+3C,gBAAgBC,eAAeh4C,EAAEg4C,eAAeC,OAAOj4C,EAAEi4C,OAAOE,QAAQn4C,EAAEm4C,SAAS,CAAC,SAASE,GAAGr4C,EAAEuB,GAAG,MAAM,CAAC+2C,UAAUt4C,EAAEu4C,KAAKh3C,EAAEyxB,IAAI,EAAEwlB,QAAQ,KAAKC,SAAS,KAAK50C,KAAK,KAAK,CACtR,SAAS60C,GAAG14C,EAAEuB,EAAEpB,GAAG,IAAImB,EAAEtB,EAAE63C,YAAY,GAAG,OAAOv2C,EAAE,OAAO,KAAgB,GAAXA,EAAEA,EAAE22C,OAAU,KAAO,EAAFn1C,IAAK,CAAC,IAAI5E,EAAEoD,EAAE42C,QAA+D,OAAvD,OAAOh6C,EAAEqD,EAAEsC,KAAKtC,GAAGA,EAAEsC,KAAK3F,EAAE2F,KAAK3F,EAAE2F,KAAKtC,GAAGD,EAAE42C,QAAQ32C,EAASm2C,GAAG13C,EAAEG,EAAE,CAAoF,OAAnE,QAAhBjC,EAAEoD,EAAEm2C,cAAsBl2C,EAAEsC,KAAKtC,EAAEg2C,GAAGj2C,KAAKC,EAAEsC,KAAK3F,EAAE2F,KAAK3F,EAAE2F,KAAKtC,GAAGD,EAAEm2C,YAAYl2C,EAASm2C,GAAG13C,EAAEG,EAAE,CAAC,SAASw4C,GAAG34C,EAAEuB,EAAEpB,GAAmB,GAAG,QAAnBoB,EAAEA,EAAEs2C,eAA0Bt2C,EAAEA,EAAE02C,OAAO,KAAO,QAAF93C,IAAY,CAAC,IAAImB,EAAEC,EAAE01C,MAAwB92C,GAAlBmB,GAAGtB,EAAEigC,aAAkB1+B,EAAE01C,MAAM92C,EAAEygC,GAAG5gC,EAAEG,EAAE,CAAC,CACrZ,SAASy4C,GAAG54C,EAAEuB,GAAG,IAAIpB,EAAEH,EAAE63C,YAAYv2C,EAAEtB,EAAEm9B,UAAU,GAAG,OAAO77B,GAAoBnB,KAAhBmB,EAAEA,EAAEu2C,aAAmB,CAAC,IAAI35C,EAAE,KAAKqB,EAAE,KAAyB,GAAG,QAAvBY,EAAEA,EAAE43C,iBAA4B,CAAC,EAAE,CAAC,IAAIx1C,EAAE,CAAC+1C,UAAUn4C,EAAEm4C,UAAUC,KAAKp4C,EAAEo4C,KAAKvlB,IAAI7yB,EAAE6yB,IAAIwlB,QAAQr4C,EAAEq4C,QAAQC,SAASt4C,EAAEs4C,SAAS50C,KAAK,MAAM,OAAOtE,EAAErB,EAAEqB,EAAEgD,EAAEhD,EAAEA,EAAEsE,KAAKtB,EAAEpC,EAAEA,EAAE0D,IAAI,OAAO,OAAO1D,GAAG,OAAOZ,EAAErB,EAAEqB,EAAEgC,EAAEhC,EAAEA,EAAEsE,KAAKtC,CAAC,MAAMrD,EAAEqB,EAAEgC,EAAiH,OAA/GpB,EAAE,CAAC23C,UAAUx2C,EAAEw2C,UAAUC,gBAAgB75C,EAAE85C,eAAez4C,EAAE04C,OAAO32C,EAAE22C,OAAOE,QAAQ72C,EAAE62C,cAASn4C,EAAE63C,YAAY13C,EAAQ,CAAoB,QAAnBH,EAAEG,EAAE63C,gBAAwB73C,EAAE43C,gBAAgBx2C,EAAEvB,EAAE6D,KACnftC,EAAEpB,EAAE63C,eAAez2C,CAAC,CACpB,SAASs3C,GAAG74C,EAAEuB,EAAEpB,EAAEmB,GAAG,IAAIpD,EAAE8B,EAAE63C,YAAYF,IAAG,EAAG,IAAIp4C,EAAErB,EAAE65C,gBAAgBx1C,EAAErE,EAAE85C,eAAe52C,EAAElD,EAAE+5C,OAAOC,QAAQ,GAAG,OAAO92C,EAAE,CAAClD,EAAE+5C,OAAOC,QAAQ,KAAK,IAAIp2C,EAAEV,EAAEZ,EAAEsB,EAAE+B,KAAK/B,EAAE+B,KAAK,KAAK,OAAOtB,EAAEhD,EAAEiB,EAAE+B,EAAEsB,KAAKrD,EAAE+B,EAAET,EAAE,IAAIzB,EAAEL,EAAEm9B,UAAU,OAAO98B,KAAoBe,GAAhBf,EAAEA,EAAEw3C,aAAgBG,kBAAmBz1C,IAAI,OAAOnB,EAAEf,EAAE03C,gBAAgBv3C,EAAEY,EAAEyC,KAAKrD,EAAEH,EAAE23C,eAAel2C,GAAG,CAAC,GAAG,OAAOvC,EAAE,CAAC,IAAIoE,EAAEzF,EAAE45C,UAA6B,IAAnBv1C,EAAE,EAAElC,EAAEG,EAAEsB,EAAE,KAAKV,EAAE7B,IAAI,CAAC,IAAIT,EAAEsC,EAAEm3C,KAAK92C,EAAEL,EAAEk3C,UAAU,IAAIh3C,EAAExC,KAAKA,EAAE,CAAC,OAAOuB,IAAIA,EAAEA,EAAEwD,KAAK,CAACy0C,UAAU72C,EAAE82C,KAAK,EAAEvlB,IAAI5xB,EAAE4xB,IAAIwlB,QAAQp3C,EAAEo3C,QAAQC,SAASr3C,EAAEq3C,SACvf50C,KAAK,OAAO7D,EAAE,CAAC,IAAIxB,EAAEwB,EAAE7B,EAAEiD,EAAU,OAARtC,EAAEyC,EAAEE,EAAEtB,EAAShC,EAAE60B,KAAK,KAAK,EAAc,GAAG,oBAAfx0B,EAAEL,EAAEq6C,SAAiC,CAAC70C,EAAEnF,EAAEG,KAAK8C,EAAEkC,EAAE7E,GAAG,MAAMkB,CAAC,CAAC2D,EAAEnF,EAAE,MAAMwB,EAAE,KAAK,EAAExB,EAAE6+B,OAAe,MAAT7+B,EAAE6+B,MAAa,IAAI,KAAK,EAAsD,GAAG,QAA3Cv+B,EAAE,oBAAdN,EAAEL,EAAEq6C,SAAgCh6C,EAAEG,KAAK8C,EAAEkC,EAAE7E,GAAGN,SAAe,IAASM,EAAE,MAAMkB,EAAE2D,EAAEN,EAAE,CAAC,EAAEM,EAAE7E,GAAG,MAAMkB,EAAE,KAAK,EAAE23C,IAAG,EAAG,CAAC,OAAOv2C,EAAEq3C,UAAU,IAAIr3C,EAAEm3C,OAAOv4C,EAAEq9B,OAAO,GAAe,QAAZv+B,EAAEZ,EAAEi6C,SAAiBj6C,EAAEi6C,QAAQ,CAAC/2C,GAAGtC,EAAEiD,KAAKX,GAAG,MAAMK,EAAE,CAAC62C,UAAU72C,EAAE82C,KAAKz5C,EAAEk0B,IAAI5xB,EAAE4xB,IAAIwlB,QAAQp3C,EAAEo3C,QAAQC,SAASr3C,EAAEq3C,SAAS50C,KAAK,MAAM,OAAOxD,GAAGG,EAAEH,EAAEoB,EAAEK,EAAE6B,GAAGtD,EAAEA,EAAEwD,KAAKpC,EAAEc,GAAGzD,EAC3e,GAAG,QAAZsC,EAAEA,EAAEyC,MAAiB,IAAsB,QAAnBzC,EAAElD,EAAE+5C,OAAOC,SAAiB,MAAe92C,GAAJtC,EAAEsC,GAAMyC,KAAK/E,EAAE+E,KAAK,KAAK3F,EAAE85C,eAAel5C,EAAEZ,EAAE+5C,OAAOC,QAAQ,IAAI,EAAsG,GAA5F,OAAO73C,IAAIyB,EAAE6B,GAAGzF,EAAE45C,UAAUh2C,EAAE5D,EAAE65C,gBAAgBv3C,EAAEtC,EAAE85C,eAAe33C,EAA4B,QAA1BkB,EAAErD,EAAE+5C,OAAOR,aAAwB,CAACv5C,EAAEqD,EAAE,GAAGgB,GAAGrE,EAAEq6C,KAAKr6C,EAAEA,EAAE2F,WAAW3F,IAAIqD,EAAE,MAAM,OAAOhC,IAAIrB,EAAE+5C,OAAOhB,MAAM,GAAG6B,IAAIv2C,EAAEvC,EAAEi3C,MAAM10C,EAAEvC,EAAEu9B,cAAc55B,CAAC,CAAC,CAC9V,SAASo1C,GAAG/4C,EAAEuB,EAAEpB,GAA8B,GAA3BH,EAAEuB,EAAE42C,QAAQ52C,EAAE42C,QAAQ,KAAQ,OAAOn4C,EAAE,IAAIuB,EAAE,EAAEA,EAAEvB,EAAEhB,OAAOuC,IAAI,CAAC,IAAID,EAAEtB,EAAEuB,GAAGrD,EAAEoD,EAAEm3C,SAAS,GAAG,OAAOv6C,EAAE,CAAqB,GAApBoD,EAAEm3C,SAAS,KAAKn3C,EAAEnB,EAAK,oBAAoBjC,EAAE,MAAMwD,MAAMF,EAAE,IAAItD,IAAIA,EAAES,KAAK2C,EAAE,CAAC,CAAC,CAAC,IAAI03C,GAAG,CAAC,EAAEC,GAAGlH,GAAGiH,IAAIE,GAAGnH,GAAGiH,IAAIG,GAAGpH,GAAGiH,IAAI,SAASI,GAAGp5C,GAAG,GAAGA,IAAIg5C,GAAG,MAAMt3C,MAAMF,EAAE,MAAM,OAAOxB,CAAC,CACnS,SAASq5C,GAAGr5C,EAAEuB,GAAyC,OAAtC0E,GAAEkzC,GAAG53C,GAAG0E,GAAEizC,GAAGl5C,GAAGiG,GAAEgzC,GAAGD,IAAIh5C,EAAEuB,EAAEq1B,UAAmB,KAAK,EAAE,KAAK,GAAGr1B,GAAGA,EAAEA,EAAEmrC,iBAAiBnrC,EAAE20B,aAAaH,GAAG,KAAK,IAAI,MAAM,QAAkEx0B,EAAEw0B,GAArCx0B,GAAvBvB,EAAE,IAAIA,EAAEuB,EAAEi6B,WAAWj6B,GAAM20B,cAAc,KAAKl2B,EAAEA,EAAEs5C,SAAkB12C,GAAEq2C,IAAIhzC,GAAEgzC,GAAG13C,EAAE,CAAC,SAASg4C,KAAK32C,GAAEq2C,IAAIr2C,GAAEs2C,IAAIt2C,GAAEu2C,GAAG,CAAC,SAASK,GAAGx5C,GAAGo5C,GAAGD,GAAGtb,SAAS,IAAIt8B,EAAE63C,GAAGH,GAAGpb,SAAa19B,EAAE41B,GAAGx0B,EAAEvB,EAAEgO,MAAMzM,IAAIpB,IAAI8F,GAAEizC,GAAGl5C,GAAGiG,GAAEgzC,GAAG94C,GAAG,CAAC,SAASs5C,GAAGz5C,GAAGk5C,GAAGrb,UAAU79B,IAAI4C,GAAEq2C,IAAIr2C,GAAEs2C,IAAI,CAAC,IAAIt0C,GAAEmtC,GAAG,GACxZ,SAAS2H,GAAG15C,GAAG,IAAI,IAAIuB,EAAEvB,EAAE,OAAOuB,GAAG,CAAC,GAAG,KAAKA,EAAEyxB,IAAI,CAAC,IAAI7yB,EAAEoB,EAAEg8B,cAAc,GAAG,OAAOp9B,IAAmB,QAAfA,EAAEA,EAAEq9B,aAAqB,OAAOr9B,EAAEsuB,MAAM,OAAOtuB,EAAEsuB,MAAM,OAAOltB,CAAC,MAAM,GAAG,KAAKA,EAAEyxB,UAAK,IAASzxB,EAAE2zC,cAAcyE,aAAa,GAAG,KAAa,IAARp4C,EAAE87B,OAAW,OAAO97B,OAAO,GAAG,OAAOA,EAAEo8B,MAAM,CAACp8B,EAAEo8B,MAAMP,OAAO77B,EAAEA,EAAEA,EAAEo8B,MAAM,QAAQ,CAAC,GAAGp8B,IAAIvB,EAAE,MAAM,KAAK,OAAOuB,EAAEq8B,SAAS,CAAC,GAAG,OAAOr8B,EAAE67B,QAAQ77B,EAAE67B,SAASp9B,EAAE,OAAO,KAAKuB,EAAEA,EAAE67B,MAAM,CAAC77B,EAAEq8B,QAAQR,OAAO77B,EAAE67B,OAAO77B,EAAEA,EAAEq8B,OAAO,CAAC,OAAO,IAAI,CAAC,IAAIgc,GAAG,GACrc,SAASC,KAAK,IAAI,IAAI75C,EAAE,EAAEA,EAAE45C,GAAG56C,OAAOgB,IAAI45C,GAAG55C,GAAG85C,8BAA8B,KAAKF,GAAG56C,OAAO,CAAC,CAAC,IAAI+6C,GAAGzoB,EAAG0oB,uBAAuBC,GAAG3oB,EAAG0R,wBAAwBkX,GAAG,EAAE/1C,GAAE,KAAKM,GAAE,KAAKjC,GAAE,KAAK23C,IAAG,EAAGC,IAAG,EAAGC,GAAG,EAAEC,GAAG,EAAE,SAASp4C,KAAI,MAAMR,MAAMF,EAAE,KAAM,CAAC,SAAS+4C,GAAGv6C,EAAEuB,GAAG,GAAG,OAAOA,EAAE,OAAM,EAAG,IAAI,IAAIpB,EAAE,EAAEA,EAAEoB,EAAEvC,QAAQmB,EAAEH,EAAEhB,OAAOmB,IAAI,IAAIkN,GAAGrN,EAAEG,GAAGoB,EAAEpB,IAAI,OAAM,EAAG,OAAM,CAAE,CAChW,SAASq6C,GAAGx6C,EAAEuB,EAAEpB,EAAEmB,EAAEpD,EAAEqB,GAAyH,GAAtH26C,GAAG36C,EAAE4E,GAAE5C,EAAEA,EAAEg8B,cAAc,KAAKh8B,EAAEs2C,YAAY,KAAKt2C,EAAE01C,MAAM,EAAE8C,GAAGlc,QAAQ,OAAO79B,GAAG,OAAOA,EAAEu9B,cAAckd,GAAGC,GAAG16C,EAAEG,EAAEmB,EAAEpD,GAAMk8C,GAAG,CAAC76C,EAAE,EAAE,EAAE,CAAY,GAAX66C,IAAG,EAAGC,GAAG,EAAK,IAAI96C,EAAE,MAAMmC,MAAMF,EAAE,MAAMjC,GAAG,EAAEiD,GAAEiC,GAAE,KAAKlD,EAAEs2C,YAAY,KAAKkC,GAAGlc,QAAQ8c,GAAG36C,EAAEG,EAAEmB,EAAEpD,EAAE,OAAOk8C,GAAG,CAA+D,GAA9DL,GAAGlc,QAAQ+c,GAAGr5C,EAAE,OAAOkD,IAAG,OAAOA,GAAEZ,KAAKq2C,GAAG,EAAE13C,GAAEiC,GAAEN,GAAE,KAAKg2C,IAAG,EAAM54C,EAAE,MAAMG,MAAMF,EAAE,MAAM,OAAOxB,CAAC,CAAC,SAAS66C,KAAK,IAAI76C,EAAE,IAAIq6C,GAAQ,OAALA,GAAG,EAASr6C,CAAC,CAC/Y,SAAS86C,KAAK,IAAI96C,EAAE,CAACu9B,cAAc,KAAKua,UAAU,KAAKiD,UAAU,KAAKC,MAAM,KAAKn3C,KAAK,MAA8C,OAAxC,OAAOrB,GAAE2B,GAAEo5B,cAAc/6B,GAAExC,EAAEwC,GAAEA,GAAEqB,KAAK7D,EAASwC,EAAC,CAAC,SAASy4C,KAAK,GAAG,OAAOx2C,GAAE,CAAC,IAAIzE,EAAEmE,GAAEg5B,UAAUn9B,EAAE,OAAOA,EAAEA,EAAEu9B,cAAc,IAAI,MAAMv9B,EAAEyE,GAAEZ,KAAK,IAAItC,EAAE,OAAOiB,GAAE2B,GAAEo5B,cAAc/6B,GAAEqB,KAAK,GAAG,OAAOtC,EAAEiB,GAAEjB,EAAEkD,GAAEzE,MAAM,CAAC,GAAG,OAAOA,EAAE,MAAM0B,MAAMF,EAAE,MAAUxB,EAAE,CAACu9B,eAAP94B,GAAEzE,GAAqBu9B,cAAcua,UAAUrzC,GAAEqzC,UAAUiD,UAAUt2C,GAAEs2C,UAAUC,MAAMv2C,GAAEu2C,MAAMn3C,KAAK,MAAM,OAAOrB,GAAE2B,GAAEo5B,cAAc/6B,GAAExC,EAAEwC,GAAEA,GAAEqB,KAAK7D,CAAC,CAAC,OAAOwC,EAAC,CACje,SAAS04C,GAAGl7C,EAAEuB,GAAG,MAAM,oBAAoBA,EAAEA,EAAEvB,GAAGuB,CAAC,CACnD,SAAS45C,GAAGn7C,GAAG,IAAIuB,EAAE05C,KAAK96C,EAAEoB,EAAEy5C,MAAM,GAAG,OAAO76C,EAAE,MAAMuB,MAAMF,EAAE,MAAMrB,EAAEi7C,oBAAoBp7C,EAAE,IAAIsB,EAAEmD,GAAEvG,EAAEoD,EAAEy5C,UAAUx7C,EAAEY,EAAE+3C,QAAQ,GAAG,OAAO34C,EAAE,CAAC,GAAG,OAAOrB,EAAE,CAAC,IAAIqE,EAAErE,EAAE2F,KAAK3F,EAAE2F,KAAKtE,EAAEsE,KAAKtE,EAAEsE,KAAKtB,CAAC,CAACjB,EAAEy5C,UAAU78C,EAAEqB,EAAEY,EAAE+3C,QAAQ,IAAI,CAAC,GAAG,OAAOh6C,EAAE,CAACqB,EAAErB,EAAE2F,KAAKvC,EAAEA,EAAEw2C,UAAU,IAAI12C,EAAEmB,EAAE,KAAKT,EAAE,KAAKtB,EAAEjB,EAAE,EAAE,CAAC,IAAIc,EAAEG,EAAE+3C,KAAK,IAAI2B,GAAG75C,KAAKA,EAAE,OAAOyB,IAAIA,EAAEA,EAAE+B,KAAK,CAAC00C,KAAK,EAAE8C,OAAO76C,EAAE66C,OAAOC,cAAc96C,EAAE86C,cAAcC,WAAW/6C,EAAE+6C,WAAW13C,KAAK,OAAOvC,EAAEd,EAAE86C,cAAc96C,EAAE+6C,WAAWv7C,EAAEsB,EAAEd,EAAE66C,YAAY,CAAC,IAAI13C,EAAE,CAAC40C,KAAKl4C,EAAEg7C,OAAO76C,EAAE66C,OAAOC,cAAc96C,EAAE86C,cACngBC,WAAW/6C,EAAE+6C,WAAW13C,KAAK,MAAM,OAAO/B,GAAGV,EAAEU,EAAE6B,EAAEpB,EAAEjB,GAAGQ,EAAEA,EAAE+B,KAAKF,EAAEQ,GAAE8yC,OAAO52C,EAAEy4C,IAAIz4C,CAAC,CAACG,EAAEA,EAAEqD,IAAI,OAAO,OAAOrD,GAAGA,IAAIjB,GAAG,OAAOuC,EAAES,EAAEjB,EAAEQ,EAAE+B,KAAKzC,EAAEiM,GAAG/L,EAAEC,EAAEg8B,iBAAiB2Z,IAAG,GAAI31C,EAAEg8B,cAAcj8B,EAAEC,EAAEu2C,UAAUv1C,EAAEhB,EAAEw5C,UAAUj5C,EAAE3B,EAAEq7C,kBAAkBl6C,CAAC,CAAiB,GAAG,QAAnBtB,EAAEG,EAAEs3C,aAAwB,CAACv5C,EAAE8B,EAAE,GAAGT,EAAErB,EAAEq6C,KAAKp0C,GAAE8yC,OAAO13C,EAAEu5C,IAAIv5C,EAAErB,EAAEA,EAAE2F,WAAW3F,IAAI8B,EAAE,MAAM,OAAO9B,IAAIiC,EAAE82C,MAAM,GAAG,MAAM,CAAC11C,EAAEg8B,cAAcp9B,EAAEs7C,SAAS,CAC9X,SAASC,GAAG17C,GAAG,IAAIuB,EAAE05C,KAAK96C,EAAEoB,EAAEy5C,MAAM,GAAG,OAAO76C,EAAE,MAAMuB,MAAMF,EAAE,MAAMrB,EAAEi7C,oBAAoBp7C,EAAE,IAAIsB,EAAEnB,EAAEs7C,SAASv9C,EAAEiC,EAAE+3C,QAAQ34C,EAAEgC,EAAEg8B,cAAc,GAAG,OAAOr/B,EAAE,CAACiC,EAAE+3C,QAAQ,KAAK,IAAI31C,EAAErE,EAAEA,EAAE2F,KAAK,GAAGtE,EAAES,EAAET,EAAEgD,EAAE84C,QAAQ94C,EAAEA,EAAEsB,WAAWtB,IAAIrE,GAAGmP,GAAG9N,EAAEgC,EAAEg8B,iBAAiB2Z,IAAG,GAAI31C,EAAEg8B,cAAch+B,EAAE,OAAOgC,EAAEw5C,YAAYx5C,EAAEu2C,UAAUv4C,GAAGY,EAAEq7C,kBAAkBj8C,CAAC,CAAC,MAAM,CAACA,EAAE+B,EAAE,CAAC,SAASq6C,KAAK,CACpW,SAASC,GAAG57C,EAAEuB,GAAG,IAAIpB,EAAEgE,GAAE7C,EAAE25C,KAAK/8C,EAAEqD,IAAIhC,GAAG8N,GAAG/L,EAAEi8B,cAAcr/B,GAAsE,GAAnEqB,IAAI+B,EAAEi8B,cAAcr/B,EAAEg5C,IAAG,GAAI51C,EAAEA,EAAE05C,MAAMa,GAAGC,GAAG36C,KAAK,KAAKhB,EAAEmB,EAAEtB,GAAG,CAACA,IAAOsB,EAAEy6C,cAAcx6C,GAAGhC,GAAG,OAAOiD,IAAuB,EAApBA,GAAE+6B,cAAcvK,IAAM,CAAuD,GAAtD7yB,EAAEk9B,OAAO,KAAK2e,GAAG,EAAEC,GAAG96C,KAAK,KAAKhB,EAAEmB,EAAEpD,EAAEqD,QAAG,EAAO,MAAS,OAAOyE,GAAE,MAAMtE,MAAMF,EAAE,MAAM,KAAQ,GAAH04C,KAAQgC,GAAG/7C,EAAEoB,EAAErD,EAAE,CAAC,OAAOA,CAAC,CAAC,SAASg+C,GAAGl8C,EAAEuB,EAAEpB,GAAGH,EAAEq9B,OAAO,MAAMr9B,EAAE,CAAC+7C,YAAYx6C,EAAET,MAAMX,GAAmB,QAAhBoB,EAAE4C,GAAE0zC,cAAsBt2C,EAAE,CAAC46C,WAAW,KAAK14B,OAAO,MAAMtf,GAAE0zC,YAAYt2C,EAAEA,EAAEkiB,OAAO,CAACzjB,IAAgB,QAAXG,EAAEoB,EAAEkiB,QAAgBliB,EAAEkiB,OAAO,CAACzjB,GAAGG,EAAE4B,KAAK/B,EAAG,CAClf,SAASi8C,GAAGj8C,EAAEuB,EAAEpB,EAAEmB,GAAGC,EAAET,MAAMX,EAAEoB,EAAEw6C,YAAYz6C,EAAE86C,GAAG76C,IAAI86C,GAAGr8C,EAAE,CAAC,SAAS87C,GAAG97C,EAAEuB,EAAEpB,GAAG,OAAOA,GAAE,WAAWi8C,GAAG76C,IAAI86C,GAAGr8C,EAAE,GAAE,CAAC,SAASo8C,GAAGp8C,GAAG,IAAIuB,EAAEvB,EAAE+7C,YAAY/7C,EAAEA,EAAEc,MAAM,IAAI,IAAIX,EAAEoB,IAAI,OAAO8L,GAAGrN,EAAEG,EAAE,CAAC,MAAMmB,GAAG,OAAM,CAAE,CAAC,CAAC,SAAS+6C,GAAGr8C,GAAG,IAAIuB,EAAEm2C,GAAG13C,EAAE,GAAG,OAAOuB,GAAG+6C,GAAG/6C,EAAEvB,EAAE,GAAG,EAAE,CAClQ,SAASu8C,GAAGv8C,GAAG,IAAIuB,EAAEu5C,KAA8M,MAAzM,oBAAoB96C,IAAIA,EAAEA,KAAKuB,EAAEg8B,cAAch8B,EAAEu2C,UAAU93C,EAAEA,EAAE,CAACk4C,QAAQ,KAAKT,YAAY,KAAKR,MAAM,EAAEwE,SAAS,KAAKL,oBAAoBF,GAAGM,kBAAkBx7C,GAAGuB,EAAEy5C,MAAMh7C,EAAEA,EAAEA,EAAEy7C,SAASe,GAAGr7C,KAAK,KAAKgD,GAAEnE,GAAS,CAACuB,EAAEg8B,cAAcv9B,EAAE,CAC5P,SAASg8C,GAAGh8C,EAAEuB,EAAEpB,EAAEmB,GAA8O,OAA3OtB,EAAE,CAACgzB,IAAIhzB,EAAEiB,OAAOM,EAAEk7C,QAAQt8C,EAAEu8C,KAAKp7C,EAAEuC,KAAK,MAAsB,QAAhBtC,EAAE4C,GAAE0zC,cAAsBt2C,EAAE,CAAC46C,WAAW,KAAK14B,OAAO,MAAMtf,GAAE0zC,YAAYt2C,EAAEA,EAAE46C,WAAWn8C,EAAE6D,KAAK7D,GAAmB,QAAfG,EAAEoB,EAAE46C,YAAoB56C,EAAE46C,WAAWn8C,EAAE6D,KAAK7D,GAAGsB,EAAEnB,EAAE0D,KAAK1D,EAAE0D,KAAK7D,EAAEA,EAAE6D,KAAKvC,EAAEC,EAAE46C,WAAWn8C,GAAWA,CAAC,CAAC,SAAS28C,KAAK,OAAO1B,KAAK1d,aAAa,CAAC,SAASqf,GAAG58C,EAAEuB,EAAEpB,EAAEmB,GAAG,IAAIpD,EAAE48C,KAAK32C,GAAEk5B,OAAOr9B,EAAE9B,EAAEq/B,cAAcye,GAAG,EAAEz6C,EAAEpB,OAAE,OAAO,IAASmB,EAAE,KAAKA,EAAE,CAC9Y,SAASu7C,GAAG78C,EAAEuB,EAAEpB,EAAEmB,GAAG,IAAIpD,EAAE+8C,KAAK35C,OAAE,IAASA,EAAE,KAAKA,EAAE,IAAI/B,OAAE,EAAO,GAAG,OAAOkF,GAAE,CAAC,IAAIlC,EAAEkC,GAAE84B,cAA0B,GAAZh+B,EAAEgD,EAAEk6C,QAAW,OAAOn7C,GAAGi5C,GAAGj5C,EAAEiB,EAAEm6C,MAAmC,YAA5Bx+C,EAAEq/B,cAAcye,GAAGz6C,EAAEpB,EAAEZ,EAAE+B,GAAU,CAAC6C,GAAEk5B,OAAOr9B,EAAE9B,EAAEq/B,cAAcye,GAAG,EAAEz6C,EAAEpB,EAAEZ,EAAE+B,EAAE,CAAC,SAASw7C,GAAG98C,EAAEuB,GAAG,OAAOq7C,GAAG,QAAQ,EAAE58C,EAAEuB,EAAE,CAAC,SAASs6C,GAAG77C,EAAEuB,GAAG,OAAOs7C,GAAG,KAAK,EAAE78C,EAAEuB,EAAE,CAAC,SAASw7C,GAAG/8C,EAAEuB,GAAG,OAAOs7C,GAAG,EAAE,EAAE78C,EAAEuB,EAAE,CAAC,SAASy7C,GAAGh9C,EAAEuB,GAAG,OAAOs7C,GAAG,EAAE,EAAE78C,EAAEuB,EAAE,CAChX,SAAS07C,GAAGj9C,EAAEuB,GAAG,MAAG,oBAAoBA,GAASvB,EAAEA,IAAIuB,EAAEvB,GAAG,WAAWuB,EAAE,KAAK,GAAK,OAAOA,QAAG,IAASA,GAASvB,EAAEA,IAAIuB,EAAEs8B,QAAQ79B,EAAE,WAAWuB,EAAEs8B,QAAQ,IAAI,QAA1E,CAA2E,CAAC,SAASqf,GAAGl9C,EAAEuB,EAAEpB,GAA6C,OAA1CA,EAAE,OAAOA,QAAG,IAASA,EAAEA,EAAEb,OAAO,CAACU,IAAI,KAAY68C,GAAG,EAAE,EAAEI,GAAG97C,KAAK,KAAKI,EAAEvB,GAAGG,EAAE,CAAC,SAASg9C,KAAK,CAAC,SAASC,GAAGp9C,EAAEuB,GAAG,IAAIpB,EAAE86C,KAAK15C,OAAE,IAASA,EAAE,KAAKA,EAAE,IAAID,EAAEnB,EAAEo9B,cAAc,OAAG,OAAOj8B,GAAG,OAAOC,GAAGg5C,GAAGh5C,EAAED,EAAE,IAAWA,EAAE,IAAGnB,EAAEo9B,cAAc,CAACv9B,EAAEuB,GAAUvB,EAAC,CAC7Z,SAASq9C,GAAGr9C,EAAEuB,GAAG,IAAIpB,EAAE86C,KAAK15C,OAAE,IAASA,EAAE,KAAKA,EAAE,IAAID,EAAEnB,EAAEo9B,cAAc,OAAG,OAAOj8B,GAAG,OAAOC,GAAGg5C,GAAGh5C,EAAED,EAAE,IAAWA,EAAE,IAAGtB,EAAEA,IAAIG,EAAEo9B,cAAc,CAACv9B,EAAEuB,GAAUvB,EAAC,CAAC,SAASs9C,GAAGt9C,EAAEuB,EAAEpB,GAAG,OAAG,KAAQ,GAAH+5C,KAAcl6C,EAAE83C,YAAY93C,EAAE83C,WAAU,EAAGZ,IAAG,GAAIl3C,EAAEu9B,cAAcp9B,IAAEkN,GAAGlN,EAAEoB,KAAKpB,EAAEqgC,KAAKr8B,GAAE8yC,OAAO92C,EAAE24C,IAAI34C,EAAEH,EAAE83C,WAAU,GAAWv2C,EAAC,CAAC,SAASg8C,GAAGv9C,EAAEuB,GAAG,IAAIpB,EAAEmD,GAAEA,GAAE,IAAInD,GAAG,EAAEA,EAAEA,EAAE,EAAEH,GAAE,GAAI,IAAIsB,EAAE24C,GAAG9W,WAAW8W,GAAG9W,WAAW,CAAC,EAAE,IAAInjC,GAAE,GAAIuB,GAAG,CAAC,QAAQ+B,GAAEnD,EAAE85C,GAAG9W,WAAW7hC,CAAC,CAAC,CAAC,SAASk8C,KAAK,OAAOvC,KAAK1d,aAAa,CAC1d,SAASkgB,GAAGz9C,EAAEuB,EAAEpB,GAAG,IAAImB,EAAEo8C,GAAG19C,GAAkE,GAA/DG,EAAE,CAACo4C,KAAKj3C,EAAE+5C,OAAOl7C,EAAEm7C,eAAc,EAAGC,WAAW,KAAK13C,KAAK,MAAS85C,GAAG39C,GAAG49C,GAAGr8C,EAAEpB,QAAQ,GAAiB,QAAdA,EAAEq3C,GAAGx3C,EAAEuB,EAAEpB,EAAEmB,IAAY,CAAWg7C,GAAGn8C,EAAEH,EAAEsB,EAAX4C,MAAgB25C,GAAG19C,EAAEoB,EAAED,EAAE,CAAC,CAC/K,SAASk7C,GAAGx8C,EAAEuB,EAAEpB,GAAG,IAAImB,EAAEo8C,GAAG19C,GAAG9B,EAAE,CAACq6C,KAAKj3C,EAAE+5C,OAAOl7C,EAAEm7C,eAAc,EAAGC,WAAW,KAAK13C,KAAK,MAAM,GAAG85C,GAAG39C,GAAG49C,GAAGr8C,EAAErD,OAAO,CAAC,IAAIqB,EAAES,EAAEm9B,UAAU,GAAG,IAAIn9B,EAAEi3C,QAAQ,OAAO13C,GAAG,IAAIA,EAAE03C,QAAiC,QAAxB13C,EAAEgC,EAAE65C,qBAA8B,IAAI,IAAI74C,EAAEhB,EAAEi6C,kBAAkBp6C,EAAE7B,EAAEgD,EAAEpC,GAAqC,GAAlCjC,EAAEo9C,eAAc,EAAGp9C,EAAEq9C,WAAWn6C,EAAKiM,GAAGjM,EAAEmB,GAAG,CAAC,IAAIT,EAAEP,EAAEk2C,YAA+E,OAAnE,OAAO31C,GAAG5D,EAAE2F,KAAK3F,EAAEq5C,GAAGh2C,KAAKrD,EAAE2F,KAAK/B,EAAE+B,KAAK/B,EAAE+B,KAAK3F,QAAGqD,EAAEk2C,YAAYv5C,EAAQ,CAAC,CAAC,MAAMsC,GAAG,CAAwB,QAAdL,EAAEq3C,GAAGx3C,EAAEuB,EAAErD,EAAEoD,MAAoBg7C,GAAGn8C,EAAEH,EAAEsB,EAAbpD,EAAEgG,MAAgB25C,GAAG19C,EAAEoB,EAAED,GAAG,CAAC,CAC/c,SAASq8C,GAAG39C,GAAG,IAAIuB,EAAEvB,EAAEm9B,UAAU,OAAOn9B,IAAImE,IAAG,OAAO5C,GAAGA,IAAI4C,EAAC,CAAC,SAASy5C,GAAG59C,EAAEuB,GAAG64C,GAAGD,IAAG,EAAG,IAAIh6C,EAAEH,EAAEk4C,QAAQ,OAAO/3C,EAAEoB,EAAEsC,KAAKtC,GAAGA,EAAEsC,KAAK1D,EAAE0D,KAAK1D,EAAE0D,KAAKtC,GAAGvB,EAAEk4C,QAAQ32C,CAAC,CAAC,SAASs8C,GAAG79C,EAAEuB,EAAEpB,GAAG,GAAG,KAAO,QAAFA,GAAW,CAAC,IAAImB,EAAEC,EAAE01C,MAAwB92C,GAAlBmB,GAAGtB,EAAEigC,aAAkB1+B,EAAE01C,MAAM92C,EAAEygC,GAAG5gC,EAAEG,EAAE,CAAC,CAC9P,IAAIy6C,GAAG,CAACkD,YAAY3G,GAAG4G,YAAY77C,GAAE87C,WAAW97C,GAAE+7C,UAAU/7C,GAAEg8C,oBAAoBh8C,GAAEi8C,mBAAmBj8C,GAAEk8C,gBAAgBl8C,GAAEm8C,QAAQn8C,GAAEo8C,WAAWp8C,GAAEq8C,OAAOr8C,GAAEs8C,SAASt8C,GAAEu8C,cAAcv8C,GAAEw8C,iBAAiBx8C,GAAEy8C,cAAcz8C,GAAE08C,iBAAiB18C,GAAE28C,qBAAqB38C,GAAE48C,MAAM58C,GAAE68C,0BAAyB,GAAItE,GAAG,CAACqD,YAAY3G,GAAG4G,YAAY,SAAS/9C,EAAEuB,GAA4C,OAAzCu5C,KAAKvd,cAAc,CAACv9B,OAAE,IAASuB,EAAE,KAAKA,GAAUvB,CAAC,EAAEg+C,WAAW7G,GAAG8G,UAAUnB,GAAGoB,oBAAoB,SAASl+C,EAAEuB,EAAEpB,GAA6C,OAA1CA,EAAE,OAAOA,QAAG,IAASA,EAAEA,EAAEb,OAAO,CAACU,IAAI,KAAY48C,GAAG,QAC3f,EAAEK,GAAG97C,KAAK,KAAKI,EAAEvB,GAAGG,EAAE,EAAEi+C,gBAAgB,SAASp+C,EAAEuB,GAAG,OAAOq7C,GAAG,QAAQ,EAAE58C,EAAEuB,EAAE,EAAE48C,mBAAmB,SAASn+C,EAAEuB,GAAG,OAAOq7C,GAAG,EAAE,EAAE58C,EAAEuB,EAAE,EAAE88C,QAAQ,SAASr+C,EAAEuB,GAAG,IAAIpB,EAAE26C,KAAqD,OAAhDv5C,OAAE,IAASA,EAAE,KAAKA,EAAEvB,EAAEA,IAAIG,EAAEo9B,cAAc,CAACv9B,EAAEuB,GAAUvB,CAAC,EAAEs+C,WAAW,SAASt+C,EAAEuB,EAAEpB,GAAG,IAAImB,EAAEw5C,KAAkM,OAA7Lv5C,OAAE,IAASpB,EAAEA,EAAEoB,GAAGA,EAAED,EAAEi8B,cAAcj8B,EAAEw2C,UAAUv2C,EAAEvB,EAAE,CAACk4C,QAAQ,KAAKT,YAAY,KAAKR,MAAM,EAAEwE,SAAS,KAAKL,oBAAoBp7C,EAAEw7C,kBAAkBj6C,GAAGD,EAAE05C,MAAMh7C,EAAEA,EAAEA,EAAEy7C,SAASgC,GAAGt8C,KAAK,KAAKgD,GAAEnE,GAAS,CAACsB,EAAEi8B,cAAcv9B,EAAE,EAAEu+C,OAAO,SAASv+C,GAC3d,OAAdA,EAAE,CAAC69B,QAAQ79B,GAAhB86C,KAA4Bvd,cAAcv9B,CAAC,EAAEw+C,SAASjC,GAAGkC,cAActB,GAAGuB,iBAAiB,SAAS1+C,GAAG,OAAO86C,KAAKvd,cAAcv9B,CAAC,EAAE2+C,cAAc,WAAW,IAAI3+C,EAAEu8C,IAAG,GAAIh7C,EAAEvB,EAAE,GAA6C,OAA1CA,EAAEu9C,GAAGp8C,KAAK,KAAKnB,EAAE,IAAI86C,KAAKvd,cAAcv9B,EAAQ,CAACuB,EAAEvB,EAAE,EAAE4+C,iBAAiB,WAAW,EAAEC,qBAAqB,SAAS7+C,EAAEuB,EAAEpB,GAAG,IAAImB,EAAE6C,GAAEjG,EAAE48C,KAAK,GAAGl3C,GAAE,CAAC,QAAG,IAASzD,EAAE,MAAMuB,MAAMF,EAAE,MAAMrB,EAAEA,GAAG,KAAK,CAAO,GAANA,EAAEoB,IAAO,OAAOyE,GAAE,MAAMtE,MAAMF,EAAE,MAAM,KAAQ,GAAH04C,KAAQgC,GAAG56C,EAAEC,EAAEpB,EAAE,CAACjC,EAAEq/B,cAAcp9B,EAAE,IAAIZ,EAAE,CAACuB,MAAMX,EAAE47C,YAAYx6C,GACvZ,OAD0ZrD,EAAE88C,MAAMz7C,EAAEu9C,GAAGhB,GAAG36C,KAAK,KAAKG,EACpf/B,EAAES,GAAG,CAACA,IAAIsB,EAAE+7B,OAAO,KAAK2e,GAAG,EAAEC,GAAG96C,KAAK,KAAKG,EAAE/B,EAAEY,EAAEoB,QAAG,EAAO,MAAapB,CAAC,EAAE2+C,MAAM,WAAW,IAAI9+C,EAAE86C,KAAKv5C,EAAEyE,GAAEg5C,iBAAiB,GAAGp7C,GAAE,CAAC,IAAIzD,EAAE0zC,GAAkDtyC,EAAE,IAAIA,EAAE,KAA9CpB,GAAHyzC,KAAU,GAAG,GAAGrU,GAAhBqU,IAAsB,IAAIxwC,SAAS,IAAIjD,GAAuB,GAAPA,EAAEk6C,QAAW94C,GAAG,IAAIpB,EAAEiD,SAAS,KAAK7B,GAAG,GAAG,MAAaA,EAAE,IAAIA,EAAE,KAAfpB,EAAEm6C,MAAmBl3C,SAAS,IAAI,IAAI,OAAOpD,EAAEu9B,cAAch8B,CAAC,EAAEw9C,0BAAyB,GAAIrE,GAAG,CAACoD,YAAY3G,GAAG4G,YAAYX,GAAGY,WAAW7G,GAAG8G,UAAUpC,GAAGqC,oBAAoBhB,GAAGiB,mBAAmBpB,GAAGqB,gBAAgBpB,GAAGqB,QAAQhB,GAAGiB,WAAWnD,GAAGoD,OAAO5B,GAAG6B,SAAS,WAAW,OAAOrD,GAAGD,GAAG,EACrhBuD,cAActB,GAAGuB,iBAAiB,SAAS1+C,GAAc,OAAOs9C,GAAZrC,KAAiBx2C,GAAE84B,cAAcv9B,EAAE,EAAE2+C,cAAc,WAAgD,MAAM,CAArCxD,GAAGD,IAAI,GAAKD,KAAK1d,cAAyB,EAAEqhB,iBAAiBjD,GAAGkD,qBAAqBjD,GAAGkD,MAAMtB,GAAGuB,0BAAyB,GAAIpE,GAAG,CAACmD,YAAY3G,GAAG4G,YAAYX,GAAGY,WAAW7G,GAAG8G,UAAUpC,GAAGqC,oBAAoBhB,GAAGiB,mBAAmBpB,GAAGqB,gBAAgBpB,GAAGqB,QAAQhB,GAAGiB,WAAW5C,GAAG6C,OAAO5B,GAAG6B,SAAS,WAAW,OAAO9C,GAAGR,GAAG,EAAEuD,cAActB,GAAGuB,iBAAiB,SAAS1+C,GAAG,IAAIuB,EAAE05C,KAAK,OAAO,OACzfx2C,GAAElD,EAAEg8B,cAAcv9B,EAAEs9C,GAAG/7C,EAAEkD,GAAE84B,cAAcv9B,EAAE,EAAE2+C,cAAc,WAAgD,MAAM,CAArCjD,GAAGR,IAAI,GAAKD,KAAK1d,cAAyB,EAAEqhB,iBAAiBjD,GAAGkD,qBAAqBjD,GAAGkD,MAAMtB,GAAGuB,0BAAyB,GAAI,SAASE,GAAGj/C,EAAEuB,GAAG,GAAGvB,GAAGA,EAAEk/C,aAAa,CAA4B,IAAI,IAAI/+C,KAAnCoB,EAAE8B,EAAE,CAAC,EAAE9B,GAAGvB,EAAEA,EAAEk/C,kBAA4B,IAAS39C,EAAEpB,KAAKoB,EAAEpB,GAAGH,EAAEG,IAAI,OAAOoB,CAAC,CAAC,OAAOA,CAAC,CAAC,SAAS49C,GAAGn/C,EAAEuB,EAAEpB,EAAEmB,GAA8BnB,EAAE,QAAXA,EAAEA,EAAEmB,EAAtBC,EAAEvB,EAAEu9B,sBAAmC,IAASp9B,EAAEoB,EAAE8B,EAAE,CAAC,EAAE9B,EAAEpB,GAAGH,EAAEu9B,cAAcp9B,EAAE,IAAIH,EAAEi3C,QAAQj3C,EAAE63C,YAAYC,UAAU33C,EAAE,CACrd,IAAIi/C,GAAG,CAACC,UAAU,SAASr/C,GAAG,SAAOA,EAAEA,EAAEs/C,kBAAiBpiB,GAAGl9B,KAAKA,CAAI,EAAEu/C,gBAAgB,SAASv/C,EAAEuB,EAAEpB,GAAGH,EAAEA,EAAEs/C,gBAAgB,IAAIh+C,EAAE4C,KAAIhG,EAAEw/C,GAAG19C,GAAGT,EAAE84C,GAAG/2C,EAAEpD,GAAGqB,EAAEi5C,QAAQj3C,OAAE,IAASpB,GAAG,OAAOA,IAAIZ,EAAEk5C,SAASt4C,GAAe,QAAZoB,EAAEm3C,GAAG14C,EAAET,EAAErB,MAAco+C,GAAG/6C,EAAEvB,EAAE9B,EAAEoD,GAAGq3C,GAAGp3C,EAAEvB,EAAE9B,GAAG,EAAEshD,oBAAoB,SAASx/C,EAAEuB,EAAEpB,GAAGH,EAAEA,EAAEs/C,gBAAgB,IAAIh+C,EAAE4C,KAAIhG,EAAEw/C,GAAG19C,GAAGT,EAAE84C,GAAG/2C,EAAEpD,GAAGqB,EAAEyzB,IAAI,EAAEzzB,EAAEi5C,QAAQj3C,OAAE,IAASpB,GAAG,OAAOA,IAAIZ,EAAEk5C,SAASt4C,GAAe,QAAZoB,EAAEm3C,GAAG14C,EAAET,EAAErB,MAAco+C,GAAG/6C,EAAEvB,EAAE9B,EAAEoD,GAAGq3C,GAAGp3C,EAAEvB,EAAE9B,GAAG,EAAEuhD,mBAAmB,SAASz/C,EAAEuB,GAAGvB,EAAEA,EAAEs/C,gBAAgB,IAAIn/C,EAAE+D,KAAI5C,EACnfo8C,GAAG19C,GAAG9B,EAAEm6C,GAAGl4C,EAAEmB,GAAGpD,EAAE80B,IAAI,OAAE,IAASzxB,GAAG,OAAOA,IAAIrD,EAAEu6C,SAASl3C,GAAe,QAAZA,EAAEm3C,GAAG14C,EAAE9B,EAAEoD,MAAcg7C,GAAG/6C,EAAEvB,EAAEsB,EAAEnB,GAAGw4C,GAAGp3C,EAAEvB,EAAEsB,GAAG,GAAG,SAASo+C,GAAG1/C,EAAEuB,EAAEpB,EAAEmB,EAAEpD,EAAEqB,EAAEgD,GAAiB,MAAM,oBAApBvC,EAAEA,EAAE87B,WAAsC6jB,sBAAsB3/C,EAAE2/C,sBAAsBr+C,EAAE/B,EAAEgD,IAAGhB,EAAE9C,YAAW8C,EAAE9C,UAAUmhD,wBAAsBnzC,GAAGtM,EAAEmB,KAAKmL,GAAGvO,EAAEqB,GAAK,CAC1S,SAASsgD,GAAG7/C,EAAEuB,EAAEpB,GAAG,IAAImB,GAAE,EAAGpD,EAAE8zC,GAAOzyC,EAAEgC,EAAEu+C,YAA2W,MAA/V,kBAAkBvgD,GAAG,OAAOA,EAAEA,EAAE43C,GAAG53C,IAAIrB,EAAEq0C,GAAGhxC,GAAG2wC,GAAG/rC,GAAE03B,QAAyBt+B,GAAG+B,EAAE,QAAtBA,EAAEC,EAAE6wC,oBAA4B,IAAS9wC,GAAG6wC,GAAGnyC,EAAE9B,GAAG8zC,IAAIzwC,EAAE,IAAIA,EAAEpB,EAAEZ,GAAGS,EAAEu9B,cAAc,OAAOh8B,EAAEw+C,YAAO,IAASx+C,EAAEw+C,MAAMx+C,EAAEw+C,MAAM,KAAKx+C,EAAEy+C,QAAQZ,GAAGp/C,EAAE87B,UAAUv6B,EAAEA,EAAE+9C,gBAAgBt/C,EAAEsB,KAAItB,EAAEA,EAAE87B,WAAYuW,4CAA4Cn0C,EAAE8B,EAAEsyC,0CAA0C/yC,GAAUgC,CAAC,CAC5Z,SAAS0+C,GAAGjgD,EAAEuB,EAAEpB,EAAEmB,GAAGtB,EAAEuB,EAAEw+C,MAAM,oBAAoBx+C,EAAE2+C,2BAA2B3+C,EAAE2+C,0BAA0B//C,EAAEmB,GAAG,oBAAoBC,EAAE4+C,kCAAkC5+C,EAAE4+C,iCAAiChgD,EAAEmB,GAAGC,EAAEw+C,QAAQ//C,GAAGo/C,GAAGI,oBAAoBj+C,EAAEA,EAAEw+C,MAAM,KAAK,CACpQ,SAASK,GAAGpgD,EAAEuB,EAAEpB,EAAEmB,GAAG,IAAIpD,EAAE8B,EAAE87B,UAAU59B,EAAE+uB,MAAM9sB,EAAEjC,EAAE6hD,MAAM//C,EAAEu9B,cAAcr/B,EAAEw3C,KAAK,CAAC,EAAEkC,GAAG53C,GAAG,IAAIT,EAAEgC,EAAEu+C,YAAY,kBAAkBvgD,GAAG,OAAOA,EAAErB,EAAEk5C,QAAQD,GAAG53C,IAAIA,EAAEgzC,GAAGhxC,GAAG2wC,GAAG/rC,GAAE03B,QAAQ3/B,EAAEk5C,QAAQjF,GAAGnyC,EAAET,IAAIrB,EAAE6hD,MAAM//C,EAAEu9B,cAA2C,oBAA7Bh+B,EAAEgC,EAAE8+C,4BAAiDlB,GAAGn/C,EAAEuB,EAAEhC,EAAEY,GAAGjC,EAAE6hD,MAAM//C,EAAEu9B,eAAe,oBAAoBh8B,EAAE8+C,0BAA0B,oBAAoBniD,EAAEoiD,yBAAyB,oBAAoBpiD,EAAEqiD,2BAA2B,oBAAoBriD,EAAEsiD,qBAAqBj/C,EAAErD,EAAE6hD,MACrf,oBAAoB7hD,EAAEsiD,oBAAoBtiD,EAAEsiD,qBAAqB,oBAAoBtiD,EAAEqiD,2BAA2BriD,EAAEqiD,4BAA4Bh/C,IAAIrD,EAAE6hD,OAAOX,GAAGI,oBAAoBthD,EAAEA,EAAE6hD,MAAM,MAAMlH,GAAG74C,EAAEG,EAAEjC,EAAEoD,GAAGpD,EAAE6hD,MAAM//C,EAAEu9B,eAAe,oBAAoBr/B,EAAEuiD,oBAAoBzgD,EAAEq9B,OAAO,QAAQ,CAAC,SAASqjB,GAAG1gD,EAAEuB,GAAG,IAAI,IAAIpB,EAAE,GAAGmB,EAAEC,EAAE,GAAGpB,GAAG4yB,EAAGzxB,GAAGA,EAAEA,EAAE87B,aAAa97B,GAAG,IAAIpD,EAAEiC,CAAC,CAAC,MAAMZ,GAAGrB,EAAE,6BAA6BqB,EAAEoF,QAAQ,KAAKpF,EAAEmhB,KAAK,CAAC,MAAM,CAAC5f,MAAMd,EAAE86B,OAAOv5B,EAAEmf,MAAMxiB,EAAEwJ,OAAO,KAAK,CAC1d,SAASi5C,GAAG3gD,EAAEuB,EAAEpB,GAAG,MAAM,CAACW,MAAMd,EAAE86B,OAAO,KAAKpa,MAAM,MAAMvgB,EAAEA,EAAE,KAAKuH,OAAO,MAAMnG,EAAEA,EAAE,KAAK,CAAC,SAASq/C,GAAG5gD,EAAEuB,GAAG,IAAI8N,QAAQ+I,MAAM7W,EAAET,MAAM,CAAC,MAAMX,GAAG0B,YAAW,WAAW,MAAM1B,CAAE,GAAE,CAAC,CAAC,IAAI0gD,GAAG,oBAAoB79C,QAAQA,QAAQonB,IAAI,SAAS02B,GAAG9gD,EAAEuB,EAAEpB,IAAGA,EAAEk4C,IAAI,EAAEl4C,IAAK6yB,IAAI,EAAE7yB,EAAEq4C,QAAQ,CAAC9K,QAAQ,MAAM,IAAIpsC,EAAEC,EAAET,MAAsD,OAAhDX,EAAEs4C,SAAS,WAAWsI,KAAKA,IAAG,EAAGC,GAAG1/C,GAAGs/C,GAAG5gD,EAAEuB,EAAE,EAASpB,CAAC,CACrW,SAAS8gD,GAAGjhD,EAAEuB,EAAEpB,IAAGA,EAAEk4C,IAAI,EAAEl4C,IAAK6yB,IAAI,EAAE,IAAI1xB,EAAEtB,EAAEgO,KAAKkzC,yBAAyB,GAAG,oBAAoB5/C,EAAE,CAAC,IAAIpD,EAAEqD,EAAET,MAAMX,EAAEq4C,QAAQ,WAAW,OAAOl3C,EAAEpD,EAAE,EAAEiC,EAAEs4C,SAAS,WAAWmI,GAAG5gD,EAAEuB,EAAE,CAAC,CAAC,IAAIhC,EAAES,EAAE87B,UAA8O,OAApO,OAAOv8B,GAAG,oBAAoBA,EAAE4hD,oBAAoBhhD,EAAEs4C,SAAS,WAAWmI,GAAG5gD,EAAEuB,GAAG,oBAAoBD,IAAI,OAAO8/C,GAAGA,GAAG,IAAIv+C,IAAI,CAAC1D,OAAOiiD,GAAG5tC,IAAIrU,OAAO,IAAIgB,EAAEoB,EAAEmf,MAAMvhB,KAAKgiD,kBAAkB5/C,EAAET,MAAM,CAACugD,eAAe,OAAOlhD,EAAEA,EAAE,IAAI,GAAUA,CAAC,CACnb,SAASmhD,GAAGthD,EAAEuB,EAAEpB,GAAG,IAAImB,EAAEtB,EAAEuhD,UAAU,GAAG,OAAOjgD,EAAE,CAACA,EAAEtB,EAAEuhD,UAAU,IAAIV,GAAG,IAAI3iD,EAAE,IAAI2E,IAAIvB,EAAEV,IAAIW,EAAErD,EAAE,WAAiB,KAAXA,EAAEoD,EAAEX,IAAIY,MAAgBrD,EAAE,IAAI2E,IAAIvB,EAAEV,IAAIW,EAAErD,IAAIA,EAAE+E,IAAI9C,KAAKjC,EAAEsV,IAAIrT,GAAGH,EAAEwhD,GAAGrgD,KAAK,KAAKnB,EAAEuB,EAAEpB,GAAGoB,EAAEqF,KAAK5G,EAAEA,GAAG,CAAC,SAASyhD,GAAGzhD,GAAG,EAAE,CAAC,IAAIuB,EAA4E,IAAvEA,EAAE,KAAKvB,EAAEgzB,OAAsBzxB,EAAE,QAApBA,EAAEvB,EAAEu9B,gBAAyB,OAAOh8B,EAAEi8B,YAAuBj8B,EAAE,OAAOvB,EAAEA,EAAEA,EAAEo9B,MAAM,OAAO,OAAOp9B,GAAG,OAAO,IAAI,CAChW,SAAS0hD,GAAG1hD,EAAEuB,EAAEpB,EAAEmB,EAAEpD,GAAG,OAAG,KAAY,EAAP8B,EAAEod,OAAepd,IAAIuB,EAAEvB,EAAEq9B,OAAO,OAAOr9B,EAAEq9B,OAAO,IAAIl9B,EAAEk9B,OAAO,OAAOl9B,EAAEk9B,QAAQ,MAAM,IAAIl9B,EAAE6yB,MAAM,OAAO7yB,EAAEg9B,UAAUh9B,EAAE6yB,IAAI,KAAIzxB,EAAE82C,IAAI,EAAE,IAAKrlB,IAAI,EAAE0lB,GAAGv4C,EAAEoB,EAAE,KAAKpB,EAAE82C,OAAO,GAAGj3C,IAAEA,EAAEq9B,OAAO,MAAMr9B,EAAEi3C,MAAM/4C,EAAS8B,EAAC,CAAC,IAAI2hD,GAAGrwB,EAAGswB,kBAAkB1K,IAAG,EAAG,SAAS2K,GAAG7hD,EAAEuB,EAAEpB,EAAEmB,GAAGC,EAAEo8B,MAAM,OAAO39B,EAAEq2C,GAAG90C,EAAE,KAAKpB,EAAEmB,GAAG80C,GAAG70C,EAAEvB,EAAE29B,MAAMx9B,EAAEmB,EAAE,CACnV,SAASwgD,GAAG9hD,EAAEuB,EAAEpB,EAAEmB,EAAEpD,GAAGiC,EAAEA,EAAE8yB,OAAO,IAAI1zB,EAAEgC,EAAEkH,IAAqC,OAAjCsuC,GAAGx1C,EAAErD,GAAGoD,EAAEk5C,GAAGx6C,EAAEuB,EAAEpB,EAAEmB,EAAE/B,EAAErB,GAAGiC,EAAE06C,KAAQ,OAAO76C,GAAIk3C,IAA2EtzC,IAAGzD,GAAG6zC,GAAGzyC,GAAGA,EAAE87B,OAAO,EAAEwkB,GAAG7hD,EAAEuB,EAAED,EAAEpD,GAAUqD,EAAEo8B,QAA7Gp8B,EAAEs2C,YAAY73C,EAAE63C,YAAYt2C,EAAE87B,QAAQ,KAAKr9B,EAAEi3C,QAAQ/4C,EAAE6jD,GAAG/hD,EAAEuB,EAAErD,GAAoD,CACzN,SAAS8jD,GAAGhiD,EAAEuB,EAAEpB,EAAEmB,EAAEpD,GAAG,GAAG,OAAO8B,EAAE,CAAC,IAAIT,EAAEY,EAAE6N,KAAK,MAAG,oBAAoBzO,GAAI0iD,GAAG1iD,SAAI,IAASA,EAAE2/C,cAAc,OAAO/+C,EAAE+hD,cAAS,IAAS/hD,EAAE++C,eAAoDl/C,EAAEg2C,GAAG71C,EAAE6N,KAAK,KAAK1M,EAAEC,EAAEA,EAAE6b,KAAKlf,IAAKuK,IAAIlH,EAAEkH,IAAIzI,EAAEo9B,OAAO77B,EAASA,EAAEo8B,MAAM39B,IAArGuB,EAAEyxB,IAAI,GAAGzxB,EAAEyM,KAAKzO,EAAE4iD,GAAGniD,EAAEuB,EAAEhC,EAAE+B,EAAEpD,GAAyE,CAAW,GAAVqB,EAAES,EAAE29B,MAAS,KAAK39B,EAAEi3C,MAAM/4C,GAAG,CAAC,IAAIqE,EAAEhD,EAAE21C,cAA0C,IAAhB/0C,EAAE,QAAdA,EAAEA,EAAE+hD,SAAmB/hD,EAAEsM,IAAQlK,EAAEjB,IAAItB,EAAEyI,MAAMlH,EAAEkH,IAAI,OAAOs5C,GAAG/hD,EAAEuB,EAAErD,EAAE,CAA6C,OAA5CqD,EAAE87B,OAAO,GAAEr9B,EAAE81C,GAAGv2C,EAAE+B,IAAKmH,IAAIlH,EAAEkH,IAAIzI,EAAEo9B,OAAO77B,EAASA,EAAEo8B,MAAM39B,CAAC,CAC1b,SAASmiD,GAAGniD,EAAEuB,EAAEpB,EAAEmB,EAAEpD,GAAG,GAAG,OAAO8B,EAAE,CAAC,IAAIT,EAAES,EAAEk1C,cAAc,GAAGzoC,GAAGlN,EAAE+B,IAAItB,EAAEyI,MAAMlH,EAAEkH,IAAI,IAAGyuC,IAAG,EAAG31C,EAAEmzC,aAAapzC,EAAE/B,EAAE,KAAKS,EAAEi3C,MAAM/4C,GAAsC,OAAOqD,EAAE01C,MAAMj3C,EAAEi3C,MAAM8K,GAAG/hD,EAAEuB,EAAErD,GAAjE,KAAa,OAAR8B,EAAEq9B,SAAgB6Z,IAAG,EAAyC,EAAC,OAAOkL,GAAGpiD,EAAEuB,EAAEpB,EAAEmB,EAAEpD,EAAE,CACxN,SAASmkD,GAAGriD,EAAEuB,EAAEpB,GAAG,IAAImB,EAAEC,EAAEmzC,aAAax2C,EAAEoD,EAAEm0B,SAASl2B,EAAE,OAAOS,EAAEA,EAAEu9B,cAAc,KAAK,GAAG,WAAWj8B,EAAE8b,KAAK,GAAG,KAAY,EAAP7b,EAAE6b,MAAQ7b,EAAEg8B,cAAc,CAAC+kB,UAAU,EAAEC,UAAU,KAAKC,YAAY,MAAMv8C,GAAEw8C,GAAGC,IAAIA,IAAIviD,MAAM,CAAC,GAAG,KAAO,WAAFA,GAAc,OAAOH,EAAE,OAAOT,EAAEA,EAAE+iD,UAAUniD,EAAEA,EAAEoB,EAAE01C,MAAM11C,EAAEu1C,WAAW,WAAWv1C,EAAEg8B,cAAc,CAAC+kB,UAAUtiD,EAAEuiD,UAAU,KAAKC,YAAY,MAAMjhD,EAAEs2C,YAAY,KAAK5xC,GAAEw8C,GAAGC,IAAIA,IAAI1iD,EAAE,KAAKuB,EAAEg8B,cAAc,CAAC+kB,UAAU,EAAEC,UAAU,KAAKC,YAAY,MAAMlhD,EAAE,OAAO/B,EAAEA,EAAE+iD,UAAUniD,EAAE8F,GAAEw8C,GAAGC,IAAIA,IAAIphD,CAAC,MAAM,OACtf/B,GAAG+B,EAAE/B,EAAE+iD,UAAUniD,EAAEoB,EAAEg8B,cAAc,MAAMj8B,EAAEnB,EAAE8F,GAAEw8C,GAAGC,IAAIA,IAAIphD,EAAc,OAAZugD,GAAG7hD,EAAEuB,EAAErD,EAAEiC,GAAUoB,EAAEo8B,KAAK,CAAC,SAASglB,GAAG3iD,EAAEuB,GAAG,IAAIpB,EAAEoB,EAAEkH,KAAO,OAAOzI,GAAG,OAAOG,GAAG,OAAOH,GAAGA,EAAEyI,MAAMtI,KAAEoB,EAAE87B,OAAO,IAAI97B,EAAE87B,OAAO,QAAO,CAAC,SAAS+kB,GAAGpiD,EAAEuB,EAAEpB,EAAEmB,EAAEpD,GAAG,IAAIqB,EAAEgzC,GAAGpyC,GAAG+xC,GAAG/rC,GAAE03B,QAAmD,OAA3Ct+B,EAAE4yC,GAAG5wC,EAAEhC,GAAGw3C,GAAGx1C,EAAErD,GAAGiC,EAAEq6C,GAAGx6C,EAAEuB,EAAEpB,EAAEmB,EAAE/B,EAAErB,GAAGoD,EAAEu5C,KAAQ,OAAO76C,GAAIk3C,IAA2EtzC,IAAGtC,GAAG0yC,GAAGzyC,GAAGA,EAAE87B,OAAO,EAAEwkB,GAAG7hD,EAAEuB,EAAEpB,EAAEjC,GAAUqD,EAAEo8B,QAA7Gp8B,EAAEs2C,YAAY73C,EAAE63C,YAAYt2C,EAAE87B,QAAQ,KAAKr9B,EAAEi3C,QAAQ/4C,EAAE6jD,GAAG/hD,EAAEuB,EAAErD,GAAoD,CACla,SAAS0kD,GAAG5iD,EAAEuB,EAAEpB,EAAEmB,EAAEpD,GAAG,GAAGq0C,GAAGpyC,GAAG,CAAC,IAAIZ,GAAE,EAAGszC,GAAGtxC,EAAE,MAAMhC,GAAE,EAAW,GAARw3C,GAAGx1C,EAAErD,GAAM,OAAOqD,EAAEu6B,UAAU+mB,GAAG7iD,EAAEuB,GAAGs+C,GAAGt+C,EAAEpB,EAAEmB,GAAG8+C,GAAG7+C,EAAEpB,EAAEmB,EAAEpD,GAAGoD,GAAE,OAAQ,GAAG,OAAOtB,EAAE,CAAC,IAAIuC,EAAEhB,EAAEu6B,UAAU16B,EAAEG,EAAE2zC,cAAc3yC,EAAE0qB,MAAM7rB,EAAE,IAAIU,EAAES,EAAE60C,QAAQ52C,EAAEL,EAAE2/C,YAAY,kBAAkBt/C,GAAG,OAAOA,EAAEA,EAAE22C,GAAG32C,GAAyBA,EAAE2xC,GAAG5wC,EAA1Bf,EAAE+xC,GAAGpyC,GAAG+xC,GAAG/rC,GAAE03B,SAAmB,IAAIx9B,EAAEF,EAAEkgD,yBAAyB18C,EAAE,oBAAoBtD,GAAG,oBAAoBkC,EAAE+9C,wBAAwB38C,GAAG,oBAAoBpB,EAAE49C,kCAAkC,oBAAoB59C,EAAE29C,4BAC1d9+C,IAAIE,GAAGQ,IAAItB,IAAIy/C,GAAG1+C,EAAEgB,EAAEjB,EAAEd,GAAGm3C,IAAG,EAAG,IAAI74C,EAAEyC,EAAEg8B,cAAch7B,EAAEw9C,MAAMjhD,EAAE+5C,GAAGt3C,EAAED,EAAEiB,EAAErE,GAAG4D,EAAEP,EAAEg8B,cAAcn8B,IAAIE,GAAGxC,IAAIgD,GAAGmwC,GAAGpU,SAAS8Z,IAAI,oBAAoBt3C,IAAI8+C,GAAG59C,EAAEpB,EAAEE,EAAEiB,GAAGQ,EAAEP,EAAEg8B,gBAAgBn8B,EAAEu2C,IAAI+H,GAAGn+C,EAAEpB,EAAEiB,EAAEE,EAAExC,EAAEgD,EAAEtB,KAAKmD,GAAG,oBAAoBpB,EAAEg+C,2BAA2B,oBAAoBh+C,EAAEi+C,qBAAqB,oBAAoBj+C,EAAEi+C,oBAAoBj+C,EAAEi+C,qBAAqB,oBAAoBj+C,EAAEg+C,2BAA2Bh+C,EAAEg+C,6BAA6B,oBAAoBh+C,EAAEk+C,oBAAoBl/C,EAAE87B,OAAO,WAClf,oBAAoB96B,EAAEk+C,oBAAoBl/C,EAAE87B,OAAO,SAAS97B,EAAE2zC,cAAc5zC,EAAEC,EAAEg8B,cAAcz7B,GAAGS,EAAE0qB,MAAM3rB,EAAEiB,EAAEw9C,MAAMj+C,EAAES,EAAE60C,QAAQ52C,EAAEc,EAAEF,IAAI,oBAAoBmB,EAAEk+C,oBAAoBl/C,EAAE87B,OAAO,SAAS/7B,GAAE,EAAG,KAAK,CAACiB,EAAEhB,EAAEu6B,UAAUsc,GAAGp4C,EAAEuB,GAAGH,EAAEG,EAAE2zC,cAAc10C,EAAEe,EAAEyM,OAAOzM,EAAEgzC,YAAYnzC,EAAE69C,GAAG19C,EAAEyM,KAAK5M,GAAGmB,EAAE0qB,MAAMzsB,EAAEmD,EAAEpC,EAAEmzC,aAAa51C,EAAEyD,EAAE60C,QAAwB,kBAAhBt1C,EAAE3B,EAAE2/C,cAAiC,OAAOh+C,EAAEA,EAAEq1C,GAAGr1C,GAAyBA,EAAEqwC,GAAG5wC,EAA1BO,EAAEywC,GAAGpyC,GAAG+xC,GAAG/rC,GAAE03B,SAAmB,IAAIp8B,EAAEtB,EAAEkgD,0BAA0BhgD,EAAE,oBAAoBoB,GAAG,oBAAoBc,EAAE+9C,0BAC9e,oBAAoB/9C,EAAE49C,kCAAkC,oBAAoB59C,EAAE29C,4BAA4B9+C,IAAIuC,GAAG7E,IAAIgD,IAAIm+C,GAAG1+C,EAAEgB,EAAEjB,EAAEQ,GAAG61C,IAAG,EAAG74C,EAAEyC,EAAEg8B,cAAch7B,EAAEw9C,MAAMjhD,EAAE+5C,GAAGt3C,EAAED,EAAEiB,EAAErE,GAAG,IAAIM,EAAE+C,EAAEg8B,cAAcn8B,IAAIuC,GAAG7E,IAAIN,GAAGyzC,GAAGpU,SAAS8Z,IAAI,oBAAoBl2C,IAAI09C,GAAG59C,EAAEpB,EAAEsB,EAAEH,GAAG9C,EAAE+C,EAAEg8B,gBAAgB/8B,EAAEm3C,IAAI+H,GAAGn+C,EAAEpB,EAAEK,EAAEc,EAAExC,EAAEN,EAAEsD,KAAI,IAAKzB,GAAG,oBAAoBkC,EAAEugD,4BAA4B,oBAAoBvgD,EAAEwgD,sBAAsB,oBAAoBxgD,EAAEwgD,qBAAqBxgD,EAAEwgD,oBAAoBzhD,EAAE9C,EAAEsD,GAAG,oBAAoBS,EAAEugD,4BAC5fvgD,EAAEugD,2BAA2BxhD,EAAE9C,EAAEsD,IAAI,oBAAoBS,EAAEygD,qBAAqBzhD,EAAE87B,OAAO,GAAG,oBAAoB96B,EAAE+9C,0BAA0B/+C,EAAE87B,OAAO,QAAQ,oBAAoB96B,EAAEygD,oBAAoB5hD,IAAIpB,EAAEk1C,eAAep2C,IAAIkB,EAAEu9B,gBAAgBh8B,EAAE87B,OAAO,GAAG,oBAAoB96B,EAAE+9C,yBAAyBl/C,IAAIpB,EAAEk1C,eAAep2C,IAAIkB,EAAEu9B,gBAAgBh8B,EAAE87B,OAAO,MAAM97B,EAAE2zC,cAAc5zC,EAAEC,EAAEg8B,cAAc/+B,GAAG+D,EAAE0qB,MAAM3rB,EAAEiB,EAAEw9C,MAAMvhD,EAAE+D,EAAE60C,QAAQt1C,EAAER,EAAEd,IAAI,oBAAoB+B,EAAEygD,oBAAoB5hD,IAAIpB,EAAEk1C,eAAep2C,IACjfkB,EAAEu9B,gBAAgBh8B,EAAE87B,OAAO,GAAG,oBAAoB96B,EAAE+9C,yBAAyBl/C,IAAIpB,EAAEk1C,eAAep2C,IAAIkB,EAAEu9B,gBAAgBh8B,EAAE87B,OAAO,MAAM/7B,GAAE,EAAG,CAAC,OAAO2hD,GAAGjjD,EAAEuB,EAAEpB,EAAEmB,EAAE/B,EAAErB,EAAE,CACnK,SAAS+kD,GAAGjjD,EAAEuB,EAAEpB,EAAEmB,EAAEpD,EAAEqB,GAAGojD,GAAG3iD,EAAEuB,GAAG,IAAIgB,EAAE,KAAa,IAARhB,EAAE87B,OAAW,IAAI/7B,IAAIiB,EAAE,OAAOrE,GAAG60C,GAAGxxC,EAAEpB,GAAE,GAAI4hD,GAAG/hD,EAAEuB,EAAEhC,GAAG+B,EAAEC,EAAEu6B,UAAU6lB,GAAG9jB,QAAQt8B,EAAE,IAAIH,EAAEmB,GAAG,oBAAoBpC,EAAE+gD,yBAAyB,KAAK5/C,EAAE2xB,SAAwI,OAA/H1xB,EAAE87B,OAAO,EAAE,OAAOr9B,GAAGuC,GAAGhB,EAAEo8B,MAAMyY,GAAG70C,EAAEvB,EAAE29B,MAAM,KAAKp+B,GAAGgC,EAAEo8B,MAAMyY,GAAG70C,EAAE,KAAKH,EAAE7B,IAAIsiD,GAAG7hD,EAAEuB,EAAEH,EAAE7B,GAAGgC,EAAEg8B,cAAcj8B,EAAEy+C,MAAM7hD,GAAG60C,GAAGxxC,EAAEpB,GAAE,GAAWoB,EAAEo8B,KAAK,CAAC,SAASulB,GAAGljD,GAAG,IAAIuB,EAAEvB,EAAE87B,UAAUv6B,EAAE4hD,eAAezQ,GAAG1yC,EAAEuB,EAAE4hD,eAAe5hD,EAAE4hD,iBAAiB5hD,EAAE61C,SAAS71C,EAAE61C,SAAS1E,GAAG1yC,EAAEuB,EAAE61C,SAAQ,GAAIiC,GAAGr5C,EAAEuB,EAAEihC,cAAc,CAC5e,SAAS4gB,GAAGpjD,EAAEuB,EAAEpB,EAAEmB,EAAEpD,GAAuC,OAApCk3C,KAAKC,GAAGn3C,GAAGqD,EAAE87B,OAAO,IAAIwkB,GAAG7hD,EAAEuB,EAAEpB,EAAEmB,GAAUC,EAAEo8B,KAAK,CAAC,IAaqL0lB,GAAGC,GAAGC,GAAGC,GAb1LC,GAAG,CAACjmB,WAAW,KAAKoX,YAAY,KAAKC,UAAU,GAAG,SAAS6O,GAAG1jD,GAAG,MAAM,CAACsiD,UAAUtiD,EAAEuiD,UAAU,KAAKC,YAAY,KAAK,CAClM,SAASmB,GAAG3jD,EAAEuB,EAAEpB,GAAG,IAA0DiB,EAAtDE,EAAEC,EAAEmzC,aAAax2C,EAAE0G,GAAEi5B,QAAQt+B,GAAE,EAAGgD,EAAE,KAAa,IAARhB,EAAE87B,OAAqJ,IAAvIj8B,EAAEmB,KAAKnB,GAAE,OAAOpB,GAAG,OAAOA,EAAEu9B,gBAAiB,KAAO,EAAFr/B,IAASkD,GAAE7B,GAAE,EAAGgC,EAAE87B,QAAQ,KAAY,OAAOr9B,GAAG,OAAOA,EAAEu9B,gBAAcr/B,GAAG,GAAE+H,GAAErB,GAAI,EAAF1G,GAAQ,OAAO8B,EAA2B,OAAxB+0C,GAAGxzC,GAAwB,QAArBvB,EAAEuB,EAAEg8B,gBAA2C,QAAfv9B,EAAEA,EAAEw9B,aAA4B,KAAY,EAAPj8B,EAAE6b,MAAQ7b,EAAE01C,MAAM,EAAE,OAAOj3C,EAAEyuB,KAAKltB,EAAE01C,MAAM,EAAE11C,EAAE01C,MAAM,WAAW,OAAK10C,EAAEjB,EAAEm0B,SAASz1B,EAAEsB,EAAEsiD,SAAgBrkD,GAAG+B,EAAEC,EAAE6b,KAAK7d,EAAEgC,EAAEo8B,MAAMp7B,EAAE,CAAC6a,KAAK,SAASqY,SAASlzB,GAAG,KAAO,EAAFjB,IAAM,OAAO/B,GAAGA,EAAEu3C,WAAW,EAAEv3C,EAAEm1C,aAC7enyC,GAAGhD,EAAEskD,GAAGthD,EAAEjB,EAAE,EAAE,MAAMtB,EAAEm2C,GAAGn2C,EAAEsB,EAAEnB,EAAE,MAAMZ,EAAE69B,OAAO77B,EAAEvB,EAAEo9B,OAAO77B,EAAEhC,EAAEq+B,QAAQ59B,EAAEuB,EAAEo8B,MAAMp+B,EAAEgC,EAAEo8B,MAAMJ,cAAcmmB,GAAGvjD,GAAGoB,EAAEg8B,cAAckmB,GAAGzjD,GAAG8jD,GAAGviD,EAAEgB,IAAqB,GAAG,QAArBrE,EAAE8B,EAAEu9B,gBAA2C,QAAfn8B,EAAElD,EAAEs/B,YAAqB,OAGpM,SAAYx9B,EAAEuB,EAAEpB,EAAEmB,EAAEpD,EAAEqB,EAAEgD,GAAG,GAAGpC,EAAG,OAAW,IAARoB,EAAE87B,OAAiB97B,EAAE87B,QAAQ,IAAwB0mB,GAAG/jD,EAAEuB,EAAEgB,EAA3BjB,EAAEq/C,GAAGj/C,MAAMF,EAAE,SAAsB,OAAOD,EAAEg8B,eAAqBh8B,EAAEo8B,MAAM39B,EAAE29B,MAAMp8B,EAAE87B,OAAO,IAAI,OAAK99B,EAAE+B,EAAEsiD,SAAS1lD,EAAEqD,EAAE6b,KAAK9b,EAAEuiD,GAAG,CAACzmC,KAAK,UAAUqY,SAASn0B,EAAEm0B,UAAUv3B,EAAE,EAAE,OAAMqB,EAAE42C,GAAG52C,EAAErB,EAAEqE,EAAE,OAAQ86B,OAAO,EAAE/7B,EAAE87B,OAAO77B,EAAEhC,EAAE69B,OAAO77B,EAAED,EAAEs8B,QAAQr+B,EAAEgC,EAAEo8B,MAAMr8B,EAAE,KAAY,EAAPC,EAAE6b,OAASg5B,GAAG70C,EAAEvB,EAAE29B,MAAM,KAAKp7B,GAAGhB,EAAEo8B,MAAMJ,cAAcmmB,GAAGnhD,GAAGhB,EAAEg8B,cAAckmB,GAAUlkD,GAAE,GAAG,KAAY,EAAPgC,EAAE6b,MAAQ,OAAO2mC,GAAG/jD,EAAEuB,EAAEgB,EAAE,MAAM,GAAG,OAAOrE,EAAEuwB,KAAK,CAChd,GADidntB,EAAEpD,EAAEiuC,aAAajuC,EAAEiuC,YAAY6X,QAC3e,IAAI5iD,EAAEE,EAAE2iD,KAA0C,OAArC3iD,EAAEF,EAA0C2iD,GAAG/jD,EAAEuB,EAAEgB,EAA/BjB,EAAEq/C,GAAlBphD,EAAEmC,MAAMF,EAAE,MAAaF,OAAE,GAA0B,CAAwB,GAAvBF,EAAE,KAAKmB,EAAEvC,EAAE82C,YAAeI,IAAI91C,EAAE,CAAK,GAAG,QAAPE,EAAE0E,IAAc,CAAC,OAAOzD,GAAGA,GAAG,KAAK,EAAErE,EAAE,EAAE,MAAM,KAAK,GAAGA,EAAE,EAAE,MAAM,KAAK,GAAG,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,OAAO,KAAK,OAAO,KAAK,OAAO,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,SAAS,KAAK,SAAS,KAAK,SAASA,EAAE,GAAG,MAAM,KAAK,UAAUA,EAAE,UAAU,MAAM,QAAQA,EAAE,EAChd,KADkdA,EAAE,KAAKA,GAAGoD,EAAE4+B,eAAe39B,IAAI,EAAErE,IAC5eA,IAAIqB,EAAEs1C,YAAYt1C,EAAEs1C,UAAU32C,EAAEw5C,GAAG13C,EAAE9B,GAAGo+C,GAAGh7C,EAAEtB,EAAE9B,GAAG,GAAG,CAA0B,OAAzBgmD,KAAgCH,GAAG/jD,EAAEuB,EAAEgB,EAAlCjB,EAAEq/C,GAAGj/C,MAAMF,EAAE,OAAyB,CAAC,MAAG,OAAOtD,EAAEuwB,MAAYltB,EAAE87B,OAAO,IAAI97B,EAAEo8B,MAAM39B,EAAE29B,MAAMp8B,EAAE4iD,GAAGhjD,KAAK,KAAKnB,GAAG9B,EAAEkmD,YAAY7iD,EAAE,OAAKvB,EAAET,EAAEq1C,YAAYT,GAAG9C,GAAGnzC,EAAEiuC,aAAa+H,GAAG3yC,EAAEqC,IAAE,EAAGwwC,GAAG,KAAK,OAAOp0C,IAAIyzC,GAAGC,MAAME,GAAGH,GAAGC,MAAMG,GAAGJ,GAAGC,MAAMC,GAAGC,GAAG5zC,EAAEwI,GAAGqrC,GAAG7zC,EAAE20C,SAAShB,GAAGpyC,GAAGA,EAAEuiD,GAAGviD,EAAED,EAAEm0B,UAAUl0B,EAAE87B,OAAO,KAAY97B,EAAC,CALrK8iD,CAAGrkD,EAAEuB,EAAEgB,EAAEjB,EAAEF,EAAElD,EAAEiC,GAAG,GAAGZ,EAAE,CAACA,EAAE+B,EAAEsiD,SAASrhD,EAAEhB,EAAE6b,KAAehc,GAAVlD,EAAE8B,EAAE29B,OAAUC,QAAQ,IAAI97B,EAAE,CAACsb,KAAK,SAASqY,SAASn0B,EAAEm0B,UAChF,OAD0F,KAAO,EAAFlzB,IAAMhB,EAAEo8B,QAAQz/B,IAAGoD,EAAEC,EAAEo8B,OAAQmZ,WAAW,EAAEx1C,EAAEozC,aAAa5yC,EAAEP,EAAEizC,UAAU,OAAOlzC,EAAEw0C,GAAG53C,EAAE4D,IAAKwiD,aAA4B,SAAfpmD,EAAEomD,aAAuB,OAAOljD,EAAE7B,EAAEu2C,GAAG10C,EAAE7B,IAAIA,EAAE42C,GAAG52C,EAAEgD,EAAEpC,EAAE,OAAQk9B,OAAO,EAAG99B,EAAE69B,OACnf77B,EAAED,EAAE87B,OAAO77B,EAAED,EAAEs8B,QAAQr+B,EAAEgC,EAAEo8B,MAAMr8B,EAAEA,EAAE/B,EAAEA,EAAEgC,EAAEo8B,MAA8Bp7B,EAAE,QAA1BA,EAAEvC,EAAE29B,MAAMJ,eAAyBmmB,GAAGvjD,GAAG,CAACmiD,UAAU//C,EAAE+/C,UAAUniD,EAAEoiD,UAAU,KAAKC,YAAYjgD,EAAEigD,aAAajjD,EAAEg+B,cAAch7B,EAAEhD,EAAEu3C,WAAW92C,EAAE82C,YAAY32C,EAAEoB,EAAEg8B,cAAckmB,GAAUniD,CAAC,CAAoO,OAAzNtB,GAAVT,EAAES,EAAE29B,OAAUC,QAAQt8B,EAAEw0C,GAAGv2C,EAAE,CAAC6d,KAAK,UAAUqY,SAASn0B,EAAEm0B,WAAW,KAAY,EAAPl0B,EAAE6b,QAAU9b,EAAE21C,MAAM92C,GAAGmB,EAAE87B,OAAO77B,EAAED,EAAEs8B,QAAQ,KAAK,OAAO59B,IAAkB,QAAdG,EAAEoB,EAAEizC,YAAoBjzC,EAAEizC,UAAU,CAACx0C,GAAGuB,EAAE87B,OAAO,IAAIl9B,EAAE4B,KAAK/B,IAAIuB,EAAEo8B,MAAMr8B,EAAEC,EAAEg8B,cAAc,KAAYj8B,CAAC,CACnd,SAASwiD,GAAG9jD,EAAEuB,GAA8D,OAA3DA,EAAEsiD,GAAG,CAACzmC,KAAK,UAAUqY,SAASl0B,GAAGvB,EAAEod,KAAK,EAAE,OAAQggB,OAAOp9B,EAASA,EAAE29B,MAAMp8B,CAAC,CAAC,SAASwiD,GAAG/jD,EAAEuB,EAAEpB,EAAEmB,GAAwG,OAArG,OAAOA,GAAG+zC,GAAG/zC,GAAG80C,GAAG70C,EAAEvB,EAAE29B,MAAM,KAAKx9B,IAAGH,EAAE8jD,GAAGviD,EAAEA,EAAEmzC,aAAajf,WAAY4H,OAAO,EAAE97B,EAAEg8B,cAAc,KAAYv9B,CAAC,CAGkJ,SAASukD,GAAGvkD,EAAEuB,EAAEpB,GAAGH,EAAEi3C,OAAO11C,EAAE,IAAID,EAAEtB,EAAEm9B,UAAU,OAAO77B,IAAIA,EAAE21C,OAAO11C,GAAGs1C,GAAG72C,EAAEo9B,OAAO77B,EAAEpB,EAAE,CACxc,SAASqkD,GAAGxkD,EAAEuB,EAAEpB,EAAEmB,EAAEpD,GAAG,IAAIqB,EAAES,EAAEu9B,cAAc,OAAOh+B,EAAES,EAAEu9B,cAAc,CAACknB,YAAYljD,EAAEmjD,UAAU,KAAKC,mBAAmB,EAAE5rC,KAAKzX,EAAEsjD,KAAKzkD,EAAE0kD,SAAS3mD,IAAIqB,EAAEklD,YAAYljD,EAAEhC,EAAEmlD,UAAU,KAAKnlD,EAAEolD,mBAAmB,EAAEplD,EAAEwZ,KAAKzX,EAAE/B,EAAEqlD,KAAKzkD,EAAEZ,EAAEslD,SAAS3mD,EAAE,CAC3O,SAAS4mD,GAAG9kD,EAAEuB,EAAEpB,GAAG,IAAImB,EAAEC,EAAEmzC,aAAax2C,EAAEoD,EAAEq4C,YAAYp6C,EAAE+B,EAAEsjD,KAAsC,GAAjC/C,GAAG7hD,EAAEuB,EAAED,EAAEm0B,SAASt1B,GAAkB,KAAO,GAAtBmB,EAAEsD,GAAEi5B,UAAqBv8B,EAAI,EAAFA,EAAI,EAAEC,EAAE87B,OAAO,QAAQ,CAAC,GAAG,OAAOr9B,GAAG,KAAa,IAARA,EAAEq9B,OAAWr9B,EAAE,IAAIA,EAAEuB,EAAEo8B,MAAM,OAAO39B,GAAG,CAAC,GAAG,KAAKA,EAAEgzB,IAAI,OAAOhzB,EAAEu9B,eAAegnB,GAAGvkD,EAAEG,EAAEoB,QAAQ,GAAG,KAAKvB,EAAEgzB,IAAIuxB,GAAGvkD,EAAEG,EAAEoB,QAAQ,GAAG,OAAOvB,EAAE29B,MAAM,CAAC39B,EAAE29B,MAAMP,OAAOp9B,EAAEA,EAAEA,EAAE29B,MAAM,QAAQ,CAAC,GAAG39B,IAAIuB,EAAE,MAAMvB,EAAE,KAAK,OAAOA,EAAE49B,SAAS,CAAC,GAAG,OAAO59B,EAAEo9B,QAAQp9B,EAAEo9B,SAAS77B,EAAE,MAAMvB,EAAEA,EAAEA,EAAEo9B,MAAM,CAACp9B,EAAE49B,QAAQR,OAAOp9B,EAAEo9B,OAAOp9B,EAAEA,EAAE49B,OAAO,CAACt8B,GAAG,CAAC,CAAQ,GAAP2E,GAAErB,GAAEtD,GAAM,KAAY,EAAPC,EAAE6b,MAAQ7b,EAAEg8B,cAC/e,UAAU,OAAOr/B,GAAG,IAAK,WAAqB,IAAViC,EAAEoB,EAAEo8B,MAAUz/B,EAAE,KAAK,OAAOiC,GAAiB,QAAdH,EAAEG,EAAEg9B,YAAoB,OAAOuc,GAAG15C,KAAK9B,EAAEiC,GAAGA,EAAEA,EAAEy9B,QAAY,QAAJz9B,EAAEjC,IAAYA,EAAEqD,EAAEo8B,MAAMp8B,EAAEo8B,MAAM,OAAOz/B,EAAEiC,EAAEy9B,QAAQz9B,EAAEy9B,QAAQ,MAAM4mB,GAAGjjD,GAAE,EAAGrD,EAAEiC,EAAEZ,GAAG,MAAM,IAAK,YAA6B,IAAjBY,EAAE,KAAKjC,EAAEqD,EAAEo8B,MAAUp8B,EAAEo8B,MAAM,KAAK,OAAOz/B,GAAG,CAAe,GAAG,QAAjB8B,EAAE9B,EAAEi/B,YAAuB,OAAOuc,GAAG15C,GAAG,CAACuB,EAAEo8B,MAAMz/B,EAAE,KAAK,CAAC8B,EAAE9B,EAAE0/B,QAAQ1/B,EAAE0/B,QAAQz9B,EAAEA,EAAEjC,EAAEA,EAAE8B,CAAC,CAACwkD,GAAGjjD,GAAE,EAAGpB,EAAE,KAAKZ,GAAG,MAAM,IAAK,WAAWilD,GAAGjjD,GAAE,EAAG,KAAK,UAAK,GAAQ,MAAM,QAAQA,EAAEg8B,cAAc,KAAK,OAAOh8B,EAAEo8B,KAAK,CAC7d,SAASklB,GAAG7iD,EAAEuB,GAAG,KAAY,EAAPA,EAAE6b,OAAS,OAAOpd,IAAIA,EAAEm9B,UAAU,KAAK57B,EAAE47B,UAAU,KAAK57B,EAAE87B,OAAO,EAAE,CAAC,SAAS0kB,GAAG/hD,EAAEuB,EAAEpB,GAAyD,GAAtD,OAAOH,IAAIuB,EAAE+pB,aAAatrB,EAAEsrB,cAAcwtB,IAAIv3C,EAAE01C,MAAS,KAAK92C,EAAEoB,EAAEu1C,YAAY,OAAO,KAAK,GAAG,OAAO92C,GAAGuB,EAAEo8B,QAAQ39B,EAAE29B,MAAM,MAAMj8B,MAAMF,EAAE,MAAM,GAAG,OAAOD,EAAEo8B,MAAM,CAA4C,IAAjCx9B,EAAE21C,GAAZ91C,EAAEuB,EAAEo8B,MAAa39B,EAAE00C,cAAcnzC,EAAEo8B,MAAMx9B,EAAMA,EAAEi9B,OAAO77B,EAAE,OAAOvB,EAAE49B,SAAS59B,EAAEA,EAAE49B,SAAQz9B,EAAEA,EAAEy9B,QAAQkY,GAAG91C,EAAEA,EAAE00C,eAAgBtX,OAAO77B,EAAEpB,EAAEy9B,QAAQ,IAAI,CAAC,OAAOr8B,EAAEo8B,KAAK,CAO9a,SAASonB,GAAG/kD,EAAEuB,GAAG,IAAIqC,GAAE,OAAO5D,EAAE6kD,UAAU,IAAK,SAAStjD,EAAEvB,EAAE4kD,KAAK,IAAI,IAAIzkD,EAAE,KAAK,OAAOoB,GAAG,OAAOA,EAAE47B,YAAYh9B,EAAEoB,GAAGA,EAAEA,EAAEq8B,QAAQ,OAAOz9B,EAAEH,EAAE4kD,KAAK,KAAKzkD,EAAEy9B,QAAQ,KAAK,MAAM,IAAK,YAAYz9B,EAAEH,EAAE4kD,KAAK,IAAI,IAAItjD,EAAE,KAAK,OAAOnB,GAAG,OAAOA,EAAEg9B,YAAY77B,EAAEnB,GAAGA,EAAEA,EAAEy9B,QAAQ,OAAOt8B,EAAEC,GAAG,OAAOvB,EAAE4kD,KAAK5kD,EAAE4kD,KAAK,KAAK5kD,EAAE4kD,KAAKhnB,QAAQ,KAAKt8B,EAAEs8B,QAAQ,KAAK,CAC5U,SAAS76B,GAAE/C,GAAG,IAAIuB,EAAE,OAAOvB,EAAEm9B,WAAWn9B,EAAEm9B,UAAUQ,QAAQ39B,EAAE29B,MAAMx9B,EAAE,EAAEmB,EAAE,EAAE,GAAGC,EAAE,IAAI,IAAIrD,EAAE8B,EAAE29B,MAAM,OAAOz/B,GAAGiC,GAAGjC,EAAE+4C,MAAM/4C,EAAE44C,WAAWx1C,GAAkB,SAAfpD,EAAEomD,aAAsBhjD,GAAW,SAARpD,EAAEm/B,MAAen/B,EAAEk/B,OAAOp9B,EAAE9B,EAAEA,EAAE0/B,aAAa,IAAI1/B,EAAE8B,EAAE29B,MAAM,OAAOz/B,GAAGiC,GAAGjC,EAAE+4C,MAAM/4C,EAAE44C,WAAWx1C,GAAGpD,EAAEomD,aAAahjD,GAAGpD,EAAEm/B,MAAMn/B,EAAEk/B,OAAOp9B,EAAE9B,EAAEA,EAAE0/B,QAAyC,OAAjC59B,EAAEskD,cAAchjD,EAAEtB,EAAE82C,WAAW32C,EAASoB,CAAC,CAC7V,SAASyjD,GAAGhlD,EAAEuB,EAAEpB,GAAG,IAAImB,EAAEC,EAAEmzC,aAAmB,OAANT,GAAG1yC,GAAUA,EAAEyxB,KAAK,KAAK,EAAE,KAAK,GAAG,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,OAAOjwB,GAAExB,GAAG,KAAK,KAAK,EAUtD,KAAK,GAAG,OAAOgxC,GAAGhxC,EAAEyM,OAAOykC,KAAK1vC,GAAExB,GAAG,KAVqD,KAAK,EAA2Q,OAAzQD,EAAEC,EAAEu6B,UAAUyd,KAAK32C,GAAEqvC,IAAIrvC,GAAEuD,IAAG0zC,KAAKv4C,EAAE6hD,iBAAiB7hD,EAAE81C,QAAQ91C,EAAE6hD,eAAe7hD,EAAE6hD,eAAe,MAAS,OAAOnjD,GAAG,OAAOA,EAAE29B,QAAMsX,GAAG1zC,GAAGA,EAAE87B,OAAO,EAAE,OAAOr9B,GAAGA,EAAEu9B,cAAcgF,cAAc,KAAa,IAARhhC,EAAE87B,SAAa97B,EAAE87B,OAAO,KAAK,OAAO+W,KAAK6Q,GAAG7Q,IAAIA,GAAG,QAAOkP,GAAGtjD,EAAEuB,GAAGwB,GAAExB,GAAU,KAAK,KAAK,EAAEk4C,GAAGl4C,GAAG,IAAIrD,EAAEk7C,GAAGD,GAAGtb,SAC7e,GAAT19B,EAAEoB,EAAEyM,KAAQ,OAAOhO,GAAG,MAAMuB,EAAEu6B,UAAUynB,GAAGvjD,EAAEuB,EAAEpB,EAAEmB,EAAEpD,GAAG8B,EAAEyI,MAAMlH,EAAEkH,MAAMlH,EAAE87B,OAAO,IAAI97B,EAAE87B,OAAO,aAAa,CAAC,IAAI/7B,EAAE,CAAC,GAAG,OAAOC,EAAEu6B,UAAU,MAAMp6B,MAAMF,EAAE,MAAW,OAALuB,GAAExB,GAAU,IAAI,CAAkB,GAAjBvB,EAAEo5C,GAAGH,GAAGpb,SAAYoX,GAAG1zC,GAAG,CAACD,EAAEC,EAAEu6B,UAAU37B,EAAEoB,EAAEyM,KAAK,IAAIzO,EAAEgC,EAAE2zC,cAA+C,OAAjC5zC,EAAEmwC,IAAIlwC,EAAED,EAAEowC,IAAInyC,EAAES,EAAE,KAAY,EAAPuB,EAAE6b,MAAejd,GAAG,IAAK,SAASsD,GAAE,SAASnC,GAAGmC,GAAE,QAAQnC,GAAG,MAAM,IAAK,SAAS,IAAK,SAAS,IAAK,QAAQmC,GAAE,OAAOnC,GAAG,MAAM,IAAK,QAAQ,IAAK,QAAQ,IAAIpD,EAAE,EAAEA,EAAE2wC,GAAG7vC,OAAOd,IAAIuF,GAAEorC,GAAG3wC,GAAGoD,GAAG,MAAM,IAAK,SAASmC,GAAE,QAAQnC,GAAG,MAAM,IAAK,MAAM,IAAK,QAAQ,IAAK,OAAOmC,GAAE,QACnhBnC,GAAGmC,GAAE,OAAOnC,GAAG,MAAM,IAAK,UAAUmC,GAAE,SAASnC,GAAG,MAAM,IAAK,QAAQozB,EAAGpzB,EAAE/B,GAAGkE,GAAE,UAAUnC,GAAG,MAAM,IAAK,SAASA,EAAEkzB,cAAc,CAAC0wB,cAAc3lD,EAAE4lD,UAAU1hD,GAAE,UAAUnC,GAAG,MAAM,IAAK,WAAWo0B,GAAGp0B,EAAE/B,GAAGkE,GAAE,UAAUnC,GAAkB,IAAI,IAAIiB,KAAvB04B,GAAG96B,EAAEZ,GAAGrB,EAAE,KAAkBqB,EAAE,GAAGA,EAAEb,eAAe6D,GAAG,CAAC,IAAInB,EAAE7B,EAAEgD,GAAG,aAAaA,EAAE,kBAAkBnB,EAAEE,EAAEu0B,cAAcz0B,KAAI,IAAK7B,EAAE6lD,0BAA0B3U,GAAGnvC,EAAEu0B,YAAYz0B,EAAEpB,GAAG9B,EAAE,CAAC,WAAWkD,IAAI,kBAAkBA,GAAGE,EAAEu0B,cAAc,GAAGz0B,KAAI,IAAK7B,EAAE6lD,0BAA0B3U,GAAGnvC,EAAEu0B,YAC1ez0B,EAAEpB,GAAG9B,EAAE,CAAC,WAAW,GAAGkD,IAAIuuB,EAAGjxB,eAAe6D,IAAI,MAAMnB,GAAG,aAAamB,GAAGkB,GAAE,SAASnC,EAAE,CAAC,OAAOnB,GAAG,IAAK,QAAQwzB,EAAGryB,GAAGoO,EAAGpO,EAAE/B,GAAE,GAAI,MAAM,IAAK,WAAWo0B,EAAGryB,GAAGs0B,GAAGt0B,GAAG,MAAM,IAAK,SAAS,IAAK,SAAS,MAAM,QAAQ,oBAAoB/B,EAAE8lD,UAAU/jD,EAAEgkD,QAAQ5U,IAAIpvC,EAAEpD,EAAEqD,EAAEs2C,YAAYv2C,EAAE,OAAOA,IAAIC,EAAE87B,OAAO,EAAE,KAAK,CAAC96B,EAAE,IAAIrE,EAAE04B,SAAS14B,EAAEA,EAAE82B,cAAc,iCAAiCh1B,IAAIA,EAAE81B,GAAG31B,IAAI,iCAAiCH,EAAE,WAAWG,IAAGH,EAAEuC,EAAEytB,cAAc,QAASmG,UAAU,qBAAuBn2B,EAAEA,EAAEs2B,YAAYt2B,EAAEq2B,aAC/f,kBAAkB/0B,EAAE65B,GAAGn7B,EAAEuC,EAAEytB,cAAc7vB,EAAE,CAACg7B,GAAG75B,EAAE65B,MAAMn7B,EAAEuC,EAAEytB,cAAc7vB,GAAG,WAAWA,IAAIoC,EAAEvC,EAAEsB,EAAE6jD,SAAS5iD,EAAE4iD,UAAS,EAAG7jD,EAAEkoB,OAAOjnB,EAAEinB,KAAKloB,EAAEkoB,QAAQxpB,EAAEuC,EAAEgjD,gBAAgBvlD,EAAEG,GAAGH,EAAEyxC,IAAIlwC,EAAEvB,EAAE0xC,IAAIpwC,EAAE+hD,GAAGrjD,EAAEuB,GAAE,GAAG,GAAIA,EAAEu6B,UAAU97B,EAAEA,EAAE,CAAW,OAAVuC,EAAE24B,GAAG/6B,EAAEmB,GAAUnB,GAAG,IAAK,SAASsD,GAAE,SAASzD,GAAGyD,GAAE,QAAQzD,GAAG9B,EAAEoD,EAAE,MAAM,IAAK,SAAS,IAAK,SAAS,IAAK,QAAQmC,GAAE,OAAOzD,GAAG9B,EAAEoD,EAAE,MAAM,IAAK,QAAQ,IAAK,QAAQ,IAAIpD,EAAE,EAAEA,EAAE2wC,GAAG7vC,OAAOd,IAAIuF,GAAEorC,GAAG3wC,GAAG8B,GAAG9B,EAAEoD,EAAE,MAAM,IAAK,SAASmC,GAAE,QAAQzD,GAAG9B,EAAEoD,EAAE,MAAM,IAAK,MAAM,IAAK,QAAQ,IAAK,OAAOmC,GAAE,QAClfzD,GAAGyD,GAAE,OAAOzD,GAAG9B,EAAEoD,EAAE,MAAM,IAAK,UAAUmC,GAAE,SAASzD,GAAG9B,EAAEoD,EAAE,MAAM,IAAK,QAAQozB,EAAG10B,EAAEsB,GAAGpD,EAAEm2B,EAAGr0B,EAAEsB,GAAGmC,GAAE,UAAUzD,GAAG,MAAM,IAAK,SAAiL,QAAQ9B,EAAEoD,QAAxK,IAAK,SAAStB,EAAEw0B,cAAc,CAAC0wB,cAAc5jD,EAAE6jD,UAAUjnD,EAAEmF,EAAE,CAAC,EAAE/B,EAAE,CAACR,WAAM,IAAS2C,GAAE,UAAUzD,GAAG,MAAM,IAAK,WAAW01B,GAAG11B,EAAEsB,GAAGpD,EAAEq3B,GAAGv1B,EAAEsB,GAAGmC,GAAE,UAAUzD,GAAiC,IAAIT,KAAhB07B,GAAG96B,EAAEjC,GAAGkD,EAAElD,EAAa,GAAGkD,EAAE1C,eAAea,GAAG,CAAC,IAAIuC,EAAEV,EAAE7B,GAAG,UAAUA,EAAEq6B,GAAG55B,EAAE8B,GAAG,4BAA4BvC,EAAuB,OAApBuC,EAAEA,EAAEA,EAAEgvC,YAAO,IAAgB7a,GAAGj2B,EAAE8B,GAAI,aAAavC,EAAE,kBAAkBuC,GAAG,aAC7e3B,GAAG,KAAK2B,IAAI40B,GAAG12B,EAAE8B,GAAG,kBAAkBA,GAAG40B,GAAG12B,EAAE,GAAG8B,GAAG,mCAAmCvC,GAAG,6BAA6BA,GAAG,cAAcA,IAAIowB,EAAGjxB,eAAea,GAAG,MAAMuC,GAAG,aAAavC,GAAGkE,GAAE,SAASzD,GAAG,MAAM8B,GAAGgvB,EAAG9wB,EAAET,EAAEuC,EAAES,GAAG,CAAC,OAAOpC,GAAG,IAAK,QAAQwzB,EAAG3zB,GAAG0P,EAAG1P,EAAEsB,GAAE,GAAI,MAAM,IAAK,WAAWqyB,EAAG3zB,GAAG41B,GAAG51B,GAAG,MAAM,IAAK,SAAS,MAAMsB,EAAER,OAAOd,EAAEmxB,aAAa,QAAQ,GAAGqC,EAAGlyB,EAAER,QAAQ,MAAM,IAAK,SAASd,EAAEmlD,WAAW7jD,EAAE6jD,SAAmB,OAAV5lD,EAAE+B,EAAER,OAAco0B,GAAGl1B,IAAIsB,EAAE6jD,SAAS5lD,GAAE,GAAI,MAAM+B,EAAEizB,cAAcW,GAAGl1B,IAAIsB,EAAE6jD,SAAS7jD,EAAEizB,cAClf,GAAI,MAAM,QAAQ,oBAAoBr2B,EAAEmnD,UAAUrlD,EAAEslD,QAAQ5U,IAAI,OAAOvwC,GAAG,IAAK,SAAS,IAAK,QAAQ,IAAK,SAAS,IAAK,WAAWmB,IAAIA,EAAEkkD,UAAU,MAAMxlD,EAAE,IAAK,MAAMsB,GAAE,EAAG,MAAMtB,EAAE,QAAQsB,GAAE,EAAG,CAACA,IAAIC,EAAE87B,OAAO,EAAE,CAAC,OAAO97B,EAAEkH,MAAMlH,EAAE87B,OAAO,IAAI97B,EAAE87B,OAAO,QAAQ,CAAM,OAALt6B,GAAExB,GAAU,KAAK,KAAK,EAAE,GAAGvB,GAAG,MAAMuB,EAAEu6B,UAAU0nB,GAAGxjD,EAAEuB,EAAEvB,EAAEk1C,cAAc5zC,OAAO,CAAC,GAAG,kBAAkBA,GAAG,OAAOC,EAAEu6B,UAAU,MAAMp6B,MAAMF,EAAE,MAAsC,GAAhCrB,EAAEi5C,GAAGD,GAAGtb,SAASub,GAAGH,GAAGpb,SAAYoX,GAAG1zC,GAAG,CAAyC,GAAxCD,EAAEC,EAAEu6B,UAAU37B,EAAEoB,EAAE2zC,cAAc5zC,EAAEmwC,IAAIlwC,GAAKhC,EAAE+B,EAAEu1B,YAAY12B,IAC/e,QADofH,EACvfk0C,IAAY,OAAOl0C,EAAEgzB,KAAK,KAAK,EAAEyd,GAAGnvC,EAAEu1B,UAAU12B,EAAE,KAAY,EAAPH,EAAEod,OAAS,MAAM,KAAK,GAAE,IAAKpd,EAAEk1C,cAAckQ,0BAA0B3U,GAAGnvC,EAAEu1B,UAAU12B,EAAE,KAAY,EAAPH,EAAEod,OAAS7d,IAAIgC,EAAE87B,OAAO,EAAE,MAAM/7B,GAAG,IAAInB,EAAEy2B,SAASz2B,EAAEA,EAAE60B,eAAeywB,eAAenkD,IAAKmwC,IAAIlwC,EAAEA,EAAEu6B,UAAUx6B,CAAC,CAAM,OAALyB,GAAExB,GAAU,KAAK,KAAK,GAA0B,GAAvBqB,GAAEgC,IAAGtD,EAAEC,EAAEg8B,cAAiB,OAAOv9B,GAAG,OAAOA,EAAEu9B,eAAe,OAAOv9B,EAAEu9B,cAAcC,WAAW,CAAC,GAAG55B,IAAG,OAAOuwC,IAAI,KAAY,EAAP5yC,EAAE6b,OAAS,KAAa,IAAR7b,EAAE87B,OAAW8X,KAAKC,KAAK7zC,EAAE87B,OAAO,MAAM99B,GAAE,OAAQ,GAAGA,EAAE01C,GAAG1zC,GAAG,OAAOD,GAAG,OAAOA,EAAEk8B,WAAW,CAAC,GAAG,OAC5fx9B,EAAE,CAAC,IAAIT,EAAE,MAAMmC,MAAMF,EAAE,MAAqD,KAA7BjC,EAAE,QAApBA,EAAEgC,EAAEg8B,eAAyBh+B,EAAEi+B,WAAW,MAAW,MAAM97B,MAAMF,EAAE,MAAMjC,EAAEkyC,IAAIlwC,CAAC,MAAM6zC,KAAK,KAAa,IAAR7zC,EAAE87B,SAAa97B,EAAEg8B,cAAc,MAAMh8B,EAAE87B,OAAO,EAAEt6B,GAAExB,GAAGhC,GAAE,CAAE,MAAM,OAAO60C,KAAK6Q,GAAG7Q,IAAIA,GAAG,MAAM70C,GAAE,EAAG,IAAIA,EAAE,OAAe,MAARgC,EAAE87B,MAAY97B,EAAE,IAAI,CAAC,OAAG,KAAa,IAARA,EAAE87B,QAAkB97B,EAAE01C,MAAM92C,EAAEoB,KAAED,EAAE,OAAOA,MAAO,OAAOtB,GAAG,OAAOA,EAAEu9B,gBAAgBj8B,IAAIC,EAAEo8B,MAAMN,OAAO,KAAK,KAAY,EAAP97B,EAAE6b,QAAU,OAAOpd,GAAG,KAAe,EAAV4E,GAAEi5B,SAAW,IAAIn6B,KAAIA,GAAE,GAAGwgD,OAAO,OAAO3iD,EAAEs2C,cAAct2C,EAAE87B,OAAO,GAAGt6B,GAAExB,GAAU,MAAK,KAAK,EAAE,OAAOg4C,KACrf+J,GAAGtjD,EAAEuB,GAAG,OAAOvB,GAAGwvC,GAAGjuC,EAAEu6B,UAAU0G,eAAez/B,GAAExB,GAAG,KAAK,KAAK,GAAG,OAAOo1C,GAAGp1C,EAAEyM,KAAKolB,UAAUrwB,GAAExB,GAAG,KAA+C,KAAK,GAA0B,GAAvBqB,GAAEgC,IAAwB,QAArBrF,EAAEgC,EAAEg8B,eAA0B,OAAOx6B,GAAExB,GAAG,KAAuC,GAAlCD,EAAE,KAAa,IAARC,EAAE87B,OAA4B,QAAjB96B,EAAEhD,EAAEmlD,WAAsB,GAAGpjD,EAAEyjD,GAAGxlD,GAAE,OAAQ,CAAC,GAAG,IAAImE,IAAG,OAAO1D,GAAG,KAAa,IAARA,EAAEq9B,OAAW,IAAIr9B,EAAEuB,EAAEo8B,MAAM,OAAO39B,GAAG,CAAS,GAAG,QAAXuC,EAAEm3C,GAAG15C,IAAe,CAAmG,IAAlGuB,EAAE87B,OAAO,IAAI0nB,GAAGxlD,GAAE,GAAoB,QAAhB+B,EAAEiB,EAAEs1C,eAAuBt2C,EAAEs2C,YAAYv2C,EAAEC,EAAE87B,OAAO,GAAG97B,EAAE+iD,aAAa,EAAEhjD,EAAEnB,EAAMA,EAAEoB,EAAEo8B,MAAM,OAAOx9B,GAAOH,EAAEsB,GAAN/B,EAAEY,GAAQk9B,OAAO,SAC/d,QAAd96B,EAAEhD,EAAE49B,YAAoB59B,EAAEu3C,WAAW,EAAEv3C,EAAE03C,MAAMj3C,EAAET,EAAEo+B,MAAM,KAAKp+B,EAAE+kD,aAAa,EAAE/kD,EAAE21C,cAAc,KAAK31C,EAAEg+B,cAAc,KAAKh+B,EAAEs4C,YAAY,KAAKt4C,EAAE+rB,aAAa,KAAK/rB,EAAEu8B,UAAU,OAAOv8B,EAAEu3C,WAAWv0C,EAAEu0C,WAAWv3C,EAAE03C,MAAM10C,EAAE00C,MAAM13C,EAAEo+B,MAAMp7B,EAAEo7B,MAAMp+B,EAAE+kD,aAAa,EAAE/kD,EAAEi1C,UAAU,KAAKj1C,EAAE21C,cAAc3yC,EAAE2yC,cAAc31C,EAAEg+B,cAAch7B,EAAEg7B,cAAch+B,EAAEs4C,YAAYt1C,EAAEs1C,YAAYt4C,EAAEyO,KAAKzL,EAAEyL,KAAKhO,EAAEuC,EAAE+oB,aAAa/rB,EAAE+rB,aAAa,OAAOtrB,EAAE,KAAK,CAACi3C,MAAMj3C,EAAEi3C,MAAMD,aAAah3C,EAAEg3C,eAAe72C,EAAEA,EAAEy9B,QAA2B,OAAnB33B,GAAErB,GAAY,EAAVA,GAAEi5B,QAAU,GAAUt8B,EAAEo8B,KAAK,CAAC39B,EAClgBA,EAAE49B,OAAO,CAAC,OAAOr+B,EAAEqlD,MAAM7gD,KAAI2hD,KAAKnkD,EAAE87B,OAAO,IAAI/7B,GAAE,EAAGyjD,GAAGxlD,GAAE,GAAIgC,EAAE01C,MAAM,QAAQ,KAAK,CAAC,IAAI31C,EAAE,GAAW,QAARtB,EAAE05C,GAAGn3C,KAAa,GAAGhB,EAAE87B,OAAO,IAAI/7B,GAAE,EAAmB,QAAhBnB,EAAEH,EAAE63C,eAAuBt2C,EAAEs2C,YAAY13C,EAAEoB,EAAE87B,OAAO,GAAG0nB,GAAGxlD,GAAE,GAAI,OAAOA,EAAEqlD,MAAM,WAAWrlD,EAAEslD,WAAWtiD,EAAE46B,YAAYv5B,GAAE,OAAOb,GAAExB,GAAG,UAAU,EAAEwC,KAAIxE,EAAEolD,mBAAmBe,IAAI,aAAavlD,IAAIoB,EAAE87B,OAAO,IAAI/7B,GAAE,EAAGyjD,GAAGxlD,GAAE,GAAIgC,EAAE01C,MAAM,SAAS13C,EAAEklD,aAAaliD,EAAEq7B,QAAQr8B,EAAEo8B,MAAMp8B,EAAEo8B,MAAMp7B,IAAa,QAATpC,EAAEZ,EAAEwZ,MAAc5Y,EAAEy9B,QAAQr7B,EAAEhB,EAAEo8B,MAAMp7B,EAAEhD,EAAEwZ,KAAKxW,EAAE,CAAC,OAAG,OAAOhD,EAAEqlD,MAAYrjD,EAAEhC,EAAEqlD,KAAKrlD,EAAEmlD,UAC9enjD,EAAEhC,EAAEqlD,KAAKrjD,EAAEq8B,QAAQr+B,EAAEolD,mBAAmB5gD,KAAIxC,EAAEq8B,QAAQ,KAAKz9B,EAAEyE,GAAEi5B,QAAQ53B,GAAErB,GAAEtD,EAAI,EAAFnB,EAAI,EAAI,EAAFA,GAAKoB,IAAEwB,GAAExB,GAAU,MAAK,KAAK,GAAG,KAAK,GAAG,OAAOokD,KAAKrkD,EAAE,OAAOC,EAAEg8B,cAAc,OAAOv9B,GAAG,OAAOA,EAAEu9B,gBAAgBj8B,IAAIC,EAAE87B,OAAO,MAAM/7B,GAAG,KAAY,EAAPC,EAAE6b,MAAQ,KAAQ,WAAHslC,MAAiB3/C,GAAExB,GAAkB,EAAfA,EAAE+iD,eAAiB/iD,EAAE87B,OAAO,OAAOt6B,GAAExB,GAAG,KAAK,KAAK,GAAe,KAAK,GAAG,OAAO,KAAK,MAAMG,MAAMF,EAAE,IAAID,EAAEyxB,KAAM,CAClX,SAAS4yB,GAAG5lD,EAAEuB,GAAS,OAAN0yC,GAAG1yC,GAAUA,EAAEyxB,KAAK,KAAK,EAAE,OAAOuf,GAAGhxC,EAAEyM,OAAOykC,KAAiB,OAAZzyC,EAAEuB,EAAE87B,QAAe97B,EAAE87B,OAAS,MAAHr9B,EAAS,IAAIuB,GAAG,KAAK,KAAK,EAAE,OAAOg4C,KAAK32C,GAAEqvC,IAAIrvC,GAAEuD,IAAG0zC,KAAe,KAAO,OAAjB75C,EAAEuB,EAAE87B,SAAqB,KAAO,IAAFr9B,IAAQuB,EAAE87B,OAAS,MAAHr9B,EAAS,IAAIuB,GAAG,KAAK,KAAK,EAAE,OAAOk4C,GAAGl4C,GAAG,KAAK,KAAK,GAA0B,GAAvBqB,GAAEgC,IAAwB,QAArB5E,EAAEuB,EAAEg8B,gBAA2B,OAAOv9B,EAAEw9B,WAAW,CAAC,GAAG,OAAOj8B,EAAE47B,UAAU,MAAMz7B,MAAMF,EAAE,MAAM4zC,IAAI,CAAW,OAAS,OAAnBp1C,EAAEuB,EAAE87B,QAAsB97B,EAAE87B,OAAS,MAAHr9B,EAAS,IAAIuB,GAAG,KAAK,KAAK,GAAG,OAAOqB,GAAEgC,IAAG,KAAK,KAAK,EAAE,OAAO20C,KAAK,KAAK,KAAK,GAAG,OAAO5C,GAAGp1C,EAAEyM,KAAKolB,UAAU,KAAK,KAAK,GAAG,KAAK,GAAG,OAAOuyB,KAC1gB,KAAyB,QAAQ,OAAO,KAAK,CArB7CtC,GAAG,SAASrjD,EAAEuB,GAAG,IAAI,IAAIpB,EAAEoB,EAAEo8B,MAAM,OAAOx9B,GAAG,CAAC,GAAG,IAAIA,EAAE6yB,KAAK,IAAI7yB,EAAE6yB,IAAIhzB,EAAEu2B,YAAYp2B,EAAE27B,gBAAgB,GAAG,IAAI37B,EAAE6yB,KAAK,OAAO7yB,EAAEw9B,MAAM,CAACx9B,EAAEw9B,MAAMP,OAAOj9B,EAAEA,EAAEA,EAAEw9B,MAAM,QAAQ,CAAC,GAAGx9B,IAAIoB,EAAE,MAAM,KAAK,OAAOpB,EAAEy9B,SAAS,CAAC,GAAG,OAAOz9B,EAAEi9B,QAAQj9B,EAAEi9B,SAAS77B,EAAE,OAAOpB,EAAEA,EAAEi9B,MAAM,CAACj9B,EAAEy9B,QAAQR,OAAOj9B,EAAEi9B,OAAOj9B,EAAEA,EAAEy9B,OAAO,CAAC,EAAE0lB,GAAG,WAAW,EACxTC,GAAG,SAASvjD,EAAEuB,EAAEpB,EAAEmB,GAAG,IAAIpD,EAAE8B,EAAEk1C,cAAc,GAAGh3C,IAAIoD,EAAE,CAACtB,EAAEuB,EAAEu6B,UAAUsd,GAAGH,GAAGpb,SAAS,IAA4Rt7B,EAAxRhD,EAAE,KAAK,OAAOY,GAAG,IAAK,QAAQjC,EAAEm2B,EAAGr0B,EAAE9B,GAAGoD,EAAE+yB,EAAGr0B,EAAEsB,GAAG/B,EAAE,GAAG,MAAM,IAAK,SAASrB,EAAEmF,EAAE,CAAC,EAAEnF,EAAE,CAAC4C,WAAM,IAASQ,EAAE+B,EAAE,CAAC,EAAE/B,EAAE,CAACR,WAAM,IAASvB,EAAE,GAAG,MAAM,IAAK,WAAWrB,EAAEq3B,GAAGv1B,EAAE9B,GAAGoD,EAAEi0B,GAAGv1B,EAAEsB,GAAG/B,EAAE,GAAG,MAAM,QAAQ,oBAAoBrB,EAAEmnD,SAAS,oBAAoB/jD,EAAE+jD,UAAUrlD,EAAEslD,QAAQ5U,IAAyB,IAAIlwC,KAAzBy6B,GAAG96B,EAAEmB,GAASnB,EAAE,KAAcjC,EAAE,IAAIoD,EAAE5C,eAAe8B,IAAItC,EAAEQ,eAAe8B,IAAI,MAAMtC,EAAEsC,GAAG,GAAG,UAAUA,EAAE,CAAC,IAAIY,EAAElD,EAAEsC,GAAG,IAAI+B,KAAKnB,EAAEA,EAAE1C,eAAe6D,KACjfpC,IAAIA,EAAE,CAAC,GAAGA,EAAEoC,GAAG,GAAG,KAAK,4BAA4B/B,GAAG,aAAaA,GAAG,mCAAmCA,GAAG,6BAA6BA,GAAG,cAAcA,IAAImvB,EAAGjxB,eAAe8B,GAAGjB,IAAIA,EAAE,KAAKA,EAAEA,GAAG,IAAIwC,KAAKvB,EAAE,OAAO,IAAIA,KAAKc,EAAE,CAAC,IAAIQ,EAAER,EAAEd,GAAyB,GAAtBY,EAAE,MAAMlD,EAAEA,EAAEsC,QAAG,EAAUc,EAAE5C,eAAe8B,IAAIsB,IAAIV,IAAI,MAAMU,GAAG,MAAMV,GAAG,GAAG,UAAUZ,EAAE,GAAGY,EAAE,CAAC,IAAImB,KAAKnB,GAAGA,EAAE1C,eAAe6D,IAAIT,GAAGA,EAAEpD,eAAe6D,KAAKpC,IAAIA,EAAE,CAAC,GAAGA,EAAEoC,GAAG,IAAI,IAAIA,KAAKT,EAAEA,EAAEpD,eAAe6D,IAAInB,EAAEmB,KAAKT,EAAES,KAAKpC,IAAIA,EAAE,CAAC,GAAGA,EAAEoC,GAAGT,EAAES,GAAG,MAAMpC,IAAIZ,IAAIA,EAAE,IAAIA,EAAEwC,KAAKvB,EACpfL,IAAIA,EAAE2B,MAAM,4BAA4BtB,GAAGsB,EAAEA,EAAEA,EAAEgvC,YAAO,EAAO1vC,EAAEA,EAAEA,EAAE0vC,YAAO,EAAO,MAAMhvC,GAAGV,IAAIU,IAAIvC,EAAEA,GAAG,IAAIwC,KAAKvB,EAAEsB,IAAI,aAAatB,EAAE,kBAAkBsB,GAAG,kBAAkBA,IAAIvC,EAAEA,GAAG,IAAIwC,KAAKvB,EAAE,GAAGsB,GAAG,mCAAmCtB,GAAG,6BAA6BA,IAAImvB,EAAGjxB,eAAe8B,IAAI,MAAMsB,GAAG,aAAatB,GAAGiD,GAAE,SAASzD,GAAGT,GAAG6B,IAAIU,IAAIvC,EAAE,MAAMA,EAAEA,GAAG,IAAIwC,KAAKvB,EAAEsB,GAAG,CAAC3B,IAAIZ,EAAEA,GAAG,IAAIwC,KAAK,QAAQ5B,GAAG,IAAIK,EAAEjB,GAAKgC,EAAEs2C,YAAYr3C,KAAEe,EAAE87B,OAAO,EAAC,CAAC,EAAEmmB,GAAG,SAASxjD,EAAEuB,EAAEpB,EAAEmB,GAAGnB,IAAImB,IAAIC,EAAE87B,OAAO,EAAE,EAkBlb,IAAIwoB,IAAG,EAAG/gD,IAAE,EAAGghD,GAAG,oBAAoBC,QAAQA,QAAQljD,IAAIuC,GAAE,KAAK,SAAS4gD,GAAGhmD,EAAEuB,GAAG,IAAIpB,EAAEH,EAAEyI,IAAI,GAAG,OAAOtI,EAAE,GAAG,oBAAoBA,EAAE,IAAIA,EAAE,KAAK,CAAC,MAAMmB,GAAGgE,GAAEtF,EAAEuB,EAAED,EAAE,MAAMnB,EAAE09B,QAAQ,IAAI,CAAC,SAASooB,GAAGjmD,EAAEuB,EAAEpB,GAAG,IAAIA,GAAG,CAAC,MAAMmB,GAAGgE,GAAEtF,EAAEuB,EAAED,EAAE,CAAC,CAAC,IAAI4kD,IAAG,EAIxR,SAASC,GAAGnmD,EAAEuB,EAAEpB,GAAG,IAAImB,EAAEC,EAAEs2C,YAAyC,GAAG,QAAhCv2C,EAAE,OAAOA,EAAEA,EAAE66C,WAAW,MAAiB,CAAC,IAAIj+C,EAAEoD,EAAEA,EAAEuC,KAAK,EAAE,CAAC,IAAI3F,EAAE80B,IAAIhzB,KAAKA,EAAE,CAAC,IAAIT,EAAErB,EAAEu+C,QAAQv+C,EAAEu+C,aAAQ,OAAO,IAASl9C,GAAG0mD,GAAG1kD,EAAEpB,EAAEZ,EAAE,CAACrB,EAAEA,EAAE2F,IAAI,OAAO3F,IAAIoD,EAAE,CAAC,CAAC,SAAS8kD,GAAGpmD,EAAEuB,GAAgD,GAAG,QAAhCA,EAAE,QAAlBA,EAAEA,EAAEs2C,aAAuBt2C,EAAE46C,WAAW,MAAiB,CAAC,IAAIh8C,EAAEoB,EAAEA,EAAEsC,KAAK,EAAE,CAAC,IAAI1D,EAAE6yB,IAAIhzB,KAAKA,EAAE,CAAC,IAAIsB,EAAEnB,EAAEc,OAAOd,EAAEs8C,QAAQn7C,GAAG,CAACnB,EAAEA,EAAE0D,IAAI,OAAO1D,IAAIoB,EAAE,CAAC,CAAC,SAAS8kD,GAAGrmD,GAAG,IAAIuB,EAAEvB,EAAEyI,IAAI,GAAG,OAAOlH,EAAE,CAAC,IAAIpB,EAAEH,EAAE87B,UAAiB97B,EAAEgzB,IAA8BhzB,EAAEG,EAAE,oBAAoBoB,EAAEA,EAAEvB,GAAGuB,EAAEs8B,QAAQ79B,CAAC,CAAC,CAClf,SAASsmD,GAAGtmD,GAAG,IAAIuB,EAAEvB,EAAEm9B,UAAU,OAAO57B,IAAIvB,EAAEm9B,UAAU,KAAKmpB,GAAG/kD,IAAIvB,EAAE29B,MAAM,KAAK39B,EAAEw0C,UAAU,KAAKx0C,EAAE49B,QAAQ,KAAK,IAAI59B,EAAEgzB,MAAoB,QAAdzxB,EAAEvB,EAAE87B,oBAA4Bv6B,EAAEkwC,WAAWlwC,EAAEmwC,WAAWnwC,EAAE4tC,WAAW5tC,EAAEowC,WAAWpwC,EAAEqwC,MAAM5xC,EAAE87B,UAAU,KAAK97B,EAAEo9B,OAAO,KAAKp9B,EAAEsrB,aAAa,KAAKtrB,EAAEk1C,cAAc,KAAKl1C,EAAEu9B,cAAc,KAAKv9B,EAAE00C,aAAa,KAAK10C,EAAE87B,UAAU,KAAK97B,EAAE63C,YAAY,IAAI,CAAC,SAAS0O,GAAGvmD,GAAG,OAAO,IAAIA,EAAEgzB,KAAK,IAAIhzB,EAAEgzB,KAAK,IAAIhzB,EAAEgzB,GAAG,CACna,SAASwzB,GAAGxmD,GAAGA,EAAE,OAAO,CAAC,KAAK,OAAOA,EAAE49B,SAAS,CAAC,GAAG,OAAO59B,EAAEo9B,QAAQmpB,GAAGvmD,EAAEo9B,QAAQ,OAAO,KAAKp9B,EAAEA,EAAEo9B,MAAM,CAA2B,IAA1Bp9B,EAAE49B,QAAQR,OAAOp9B,EAAEo9B,OAAWp9B,EAAEA,EAAE49B,QAAQ,IAAI59B,EAAEgzB,KAAK,IAAIhzB,EAAEgzB,KAAK,KAAKhzB,EAAEgzB,KAAK,CAAC,GAAW,EAARhzB,EAAEq9B,MAAQ,SAASr9B,EAAE,GAAG,OAAOA,EAAE29B,OAAO,IAAI39B,EAAEgzB,IAAI,SAAShzB,EAAOA,EAAE29B,MAAMP,OAAOp9B,EAAEA,EAAEA,EAAE29B,KAAK,CAAC,KAAa,EAAR39B,EAAEq9B,OAAS,OAAOr9B,EAAE87B,SAAS,CAAC,CACzT,SAAS2qB,GAAGzmD,EAAEuB,EAAEpB,GAAG,IAAImB,EAAEtB,EAAEgzB,IAAI,GAAG,IAAI1xB,GAAG,IAAIA,EAAEtB,EAAEA,EAAE87B,UAAUv6B,EAAE,IAAIpB,EAAEy2B,SAASz2B,EAAEq7B,WAAWkrB,aAAa1mD,EAAEuB,GAAGpB,EAAEumD,aAAa1mD,EAAEuB,IAAI,IAAIpB,EAAEy2B,UAAUr1B,EAAEpB,EAAEq7B,YAAakrB,aAAa1mD,EAAEG,IAAKoB,EAAEpB,GAAIo2B,YAAYv2B,GAA4B,QAAxBG,EAAEA,EAAEwmD,2BAA8B,IAASxmD,GAAG,OAAOoB,EAAE+jD,UAAU/jD,EAAE+jD,QAAQ5U,UAAU,GAAG,IAAIpvC,GAAc,QAAVtB,EAAEA,EAAE29B,OAAgB,IAAI8oB,GAAGzmD,EAAEuB,EAAEpB,GAAGH,EAAEA,EAAE49B,QAAQ,OAAO59B,GAAGymD,GAAGzmD,EAAEuB,EAAEpB,GAAGH,EAAEA,EAAE49B,OAAO,CAC1X,SAASgpB,GAAG5mD,EAAEuB,EAAEpB,GAAG,IAAImB,EAAEtB,EAAEgzB,IAAI,GAAG,IAAI1xB,GAAG,IAAIA,EAAEtB,EAAEA,EAAE87B,UAAUv6B,EAAEpB,EAAEumD,aAAa1mD,EAAEuB,GAAGpB,EAAEo2B,YAAYv2B,QAAQ,GAAG,IAAIsB,GAAc,QAAVtB,EAAEA,EAAE29B,OAAgB,IAAIipB,GAAG5mD,EAAEuB,EAAEpB,GAAGH,EAAEA,EAAE49B,QAAQ,OAAO59B,GAAG4mD,GAAG5mD,EAAEuB,EAAEpB,GAAGH,EAAEA,EAAE49B,OAAO,CAAC,IAAI13B,GAAE,KAAK2gD,IAAG,EAAG,SAASC,GAAG9mD,EAAEuB,EAAEpB,GAAG,IAAIA,EAAEA,EAAEw9B,MAAM,OAAOx9B,GAAG4mD,GAAG/mD,EAAEuB,EAAEpB,GAAGA,EAAEA,EAAEy9B,OAAO,CACnR,SAASmpB,GAAG/mD,EAAEuB,EAAEpB,GAAG,GAAGm/B,IAAI,oBAAoBA,GAAG0nB,qBAAqB,IAAI1nB,GAAG0nB,qBAAqB3nB,GAAGl/B,EAAE,CAAC,MAAMiB,GAAG,CAAC,OAAOjB,EAAE6yB,KAAK,KAAK,EAAEluB,IAAGkhD,GAAG7lD,EAAEoB,GAAG,KAAK,EAAE,IAAID,EAAE4E,GAAEhI,EAAE2oD,GAAG3gD,GAAE,KAAK4gD,GAAG9mD,EAAEuB,EAAEpB,GAAO0mD,GAAG3oD,EAAE,QAATgI,GAAE5E,KAAkBulD,IAAI7mD,EAAEkG,GAAE/F,EAAEA,EAAE27B,UAAU,IAAI97B,EAAE42B,SAAS52B,EAAEw7B,WAAWlF,YAAYn2B,GAAGH,EAAEs2B,YAAYn2B,IAAI+F,GAAEowB,YAAYn2B,EAAE27B,YAAY,MAAM,KAAK,GAAG,OAAO51B,KAAI2gD,IAAI7mD,EAAEkG,GAAE/F,EAAEA,EAAE27B,UAAU,IAAI97B,EAAE42B,SAASwa,GAAGpxC,EAAEw7B,WAAWr7B,GAAG,IAAIH,EAAE42B,UAAUwa,GAAGpxC,EAAEG,GAAG2iC,GAAG9iC,IAAIoxC,GAAGlrC,GAAE/F,EAAE27B,YAAY,MAAM,KAAK,EAAEx6B,EAAE4E,GAAEhI,EAAE2oD,GAAG3gD,GAAE/F,EAAE27B,UAAU0G,cAAcqkB,IAAG,EAClfC,GAAG9mD,EAAEuB,EAAEpB,GAAG+F,GAAE5E,EAAEulD,GAAG3oD,EAAE,MAAM,KAAK,EAAE,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,IAAI4G,KAAoB,QAAhBxD,EAAEnB,EAAE03C,cAAsC,QAAfv2C,EAAEA,EAAE66C,aAAsB,CAACj+C,EAAEoD,EAAEA,EAAEuC,KAAK,EAAE,CAAC,IAAItE,EAAErB,EAAEqE,EAAEhD,EAAEk9C,QAAQl9C,EAAEA,EAAEyzB,SAAI,IAASzwB,IAAI,KAAO,EAAFhD,IAAe,KAAO,EAAFA,KAAf0mD,GAAG9lD,EAAEoB,EAAEgB,GAAyBrE,EAAEA,EAAE2F,IAAI,OAAO3F,IAAIoD,EAAE,CAACwlD,GAAG9mD,EAAEuB,EAAEpB,GAAG,MAAM,KAAK,EAAE,IAAI2E,KAAIkhD,GAAG7lD,EAAEoB,GAAiB,oBAAdD,EAAEnB,EAAE27B,WAAgCmrB,sBAAsB,IAAI3lD,EAAE2rB,MAAM9sB,EAAE+0C,cAAc5zC,EAAEy+C,MAAM5/C,EAAEo9B,cAAcj8B,EAAE2lD,sBAAsB,CAAC,MAAM7lD,GAAGkE,GAAEnF,EAAEoB,EAAEH,EAAE,CAAC0lD,GAAG9mD,EAAEuB,EAAEpB,GAAG,MAAM,KAAK,GAAG2mD,GAAG9mD,EAAEuB,EAAEpB,GAAG,MAAM,KAAK,GAAU,EAAPA,EAAEid,MAAQtY,IAAGxD,EAAEwD,KAAI,OAChf3E,EAAEo9B,cAAcupB,GAAG9mD,EAAEuB,EAAEpB,GAAG2E,GAAExD,GAAGwlD,GAAG9mD,EAAEuB,EAAEpB,GAAG,MAAM,QAAQ2mD,GAAG9mD,EAAEuB,EAAEpB,GAAG,CAAC,SAAS+mD,GAAGlnD,GAAG,IAAIuB,EAAEvB,EAAE63C,YAAY,GAAG,OAAOt2C,EAAE,CAACvB,EAAE63C,YAAY,KAAK,IAAI13C,EAAEH,EAAE87B,UAAU,OAAO37B,IAAIA,EAAEH,EAAE87B,UAAU,IAAIgqB,IAAIvkD,EAAEtB,SAAQ,SAASsB,GAAG,IAAID,EAAE6lD,GAAGhmD,KAAK,KAAKnB,EAAEuB,GAAGpB,EAAE8C,IAAI1B,KAAKpB,EAAEqT,IAAIjS,GAAGA,EAAEqF,KAAKtF,EAAEA,GAAG,GAAE,CAAC,CACzQ,SAAS8lD,GAAGpnD,EAAEuB,GAAG,IAAIpB,EAAEoB,EAAEizC,UAAU,GAAG,OAAOr0C,EAAE,IAAI,IAAImB,EAAE,EAAEA,EAAEnB,EAAEnB,OAAOsC,IAAI,CAAC,IAAIpD,EAAEiC,EAAEmB,GAAG,IAAI,IAAI/B,EAAES,EAAEuC,EAAEhB,EAAEH,EAAEmB,EAAEvC,EAAE,KAAK,OAAOoB,GAAG,CAAC,OAAOA,EAAE4xB,KAAK,KAAK,EAAE9sB,GAAE9E,EAAE06B,UAAU+qB,IAAG,EAAG,MAAM7mD,EAAE,KAAK,EAA4C,KAAK,EAAEkG,GAAE9E,EAAE06B,UAAU0G,cAAcqkB,IAAG,EAAG,MAAM7mD,EAAEoB,EAAEA,EAAEg8B,MAAM,CAAC,GAAG,OAAOl3B,GAAE,MAAMxE,MAAMF,EAAE,MAAMulD,GAAGxnD,EAAEgD,EAAErE,GAAGgI,GAAE,KAAK2gD,IAAG,EAAG,IAAI/kD,EAAE5D,EAAEi/B,UAAU,OAAOr7B,IAAIA,EAAEs7B,OAAO,MAAMl/B,EAAEk/B,OAAO,IAAI,CAAC,MAAM58B,GAAG8E,GAAEpH,EAAEqD,EAAEf,EAAE,CAAC,CAAC,GAAkB,MAAfe,EAAE+iD,aAAmB,IAAI/iD,EAAEA,EAAEo8B,MAAM,OAAOp8B,GAAG8lD,GAAG9lD,EAAEvB,GAAGuB,EAAEA,EAAEq8B,OAAO,CACje,SAASypB,GAAGrnD,EAAEuB,GAAG,IAAIpB,EAAEH,EAAEm9B,UAAU77B,EAAEtB,EAAEq9B,MAAM,OAAOr9B,EAAEgzB,KAAK,KAAK,EAAE,KAAK,GAAG,KAAK,GAAG,KAAK,GAAiB,GAAdo0B,GAAG7lD,EAAEvB,GAAGsnD,GAAGtnD,GAAQ,EAAFsB,EAAI,CAAC,IAAI6kD,GAAG,EAAEnmD,EAAEA,EAAEo9B,QAAQgpB,GAAG,EAAEpmD,EAAE,CAAC,MAAM7B,GAAGmH,GAAEtF,EAAEA,EAAEo9B,OAAOj/B,EAAE,CAAC,IAAIgoD,GAAG,EAAEnmD,EAAEA,EAAEo9B,OAAO,CAAC,MAAMj/B,GAAGmH,GAAEtF,EAAEA,EAAEo9B,OAAOj/B,EAAE,CAAC,CAAC,MAAM,KAAK,EAAEipD,GAAG7lD,EAAEvB,GAAGsnD,GAAGtnD,GAAK,IAAFsB,GAAO,OAAOnB,GAAG6lD,GAAG7lD,EAAEA,EAAEi9B,QAAQ,MAAM,KAAK,EAAgD,GAA9CgqB,GAAG7lD,EAAEvB,GAAGsnD,GAAGtnD,GAAK,IAAFsB,GAAO,OAAOnB,GAAG6lD,GAAG7lD,EAAEA,EAAEi9B,QAAmB,GAARp9B,EAAEq9B,MAAS,CAAC,IAAIn/B,EAAE8B,EAAE87B,UAAU,IAAIpF,GAAGx4B,EAAE,GAAG,CAAC,MAAMC,GAAGmH,GAAEtF,EAAEA,EAAEo9B,OAAOj/B,EAAE,CAAC,CAAC,GAAK,EAAFmD,GAAoB,OAAdpD,EAAE8B,EAAE87B,WAAmB,CAAC,IAAIv8B,EAAES,EAAEk1C,cAAc3yC,EAAE,OAAOpC,EAAEA,EAAE+0C,cAAc31C,EAAE6B,EAAEpB,EAAEgO,KAAKlM,EAAE9B,EAAE63C,YACje,GAAnB73C,EAAE63C,YAAY,KAAQ,OAAO/1C,EAAE,IAAI,UAAUV,GAAG,UAAU7B,EAAEyO,MAAM,MAAMzO,EAAEmF,MAAMmwB,EAAG32B,EAAEqB,GAAG27B,GAAG95B,EAAEmB,GAAG,IAAI/B,EAAE06B,GAAG95B,EAAE7B,GAAG,IAAIgD,EAAE,EAAEA,EAAET,EAAE9C,OAAOuD,GAAG,EAAE,CAAC,IAAIlC,EAAEyB,EAAES,GAAGoB,EAAE7B,EAAES,EAAE,GAAG,UAAUlC,EAAEu5B,GAAG17B,EAAEyF,GAAG,4BAA4BtD,EAAE41B,GAAG/3B,EAAEyF,GAAG,aAAatD,EAAEq2B,GAAGx4B,EAAEyF,GAAGmtB,EAAG5yB,EAAEmC,EAAEsD,EAAEnD,EAAE,CAAC,OAAOY,GAAG,IAAK,QAAQ0zB,EAAG52B,EAAEqB,GAAG,MAAM,IAAK,WAAWo2B,GAAGz3B,EAAEqB,GAAG,MAAM,IAAK,SAAS,IAAIT,EAAEZ,EAAEs2B,cAAc0wB,YAAYhnD,EAAEs2B,cAAc0wB,cAAc3lD,EAAE4lD,SAAS,IAAI1jD,EAAElC,EAAEuB,MAAM,MAAMW,EAAEyzB,GAAGh3B,IAAIqB,EAAE4lD,SAAS1jD,GAAE,GAAI3C,MAAMS,EAAE4lD,WAAW,MAAM5lD,EAAEg1B,aAAaW,GAAGh3B,IAAIqB,EAAE4lD,SACnf5lD,EAAEg1B,cAAa,GAAIW,GAAGh3B,IAAIqB,EAAE4lD,SAAS5lD,EAAE4lD,SAAS,GAAG,IAAG,IAAKjnD,EAAEwzC,IAAInyC,CAAC,CAAC,MAAMpB,GAAGmH,GAAEtF,EAAEA,EAAEo9B,OAAOj/B,EAAE,CAAC,CAAC,MAAM,KAAK,EAAgB,GAAdipD,GAAG7lD,EAAEvB,GAAGsnD,GAAGtnD,GAAQ,EAAFsB,EAAI,CAAC,GAAG,OAAOtB,EAAE87B,UAAU,MAAMp6B,MAAMF,EAAE,MAAMtD,EAAE8B,EAAE87B,UAAUv8B,EAAES,EAAEk1C,cAAc,IAAIh3C,EAAE24B,UAAUt3B,CAAC,CAAC,MAAMpB,GAAGmH,GAAEtF,EAAEA,EAAEo9B,OAAOj/B,EAAE,CAAC,CAAC,MAAM,KAAK,EAAgB,GAAdipD,GAAG7lD,EAAEvB,GAAGsnD,GAAGtnD,GAAQ,EAAFsB,GAAK,OAAOnB,GAAGA,EAAEo9B,cAAcgF,aAAa,IAAIO,GAAGvhC,EAAEihC,cAAc,CAAC,MAAMrkC,GAAGmH,GAAEtF,EAAEA,EAAEo9B,OAAOj/B,EAAE,CAAC,MAAM,KAAK,EAG4G,QAAQipD,GAAG7lD,EACnfvB,GAAGsnD,GAAGtnD,SAJ4Y,KAAK,GAAGonD,GAAG7lD,EAAEvB,GAAGsnD,GAAGtnD,GAAqB,MAAlB9B,EAAE8B,EAAE29B,OAAQN,QAAa99B,EAAE,OAAOrB,EAAEq/B,cAAcr/B,EAAE49B,UAAUyrB,SAAShoD,GAAGA,GAClf,OAAOrB,EAAEi/B,WAAW,OAAOj/B,EAAEi/B,UAAUI,gBAAgBiqB,GAAGzjD,OAAQ,EAAFzC,GAAK4lD,GAAGlnD,GAAG,MAAM,KAAK,GAAsF,GAAnFK,EAAE,OAAOF,GAAG,OAAOA,EAAEo9B,cAAqB,EAAPv9B,EAAEod,MAAQtY,IAAGtE,EAAEsE,KAAIzE,EAAE+mD,GAAG7lD,EAAEvB,GAAG8E,GAAEtE,GAAG4mD,GAAG7lD,EAAEvB,GAAGsnD,GAAGtnD,GAAQ,KAAFsB,EAAO,CAA0B,GAAzBd,EAAE,OAAOR,EAAEu9B,eAAkBv9B,EAAE87B,UAAUyrB,SAAS/mD,KAAKH,GAAG,KAAY,EAAPL,EAAEod,MAAQ,IAAIhY,GAAEpF,EAAEK,EAAEL,EAAE29B,MAAM,OAAOt9B,GAAG,CAAC,IAAIsD,EAAEyB,GAAE/E,EAAE,OAAO+E,IAAG,CAAe,OAAV3D,GAAJ3C,EAAEsG,IAAMu4B,MAAa7+B,EAAEk0B,KAAK,KAAK,EAAE,KAAK,GAAG,KAAK,GAAG,KAAK,GAAGmzB,GAAG,EAAErnD,EAAEA,EAAEs+B,QAAQ,MAAM,KAAK,EAAE4oB,GAAGlnD,EAAEA,EAAEs+B,QAAQ,IAAI5+B,EAAEM,EAAEg9B,UAAU,GAAG,oBAAoBt9B,EAAEyoD,qBAAqB,CAAC3lD,EAAExC,EAAEqB,EAAErB,EAAEs+B,OAAO,IAAI77B,EAAED,EAAE9C,EAAEyuB,MACpf1rB,EAAE2zC,cAAc12C,EAAEuhD,MAAMx+C,EAAEg8B,cAAc/+B,EAAEyoD,sBAAsB,CAAC,MAAM9oD,GAAGmH,GAAEhE,EAAEnB,EAAEhC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE6nD,GAAGlnD,EAAEA,EAAEs+B,QAAQ,MAAM,KAAK,GAAG,GAAG,OAAOt+B,EAAEy+B,cAAc,CAACkqB,GAAG9jD,GAAG,QAAQ,EAAE,OAAOlC,GAAGA,EAAE27B,OAAOt+B,EAAEsG,GAAE3D,GAAGgmD,GAAG9jD,EAAE,CAACtD,EAAEA,EAAEu9B,OAAO,CAAC59B,EAAE,IAAIK,EAAE,KAAKsD,EAAE3D,IAAI,CAAC,GAAG,IAAI2D,EAAEqvB,KAAK,GAAG,OAAO3yB,EAAE,CAACA,EAAEsD,EAAE,IAAIzF,EAAEyF,EAAEm4B,UAAUt7B,EAAa,oBAAVjB,EAAErB,EAAE27B,OAA4BC,YAAYv6B,EAAEu6B,YAAY,UAAU,OAAO,aAAav6B,EAAEmoD,QAAQ,QAAStmD,EAAEuC,EAAEm4B,UAAkCv5B,OAAE,KAA1BT,EAAE6B,EAAEuxC,cAAcrb,QAAoB,OAAO/3B,GAAGA,EAAEpD,eAAe,WAAWoD,EAAE4lD,QAAQ,KAAKtmD,EAAEy4B,MAAM6tB,QACzf/tB,GAAG,UAAUp3B,GAAG,CAAC,MAAMpE,GAAGmH,GAAEtF,EAAEA,EAAEo9B,OAAOj/B,EAAE,CAAC,OAAO,GAAG,IAAIwF,EAAEqvB,KAAK,GAAG,OAAO3yB,EAAE,IAAIsD,EAAEm4B,UAAUjF,UAAUr2B,EAAE,GAAGmD,EAAEuxC,aAAa,CAAC,MAAM/2C,GAAGmH,GAAEtF,EAAEA,EAAEo9B,OAAOj/B,EAAE,OAAO,IAAI,KAAKwF,EAAEqvB,KAAK,KAAKrvB,EAAEqvB,KAAK,OAAOrvB,EAAE45B,eAAe55B,IAAI3D,IAAI,OAAO2D,EAAEg6B,MAAM,CAACh6B,EAAEg6B,MAAMP,OAAOz5B,EAAEA,EAAEA,EAAEg6B,MAAM,QAAQ,CAAC,GAAGh6B,IAAI3D,EAAE,MAAMA,EAAE,KAAK,OAAO2D,EAAEi6B,SAAS,CAAC,GAAG,OAAOj6B,EAAEy5B,QAAQz5B,EAAEy5B,SAASp9B,EAAE,MAAMA,EAAEK,IAAIsD,IAAItD,EAAE,MAAMsD,EAAEA,EAAEy5B,MAAM,CAAC/8B,IAAIsD,IAAItD,EAAE,MAAMsD,EAAEi6B,QAAQR,OAAOz5B,EAAEy5B,OAAOz5B,EAAEA,EAAEi6B,OAAO,CAAC,CAAC,MAAM,KAAK,GAAGwpB,GAAG7lD,EAAEvB,GAAGsnD,GAAGtnD,GAAK,EAAFsB,GAAK4lD,GAAGlnD,GAAS,KAAK,IACtd,CAAC,SAASsnD,GAAGtnD,GAAG,IAAIuB,EAAEvB,EAAEq9B,MAAM,GAAK,EAAF97B,EAAI,CAAC,IAAIvB,EAAE,CAAC,IAAI,IAAIG,EAAEH,EAAEo9B,OAAO,OAAOj9B,GAAG,CAAC,GAAGomD,GAAGpmD,GAAG,CAAC,IAAImB,EAAEnB,EAAE,MAAMH,CAAC,CAACG,EAAEA,EAAEi9B,MAAM,CAAC,MAAM17B,MAAMF,EAAE,KAAM,CAAC,OAAOF,EAAE0xB,KAAK,KAAK,EAAE,IAAI90B,EAAEoD,EAAEw6B,UAAkB,GAARx6B,EAAE+7B,QAAW3G,GAAGx4B,EAAE,IAAIoD,EAAE+7B,QAAQ,IAAgBupB,GAAG5mD,EAATwmD,GAAGxmD,GAAU9B,GAAG,MAAM,KAAK,EAAE,KAAK,EAAE,IAAIqE,EAAEjB,EAAEw6B,UAAU0G,cAAsBikB,GAAGzmD,EAATwmD,GAAGxmD,GAAUuC,GAAG,MAAM,QAAQ,MAAMb,MAAMF,EAAE,MAAO,CAAC,MAAMM,GAAGwD,GAAEtF,EAAEA,EAAEo9B,OAAOt7B,EAAE,CAAC9B,EAAEq9B,QAAQ,CAAC,CAAG,KAAF97B,IAASvB,EAAEq9B,QAAQ,KAAK,CAAC,SAASsqB,GAAG3nD,EAAEuB,EAAEpB,GAAGiF,GAAEpF,EAAE4nD,GAAG5nD,EAAEuB,EAAEpB,EAAE,CACvb,SAASynD,GAAG5nD,EAAEuB,EAAEpB,GAAG,IAAI,IAAImB,EAAE,KAAY,EAAPtB,EAAEod,MAAQ,OAAOhY,IAAG,CAAC,IAAIlH,EAAEkH,GAAE7F,EAAErB,EAAEy/B,MAAM,GAAG,KAAKz/B,EAAE80B,KAAK1xB,EAAE,CAAC,IAAIiB,EAAE,OAAOrE,EAAEq/B,eAAesoB,GAAG,IAAItjD,EAAE,CAAC,IAAInB,EAAElD,EAAEi/B,UAAUr7B,EAAE,OAAOV,GAAG,OAAOA,EAAEm8B,eAAez4B,GAAE1D,EAAEykD,GAAG,IAAIrlD,EAAEsE,GAAO,GAAL+gD,GAAGtjD,GAAMuC,GAAEhD,KAAKtB,EAAE,IAAI4E,GAAElH,EAAE,OAAOkH,IAAOtD,GAAJS,EAAE6C,IAAMu4B,MAAM,KAAKp7B,EAAEywB,KAAK,OAAOzwB,EAAEg7B,cAAcsqB,GAAG3pD,GAAG,OAAO4D,GAAGA,EAAEs7B,OAAO76B,EAAE6C,GAAEtD,GAAG+lD,GAAG3pD,GAAG,KAAK,OAAOqB,GAAG6F,GAAE7F,EAAEqoD,GAAGroD,EAAEgC,EAAEpB,GAAGZ,EAAEA,EAAEq+B,QAAQx4B,GAAElH,EAAE2nD,GAAGzkD,EAAE0D,GAAEtE,CAAC,CAACsnD,GAAG9nD,EAAM,MAAM,KAAoB,KAAf9B,EAAEomD,eAAoB,OAAO/kD,GAAGA,EAAE69B,OAAOl/B,EAAEkH,GAAE7F,GAAGuoD,GAAG9nD,EAAM,CAAC,CACvc,SAAS8nD,GAAG9nD,GAAG,KAAK,OAAOoF,IAAG,CAAC,IAAI7D,EAAE6D,GAAE,GAAG,KAAa,KAAR7D,EAAE87B,OAAY,CAAC,IAAIl9B,EAAEoB,EAAE47B,UAAU,IAAI,GAAG,KAAa,KAAR57B,EAAE87B,OAAY,OAAO97B,EAAEyxB,KAAK,KAAK,EAAE,KAAK,GAAG,KAAK,GAAGluB,IAAGshD,GAAG,EAAE7kD,GAAG,MAAM,KAAK,EAAE,IAAID,EAAEC,EAAEu6B,UAAU,GAAW,EAARv6B,EAAE87B,QAAUv4B,GAAE,GAAG,OAAO3E,EAAEmB,EAAEm/C,wBAAwB,CAAC,IAAIviD,EAAEqD,EAAEgzC,cAAchzC,EAAEyM,KAAK7N,EAAE+0C,cAAc+J,GAAG19C,EAAEyM,KAAK7N,EAAE+0C,eAAe5zC,EAAE0hD,mBAAmB9kD,EAAEiC,EAAEo9B,cAAcj8B,EAAEymD,oCAAoC,CAAC,IAAIxoD,EAAEgC,EAAEs2C,YAAY,OAAOt4C,GAAGw5C,GAAGx3C,EAAEhC,EAAE+B,GAAG,MAAM,KAAK,EAAE,IAAIiB,EAAEhB,EAAEs2C,YAAY,GAAG,OAAOt1C,EAAE,CAAQ,GAAPpC,EAAE,KAAQ,OAAOoB,EAAEo8B,MAAM,OAAOp8B,EAAEo8B,MAAM3K,KAAK,KAAK,EACvf,KAAK,EAAE7yB,EAAEoB,EAAEo8B,MAAM7B,UAAUid,GAAGx3C,EAAEgB,EAAEpC,EAAE,CAAC,MAAM,KAAK,EAAE,IAAIiB,EAAEG,EAAEu6B,UAAU,GAAG,OAAO37B,GAAW,EAARoB,EAAE87B,MAAQ,CAACl9B,EAAEiB,EAAE,IAAIU,EAAEP,EAAE2zC,cAAc,OAAO3zC,EAAEyM,MAAM,IAAK,SAAS,IAAK,QAAQ,IAAK,SAAS,IAAK,WAAWlM,EAAE0jD,WAAWrlD,EAAE4tC,QAAQ,MAAM,IAAK,MAAMjsC,EAAE+c,MAAM1e,EAAE0e,IAAI/c,EAAE+c,KAAK,CAAC,MAAM,KAAK,EAAQ,KAAK,EAAQ,KAAK,GAAyJ,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,MAAhM,KAAK,GAAG,GAAG,OAAOtd,EAAEg8B,cAAc,CAAC,IAAI/8B,EAAEe,EAAE47B,UAAU,GAAG,OAAO38B,EAAE,CAAC,IAAIH,EAAEG,EAAE+8B,cAAc,GAAG,OAAOl9B,EAAE,CAAC,IAAIsD,EAAEtD,EAAEm9B,WAAW,OAAO75B,GAAGm/B,GAAGn/B,EAAE,CAAC,CAAC,CAAC,MAC5c,QAAQ,MAAMjC,MAAMF,EAAE,MAAOsD,IAAW,IAARvD,EAAE87B,OAAWgpB,GAAG9kD,EAAE,CAAC,MAAMzC,GAAGwG,GAAE/D,EAAEA,EAAE67B,OAAOt+B,EAAE,CAAC,CAAC,GAAGyC,IAAIvB,EAAE,CAACoF,GAAE,KAAK,KAAK,CAAa,GAAG,QAAfjF,EAAEoB,EAAEq8B,SAAoB,CAACz9B,EAAEi9B,OAAO77B,EAAE67B,OAAOh4B,GAAEjF,EAAE,KAAK,CAACiF,GAAE7D,EAAE67B,MAAM,CAAC,CAAC,SAASqqB,GAAGznD,GAAG,KAAK,OAAOoF,IAAG,CAAC,IAAI7D,EAAE6D,GAAE,GAAG7D,IAAIvB,EAAE,CAACoF,GAAE,KAAK,KAAK,CAAC,IAAIjF,EAAEoB,EAAEq8B,QAAQ,GAAG,OAAOz9B,EAAE,CAACA,EAAEi9B,OAAO77B,EAAE67B,OAAOh4B,GAAEjF,EAAE,KAAK,CAACiF,GAAE7D,EAAE67B,MAAM,CAAC,CACvS,SAASyqB,GAAG7nD,GAAG,KAAK,OAAOoF,IAAG,CAAC,IAAI7D,EAAE6D,GAAE,IAAI,OAAO7D,EAAEyxB,KAAK,KAAK,EAAE,KAAK,GAAG,KAAK,GAAG,IAAI7yB,EAAEoB,EAAE67B,OAAO,IAAIgpB,GAAG,EAAE7kD,EAAE,CAAC,MAAMO,GAAGwD,GAAE/D,EAAEpB,EAAE2B,EAAE,CAAC,MAAM,KAAK,EAAE,IAAIR,EAAEC,EAAEu6B,UAAU,GAAG,oBAAoBx6B,EAAEm/C,kBAAkB,CAAC,IAAIviD,EAAEqD,EAAE67B,OAAO,IAAI97B,EAAEm/C,mBAAmB,CAAC,MAAM3+C,GAAGwD,GAAE/D,EAAErD,EAAE4D,EAAE,CAAC,CAAC,IAAIvC,EAAEgC,EAAE67B,OAAO,IAAIipB,GAAG9kD,EAAE,CAAC,MAAMO,GAAGwD,GAAE/D,EAAEhC,EAAEuC,EAAE,CAAC,MAAM,KAAK,EAAE,IAAIS,EAAEhB,EAAE67B,OAAO,IAAIipB,GAAG9kD,EAAE,CAAC,MAAMO,GAAGwD,GAAE/D,EAAEgB,EAAET,EAAE,EAAE,CAAC,MAAMA,GAAGwD,GAAE/D,EAAEA,EAAE67B,OAAOt7B,EAAE,CAAC,GAAGP,IAAIvB,EAAE,CAACoF,GAAE,KAAK,KAAK,CAAC,IAAIhE,EAAEG,EAAEq8B,QAAQ,GAAG,OAAOx8B,EAAE,CAACA,EAAEg8B,OAAO77B,EAAE67B,OAAOh4B,GAAEhE,EAAE,KAAK,CAACgE,GAAE7D,EAAE67B,MAAM,CAAC,CAC7d,IAwBkN4qB,GAxB9MC,GAAGxvC,KAAKkK,KAAKulC,GAAG52B,EAAG0oB,uBAAuBmO,GAAG72B,EAAGswB,kBAAkBwG,GAAG92B,EAAG0R,wBAAwBlgC,GAAE,EAAEkD,GAAE,KAAKT,GAAE,KAAKc,GAAE,EAAEq8C,GAAG,EAAED,GAAG1Q,GAAG,GAAGruC,GAAE,EAAE2kD,GAAG,KAAKvP,GAAG,EAAEwP,GAAG,EAAEC,GAAG,EAAEC,GAAG,KAAKC,GAAG,KAAKjB,GAAG,EAAE9B,GAAGgD,IAASC,GAAG,KAAK5H,IAAG,EAAGC,GAAG,KAAKI,GAAG,KAAKwH,IAAG,EAAGC,GAAG,KAAKC,GAAG,EAAEC,GAAG,EAAEC,GAAG,KAAKC,IAAI,EAAEC,GAAG,EAAE,SAAShlD,KAAI,OAAO,KAAO,EAAFpB,IAAKiB,MAAK,IAAIklD,GAAGA,GAAGA,GAAGllD,IAAG,CAChU,SAAS25C,GAAG19C,GAAG,OAAG,KAAY,EAAPA,EAAEod,MAAe,EAAK,KAAO,EAAFta,KAAM,IAAIuD,GAASA,IAAGA,GAAK,OAAOivC,GAAGnS,YAAkB,IAAI+lB,KAAKA,GAAG1oB,MAAM0oB,IAAU,KAAPlpD,EAAEsD,IAAkBtD,EAAiBA,OAAE,KAAjBA,EAAEN,OAAOmsC,OAAmB,GAAGrI,GAAGxjC,EAAEgO,KAAc,CAAC,SAASsuC,GAAGt8C,EAAEuB,EAAEpB,EAAEmB,GAAG,GAAG,GAAGynD,GAAG,MAAMA,GAAG,EAAEC,GAAG,KAAKtnD,MAAMF,EAAE,MAAMk/B,GAAG1gC,EAAEG,EAAEmB,GAAM,KAAO,EAAFwB,KAAM9C,IAAIgG,KAAEhG,IAAIgG,KAAI,KAAO,EAAFlD,MAAOwlD,IAAInoD,GAAG,IAAIuD,IAAGylD,GAAGnpD,EAAEqG,KAAI+iD,GAAGppD,EAAEsB,GAAG,IAAInB,GAAG,IAAI2C,IAAG,KAAY,EAAPvB,EAAE6b,QAAUsoC,GAAG3hD,KAAI,IAAIkvC,IAAIG,MAAK,CAC1Y,SAASgW,GAAGppD,EAAEuB,GAAG,IAAIpB,EAAEH,EAAEqpD,cA3MzB,SAAYrpD,EAAEuB,GAAG,IAAI,IAAIpB,EAAEH,EAAEkgC,eAAe5+B,EAAEtB,EAAEmgC,YAAYjiC,EAAE8B,EAAEspD,gBAAgB/pD,EAAES,EAAEigC,aAAa,EAAE1gC,GAAG,CAAC,IAAIgD,EAAE,GAAGg9B,GAAGhgC,GAAG6B,EAAE,GAAGmB,EAAET,EAAE5D,EAAEqE,IAAO,IAAIT,EAAM,KAAKV,EAAEjB,IAAI,KAAKiB,EAAEE,KAAGpD,EAAEqE,GAAG+9B,GAAGl/B,EAAEG,IAAQO,GAAGP,IAAIvB,EAAEupD,cAAcnoD,GAAG7B,IAAI6B,CAAC,CAAC,CA2MnLooD,CAAGxpD,EAAEuB,GAAG,IAAID,EAAE0+B,GAAGhgC,EAAEA,IAAIgG,GAAEK,GAAE,GAAG,GAAG,IAAI/E,EAAE,OAAOnB,GAAG+9B,GAAG/9B,GAAGH,EAAEqpD,aAAa,KAAKrpD,EAAEypD,iBAAiB,OAAO,GAAGloD,EAAED,GAAGA,EAAEtB,EAAEypD,mBAAmBloD,EAAE,CAAgB,GAAf,MAAMpB,GAAG+9B,GAAG/9B,GAAM,IAAIoB,EAAE,IAAIvB,EAAEgzB,IA5IsJ,SAAYhzB,GAAGizC,IAAG,EAAGE,GAAGnzC,EAAE,CA4I5K0pD,CAAGC,GAAGxoD,KAAK,KAAKnB,IAAImzC,GAAGwW,GAAGxoD,KAAK,KAAKnB,IAAIkxC,IAAG,WAAW,KAAO,EAAFpuC,KAAMswC,IAAI,IAAGjzC,EAAE,SAAS,CAAC,OAAO0gC,GAAGv/B,IAAI,KAAK,EAAEnB,EAAEw+B,GAAG,MAAM,KAAK,EAAEx+B,EAAE0+B,GAAG,MAAM,KAAK,GAAwC,QAAQ1+B,EAAE4+B,SAApC,KAAK,UAAU5+B,EAAEg/B,GAAsBh/B,EAAEypD,GAAGzpD,EAAE0pD,GAAG1oD,KAAK,KAAKnB,GAAG,CAACA,EAAEypD,iBAAiBloD,EAAEvB,EAAEqpD,aAAalpD,CAAC,CAAC,CAC7c,SAAS0pD,GAAG7pD,EAAEuB,GAAc,GAAX0nD,IAAI,EAAEC,GAAG,EAAK,KAAO,EAAFpmD,IAAK,MAAMpB,MAAMF,EAAE,MAAM,IAAIrB,EAAEH,EAAEqpD,aAAa,GAAGS,MAAM9pD,EAAEqpD,eAAelpD,EAAE,OAAO,KAAK,IAAImB,EAAE0+B,GAAGhgC,EAAEA,IAAIgG,GAAEK,GAAE,GAAG,GAAG,IAAI/E,EAAE,OAAO,KAAK,GAAG,KAAO,GAAFA,IAAO,KAAKA,EAAEtB,EAAEupD,eAAehoD,EAAEA,EAAEwoD,GAAG/pD,EAAEsB,OAAO,CAACC,EAAED,EAAE,IAAIpD,EAAE4E,GAAEA,IAAG,EAAE,IAAIvD,EAAEyqD,KAAgD,IAAxChkD,KAAIhG,GAAGqG,KAAI9E,IAAEonD,GAAG,KAAKjD,GAAG3hD,KAAI,IAAIkmD,GAAGjqD,EAAEuB,UAAU2oD,KAAK,KAAK,CAAC,MAAM9oD,GAAG+oD,GAAGnqD,EAAEoB,EAAE,CAAUs1C,KAAKwR,GAAGrqB,QAAQt+B,EAAEuD,GAAE5E,EAAE,OAAOqH,GAAEhE,EAAE,GAAGyE,GAAE,KAAKK,GAAE,EAAE9E,EAAEmC,GAAE,CAAC,GAAG,IAAInC,EAAE,CAAyC,GAAxC,IAAIA,IAAY,KAARrD,EAAEqiC,GAAGvgC,MAAWsB,EAAEpD,EAAEqD,EAAE6oD,GAAGpqD,EAAE9B,KAAQ,IAAIqD,EAAE,MAAMpB,EAAEkoD,GAAG4B,GAAGjqD,EAAE,GAAGmpD,GAAGnpD,EAAEsB,GAAG8nD,GAAGppD,EAAE+D,MAAK5D,EAAE,GAAG,IAAIoB,EAAE4nD,GAAGnpD,EAAEsB,OAChf,CAAuB,GAAtBpD,EAAE8B,EAAE69B,QAAQV,UAAa,KAAO,GAAF77B,KAGnC,SAAYtB,GAAG,IAAI,IAAIuB,EAAEvB,IAAI,CAAC,GAAW,MAARuB,EAAE87B,MAAY,CAAC,IAAIl9B,EAAEoB,EAAEs2C,YAAY,GAAG,OAAO13C,GAAe,QAAXA,EAAEA,EAAEsjB,QAAiB,IAAI,IAAIniB,EAAE,EAAEA,EAAEnB,EAAEnB,OAAOsC,IAAI,CAAC,IAAIpD,EAAEiC,EAAEmB,GAAG/B,EAAErB,EAAE69C,YAAY79C,EAAEA,EAAE4C,MAAM,IAAI,IAAIuM,GAAG9N,IAAIrB,GAAG,OAAM,CAAE,CAAC,MAAMqE,GAAG,OAAM,CAAE,CAAC,CAAC,CAAW,GAAVpC,EAAEoB,EAAEo8B,MAAwB,MAAfp8B,EAAE+iD,cAAoB,OAAOnkD,EAAEA,EAAEi9B,OAAO77B,EAAEA,EAAEpB,MAAM,CAAC,GAAGoB,IAAIvB,EAAE,MAAM,KAAK,OAAOuB,EAAEq8B,SAAS,CAAC,GAAG,OAAOr8B,EAAE67B,QAAQ77B,EAAE67B,SAASp9B,EAAE,OAAM,EAAGuB,EAAEA,EAAE67B,MAAM,CAAC77B,EAAEq8B,QAAQR,OAAO77B,EAAE67B,OAAO77B,EAAEA,EAAEq8B,OAAO,CAAC,CAAC,OAAM,CAAE,CAHvXysB,CAAGnsD,KAAe,KAAVqD,EAAEwoD,GAAG/pD,EAAEsB,MAAmB,KAAR/B,EAAEghC,GAAGvgC,MAAWsB,EAAE/B,EAAEgC,EAAE6oD,GAAGpqD,EAAET,KAAK,IAAIgC,GAAG,MAAMpB,EAAEkoD,GAAG4B,GAAGjqD,EAAE,GAAGmpD,GAAGnpD,EAAEsB,GAAG8nD,GAAGppD,EAAE+D,MAAK5D,EAAqC,OAAnCH,EAAEsqD,aAAapsD,EAAE8B,EAAEuqD,cAAcjpD,EAASC,GAAG,KAAK,EAAE,KAAK,EAAE,MAAMG,MAAMF,EAAE,MAAM,KAAK,EAC8B,KAAK,EAAEgpD,GAAGxqD,EAAEyoD,GAAGE,IAAI,MAD7B,KAAK,EAAU,GAARQ,GAAGnpD,EAAEsB,IAAS,UAAFA,KAAeA,GAAiB,IAAbC,EAAEimD,GAAG,IAAIzjD,MAAU,CAAC,GAAG,IAAIi8B,GAAGhgC,EAAE,GAAG,MAAyB,KAAnB9B,EAAE8B,EAAEkgC,gBAAqB5+B,KAAKA,EAAE,CAAC4C,KAAIlE,EAAEmgC,aAAangC,EAAEkgC,eAAehiC,EAAE,KAAK,CAAC8B,EAAEyqD,cAAc1Z,GAAGyZ,GAAGrpD,KAAK,KAAKnB,EAAEyoD,GAAGE,IAAIpnD,GAAG,KAAK,CAACipD,GAAGxqD,EAAEyoD,GAAGE,IAAI,MAAM,KAAK,EAAU,GAARQ,GAAGnpD,EAAEsB,IAAS,QAAFA,KAC9eA,EAAE,MAAqB,IAAfC,EAAEvB,EAAE2gC,WAAeziC,GAAG,EAAE,EAAEoD,GAAG,CAAC,IAAIiB,EAAE,GAAGg9B,GAAGj+B,GAAG/B,EAAE,GAAGgD,GAAEA,EAAEhB,EAAEgB,IAAKrE,IAAIA,EAAEqE,GAAGjB,IAAI/B,CAAC,CAAqG,GAApG+B,EAAEpD,EAAqG,IAA3FoD,GAAG,KAAXA,EAAEyC,KAAIzC,GAAW,IAAI,IAAIA,EAAE,IAAI,KAAKA,EAAE,KAAK,KAAKA,EAAE,KAAK,IAAIA,EAAE,IAAI,KAAKA,EAAE,KAAK,KAAK2mD,GAAG3mD,EAAE,OAAOA,GAAU,CAACtB,EAAEyqD,cAAc1Z,GAAGyZ,GAAGrpD,KAAK,KAAKnB,EAAEyoD,GAAGE,IAAIrnD,GAAG,KAAK,CAACkpD,GAAGxqD,EAAEyoD,GAAGE,IAAI,MAA+B,QAAQ,MAAMjnD,MAAMF,EAAE,MAAO,CAAC,CAAW,OAAV4nD,GAAGppD,EAAE+D,MAAY/D,EAAEqpD,eAAelpD,EAAE0pD,GAAG1oD,KAAK,KAAKnB,GAAG,IAAI,CACrX,SAASoqD,GAAGpqD,EAAEuB,GAAG,IAAIpB,EAAEqoD,GAA2G,OAAxGxoD,EAAE69B,QAAQN,cAAcgF,eAAe0nB,GAAGjqD,EAAEuB,GAAG87B,OAAO,KAAe,KAAVr9B,EAAE+pD,GAAG/pD,EAAEuB,MAAWA,EAAEknD,GAAGA,GAAGtoD,EAAE,OAAOoB,GAAG0jD,GAAG1jD,IAAWvB,CAAC,CAAC,SAASilD,GAAGjlD,GAAG,OAAOyoD,GAAGA,GAAGzoD,EAAEyoD,GAAG1mD,KAAK7C,MAAMupD,GAAGzoD,EAAE,CAE5L,SAASmpD,GAAGnpD,EAAEuB,GAAuD,IAApDA,IAAIgnD,GAAGhnD,IAAI+mD,GAAGtoD,EAAEkgC,gBAAgB3+B,EAAEvB,EAAEmgC,cAAc5+B,EAAMvB,EAAEA,EAAEspD,gBAAgB,EAAE/nD,GAAG,CAAC,IAAIpB,EAAE,GAAGo/B,GAAGh+B,GAAGD,EAAE,GAAGnB,EAAEH,EAAEG,IAAI,EAAEoB,IAAID,CAAC,CAAC,CAAC,SAASqoD,GAAG3pD,GAAG,GAAG,KAAO,EAAF8C,IAAK,MAAMpB,MAAMF,EAAE,MAAMsoD,KAAK,IAAIvoD,EAAEy+B,GAAGhgC,EAAE,GAAG,GAAG,KAAO,EAAFuB,GAAK,OAAO6nD,GAAGppD,EAAE+D,MAAK,KAAK,IAAI5D,EAAE4pD,GAAG/pD,EAAEuB,GAAG,GAAG,IAAIvB,EAAEgzB,KAAK,IAAI7yB,EAAE,CAAC,IAAImB,EAAEi/B,GAAGvgC,GAAG,IAAIsB,IAAIC,EAAED,EAAEnB,EAAEiqD,GAAGpqD,EAAEsB,GAAG,CAAC,GAAG,IAAInB,EAAE,MAAMA,EAAEkoD,GAAG4B,GAAGjqD,EAAE,GAAGmpD,GAAGnpD,EAAEuB,GAAG6nD,GAAGppD,EAAE+D,MAAK5D,EAAE,GAAG,IAAIA,EAAE,MAAMuB,MAAMF,EAAE,MAAiF,OAA3ExB,EAAEsqD,aAAatqD,EAAE69B,QAAQV,UAAUn9B,EAAEuqD,cAAchpD,EAAEipD,GAAGxqD,EAAEyoD,GAAGE,IAAIS,GAAGppD,EAAE+D,MAAY,IAAI,CACvd,SAAS2mD,GAAG1qD,EAAEuB,GAAG,IAAIpB,EAAE2C,GAAEA,IAAG,EAAE,IAAI,OAAO9C,EAAEuB,EAAE,CAAC,QAAY,KAAJuB,GAAE3C,KAAUulD,GAAG3hD,KAAI,IAAIkvC,IAAIG,KAAK,CAAC,CAAC,SAASuX,GAAG3qD,GAAG,OAAO6oD,IAAI,IAAIA,GAAG71B,KAAK,KAAO,EAAFlwB,KAAMgnD,KAAK,IAAIvoD,EAAEuB,GAAEA,IAAG,EAAE,IAAI3C,EAAEioD,GAAGjlB,WAAW7hC,EAAEgC,GAAE,IAAI,GAAG8kD,GAAGjlB,WAAW,KAAK7/B,GAAE,EAAEtD,EAAE,OAAOA,GAAG,CAAC,QAAQsD,GAAEhC,EAAE8mD,GAAGjlB,WAAWhjC,EAAM,KAAO,GAAX2C,GAAEvB,KAAa6xC,IAAI,CAAC,CAAC,SAASuS,KAAKjD,GAAGD,GAAG5kB,QAAQj7B,GAAE6/C,GAAG,CAChT,SAASwH,GAAGjqD,EAAEuB,GAAGvB,EAAEsqD,aAAa,KAAKtqD,EAAEuqD,cAAc,EAAE,IAAIpqD,EAAEH,EAAEyqD,cAAiD,IAAlC,IAAItqD,IAAIH,EAAEyqD,eAAe,EAAEzZ,GAAG7wC,IAAO,OAAOoF,GAAE,IAAIpF,EAAEoF,GAAE63B,OAAO,OAAOj9B,GAAG,CAAC,IAAImB,EAAEnB,EAAQ,OAAN8zC,GAAG3yC,GAAUA,EAAE0xB,KAAK,KAAK,EAA6B,QAA3B1xB,EAAEA,EAAE0M,KAAKwkC,yBAA4B,IAASlxC,GAAGmxC,KAAK,MAAM,KAAK,EAAE8G,KAAK32C,GAAEqvC,IAAIrvC,GAAEuD,IAAG0zC,KAAK,MAAM,KAAK,EAAEJ,GAAGn4C,GAAG,MAAM,KAAK,EAAEi4C,KAAK,MAAM,KAAK,GAAc,KAAK,GAAG32C,GAAEgC,IAAG,MAAM,KAAK,GAAG+xC,GAAGr1C,EAAE0M,KAAKolB,UAAU,MAAM,KAAK,GAAG,KAAK,GAAGuyB,KAAKxlD,EAAEA,EAAEi9B,MAAM,CAAqE,GAApEp3B,GAAEhG,EAAEuF,GAAEvF,EAAE81C,GAAG91C,EAAE69B,QAAQ,MAAMx3B,GAAEq8C,GAAGnhD,EAAEmC,GAAE,EAAE2kD,GAAG,KAAKE,GAAGD,GAAGxP,GAAG,EAAE2P,GAAGD,GAAG,KAAQ,OAAOlR,GAAG,CAAC,IAAI/1C,EAC1f,EAAEA,EAAE+1C,GAAGt4C,OAAOuC,IAAI,GAA2B,QAAhBD,GAARnB,EAAEm3C,GAAG/1C,IAAOk2C,aAAqB,CAACt3C,EAAEs3C,YAAY,KAAK,IAAIv5C,EAAEoD,EAAEuC,KAAKtE,EAAEY,EAAE+3C,QAAQ,GAAG,OAAO34C,EAAE,CAAC,IAAIgD,EAAEhD,EAAEsE,KAAKtE,EAAEsE,KAAK3F,EAAEoD,EAAEuC,KAAKtB,CAAC,CAACpC,EAAE+3C,QAAQ52C,CAAC,CAACg2C,GAAG,IAAI,CAAC,OAAOt3C,CAAC,CAC3K,SAASmqD,GAAGnqD,EAAEuB,GAAG,OAAE,CAAC,IAAIpB,EAAEoF,GAAE,IAAuB,GAAnBmxC,KAAKqD,GAAGlc,QAAQ+c,GAAMT,GAAG,CAAC,IAAI,IAAI74C,EAAE6C,GAAEo5B,cAAc,OAAOj8B,GAAG,CAAC,IAAIpD,EAAEoD,EAAE05C,MAAM,OAAO98C,IAAIA,EAAEg6C,QAAQ,MAAM52C,EAAEA,EAAEuC,IAAI,CAACs2C,IAAG,CAAE,CAA4C,GAA3CD,GAAG,EAAE13C,GAAEiC,GAAEN,GAAE,KAAKi2C,IAAG,EAAGC,GAAG,EAAE8N,GAAGtqB,QAAQ,KAAQ,OAAO19B,GAAG,OAAOA,EAAEi9B,OAAO,CAAC15B,GAAE,EAAE2kD,GAAG9mD,EAAEgE,GAAE,KAAK,KAAK,CAACvF,EAAE,CAAC,IAAIT,EAAES,EAAEuC,EAAEpC,EAAEi9B,OAAOh8B,EAAEjB,EAAE2B,EAAEP,EAAqB,GAAnBA,EAAE8E,GAAEjF,EAAEi8B,OAAO,MAAS,OAAOv7B,GAAG,kBAAkBA,GAAG,oBAAoBA,EAAE8E,KAAK,CAAC,IAAIpG,EAAEsB,EAAEzB,EAAEe,EAAEuC,EAAEtD,EAAE2yB,IAAI,GAAG,KAAY,EAAP3yB,EAAE+c,QAAU,IAAIzZ,GAAG,KAAKA,GAAG,KAAKA,GAAG,CAAC,IAAI7E,EAAEuB,EAAE88B,UAAUr+B,GAAGuB,EAAEw3C,YAAY/4C,EAAE+4C,YAAYx3C,EAAEk9B,cAAcz+B,EAAEy+B,cACxel9B,EAAE42C,MAAMn4C,EAAEm4C,QAAQ52C,EAAEw3C,YAAY,KAAKx3C,EAAEk9B,cAAc,KAAK,CAAC,IAAI97B,EAAEggD,GAAGl/C,GAAG,GAAG,OAAOd,EAAE,CAACA,EAAE47B,QAAQ,IAAIqkB,GAAGjgD,EAAEc,EAAEnB,EAAE7B,EAAEgC,GAAU,EAAPE,EAAE2b,MAAQkkC,GAAG/hD,EAAEiB,EAAEe,GAAOO,EAAEtB,EAAE,IAAIhC,GAAZ+C,EAAEE,GAAco2C,YAAY,GAAG,OAAOr5C,EAAE,CAAC,IAAIL,EAAE,IAAI0E,IAAI1E,EAAEqV,IAAI1R,GAAGP,EAAEs2C,YAAY15C,CAAC,MAAMK,EAAEgV,IAAI1R,GAAG,MAAM9B,CAAC,CAAM,GAAG,KAAO,EAAFuB,GAAK,CAAC+/C,GAAG/hD,EAAEiB,EAAEe,GAAG2iD,KAAK,MAAMlkD,CAAC,CAAC8B,EAAEJ,MAAMF,EAAE,KAAM,MAAM,GAAGoC,IAAU,EAAPxC,EAAEgc,KAAO,CAAC,IAAIhX,EAAEq7C,GAAGl/C,GAAG,GAAG,OAAO6D,EAAE,CAAC,KAAa,MAARA,EAAEi3B,SAAej3B,EAAEi3B,OAAO,KAAKqkB,GAAGt7C,EAAE7D,EAAEnB,EAAE7B,EAAEgC,GAAG8zC,GAAGqL,GAAG5+C,EAAEV,IAAI,MAAMpB,CAAC,CAAC,CAACT,EAAEuC,EAAE4+C,GAAG5+C,EAAEV,GAAG,IAAIsC,KAAIA,GAAE,GAAG,OAAO8kD,GAAGA,GAAG,CAACjpD,GAAGipD,GAAGzmD,KAAKxC,GAAGA,EAAEgD,EAAE,EAAE,CAAC,OAAOhD,EAAEyzB,KAAK,KAAK,EAAEzzB,EAAE89B,OAAO,MACpf97B,IAAIA,EAAEhC,EAAE03C,OAAO11C,EAAkBq3C,GAAGr5C,EAAbuhD,GAAGvhD,EAAEuC,EAAEP,IAAW,MAAMvB,EAAE,KAAK,EAAEoB,EAAEU,EAAE,IAAIlD,EAAEW,EAAEyO,KAAKvN,EAAElB,EAAEu8B,UAAU,GAAG,KAAa,IAARv8B,EAAE89B,SAAa,oBAAoBz+B,EAAEsiD,0BAA0B,OAAOzgD,GAAG,oBAAoBA,EAAE0gD,oBAAoB,OAAOC,KAAKA,GAAGn+C,IAAIxC,KAAK,CAAClB,EAAE89B,OAAO,MAAM97B,IAAIA,EAAEhC,EAAE03C,OAAO11C,EAAkBq3C,GAAGr5C,EAAb0hD,GAAG1hD,EAAE6B,EAAEG,IAAW,MAAMvB,CAAC,EAAET,EAAEA,EAAE69B,MAAM,OAAO,OAAO79B,EAAE,CAACqrD,GAAGzqD,EAAE,CAAC,MAAM6vC,GAAIzuC,EAAEyuC,EAAGzqC,KAAIpF,GAAG,OAAOA,IAAIoF,GAAEpF,EAAEA,EAAEi9B,QAAQ,QAAQ,CAAC,KAAK,CAAS,CAAC,SAAS4sB,KAAK,IAAIhqD,EAAEkoD,GAAGrqB,QAAsB,OAAdqqB,GAAGrqB,QAAQ+c,GAAU,OAAO56C,EAAE46C,GAAG56C,CAAC,CACrd,SAASkkD,KAAQ,IAAIxgD,IAAG,IAAIA,IAAG,IAAIA,KAAEA,GAAE,GAAE,OAAOsC,IAAG,KAAQ,UAAH8yC,KAAe,KAAQ,UAAHwP,KAAea,GAAGnjD,GAAEK,GAAE,CAAC,SAAS0jD,GAAG/pD,EAAEuB,GAAG,IAAIpB,EAAE2C,GAAEA,IAAG,EAAE,IAAIxB,EAAE0oD,KAAqC,IAA7BhkD,KAAIhG,GAAGqG,KAAI9E,IAAEonD,GAAG,KAAKsB,GAAGjqD,EAAEuB,UAAUspD,KAAK,KAAK,CAAC,MAAM3sD,GAAGisD,GAAGnqD,EAAE9B,EAAE,CAAgC,GAAtBw4C,KAAK5zC,GAAE3C,EAAE+nD,GAAGrqB,QAAQv8B,EAAK,OAAOiE,GAAE,MAAM7D,MAAMF,EAAE,MAAiB,OAAXwE,GAAE,KAAKK,GAAE,EAAS3C,EAAC,CAAC,SAASmnD,KAAK,KAAK,OAAOtlD,IAAGulD,GAAGvlD,GAAE,CAAC,SAAS2kD,KAAK,KAAK,OAAO3kD,KAAI64B,MAAM0sB,GAAGvlD,GAAE,CAAC,SAASulD,GAAG9qD,GAAG,IAAIuB,EAAEymD,GAAGhoD,EAAEm9B,UAAUn9B,EAAE0iD,IAAI1iD,EAAEk1C,cAAcl1C,EAAE00C,aAAa,OAAOnzC,EAAEqpD,GAAG5qD,GAAGuF,GAAEhE,EAAE4mD,GAAGtqB,QAAQ,IAAI,CAC1d,SAAS+sB,GAAG5qD,GAAG,IAAIuB,EAAEvB,EAAE,EAAE,CAAC,IAAIG,EAAEoB,EAAE47B,UAAqB,GAAXn9B,EAAEuB,EAAE67B,OAAU,KAAa,MAAR77B,EAAE87B,QAAc,GAAgB,QAAbl9B,EAAE6kD,GAAG7kD,EAAEoB,EAAEmhD,KAAkB,YAAJn9C,GAAEpF,OAAc,CAAW,GAAG,QAAbA,EAAEylD,GAAGzlD,EAAEoB,IAAmC,OAAnBpB,EAAEk9B,OAAO,WAAM93B,GAAEpF,GAAS,GAAG,OAAOH,EAAmE,OAAX0D,GAAE,OAAE6B,GAAE,MAA5DvF,EAAEq9B,OAAO,MAAMr9B,EAAEskD,aAAa,EAAEtkD,EAAEw0C,UAAU,IAA4B,CAAa,GAAG,QAAfjzC,EAAEA,EAAEq8B,SAAyB,YAAJr4B,GAAEhE,GAASgE,GAAEhE,EAAEvB,CAAC,OAAO,OAAOuB,GAAG,IAAImC,KAAIA,GAAE,EAAE,CAAC,SAAS8mD,GAAGxqD,EAAEuB,EAAEpB,GAAG,IAAImB,EAAEgC,GAAEpF,EAAEkqD,GAAGjlB,WAAW,IAAIilB,GAAGjlB,WAAW,KAAK7/B,GAAE,EAC3Y,SAAYtD,EAAEuB,EAAEpB,EAAEmB,GAAG,GAAGwoD,WAAW,OAAOjB,IAAI,GAAG,KAAO,EAAF/lD,IAAK,MAAMpB,MAAMF,EAAE,MAAMrB,EAAEH,EAAEsqD,aAAa,IAAIpsD,EAAE8B,EAAEuqD,cAAc,GAAG,OAAOpqD,EAAE,OAAO,KAA2C,GAAtCH,EAAEsqD,aAAa,KAAKtqD,EAAEuqD,cAAc,EAAKpqD,IAAIH,EAAE69B,QAAQ,MAAMn8B,MAAMF,EAAE,MAAMxB,EAAEqpD,aAAa,KAAKrpD,EAAEypD,iBAAiB,EAAE,IAAIlqD,EAAEY,EAAE82C,MAAM92C,EAAE22C,WAA8J,GAzNtT,SAAY92C,EAAEuB,GAAG,IAAIpB,EAAEH,EAAEigC,cAAc1+B,EAAEvB,EAAEigC,aAAa1+B,EAAEvB,EAAEkgC,eAAe,EAAElgC,EAAEmgC,YAAY,EAAEngC,EAAEupD,cAAchoD,EAAEvB,EAAE+qD,kBAAkBxpD,EAAEvB,EAAEogC,gBAAgB7+B,EAAEA,EAAEvB,EAAEqgC,cAAc,IAAI/+B,EAAEtB,EAAE2gC,WAAW,IAAI3gC,EAAEA,EAAEspD,gBAAgB,EAAEnpD,GAAG,CAAC,IAAIjC,EAAE,GAAGqhC,GAAGp/B,GAAGZ,EAAE,GAAGrB,EAAEqD,EAAErD,GAAG,EAAEoD,EAAEpD,IAAI,EAAE8B,EAAE9B,IAAI,EAAEiC,IAAIZ,CAAC,CAAC,CAyN5GyrD,CAAGhrD,EAAET,GAAGS,IAAIgG,KAAIT,GAAES,GAAE,KAAKK,GAAE,GAAG,KAAoB,KAAflG,EAAEmkD,eAAoB,KAAa,KAARnkD,EAAEk9B,QAAaurB,KAAKA,IAAG,EAAGgB,GAAG7qB,IAAG,WAAgB,OAAL+qB,KAAY,IAAI,KAAIvqD,EAAE,KAAa,MAARY,EAAEk9B,OAAgB,KAAoB,MAAfl9B,EAAEmkD,eAAqB/kD,EAAE,CAACA,EAAE6oD,GAAGjlB,WAAWilB,GAAGjlB,WAAW,KAChf,IAAI5gC,EAAEe,GAAEA,GAAE,EAAE,IAAIlC,EAAE0B,GAAEA,IAAG,EAAEqlD,GAAGtqB,QAAQ,KA1CpC,SAAY79B,EAAEuB,GAAgB,GAAbovC,GAAG1N,GAAar3B,GAAV5L,EAAE4M,MAAc,CAAC,GAAG,mBAAmB5M,EAAE,IAAIG,EAAE,CAACkX,MAAMrX,EAAE4sC,eAAeD,IAAI3sC,EAAE6sC,mBAAmB7sC,EAAE,CAA8C,IAAIsB,GAAjDnB,GAAGA,EAAEH,EAAEg1B,gBAAgB70B,EAAE2sC,aAAaptC,QAAeqtC,cAAc5sC,EAAE4sC,eAAe,GAAGzrC,GAAG,IAAIA,EAAE0rC,WAAW,CAAC7sC,EAAEmB,EAAE2rC,WAAW,IAAI/uC,EAAEoD,EAAE4rC,aAAa3tC,EAAE+B,EAAE6rC,UAAU7rC,EAAEA,EAAE8rC,YAAY,IAAIjtC,EAAEy2B,SAASr3B,EAAEq3B,QAAQ,CAAC,MAAM3yB,GAAG9D,EAAE,KAAK,MAAMH,CAAC,CAAC,IAAIuC,EAAE,EAAEnB,GAAG,EAAEU,GAAG,EAAEtB,EAAE,EAAEH,EAAE,EAAEsD,EAAE3D,EAAElB,EAAE,KAAKyC,EAAE,OAAO,CAAC,IAAI,IAAIE,EAAKkC,IAAIxD,GAAG,IAAIjC,GAAG,IAAIyF,EAAEizB,WAAWx1B,EAAEmB,EAAErE,GAAGyF,IAAIpE,GAAG,IAAI+B,GAAG,IAAIqC,EAAEizB,WAAW90B,EAAES,EAAEjB,GAAG,IAAIqC,EAAEizB,WAAWr0B,GACnfoB,EAAEkzB,UAAU73B,QAAW,QAAQyC,EAAEkC,EAAE0yB,aAAkBv3B,EAAE6E,EAAEA,EAAElC,EAAE,OAAO,CAAC,GAAGkC,IAAI3D,EAAE,MAAMuB,EAA8C,GAA5CzC,IAAIqB,KAAKK,IAAItC,IAAIkD,EAAEmB,GAAGzD,IAAIS,KAAKc,IAAIiB,IAAIQ,EAAES,GAAM,QAAQd,EAAEkC,EAAEwoC,aAAa,MAAUrtC,GAAJ6E,EAAE7E,GAAM08B,UAAU,CAAC73B,EAAElC,CAAC,CAACtB,GAAG,IAAIiB,IAAI,IAAIU,EAAE,KAAK,CAACuV,MAAMjW,EAAEurC,IAAI7qC,EAAE,MAAM3B,EAAE,IAAI,CAACA,EAAEA,GAAG,CAACkX,MAAM,EAAEs1B,IAAI,EAAE,MAAMxsC,EAAE,KAA+C,IAA1CywC,GAAG,CAACpE,YAAYxsC,EAAEysC,eAAetsC,GAAG8iC,IAAG,EAAO79B,GAAE7D,EAAE,OAAO6D,IAAG,GAAOpF,GAAJuB,EAAE6D,IAAMu4B,MAAM,KAAoB,KAAfp8B,EAAE+iD,eAAoB,OAAOtkD,EAAEA,EAAEo9B,OAAO77B,EAAE6D,GAAEpF,OAAO,KAAK,OAAOoF,IAAG,CAAC7D,EAAE6D,GAAE,IAAI,IAAI5G,EAAE+C,EAAE47B,UAAU,GAAG,KAAa,KAAR57B,EAAE87B,OAAY,OAAO97B,EAAEyxB,KAAK,KAAK,EAAE,KAAK,GAAG,KAAK,GACvK,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,MAA3W,KAAK,EAAE,GAAG,OAAOx0B,EAAE,CAAC,IAAIL,EAAEK,EAAE02C,cAAc9uC,EAAE5H,EAAE++B,cAAcz9B,EAAEyB,EAAEu6B,UAAUl9B,EAAEkB,EAAEwgD,wBAAwB/+C,EAAEgzC,cAAchzC,EAAEyM,KAAK7P,EAAE8gD,GAAG19C,EAAEyM,KAAK7P,GAAGiI,GAAGtG,EAAEioD,oCAAoCnpD,CAAC,CAAC,MAAM,KAAK,EAAE,IAAI6B,EAAEc,EAAEu6B,UAAU0G,cAAc,IAAI/hC,EAAEm2B,SAASn2B,EAAEo1B,YAAY,GAAG,IAAIp1B,EAAEm2B,UAAUn2B,EAAEisC,iBAAiBjsC,EAAE61B,YAAY71B,EAAEisC,iBAAiB,MAAyC,QAAQ,MAAMhrC,MAAMF,EAAE,MAAO,CAAC,MAAMyC,GAAGqB,GAAE/D,EAAEA,EAAE67B,OAAOn5B,EAAE,CAAa,GAAG,QAAfjE,EAAEuB,EAAEq8B,SAAoB,CAAC59B,EAAEo9B,OAAO77B,EAAE67B,OAAOh4B,GAAEpF,EAAE,KAAK,CAACoF,GAAE7D,EAAE67B,MAAM,CAAC5+B,EAAE0nD,GAAGA,IAAG,CAAW,CAwCld+E,CAAGjrD,EAAEG,GAAGknD,GAAGlnD,EAAEH,GAAGwJ,GAAGonC,IAAI3N,KAAK0N,GAAGC,GAAGD,GAAG,KAAK3wC,EAAE69B,QAAQ19B,EAAEwnD,GAAGxnD,EAAEH,EAAE9B,GAAGogC,KAAKx7B,GAAE1B,EAAEkC,GAAEf,EAAE6lD,GAAGjlB,WAAW5jC,CAAC,MAAMS,EAAE69B,QAAQ19B,EAAsF,GAApFyoD,KAAKA,IAAG,EAAGC,GAAG7oD,EAAE8oD,GAAG5qD,GAAGqB,EAAES,EAAEigC,aAAa,IAAI1gC,IAAI6hD,GAAG,MAhOmJ,SAAYphD,GAAG,GAAGs/B,IAAI,oBAAoBA,GAAG4rB,kBAAkB,IAAI5rB,GAAG4rB,kBAAkB7rB,GAAGr/B,OAAE,EAAO,OAAuB,IAAhBA,EAAE69B,QAAQR,OAAW,CAAC,MAAM97B,GAAG,CAAC,CAgOxR4pD,CAAGhrD,EAAE27B,WAAastB,GAAGppD,EAAE+D,MAAQ,OAAOxC,EAAE,IAAID,EAAEtB,EAAEorD,mBAAmBjrD,EAAE,EAAEA,EAAEoB,EAAEvC,OAAOmB,IAAIjC,EAAEqD,EAAEpB,GAAGmB,EAAEpD,EAAE4C,MAAM,CAACugD,eAAenjD,EAAEwiB,MAAMhZ,OAAOxJ,EAAEwJ,SAAS,GAAGq5C,GAAG,MAAMA,IAAG,EAAG/gD,EAAEghD,GAAGA,GAAG,KAAKhhD,EAAE,KAAQ,EAAH8oD,KAAO,IAAI9oD,EAAEgzB,KAAK82B,KAAKvqD,EAAES,EAAEigC,aAAa,KAAO,EAAF1gC,GAAKS,IAAIgpD,GAAGD,MAAMA,GAAG,EAAEC,GAAGhpD,GAAG+oD,GAAG,EAAE3V,IAAgB,CAFxFiY,CAAGrrD,EAAEuB,EAAEpB,EAAEmB,EAAE,CAAC,QAAQ8mD,GAAGjlB,WAAWjlC,EAAEoF,GAAEhC,CAAC,CAAC,OAAO,IAAI,CAGhc,SAASwoD,KAAK,GAAG,OAAOjB,GAAG,CAAC,IAAI7oD,EAAE6gC,GAAGioB,IAAIvnD,EAAE6mD,GAAGjlB,WAAWhjC,EAAEmD,GAAE,IAAmC,GAA/B8kD,GAAGjlB,WAAW,KAAK7/B,GAAE,GAAGtD,EAAE,GAAGA,EAAK,OAAO6oD,GAAG,IAAIvnD,GAAE,MAAO,CAAmB,GAAlBtB,EAAE6oD,GAAGA,GAAG,KAAKC,GAAG,EAAK,KAAO,EAAFhmD,IAAK,MAAMpB,MAAMF,EAAE,MAAM,IAAItD,EAAE4E,GAAO,IAALA,IAAG,EAAMsC,GAAEpF,EAAE69B,QAAQ,OAAOz4B,IAAG,CAAC,IAAI7F,EAAE6F,GAAE7C,EAAEhD,EAAEo+B,MAAM,GAAG,KAAa,GAARv4B,GAAEi4B,OAAU,CAAC,IAAIj8B,EAAE7B,EAAEi1C,UAAU,GAAG,OAAOpzC,EAAE,CAAC,IAAI,IAAIU,EAAE,EAAEA,EAAEV,EAAEpC,OAAO8C,IAAI,CAAC,IAAItB,EAAEY,EAAEU,GAAG,IAAIsD,GAAE5E,EAAE,OAAO4E,IAAG,CAAC,IAAI/E,EAAE+E,GAAE,OAAO/E,EAAE2yB,KAAK,KAAK,EAAE,KAAK,GAAG,KAAK,GAAGmzB,GAAG,EAAE9lD,EAAEd,GAAG,IAAIoE,EAAEtD,EAAEs9B,MAAM,GAAG,OAAOh6B,EAAEA,EAAEy5B,OAAO/8B,EAAE+E,GAAEzB,OAAO,KAAK,OAAOyB,IAAG,CAAK,IAAItG,GAARuB,EAAE+E,IAAUw4B,QAAQn8B,EAAEpB,EAAE+8B,OAAa,GAANkpB,GAAGjmD,GAAMA,IACnfG,EAAE,CAAC4E,GAAE,KAAK,KAAK,CAAC,GAAG,OAAOtG,EAAE,CAACA,EAAEs+B,OAAO37B,EAAE2D,GAAEtG,EAAE,KAAK,CAACsG,GAAE3D,CAAC,CAAC,CAAC,CAAC,IAAIjD,EAAEe,EAAE49B,UAAU,GAAG,OAAO3+B,EAAE,CAAC,IAAIL,EAAEK,EAAEm/B,MAAM,GAAG,OAAOx/B,EAAE,CAACK,EAAEm/B,MAAM,KAAK,EAAE,CAAC,IAAIv3B,EAAEjI,EAAEy/B,QAAQz/B,EAAEy/B,QAAQ,KAAKz/B,EAAEiI,CAAC,OAAO,OAAOjI,EAAE,CAAC,CAACiH,GAAE7F,CAAC,CAAC,CAAC,GAAG,KAAoB,KAAfA,EAAE+kD,eAAoB,OAAO/hD,EAAEA,EAAE66B,OAAO79B,EAAE6F,GAAE7C,OAAOhB,EAAE,KAAK,OAAO6D,IAAG,CAAK,GAAG,KAAa,MAApB7F,EAAE6F,IAAYi4B,OAAY,OAAO99B,EAAEyzB,KAAK,KAAK,EAAE,KAAK,GAAG,KAAK,GAAGmzB,GAAG,EAAE5mD,EAAEA,EAAE69B,QAAQ,IAAIt9B,EAAEP,EAAEq+B,QAAQ,GAAG,OAAO99B,EAAE,CAACA,EAAEs9B,OAAO79B,EAAE69B,OAAOh4B,GAAEtF,EAAE,MAAMyB,CAAC,CAAC6D,GAAE7F,EAAE69B,MAAM,CAAC,CAAC,IAAIx+B,EAAEoB,EAAE69B,QAAQ,IAAIz4B,GAAExG,EAAE,OAAOwG,IAAG,CAAK,IAAI3E,GAAR8B,EAAE6C,IAAUu4B,MAAM,GAAG,KAAoB,KAAfp7B,EAAE+hD,eAAoB,OAClf7jD,EAAEA,EAAE28B,OAAO76B,EAAE6C,GAAE3E,OAAOc,EAAE,IAAIgB,EAAE3D,EAAE,OAAOwG,IAAG,CAAK,GAAG,KAAa,MAApBhE,EAAEgE,IAAYi4B,OAAY,IAAI,OAAOj8B,EAAE4xB,KAAK,KAAK,EAAE,KAAK,GAAG,KAAK,GAAGozB,GAAG,EAAEhlD,GAAG,CAAC,MAAM4uC,GAAI1qC,GAAElE,EAAEA,EAAEg8B,OAAO4S,EAAG,CAAC,GAAG5uC,IAAImB,EAAE,CAAC6C,GAAE,KAAK,MAAM7D,CAAC,CAAC,IAAI0C,EAAE7C,EAAEw8B,QAAQ,GAAG,OAAO35B,EAAE,CAACA,EAAEm5B,OAAOh8B,EAAEg8B,OAAOh4B,GAAEnB,EAAE,MAAM1C,CAAC,CAAC6D,GAAEhE,EAAEg8B,MAAM,CAAC,CAAU,GAATt6B,GAAE5E,EAAEk1C,KAAQ9T,IAAI,oBAAoBA,GAAGgsB,sBAAsB,IAAIhsB,GAAGgsB,sBAAsBjsB,GAAGr/B,EAAE,CAAC,MAAMgwC,GAAI,CAAC1uC,GAAE,CAAE,CAAC,OAAOA,CAAC,CAAC,QAAQgC,GAAEnD,EAAEioD,GAAGjlB,WAAW5hC,CAAC,CAAC,CAAC,OAAM,CAAE,CAAC,SAASgqD,GAAGvrD,EAAEuB,EAAEpB,GAAyBH,EAAE04C,GAAG14C,EAAjBuB,EAAEu/C,GAAG9gD,EAAfuB,EAAEm/C,GAAGvgD,EAAEoB,GAAY,GAAY,GAAGA,EAAE2C,KAAI,OAAOlE,IAAI0gC,GAAG1gC,EAAE,EAAEuB,GAAG6nD,GAAGppD,EAAEuB,GAAG,CACze,SAAS+D,GAAEtF,EAAEuB,EAAEpB,GAAG,GAAG,IAAIH,EAAEgzB,IAAIu4B,GAAGvrD,EAAEA,EAAEG,QAAQ,KAAK,OAAOoB,GAAG,CAAC,GAAG,IAAIA,EAAEyxB,IAAI,CAACu4B,GAAGhqD,EAAEvB,EAAEG,GAAG,KAAK,CAAM,GAAG,IAAIoB,EAAEyxB,IAAI,CAAC,IAAI1xB,EAAEC,EAAEu6B,UAAU,GAAG,oBAAoBv6B,EAAEyM,KAAKkzC,0BAA0B,oBAAoB5/C,EAAE6/C,oBAAoB,OAAOC,KAAKA,GAAGn+C,IAAI3B,IAAI,CAAuBC,EAAEm3C,GAAGn3C,EAAjBvB,EAAEihD,GAAG1/C,EAAfvB,EAAE0gD,GAAGvgD,EAAEH,GAAY,GAAY,GAAGA,EAAEkE,KAAI,OAAO3C,IAAIm/B,GAAGn/B,EAAE,EAAEvB,GAAGopD,GAAG7nD,EAAEvB,IAAI,KAAK,CAAC,CAACuB,EAAEA,EAAE67B,MAAM,CAAC,CACnV,SAASokB,GAAGxhD,EAAEuB,EAAEpB,GAAG,IAAImB,EAAEtB,EAAEuhD,UAAU,OAAOjgD,GAAGA,EAAE+S,OAAO9S,GAAGA,EAAE2C,KAAIlE,EAAEmgC,aAAangC,EAAEkgC,eAAe//B,EAAE6F,KAAIhG,IAAIqG,GAAElG,KAAKA,IAAI,IAAIuD,IAAG,IAAIA,KAAM,UAAF2C,MAAeA,IAAG,IAAItC,KAAIyjD,GAAGyC,GAAGjqD,EAAE,GAAGuoD,IAAIpoD,GAAGipD,GAAGppD,EAAEuB,EAAE,CAAC,SAASiqD,GAAGxrD,EAAEuB,GAAG,IAAIA,IAAI,KAAY,EAAPvB,EAAEod,MAAQ7b,EAAE,GAAGA,EAAEu+B,GAAU,KAAQ,WAAfA,KAAK,MAAuBA,GAAG,WAAW,IAAI3/B,EAAE+D,KAAc,QAAVlE,EAAE03C,GAAG13C,EAAEuB,MAAcm/B,GAAG1gC,EAAEuB,EAAEpB,GAAGipD,GAAGppD,EAAEG,GAAG,CAAC,SAASgkD,GAAGnkD,GAAG,IAAIuB,EAAEvB,EAAEu9B,cAAcp9B,EAAE,EAAE,OAAOoB,IAAIpB,EAAEoB,EAAEszC,WAAW2W,GAAGxrD,EAAEG,EAAE,CACjZ,SAASgnD,GAAGnnD,EAAEuB,GAAG,IAAIpB,EAAE,EAAE,OAAOH,EAAEgzB,KAAK,KAAK,GAAG,IAAI1xB,EAAEtB,EAAE87B,UAAc59B,EAAE8B,EAAEu9B,cAAc,OAAOr/B,IAAIiC,EAAEjC,EAAE22C,WAAW,MAAM,KAAK,GAAGvzC,EAAEtB,EAAE87B,UAAU,MAAM,QAAQ,MAAMp6B,MAAMF,EAAE,MAAO,OAAOF,GAAGA,EAAE+S,OAAO9S,GAAGiqD,GAAGxrD,EAAEG,EAAE,CAQqK,SAASypD,GAAG5pD,EAAEuB,GAAG,OAAOy8B,GAAGh+B,EAAEuB,EAAE,CACjZ,SAASkqD,GAAGzrD,EAAEuB,EAAEpB,EAAEmB,GAAGnC,KAAK6zB,IAAIhzB,EAAEb,KAAKkS,IAAIlR,EAAEhB,KAAKy+B,QAAQz+B,KAAKw+B,MAAMx+B,KAAKi+B,OAAOj+B,KAAK28B,UAAU38B,KAAK6O,KAAK7O,KAAKo1C,YAAY,KAAKp1C,KAAKoX,MAAM,EAAEpX,KAAKsJ,IAAI,KAAKtJ,KAAKu1C,aAAanzC,EAAEpC,KAAKmsB,aAAansB,KAAKo+B,cAAcp+B,KAAK04C,YAAY14C,KAAK+1C,cAAc,KAAK/1C,KAAKie,KAAK9b,EAAEnC,KAAKmlD,aAAanlD,KAAKk+B,MAAM,EAAEl+B,KAAKq1C,UAAU,KAAKr1C,KAAK23C,WAAW33C,KAAK83C,MAAM,EAAE93C,KAAKg+B,UAAU,IAAI,CAAC,SAASmX,GAAGt0C,EAAEuB,EAAEpB,EAAEmB,GAAG,OAAO,IAAImqD,GAAGzrD,EAAEuB,EAAEpB,EAAEmB,EAAE,CAAC,SAAS2gD,GAAGjiD,GAAiB,UAAdA,EAAEA,EAAEvB,aAAuBuB,EAAE0rD,iBAAiB,CAEpd,SAAS5V,GAAG91C,EAAEuB,GAAG,IAAIpB,EAAEH,EAAEm9B,UACuB,OADb,OAAOh9B,IAAGA,EAAEm0C,GAAGt0C,EAAEgzB,IAAIzxB,EAAEvB,EAAEqR,IAAIrR,EAAEod,OAAQm3B,YAAYv0C,EAAEu0C,YAAYp0C,EAAE6N,KAAKhO,EAAEgO,KAAK7N,EAAE27B,UAAU97B,EAAE87B,UAAU37B,EAAEg9B,UAAUn9B,EAAEA,EAAEm9B,UAAUh9B,IAAIA,EAAEu0C,aAAanzC,EAAEpB,EAAE6N,KAAKhO,EAAEgO,KAAK7N,EAAEk9B,MAAM,EAAEl9B,EAAEmkD,aAAa,EAAEnkD,EAAEq0C,UAAU,MAAMr0C,EAAEk9B,MAAc,SAARr9B,EAAEq9B,MAAel9B,EAAE22C,WAAW92C,EAAE82C,WAAW32C,EAAE82C,MAAMj3C,EAAEi3C,MAAM92C,EAAEw9B,MAAM39B,EAAE29B,MAAMx9B,EAAE+0C,cAAcl1C,EAAEk1C,cAAc/0C,EAAEo9B,cAAcv9B,EAAEu9B,cAAcp9B,EAAE03C,YAAY73C,EAAE63C,YAAYt2C,EAAEvB,EAAEsrB,aAAanrB,EAAEmrB,aAAa,OAAO/pB,EAAE,KAAK,CAAC01C,MAAM11C,EAAE01C,MAAMD,aAAaz1C,EAAEy1C,cAC/e72C,EAAEy9B,QAAQ59B,EAAE49B,QAAQz9B,EAAEoW,MAAMvW,EAAEuW,MAAMpW,EAAEsI,IAAIzI,EAAEyI,IAAWtI,CAAC,CACxD,SAAS61C,GAAGh2C,EAAEuB,EAAEpB,EAAEmB,EAAEpD,EAAEqB,GAAG,IAAIgD,EAAE,EAAM,GAAJjB,EAAEtB,EAAK,oBAAoBA,EAAEiiD,GAAGjiD,KAAKuC,EAAE,QAAQ,GAAG,kBAAkBvC,EAAEuC,EAAE,OAAOvC,EAAE,OAAOA,GAAG,KAAK2xB,EAAG,OAAOwkB,GAAGh2C,EAAEs1B,SAASv3B,EAAEqB,EAAEgC,GAAG,KAAKqwB,EAAGrvB,EAAE,EAAErE,GAAG,EAAE,MAAM,KAAK2zB,EAAG,OAAO7xB,EAAEs0C,GAAG,GAAGn0C,EAAEoB,EAAI,EAAFrD,IAAOq2C,YAAY1iB,EAAG7xB,EAAEi3C,MAAM13C,EAAES,EAAE,KAAKiyB,EAAG,OAAOjyB,EAAEs0C,GAAG,GAAGn0C,EAAEoB,EAAErD,IAAKq2C,YAAYtiB,EAAGjyB,EAAEi3C,MAAM13C,EAAES,EAAE,KAAKkyB,EAAG,OAAOlyB,EAAEs0C,GAAG,GAAGn0C,EAAEoB,EAAErD,IAAKq2C,YAAYriB,EAAGlyB,EAAEi3C,MAAM13C,EAAES,EAAE,KAAKqyB,EAAG,OAAOwxB,GAAG1jD,EAAEjC,EAAEqB,EAAEgC,GAAG,QAAQ,GAAG,kBAAkBvB,GAAG,OAAOA,EAAE,OAAOA,EAAEmzB,UAAU,KAAKrB,EAAGvvB,EAAE,GAAG,MAAMvC,EAAE,KAAK+xB,EAAGxvB,EAAE,EAAE,MAAMvC,EAAE,KAAKgyB,EAAGzvB,EAAE,GACpf,MAAMvC,EAAE,KAAKmyB,EAAG5vB,EAAE,GAAG,MAAMvC,EAAE,KAAKoyB,EAAG7vB,EAAE,GAAGjB,EAAE,KAAK,MAAMtB,EAAE,MAAM0B,MAAMF,EAAE,IAAI,MAAMxB,EAAEA,SAASA,EAAE,KAAuD,OAAjDuB,EAAE+yC,GAAG/xC,EAAEpC,EAAEoB,EAAErD,IAAKq2C,YAAYv0C,EAAEuB,EAAEyM,KAAK1M,EAAEC,EAAE01C,MAAM13C,EAASgC,CAAC,CAAC,SAAS40C,GAAGn2C,EAAEuB,EAAEpB,EAAEmB,GAA2B,OAAxBtB,EAAEs0C,GAAG,EAAEt0C,EAAEsB,EAAEC,IAAK01C,MAAM92C,EAASH,CAAC,CAAC,SAAS6jD,GAAG7jD,EAAEuB,EAAEpB,EAAEmB,GAAuE,OAApEtB,EAAEs0C,GAAG,GAAGt0C,EAAEsB,EAAEC,IAAKgzC,YAAYliB,EAAGryB,EAAEi3C,MAAM92C,EAAEH,EAAE87B,UAAU,CAACyrB,UAAS,GAAWvnD,CAAC,CAAC,SAAS+1C,GAAG/1C,EAAEuB,EAAEpB,GAA8B,OAA3BH,EAAEs0C,GAAG,EAAEt0C,EAAE,KAAKuB,IAAK01C,MAAM92C,EAASH,CAAC,CAC5W,SAASk2C,GAAGl2C,EAAEuB,EAAEpB,GAA8J,OAA3JoB,EAAE+yC,GAAG,EAAE,OAAOt0C,EAAEy1B,SAASz1B,EAAEy1B,SAAS,GAAGz1B,EAAEqR,IAAI9P,IAAK01C,MAAM92C,EAAEoB,EAAEu6B,UAAU,CAAC0G,cAAcxiC,EAAEwiC,cAAcmpB,gBAAgB,KAAK1V,eAAej2C,EAAEi2C,gBAAuB10C,CAAC,CACtL,SAASqqD,GAAG5rD,EAAEuB,EAAEpB,EAAEmB,EAAEpD,GAAGiB,KAAK6zB,IAAIzxB,EAAEpC,KAAKqjC,cAAcxiC,EAAEb,KAAKmrD,aAAanrD,KAAKoiD,UAAUpiD,KAAK0+B,QAAQ1+B,KAAKwsD,gBAAgB,KAAKxsD,KAAKsrD,eAAe,EAAEtrD,KAAKkqD,aAAalqD,KAAKgkD,eAAehkD,KAAKi4C,QAAQ,KAAKj4C,KAAKsqD,iBAAiB,EAAEtqD,KAAKwhC,WAAWF,GAAG,GAAGthC,KAAKmqD,gBAAgB7oB,IAAI,GAAGthC,KAAKihC,eAAejhC,KAAKorD,cAAcprD,KAAK4rD,iBAAiB5rD,KAAKoqD,aAAapqD,KAAKghC,YAAYhhC,KAAK+gC,eAAe/gC,KAAK8gC,aAAa,EAAE9gC,KAAKkhC,cAAcI,GAAG,GAAGthC,KAAK6/C,iBAAiB19C,EAAEnC,KAAKisD,mBAAmBltD,EAAEiB,KAAK0sD,gCAC/e,IAAI,CAAC,SAASC,GAAG9rD,EAAEuB,EAAEpB,EAAEmB,EAAEpD,EAAEqB,EAAEgD,EAAEnB,EAAEU,GAAgN,OAA7M9B,EAAE,IAAI4rD,GAAG5rD,EAAEuB,EAAEpB,EAAEiB,EAAEU,GAAG,IAAIP,GAAGA,EAAE,GAAE,IAAKhC,IAAIgC,GAAG,IAAIA,EAAE,EAAEhC,EAAE+0C,GAAG,EAAE,KAAK,KAAK/yC,GAAGvB,EAAE69B,QAAQt+B,EAAEA,EAAEu8B,UAAU97B,EAAET,EAAEg+B,cAAc,CAACmQ,QAAQpsC,EAAEihC,aAAapiC,EAAE8U,MAAM,KAAKutC,YAAY,KAAKuJ,0BAA0B,MAAMnU,GAAGr4C,GAAUS,CAAC,CACzP,SAASgsD,GAAGhsD,GAAG,IAAIA,EAAE,OAAOgyC,GAAuBhyC,EAAE,CAAC,GAAGk9B,GAA1Bl9B,EAAEA,EAAEs/C,mBAA8Bt/C,GAAG,IAAIA,EAAEgzB,IAAI,MAAMtxB,MAAMF,EAAE,MAAM,IAAID,EAAEvB,EAAE,EAAE,CAAC,OAAOuB,EAAEyxB,KAAK,KAAK,EAAEzxB,EAAEA,EAAEu6B,UAAUsb,QAAQ,MAAMp3C,EAAE,KAAK,EAAE,GAAGuyC,GAAGhxC,EAAEyM,MAAM,CAACzM,EAAEA,EAAEu6B,UAAUgX,0CAA0C,MAAM9yC,CAAC,EAAEuB,EAAEA,EAAE67B,MAAM,OAAO,OAAO77B,GAAG,MAAMG,MAAMF,EAAE,KAAM,CAAC,GAAG,IAAIxB,EAAEgzB,IAAI,CAAC,IAAI7yB,EAAEH,EAAEgO,KAAK,GAAGukC,GAAGpyC,GAAG,OAAOwyC,GAAG3yC,EAAEG,EAAEoB,EAAE,CAAC,OAAOA,CAAC,CACpW,SAAS0qD,GAAGjsD,EAAEuB,EAAEpB,EAAEmB,EAAEpD,EAAEqB,EAAEgD,EAAEnB,EAAEU,GAAwK,OAArK9B,EAAE8rD,GAAG3rD,EAAEmB,GAAE,EAAGtB,EAAE9B,EAAEqB,EAAEgD,EAAEnB,EAAEU,IAAKs1C,QAAQ4U,GAAG,MAAM7rD,EAAEH,EAAE69B,SAAsBt+B,EAAE84C,GAAhB/2C,EAAE4C,KAAIhG,EAAEw/C,GAAGv9C,KAAes4C,cAAS,IAASl3C,GAAG,OAAOA,EAAEA,EAAE,KAAKm3C,GAAGv4C,EAAEZ,EAAErB,GAAG8B,EAAE69B,QAAQoZ,MAAM/4C,EAAEwiC,GAAG1gC,EAAE9B,EAAEoD,GAAG8nD,GAAGppD,EAAEsB,GAAUtB,CAAC,CAAC,SAASksD,GAAGlsD,EAAEuB,EAAEpB,EAAEmB,GAAG,IAAIpD,EAAEqD,EAAEs8B,QAAQt+B,EAAE2E,KAAI3B,EAAEm7C,GAAGx/C,GAAsL,OAAnLiC,EAAE6rD,GAAG7rD,GAAG,OAAOoB,EAAE61C,QAAQ71C,EAAE61C,QAAQj3C,EAAEoB,EAAE4hD,eAAehjD,GAAEoB,EAAE82C,GAAG94C,EAAEgD,IAAKi2C,QAAQ,CAAC9K,QAAQ1tC,GAAuB,QAApBsB,OAAE,IAASA,EAAE,KAAKA,KAAaC,EAAEk3C,SAASn3C,GAAe,QAAZtB,EAAE04C,GAAGx6C,EAAEqD,EAAEgB,MAAc+5C,GAAGt8C,EAAE9B,EAAEqE,EAAEhD,GAAGo5C,GAAG34C,EAAE9B,EAAEqE,IAAWA,CAAC,CAC3b,SAAS4pD,GAAGnsD,GAAe,OAAZA,EAAEA,EAAE69B,SAAcF,OAAyB39B,EAAE29B,MAAM3K,IAAoDhzB,EAAE29B,MAAM7B,WAAhF,IAA0F,CAAC,SAASswB,GAAGpsD,EAAEuB,GAAqB,GAAG,QAArBvB,EAAEA,EAAEu9B,gBAA2B,OAAOv9B,EAAEw9B,WAAW,CAAC,IAAIr9B,EAAEH,EAAE60C,UAAU70C,EAAE60C,UAAU,IAAI10C,GAAGA,EAAEoB,EAAEpB,EAAEoB,CAAC,CAAC,CAAC,SAAS8qD,GAAGrsD,EAAEuB,GAAG6qD,GAAGpsD,EAAEuB,IAAIvB,EAAEA,EAAEm9B,YAAYivB,GAAGpsD,EAAEuB,EAAE,CAnB7SymD,GAAG,SAAShoD,EAAEuB,EAAEpB,GAAG,GAAG,OAAOH,EAAE,GAAGA,EAAEk1C,gBAAgB3zC,EAAEmzC,cAAczC,GAAGpU,QAAQqZ,IAAG,MAAO,CAAC,GAAG,KAAKl3C,EAAEi3C,MAAM92C,IAAI,KAAa,IAARoB,EAAE87B,OAAW,OAAO6Z,IAAG,EAzE1I,SAAYl3C,EAAEuB,EAAEpB,GAAG,OAAOoB,EAAEyxB,KAAK,KAAK,EAAEkwB,GAAG3hD,GAAG6zC,KAAK,MAAM,KAAK,EAAEoE,GAAGj4C,GAAG,MAAM,KAAK,EAAEgxC,GAAGhxC,EAAEyM,OAAO6kC,GAAGtxC,GAAG,MAAM,KAAK,EAAE83C,GAAG93C,EAAEA,EAAEu6B,UAAU0G,eAAe,MAAM,KAAK,GAAG,IAAIlhC,EAAEC,EAAEyM,KAAKolB,SAASl1B,EAAEqD,EAAE2zC,cAAcp0C,MAAMmF,GAAEqwC,GAAGh1C,EAAEs1C,eAAet1C,EAAEs1C,cAAc14C,EAAE,MAAM,KAAK,GAAqB,GAAG,QAArBoD,EAAEC,EAAEg8B,eAA2B,OAAG,OAAOj8B,EAAEk8B,YAAkBv3B,GAAErB,GAAY,EAAVA,GAAEi5B,SAAWt8B,EAAE87B,OAAO,IAAI,MAAQ,KAAKl9B,EAAEoB,EAAEo8B,MAAMmZ,YAAmB6M,GAAG3jD,EAAEuB,EAAEpB,IAAG8F,GAAErB,GAAY,EAAVA,GAAEi5B,SAA8B,QAAnB79B,EAAE+hD,GAAG/hD,EAAEuB,EAAEpB,IAAmBH,EAAE49B,QAAQ,MAAK33B,GAAErB,GAAY,EAAVA,GAAEi5B,SAAW,MAAM,KAAK,GAC7d,GADgev8B,EAAE,KAAKnB,EACrfoB,EAAEu1C,YAAe,KAAa,IAAR92C,EAAEq9B,OAAW,CAAC,GAAG/7B,EAAE,OAAOwjD,GAAG9kD,EAAEuB,EAAEpB,GAAGoB,EAAE87B,OAAO,GAAG,CAA6F,GAA1E,QAAlBn/B,EAAEqD,EAAEg8B,iBAAyBr/B,EAAEwmD,UAAU,KAAKxmD,EAAE0mD,KAAK,KAAK1mD,EAAEi+C,WAAW,MAAMl2C,GAAErB,GAAEA,GAAEi5B,SAAYv8B,EAAE,MAAW,OAAO,KAAK,KAAK,GAAG,KAAK,GAAG,OAAOC,EAAE01C,MAAM,EAAEoL,GAAGriD,EAAEuB,EAAEpB,GAAG,OAAO4hD,GAAG/hD,EAAEuB,EAAEpB,EAAE,CAwE7GmsD,CAAGtsD,EAAEuB,EAAEpB,GAAG+2C,GAAG,KAAa,OAARl3C,EAAEq9B,MAAmB,MAAM6Z,IAAG,EAAGtzC,IAAG,KAAa,QAARrC,EAAE87B,QAAgB0W,GAAGxyC,EAAEiyC,GAAGjyC,EAAEgV,OAAiB,OAAVhV,EAAE01C,MAAM,EAAS11C,EAAEyxB,KAAK,KAAK,EAAE,IAAI1xB,EAAEC,EAAEyM,KAAK60C,GAAG7iD,EAAEuB,GAAGvB,EAAEuB,EAAEmzC,aAAa,IAAIx2C,EAAEi0C,GAAG5wC,EAAE4E,GAAE03B,SAASkZ,GAAGx1C,EAAEpB,GAAGjC,EAAEs8C,GAAG,KAAKj5C,EAAED,EAAEtB,EAAE9B,EAAEiC,GAAG,IAAIZ,EAAEs7C,KACvI,OAD4It5C,EAAE87B,OAAO,EAAE,kBAAkBn/B,GAAG,OAAOA,GAAG,oBAAoBA,EAAE+0B,aAAQ,IAAS/0B,EAAEi1B,UAAU5xB,EAAEyxB,IAAI,EAAEzxB,EAAEg8B,cAAc,KAAKh8B,EAAEs2C,YAC1e,KAAKtF,GAAGjxC,IAAI/B,GAAE,EAAGszC,GAAGtxC,IAAIhC,GAAE,EAAGgC,EAAEg8B,cAAc,OAAOr/B,EAAE6hD,YAAO,IAAS7hD,EAAE6hD,MAAM7hD,EAAE6hD,MAAM,KAAKnI,GAAGr2C,GAAGrD,EAAE8hD,QAAQZ,GAAG79C,EAAEu6B,UAAU59B,EAAEA,EAAEohD,gBAAgB/9C,EAAE6+C,GAAG7+C,EAAED,EAAEtB,EAAEG,GAAGoB,EAAE0hD,GAAG,KAAK1hD,EAAED,GAAE,EAAG/B,EAAEY,KAAKoB,EAAEyxB,IAAI,EAAEpvB,IAAGrE,GAAGy0C,GAAGzyC,GAAGsgD,GAAG,KAAKtgD,EAAErD,EAAEiC,GAAGoB,EAAEA,EAAEo8B,OAAcp8B,EAAE,KAAK,GAAGD,EAAEC,EAAEgzC,YAAYv0C,EAAE,CAAqF,OAApF6iD,GAAG7iD,EAAEuB,GAAGvB,EAAEuB,EAAEmzC,aAAuBpzC,GAAVpD,EAAEoD,EAAEgyB,OAAUhyB,EAAE+xB,UAAU9xB,EAAEyM,KAAK1M,EAAEpD,EAAEqD,EAAEyxB,IAQtU,SAAYhzB,GAAG,GAAG,oBAAoBA,EAAE,OAAOiiD,GAAGjiD,GAAG,EAAE,EAAE,QAAG,IAASA,GAAG,OAAOA,EAAE,CAAc,IAAbA,EAAEA,EAAEmzB,YAAgBnB,EAAG,OAAO,GAAG,GAAGhyB,IAAImyB,EAAG,OAAO,EAAE,CAAC,OAAO,CAAC,CAR2Lo6B,CAAGjrD,GAAGtB,EAAEi/C,GAAG39C,EAAEtB,GAAU9B,GAAG,KAAK,EAAEqD,EAAE6gD,GAAG,KAAK7gD,EAAED,EAAEtB,EAAEG,GAAG,MAAMH,EAAE,KAAK,EAAEuB,EAAEqhD,GAAG,KAAKrhD,EAAED,EAAEtB,EAAEG,GAAG,MAAMH,EAAE,KAAK,GAAGuB,EAAEugD,GAAG,KAAKvgD,EAAED,EAAEtB,EAAEG,GAAG,MAAMH,EAAE,KAAK,GAAGuB,EAAEygD,GAAG,KAAKzgD,EAAED,EAAE29C,GAAG39C,EAAE0M,KAAKhO,GAAGG,GAAG,MAAMH,EAAE,MAAM0B,MAAMF,EAAE,IACvgBF,EAAE,IAAK,CAAC,OAAOC,EAAE,KAAK,EAAE,OAAOD,EAAEC,EAAEyM,KAAK9P,EAAEqD,EAAEmzC,aAA2C0N,GAAGpiD,EAAEuB,EAAED,EAArCpD,EAAEqD,EAAEgzC,cAAcjzC,EAAEpD,EAAE+gD,GAAG39C,EAAEpD,GAAciC,GAAG,KAAK,EAAE,OAAOmB,EAAEC,EAAEyM,KAAK9P,EAAEqD,EAAEmzC,aAA2CkO,GAAG5iD,EAAEuB,EAAED,EAArCpD,EAAEqD,EAAEgzC,cAAcjzC,EAAEpD,EAAE+gD,GAAG39C,EAAEpD,GAAciC,GAAG,KAAK,EAAEH,EAAE,CAAO,GAANkjD,GAAG3hD,GAAM,OAAOvB,EAAE,MAAM0B,MAAMF,EAAE,MAAMF,EAAEC,EAAEmzC,aAA+Bx2C,GAAlBqB,EAAEgC,EAAEg8B,eAAkBmQ,QAAQ0K,GAAGp4C,EAAEuB,GAAGs3C,GAAGt3C,EAAED,EAAE,KAAKnB,GAAG,IAAIoC,EAAEhB,EAAEg8B,cAA0B,GAAZj8B,EAAEiB,EAAEmrC,QAAWnuC,EAAEgjC,aAAY,CAAC,GAAGhjC,EAAE,CAACmuC,QAAQpsC,EAAEihC,cAAa,EAAGttB,MAAM1S,EAAE0S,MAAM82C,0BAA0BxpD,EAAEwpD,0BAA0BvJ,YAAYjgD,EAAEigD,aAAajhD,EAAEs2C,YAAYC,UAChfv4C,EAAEgC,EAAEg8B,cAAch+B,EAAU,IAARgC,EAAE87B,MAAU,CAAuB97B,EAAE6hD,GAAGpjD,EAAEuB,EAAED,EAAEnB,EAAjCjC,EAAEwiD,GAAGh/C,MAAMF,EAAE,MAAMD,IAAmB,MAAMvB,CAAC,CAAM,GAAGsB,IAAIpD,EAAE,CAAuBqD,EAAE6hD,GAAGpjD,EAAEuB,EAAED,EAAEnB,EAAjCjC,EAAEwiD,GAAGh/C,MAAMF,EAAE,MAAMD,IAAmB,MAAMvB,CAAC,CAAM,IAAIm0C,GAAG9C,GAAG9vC,EAAEu6B,UAAU0G,cAAcnM,YAAY6d,GAAG3yC,EAAEqC,IAAE,EAAGwwC,GAAG,KAAKj0C,EAAEk2C,GAAG90C,EAAE,KAAKD,EAAEnB,GAAGoB,EAAEo8B,MAAMx9B,EAAEA,GAAGA,EAAEk9B,OAAe,EAATl9B,EAAEk9B,MAAS,KAAKl9B,EAAEA,EAAEy9B,OAAQ,KAAI,CAAM,GAALwX,KAAQ9zC,IAAIpD,EAAE,CAACqD,EAAEwgD,GAAG/hD,EAAEuB,EAAEpB,GAAG,MAAMH,CAAC,CAAC6hD,GAAG7hD,EAAEuB,EAAED,EAAEnB,EAAE,CAACoB,EAAEA,EAAEo8B,KAAK,CAAC,OAAOp8B,EAAE,KAAK,EAAE,OAAOi4C,GAAGj4C,GAAG,OAAOvB,GAAG+0C,GAAGxzC,GAAGD,EAAEC,EAAEyM,KAAK9P,EAAEqD,EAAEmzC,aAAan1C,EAAE,OAAOS,EAAEA,EAAEk1C,cAAc,KAAK3yC,EAAErE,EAAEu3B,SAASob,GAAGvvC,EAAEpD,GAAGqE,EAAE,KAAK,OAAOhD,GAAGsxC,GAAGvvC,EAAE/B,KAAKgC,EAAE87B,OAAO,IACnfslB,GAAG3iD,EAAEuB,GAAGsgD,GAAG7hD,EAAEuB,EAAEgB,EAAEpC,GAAGoB,EAAEo8B,MAAM,KAAK,EAAE,OAAO,OAAO39B,GAAG+0C,GAAGxzC,GAAG,KAAK,KAAK,GAAG,OAAOoiD,GAAG3jD,EAAEuB,EAAEpB,GAAG,KAAK,EAAE,OAAOk5C,GAAG93C,EAAEA,EAAEu6B,UAAU0G,eAAelhC,EAAEC,EAAEmzC,aAAa,OAAO10C,EAAEuB,EAAEo8B,MAAMyY,GAAG70C,EAAE,KAAKD,EAAEnB,GAAG0hD,GAAG7hD,EAAEuB,EAAED,EAAEnB,GAAGoB,EAAEo8B,MAAM,KAAK,GAAG,OAAOr8B,EAAEC,EAAEyM,KAAK9P,EAAEqD,EAAEmzC,aAA2CoN,GAAG9hD,EAAEuB,EAAED,EAArCpD,EAAEqD,EAAEgzC,cAAcjzC,EAAEpD,EAAE+gD,GAAG39C,EAAEpD,GAAciC,GAAG,KAAK,EAAE,OAAO0hD,GAAG7hD,EAAEuB,EAAEA,EAAEmzC,aAAav0C,GAAGoB,EAAEo8B,MAAM,KAAK,EAAmD,KAAK,GAAG,OAAOkkB,GAAG7hD,EAAEuB,EAAEA,EAAEmzC,aAAajf,SAASt1B,GAAGoB,EAAEo8B,MAAM,KAAK,GAAG39B,EAAE,CACxZ,GADyZsB,EAAEC,EAAEyM,KAAKolB,SAASl1B,EAAEqD,EAAEmzC,aAAan1C,EAAEgC,EAAE2zC,cAClf3yC,EAAErE,EAAE4C,MAAMmF,GAAEqwC,GAAGh1C,EAAEs1C,eAAet1C,EAAEs1C,cAAcr0C,EAAK,OAAOhD,EAAE,GAAG8N,GAAG9N,EAAEuB,MAAMyB,IAAI,GAAGhD,EAAEk2B,WAAWv3B,EAAEu3B,WAAWwc,GAAGpU,QAAQ,CAACt8B,EAAEwgD,GAAG/hD,EAAEuB,EAAEpB,GAAG,MAAMH,CAAC,OAAO,IAAc,QAAVT,EAAEgC,EAAEo8B,SAAiBp+B,EAAE69B,OAAO77B,GAAG,OAAOhC,GAAG,CAAC,IAAI6B,EAAE7B,EAAE+rB,aAAa,GAAG,OAAOlqB,EAAE,CAACmB,EAAEhD,EAAEo+B,MAAM,IAAI,IAAI77B,EAAEV,EAAE41C,aAAa,OAAOl1C,GAAG,CAAC,GAAGA,EAAEs1C,UAAU91C,EAAE,CAAC,GAAG,IAAI/B,EAAEyzB,IAAI,EAAClxB,EAAEu2C,IAAI,EAAEl4C,GAAGA,IAAK6yB,IAAI,EAAE,IAAIxyB,EAAEjB,EAAEs4C,YAAY,GAAG,OAAOr3C,EAAE,CAAY,IAAIH,GAAfG,EAAEA,EAAEy3C,QAAeC,QAAQ,OAAO73C,EAAEyB,EAAE+B,KAAK/B,GAAGA,EAAE+B,KAAKxD,EAAEwD,KAAKxD,EAAEwD,KAAK/B,GAAGtB,EAAE03C,QAAQp2C,CAAC,CAAC,CAACvC,EAAE03C,OAAO92C,EAAgB,QAAd2B,EAAEvC,EAAE49B,aAAqBr7B,EAAEm1C,OAAO92C,GAAG02C,GAAGt3C,EAAE69B,OAClfj9B,EAAEoB,GAAGH,EAAE61C,OAAO92C,EAAE,KAAK,CAAC2B,EAAEA,EAAE+B,IAAI,CAAC,MAAM,GAAG,KAAKtE,EAAEyzB,IAAIzwB,EAAEhD,EAAEyO,OAAOzM,EAAEyM,KAAK,KAAKzO,EAAEo+B,WAAW,GAAG,KAAKp+B,EAAEyzB,IAAI,CAAY,GAAG,QAAdzwB,EAAEhD,EAAE69B,QAAmB,MAAM17B,MAAMF,EAAE,MAAMe,EAAE00C,OAAO92C,EAAgB,QAAdiB,EAAEmB,EAAE46B,aAAqB/7B,EAAE61C,OAAO92C,GAAG02C,GAAGt0C,EAAEpC,EAAEoB,GAAGgB,EAAEhD,EAAEq+B,OAAO,MAAMr7B,EAAEhD,EAAEo+B,MAAM,GAAG,OAAOp7B,EAAEA,EAAE66B,OAAO79B,OAAO,IAAIgD,EAAEhD,EAAE,OAAOgD,GAAG,CAAC,GAAGA,IAAIhB,EAAE,CAACgB,EAAE,KAAK,KAAK,CAAa,GAAG,QAAfhD,EAAEgD,EAAEq7B,SAAoB,CAACr+B,EAAE69B,OAAO76B,EAAE66B,OAAO76B,EAAEhD,EAAE,KAAK,CAACgD,EAAEA,EAAE66B,MAAM,CAAC79B,EAAEgD,CAAC,CAACs/C,GAAG7hD,EAAEuB,EAAErD,EAAEu3B,SAASt1B,GAAGoB,EAAEA,EAAEo8B,KAAK,CAAC,OAAOp8B,EAAE,KAAK,EAAE,OAAOrD,EAAEqD,EAAEyM,KAAK1M,EAAEC,EAAEmzC,aAAajf,SAASshB,GAAGx1C,EAAEpB,GAAWmB,EAAEA,EAAVpD,EAAEi5C,GAAGj5C,IAAUqD,EAAE87B,OAAO,EAAEwkB,GAAG7hD,EAAEuB,EAAED,EAAEnB,GACpfoB,EAAEo8B,MAAM,KAAK,GAAG,OAAgBz/B,EAAE+gD,GAAX39C,EAAEC,EAAEyM,KAAYzM,EAAEmzC,cAA6BsN,GAAGhiD,EAAEuB,EAAED,EAAtBpD,EAAE+gD,GAAG39C,EAAE0M,KAAK9P,GAAciC,GAAG,KAAK,GAAG,OAAOgiD,GAAGniD,EAAEuB,EAAEA,EAAEyM,KAAKzM,EAAEmzC,aAAav0C,GAAG,KAAK,GAAG,OAAOmB,EAAEC,EAAEyM,KAAK9P,EAAEqD,EAAEmzC,aAAax2C,EAAEqD,EAAEgzC,cAAcjzC,EAAEpD,EAAE+gD,GAAG39C,EAAEpD,GAAG2kD,GAAG7iD,EAAEuB,GAAGA,EAAEyxB,IAAI,EAAEuf,GAAGjxC,IAAItB,GAAE,EAAG6yC,GAAGtxC,IAAIvB,GAAE,EAAG+2C,GAAGx1C,EAAEpB,GAAG0/C,GAAGt+C,EAAED,EAAEpD,GAAGkiD,GAAG7+C,EAAED,EAAEpD,EAAEiC,GAAG8iD,GAAG,KAAK1hD,EAAED,GAAE,EAAGtB,EAAEG,GAAG,KAAK,GAAG,OAAO2kD,GAAG9kD,EAAEuB,EAAEpB,GAAG,KAAK,GAAG,OAAOkiD,GAAGriD,EAAEuB,EAAEpB,GAAG,MAAMuB,MAAMF,EAAE,IAAID,EAAEyxB,KAAM,EAYxC,IAAIw5B,GAAG,oBAAoBC,YAAYA,YAAY,SAASzsD,GAAGqP,QAAQ+I,MAAMpY,EAAE,EAAE,SAAS0sD,GAAG1sD,GAAGb,KAAKwtD,cAAc3sD,CAAC,CACjI,SAAS4sD,GAAG5sD,GAAGb,KAAKwtD,cAAc3sD,CAAC,CAC5J,SAAS6sD,GAAG7sD,GAAG,SAASA,GAAG,IAAIA,EAAE42B,UAAU,IAAI52B,EAAE42B,UAAU,KAAK52B,EAAE42B,SAAS,CAAC,SAASk2B,GAAG9sD,GAAG,SAASA,GAAG,IAAIA,EAAE42B,UAAU,IAAI52B,EAAE42B,UAAU,KAAK52B,EAAE42B,WAAW,IAAI52B,EAAE42B,UAAU,iCAAiC52B,EAAE62B,WAAW,CAAC,SAASk2B,KAAK,CAExa,SAASC,GAAGhtD,EAAEuB,EAAEpB,EAAEmB,EAAEpD,GAAG,IAAIqB,EAAEY,EAAEwmD,oBAAoB,GAAGpnD,EAAE,CAAC,IAAIgD,EAAEhD,EAAE,GAAG,oBAAoBrB,EAAE,CAAC,IAAIkD,EAAElD,EAAEA,EAAE,WAAW,IAAI8B,EAAEmsD,GAAG5pD,GAAGnB,EAAEzC,KAAKqB,EAAE,CAAC,CAACksD,GAAG3qD,EAAEgB,EAAEvC,EAAE9B,EAAE,MAAMqE,EADxJ,SAAYvC,EAAEuB,EAAEpB,EAAEmB,EAAEpD,GAAG,GAAGA,EAAE,CAAC,GAAG,oBAAoBoD,EAAE,CAAC,IAAI/B,EAAE+B,EAAEA,EAAE,WAAW,IAAItB,EAAEmsD,GAAG5pD,GAAGhD,EAAEZ,KAAKqB,EAAE,CAAC,CAAC,IAAIuC,EAAE0pD,GAAG1qD,EAAED,EAAEtB,EAAE,EAAE,MAAK,EAAG,EAAG,GAAG+sD,IAAmF,OAA/E/sD,EAAE2mD,oBAAoBpkD,EAAEvC,EAAE4vC,IAAIrtC,EAAEs7B,QAAQ2R,GAAG,IAAIxvC,EAAE42B,SAAS52B,EAAEw7B,WAAWx7B,GAAG2qD,KAAYpoD,CAAC,CAAC,KAAKrE,EAAE8B,EAAE22B,WAAW32B,EAAEs2B,YAAYp4B,GAAG,GAAG,oBAAoBoD,EAAE,CAAC,IAAIF,EAAEE,EAAEA,EAAE,WAAW,IAAItB,EAAEmsD,GAAGrqD,GAAGV,EAAEzC,KAAKqB,EAAE,CAAC,CAAC,IAAI8B,EAAEgqD,GAAG9rD,EAAE,GAAE,EAAG,KAAK,GAAK,EAAG,EAAG,GAAG+sD,IAA0G,OAAtG/sD,EAAE2mD,oBAAoB7kD,EAAE9B,EAAE4vC,IAAI9tC,EAAE+7B,QAAQ2R,GAAG,IAAIxvC,EAAE42B,SAAS52B,EAAEw7B,WAAWx7B,GAAG2qD,IAAG,WAAWuB,GAAG3qD,EAAEO,EAAE3B,EAAEmB,EAAE,IAAUQ,CAAC,CACpUmrD,CAAG9sD,EAAEoB,EAAEvB,EAAE9B,EAAEoD,GAAG,OAAO6qD,GAAG5pD,EAAE,CAHpLqqD,GAAGnuD,UAAUw0B,OAAOy5B,GAAGjuD,UAAUw0B,OAAO,SAASjzB,GAAG,IAAIuB,EAAEpC,KAAKwtD,cAAc,GAAG,OAAOprD,EAAE,MAAMG,MAAMF,EAAE,MAAM0qD,GAAGlsD,EAAEuB,EAAE,KAAK,KAAK,EAAEqrD,GAAGnuD,UAAUyuD,QAAQR,GAAGjuD,UAAUyuD,QAAQ,WAAW,IAAIltD,EAAEb,KAAKwtD,cAAc,GAAG,OAAO3sD,EAAE,CAACb,KAAKwtD,cAAc,KAAK,IAAIprD,EAAEvB,EAAEwiC,cAAcmoB,IAAG,WAAWuB,GAAG,KAAKlsD,EAAE,KAAK,KAAK,IAAGuB,EAAEquC,IAAI,IAAI,CAAC,EACzTgd,GAAGnuD,UAAU0uD,2BAA2B,SAASntD,GAAG,GAAGA,EAAE,CAAC,IAAIuB,EAAE0/B,KAAKjhC,EAAE,CAACgiC,UAAU,KAAK3lB,OAAOrc,EAAEsiC,SAAS/gC,GAAG,IAAI,IAAIpB,EAAE,EAAEA,EAAEuhC,GAAG1iC,QAAQ,IAAIuC,GAAGA,EAAEmgC,GAAGvhC,GAAGmiC,SAASniC,KAAKuhC,GAAGp/B,OAAOnC,EAAE,EAAEH,GAAG,IAAIG,GAAGiiC,GAAGpiC,EAAE,CAAC,EAEX8gC,GAAG,SAAS9gC,GAAG,OAAOA,EAAEgzB,KAAK,KAAK,EAAE,IAAIzxB,EAAEvB,EAAE87B,UAAU,GAAGv6B,EAAEs8B,QAAQN,cAAcgF,aAAa,CAAC,IAAIpiC,EAAE4/B,GAAGx+B,EAAE0+B,cAAc,IAAI9/B,IAAIygC,GAAGr/B,EAAI,EAAFpB,GAAKipD,GAAG7nD,EAAEwC,MAAK,KAAO,EAAFjB,MAAO4iD,GAAG3hD,KAAI,IAAIqvC,MAAM,CAAC,MAAM,KAAK,GAAGuX,IAAG,WAAW,IAAIppD,EAAEm2C,GAAG13C,EAAE,GAAG,GAAG,OAAOuB,EAAE,CAAC,IAAIpB,EAAE+D,KAAIo4C,GAAG/6C,EAAEvB,EAAE,EAAEG,EAAE,CAAC,IAAGksD,GAAGrsD,EAAE,GAAG,EAC/b+gC,GAAG,SAAS/gC,GAAG,GAAG,KAAKA,EAAEgzB,IAAI,CAAC,IAAIzxB,EAAEm2C,GAAG13C,EAAE,WAAW,GAAG,OAAOuB,EAAa+6C,GAAG/6C,EAAEvB,EAAE,UAAXkE,MAAwBmoD,GAAGrsD,EAAE,UAAU,CAAC,EAAEghC,GAAG,SAAShhC,GAAG,GAAG,KAAKA,EAAEgzB,IAAI,CAAC,IAAIzxB,EAAEm8C,GAAG19C,GAAGG,EAAEu3C,GAAG13C,EAAEuB,GAAG,GAAG,OAAOpB,EAAam8C,GAAGn8C,EAAEH,EAAEuB,EAAX2C,MAAgBmoD,GAAGrsD,EAAEuB,EAAE,CAAC,EAAE0/B,GAAG,WAAW,OAAO39B,EAAC,EAAE49B,GAAG,SAASlhC,EAAEuB,GAAG,IAAIpB,EAAEmD,GAAE,IAAI,OAAOA,GAAEtD,EAAEuB,GAAG,CAAC,QAAQ+B,GAAEnD,CAAC,CAAC,EAClSs7B,GAAG,SAASz7B,EAAEuB,EAAEpB,GAAG,OAAOoB,GAAG,IAAK,QAAyB,GAAjBuzB,EAAG90B,EAAEG,GAAGoB,EAAEpB,EAAEuE,KAAQ,UAAUvE,EAAE6N,MAAM,MAAMzM,EAAE,CAAC,IAAIpB,EAAEH,EAAEG,EAAEq7B,YAAYr7B,EAAEA,EAAEq7B,WAAsF,IAA3Er7B,EAAEA,EAAEitD,iBAAiB,cAAcl7C,KAAKC,UAAU,GAAG5Q,GAAG,mBAAuBA,EAAE,EAAEA,EAAEpB,EAAEnB,OAAOuC,IAAI,CAAC,IAAID,EAAEnB,EAAEoB,GAAG,GAAGD,IAAItB,GAAGsB,EAAE+rD,OAAOrtD,EAAEqtD,KAAK,CAAC,IAAInvD,EAAE69B,GAAGz6B,GAAG,IAAIpD,EAAE,MAAMwD,MAAMF,EAAE,KAAKwyB,EAAG1yB,GAAGwzB,EAAGxzB,EAAEpD,EAAE,CAAC,CAAC,CAAC,MAAM,IAAK,WAAWy3B,GAAG31B,EAAEG,GAAG,MAAM,IAAK,SAAmB,OAAVoB,EAAEpB,EAAEW,QAAeo0B,GAAGl1B,IAAIG,EAAEglD,SAAS5jD,GAAE,GAAI,EAAE26B,GAAGwuB,GAAGvuB,GAAGwuB,GACpa,IAAI2C,GAAG,CAACC,uBAAsB,EAAGpgC,OAAO,CAAC0O,GAAGv0B,GAAGy0B,GAAGC,GAAGC,GAAGyuB,KAAK8C,GAAG,CAACC,wBAAwBprB,GAAGqrB,WAAW,EAAEnsC,QAAQ,SAASosC,oBAAoB,aAC1IC,GAAG,CAACF,WAAWF,GAAGE,WAAWnsC,QAAQisC,GAAGjsC,QAAQosC,oBAAoBH,GAAGG,oBAAoBE,eAAeL,GAAGK,eAAeC,kBAAkB,KAAKC,4BAA4B,KAAKC,4BAA4B,KAAKC,cAAc,KAAKC,wBAAwB,KAAKC,wBAAwB,KAAKC,gBAAgB,KAAKC,mBAAmB,KAAKC,eAAe,KAAKC,qBAAqBj9B,EAAG0oB,uBAAuBwU,wBAAwB,SAASxuD,GAAW,OAAO,QAAfA,EAAE09B,GAAG19B,IAAmB,KAAKA,EAAE87B,SAAS,EAAE2xB,wBAAwBD,GAAGC,yBARjN,WAAc,OAAO,IAAI,EASpUgB,4BAA4B,KAAKC,gBAAgB,KAAKC,aAAa,KAAKC,kBAAkB,KAAKC,gBAAgB,KAAKC,kBAAkB,mCAAmC,GAAG,qBAAqBC,+BAA+B,CAAC,IAAIC,GAAGD,+BAA+B,IAAIC,GAAGC,YAAYD,GAAGE,cAAc,IAAI7vB,GAAG2vB,GAAGG,OAAOvB,IAAItuB,GAAG0vB,EAAE,CAAC,MAAMhvD,IAAG,CAAC,CAAChC,EAAQuzB,mDAAmD+7B,GAC/YtvD,EAAQoxD,aAAa,SAASpvD,EAAEuB,GAAG,IAAIpB,EAAE,EAAEpB,UAAUC,aAAQ,IAASD,UAAU,GAAGA,UAAU,GAAG,KAAK,IAAI8tD,GAAGtrD,GAAG,MAAMG,MAAMF,EAAE,MAAM,OAbuH,SAAYxB,EAAEuB,EAAEpB,GAAG,IAAImB,EAAE,EAAEvC,UAAUC,aAAQ,IAASD,UAAU,GAAGA,UAAU,GAAG,KAAK,MAAM,CAACo0B,SAASzB,EAAGrgB,IAAI,MAAM/P,EAAE,KAAK,GAAGA,EAAEm0B,SAASz1B,EAAEwiC,cAAcjhC,EAAE00C,eAAe91C,EAAE,CAa1RkvD,CAAGrvD,EAAEuB,EAAE,KAAKpB,EAAE,EAAEnC,EAAQsxD,WAAW,SAAStvD,EAAEuB,GAAG,IAAIsrD,GAAG7sD,GAAG,MAAM0B,MAAMF,EAAE,MAAM,IAAIrB,GAAE,EAAGmB,EAAE,GAAGpD,EAAEsuD,GAA4P,OAAzP,OAAOjrD,QAAG,IAASA,KAAI,IAAKA,EAAEguD,sBAAsBpvD,GAAE,QAAI,IAASoB,EAAEy9C,mBAAmB19C,EAAEC,EAAEy9C,uBAAkB,IAASz9C,EAAE6pD,qBAAqBltD,EAAEqD,EAAE6pD,qBAAqB7pD,EAAEuqD,GAAG9rD,EAAE,GAAE,EAAG,KAAK,EAAKG,EAAE,EAAGmB,EAAEpD,GAAG8B,EAAE4vC,IAAIruC,EAAEs8B,QAAQ2R,GAAG,IAAIxvC,EAAE42B,SAAS52B,EAAEw7B,WAAWx7B,GAAU,IAAI0sD,GAAGnrD,EAAE,EACrfvD,EAAQwxD,YAAY,SAASxvD,GAAG,GAAG,MAAMA,EAAE,OAAO,KAAK,GAAG,IAAIA,EAAE42B,SAAS,OAAO52B,EAAE,IAAIuB,EAAEvB,EAAEs/C,gBAAgB,QAAG,IAAS/9C,EAAE,CAAC,GAAG,oBAAoBvB,EAAEizB,OAAO,MAAMvxB,MAAMF,EAAE,MAAiC,MAA3BxB,EAAE5B,OAAOyB,KAAKG,GAAG6E,KAAK,KAAWnD,MAAMF,EAAE,IAAIxB,GAAI,CAAqC,OAA5BA,EAAE,QAAVA,EAAE09B,GAAGn8B,IAAc,KAAKvB,EAAE87B,SAAkB,EAAE99B,EAAQyxD,UAAU,SAASzvD,GAAG,OAAO2qD,GAAG3qD,EAAE,EAAEhC,EAAQ0xD,QAAQ,SAAS1vD,EAAEuB,EAAEpB,GAAG,IAAI2sD,GAAGvrD,GAAG,MAAMG,MAAMF,EAAE,MAAM,OAAOwrD,GAAG,KAAKhtD,EAAEuB,GAAE,EAAGpB,EAAE,EAC/YnC,EAAQ2xD,YAAY,SAAS3vD,EAAEuB,EAAEpB,GAAG,IAAI0sD,GAAG7sD,GAAG,MAAM0B,MAAMF,EAAE,MAAM,IAAIF,EAAE,MAAMnB,GAAGA,EAAEyvD,iBAAiB,KAAK1xD,GAAE,EAAGqB,EAAE,GAAGgD,EAAEiqD,GAAyO,GAAtO,OAAOrsD,QAAG,IAASA,KAAI,IAAKA,EAAEovD,sBAAsBrxD,GAAE,QAAI,IAASiC,EAAE6+C,mBAAmBz/C,EAAEY,EAAE6+C,uBAAkB,IAAS7+C,EAAEirD,qBAAqB7oD,EAAEpC,EAAEirD,qBAAqB7pD,EAAE0qD,GAAG1qD,EAAE,KAAKvB,EAAE,EAAE,MAAMG,EAAEA,EAAE,KAAKjC,EAAE,EAAGqB,EAAEgD,GAAGvC,EAAE4vC,IAAIruC,EAAEs8B,QAAQ2R,GAAGxvC,GAAMsB,EAAE,IAAItB,EAAE,EAAEA,EAAEsB,EAAEtC,OAAOgB,IAA2B9B,GAAhBA,GAAPiC,EAAEmB,EAAEtB,IAAO6vD,aAAgB1vD,EAAE2vD,SAAS,MAAMvuD,EAAEsqD,gCAAgCtqD,EAAEsqD,gCAAgC,CAAC1rD,EAAEjC,GAAGqD,EAAEsqD,gCAAgC9pD,KAAK5B,EACvhBjC,GAAG,OAAO,IAAI0uD,GAAGrrD,EAAE,EAAEvD,EAAQi1B,OAAO,SAASjzB,EAAEuB,EAAEpB,GAAG,IAAI2sD,GAAGvrD,GAAG,MAAMG,MAAMF,EAAE,MAAM,OAAOwrD,GAAG,KAAKhtD,EAAEuB,GAAE,EAAGpB,EAAE,EAAEnC,EAAQ+xD,uBAAuB,SAAS/vD,GAAG,IAAI8sD,GAAG9sD,GAAG,MAAM0B,MAAMF,EAAE,KAAK,QAAOxB,EAAE2mD,sBAAqBgE,IAAG,WAAWqC,GAAG,KAAK,KAAKhtD,GAAE,GAAG,WAAWA,EAAE2mD,oBAAoB,KAAK3mD,EAAE4vC,IAAI,IAAI,GAAE,KAAG,EAAM,EAAE5xC,EAAQgyD,wBAAwBtF,GAC/U1sD,EAAQiyD,oCAAoC,SAASjwD,EAAEuB,EAAEpB,EAAEmB,GAAG,IAAIwrD,GAAG3sD,GAAG,MAAMuB,MAAMF,EAAE,MAAM,GAAG,MAAMxB,QAAG,IAASA,EAAEs/C,gBAAgB,MAAM59C,MAAMF,EAAE,KAAK,OAAOwrD,GAAGhtD,EAAEuB,EAAEpB,GAAE,EAAGmB,EAAE,EAAEtD,EAAQujB,QAAQ,8DC/T7L,IAAIlhB,EAAIkvB,EAAQ,KAEdvxB,EAAQsxD,WAAajvD,EAAEivD,WACvBtxD,EAAQ2xD,YAActvD,EAAEsvD,yCCH1B,SAASO,IAEP,GAC4C,qBAAnCnB,gCAC4C,oBAA5CA,+BAA+BmB,SAcxC,IAEEnB,+BAA+BmB,SAASA,EAC1C,CAAE,MAAOC,GAGP9gD,QAAQ+I,MAAM+3C,EAChB,CACF,CAKED,GACAnyD,EAAOC,QAAU,EAAjBD,qCCzBewB,EAAEgwB,EAAQ,IAASztB,EAAEyB,OAAOkuB,IAAI,iBAAiBjxB,EAAE+C,OAAOkuB,IAAI,kBAAkBpxB,EAAEjC,OAAOK,UAAUC,eAAeF,EAAEe,EAAEgyB,mDAAmDqwB,kBAAkBpgD,EAAE,CAAC6P,KAAI,EAAG5I,KAAI,EAAG2nD,QAAO,EAAGC,UAAS,GAChP,SAAS1sD,EAAExD,EAAEH,EAAEuC,GAAG,IAAIhB,EAAED,EAAE,CAAC,EAAEpD,EAAE,KAAKkD,EAAE,KAAiF,IAAIG,UAAhF,IAASgB,IAAIrE,EAAE,GAAGqE,QAAG,IAASvC,EAAEqR,MAAMnT,EAAE,GAAG8B,EAAEqR,UAAK,IAASrR,EAAEyI,MAAMrH,EAAEpB,EAAEyI,KAAczI,EAAEK,EAAE1B,KAAKqB,EAAEuB,KAAKC,EAAE9C,eAAe6C,KAAKD,EAAEC,GAAGvB,EAAEuB,IAAI,GAAGpB,GAAGA,EAAE++C,aAAa,IAAI39C,KAAKvB,EAAEG,EAAE++C,kBAAe,IAAS59C,EAAEC,KAAKD,EAAEC,GAAGvB,EAAEuB,IAAI,MAAM,CAAC4xB,SAASrxB,EAAEkM,KAAK7N,EAAEkR,IAAInT,EAAEuK,IAAIrH,EAAE6rB,MAAM3rB,EAAEk0C,OAAOh3C,EAAEq/B,QAAQ,CAAoB7/B,EAAQsyD,IAAI3sD,EAAE3F,EAAQuyD,KAAK5sD,4BCD7V,IAAInD,EAAE+C,OAAOkuB,IAAI,iBAAiBjzB,EAAE+E,OAAOkuB,IAAI,gBAAgBjwB,EAAE+B,OAAOkuB,IAAI,kBAAkB9tB,EAAEJ,OAAOkuB,IAAI,qBAAqB3yB,EAAEyE,OAAOkuB,IAAI,kBAAkBtzB,EAAEoF,OAAOkuB,IAAI,kBAAkBhxB,EAAE8C,OAAOkuB,IAAI,iBAAiB9vB,EAAE4B,OAAOkuB,IAAI,qBAAqB7yB,EAAE2E,OAAOkuB,IAAI,kBAAkB3xB,EAAEyD,OAAOkuB,IAAI,cAAchwB,EAAE8B,OAAOkuB,IAAI,cAAcvsB,EAAE3B,OAAOC,SACzW,IAAIO,EAAE,CAACs7C,UAAU,WAAW,OAAM,CAAE,EAAEI,mBAAmB,WAAW,EAAED,oBAAoB,WAAW,EAAED,gBAAgB,WAAW,GAAGj8C,EAAElF,OAAOS,OAAO4E,EAAE,CAAC,EAAE,SAASb,EAAE5C,EAAEuB,EAAErD,GAAGiB,KAAK8tB,MAAMjtB,EAAEb,KAAKi4C,QAAQ71C,EAAEpC,KAAKu2C,KAAKjyC,EAAEtE,KAAK6gD,QAAQ9hD,GAAG6F,CAAC,CACwI,SAASE,IAAI,CAAyB,SAASgC,EAAEjG,EAAEuB,EAAErD,GAAGiB,KAAK8tB,MAAMjtB,EAAEb,KAAKi4C,QAAQ71C,EAAEpC,KAAKu2C,KAAKjyC,EAAEtE,KAAK6gD,QAAQ9hD,GAAG6F,CAAC,CADxPnB,EAAEnE,UAAUitD,iBAAiB,CAAC,EACpQ9oD,EAAEnE,UAAU+xD,SAAS,SAASxwD,EAAEuB,GAAG,GAAG,kBAAkBvB,GAAG,oBAAoBA,GAAG,MAAMA,EAAE,MAAM0B,MAAM,yHAAyHvC,KAAK6gD,QAAQT,gBAAgBpgD,KAAKa,EAAEuB,EAAE,WAAW,EAAEqB,EAAEnE,UAAUgyD,YAAY,SAASzwD,GAAGb,KAAK6gD,QAAQP,mBAAmBtgD,KAAKa,EAAE,cAAc,EAAgBiE,EAAExF,UAAUmE,EAAEnE,UAAsF,IAAI0H,EAAEF,EAAExH,UAAU,IAAIwF,EACrfkC,EAAEjD,YAAY+C,EAAE3C,EAAE6C,EAAEvD,EAAEnE,WAAW0H,EAAEy5C,sBAAqB,EAAG,IAAIh8C,EAAErF,MAAMwB,QAAQqG,EAAEhI,OAAOK,UAAUC,eAAeoE,EAAE,CAAC+6B,QAAQ,MAAMj5B,EAAE,CAACyM,KAAI,EAAG5I,KAAI,EAAG2nD,QAAO,EAAGC,UAAS,GACtK,SAASlsD,EAAEnE,EAAEuB,EAAErD,GAAG,IAAIoD,EAAEnB,EAAE,CAAC,EAAE2B,EAAE,KAAKV,EAAE,KAAK,GAAG,MAAMG,EAAE,IAAID,UAAK,IAASC,EAAEkH,MAAMrH,EAAEG,EAAEkH,UAAK,IAASlH,EAAE8P,MAAMvP,EAAE,GAAGP,EAAE8P,KAAK9P,EAAE6E,EAAEzH,KAAK4C,EAAED,KAAKsD,EAAElG,eAAe4C,KAAKnB,EAAEmB,GAAGC,EAAED,IAAI,IAAIiB,EAAExD,UAAUC,OAAO,EAAE,GAAG,IAAIuD,EAAEpC,EAAEs1B,SAASv3B,OAAO,GAAG,EAAEqE,EAAE,CAAC,IAAI,IAAIhD,EAAEhB,MAAMgE,GAAGlC,EAAE,EAAEA,EAAEkC,EAAElC,IAAId,EAAEc,GAAGtB,UAAUsB,EAAE,GAAGF,EAAEs1B,SAASl2B,CAAC,CAAC,GAAGS,GAAGA,EAAEk/C,aAAa,IAAI59C,KAAKiB,EAAEvC,EAAEk/C,kBAAe,IAAS/+C,EAAEmB,KAAKnB,EAAEmB,GAAGiB,EAAEjB,IAAI,MAAM,CAAC6xB,SAAS3yB,EAAEwN,KAAKhO,EAAEqR,IAAIvP,EAAE2G,IAAIrH,EAAE6rB,MAAM9sB,EAAEq1C,OAAO1yC,EAAE+6B,QAAQ,CAChV,SAASr7B,EAAExC,GAAG,MAAM,kBAAkBA,GAAG,OAAOA,GAAGA,EAAEmzB,WAAW3yB,CAAC,CAAoG,IAAI0B,EAAE,OAAO,SAAS8D,EAAEhG,EAAEuB,GAAG,MAAM,kBAAkBvB,GAAG,OAAOA,GAAG,MAAMA,EAAEqR,IAA7K,SAAgBrR,GAAG,IAAIuB,EAAE,CAAC,IAAI,KAAK,IAAI,MAAM,MAAM,IAAIvB,EAAEqjB,QAAQ,SAAQ,SAASrjB,GAAG,OAAOuB,EAAEvB,EAAE,GAAE,CAA+E0wD,CAAO,GAAG1wD,EAAEqR,KAAK9P,EAAE6B,SAAS,GAAG,CAC/W,SAASc,EAAElE,EAAEuB,EAAErD,EAAEoD,EAAEnB,GAAG,IAAI2B,SAAS9B,EAAK,cAAc8B,GAAG,YAAYA,IAAE9B,EAAE,MAAK,IAAIoB,GAAE,EAAG,GAAG,OAAOpB,EAAEoB,GAAE,OAAQ,OAAOU,GAAG,IAAK,SAAS,IAAK,SAASV,GAAE,EAAG,MAAM,IAAK,SAAS,OAAOpB,EAAEmzB,UAAU,KAAK3yB,EAAE,KAAKhC,EAAE4C,GAAE,GAAI,GAAGA,EAAE,OAAWjB,EAAEA,EAANiB,EAAEpB,GAASA,EAAE,KAAKsB,EAAE,IAAI0E,EAAE5E,EAAE,GAAGE,EAAEsC,EAAEzD,IAAIjC,EAAE,GAAG,MAAM8B,IAAI9B,EAAE8B,EAAEqjB,QAAQnhB,EAAE,OAAO,KAAKgC,EAAE/D,EAAEoB,EAAErD,EAAE,IAAG,SAAS8B,GAAG,OAAOA,CAAC,KAAI,MAAMG,IAAIqC,EAAErC,KAAKA,EADnW,SAAWH,EAAEuB,GAAG,MAAM,CAAC4xB,SAAS3yB,EAAEwN,KAAKhO,EAAEgO,KAAKqD,IAAI9P,EAAEkH,IAAIzI,EAAEyI,IAAIwkB,MAAMjtB,EAAEitB,MAAMuoB,OAAOx1C,EAAEw1C,OAAO,CACyQ/wC,CAAEtE,EAAEjC,IAAIiC,EAAEkR,KAAKjQ,GAAGA,EAAEiQ,MAAMlR,EAAEkR,IAAI,IAAI,GAAGlR,EAAEkR,KAAKgS,QAAQnhB,EAAE,OAAO,KAAKlC,IAAIuB,EAAEQ,KAAK5B,IAAI,EAAyB,GAAvBiB,EAAE,EAAEE,EAAE,KAAKA,EAAE,IAAIA,EAAE,IAAOsC,EAAE5D,GAAG,IAAI,IAAIuC,EAAE,EAAEA,EAAEvC,EAAEhB,OAAOuD,IAAI,CAC/e,IAAIhD,EAAE+B,EAAE0E,EADwelE,EACrf9B,EAAEuC,GAAeA,GAAGnB,GAAG8C,EAAEpC,EAAEP,EAAErD,EAAEqB,EAAEY,EAAE,MAAM,GAAGZ,EAPsU,SAAWS,GAAG,OAAG,OAAOA,GAAG,kBAAkBA,EAAS,KAAsC,oBAAjCA,EAAEkF,GAAGlF,EAAEkF,IAAIlF,EAAE,eAA0CA,EAAE,IAAI,CAO5bqD,CAAErD,GAAG,oBAAoBT,EAAE,IAAIS,EAAET,EAAEZ,KAAKqB,GAAGuC,EAAE,IAAIT,EAAE9B,EAAE6D,QAAQC,MAA6B1C,GAAG8C,EAA1BpC,EAAEA,EAAEhB,MAA0BS,EAAErD,EAAtBqB,EAAE+B,EAAE0E,EAAElE,EAAES,KAAkBpC,QAAQ,GAAG,WAAW2B,EAAE,MAAMP,EAAE+L,OAAOtN,GAAG0B,MAAM,mDAAmD,oBAAoBH,EAAE,qBAAqBnD,OAAOyB,KAAKG,GAAG6E,KAAK,MAAM,IAAItD,GAAG,6EAA6E,OAAOH,CAAC,CACzZ,SAAS2B,EAAE/C,EAAEuB,EAAErD,GAAG,GAAG,MAAM8B,EAAE,OAAOA,EAAE,IAAIsB,EAAE,GAAGnB,EAAE,EAAmD,OAAjD+D,EAAElE,EAAEsB,EAAE,GAAG,IAAG,SAAStB,GAAG,OAAOuB,EAAE5C,KAAKT,EAAE8B,EAAEG,IAAI,IAAUmB,CAAC,CAAC,SAASoC,EAAE1D,GAAG,IAAI,IAAIA,EAAE2wD,QAAQ,CAAC,IAAIpvD,EAAEvB,EAAE4wD,SAAQrvD,EAAEA,KAAMqF,MAAK,SAASrF,GAAM,IAAIvB,EAAE2wD,UAAU,IAAI3wD,EAAE2wD,UAAQ3wD,EAAE2wD,QAAQ,EAAE3wD,EAAE4wD,QAAQrvD,EAAC,IAAE,SAASA,GAAM,IAAIvB,EAAE2wD,UAAU,IAAI3wD,EAAE2wD,UAAQ3wD,EAAE2wD,QAAQ,EAAE3wD,EAAE4wD,QAAQrvD,EAAC,KAAI,IAAIvB,EAAE2wD,UAAU3wD,EAAE2wD,QAAQ,EAAE3wD,EAAE4wD,QAAQrvD,EAAE,CAAC,GAAG,IAAIvB,EAAE2wD,QAAQ,OAAO3wD,EAAE4wD,QAAQ1hC,QAAQ,MAAMlvB,EAAE4wD,OAAQ,CAC5Z,IAAI9rD,EAAE,CAAC+4B,QAAQ,MAAMz4B,EAAE,CAAC+9B,WAAW,MAAM79B,EAAE,CAAC00C,uBAAuBl1C,EAAEk+B,wBAAwB59B,EAAEw8C,kBAAkB9+C,GAAG,SAASoD,IAAI,MAAMxE,MAAM,2DAA4D,CACzM1D,EAAQ6yD,SAAS,CAACnuD,IAAIK,EAAE9C,QAAQ,SAASD,EAAEuB,EAAErD,GAAG6E,EAAE/C,GAAE,WAAWuB,EAAErC,MAAMC,KAAKJ,UAAU,GAAEb,EAAE,EAAEyU,MAAM,SAAS3S,GAAG,IAAIuB,EAAE,EAAuB,OAArBwB,EAAE/C,GAAE,WAAWuB,GAAG,IAAUA,CAAC,EAAEwR,QAAQ,SAAS/S,GAAG,OAAO+C,EAAE/C,GAAE,SAASA,GAAG,OAAOA,CAAC,KAAI,EAAE,EAAEif,KAAK,SAASjf,GAAG,IAAIwC,EAAExC,GAAG,MAAM0B,MAAM,yEAAyE,OAAO1B,CAAC,GAAGhC,EAAQ8yD,UAAUluD,EAAE5E,EAAQ+yD,SAASvvD,EAAExD,EAAQgzD,SAASlyD,EAAEd,EAAQizD,cAAchrD,EAAEjI,EAAQkzD,WAAWvtD,EAAE3F,EAAQmzD,SAASvyD,EAClcZ,EAAQuzB,mDAAmDjsB,EAAEtH,EAAQozD,IAAIlrD,EACzElI,EAAQqzD,aAAa,SAASrxD,EAAEuB,EAAErD,GAAG,GAAG,OAAO8B,QAAG,IAASA,EAAE,MAAM0B,MAAM,iFAAiF1B,EAAE,KAAK,IAAIsB,EAAEgC,EAAE,CAAC,EAAEtD,EAAEitB,OAAO9sB,EAAEH,EAAEqR,IAAIvP,EAAE9B,EAAEyI,IAAIrH,EAAEpB,EAAEw1C,OAAO,GAAG,MAAMj0C,EAAE,CAAoE,QAAnE,IAASA,EAAEkH,MAAM3G,EAAEP,EAAEkH,IAAIrH,EAAE0B,EAAE+6B,cAAS,IAASt8B,EAAE8P,MAAMlR,EAAE,GAAGoB,EAAE8P,KAAQrR,EAAEgO,MAAMhO,EAAEgO,KAAKkxC,aAAa,IAAI38C,EAAEvC,EAAEgO,KAAKkxC,aAAa,IAAI3/C,KAAKgC,EAAE6E,EAAEzH,KAAK4C,EAAEhC,KAAKqF,EAAElG,eAAea,KAAK+B,EAAE/B,QAAG,IAASgC,EAAEhC,SAAI,IAASgD,EAAEA,EAAEhD,GAAGgC,EAAEhC,GAAG,CAAC,IAAIA,EAAER,UAAUC,OAAO,EAAE,GAAG,IAAIO,EAAE+B,EAAEm0B,SAASv3B,OAAO,GAAG,EAAEqB,EAAE,CAACgD,EAAEhE,MAAMgB,GACrf,IAAI,IAAIc,EAAE,EAAEA,EAAEd,EAAEc,IAAIkC,EAAElC,GAAGtB,UAAUsB,EAAE,GAAGiB,EAAEm0B,SAASlzB,CAAC,CAAC,MAAM,CAAC4wB,SAAS3yB,EAAEwN,KAAKhO,EAAEgO,KAAKqD,IAAIlR,EAAEsI,IAAI3G,EAAEmrB,MAAM3rB,EAAEk0C,OAAOp0C,EAAE,EAAEpD,EAAQszD,cAAc,SAAStxD,GAAqK,OAAlKA,EAAE,CAACmzB,SAAS1yB,EAAEm2C,cAAc52C,EAAEuxD,eAAevxD,EAAEwxD,aAAa,EAAEC,SAAS,KAAKC,SAAS,KAAKC,cAAc,KAAKC,YAAY,OAAQH,SAAS,CAACt+B,SAASh1B,EAAEi1B,SAASpzB,GAAUA,EAAE0xD,SAAS1xD,CAAC,EAAEhC,EAAQgyB,cAAc7rB,EAAEnG,EAAQ6zD,cAAc,SAAS7xD,GAAG,IAAIuB,EAAE4C,EAAEhD,KAAK,KAAKnB,GAAY,OAATuB,EAAEyM,KAAKhO,EAASuB,CAAC,EAAEvD,EAAQ8zD,UAAU,WAAW,MAAM,CAACj0B,QAAQ,KAAK,EAC9d7/B,EAAQ+zD,WAAW,SAAS/xD,GAAG,MAAM,CAACmzB,SAASxxB,EAAEsxB,OAAOjzB,EAAE,EAAEhC,EAAQg0D,eAAexvD,EAAExE,EAAQi0D,KAAK,SAASjyD,GAAG,MAAM,CAACmzB,SAAS1xB,EAAE4xB,SAAS,CAACs9B,SAAS,EAAEC,QAAQ5wD,GAAGszB,MAAM5vB,EAAE,EAAE1F,EAAQk0D,KAAK,SAASlyD,EAAEuB,GAAG,MAAM,CAAC4xB,SAASrzB,EAAEkO,KAAKhO,EAAEkiD,aAAQ,IAAS3gD,EAAE,KAAKA,EAAE,EAAEvD,EAAQm0D,gBAAgB,SAASnyD,GAAG,IAAIuB,EAAE6D,EAAE+9B,WAAW/9B,EAAE+9B,WAAW,CAAC,EAAE,IAAInjC,GAAG,CAAC,QAAQoF,EAAE+9B,WAAW5hC,CAAC,CAAC,EAAEvD,EAAQo0D,aAAalsD,EAAElI,EAAQ+/C,YAAY,SAAS/9C,EAAEuB,GAAG,OAAOuD,EAAE+4B,QAAQkgB,YAAY/9C,EAAEuB,EAAE,EAAEvD,EAAQggD,WAAW,SAASh+C,GAAG,OAAO8E,EAAE+4B,QAAQmgB,WAAWh+C,EAAE,EAC3fhC,EAAQygD,cAAc,WAAW,EAAEzgD,EAAQ0gD,iBAAiB,SAAS1+C,GAAG,OAAO8E,EAAE+4B,QAAQ6gB,iBAAiB1+C,EAAE,EAAEhC,EAAQigD,UAAU,SAASj+C,EAAEuB,GAAG,OAAOuD,EAAE+4B,QAAQogB,UAAUj+C,EAAEuB,EAAE,EAAEvD,EAAQ8gD,MAAM,WAAW,OAAOh6C,EAAE+4B,QAAQihB,OAAO,EAAE9gD,EAAQkgD,oBAAoB,SAASl+C,EAAEuB,EAAErD,GAAG,OAAO4G,EAAE+4B,QAAQqgB,oBAAoBl+C,EAAEuB,EAAErD,EAAE,EAAEF,EAAQmgD,mBAAmB,SAASn+C,EAAEuB,GAAG,OAAOuD,EAAE+4B,QAAQsgB,mBAAmBn+C,EAAEuB,EAAE,EAAEvD,EAAQogD,gBAAgB,SAASp+C,EAAEuB,GAAG,OAAOuD,EAAE+4B,QAAQugB,gBAAgBp+C,EAAEuB,EAAE,EACzdvD,EAAQqgD,QAAQ,SAASr+C,EAAEuB,GAAG,OAAOuD,EAAE+4B,QAAQwgB,QAAQr+C,EAAEuB,EAAE,EAAEvD,EAAQsgD,WAAW,SAASt+C,EAAEuB,EAAErD,GAAG,OAAO4G,EAAE+4B,QAAQygB,WAAWt+C,EAAEuB,EAAErD,EAAE,EAAEF,EAAQugD,OAAO,SAASv+C,GAAG,OAAO8E,EAAE+4B,QAAQ0gB,OAAOv+C,EAAE,EAAEhC,EAAQwgD,SAAS,SAASx+C,GAAG,OAAO8E,EAAE+4B,QAAQ2gB,SAASx+C,EAAE,EAAEhC,EAAQ6gD,qBAAqB,SAAS7+C,EAAEuB,EAAErD,GAAG,OAAO4G,EAAE+4B,QAAQghB,qBAAqB7+C,EAAEuB,EAAErD,EAAE,EAAEF,EAAQ2gD,cAAc,WAAW,OAAO75C,EAAE+4B,QAAQ8gB,eAAe,EAAE3gD,EAAQujB,QAAQ,oCCtBlaxjB,EAAOC,QAAU,EAAjBD,iCCAAA,EAAOC,QAAU,EAAjBD,gCCUFA,EAAOC,QAAQuzB,wDAAqD8gC,EAEpEt0D,EAAOC,QAAQs0D,qEAAkED,EAEjFt0D,EAAOC,QAAQu0D,qEAAkEF,EAMjFj0D,OAAOS,OAAOd,EAAOC,QAASuxB,EAAQ,+BCdzB,SAAShwB,EAAES,EAAEuB,GAAG,IAAIpB,EAAEH,EAAEhB,OAAOgB,EAAE+B,KAAKR,GAAGvB,EAAE,KAAK,EAAEG,GAAG,CAAC,IAAImB,EAAEnB,EAAE,IAAI,EAAEjC,EAAE8B,EAAEsB,GAAG,KAAG,EAAEiB,EAAErE,EAAEqD,IAA0B,MAAMvB,EAA7BA,EAAEsB,GAAGC,EAAEvB,EAAEG,GAAGjC,EAAEiC,EAAEmB,CAAc,CAAC,CAAC,SAASF,EAAEpB,GAAG,OAAO,IAAIA,EAAEhB,OAAO,KAAKgB,EAAE,EAAE,CAAC,SAAS8B,EAAE9B,GAAG,GAAG,IAAIA,EAAEhB,OAAO,OAAO,KAAK,IAAIuC,EAAEvB,EAAE,GAAGG,EAAEH,EAAEkN,MAAM,GAAG/M,IAAIoB,EAAE,CAACvB,EAAE,GAAGG,EAAEH,EAAE,IAAI,IAAIsB,EAAE,EAAEpD,EAAE8B,EAAEhB,OAAOJ,EAAEV,IAAI,EAAEoD,EAAE1C,GAAG,CAAC,IAAIyB,EAAE,GAAGiB,EAAE,GAAG,EAAEgC,EAAEtD,EAAEK,GAAG7B,EAAE6B,EAAE,EAAEP,EAAEE,EAAExB,GAAG,GAAG,EAAE+D,EAAEe,EAAEnD,GAAG3B,EAAEN,GAAG,EAAEqE,EAAEzC,EAAEwD,IAAItD,EAAEsB,GAAGxB,EAAEE,EAAExB,GAAG2B,EAAEmB,EAAE9C,IAAIwB,EAAEsB,GAAGgC,EAAEtD,EAAEK,GAAGF,EAAEmB,EAAEjB,OAAQ,MAAG7B,EAAEN,GAAG,EAAEqE,EAAEzC,EAAEK,IAA0B,MAAMH,EAA7BA,EAAEsB,GAAGxB,EAAEE,EAAExB,GAAG2B,EAAEmB,EAAE9C,CAAc,EAAC,CAAC,OAAO+C,CAAC,CAC3c,SAASgB,EAAEvC,EAAEuB,GAAG,IAAIpB,EAAEH,EAAEwyD,UAAUjxD,EAAEixD,UAAU,OAAO,IAAIryD,EAAEA,EAAEH,EAAEwI,GAAGjH,EAAEiH,EAAE,CAAC,GAAG,kBAAkBiqD,aAAa,oBAAoBA,YAAYntB,IAAI,CAAC,IAAI9kC,EAAEiyD,YAAYz0D,EAAQwgC,aAAa,WAAW,OAAOh+B,EAAE8kC,KAAK,CAAC,KAAK,CAAC,IAAI9jC,EAAE6jC,KAAK1hC,EAAEnC,EAAE8jC,MAAMtnC,EAAQwgC,aAAa,WAAW,OAAOh9B,EAAE8jC,MAAM3hC,CAAC,CAAC,CAAC,IAAI7E,EAAE,GAAGX,EAAE,GAAGsC,EAAE,EAAEkB,EAAE,KAAKF,EAAE,EAAEyD,GAAE,EAAG7B,GAAE,EAAGU,GAAE,EAAGN,EAAE,oBAAoB5B,WAAWA,WAAW,KAAKe,EAAE,oBAAoBwI,aAAaA,aAAa,KAAKnH,EAAE,qBAAqBrC,aAAaA,aAAa,KACnT,SAASqE,EAAEjG,GAAG,IAAI,IAAIuB,EAAEH,EAAEjD,GAAG,OAAOoD,GAAG,CAAC,GAAG,OAAOA,EAAEk3C,SAAS32C,EAAE3D,OAAQ,MAAGoD,EAAEmxD,WAAW1yD,GAAgD,MAA9C8B,EAAE3D,GAAGoD,EAAEixD,UAAUjxD,EAAEoxD,eAAepzD,EAAET,EAAEyC,EAAa,CAACA,EAAEH,EAAEjD,EAAE,CAAC,CAAC,SAASgI,EAAEnG,GAAa,GAAV+D,GAAE,EAAGkC,EAAEjG,IAAOqD,EAAE,GAAG,OAAOjC,EAAEtC,GAAGuE,GAAE,EAAGO,EAAEwC,OAAO,CAAC,IAAI7E,EAAEH,EAAEjD,GAAG,OAAOoD,GAAGuB,EAAEqD,EAAE5E,EAAEmxD,UAAU1yD,EAAE,CAAC,CACra,SAASoG,EAAEpG,EAAEuB,GAAG8B,GAAE,EAAGU,IAAIA,GAAE,EAAGnB,EAAEgC,GAAGA,GAAG,GAAGM,GAAE,EAAG,IAAI/E,EAAEsB,EAAE,IAAS,IAALwE,EAAE1E,GAAOI,EAAEP,EAAEtC,GAAG,OAAO6C,MAAMA,EAAEgxD,eAAepxD,IAAIvB,IAAImE,MAAM,CAAC,IAAI7C,EAAEK,EAAE82C,SAAS,GAAG,oBAAoBn3C,EAAE,CAACK,EAAE82C,SAAS,KAAKh3C,EAAEE,EAAEixD,cAAc,IAAI10D,EAAEoD,EAAEK,EAAEgxD,gBAAgBpxD,GAAGA,EAAEvD,EAAQwgC,eAAe,oBAAoBtgC,EAAEyD,EAAE82C,SAASv6C,EAAEyD,IAAIP,EAAEtC,IAAIgD,EAAEhD,GAAGmH,EAAE1E,EAAE,MAAMO,EAAEhD,GAAG6C,EAAEP,EAAEtC,EAAE,CAAC,GAAG,OAAO6C,EAAE,IAAI/C,GAAE,MAAO,CAAC,IAAIyB,EAAEe,EAAEjD,GAAG,OAAOkC,GAAGyC,EAAEqD,EAAE9F,EAAEqyD,UAAUnxD,GAAG3C,GAAE,CAAE,CAAC,OAAOA,CAAC,CAAC,QAAQ+C,EAAE,KAAKF,EAAEtB,EAAE+E,GAAE,CAAE,CAAC,CAD1a,qBAAqBqb,gBAAW,IAASA,UAAUsyC,iBAAY,IAAStyC,UAAUsyC,WAAWC,gBAAgBvyC,UAAUsyC,WAAWC,eAAe3xD,KAAKof,UAAUsyC,YAC2Q,IACzP9vD,EAD6P0B,GAAE,EAAGjC,EAAE,KAAKoC,GAAG,EAAE1C,EAAE,EAAE8D,GAAG,EACvc,SAAS7B,IAAI,QAAOnG,EAAQwgC,eAAex4B,EAAE9D,EAAO,CAAC,SAASgC,IAAI,GAAG,OAAO1B,EAAE,CAAC,IAAIxC,EAAEhC,EAAQwgC,eAAex4B,EAAEhG,EAAE,IAAIuB,GAAE,EAAG,IAAIA,EAAEiB,GAAE,EAAGxC,EAAE,CAAC,QAAQuB,EAAEwB,KAAK0B,GAAE,EAAGjC,EAAE,KAAK,CAAC,MAAMiC,GAAE,CAAE,CAAO,GAAG,oBAAoBR,EAAElB,EAAE,WAAWkB,EAAEC,EAAE,OAAO,GAAG,qBAAqB6uD,eAAe,CAAC,IAAIrvD,EAAE,IAAIqvD,eAAejuD,EAAEpB,EAAEsvD,MAAMtvD,EAAEuvD,MAAMzkC,UAAUtqB,EAAEnB,EAAE,WAAW+B,EAAE6pB,YAAY,KAAK,CAAC,MAAM5rB,EAAE,WAAWU,EAAES,EAAE,EAAE,EAAE,SAASN,EAAE5D,GAAGwC,EAAExC,EAAEyE,IAAIA,GAAE,EAAG1B,IAAI,CAAC,SAASD,EAAE9C,EAAEuB,GAAGqD,EAAEnB,GAAE,WAAWzD,EAAEhC,EAAQwgC,eAAe,GAAEj9B,EAAE,CAC5dvD,EAAQohC,sBAAsB,EAAEphC,EAAQ4gC,2BAA2B,EAAE5gC,EAAQkhC,qBAAqB,EAAElhC,EAAQghC,wBAAwB,EAAEhhC,EAAQk1D,mBAAmB,KAAKl1D,EAAQ8gC,8BAA8B,EAAE9gC,EAAQmgC,wBAAwB,SAASn+B,GAAGA,EAAEy4C,SAAS,IAAI,EAAEz6C,EAAQm1D,2BAA2B,WAAW9vD,GAAG6B,IAAI7B,GAAE,EAAGO,EAAEwC,GAAG,EAC1UpI,EAAQo1D,wBAAwB,SAASpzD,GAAG,EAAEA,GAAG,IAAIA,EAAEqP,QAAQ+I,MAAM,mHAAmHlW,EAAE,EAAElC,EAAEyY,KAAK46C,MAAM,IAAIrzD,GAAG,CAAC,EAAEhC,EAAQ0gC,iCAAiC,WAAW,OAAOj9B,CAAC,EAAEzD,EAAQs1D,8BAA8B,WAAW,OAAOlyD,EAAEtC,EAAE,EAAEd,EAAQu1D,cAAc,SAASvzD,GAAG,OAAOyB,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,IAAIF,EAAE,EAAE,MAAM,QAAQA,EAAEE,EAAE,IAAItB,EAAEsB,EAAEA,EAAEF,EAAE,IAAI,OAAOvB,GAAG,CAAC,QAAQyB,EAAEtB,CAAC,CAAC,EAAEnC,EAAQw1D,wBAAwB,WAAW,EAC9fx1D,EAAQugC,sBAAsB,WAAW,EAAEvgC,EAAQy1D,yBAAyB,SAASzzD,EAAEuB,GAAG,OAAOvB,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,QAAQA,EAAE,EAAE,IAAIG,EAAEsB,EAAEA,EAAEzB,EAAE,IAAI,OAAOuB,GAAG,CAAC,QAAQE,EAAEtB,CAAC,CAAC,EAChMnC,EAAQigC,0BAA0B,SAASj+B,EAAEuB,EAAEpB,GAAG,IAAImB,EAAEtD,EAAQwgC,eAA8F,OAA/E,kBAAkBr+B,GAAG,OAAOA,EAAaA,EAAE,kBAAZA,EAAEA,EAAEuzD,QAA6B,EAAEvzD,EAAEmB,EAAEnB,EAAEmB,EAAGnB,EAAEmB,EAAStB,GAAG,KAAK,EAAE,IAAI9B,GAAG,EAAE,MAAM,KAAK,EAAEA,EAAE,IAAI,MAAM,KAAK,EAAEA,EAAE,WAAW,MAAM,KAAK,EAAEA,EAAE,IAAI,MAAM,QAAQA,EAAE,IAAmN,OAAzM8B,EAAE,CAACwI,GAAG/H,IAAIg4C,SAASl3C,EAAEqxD,cAAc5yD,EAAE0yD,UAAUvyD,EAAEwyD,eAAvDz0D,EAAEiC,EAAEjC,EAAoEs0D,WAAW,GAAGryD,EAAEmB,GAAGtB,EAAEwyD,UAAUryD,EAAEZ,EAAEpB,EAAE6B,GAAG,OAAOoB,EAAEtC,IAAIkB,IAAIoB,EAAEjD,KAAK4F,GAAGnB,EAAEgC,GAAGA,GAAG,GAAGb,GAAE,EAAGjB,EAAEqD,EAAEhG,EAAEmB,MAAMtB,EAAEwyD,UAAUt0D,EAAEqB,EAAET,EAAEkB,GAAGqD,GAAG6B,IAAI7B,GAAE,EAAGO,EAAEwC,KAAYpG,CAAC,EACnehC,EAAQqgC,qBAAqBl6B,EAAEnG,EAAQ21D,sBAAsB,SAAS3zD,GAAG,IAAIuB,EAAEE,EAAE,OAAO,WAAW,IAAItB,EAAEsB,EAAEA,EAAEF,EAAE,IAAI,OAAOvB,EAAEd,MAAMC,KAAKJ,UAAU,CAAC,QAAQ0C,EAAEtB,CAAC,CAAC,CAAC,8BCf7JpC,EAAOC,QAAU,EAAjBD,OCFE61D,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBzB,IAAjB0B,EACH,OAAOA,EAAa/1D,QAGrB,IAAID,EAAS61D,EAAyBE,GAAY,CAGjD91D,QAAS,CAAC,GAOX,OAHAg2D,EAAoBF,GAAUn1D,KAAKZ,EAAOC,QAASD,EAAQA,EAAOC,QAAS61D,GAGpE91D,EAAOC,OACf,CAGA61D,EAAoBxzD,EAAI2zD,QCzBxB,IACIC,EADAC,EAAW91D,OAAOgC,eAAkB+zD,GAAS/1D,OAAOgC,eAAe+zD,GAASA,GAASA,EAAa,UAQtGN,EAAoB11D,EAAI,SAAS2C,EAAOsc,GAEvC,GADU,EAAPA,IAAUtc,EAAQ3B,KAAK2B,IAChB,EAAPsc,EAAU,OAAOtc,EACpB,GAAoB,kBAAVA,GAAsBA,EAAO,CACtC,GAAW,EAAPsc,GAAatc,EAAMszD,WAAY,OAAOtzD,EAC1C,GAAW,GAAPsc,GAAoC,oBAAftc,EAAM8F,KAAqB,OAAO9F,CAC5D,CACA,IAAIuzD,EAAKj2D,OAAO6C,OAAO,MACvB4yD,EAAoB/0D,EAAEu1D,GACtB,IAAIrxC,EAAM,CAAC,EACXixC,EAAiBA,GAAkB,CAAC,KAAMC,EAAS,CAAC,GAAIA,EAAS,IAAKA,EAASA,IAC/E,IAAI,IAAIr2B,EAAiB,EAAPzgB,GAAYtc,EAAyB,iBAAX+8B,KAAyBo2B,EAAejyD,QAAQ67B,GAAUA,EAAUq2B,EAASr2B,GACxHz/B,OAAOmV,oBAAoBsqB,GAAS59B,SAASoR,GAAS2R,EAAI3R,GAAO,IAAOvQ,EAAMuQ,KAI/E,OAFA2R,EAAa,QAAI,IAAM,EACvB6wC,EAAoBvyD,EAAE+yD,EAAIrxC,GACnBqxC,CACR,MCxBAR,EAAoBvyD,EAAI,CAACtD,EAASs2D,KACjC,IAAI,IAAIjjD,KAAOijD,EACXT,EAAoBz0D,EAAEk1D,EAAYjjD,KAASwiD,EAAoBz0D,EAAEpB,EAASqT,IAC5EjT,OAAOsC,eAAe1C,EAASqT,EAAK,CAAEgC,YAAY,EAAM1S,IAAK2zD,EAAWjjD,IAE1E,ECNDwiD,EAAoBt0D,EAAI,CAAC,EAGzBs0D,EAAoB31D,EAAKq2D,GACjBr0D,QAAQoL,IAAIlN,OAAOyB,KAAKg0D,EAAoBt0D,GAAG8F,QAAO,CAACmvD,EAAUnjD,KACvEwiD,EAAoBt0D,EAAE8R,GAAKkjD,EAASC,GAC7BA,IACL,KCNJX,EAAoBpzD,EAAK8zD,GAEjB,aAAeA,EAAf,qBCFRV,EAAoBY,SAAYF,IAEf,ECHjBV,EAAoBtxD,EAAI,WACvB,GAA0B,kBAAf/C,WAAyB,OAAOA,WAC3C,IACC,OAAOL,MAAQ,IAAIu1D,SAAS,cAAb,EAChB,CAAE,MAAOx2D,GACR,GAAsB,kBAAXwB,OAAqB,OAAOA,MACxC,CACA,CAPuB,GCAxBm0D,EAAoBz0D,EAAI,CAAC+0D,EAAKQ,IAAUv2D,OAAOK,UAAUC,eAAeC,KAAKw1D,EAAKQ,SCAlF,IAAIC,EAAa,CAAC,EACdC,EAAoB,cAExBhB,EAAoBrzD,EAAI,CAACmrC,EAAK7nC,EAAMuN,EAAKkjD,KACxC,GAAGK,EAAWjpB,GAAQipB,EAAWjpB,GAAK5pC,KAAK+B,OAA3C,CACA,IAAIgxD,EAAQC,EACZ,QAAW1C,IAARhhD,EAEF,IADA,IAAI2jD,EAAUjlC,SAASklC,qBAAqB,UACpCh2D,EAAI,EAAGA,EAAI+1D,EAAQh2D,OAAQC,IAAK,CACvC,IAAIhB,EAAI+2D,EAAQ/1D,GAChB,GAAGhB,EAAEi3D,aAAa,QAAUvpB,GAAO1tC,EAAEi3D,aAAa,iBAAmBL,EAAoBxjD,EAAK,CAAEyjD,EAAS72D,EAAG,KAAO,CACpH,CAEG62D,IACHC,GAAa,GACbD,EAAS/kC,SAASC,cAAc,WAEzBmlC,QAAU,QACjBL,EAAO5pD,QAAU,IACb2oD,EAAoBuB,IACvBN,EAAO3jC,aAAa,QAAS0iC,EAAoBuB,IAElDN,EAAO3jC,aAAa,eAAgB0jC,EAAoBxjD,GAExDyjD,EAAOj2C,IAAM8sB,GAEdipB,EAAWjpB,GAAO,CAAC7nC,GACnB,IAAIuxD,EAAmB,CAACC,EAAMzpB,KAE7BipB,EAAOvuD,QAAUuuD,EAAOS,OAAS,KACjCnqD,aAAaF,GACb,IAAIsqD,EAAUZ,EAAWjpB,GAIzB,UAHOipB,EAAWjpB,GAClBmpB,EAAOt5B,YAAcs5B,EAAOt5B,WAAWlF,YAAYw+B,GACnDU,GAAWA,EAAQv1D,SAAS+hB,GAAQA,EAAG6pB,KACpCypB,EAAM,OAAOA,EAAKzpB,EAAM,EAExB3gC,EAAUrJ,WAAWwzD,EAAiBl0D,KAAK,UAAMkxD,EAAW,CAAErkD,KAAM,UAAWqO,OAAQy4C,IAAW,MACtGA,EAAOvuD,QAAU8uD,EAAiBl0D,KAAK,KAAM2zD,EAAOvuD,SACpDuuD,EAAOS,OAASF,EAAiBl0D,KAAK,KAAM2zD,EAAOS,QACnDR,GAAchlC,SAAS0lC,KAAKl/B,YAAYu+B,EApCkB,CAoCX,MCvChDjB,EAAoB/0D,EAAKd,IACH,qBAAXuF,QAA0BA,OAAOS,aAC1C5F,OAAOsC,eAAe1C,EAASuF,OAAOS,YAAa,CAAElD,MAAO,WAE7D1C,OAAOsC,eAAe1C,EAAS,aAAc,CAAE8C,OAAO,GAAO,ECL9D+yD,EAAoBryD,EAAI,qBCKxB,IAAIk0D,EAAkB,CACrB,IAAK,GAGN7B,EAAoBt0D,EAAE4D,EAAI,CAACoxD,EAASC,KAElC,IAAImB,EAAqB9B,EAAoBz0D,EAAEs2D,EAAiBnB,GAAWmB,EAAgBnB,QAAWlC,EACtG,GAA0B,IAAvBsD,EAGF,GAAGA,EACFnB,EAASzyD,KAAK4zD,EAAmB,QAC3B,CAGL,IAAI3rC,EAAU,IAAI9pB,SAAQ,CAACqH,EAAS+C,IAAYqrD,EAAqBD,EAAgBnB,GAAW,CAAChtD,EAAS+C,KAC1GkqD,EAASzyD,KAAK4zD,EAAmB,GAAK3rC,GAGtC,IAAI2hB,EAAMkoB,EAAoBryD,EAAIqyD,EAAoBpzD,EAAE8zD,GAEpDn8C,EAAQ,IAAI1W,MAgBhBmyD,EAAoBrzD,EAAEmrC,GAfFE,IACnB,GAAGgoB,EAAoBz0D,EAAEs2D,EAAiBnB,KAEf,KAD1BoB,EAAqBD,EAAgBnB,MACRmB,EAAgBnB,QAAWlC,GACrDsD,GAAoB,CACtB,IAAIC,EAAY/pB,IAAyB,SAAfA,EAAM79B,KAAkB,UAAY69B,EAAM79B,MAChE6nD,EAAUhqB,GAASA,EAAMxvB,QAAUwvB,EAAMxvB,OAAOwC,IACpDzG,EAAMzT,QAAU,iBAAmB4vD,EAAU,cAAgBqB,EAAY,KAAOC,EAAU,IAC1Fz9C,EAAM1T,KAAO,iBACb0T,EAAMpK,KAAO4nD,EACbx9C,EAAM09C,QAAUD,EAChBF,EAAmB,GAAGv9C,EACvB,CACD,GAEwC,SAAWm8C,EAASA,EAE/D,CACD,EAcF,IAAIwB,EAAuB,CAACC,EAA4BvnC,KACvD,IAKIqlC,EAAUS,EALV0B,EAAWxnC,EAAK,GAChBynC,EAAcznC,EAAK,GACnB0nC,EAAU1nC,EAAK,GAGIxvB,EAAI,EAC3B,GAAGg3D,EAASzrD,MAAMhC,GAAgC,IAAxBktD,EAAgBltD,KAAa,CACtD,IAAIsrD,KAAYoC,EACZrC,EAAoBz0D,EAAE82D,EAAapC,KACrCD,EAAoBxzD,EAAEyzD,GAAYoC,EAAYpC,IAGhD,GAAGqC,EAAsBA,EAAQtC,EAClC,CAEA,IADGmC,GAA4BA,EAA2BvnC,GACrDxvB,EAAIg3D,EAASj3D,OAAQC,IACzBs1D,EAAU0B,EAASh3D,GAChB40D,EAAoBz0D,EAAEs2D,EAAiBnB,IAAYmB,EAAgBnB,IACrEmB,EAAgBnB,GAAS,KAE1BmB,EAAgBnB,GAAW,CAC5B,EAIG6B,EAAqB32D,KAA6B,uBAAIA,KAA6B,wBAAK,GAC5F22D,EAAmBn2D,QAAQ81D,EAAqB50D,KAAK,KAAM,IAC3Di1D,EAAmBr0D,KAAOg0D,EAAqB50D,KAAK,KAAMi1D,EAAmBr0D,KAAKZ,KAAKi1D,gDCvEnFC,EAAgB,SAAS/0D,EAAGC,GAI9B,OAHA80D,EAAgBj4D,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAU+C,EAAGC,GAAKD,EAAEhD,UAAYiD,CAAG,GAC1E,SAAUD,EAAGC,GAAK,IAAK,IAAIC,KAAKD,EAAOnD,OAAOK,UAAUC,eAAeC,KAAK4C,EAAGC,KAAIF,EAAEE,GAAKD,EAAEC,GAAI,EAC7F60D,EAAc/0D,EAAGC,EAC1B,EAEO,SAAS+0D,EAAUh1D,EAAGC,GAC3B,GAAiB,oBAANA,GAA0B,OAANA,EAC3B,MAAM,IAAIqE,UAAU,uBAAyB0H,OAAO/L,GAAK,iCAE7D,SAASg1D,IAAOp3D,KAAK+D,YAAc5B,CAAG,CADtC+0D,EAAc/0D,EAAGC,GAEjBD,EAAE7C,UAAkB,OAAN8C,EAAanD,OAAO6C,OAAOM,IAAMg1D,EAAG93D,UAAY8C,EAAE9C,UAAW,IAAI83D,EACjF,CAEO,IAAIC,EAAW,WAQpB,OAPAA,EAAWp4D,OAAOS,QAAU,SAAkBV,GAC1C,IAAK,IAAIF,EAAGgB,EAAI,EAAGT,EAAIO,UAAUC,OAAQC,EAAIT,EAAGS,IAE5C,IAAK,IAAIuC,KADTvD,EAAIc,UAAUE,GACOb,OAAOK,UAAUC,eAAeC,KAAKV,EAAGuD,KAAIrD,EAAEqD,GAAKvD,EAAEuD,IAE9E,OAAOrD,CACX,EACOq4D,EAASt3D,MAAMC,KAAMJ,UAC9B,EAEO,SAAS03D,EAAOx4D,EAAGC,GACxB,IAAIC,EAAI,CAAC,EACT,IAAK,IAAIqD,KAAKvD,EAAOG,OAAOK,UAAUC,eAAeC,KAAKV,EAAGuD,IAAMtD,EAAE8D,QAAQR,GAAK,IAC9ErD,EAAEqD,GAAKvD,EAAEuD,IACb,GAAS,MAALvD,GAAqD,oBAAjCG,OAAOs4D,sBACtB,KAAIz3D,EAAI,EAAb,IAAgBuC,EAAIpD,OAAOs4D,sBAAsBz4D,GAAIgB,EAAIuC,EAAExC,OAAQC,IAC3Df,EAAE8D,QAAQR,EAAEvC,IAAM,GAAKb,OAAOK,UAAUk4D,qBAAqBh4D,KAAKV,EAAGuD,EAAEvC,MACvEd,EAAEqD,EAAEvC,IAAMhB,EAAEuD,EAAEvC,IAF4B,CAItD,OAAOd,CACT,CA8DO,SAASy4D,EAAUC,EAASC,EAAY50D,EAAG60D,GAEhD,OAAO,IAAK70D,IAAMA,EAAIhC,WAAU,SAAUqH,EAAS+C,GAC/C,SAAS0sD,EAAUl2D,GAAS,IAAMm2D,EAAKF,EAAUlzD,KAAK/C,GAAS,CAAE,MAAO5C,IAAKoM,EAAOpM,GAAI,CAAE,CAC1F,SAASg5D,EAASp2D,GAAS,IAAMm2D,EAAKF,EAAiB,MAAEj2D,GAAS,CAAE,MAAO5C,IAAKoM,EAAOpM,GAAI,CAAE,CAC7F,SAAS+4D,EAAKr+C,GAJlB,IAAe9X,EAIa8X,EAAO9U,KAAOyD,EAAQqR,EAAO9X,QAJ1CA,EAIyD8X,EAAO9X,MAJhDA,aAAiBoB,EAAIpB,EAAQ,IAAIoB,GAAE,SAAUqF,GAAWA,EAAQzG,EAAQ,KAIjB8F,KAAKowD,EAAWE,EAAW,CAC7GD,GAAMF,EAAYA,EAAU73D,MAAM23D,EAASC,GAAc,KAAKjzD,OAClE,GACF,CAEO,SAASszD,EAAYN,EAASziC,GACnC,IAAsG70B,EAAGkC,EAAGtD,EAAGoE,EAA3G3C,EAAI,CAAEw3D,MAAO,EAAGC,KAAM,WAAa,GAAW,EAAPl5D,EAAE,GAAQ,MAAMA,EAAE,GAAI,OAAOA,EAAE,EAAI,EAAGm5D,KAAM,GAAIC,IAAK,IAChG,OAAOh1D,EAAI,CAAEsB,KAAM2zD,EAAK,GAAI,MAASA,EAAK,GAAI,OAAUA,EAAK,IAAwB,oBAAXj0D,SAA0BhB,EAAEgB,OAAOC,UAAY,WAAa,OAAOrE,IAAM,GAAIoD,EACvJ,SAASi1D,EAAKh5D,GAAK,OAAO,SAAUmD,GAAK,OACzC,SAAc81D,GACV,GAAIl4D,EAAG,MAAM,IAAIqG,UAAU,mCAC3B,KAAOrD,IAAMA,EAAI,EAAGk1D,EAAG,KAAO73D,EAAI,IAAKA,OACnC,GAAIL,EAAI,EAAGkC,IAAMtD,EAAY,EAARs5D,EAAG,GAASh2D,EAAU,OAAIg2D,EAAG,GAAKh2D,EAAS,SAAOtD,EAAIsD,EAAU,SAAMtD,EAAEQ,KAAK8C,GAAI,GAAKA,EAAEoC,SAAW1F,EAAIA,EAAEQ,KAAK8C,EAAGg2D,EAAG,KAAK3zD,KAAM,OAAO3F,EAE3J,OADIsD,EAAI,EAAGtD,IAAGs5D,EAAK,CAAS,EAARA,EAAG,GAAQt5D,EAAE2C,QACzB22D,EAAG,IACP,KAAK,EAAG,KAAK,EAAGt5D,EAAIs5D,EAAI,MACxB,KAAK,EAAc,OAAX73D,EAAEw3D,QAAgB,CAAEt2D,MAAO22D,EAAG,GAAI3zD,MAAM,GAChD,KAAK,EAAGlE,EAAEw3D,QAAS31D,EAAIg2D,EAAG,GAAIA,EAAK,CAAC,GAAI,SACxC,KAAK,EAAGA,EAAK73D,EAAE23D,IAAIrqD,MAAOtN,EAAE03D,KAAKpqD,MAAO,SACxC,QACI,KAAkB/O,GAAZA,EAAIyB,EAAE03D,MAAYt4D,OAAS,GAAKb,EAAEA,EAAEa,OAAS,MAAkB,IAAVy4D,EAAG,IAAsB,IAAVA,EAAG,IAAW,CAAE73D,EAAI,EAAG,QAAU,CAC3G,GAAc,IAAV63D,EAAG,MAAct5D,GAAMs5D,EAAG,GAAKt5D,EAAE,IAAMs5D,EAAG,GAAKt5D,EAAE,IAAM,CAAEyB,EAAEw3D,MAAQK,EAAG,GAAI,KAAO,CACrF,GAAc,IAAVA,EAAG,IAAY73D,EAAEw3D,MAAQj5D,EAAE,GAAI,CAAEyB,EAAEw3D,MAAQj5D,EAAE,GAAIA,EAAIs5D,EAAI,KAAO,CACpE,GAAIt5D,GAAKyB,EAAEw3D,MAAQj5D,EAAE,GAAI,CAAEyB,EAAEw3D,MAAQj5D,EAAE,GAAIyB,EAAE23D,IAAIx1D,KAAK01D,GAAK,KAAO,CAC9Dt5D,EAAE,IAAIyB,EAAE23D,IAAIrqD,MAChBtN,EAAE03D,KAAKpqD,MAAO,SAEtBuqD,EAAKrjC,EAAKz1B,KAAKk4D,EAASj3D,EAC5B,CAAE,MAAO1B,IAAKu5D,EAAK,CAAC,EAAGv5D,IAAIuD,EAAI,CAAG,CAAE,QAAUlC,EAAIpB,EAAI,CAAG,CACzD,GAAY,EAARs5D,EAAG,GAAQ,MAAMA,EAAG,GAAI,MAAO,CAAE32D,MAAO22D,EAAG,GAAKA,EAAG,QAAK,EAAQ3zD,MAAM,EAC9E,CAtBgDmzD,CAAK,CAACz4D,EAAGmD,GAAK,CAAG,CAuBnE,CAE6BvD,OAAO6C,OAgB7B,SAASy2D,EAASt4D,GACvB,IAAInB,EAAsB,oBAAXsF,QAAyBA,OAAOC,SAAUnD,EAAIpC,GAAKmB,EAAEnB,GAAIgB,EAAI,EAC5E,GAAIoB,EAAG,OAAOA,EAAE1B,KAAKS,GACrB,GAAIA,GAAyB,kBAAbA,EAAEJ,OAAqB,MAAO,CAC1C6E,KAAM,WAEF,OADIzE,GAAKH,GAAKG,EAAEJ,SAAQI,OAAI,GACrB,CAAE0B,MAAO1B,GAAKA,EAAEH,KAAM6E,MAAO1E,EACxC,GAEJ,MAAM,IAAIwG,UAAU3H,EAAI,0BAA4B,kCACtD,CAEO,SAAS05D,EAAOv4D,EAAGZ,GACxB,IAAI6B,EAAsB,oBAAXkD,QAAyBnE,EAAEmE,OAAOC,UACjD,IAAKnD,EAAG,OAAOjB,EACf,IAAmBN,EAAYZ,EAA3Be,EAAIoB,EAAE1B,KAAKS,GAAOmtB,EAAK,GAC3B,IACI,WAAc,IAAN/tB,GAAgBA,KAAM,MAAQM,EAAIG,EAAE4E,QAAQC,MAAMyoB,EAAGxqB,KAAKjD,EAAEgC,MACxE,CACA,MAAOsX,GAASla,EAAI,CAAEka,MAAOA,EAAS,CAAC,QAEnC,IACQtZ,IAAMA,EAAEgF,OAASzD,EAAIpB,EAAU,SAAIoB,EAAE1B,KAAKM,EAClD,CAAC,QACS,GAAIf,EAAG,MAAMA,EAAEka,KAAO,CACpC,CACA,OAAOmU,CACT,CAkBO,SAASqrC,EAAcrzC,EAAIvjB,EAAM62D,GACtC,GAAIA,GAA6B,IAArB94D,UAAUC,OAAc,IAAK,IAA4ButB,EAAxBttB,EAAI,EAAGuB,EAAIQ,EAAKhC,OAAYC,EAAIuB,EAAGvB,KACxEstB,GAAQttB,KAAK+B,IACRurB,IAAIA,EAAKhuB,MAAME,UAAUY,MAAMV,KAAKqC,EAAM,EAAG/B,IAClDstB,EAAGttB,GAAK+B,EAAK/B,IAGrB,OAAOslB,EAAGjlB,OAAOitB,GAAMhuB,MAAME,UAAUY,MAAMV,KAAKqC,GACpD,CAEO,SAAS82D,EAAQn2D,GACtB,OAAOxC,gBAAgB24D,GAAW34D,KAAKwC,EAAIA,EAAGxC,MAAQ,IAAI24D,EAAQn2D,EACpE,CAEO,SAASo2D,EAAiBlB,EAASC,EAAYC,GACpD,IAAKxzD,OAAOy0D,cAAe,MAAM,IAAIpyD,UAAU,wCAC/C,IAAoD3G,EAAhDsD,EAAIw0D,EAAU73D,MAAM23D,EAASC,GAAc,IAAQnzD,EAAI,GAC3D,OAAO1E,EAAI,CAAC,EAAGu4D,EAAK,QAASA,EAAK,SAAUA,EAAK,UACjD,SAAqBj4D,GAAK,OAAO,SAAUoC,GAAK,OAAOzB,QAAQqH,QAAQ5F,GAAGiF,KAAKrH,EAAG+K,EAAS,CAAG,IADrBrL,EAAEsE,OAAOy0D,eAAiB,WAAc,OAAO74D,IAAM,EAAGF,EAEjI,SAASu4D,EAAKh5D,EAAGe,GAASgD,EAAE/D,KAAMS,EAAET,GAAK,SAAUmD,GAAK,OAAO,IAAIzB,SAAQ,SAAUF,EAAGuB,GAAKoC,EAAE5B,KAAK,CAACvD,EAAGmD,EAAG3B,EAAGuB,IAAM,GAAK02D,EAAOz5D,EAAGmD,EAAI,GAAI,EAAOpC,IAAGN,EAAET,GAAKe,EAAEN,EAAET,KAAO,CACvK,SAASy5D,EAAOz5D,EAAGmD,GAAK,KACV7C,EADqByD,EAAE/D,GAAGmD,IACnBb,iBAAiBg3D,EAAU53D,QAAQqH,QAAQzI,EAAEgC,MAAMa,GAAGiF,KAAKsxD,EAAS5tD,GAAU6tD,EAAOx0D,EAAE,GAAG,GAAI7E,EADtE,CAAE,MAAOZ,IAAKi6D,EAAOx0D,EAAE,GAAG,GAAIzF,GAAI,CAC/E,IAAcY,CADmE,CAEjF,SAASo5D,EAAQp3D,GAASm3D,EAAO,OAAQn3D,EAAQ,CACjD,SAASwJ,EAAOxJ,GAASm3D,EAAO,QAASn3D,EAAQ,CACjD,SAASq3D,EAAO54D,EAAGoC,GAASpC,EAAEoC,GAAIgC,EAAEwZ,QAASxZ,EAAE3E,QAAQi5D,EAAOt0D,EAAE,GAAG,GAAIA,EAAE,GAAG,GAAK,CACnF,CAQO,SAASy0D,EAAch5D,GAC5B,IAAKmE,OAAOy0D,cAAe,MAAM,IAAIpyD,UAAU,wCAC/C,IAAiC3G,EAA7BoB,EAAIjB,EAAEmE,OAAOy0D,eACjB,OAAO33D,EAAIA,EAAE1B,KAAKS,IAAMA,EAAqCs4D,EAASt4D,GAA2BH,EAAI,CAAC,EAAGu4D,EAAK,QAASA,EAAK,SAAUA,EAAK,UAAWv4D,EAAEsE,OAAOy0D,eAAiB,WAAc,OAAO74D,IAAM,EAAGF,GAC9M,SAASu4D,EAAKh5D,GAAKS,EAAET,GAAKY,EAAEZ,IAAM,SAAUmD,GAAK,OAAO,IAAIzB,SAAQ,SAAUqH,EAAS+C,IACvF,SAAgB/C,EAAS+C,EAAQhJ,EAAGK,GAAKzB,QAAQqH,QAAQ5F,GAAGiF,MAAK,SAASjF,GAAK4F,EAAQ,CAAEzG,MAAOa,EAAGmC,KAAMxC,GAAM,GAAGgJ,EAAS,EADb6tD,CAAO5wD,EAAS+C,GAA7B3I,EAAIvC,EAAEZ,GAAGmD,IAA8BmC,KAAMnC,EAAEb,MAAQ,GAAI,CAAG,CAEjK,CAOyB1C,OAAO6C,OA2DkB,oBAApBo3D,iBAAiCA,gBC9T/D,IAAMC,EAAiB,sBAErBC,EAIEn6D,OAAaC,eAJfA,OAAc,IAAAk6D,EAAG,SAAUpE,EAAUqE,GAEnC,OADArE,EAAI71D,UAAYk6D,EACTrE,CACT,EAACoE,EAGHE,EAAA,SAAAC,GAGE,SAAAD,EAAY9zD,QAAA,IAAAA,IAAAA,EAAA2zD,GAAZ,IAAAK,EACED,EAAA/5D,KAAA,KACqB,kBAAZgG,EACA2zD,EAAc,KAAK3zD,EAAO,6DAC7BA,IACL,YAPHg0D,EAAAC,YAAc,EACdD,EAAAj0D,KAAO4zD,EAOLj6D,EAAes6D,EAAMF,EAAeh6D,YACtC,CACF,OAXoC63D,EAAAmC,EAAAC,GAWpCD,CAAA,CAXA,CAAoC/2D,OAa9B,SAAUm3D,EACdC,EACAn0D,GAEA,IAAKm0D,EACH,MAAM,IAAIL,EAAe9zD,EAE7B,CAEA,IAAMo0D,EAAkB,CAAC,QAAS,MAAO,OAAQ,QAAS,UAGtDC,EAAiBD,EAAgB/2D,QAAQ,OAE7C,SAASi3D,EAA+Cv0D,GACtD,OAAO,WACL,GAAIq0D,EAAgB/2D,QAAQ0C,IAASs0D,EAInC,OADe3pD,QAAQ3K,IAAS2K,QAAQswB,KAC1BzgC,MAAMmQ,QAAStQ,UAEjC,CACF,EAEA,SAAiB85D,GACFA,EAAA91C,MAAQk2C,EAAkB,SAC1BJ,EAAAl5B,IAAMs5B,EAAkB,OACxBJ,EAAAtoD,KAAO0oD,EAAkB,QACzBJ,EAAAzgD,MAAQ6gD,EAAkB,QACxC,CALD,CAAiBJ,IAAAA,EAAS,KC9CnB,IAAMt3C,EAAU,SCAjB,SAAU23C,EAASC,GACvB,IACE,OAAOA,GACT,CAAE,MAAAZ,GAAO,CACX,CCKA,QAAgBW,GAAM,WAAM,OAAA15D,UAAA,KAC1B05D,GAAM,WAAM,OAAAx5D,MAAA,KACZw5D,GAAM,WAAM,OAAAz5D,IAAA,KACZy5D,GAAM,WAAM,OAAAv5D,MAAA,QAMZ,WACA,OAAMu5D,EAAAh2D,YAAA,cAAAg2D,MCnBR,IAAME,EAAe,IAAIhvC,IAInB,SAAUivC,EAAaC,GAC3B,IAAM3mD,EAAQymD,EAAaz4D,IAAI24D,IAAW,EAE1C,OADAF,EAAax4D,IAAI04D,EAAQ3mD,EAAQ,GAC1B,GAAArT,OAAGg6D,EAAM,KAAAh6D,OAAIqT,EAAK,KAAArT,OAAImZ,KAAK82B,SAASnsC,SAAS,IAAI/D,MAAM,GAChE,CCNM,SAAUk6D,EAAoBz4D,EAAY04D,QAAA,IAAAA,IAAAA,EAAA,GAC9C,IAAMC,EAAUJ,EAAa,uBAC7B,OAAOnnD,KAAKC,UACVrR,GACA,SAACuQ,EAAKvQ,GACJ,YAAiB,IAAVA,EAAmB24D,EAAU34D,CACtC,GACA04D,GAEC/2D,MAAMyP,KAAKC,UAAUsnD,IACrB50D,KAAK,cACV,CCPA,SAAS60D,EAAK13C,GACZ,OAAO,SAAUrd,OAA2B,IAAAg1D,EAAA,GAAAC,EAAA,EAAAA,EAAA76D,UAAAC,OAAA46D,IAAAD,EAAAC,EAAA,GAAA76D,UAAA66D,GAC1C,GAAuB,kBAAZj1D,EAAsB,CAC/B,IAAMk1D,EAAOl1D,GACbA,EAAUm1D,EAAmBD,MAE3Bl1D,EAAUo1D,EAAoBF,EAAMF,GACpCA,EAAO,GAEX,CACA33C,EAAE9iB,WAAC,EAAG,CAACyF,GAASrF,OAAOq6D,GACzB,CACF,CAgDA,IAAMd,EAA8Bz6D,OAAOS,QACzC,SACEi6D,EACAn0D,OACA,IAAAg1D,EAAA,GAAAC,EAAA,EAAAA,EAAA76D,UAAAC,OAAA46D,IAAAD,EAAAC,EAAA,GAAA76D,UAAA66D,GAEKd,GACHkB,EACElB,EACAgB,EAAmBn1D,EAASg1D,IAASI,EAAoBp1D,EAASg1D,GAGxE,GACA,CACE52C,MAAO22C,EAAKM,EAAkBj3C,OAC9B4c,IAAK+5B,EAAKM,EAAkBr6B,KAC5BpvB,KAAMmpD,EAAKM,EAAkBzpD,MAC7B6H,MAAOshD,EAAKM,EAAkB5hD,SAclC,SAAS6hD,EACPt1D,OACA,IAAAu1D,EAAA,GAAAN,EAAA,EAAAA,EAAA76D,UAAAC,OAAA46D,IAAAM,EAAAN,EAAA,GAAA76D,UAAA66D,GAEA,OAAO,IAAInB,EACTqB,EAAmBn1D,EAASu1D,IAC1BH,EAAoBp1D,EAASu1D,GAEnC,CAEA,IAAMC,EAA4B52D,OAAOkuB,IACvC,6BAA+BlQ,GAUjC,SAASpP,EAAUioD,GACjB,GAAkB,iBAAPA,EACT,OAAOA,EAGT,IACE,OAAOb,EAAoBa,EAAK,GAAG/6D,MAAM,EAAG,IAC9C,CAAE,MAAAk5D,GACA,MAAO,oBACT,CACF,CAEA,SAASuB,EACPn1D,EACA01D,GAEA,QAFA,IAAAA,IAAAA,EAAA,IAEK11D,EACL,OACEhF,EAAOw6D,IACPx6D,EAAOw6D,GAA2Bx1D,EAAS01D,EAAY33D,IAAIyP,GAE/D,CAEA,SAAS4nD,EACPp1D,EACA01D,GAEA,QAFA,IAAAA,IAAAA,EAAA,IAEK11D,EACL,MAAO,+FAAArF,OAA+FmwB,mBACpGvd,KAAKC,UAAU,CACboP,QAAOA,EACP5c,QAAOA,EACPg1D,KAAMU,EAAY33D,IAAIyP,MAG5B,CCxImB3S,WAAW86D,QAAvB,uBCfDC,EAAkD,eAAlCrB,GAAM,WAAM,OAAA34C,UAAUi6C,OAAV,IAErBC,EACQ,oBAAZz3D,WACLu3D,IAAmB56D,OAAe+6D,gBAEzBC,EAAmC,oBAAZ5U,QAEvB6U,EACO,oBAAXr3D,QAA+C,oBAAfA,OAAOkuB,IAEnCopC,EAA4BD,GAAgBr3D,OAAOy0D,cAEnD8C,EAC2C,oBAA/C5B,GAAM,WAAM,OAAAx5D,OAAOqwB,SAASC,aAAhB,IAEf+qC,EASJ7B,GAAM,WAAM,OAAA34C,UAAUC,UAAUxe,QAAQ,UAAY,CAAxC,MAA8C,EAQ/Cg5D,GAAsBF,GAAaP,KAAmBQ,ECnB7DE,EACJL,EAAer3D,OAAOkuB,IAAI,sBAAwB,qBAE9C,SAAUypC,IACdrC,EACE,kBAAmB,EACnB,QACEzhB,EAAA+jB,EAAAA,cAAAF,UACA7jB,IACAh5C,OAAAsC,eAAAy6D,EAAAA,cAAAF,EAAA,CACAn6D,MAAAs2C,EAAA+jB,EAAAA,cAAA,IAGA9nD,YAAiB,EAGhBtS,UAAU,EACbF,cAAO,MAELiyB,YAAiB,uBCtBVsoC,EAA0D,SAAC7C,OACtE8C,EAAM9C,EAAA8C,OACN5lC,EAAQ8iC,EAAA9iC,SAEF6lC,EAAgBJ,IAChBK,EAAgBJ,EAAAA,WAAiBG,GAEjClkB,EAAU+jB,EAAAA,SAAc,WAC5B,OAAA3E,EAAAA,EAAA,GACK+E,GAAa,CAChBF,OAAQA,GAAUE,EAAcF,QAEpC,GAAG,CAACE,EAAeF,WAEnBxC,EACEzhB,EAAQikB,OACR,IACEF,EAAAA,cAAAG,EAAA7J,SAAA,CAAA3wD,MACFs2C,GAAA3hB,IC/BJ,SAAS+lC,EAAgCp8D,EAAGq8D,GAAkB,IAAI3tD,EAAuB,qBAAXvK,QAA0BnE,EAAEmE,OAAOC,WAAapE,EAAE,cAAe,GAAI0O,EAAI,OAAQA,EAAKA,EAAGnP,KAAKS,IAAIyE,KAAK1C,KAAK2M,GAAK,GAAIvP,MAAMwB,QAAQX,KAAO0O,EAExN,SAAqC1O,EAAGs8D,GAAU,IAAKt8D,EAAG,OAAQ,GAAiB,kBAANA,EAAgB,OAAOu8D,EAAkBv8D,EAAGs8D,GAAS,IAAIl9D,EAAIJ,OAAOK,UAAU2E,SAASzE,KAAKS,GAAGC,MAAM,GAAI,GAAc,WAANb,GAAkBY,EAAE8D,cAAa1E,EAAIY,EAAE8D,YAAYwB,MAAM,GAAU,QAANlG,GAAqB,QAANA,EAAa,OAAOD,MAAMyC,KAAK5B,GAAI,GAAU,cAANZ,GAAqB,2CAA2C0I,KAAK1I,GAAI,OAAOm9D,EAAkBv8D,EAAGs8D,EAAS,CAFlME,CAA4Bx8D,KAAOq8D,GAAkBr8D,GAAyB,kBAAbA,EAAEJ,OAAqB,CAAM8O,IAAI1O,EAAI0O,GAAI,IAAI7O,EAAI,EAAG,OAAO,WAAc,OAAIA,GAAKG,EAAEJ,OAAe,CAAE8E,MAAM,GAAe,CAAEA,MAAM,EAAOhD,MAAO1B,EAAEH,KAAQ,CAAG,CAAE,MAAM,IAAI2G,UAAU,wIAA0I,CAI3lB,SAAS+1D,EAAkBE,EAAKC,IAAkB,MAAPA,GAAeA,EAAMD,EAAI78D,UAAQ88D,EAAMD,EAAI78D,QAAQ,IAAK,IAAIC,EAAI,EAAG88D,EAAO,IAAIx9D,MAAMu9D,GAAM78D,EAAI68D,EAAK78D,IAAO88D,EAAK98D,GAAK48D,EAAI58D,GAAM,OAAO88D,CAAM,CAEtL,SAASC,EAAkB3/C,EAAQ4Q,GAAS,IAAK,IAAIhuB,EAAI,EAAGA,EAAIguB,EAAMjuB,OAAQC,IAAK,CAAE,IAAIg9D,EAAahvC,EAAMhuB,GAAIg9D,EAAW5oD,WAAa4oD,EAAW5oD,aAAc,EAAO4oD,EAAWp7D,cAAe,EAAU,UAAWo7D,IAAYA,EAAWl7D,UAAW,GAAM3C,OAAOsC,eAAe2b,EAAQ4/C,EAAW5qD,IAAK4qD,EAAa,CAAE,CAE5T,SAASC,EAAaC,EAAaC,EAAYC,GAAyN,OAAtMD,GAAYJ,EAAkBG,EAAY19D,UAAW29D,GAAiBC,GAAaL,EAAkBG,EAAaE,GAAcj+D,OAAOsC,eAAey7D,EAAa,YAAa,CAAEp7D,UAAU,IAAiBo7D,CAAa,CAG5R,IAAIG,EAAa,WACf,MAAyB,oBAAX/4D,MAChB,EAEIg5D,GAAY,SAAU73D,GACxB,OAAO43D,KAAgBE,QAAQj5D,OAAOmB,GACxC,EAEI+3D,GAAY,SAAU/3D,GACxB,OAAO63D,GAAU73D,GAAQnB,OAAOmB,GAAQ,KAAOA,CACjD,EAEI43D,MAAiBC,GAAU,gBAC7Bh5D,OAAOmoB,WAAanoB,OAAO,eAG7B,IAAIm5D,GAAiBD,GAAU,YAC3BE,GAAmBF,GAAU,cAC7BG,GAAgBH,GAAU,WAE9B,SAASI,GAAU1I,EAAK9iD,GACtB,IAAIvQ,EAAQqzD,EAAI9iD,GAChB,GAAa,MAATvQ,EAAJ,CACA,GAAqB,oBAAVA,EAAsB,MAAM,IAAI8E,UAAU9E,EAAQ,sBAC7D,OAAOA,CAF4B,CAGrC,CAEA,SAASg8D,GAAW3I,GAClB,IAAI4I,EAAO5I,EAAIjxD,YAUf,YARamvD,IAAT0K,GAGW,QAFbA,EAAOA,EAAKH,OAGVG,OAAO1K,QAIKA,IAAT0K,EAAqBA,EAAOC,EACrC,CAMA,SAASC,GAAgB/+D,GACnB++D,GAAgBt9B,IAClBs9B,GAAgBt9B,IAAIzhC,GAEpB2D,YAAW,WACT,MAAM3D,CACR,GAEJ,CAEA,SAASg/D,GAAQl7C,GACf9hB,QAAQqH,UAAUX,MAAK,WACrB,IACEob,GACF,CAAE,MAAO9jB,IACP++D,GAAgB/+D,GAClB,CACF,GACF,CAEA,SAASi/D,GAAoBC,GAC3B,IAAIC,EAAUD,EAAaE,SAC3B,QAAgBjL,IAAZgL,IACJD,EAAaE,cAAWjL,EAEnBgL,GAIL,IACE,GAAuB,oBAAZA,EACTA,QACK,CACL,IAAI3pD,EAAcmpD,GAAUQ,EAAS,eAEjC3pD,GACFA,EAAY/U,KAAK0+D,EAErB,CACF,CAAE,MAAOn/D,IACP++D,GAAgB/+D,GAClB,CACF,CAEA,SAASq/D,GAAkBH,GACzBA,EAAaI,eAAYnL,EACzB+K,EAAaK,YAASpL,EACtB+K,EAAa9zD,OAAS,QACxB,CAkBA,SAASo0D,GAAmBN,EAAcpvD,EAAMlN,GAC9Cs8D,EAAa9zD,OAAS,UACtB,IAAIq0D,EAAWP,EAAaI,UAE5B,IACE,IAAIn9D,EAAIw8D,GAAUc,EAAU3vD,GAE5B,OAAQA,GACN,IAAK,OACC3N,GAAGA,EAAE1B,KAAKg/D,EAAU78D,GACxB,MAEF,IAAK,QAEH,GADAy8D,GAAkBH,IACd/8D,EAAgC,MAAMS,EAAnCT,EAAE1B,KAAKg/D,EAAU78D,GACxB,MAEF,IAAK,WACHy8D,GAAkBH,GACd/8D,GAAGA,EAAE1B,KAAKg/D,GAGpB,CAAE,MAAOz/D,IACP++D,GAAgB/+D,GAClB,CAE4B,WAAxBk/D,EAAa9zD,OAAqB6zD,GAAoBC,GAA+C,YAAxBA,EAAa9zD,SAAsB8zD,EAAa9zD,OAAS,QAC5I,CAEA,SAASs0D,GAASR,EAAcpvD,EAAMlN,GACpC,GAA4B,WAAxBs8D,EAAa9zD,OAAjB,CAEA,GAA4B,cAAxB8zD,EAAa9zD,OASjB,MAA4B,UAAxB8zD,EAAa9zD,QACf8zD,EAAa9zD,OAAS,YACtB8zD,EAAaK,OAAS,CAAC,CACrBzvD,KAAMA,EACNlN,MAAOA,SAETo8D,IAAQ,WACN,OAhEN,SAA2BE,GACzB,IAAIpiB,EAAQoiB,EAAaK,OAEzB,GAAKziB,EAAL,CAIAoiB,EAAaK,YAASpL,EACtB+K,EAAa9zD,OAAS,QAEtB,IAAK,IAAIrK,EAAI,EAAGA,EAAI+7C,EAAMh8C,SACxB0+D,GAAmBN,EAAcpiB,EAAM/7C,GAAG+O,KAAMgtC,EAAM/7C,GAAG6B,OAC7B,WAAxBs8D,EAAa9zD,UAFiBrK,GALpC,CASF,CAkDa4+D,CAAkBT,EAC3B,UAIFM,GAAmBN,EAAcpvD,EAAMlN,GApBrCs8D,EAAaK,OAAO17D,KAAK,CACvBiM,KAAMA,EACNlN,MAAOA,GALiC,CAwB9C,CAEA,IAAIg9D,GAA4B,WAC9B,SAASA,EAAaH,EAAUI,GAG9B5+D,KAAKm+D,cAAWjL,EAChBlzD,KAAKq+D,UAAYG,EACjBx+D,KAAKs+D,YAASpL,EACdlzD,KAAKmK,OAAS,eACd,IAAI00D,EAAuB,IAAIC,GAAqB9+D,MAEpD,IACEA,KAAKm+D,SAAWS,EAAWp/D,UAAK0zD,EAAW2L,EAC7C,CAAE,MAAO9/D,IACP8/D,EAAqB5lD,MAAMla,GAC7B,CAEoB,iBAAhBiB,KAAKmK,SAA2BnK,KAAKmK,OAAS,QACpD,CAkBA,OAhBaw0D,EAAar/D,UAEnBiV,YAAc,WACC,WAAhBvU,KAAKmK,SACPi0D,GAAkBp+D,MAClBg+D,GAAoBh+D,MAExB,EAEA+8D,EAAa4B,EAAc,CAAC,CAC1BzsD,IAAK,SACL1Q,IAAK,WACH,MAAuB,WAAhBxB,KAAKmK,MACd,KAGKw0D,CACT,CApCgC,GAsC5BG,GAAoC,WACtC,SAASA,EAAqBb,GAC5Bj+D,KAAK++D,cAAgBd,CACvB,CAEA,IAAIe,EAAUF,EAAqBx/D,UAqBnC,OAnBA0/D,EAAQt6D,KAAO,SAAc/C,GAC3B88D,GAASz+D,KAAK++D,cAAe,OAAQp9D,EACvC,EAEAq9D,EAAQ/lD,MAAQ,SAAetX,GAC7B88D,GAASz+D,KAAK++D,cAAe,QAASp9D,EACxC,EAEAq9D,EAAQ5yC,SAAW,WACjBqyC,GAASz+D,KAAK++D,cAAe,WAC/B,EAEAhC,EAAa+B,EAAsB,CAAC,CAClC5sD,IAAK,SACL1Q,IAAK,WACH,MAAqC,WAA9BxB,KAAK++D,cAAc50D,MAC5B,KAGK20D,CACT,CA3BwC,GA6BpCjB,GAA0B,WAC5B,SAASA,EAAWe,GAClB,KAAM5+D,gBAAgB69D,GAAa,MAAM,IAAIp3D,UAAU,6CACvD,GAA0B,oBAAfm4D,EAA2B,MAAM,IAAIn4D,UAAU,6CAC1DzG,KAAKi/D,YAAcL,CACrB,CAEA,IAAIM,EAAUrB,EAAWv+D,UAsTzB,OApTA4/D,EAAQ7oD,UAAY,SAAmBmoD,GASrC,MARwB,kBAAbA,GAAsC,OAAbA,IAClCA,EAAW,CACT95D,KAAM85D,EACNvlD,MAAOrZ,UAAU,GACjBwsB,SAAUxsB,UAAU,KAIjB,IAAI++D,GAAaH,EAAUx+D,KAAKi/D,YACzC,EAEAC,EAAQp+D,QAAU,SAAiB+hB,GACjC,IAAI22C,EAAQx5D,KAEZ,OAAO,IAAIe,SAAQ,SAAUqH,EAAS+C,GACpC,GAAkB,oBAAP0X,EAUX,IAAIo7C,EAAezE,EAAMnjD,UAAU,CACjC3R,KAAM,SAAU/C,GACd,IACEkhB,EAAGlhB,EAAOgD,EACZ,CAAE,MAAO5F,IACPoM,EAAOpM,IACPk/D,EAAa1pD,aACf,CACF,EACA0E,MAAO9N,EACPihB,SAAUhkB,SAnBV+C,EAAO,IAAI1E,UAAUoc,EAAK,uBAI5B,SAASle,IACPs5D,EAAa1pD,cACbnM,GACF,CAcF,GACF,EAEA82D,EAAQ37D,IAAM,SAAasf,GACzB,IAAIs8C,EAASn/D,KAEb,GAAkB,oBAAP6iB,EAAmB,MAAM,IAAIpc,UAAUoc,EAAK,sBAEvD,OAAO,IADC86C,GAAW39D,MACZ,EAAM,SAAUw+D,GACrB,OAAOW,EAAO9oD,UAAU,CACtB3R,KAAM,SAAU/C,GACd,IACEA,EAAQkhB,EAAGlhB,EACb,CAAE,MAAO5C,IACP,OAAOy/D,EAASvlD,MAAMla,GACxB,CAEAy/D,EAAS95D,KAAK/C,EAChB,EACAsX,MAAO,SAAUla,GACfy/D,EAASvlD,MAAMla,EACjB,EACAqtB,SAAU,WACRoyC,EAASpyC,UACX,GAEJ,GACF,EAEA8yC,EAAQ17D,OAAS,SAAgBqf,GAC/B,IAAIu8C,EAASp/D,KAEb,GAAkB,oBAAP6iB,EAAmB,MAAM,IAAIpc,UAAUoc,EAAK,sBAEvD,OAAO,IADC86C,GAAW39D,MACZ,EAAM,SAAUw+D,GACrB,OAAOY,EAAO/oD,UAAU,CACtB3R,KAAM,SAAU/C,GACd,IACE,IAAKkhB,EAAGlhB,GAAQ,MAClB,CAAE,MAAO5C,IACP,OAAOy/D,EAASvlD,MAAMla,GACxB,CAEAy/D,EAAS95D,KAAK/C,EAChB,EACAsX,MAAO,SAAUla,GACfy/D,EAASvlD,MAAMla,EACjB,EACAqtB,SAAU,WACRoyC,EAASpyC,UACX,GAEJ,GACF,EAEA8yC,EAAQh5D,OAAS,SAAgB2c,GAC/B,IAAIw8C,EAASr/D,KAEb,GAAkB,oBAAP6iB,EAAmB,MAAM,IAAIpc,UAAUoc,EAAK,sBACvD,IAAI1e,EAAIw5D,GAAW39D,MACfs/D,EAAU1/D,UAAUC,OAAS,EAC7BqtB,GAAW,EAEXqyC,EADO3/D,UAAU,GAErB,OAAO,IAAIuE,GAAE,SAAUq6D,GACrB,OAAOa,EAAOhpD,UAAU,CACtB3R,KAAM,SAAU/C,GACd,IAAIqQ,GAASkb,EAGb,GAFAA,GAAW,GAENlb,GAASstD,EACZ,IACEC,EAAM18C,EAAG08C,EAAK59D,EAChB,CAAE,MAAO5C,IACP,OAAOy/D,EAASvlD,MAAMla,GACxB,MAEAwgE,EAAM59D,CAEV,EACAsX,MAAO,SAAUla,GACfy/D,EAASvlD,MAAMla,EACjB,EACAqtB,SAAU,WACR,IAAKc,IAAaoyC,EAAS,OAAOd,EAASvlD,MAAM,IAAIxS,UAAU,oCAC/D+3D,EAAS95D,KAAK66D,GACdf,EAASpyC,UACX,GAEJ,GACF,EAEA8yC,EAAQ/+D,OAAS,WAGf,IAFA,IAAIq/D,EAASx/D,KAEJy/D,EAAO7/D,UAAUC,OAAQ6/D,EAAU,IAAItgE,MAAMqgE,GAAOE,EAAO,EAAGA,EAAOF,EAAME,IAClFD,EAAQC,GAAQ//D,UAAU+/D,GAG5B,IAAIx7D,EAAIw5D,GAAW39D,MACnB,OAAO,IAAImE,GAAE,SAAUq6D,GACrB,IAAIP,EACA7mD,EAAQ,EAsBZ,OApBA,SAASwoD,EAAUl7D,GACjBu5D,EAAev5D,EAAK2R,UAAU,CAC5B3R,KAAM,SAAUlC,GACdg8D,EAAS95D,KAAKlC,EAChB,EACAyW,MAAO,SAAUla,GACfy/D,EAASvlD,MAAMla,EACjB,EACAqtB,SAAU,WACJhV,IAAUsoD,EAAQ7/D,QACpBo+D,OAAe/K,EACfsL,EAASpyC,YAETwzC,EAAUz7D,EAAEtC,KAAK69D,EAAQtoD,MAE7B,GAEJ,CAEAwoD,CAAUJ,GACH,WACDvB,IACFA,EAAa1pD,cACb0pD,OAAe/K,EAEnB,CACF,GACF,EAEAgM,EAAQW,QAAU,SAAiBh9C,GACjC,IAAIi9C,EAAS9/D,KAEb,GAAkB,oBAAP6iB,EAAmB,MAAM,IAAIpc,UAAUoc,EAAK,sBACvD,IAAI1e,EAAIw5D,GAAW39D,MACnB,OAAO,IAAImE,GAAE,SAAUq6D,GACrB,IAAIuB,EAAgB,GAEhBC,EAAQF,EAAOzpD,UAAU,CAC3B3R,KAAM,SAAU/C,GACd,GAAIkhB,EACF,IACElhB,EAAQkhB,EAAGlhB,EACb,CAAE,MAAO5C,IACP,OAAOy/D,EAASvlD,MAAMla,GACxB,CAGF,IAAIsH,EAAQlC,EAAEtC,KAAKF,GAAO0U,UAAU,CAClC3R,KAAM,SAAU/C,GACd68D,EAAS95D,KAAK/C,EAChB,EACAsX,MAAO,SAAUla,GACfy/D,EAASvlD,MAAMla,EACjB,EACAqtB,SAAU,WACR,IAAItsB,EAAIigE,EAAcl9D,QAAQwD,GAC1BvG,GAAK,GAAGigE,EAAc58D,OAAOrD,EAAG,GACpCmgE,GACF,IAEFF,EAAcn9D,KAAKyD,EACrB,EACA4S,MAAO,SAAUla,GACfy/D,EAASvlD,MAAMla,EACjB,EACAqtB,SAAU,WACR6zC,GACF,IAGF,SAASA,IACHD,EAAMhzC,QAAmC,IAAzB+yC,EAAclgE,QAAc2+D,EAASpyC,UAC3D,CAEA,OAAO,WACL2zC,EAAcj/D,SAAQ,SAAUhC,GAC9B,OAAOA,EAAEyV,aACX,IACAyrD,EAAMzrD,aACR,CACF,GACF,EAEA2qD,EAAQ1B,IAAoB,WAC1B,OAAOx9D,IACT,EAEA69D,EAAWh8D,KAAO,SAAclB,GAC9B,IAAIwD,EAAoB,oBAATnE,KAAsBA,KAAO69D,EAC5C,GAAS,MAALl9D,EAAW,MAAM,IAAI8F,UAAU9F,EAAI,qBACvC,IAAIu/D,EAASxC,GAAU/8D,EAAG68D,IAE1B,GAAI0C,EAAQ,CACV,IAAI3zC,EAAa2zC,EAAO1gE,KAAKmB,GAC7B,GAAI1B,OAAOstB,KAAgBA,EAAY,MAAM,IAAI9lB,UAAU8lB,EAAa,qBACxE,OAvbN,SAAsB5rB,GACpB,OAAOA,aAAak9D,EACtB,CAqbUsC,CAAa5zC,IAAeA,EAAWxoB,cAAgBI,EAAUooB,EAC9D,IAAIpoB,GAAE,SAAUq6D,GACrB,OAAOjyC,EAAWlW,UAAUmoD,EAC9B,GACF,CAEA,GAAIpB,GAAU,cACZ8C,EAASxC,GAAU/8D,EAAG48D,KAGpB,OAAO,IAAIp5D,GAAE,SAAUq6D,GACrBT,IAAQ,WACN,IAAIS,EAASxxC,OAAb,CAEA,IAAK,IAAiEozC,EAA7DC,EAAYhE,EAAgC6D,EAAO1gE,KAAKmB,MAAcy/D,EAAQC,KAAa17D,MAAO,CACzG,IAAI27D,EAAOF,EAAMz+D,MAEjB,GADA68D,EAAS95D,KAAK47D,GACV9B,EAASxxC,OAAQ,MACvB,CAEAwxC,EAASpyC,UARkB,CAS7B,GACF,IAIJ,GAAIhtB,MAAMwB,QAAQD,GAChB,OAAO,IAAIwD,GAAE,SAAUq6D,GACrBT,IAAQ,WACN,IAAIS,EAASxxC,OAAb,CAEA,IAAK,IAAIltB,EAAI,EAAGA,EAAIa,EAAEd,SAAUC,EAE9B,GADA0+D,EAAS95D,KAAK/D,EAAEb,IACZ0+D,EAASxxC,OAAQ,OAGvBwxC,EAASpyC,UAPkB,CAQ7B,GACF,IAGF,MAAM,IAAI3lB,UAAU9F,EAAI,qBAC1B,EAEAk9D,EAAW7tB,GAAK,WACd,IAAK,IAAIuwB,EAAQ3gE,UAAUC,OAAQ2gE,EAAQ,IAAIphE,MAAMmhE,GAAQE,EAAQ,EAAGA,EAAQF,EAAOE,IACrFD,EAAMC,GAAS7gE,UAAU6gE,GAI3B,OAAO,IADiB,oBAATzgE,KAAsBA,KAAO69D,IAC/B,SAAUW,GACrBT,IAAQ,WACN,IAAIS,EAASxxC,OAAb,CAEA,IAAK,IAAIltB,EAAI,EAAGA,EAAI0gE,EAAM3gE,SAAUC,EAElC,GADA0+D,EAAS95D,KAAK87D,EAAM1gE,IAChB0+D,EAASxxC,OAAQ,OAGvBwxC,EAASpyC,UAPkB,CAQ7B,GACF,GACF,EAEA2wC,EAAac,EAAY,KAAM,CAAC,CAC9B3rD,IAAKurD,GACLj8D,IAAK,WACH,OAAOxB,IACT,KAGK69D,CACT,CA9T8B,GCrPxB,SAAU6C,GAAgB1L,GAC9B,OAAe,OAARA,GAA+B,kBAARA,CAChC,CCgCM,SAAU2L,GACd/vC,EACAgwC,GAEA,IAAIC,EAAqBD,EAKnBE,EAA2C,GAuEnD,OAtEElwC,EAASmwC,YAAYjgE,SAAQ,SAACq0D,GAG5B,GAAwB,wBAApBA,EAAW6L,KACb,MAAMlG,EAEF,GAIL3F,EAAA8L,UACD9L,EAAA5vD,KAAA,WAAApF,OAAAg1D,EAAA5vD,KAAA5D,MAAgE,SAK/D,uBAAAwzD,EAAA6L,MAEHF,EAAAl+D,KAAAuyD,EAEA,IAOC,qBAAA0L,IAEDnH,EAAA,IAAAoH,EAAAjhE,OAAA,GAAAihE,EAAAjhE,QACAghE,EAAyBC,EAAA,GAAAv7D,KAAA5D,OAMnB01D,EAAAA,EAAA,GAAAzmC,GAA+B,CAAAmwC,YAAAtI,EAAA,EAE/BuI,KAAA,gCAEE,qBACE,gCAEM,OAEF,sBACD,CACFA,KAAA,OACFr/D,MAAAk/D,QAqBXjwC,EAAAmwC,aAAA,IAEA,CAIE,SAAUG,GAASJ,QACR,IAATA,IAAuBA,EAAS,IAClC,IAAGK,EAAA,GAQH,OAPAL,EAAOhgE,SAAS,SAAAsgE,GACjBD,EAAAC,EAAA77D,KAAA5D,OAAAy/D,CAED,IAIED,WAEIE,GAAiBC,EAAAC,UACnBD,EAAKN,UACH,iBACA,OAAIM,uBAEJ,IAACV,EAAAU,EAAA/7D,KAAA5D,MACD,GAA4B,oBAAtB4/D,EACN,OAAUA,EAAUX,GAErB,IAAAQ,EAAAG,GAAAA,EAAAX,GAEC,OADFlH,EAAA0H,EAAA,GAAAR,GACSQ,GAAK,KAEjB,qBC5HD,SAASI,KAAQ,CHiiBbrE,KACFl+D,OAAOsC,eAAes8D,GAAYz5D,OAAO,cAAe,CACtDzC,MAAO,CACL8/D,OAAQjE,GACRM,gBAAiBA,IAEnBp8D,cAAc,IGtiBlB,MAAMggE,GAAiBF,GAEjBG,GACe,qBAAZC,QACHA,QACC,SAAajgE,GACZ,MAAO,CAAEkgE,MAAOA,IAAMlgE,EAIxB,EACAmgE,GAA8B,qBAAZj+D,QAA0BA,QAAUonB,IACtD82C,GAC4B,qBAAzBC,qBACHA,qBACC,WACC,MAAO,CACLC,SAAUT,GACVU,WAAYV,GAEhB,EAIA,MAAOW,GAWXp+D,WAAAA,GAE8D,IADpD6hB,EAAAhmB,UAAAC,OAAA,QAAAqzD,IAAAtzD,UAAA,GAAAA,UAAA,GAAM2pD,IACP6Y,EAAAxiE,UAAAC,OAAA,QAAAqzD,IAAAtzD,UAAA,GAAAA,UAAA,GAAuC8hE,GADtC,KAAA97C,IAAAA,EACD,KAAAw8C,QAAAA,EAVD,KAAA7+D,IAAM,IAAIu+D,GAEV,KAAAO,OAA4B,KAC5B,KAAAC,OAA4B,KAC5B,KAAAC,iBAA+C,IAAI7+D,IACnD,KAAA8+D,uBAAwB,EACzB,KAAAn4C,KAAO,EAgIN,KAAA1gB,SAAW,KACjB,MAAMtF,EAAWrE,KAAKuiE,iBAAiB5tD,SACvC,IAAK,IAAI7U,EAAI,EAAGA,EA7IU,MA6IiBA,IAAK,CAC9C,MAAMitC,EAAO1oC,EAASK,OAAO/C,MAC7B,IAAKorC,EAAM,MACX/sC,KAAKuiE,iBAAiBrtD,OAAO63B,GAC7B,MAAM76B,EAAM66B,EAAK76B,WACT66B,EAAmC76B,IAC1C66B,EAAmC01B,OAAS,IAAId,GAASzvD,GAC1DlS,KAAK0iE,SAAST,SAAS/vD,EAAK66B,EAAMA,GAEhC/sC,KAAKuiE,iBAAiBl4C,KAAO,EAC/BvhB,eAAe9I,KAAK2J,UAEpB3J,KAAKwiE,uBAAwB,GAxI/BxiE,KAAK0iE,SAAW,IAAIX,GAClB/hE,KAAK2iE,WAAW3gE,KAAKhC,MAEzB,CAEO8D,GAAAA,CAAIoO,GACT,OAAOlS,KAAKuD,IAAIO,IAAIoO,EACtB,CAEO1Q,GAAAA,CAAI0Q,GACT,MAAM66B,EAAO/sC,KAAK4iE,QAAQ1wD,GAC1B,OAAO66B,GAAQA,EAAKprC,KACtB,CAEQihE,OAAAA,CAAQ1wD,GACd,MAAM66B,EAAO/sC,KAAKuD,IAAI/B,IAAI0Q,GAE1B,GAAI66B,GAAQA,IAAS/sC,KAAKqiE,OAAQ,CAChC,MAAM,MAAEQ,EAAK,MAAEC,GAAU/1B,EAErB+1B,IACFA,EAAMD,MAAQA,GAGZA,IACFA,EAAMC,MAAQA,GAGhB/1B,EAAK81B,MAAQ7iE,KAAKqiE,OAClBt1B,EAAK81B,MAAOC,MAAQ/1B,EAEpBA,EAAK+1B,MAAQ,KACb9iE,KAAKqiE,OAASt1B,EAEVA,IAAS/sC,KAAKsiE,SAChBtiE,KAAKsiE,OAASQ,GAIlB,OAAO/1B,CACT,CAEOtrC,GAAAA,CAAIyQ,EAAQvQ,GACjB,IAAIorC,EAAO/sC,KAAK4iE,QAAQ1wD,GACxB,OAAI66B,EACMA,EAAKprC,MAAQA,GAGvBorC,EAAO,CACL76B,MACAvQ,QACAmhE,MAAO,KACPD,MAAO7iE,KAAKqiE,QAGVriE,KAAKqiE,SACPriE,KAAKqiE,OAAOS,MAAQ/1B,GAGtB/sC,KAAKqiE,OAASt1B,EACd/sC,KAAKsiE,OAAStiE,KAAKsiE,QAAUv1B,EAE7B/sC,KAAK+iE,qBAAqBh2B,GAC1B/sC,KAAKuD,IAAI9B,IAAIyQ,EAAK66B,GAClB/sC,KAAKqqB,OAEE0iB,EAAKprC,MACd,CAEOqhE,KAAAA,GACL,KAAOhjE,KAAKsiE,QAAUtiE,KAAKqqB,KAAOrqB,KAAK4lB,KACrC5lB,KAAK2iE,WAAW3iE,KAAKsiE,OAEzB,CAEQK,UAAAA,CAAW51B,GACbA,IAAS/sC,KAAKqiE,SAChBriE,KAAKqiE,OAASt1B,EAAK81B,OAGjB91B,IAAS/sC,KAAKsiE,SAChBtiE,KAAKsiE,OAASv1B,EAAK+1B,OAGjB/1B,EAAK+1B,QACP/1B,EAAK+1B,MAAMD,MAAQ91B,EAAK81B,OAGtB91B,EAAK81B,QACP91B,EAAK81B,MAAMC,MAAQ/1B,EAAK+1B,OAG1B9iE,KAAKqqB,OACL,MAAMnY,EAAM66B,EAAK76B,KAAQ66B,EAAK01B,QAAU11B,EAAK01B,OAAOZ,QACpD7hE,KAAKoiE,QAAQr1B,EAAKprC,MAAOuQ,GACpB66B,EAAK01B,OAGRziE,KAAK0iE,SAASR,WAAWn1B,GAFzB/sC,KAAKuiE,iBAAiBrtD,OAAO63B,GAI3B76B,GAAKlS,KAAKuD,IAAI2R,OAAOhD,EAC3B,CAEOgD,OAAOhD,GACZ,MAAM66B,EAAO/sC,KAAKuD,IAAI/B,IAAI0Q,GAC1B,QAAI66B,IACF/sC,KAAK2iE,WAAW51B,IAET,EAIX,CAEQg2B,oBAAAA,CAAqBh2B,GAC3B/sC,KAAKuiE,iBAAiBluD,IAAI04B,GACrB/sC,KAAKwiE,wBACRxiE,KAAKwiE,uBAAwB,EAC7B15D,eAAe9I,KAAK2J,UAExB,EC3KF,SAAS+3D,KAAkB,CAErB,MAAOuB,GAKXl/D,WAAAA,GAE6D,IADnD6hB,EAAAhmB,UAAAC,OAAA,QAAAqzD,IAAAtzD,UAAA,GAAAA,UAAA,GAAM2pD,IACP6Y,EAAAxiE,UAAAC,OAAA,QAAAqzD,IAAAtzD,UAAA,GAAAA,UAAA,GAAsC8hE,GADrC,KAAA97C,IAAAA,EACD,KAAAw8C,QAAAA,EAND,KAAA7+D,IAAM,IAAI0nB,IACV,KAAAo3C,OAA4B,KAC5B,KAAAC,OAA4B,IAKjC,CAEIx+D,GAAAA,CAAIoO,GACT,OAAOlS,KAAKuD,IAAIO,IAAIoO,EACtB,CAEO1Q,GAAAA,CAAI0Q,GACT,MAAM66B,EAAO/sC,KAAK4iE,QAAQ1wD,GAC1B,OAAO66B,GAAQA,EAAKprC,KACtB,CAEA,QAAW0oB,GACT,OAAOrqB,KAAKuD,IAAI8mB,IAClB,CAEQu4C,OAAAA,CAAQ1wD,GACd,MAAM66B,EAAO/sC,KAAKuD,IAAI/B,IAAI0Q,GAE1B,GAAI66B,GAAQA,IAAS/sC,KAAKqiE,OAAQ,CAChC,MAAM,MAAEQ,EAAK,MAAEC,GAAU/1B,EAErB+1B,IACFA,EAAMD,MAAQA,GAGZA,IACFA,EAAMC,MAAQA,GAGhB/1B,EAAK81B,MAAQ7iE,KAAKqiE,OAClBt1B,EAAK81B,MAAOC,MAAQ/1B,EAEpBA,EAAK+1B,MAAQ,KACb9iE,KAAKqiE,OAASt1B,EAEVA,IAAS/sC,KAAKsiE,SAChBtiE,KAAKsiE,OAASQ,GAIlB,OAAO/1B,CACT,CAEOtrC,GAAAA,CAAIyQ,EAAQvQ,GACjB,IAAIorC,EAAO/sC,KAAK4iE,QAAQ1wD,GACxB,OAAI66B,EACKA,EAAKprC,MAAQA,GAGtBorC,EAAO,CACL76B,MACAvQ,QACAmhE,MAAO,KACPD,MAAO7iE,KAAKqiE,QAGVriE,KAAKqiE,SACPriE,KAAKqiE,OAAOS,MAAQ/1B,GAGtB/sC,KAAKqiE,OAASt1B,EACd/sC,KAAKsiE,OAAStiE,KAAKsiE,QAAUv1B,EAE7B/sC,KAAKuD,IAAI9B,IAAIyQ,EAAK66B,GAEXA,EAAKprC,MACd,CAEOqhE,KAAAA,GACL,KAAOhjE,KAAKsiE,QAAUtiE,KAAKuD,IAAI8mB,KAAOrqB,KAAK4lB,KACzC5lB,KAAKkV,OAAOlV,KAAKsiE,OAAOpwD,IAE5B,CAEOgD,OAAOhD,GACZ,MAAM66B,EAAO/sC,KAAKuD,IAAI/B,IAAI0Q,GAC1B,QAAI66B,IACEA,IAAS/sC,KAAKqiE,SAChBriE,KAAKqiE,OAASt1B,EAAK81B,OAGjB91B,IAAS/sC,KAAKsiE,SAChBtiE,KAAKsiE,OAASv1B,EAAK+1B,OAGjB/1B,EAAK+1B,QACP/1B,EAAK+1B,MAAMD,MAAQ91B,EAAK81B,OAGtB91B,EAAK81B,QACP91B,EAAK81B,MAAMC,MAAQ/1B,EAAK+1B,OAG1B9iE,KAAKuD,IAAI2R,OAAOhD,GAChBlS,KAAKoiE,QAAQr1B,EAAKprC,MAAOuQ,IAElB,EAIX,EChHF,IAAMgxD,GAAmB,IAAItc,QAC7B,SAASuc,GAASrtD,GACZA,EAAMuU,OAASvU,EAAM8P,MAAQ,IAG5Bs9C,GAAiBp/D,IAAIgS,KACxBotD,GAAiB7uD,IAAIyB,GACrBpT,YAAW,WACToT,EAAMktD,QACNE,GAAiBhuD,OAAOY,EAC1B,GAAG,KAEP,CAYO,IAAMstD,GAAuB,SAClCx9C,EACAw8C,GASA,IAAMtsD,EAAQ,IAAIqsD,GAAUv8C,EAAKw8C,GAMjC,OALAtsD,EAAMrU,IAAM,SAAUyQ,EAAUvQ,GAC9B,IAAM0hE,EAAMlB,GAAU7iE,UAAUmC,IAAIjC,KAAKQ,KAAMkS,EAAKvQ,GAEpD,OADAwhE,GAASnjE,MACFqjE,CACT,EACOvtD,CACT,EAiBawtD,GAAyB,SACpC19C,EACAw8C,GASA,IAAMtsD,EAAQ,IAAImtD,GAAYr9C,EAAKw8C,GAMnC,OALAtsD,EAAMrU,IAAM,SAAUyQ,EAAUvQ,GAC9B,IAAM0hE,EAAMJ,GAAY3jE,UAAUmC,IAAIjC,KAAKQ,KAAMkS,EAAKvQ,GAEtD,OADAwhE,GAASnjE,MACFqjE,CACT,EACOvtD,CACT,ECkMMytD,GAAkBn/D,OAAOkuB,IAAI,oBAuBtBkxC,GAAUnM,EAAA,GAA6B72D,EAAO+iE,KClSrDE,GAIF,CAAC,EAEC,SAAUC,GACdn+D,EACAo+D,GAEAF,GAAal+D,GAAQo+D,CACvB,CA4CO,IAAMC,IACF,IAATvjE,WAAS86D,QA+DX,yBACE,IAAY,IAAP96D,WAAO86D,QAAE,MAAM,IAAI54D,MAAM,sCAE9B,MAAO,CACLshE,OAAQC,KACRC,MAAK1M,EAAA,CACH2M,MAAyB,QAAlB5K,EAAAqK,GAAaO,aAAK,IAAA5K,OAAA,EAAAA,EAAA55D,KAAAikE,IACzBQ,OAA2B,QAAnBC,EAAAT,GAAaQ,cAAM,IAAAC,OAAA,EAAAA,EAAA1kE,KAAAikE,IAC3BU,mBAAmD,QAA/BC,EAAAX,GAAaU,0BAAkB,IAAAC,OAAA,EAAAA,EAAA5kE,KAAAikE,IACnDY,MAAOC,GAAStkE,KAAKw7B,MACrB+oC,aAAc,CACZC,gBAAiBxkE,KAAmB,aAAkB,eAAEqqB,KACxDo6C,mBAAoBC,GAClB1kE,KAAmB,aAAE2kE,qBAGQ,QAA7B56D,GAAA66D,EAAA5kE,KAAK8V,OAAM+uD,0BAAkB,IAAA96D,OAAA,EAAAA,EAAAvK,KAAAolE,IAMvC,OAjFI1R,EAMS4R,IACF,IAATzkE,WAAS86D,QAoFX,WACE,IAAM2F,EAAY9gE,KAAK+kE,OAAOjE,UAQ9B,OAAAzJ,EAAAA,EAAA,GACK2N,GAA+BjlE,MAAMC,OAAY,CACpDilE,6BAA8BP,GAAc1kE,KAA2B,sBACvEklE,cAAe,CACbC,oBAAqBC,GACnBplE,KAAkB,YAAuB,qBAE3CqlE,wBAAyBD,GACvBplE,KAAkB,YAA2B,yBAE/CslE,oBAAqBF,GAAsBplE,KAA0B,sBAEvEulE,iBAAkB,CAChBC,oBAAqBJ,GACV,OAATtE,QAAS,IAATA,OAAS,EAATA,EAAW0E,qBAEbC,OAAQL,GAA+B,OAATtE,QAAS,IAATA,OAAS,EAATA,EAAW2E,QACzCC,UAAWN,GAA+B,OAATtE,QAAS,IAATA,OAAS,EAATA,EAAW4E,aAGlD,OA7GIxS,EAMSyS,IACF,IAATtlE,WAAS86D,QACN6J,QAGD9R,EAEJ,SAAS4Q,KA2BP,OAAO7kE,OAAO2mE,YACZ3mE,OAAOunB,QA1B0C,CACjDy9C,OAAQ,IACRE,mBAAoB,IACpBH,MAAO,IACP,0BAA2B,IAC3B,+BAA8B,IAE9B,0CAAyC,IAEzC,6BAA4B,IAE5B,0BAA2B,IAC3B,uCAAsC,IAEtC,+BAA8B,IAE9B,qDAAoD,IAEpD,oCAAmC,IAEnC,oCAAmC,IAEnC,wCAAuC,MAIdzgE,KAAI,SAAC61D,OAACz2D,EAACy2D,EAAA,GAAE52D,EAAC42D,EAAA,GAAM,OACvCz2D,EACA6gE,GAAW7gE,IAA0BH,EAFE,IAK7C,CA0BA,SAASwiE,KACP,MAAO,CACLlvD,MAAO,CACL+vD,uBAAwBT,GAAsBplE,KAAqB,iBAGzE,CAqCA,SAASolE,GAAsBhlE,GAC7B,OALF,SAAmBA,GACjB,QAASA,GAAK,aAAcA,CAC9B,CAGS0lE,CAAU1lE,GAAKA,EAAEiqB,UAAO6oC,CACjC,CAEA,SAAS6S,GAAapkE,GACpB,OAAgB,MAATA,CACT,CAEA,SAAS+iE,GAAcgB,GACrB,OAAOM,GAAqBN,GAAWniE,KAAI,SAACuS,GAAU,MAAC,CAAEA,MAAKA,EAAR,GACxD,CAEA,SAASkwD,GAAqBN,GAC5B,OAAOA,EACHjN,EAAAA,EAAA,CACE2M,GAA+B,OAATM,QAAS,IAATA,OAAS,EAATA,EAAyB,cAC5CM,GAA8B,OAATN,QAAS,IAATA,OAAS,EAATA,EAAkB,OAAE,GACzCM,GAA8B,OAATN,QAAS,IAATA,OAAS,EAATA,EAAmB,QAAE,GAC7CliE,OAAOuiE,IACT,EACN,CAEA,SAASzB,GAAS9oC,SAChB,OAAOA,EACHi9B,EAAAA,EAAA,CAC0B,QAAxBW,EAAI,OAAJ59B,QAAI,IAAJA,OAAI,EAAJA,EAAMqpC,0BAAkB,IAAAzL,OAAA,EAAAA,EAAA55D,KAAAg8B,IACrB8oC,GAAa,OAAJ9oC,QAAI,IAAJA,OAAI,EAAJA,EAAMgT,OAAK,GACpB81B,GAAa,OAAJ9oC,QAAI,IAAJA,OAAI,EAAJA,EAAMyqC,QAAM,GACxBziE,OAAOuiE,IACT,EACN,CC3MO,IAsBHG,GAtBS/B,GAAqBllE,OAAOS,QACvC,SAA4BiC,GAC1B,OAAOoR,KAAKC,UAAUrR,EAAOwkE,GAC/B,GACA,CACEC,MAAK,WAIHF,GAAa,IAAI5C,GACfE,GAAWW,oBAAsB,IAErC,IAmBJ,SAASgC,GAAqBj0D,EAAavQ,GACzC,GAAIA,GAA0B,kBAAVA,EAAoB,CACtC,IAAM03D,EAAQp6D,OAAOgC,eAAeU,GAIpC,GAAI03D,IAAUp6D,OAAOK,WAAuB,OAAV+5D,EAAgB,CAChD,IAAM34D,EAAOzB,OAAOyB,KAAKiB,GAGzB,GAAIjB,EAAKiS,MAAM0zD,IAAkB,OAAO1kE,EACxC,IAAM2kE,EAAcvzD,KAAKC,UAAUtS,GAC/B6lE,EAAaL,GAAW1kE,IAAI8kE,GAChC,IAAKC,EAAY,CACf7lE,EAAKmS,OACL,IAAM2zD,EAAYzzD,KAAKC,UAAUtS,GAGjC6lE,EAAaL,GAAW1kE,IAAIglE,IAAc9lE,EAC1CwlE,GAAWzkE,IAAI6kE,EAAaC,GAC5BL,GAAWzkE,IAAI+kE,EAAWD,EAC5B,CACA,IAAME,EAAexnE,OAAO6C,OAAOu3D,GAMnC,OAHAkN,EAAWzlE,SAAQ,SAACoR,GAClBu0D,EAAav0D,GAAOvQ,EAAMuQ,EAC5B,IACOu0D,CACT,CACF,CACA,OAAO9kE,CACT,CAMA,SAAS0kE,GACPn0D,EACApS,EACAY,GAEA,OAAa,IAANZ,GAAWY,EAAKZ,EAAI,IAAMoS,CACnC,CCnEM,SAAUw0D,GAAcr9D,GAC5B,MAAO,CAAEs9D,MAAOx4D,OAAO9E,GACzB,CAEM,SAAUu9D,GAAY5R,GAC1B,OAAOqI,QACLrI,GAAsB,kBAARA,GAAyC,kBAAdA,EAAI2R,MAEjD,CAgFM,SAAUE,GACdC,EACAvhE,EACA5D,EACAolE,GAEA,GAlCF,SAAoBplE,GAClB,MAAsB,aAAfA,EAAMq/D,IACf,CAgCMgG,CAAWrlE,IA9BjB,SAAsBA,GACpB,MAAsB,eAAfA,EAAMq/D,IACf,CA4B2BiG,CAAatlE,GACpCmlE,EAAOvhE,EAAK5D,OAASuU,OAAOvU,EAAMA,YAC7B,GAxCT,SAAwBA,GACtB,MAAsB,iBAAfA,EAAMq/D,IACf,CAsCakG,CAAevlE,IA5C5B,SAAuBA,GACrB,MAAsB,gBAAfA,EAAMq/D,IACf,CA0CsCmG,CAAcxlE,GAChDmlE,EAAOvhE,EAAK5D,OAASA,EAAMA,WACtB,GA1BT,SAAuBA,GACrB,MAAsB,gBAAfA,EAAMq/D,IACf,CAwBaoG,CAAczlE,GAAQ,CAC/B,IAAM0lE,EAAe,CAAC,EACtB1lE,EAAM2lE,OAAO/jE,KAAI,SAACyxD,GAChB,OAAA6R,GAA4BQ,EAAcrS,EAAIzvD,KAAMyvD,EAAIrzD,MAAOolE,EAA/D,IAEFD,EAAOvhE,EAAK5D,OAAS0lE,CACvB,MAAO,GApCT,SAAoB1lE,GAClB,MAAsB,aAAfA,EAAMq/D,IACf,CAkCauG,CAAW5lE,GAAQ,CAC5B,IAAM6lE,GAAiBT,GAAc,CAAC,GAAWplE,EAAM4D,KAAK5D,OAC5DmlE,EAAOvhE,EAAK5D,OAAS6lE,CACvB,MAAO,GA/BT,SAAqB7lE,GACnB,MAAsB,cAAfA,EAAMq/D,IACf,CA6BayG,CAAY9lE,GACrBmlE,EAAOvhE,EAAK5D,OAASA,EAAMgT,OAAOpR,KAAI,SAACmkE,GACrC,IAAMC,EAAoB,CAAC,EAO3B,OANAd,GACEc,EACApiE,EACAmiE,EACAX,GAEMY,EAA0BpiE,EAAK5D,MACzC,SACK,GAtCT,SAAqBA,GACnB,MAAsB,cAAfA,EAAMq/D,IACf,CAoCa4G,CAAYjmE,GACrBmlE,EAAOvhE,EAAK5D,OAAUA,EAAwBA,UACzC,KApCT,SAAqBA,GACnB,MAAsB,cAAfA,EAAMq/D,IACf,CAkCa6G,CAAYlmE,GAGrB,MAAMm5D,EACJ,GAAAv1D,EAAA5D,MAAAA,EAAAq/D,MAHF8F,EAAOvhE,EAAK5D,OAAS,ODjHX,IAAVtB,WAAU86D,SACZuI,GAAoB,sBAAsB,WAAM,OAAAwC,GAAW77C,IAAX,IAMlD85C,GAAmBiC,YCqJjB0B,GAAO,CACR,aAQK,UACJ,OACA,SACA,OACA,SACA,eAMFC,GAAA5D,GACA6D,GAAA/oE,OAAAS,QAAA,SAAAuoE,EAAsDzN,EAAA0N,GAClD,GAAA1N,GAEG0N,GAODA,EAAI,YACJA,EAAU,gBACV,GAAAA,EAAwB,mBACxBA,EAAyB,WACxB,OAAAroE,OAAA,GAEC,IAAAsoE,EAAWD,EAAuB,kBACjCA,EAAyB,WAAuB,OAE3C,KAEDr1D,WACHu1D,EAAK,UACPD,EAAWrnE,SAAO,SAAAoR,GAEZk2D,EAAYl2D,GAAgCsoD,EAAAtoD,EAClD,IACE,GAAA/R,OAAA+nE,EAA8B,oBAAA/nE,OAAA4nE,GAAAK,GAAA,KAMjC,OAAAF,EAAA,mBAEDG,EAACJ,EACH,GAACzN,EAAA,CAMC,IAAA8N,EAAAP,GAAAvN,GACA6N,GAAA,IAAAloE,OAAAmoE,EAAA,YAEAJ,GACDjpE,OAAAyB,KAAAwnE,GAAApnE,SAAA,SAAAoR,IAEgB,IAAb41D,GAAajlE,QAAAqP,KAETg2D,EAAAh2D,IAAiBjT,OAAQyB,KAAIwnE,EAAOh2D,IAAArS,OAAEwoE,GAAO,IAAAloE,OAAA+R,EAAA,KAAA/R,OAAA4nE,GAAAG,EAAAh2D,IAAA,KAKhDm2D,GAAA,IAAAloE,OAAA+R,OAGAm2D,KAGLE,aAAO,SAAiBzpE,GAE1B,IAAA0pE,EAAAT,GAEI,OADFA,GAA4CjpE,EACpC0pE,KAGP,SAAAC,GAAAC,EAAA3B,GAEH,GAAA2B,EAAA9oE,WAAA8oE,EAAA9oE,UAAAC,OAAA,CAEI,IAAA8oE,EAAU,UAIVD,EAAM9oE,UAASkB,SAAS,SAAUs4D,GAC9B,IAAA7zD,EAAiB6zD,EAAG7zD,KAAA5D,EAAAy3D,EAAAz3D,MAC1B,OAAMklE,GAAkC8B,EAAApjE,EAAA5D,EAAAolE,MACtC4B,SAEF,KAEF,SAAYC,GAAAF,GACb,OAAAA,EAAAG,MAAAH,EAAAG,MAAAlnE,MAAA+mE,EAAAnjE,KAAA5D,KAED,CACE,SAAYmnE,GAAqBrvD,EAAQsvD,EAAWxH,GAGtD,IAFC,IAAAT,EAEKrG,EAAU,EAAArB,EAAA2P,EACdC,WACAvO,EAAArB,EAA8Bv5D,OAC9B46D,IAAyB,CAGzB,GAAwBwO,GADpB3H,EAAsElI,EAAAqB,KAC/D,GAAS,eAAT6G,EAAS/7D,KAAA5D,MACd,OAAQ8X,EAAUmvD,GAAGtH,SAGtBR,EACFA,EAAAl+D,KAAA0+D,GAEAR,EAAA,CAAAQ,MAEA,kBAAA7nD,EAAAyvD,WACF,OAAAzvD,EAAAyvD,cAECpI,EACD,QAAAoD,EAAA,EAAAiF,EAAArI,EAAAoD,EAAAiF,EAAAtpE,OAAAqkE,IAAA,CACG,IAAA5C,EACsB8H,EAAAN,GAASrvD,EAAT4nD,GADtBC,EAAY6H,EAAAjF,GACsB3C,GAAAwH,aAAAxH,GAA/B,GAAe,kBAAT6H,EACH,OAAAA,GAST,SAAAH,GAAA3H,GACF,gBAAAA,EAAAN,IAED,CCrUM,SAAUqI,GAAcC,GAC5B5P,EACE4P,GAAoB,aAAbA,EAAItI,KACX,IAIF,IAAMuI,EAAaD,EAAIvI,YACpBv9D,QAAO,SAACrB,GAAM,MAAW,uBAAXA,EAAE6+D,IAAF,IACdz9D,KAAI,SAAC4xD,GACJ,GAAwB,wBAApBA,EAAW6L,KACb,MAAMlG,EACJ,GAAA3F,EAAA6L,MAIJ,OAAO7L,CACT,IAQF,OANAuE,EACE6P,EAAW1pE,QAAU,EACrB,GAAA0pE,EAAA1pE,QAIKypE,CACT,CAEM,SAAUE,GACdF,GAGA,OADAD,GAAcC,GACPA,EAAIvI,YAAYv9D,QACrB,SAAC2xD,GACC,MAAoB,wBAApBA,EAAW6L,IAAX,IACF,EACJ,CAEM,SAAUyI,GAAiBH,GAC/B,OACEA,EAAIvI,YACDv9D,QACC,SAAC2xD,GACC,MAAoB,wBAApBA,EAAW6L,QAAoC7L,EAAW5vD,IAA1D,IAEHhC,KAAI,SAAC5C,GAAM,OAAAA,EAAE4E,KAAK5D,KAAP,IAAc,IAAM,IAEtC,CAGM,SAAU+nE,GACdJ,GAEA,OAAOA,EAAIvI,YAAYv9D,QACrB,SAAC2xD,GACC,MAAoB,uBAApBA,EAAW6L,IAAX,GAEN,CAEM,SAAU2I,GAAmBL,GACjC,IAAMM,EAAWJ,GAAuBF,GAOxC,OALA5P,EACEkQ,GAAmC,UAAvBA,EAAS3I,UACrB,IAGK2I,CACT,CA+BM,SAAUC,GACdC,GAIA,IAAIC,EAFJV,GAAcS,GAId,IAAuB,IAAArP,EAAA,EAAArB,EAAA0Q,EAAS/I,YAATtG,EAAArB,EAAAv5D,OAAA46D,IAAsB,CAAxC,IAAItF,EAAUiE,EAAAqB,GACjB,GAAwB,wBAApBtF,EAAW6L,KAAgC,CAC7C,IAAMC,EAAa9L,EAAuC8L,UAC1D,GACgB,UAAdA,GACc,aAAdA,GACc,iBAAdA,EAEA,OAAO9L,CAEX,CACwB,uBAApBA,EAAW6L,MAAkC+I,IAG/CA,EAAqB5U,EAEzB,CAEA,GAAI4U,EACF,OAAOA,EAGT,MAAMjP,EACJ,GAEJ,CAEM,SAAUkP,GACd7U,GAEA,IAAM8U,EAAgBhrE,OAAO6C,OAAO,MAC9BooE,EAAO/U,GAAcA,EAAWgV,oBAYtC,OAXID,GAAQA,EAAKrqE,QACfqqE,EAAKppE,SAAQ,SAAC+iB,GACRA,EAAIuR,cACNyxC,GACEoD,EACApmD,EAAIumD,SAAS7kE,KACbse,EAAIuR,aAGV,IAEK60C,CACT,CCrJA,SAASI,GAAY/R,EAAegS,GAClC,OAAQA,EAAUA,EAAQhS,GAAMuF,GAAW7tB,IAC7C,CAEA,SAASu6B,GAAOC,GACd,MAA0B,oBAAZA,EAAyB,IAAIC,GAAWD,GAAWA,CACnE,CAEA,SAASE,GAAclvC,GACrB,OAAOA,EAAKm7B,QAAQ92D,QAAU,CAChC,CAEA,IAAA4qE,GAAA,WAoFE,SAAAA,EAAY9T,GACNA,IAAS32D,KAAK22D,QAAUA,EAC9B,CA8DF,OAnJgB8T,EAAAE,MAAd,WACE,OAAO,IAAIF,GAAW,WAAM,OAAA5M,GAAW7tB,IAAX,GAC9B,EAEcy6B,EAAA5oE,KAAd,SAAmBwiE,GACjB,OAAqB,IAAjBA,EAAMxkE,OAAqB4qE,EAAWE,QACnCtG,EAAM9gE,IAAIgnE,IAAQrkE,QAAO,SAACvF,EAAG2B,GAAM,OAAA3B,EAAER,OAAOmC,EAAT,GAC5C,EAEcmoE,EAAAnnE,MAAd,SACEyE,EACAymC,EACAy3B,GAEA,IAGI5C,EAHEuH,EAAWL,GAAO/7B,GAClBq8B,EAAYN,GAAOtE,GAAS,IAAIwE,EAAWJ,KAgBjD,OAZEhH,EADEqH,GAAcE,IAAaF,GAAcG,GACrC,IAAIJ,GAAW,SAACxJ,GACpB,OAAOl5D,EAAKk5D,GACR2J,EAASjU,QAAQsK,IAAcpD,GAAW7tB,KAC1C66B,EAAUlU,QAAQsK,IAAcpD,GAAW7tB,IACjD,IAEM,IAAIy6B,GAAW,SAACxJ,EAAWqJ,GAC/B,OAAOviE,EAAKk5D,GACR2J,EAASjU,QAAQsK,EAAWqJ,IAAYzM,GAAW7tB,KACnD66B,EAAUlU,QAAQsK,EAAWqJ,IAAYzM,GAAW7tB,IAC1D,IAEK/wC,OAAOS,OAAO2jE,EAAK,CAAE70B,KAAMo8B,EAAU3E,MAAO4E,GACrD,EAEcJ,EAAAnyD,QAAd,SACEkjB,EACAylC,GAEA,OACEzlC,EAAKm7B,QCnEL,SACJmU,EACA7J,GAEA,IAAIhpB,EAAOof,EAAA,GAAQyT,GAoBnB,OAVA7rE,OAAOsC,eAAe0/D,EAAW,aAAc,CAC7C/sD,YAAY,EACZvS,MAX0C,SAAC+C,GAEzCuzC,EAAOof,EAAAA,EAAA,GAAQpf,GADG,oBAATvzC,EACkBA,EAAKuzC,GAELvzC,EAE/B,IAQAzF,OAAOsC,eAAe0/D,EAAW,aAAc,CAC7C/sD,YAAY,EACZvS,MAT0C,WAAM,OAAA01D,EAAC,CAAC,EAAIpf,EAAN,IAY3CgpB,CACT,CD2CQ8J,CACE9J,EAAUhpB,QEpEd,SAA6BgpB,GACjC,IAAM+J,EAAuC,CAC3CjE,UAAW9F,EAAU8F,WAAa,CAAC,EACnCkE,WAAYhK,EAAUgK,YAAc,CAAC,EACrCC,cAAejK,EAAUiK,cACzBvzD,MAAOspD,EAAUtpD,OAWnB,OAPKqzD,EAAqBE,gBACxBF,EAAqBE,cACmB,kBAA/BF,EAAqBrzD,MAC1B8xD,GAAiBuB,EAAqBrzD,aAAUu7C,EAChD,IAGC8X,CACT,CFoDUG,CGrEJ,SAA4BlK,GAQhC,IAPA,IAAMmK,EAAmB,CACvB,QACA,gBACA,YACA,aACA,WAEc3Q,EAAA,EAAArB,EAAAn6D,OAAOyB,KAAKugE,GAAZxG,EAAArB,EAAAv5D,OAAA46D,IAAwB,CAAnC,IAAIvoD,EAAGknD,EAAAqB,GACV,GAAI2Q,EAAiBvoE,QAAQqP,GAAO,EAClC,MAAM4oD,EAAkB,GAAA5oD,EAE5B,CAEA,OAAO+uD,CACT,CHsD6BoK,CAAkBpK,OAEpCpD,GAAW7tB,IAEpB,EAEcy6B,EAAAtqE,OAAd,SACE6R,EACAs5D,GAEA,IAAMC,EAAYhB,GAAOv4D,GACzB,GAAI04D,GAAca,GAKhB,OAHE,IADFlrE,WAAU86D,SACRzB,EAAAtoD,KAAA,GAAAm6D,GAGKA,EAET,IAEIlI,EAFEmI,EAAWjB,GAAOe,GAoBxB,OAhBEjI,EADEqH,GAAcc,GACV,IAAIf,GACR,SAACxJ,GACC,OAAAsK,EAAU5U,QACRsK,GACA,SAAC3I,GAAO,OAAAkT,EAAS7U,QAAQ2B,IAAOuF,GAAW7tB,IAAnC,KACL6tB,GAAW7tB,IAHhB,IAME,IAAIy6B,GAAW,SAACxJ,EAAWqJ,GAC/B,OACEiB,EAAU5U,QAAQsK,GAAW,SAAC3I,GAC5B,OAAOkT,EAAS7U,QAAQ2B,EAAIgS,IAAYzM,GAAW7tB,IACrD,KAAM6tB,GAAW7tB,IAErB,IAEK/wC,OAAOS,OAAO2jE,EAAK,CAAE70B,KAAM+8B,EAAWtF,MAAOuF,GACtD,EAMOf,EAAAnrE,UAAAgE,MAAP,SACEyE,EACAymC,EACAy3B,GAEA,OAAOjmE,KAAKG,OACVsqE,EAAWnnE,MAAMyE,EAAMymC,EAAMy3B,GAAS,IAAIwE,EAAWJ,KAEzD,EAEOI,EAAAnrE,UAAAa,OAAP,SAAcuE,GACZ,OAAO+lE,EAAWtqE,OAAOH,KAAM0E,EACjC,EAEO+lE,EAAAnrE,UAAAq3D,QAAP,SACEsK,EACAqJ,GAEA,MAAMxP,EAAkB,GAC1B,EAEU2P,EAAAnrE,UAAAk+B,QAAV,SACEvkB,EACAulD,GAEA,GAAIA,GAAYA,EAASvlD,MAQvB,OAPAulD,EAASvlD,MAAMA,IAOR,EAGT,MAAMA,CACR,EAEOwxD,EAAAnrE,UAAAmsE,WAAP,SAAkB5oD,GAEhB,OADA7iB,KAAKw9B,QAAU3a,EACR7iB,IACT,EAkBFyqE,CAAA,CApJA,GI3BanyD,GAAUmyD,GAAWnyD,QCF3B,SAASozD,GAAU/R,EAAWn0D,GAGnC,IAFyB63D,QAAQ1D,GAG/B,MAAM,IAAIp3D,MAAMiD,EAEpB,CCNA,MAAMmmE,GAAmB,GACnBC,GAAsB,EAKrB,SAASC,GAAQlqE,GACtB,OAAOmqE,GAAYnqE,EAAO,GAC5B,CAEA,SAASmqE,GAAYnqE,EAAOoqE,GAC1B,cAAepqE,GACb,IAAK,SACH,OAAOoR,KAAKC,UAAUrR,GAExB,IAAK,WACH,OAAOA,EAAM4D,KAAO,aAAHpF,OAAgBwB,EAAM4D,KAAI,KAAM,aAEnD,IAAK,SACH,OAON,SAA2B5D,EAAOqqE,GAChC,GAAc,OAAVrqE,EACF,MAAO,OAGT,GAAIqqE,EAAqBvzD,SAAS9W,GAChC,MAAO,aAGT,MAAMoqE,EAAa,IAAIC,EAAsBrqE,GAE7C,GAeF,SAAoBA,GAClB,MAA+B,oBAAjBA,EAAMsqE,MACtB,CAjBMC,CAAWvqE,GAAQ,CACrB,MAAMwqE,EAAYxqE,EAAMsqE,SAExB,GAAIE,IAAcxqE,EAChB,MAA4B,kBAAdwqE,EACVA,EACAL,GAAYK,EAAWJ,EAE/B,MAAO,GAAI3sE,MAAMwB,QAAQe,GACvB,OA2BJ,SAAqByqE,EAAOL,GAC1B,GAAqB,IAAjBK,EAAMvsE,OACR,MAAO,KAGT,GAAIksE,EAAWlsE,OAAS+rE,GACtB,MAAO,UAGT,MAAMjP,EAAMrjD,KAAKC,IAAIoyD,GAAkBS,EAAMvsE,QACvCwsE,EAAYD,EAAMvsE,OAAS88D,EAC3B6D,EAAQ,GAEd,IAAK,IAAI1gE,EAAI,EAAGA,EAAI68D,IAAO78D,EACzB0gE,EAAM59D,KAAKkpE,GAAYM,EAAMtsE,GAAIisE,IAGjB,IAAdM,EACF7L,EAAM59D,KAAK,mBACFypE,EAAY,GACrB7L,EAAM59D,KAAK,OAADzC,OAAQksE,EAAS,gBAG7B,MAAO,IAAM7L,EAAM96D,KAAK,MAAQ,GAClC,CAnDW4mE,CAAY3qE,EAAOoqE,GAG5B,OAOF,SAAsBQ,EAAQR,GAC5B,MAAMvlD,EAAUvnB,OAAOunB,QAAQ+lD,GAE/B,GAAuB,IAAnB/lD,EAAQ3mB,OACV,MAAO,KAGT,GAAIksE,EAAWlsE,OAAS+rE,GACtB,MAAO,IAmCX,SAAsBW,GACpB,MAAM14C,EAAM50B,OAAOK,UAAU2E,SAC1BzE,KAAK+sE,GACLroD,QAAQ,aAAc,IACtBA,QAAQ,KAAM,IAEjB,GAAY,WAAR2P,GAAkD,oBAAvB04C,EAAOxoE,YAA4B,CAChE,MAAMwB,EAAOgnE,EAAOxoE,YAAYwB,KAEhC,GAAoB,kBAATA,GAA8B,KAATA,EAC9B,OAAOA,CAEX,CAEA,OAAOsuB,CACT,CAlDiB24C,CAAaD,GAAU,IAGtC,MAAME,EAAajmD,EAAQjjB,KACzBmpE,IAAA,IAAEx6D,EAAKvQ,GAAM+qE,EAAA,OAAKx6D,EAAM,KAAO45D,GAAYnqE,EAAOoqE,EAAW,IAE/D,MAAO,KAAOU,EAAW/mE,KAAK,MAAQ,IACxC,CAtBSinE,CAAahrE,EAAOoqE,EAC7B,CA/Baa,CAAkBjrE,EAAOoqE,GAElC,QACE,OAAO59D,OAAOxM,GAEpB,CCpBO,MAAMkrE,GAoBX9oE,WAAAA,CAAY+oE,EAAYC,EAAUpxC,GAChC37B,KAAKkY,MAAQ40D,EAAW50D,MACxBlY,KAAKwtC,IAAMu/B,EAASv/B,IACpBxtC,KAAK8sE,WAAaA,EAClB9sE,KAAK+sE,SAAWA,EAChB/sE,KAAK27B,OAASA,CAChB,CAEA,IAAKv3B,OAAOS,eACV,MAAO,UACT,CAEAonE,MAAAA,GACE,MAAO,CACL/zD,MAAOlY,KAAKkY,MACZs1B,IAAKxtC,KAAKwtC,IAEd,EAOK,MAAMw/B,GAiCXjpE,WAAAA,CAAYi9D,EAAM9oD,EAAOs1B,EAAKy/B,EAAMC,EAAQvrE,GAC1C3B,KAAKghE,KAAOA,EACZhhE,KAAKkY,MAAQA,EACblY,KAAKwtC,IAAMA,EACXxtC,KAAKitE,KAAOA,EACZjtE,KAAKktE,OAASA,EAEdltE,KAAK2B,MAAQA,EACb3B,KAAKm2D,KAAO,KACZn2D,KAAK0E,KAAO,IACd,CAEA,IAAKN,OAAOS,eACV,MAAO,OACT,CAEAonE,MAAAA,GACE,MAAO,CACLjL,KAAMhhE,KAAKghE,KACXr/D,MAAO3B,KAAK2B,MACZsrE,KAAMjtE,KAAKitE,KACXC,OAAQltE,KAAKktE,OAEjB,EASK,MAAMC,GAAoB,CAC/BC,KAAM,GACNC,SAAU,CAAC,eACXC,oBAAqB,CACnB,OACA,sBACA,aACA,gBAEFC,mBAAoB,CAAC,WAAY,OAAQ,eAAgB,cACzDC,SAAU,CAAC,QACXC,aAAc,CAAC,cACfC,MAAO,CAAC,QAAS,OAAQ,YAAa,aAAc,gBACpDC,SAAU,CAAC,OAAQ,SACnBC,eAAgB,CAAC,OAAQ,cACzBC,eAAgB,CAAC,gBAAiB,aAAc,gBAChDC,mBAAoB,CAClB,OACA,sBACA,gBACA,aACA,gBAEFC,SAAU,GACVC,WAAY,GACZC,YAAa,GACbC,aAAc,GACdC,UAAW,GACXC,UAAW,GACXC,UAAW,CAAC,UACZC,YAAa,CAAC,UACdC,YAAa,CAAC,OAAQ,SACtBC,UAAW,CAAC,OAAQ,aACpBC,UAAW,CAAC,QACZC,SAAU,CAAC,QACXC,YAAa,CAAC,QACdC,iBAAkB,CAAC,cAAe,aAAc,kBAChDC,wBAAyB,CAAC,QAC1BC,qBAAsB,CAAC,cAAe,OAAQ,cAC9CC,qBAAsB,CACpB,cACA,OACA,aACA,aACA,UAEFC,gBAAiB,CAAC,cAAe,OAAQ,YAAa,OAAQ,cAC9DC,qBAAsB,CACpB,cACA,OACA,OACA,eACA,cAEFC,wBAAyB,CACvB,cACA,OACA,aACA,aACA,UAEFC,oBAAqB,CAAC,cAAe,OAAQ,aAAc,SAC3DC,mBAAoB,CAAC,cAAe,OAAQ,aAAc,UAC1DC,oBAAqB,CAAC,cAAe,OAAQ,cAC7CC,0BAA2B,CAAC,cAAe,OAAQ,aAAc,UACjEC,oBAAqB,CAAC,cAAe,OAAQ,YAAa,aAC1DC,gBAAiB,CAAC,aAAc,kBAChCC,oBAAqB,CAAC,OAAQ,cAC9BC,oBAAqB,CAAC,OAAQ,aAAc,aAAc,UAC1DC,uBAAwB,CAAC,OAAQ,aAAc,aAAc,UAC7DC,mBAAoB,CAAC,OAAQ,aAAc,SAC3CC,kBAAmB,CAAC,OAAQ,aAAc,UAC1CC,yBAA0B,CAAC,OAAQ,aAAc,WAE7CC,GAAa,IAAIrsE,IAAIzE,OAAOyB,KAAKysE,KAKhC,SAAS6C,GAAOC,GACrB,MAAMC,EACU,OAAdD,QAAoC,IAAdA,OAAuB,EAASA,EAAUjP,KAClE,MAA4B,kBAAdkP,GAA0BH,GAAWjsE,IAAIosE,EACzD,CAGA,IAAIC,GCpMAC,IDsMJ,SAAWD,GACTA,EAAyB,MAAI,QAC7BA,EAA4B,SAAI,WAChCA,EAAgC,aAAI,cACrC,CAJD,CAIGA,KAAsBA,GAAoB,CAAC,ICxM9C,SAAWC,GACTA,EAAW,KAAI,OACfA,EAAe,SAAI,WACnBA,EAA2B,qBAAI,sBAC/BA,EAA0B,oBAAI,qBAC9BA,EAAoB,cAAI,eACxBA,EAAY,MAAI,QAChBA,EAAe,SAAI,WACnBA,EAAsB,gBAAI,iBAC1BA,EAAsB,gBAAI,iBAC1BA,EAA0B,oBAAI,qBAC9BA,EAAe,SAAI,WACnBA,EAAU,IAAI,WACdA,EAAY,MAAI,aAChBA,EAAa,OAAI,cACjBA,EAAc,QAAI,eAClBA,EAAW,KAAI,YACfA,EAAW,KAAI,YACfA,EAAW,KAAI,YACfA,EAAa,OAAI,cACjBA,EAAmB,aAAI,cACvBA,EAAgB,UAAI,YACpBA,EAAiB,WAAI,YACrBA,EAAgB,UAAI,WACpBA,EAAoB,cAAI,cACxBA,EAAwB,kBAAI,mBAC5BA,EAAgC,0BAAI,0BACpCA,EAA6B,uBAAI,uBACjCA,EAA6B,uBAAI,uBACjCA,EAAuB,iBAAI,kBAC3BA,EAA6B,uBAAI,uBACjCA,EAAgC,0BAAI,0BACpCA,EAA4B,sBAAI,sBAChCA,EAA2B,qBAAI,qBAC/BA,EAA4B,sBAAI,sBAChCA,EAAmC,6BAAI,4BACvCA,EAA2B,qBAAI,sBAC/BA,EAAuB,iBAAI,kBAC3BA,EAA4B,sBAAI,sBAChCA,EAA4B,sBAAI,sBAChCA,EAA+B,yBAAI,yBACnCA,EAA2B,qBAAI,qBAC/BA,EAA0B,oBAAI,oBAC9BA,EAAkC,4BAAI,0BACvC,CA5CD,CA4CGA,KAASA,GAAO,CAAC,ICxCb,MAAMC,GAAQpxE,OAAO8qB,OAAO,CAAC,GAgF7B,SAASumD,GAAMC,EAAMC,GAA0C,IAAjCC,EAAW7wE,UAAAC,OAAA,QAAAqzD,IAAAtzD,UAAA,GAAAA,UAAA,GAAGutE,GACjD,MAAMuD,EAAgB,IAAIzlD,IAE1B,IAAK,MAAM+1C,KAAQ/hE,OAAO0V,OAAOy7D,IAC/BM,EAAcjvE,IAAIu/D,EAAM2P,GAAqBH,EAASxP,IAIxD,IAAIz/C,EAMArP,EACAxE,EANAkjE,EAAUxxE,MAAMwB,QAAQ2vE,GACxB7vE,EAAO,CAAC6vE,GACRn5D,GAAS,EACTy5D,EAAQ,GACR9jC,EAAOwjC,EAGX,MAAMO,EAAO,GACPC,EAAY,GAGlB,EAAG,CACD35D,IACA,MAAM45D,EAAY55D,IAAU1W,EAAKb,OAC3BoxE,EAAWD,GAA8B,IAAjBH,EAAMhxE,OAEpC,GAAImxE,EAAW,CAKb,GAJA9+D,EAA2B,IAArB6+D,EAAUlxE,YAAeqzD,EAAY4d,EAAKA,EAAKjxE,OAAS,GAC9DktC,EAAOr/B,EACPA,EAASqjE,EAAUhjE,MAEfkjE,EACF,GAAIL,EAAS,CACX7jC,EAAOA,EAAK7sC,QACZ,IAAIgxE,EAAa,EAEjB,IAAK,MAAOC,EAASC,KAAcP,EAAO,CACxC,MAAMQ,EAAWF,EAAUD,EAET,OAAdE,GACFrkC,EAAK5pC,OAAOkuE,EAAU,GACtBH,KAEAnkC,EAAKskC,GAAYD,CAErB,CACF,KAAO,CACLrkC,EAAO9tC,OAAOqyE,iBACZ,CAAC,EACDryE,OAAOsyE,0BAA0BxkC,IAGnC,IAAK,MAAOokC,EAASC,KAAcP,EACjC9jC,EAAKokC,GAAWC,CAEpB,CAGFh6D,EAAQmK,EAAMnK,MACd1W,EAAO6gB,EAAM7gB,KACbmwE,EAAQtvD,EAAMsvD,MACdD,EAAUrvD,EAAMqvD,QAChBrvD,EAAQA,EAAM40C,IAChB,MAAO,GAAIzoD,EAAQ,CAIjB,GAHAwE,EAAM0+D,EAAUx5D,EAAQ1W,EAAK0W,GAC7B21B,EAAOr/B,EAAOwE,GAED,OAAT66B,QAA0BmmB,IAATnmB,EACnB,SAGF+jC,EAAKluE,KAAKsP,EACZ,CAEA,IAAIuH,EAEJ,IAAKra,MAAMwB,QAAQmsC,GAAO,CACxB,IAAIykC,EAAoBC,EAExBzB,GAAOjjC,IAAS2+B,IAAU,EAAO,qBAAFvrE,OAAuB0rE,GAAQ9+B,GAAK,MACnE,MAAM2kC,EAAUV,EAC4C,QAAvDQ,EAAqBd,EAAclvE,IAAIurC,EAAKi0B,aACtB,IAAvBwQ,OACE,EACAA,EAAmBG,MACoC,QAAxDF,EAAsBf,EAAclvE,IAAIurC,EAAKi0B,aACtB,IAAxByQ,OACA,EACAA,EAAoBG,MAMxB,GALAn4D,EACc,OAAZi4D,QAAgC,IAAZA,OAChB,EACAA,EAAQlyE,KAAKgxE,EAASzjC,EAAM76B,EAAKxE,EAAQojE,EAAMC,GAEjDt3D,IAAW42D,GACb,MAGF,IAAe,IAAX52D,GACF,IAAKu3D,EAAW,CACdF,EAAK/iE,MACL,QACF,OACK,QAAemlD,IAAXz5C,IACTo3D,EAAMjuE,KAAK,CAACsP,EAAKuH,KAEZu3D,GAAW,CACd,IAAIhB,GAAOv2D,GAEJ,CACLq3D,EAAK/iE,MACL,QACF,CAJEg/B,EAAOtzB,CAKX,CAEJ,CASE,IAAIo4D,EAHN,QAJe3e,IAAXz5C,GAAwBw3D,GAC1BJ,EAAMjuE,KAAK,CAACsP,EAAK66B,IAGfikC,EACFF,EAAK/iE,WAILwT,EAAQ,CACNqvD,UACAx5D,QACA1W,OACAmwE,QACA1a,KAAM50C,GAERqvD,EAAUxxE,MAAMwB,QAAQmsC,GACxBrsC,EAAOkwE,EACH7jC,EAC0C,QAAzC8kC,EAAapB,EAAY1jC,EAAKi0B,aAChB,IAAf6Q,EACAA,EACA,GACJz6D,GAAS,EACTy5D,EAAQ,GAEJnjE,GACFqjE,EAAUnuE,KAAK8K,GAGjBA,EAASq/B,CAEb,YAAmBmmB,IAAV3xC,GAET,OAAqB,IAAjBsvD,EAAMhxE,OAEDgxE,EAAMA,EAAMhxE,OAAS,GAAG,GAG1B0wE,CACT,CAoFO,SAASI,GAAqBH,EAASxP,GAC5C,MAAM8Q,EAActB,EAAQxP,GAE5B,MAA2B,kBAAhB8Q,EAEFA,EACyB,oBAAhBA,EAET,CACLF,MAAOE,EACPH,WAAOze,GAIJ,CACL0e,MAAOpB,EAAQoB,MACfD,MAAOnB,EAAQmB,MAEnB,CCvUM,SAAUI,GACd3Y,EACA2N,OADEmB,EAAU9O,EAAA8O,WAGZ,OAAKA,IAAeA,EAAWroE,QAsE3B,SACJqoE,GAEA,IAAMzuD,EAA8B,GAEhCyuD,GAAcA,EAAWroE,QAC3BqoE,EAAWpnE,SAAQ,SAACkxE,GAClB,GAXN,SAA8B5Y,OAAUz3D,EAAKy3D,EAAA7zD,KAAA5D,MAC3C,MAAiB,SAAVA,GAA8B,YAAVA,CAC7B,CASWswE,CAAqBD,GAA1B,CAEA,IAAME,EAAqBF,EAAUpyE,UAC/BuyE,EAAgBH,EAAUzsE,KAAK5D,MAErC+3D,EACEwY,GAAoD,IAA9BA,EAAmBryE,OACzC,GAAAsyE,GAIF,IAAMC,EAAaF,EAAoB,GACvCxY,EACE0Y,EAAW7sE,MAAkC,OAA1B6sE,EAAW7sE,KAAK5D,MACnC,GAAAwwE,GAIF,IAAME,EAAqBD,EAAWzwE,MAGtC+3D,EACE2Y,IACoB,aAAjBA,EAAQrR,MAAwC,iBAAjBqR,EAAQrR,MAC1C,GAAAmR,GAIF14D,EAAO7W,KAAK,CAAEovE,UAASA,EAAEI,WAAUA,GA5BS,CA6B9C,IAGF,OAAO34D,CACT,CA3GS64D,CAAuBpK,GAAYv1D,OACxC,SAACymD,OAAE4Y,EAAS5Y,EAAA4Y,UAAEI,EAAUhZ,EAAAgZ,WAClBG,GAAuB,EAY3B,MAX8B,aAA1BH,EAAWzwE,MAAMq/D,MACnBuR,EACExL,GAAaA,EAAWqL,EAAWzwE,MAAuB4D,KAAK5D,OACjE+3D,OACkB,IAAhB6Y,EACA,GAAAP,EAAAzsE,KAAA5D,QAIF4wE,EAAeH,EAAWzwE,MAA2BA,MAEvB,SAAzBqwE,EAAUzsE,KAAK5D,OAAoB4wE,EAAcA,CAC1D,GAEJ,CAoBM,SAAUC,GAAcC,EAAiBlC,EAAepkE,GAC5D,IAAMumE,EAAU,IAAIhvE,IAAI+uE,GAClBE,EAAcD,EAAQroD,KAY5B,OAVAimD,GAAMC,EAAM,CACV/B,UAAS,SAACzhC,GACR,GAAI2lC,EAAQx9D,OAAO63B,EAAKxnC,KAAK5D,UAAYwK,IAAQumE,EAAQroD,MACvD,OAAOgmD,EAEX,IAKKlkE,GAAOumE,EAAQroD,KAAOqoD,EAAQroD,KAAOsoD,CAC9C,CAEM,SAAUC,GAAiBhiD,GAC/B,OAAOA,GAAY4hD,GAAc,CAAC,SAAU,UAAW5hD,GAAU,EACnE,CC5EO,IAAMiiD,GAA0B,SAACxwE,EAAQ41D,GAC9C,IAAI6a,EACJ,IACEA,EAAa//D,KAAKC,UAAU3Q,EAC9B,CAAE,MAAOtD,IACP,IAAMg0E,EAAajY,EACjB,GAAA7C,EAAAl5D,GAAAyG,SAKF,MADAutE,EAAWA,WAAah0E,GAClBg0E,CACR,CACA,OAAOD,CACT,ECRc,SAAUE,GACtBC,GAEA,IAAI/U,EAA+B,KAC/BjlD,EAAsB,KACtBtU,GAAO,EACL2qB,EAAkB,GAElB4jD,EAOA,GAEN,SAASC,EAAOC,GACd,IAAIn6D,EAAJ,CACA,GAAIi6D,EAAQrzE,OAAQ,CAClB,IAAMwzE,EAAaH,EAAQl1D,QAC3B,GAAI5e,MAAMwB,QAAQyyE,IAAeA,EAAW,GAC1C,OAAOA,EAAW,GAAG,CAAE1xE,MAAOyxE,EAAOzuE,MAAM,GAE/C,CACA2qB,EAAK1sB,KAAKwwE,EAPO,CAQnB,CACA,SAAS51C,EAAQwzB,GACf/3C,EAAQ+3C,EACIkiB,EAAQhzE,QAChBY,SAAQ,SAAUwyE,GACpBA,EAAK,GAAGtiB,EACV,KACCkN,GAAWA,GACd,CACA,SAASqV,IACP5uE,GAAO,EACKuuE,EAAQhzE,QAChBY,SAAQ,SAAUwyE,GACpBA,EAAK,GAAG,CAAE3xE,WAAOuxD,EAAWvuD,MAAM,GACpC,KACCu5D,GAAWA,GACd,CAEAA,EAAU,WACRA,EAAU,KACV+U,EAAOO,eAAe,OAAQL,GAC9BF,EAAOO,eAAe,QAASh2C,GAC/By1C,EAAOO,eAAe,MAAOD,GAC7BN,EAAOO,eAAe,SAAUD,GAChCN,EAAOO,eAAe,QAASD,EACjC,EACAN,EAAOv0D,GAAG,OAAQy0D,GAClBF,EAAOv0D,GAAG,QAAS8e,GACnBy1C,EAAOv0D,GAAG,MAAO60D,GACjBN,EAAOv0D,GAAG,SAAU60D,GACpBN,EAAOv0D,GAAG,QAAS60D,GAYnB,IAAMlvE,EAAkC,CACtCK,KAAI,WACF,OAXK,IAAI3D,SAAQ,SAAUqH,EAAS+C,GACpC,OAAI8N,EAAc9N,EAAO8N,GACrBqW,EAAKzvB,OACAuI,EAAQ,CAAEzG,MAAO2tB,EAAKtR,QAAcrZ,MAAM,IAC/CA,EAAayD,EAAQ,CAAEzG,WAAOuxD,EAAWvuD,MAAM,SACnDuuE,EAAQtwE,KAAK,CAACwF,EAAS+C,GACzB,GAMA,GASF,OANIuwD,IACFr3D,EAASD,OAAOy0D,eAAiB,WAC/B,OAAO74D,IACT,GAGKqE,CACT,CClFc,SAAUovE,GACtBC,GAEA,IAAMrvE,EAA8B,CAClCK,KAAI,WACF,OAAOgvE,EAAOC,MAMhB,GAYF,OATIjY,IACFr3D,EAASD,OAAOy0D,eAAiB,WAI/B,OAAO74D,IACT,GAGKqE,CACT,CCOM,SAAUuvE,GACdC,GAEA,IAAI5+C,EAAgB4+C,EAIpB,GAFmBA,EAjCc5+C,OAiCHA,EAAO4+C,EAAS5+C,MA1BhD,SACEtzB,GAEA,SACE+5D,IACC/5D,EAAqCyC,OAAOy0D,eAEjD,CAqBMib,CAAwB7+C,GAAO,OC7CvB,SACZ0G,SAEMt3B,EAAWs3B,EAAOv3B,OAAOy0D,iBAC/B,OAAAO,EAAA,CACE10D,KAAI,WACF,OAAOL,EAASK,MAClB,IACCN,OAAOy0D,eAAR,WACE,OAAO74D,IACT,EAAC,CAEL,CDiC4C64D,CAAiB5jC,GAE3D,GAlCF,SAA0BtzB,GACxB,QAAUA,EAA8BoyE,SAC1C,CAgCMC,CAAiB/+C,GAAO,OAAOw+C,GAAkBx+C,EAAK8+C,aAI1D,GAzBF,SAA0BpyE,GACxB,QAAUA,EAAesxE,MAC3B,CAuBMgB,CAAiBh/C,GACnB,OAAOw+C,GACJx+C,EAAKg+C,SAA0Cc,aAIpD,GA3BF,SAAgBpyE,GACd,QAAUA,EAAeuyE,WAC3B,CAyBMC,CAAOl/C,GAAO,OElDN,SACZpK,GAEA,IAAIupD,GAAW,EAET/vE,EAA+B,CACnCK,KAAI,WACF,OAAI0vE,EACKrzE,QAAQqH,QAAQ,CACrBzG,WAAOuxD,EACPvuD,MAAM,KAEVyvE,GAAW,EACJ,IAAIrzE,SAAQ,SAAUqH,EAAS+C,GACpC0f,EACGpjB,MAAK,SAAU9F,GACdyG,EAAQ,CAAEzG,MAAOA,EAAuBgD,MAAM,GAChD,IACCkH,MAAMV,EACX,IACF,GASF,OANIuwD,IACFr3D,EAASD,OAAOy0D,eAAiB,WAC/B,OAAO74D,IACT,GAGKqE,CACT,CFoB2BgwE,CAAmBp/C,EAAKi/C,eAEjD,GAzBF,SAA8BvyE,GAC5B,QAAUA,EAA6B2yE,IACzC,CAuBMC,CAAqBt/C,GAAO,OAAO+9C,GAAsB/9C,GAE7D,MAAM,IAAI1yB,MACR,6EAEJ,CG/DO,IAAMiyE,GAAmB,SAC9BX,EACAp6D,EACAjU,GAEA,IAAMyT,EAAQ,IAAI1W,MAAMiD,GAKxB,MAJAyT,EAAM1T,KAAO,cACb0T,EAAM46D,SAAWA,EACjB56D,EAAMw7D,WAAaZ,EAAS9mE,OAC5BkM,EAAMQ,OAASA,EACTR,CACR,ECLay7D,GAAwCtwE,SAuCrD,IAsBAuwE,GAAA,SAAApb,GAmBE,SAAAob,EAAYvb,OACVwb,EAAaxb,EAAAwb,cACbC,EAAczb,EAAAyb,eACdC,EAAY1b,EAAA0b,aACZC,EAAY3b,EAAA2b,aACZC,EAAY5b,EAAA4b,aACZC,EAAS7b,EAAA6b,UAETzb,EAAAD,EAAK/5D,KAAC,KAAAw1E,IAAa,YACnBxb,EAAKj0D,KAAO,cACZi0D,EAAKob,cAAgBA,GAAiB,GACtCpb,EAAKqb,eAAiBA,GAAkB,GACxCrb,EAAKsb,aAAeA,GAAgB,GACpCtb,EAAKub,aAAeA,GAAgB,KACpCvb,EAAKh0D,QAAUwvE,GAvDU,SAAChkB,GAC5B,IAAMkkB,EAAMzc,EAAAA,EAAAA,EAAA,GACPzH,EAAI4jB,eAAa,GACjB5jB,EAAI8jB,cAAY,GAChB9jB,EAAI6jB,gBAAc,GAGvB,OADI7jB,EAAI+jB,cAAcG,EAAOtyE,KAAKouD,EAAI+jB,cAEpCG,EAEG3xE,KACC,SAACytD,GACC,OAAC0P,GAAgB1P,IAAQA,EAAIxrD,SAAY,0BAAzC,IAEHE,KAAK,KAEZ,CAuCmCyvE,CAAqB3b,GACpDA,EAAKyb,UAAYA,EAIhBzb,EAAar6D,UAAYw1E,EAAYr1E,WACxC,CACF,OAxCiC63D,EAAAwd,EAAApb,GAwCjCob,CAAA,CAxCA,CAAiCpyE,OCxEpB3B,GAAmDxB,MAAMwB,QAEhE,SAAUw0E,GAAmBzzE,GACjC,OAAOvC,MAAMwB,QAAQe,IAAUA,EAAM9B,OAAS,CAChD,CCHQ,IAAAN,GAAmBN,OAAOK,UAASC,eAyBrC,SAAU81E,SACd,IAAA3V,EAAA,GAAAjF,EAAA,EAAAA,EAAA76D,UAAAC,OAAA46D,IAAAiF,EAAAjF,GAAA76D,UAAA66D,GAEA,OAAO6a,GAAe5V,EACxB,CAQM,SAAU4V,GAAkB5V,GAChC,IAAIxiD,EAASwiD,EAAQ,IAAO,CAAC,EACvBlsD,EAAQksD,EAAQ7/D,OACtB,GAAI2T,EAAQ,EAEV,IADA,IAAM+hE,EAAS,IAAIC,GACV11E,EAAI,EAAGA,EAAI0T,IAAS1T,EAC3Bod,EAASq4D,EAAOE,MAAMv4D,EAAQwiD,EAAQ5/D,IAG1C,OAAOod,CACT,CAUA,IAAMw4D,GAA+C,SACnDx4D,EACAye,EACAg6C,GAEA,OAAO31E,KAAKy1E,MAAMv4D,EAAOy4D,GAAWh6C,EAAOg6C,GAC7C,EAEAH,GAAA,WACE,SAAAA,EACUI,QAAA,IAAAA,IAAAA,EAA+CF,IAA/C,KAAAE,WAAAA,EAqCH,KAAAC,SAAWnV,GAEV,KAAAoV,WAAa,IAAIpyE,GAtCtB,CAwDL,OAtDS8xE,EAAAl2E,UAAAm2E,MAAP,SAAav4D,EAAaye,OAA1B,IAAA69B,EAAA,KAAuCvhB,EAAA,GAAAwiB,EAAA,EAAAA,EAAA76D,UAAAC,OAAA46D,IAAAxiB,EAAAwiB,EAAA,GAAA76D,UAAA66D,GACrC,OAAIiG,GAAgB/kC,IAAW+kC,GAAgBxjD,IAC7Cje,OAAOyB,KAAKi7B,GAAQ76B,SAAQ,SAACi1E,GAC3B,GAAIx2E,GAAeC,KAAK0d,EAAQ64D,GAAY,CAC1C,IAAMC,EAAc94D,EAAO64D,GAC3B,GAAIp6C,EAAOo6C,KAAeC,EAAa,CACrC,IAAMv8D,EAAS+/C,EAAKoc,WAAU71E,MAAfy5D,EAAIf,EAAA,CACjBv7C,EACAye,EACAo6C,GACG99B,GAAO,IAIRx+B,IAAWu8D,KACb94D,EAASs8C,EAAKyc,oBAAoB/4D,IAC3B64D,GAAat8D,EAExB,CACF,MAGEyD,EAASs8C,EAAKyc,oBAAoB/4D,IAC3B64D,GAAap6C,EAAOo6C,EAE/B,IAEO74D,GAIFye,CACT,EAMO65C,EAAAl2E,UAAA22E,oBAAP,SAA8Bt0E,GAc5B,OAbI++D,GAAgB/+D,KACb3B,KAAK81E,WAAWhyE,IAAInC,KAErBA,EADEvC,MAAMwB,QAAQe,GACPA,EAAczB,MAAM,GAExBm3D,EAAA,CACHl4D,UAAWF,OAAOgC,eAAeU,IAC9BA,GAGP3B,KAAK81E,WAAWzhE,IAAI1S,KAGjBA,CACT,EACF6zE,CAAA,CA3DA,GCxDM,SAAUU,GACdv0E,GAEA,MAAO,gBAAiBA,CAC1B,CAoBM,SAAUw0E,GACdx0E,GAEA,OAAO++D,GAAgB/+D,IAAU,YAAaA,CAChD,CAEM,SAAUy0E,GACdC,EACA58D,GAEA,IAAI68D,EAAaD,EACXd,EAAS,IAAIC,GAgBnB,OAdEU,GAAkCz8D,IAClC27D,GAAgB37D,EAAO88D,cAEvB98D,EAAO88D,YAAYz1E,SAAQ,SAACs4D,GAC1B,QAD4B9pC,EAAI8pC,EAAA9pC,KAAEwhD,EAAI1X,EAAA0X,KAC7BhxE,EAAIgxE,EAAKjxE,OAAS,EAAGC,GAAK,IAAKA,EAAG,CACzC,IAAMoS,EAAM4+D,EAAKhxE,GAEX02E,GADgBvzE,OAAOiP,GAC+B,GAAK,CAAC,EAClEskE,EAAOtkE,GAAOod,EACdA,EAAOknD,CACT,CACAF,EAAaf,EAAOE,MAAMa,EAAYhnD,EACxC,IAEKgnD,CACT,CCxDQ,IAAA/2E,GAAmBN,OAAOK,UAASC,eAkHrC,SAAUk3E,GAAaC,GAC3B,IAAMC,EAAsC,CAAC,EAU7C,OATAD,EAAWpzE,MAAM,MAAMxC,SAAQ,SAACmsE,GAC9B,IAAMntE,EAAImtE,EAAKpqE,QAAQ,KACvB,GAAI/C,GAAK,EAAG,CAEV,IAAM82E,EAAO3J,EAAK/sE,MAAM,EAAGJ,GAAGmkB,OAAOzI,cAC/B7Z,EAAQsrE,EAAK/sE,MAAMJ,EAAI,GAAGmkB,OAChC0yD,EAAYC,GAAQj1E,CACtB,CACF,IACOg1E,CACT,CAEM,SAAUE,GAAiBhD,EAAoBiD,GACnD,GAAIjD,EAAS9mE,QAAU,IAAK,CAS1BynE,GACEX,EARgB,WAChB,IACE,OAAO9gE,KAAKgkE,MAAMD,EACpB,CAAE,MAAO9lB,GACP,OAAO8lB,CACT,CACF,CAGEE,GACA,iDAAA72E,OAAiD0zE,EAAS9mE,QAE9D,CAEA,IACE,OAAOgG,KAAKgkE,MAAMD,EACpB,CAAE,MAAO9lB,GACP,IAAM+hB,EAAa/hB,EAKnB,MAJA+hB,EAAWxtE,KAAO,mBAClBwtE,EAAWc,SAAWA,EACtBd,EAAW0B,WAAaZ,EAAS9mE,OACjCgmE,EAAW+D,SAAWA,EAChB/D,CACR,CACF,CC1JO,SAASkE,GAAantC,GAC3B,OAAgB,IAATA,GAA4B,KAATA,CAC5B,CASO,SAASotC,GAAQptC,GACtB,OAAOA,GAAQ,IAAUA,GAAQ,EACnC,CAYO,SAASqtC,GAASrtC,GACvB,OACGA,GAAQ,IAAUA,GAAQ,KAC1BA,GAAQ,IAAUA,GAAQ,EAE/B,CAUO,SAASstC,GAAYttC,GAC1B,OAAOqtC,GAASrtC,IAAkB,KAATA,CAC3B,CAWO,SAASutC,GAAevtC,GAC7B,OAAOqtC,GAASrtC,IAASotC,GAAQptC,IAAkB,KAATA,CAC5C,CCrDO,SAASwtC,GAAuBC,GACrC,IAAIC,EAEJ,IAAIC,EAAevhE,OAAOwhE,iBACtBC,EAAoB,KACpBC,GAAoB,EAExB,IAAK,IAAI93E,EAAI,EAAGA,EAAIy3E,EAAM13E,SAAUC,EAAG,CACrC,IAAI+3E,EAEJ,MAAM5K,EAAOsK,EAAMz3E,GACbg4E,EAASC,GAAkB9K,GAE7B6K,IAAW7K,EAAKptE,SAIpB83E,EAC+C,QAA5CE,EAAqBF,SACC,IAAvBE,EACIA,EACA/3E,EACN83E,EAAmB93E,EAET,IAANA,GAAWg4E,EAASL,IACtBA,EAAeK,GAEnB,CAEA,OAAOP,EACJh0E,KAAI,CAAC0pE,EAAMntE,IAAa,IAANA,EAAUmtE,EAAOA,EAAK/sE,MAAMu3E,KAC9Cv3E,MAC+C,QAA7Cs3E,EAAsBG,SACG,IAAxBH,EACEA,EACA,EACJI,EAAmB,EAEzB,CAEA,SAASG,GAAkBC,GACzB,IAAIl4E,EAAI,EAER,KAAOA,EAAIk4E,EAAIn4E,QAAUo3E,GAAae,EAAIC,WAAWn4E,OACjDA,EAGJ,OAAOA,CACT,CClDA,MAAMo4E,GAAgB,gCAEtB,SAASC,GAAgBH,GACvB,OAAOI,GAAgBJ,EAAIC,WAAW,GACxC,CAEA,MAAMG,GAAkB,CACtnKF,MACMC,GAAqB,CACzBjL,KAAM,CACJuE,MAAQ5kC,GAASA,EAAKprC,OAExB6rE,SAAU,CACRmE,MAAQ5kC,GAAS,IAAMA,EAAKxnC,MAG9B8nE,SAAU,CACRsE,MAAQ5kC,GAASrnC,GAAKqnC,EAAKg0B,YAAa,SAE1CuM,oBAAqB,CACnBqE,KAAAA,CAAM5kC,GACJ,MAAMurC,EAAU/d,GAAK,IAAK70D,GAAKqnC,EAAKo9B,oBAAqB,MAAO,KAC1DhQ,EAASz0D,GACb,CACEqnC,EAAKk0B,UACLv7D,GAAK,CAACqnC,EAAKxnC,KAAM+yE,IACjB5yE,GAAKqnC,EAAKm7B,WAAY,MAExB,KAIF,OAAmB,UAAX/N,EAAqB,GAAKA,EAAS,KAAOptB,EAAKg8B,YACzD,GAEFwE,mBAAoB,CAClBoE,MAAOjF,IAAA,IAAC,SAAEtC,EAAQ,KAAEv7D,EAAI,aAAEumB,EAAY,WAAE8yC,GAAYwE,EAAA,OAClDtC,EACA,KACAv7D,EACA0rD,GAAK,MAAOnlC,GACZmlC,GAAK,IAAK70D,GAAKwiE,EAAY,KAAK,GAEpCuF,aAAc,CACZkE,MAAO4G,IAAA,IAAC,WAAEvP,GAAYuP,EAAA,OAAKC,GAAMxP,EAAW,GAE9C0E,MAAO,CACLiE,KAAAA,CAAK8G,GAA6D,IAA5D,MAAE5P,EAAK,KAAEtjE,EAAM3F,UAAW46D,EAAI,WAAE0N,EAAU,aAAEa,GAAc0P,EAC9D,MAAMte,EAASI,GAAK,GAAIsO,EAAO,MAAQtjE,EACvC,IAAImzE,EAAWve,EAASI,GAAK,IAAK70D,GAAK80D,EAAM,MAAO,KAMpD,OAJIke,EAAS74E,OA5CK,KA6ChB64E,EAAWve,EAASI,GAAK,MAAOud,GAAOpyE,GAAK80D,EAAM,OAAQ,QAGrD90D,GAAK,CAACgzE,EAAUhzE,GAAKwiE,EAAY,KAAMa,GAAe,IAC/D,GAEF4E,SAAU,CACRgE,MAAOgH,IAAA,IAAC,KAAEpzE,EAAI,MAAE5D,GAAOg3E,EAAA,OAAKpzE,EAAO,KAAO5D,CAAK,GAGjDisE,eAAgB,CACd+D,MAAOiH,IAAA,IAAC,KAAErzE,EAAI,WAAE2iE,GAAY0Q,EAAA,MAC1B,MAAQrzE,EAAOg1D,GAAK,IAAK70D,GAAKwiE,EAAY,KAAK,GAEnD2F,eAAgB,CACd8D,MAAOkH,IAAA,IAAC,cAAEC,EAAa,WAAE5Q,EAAU,aAAEa,GAAc8P,EAAA,OACjDnzE,GACE,CACE,MACA60D,GAAK,MAAOue,GACZpzE,GAAKwiE,EAAY,KACjBa,GAEF,IACD,GAEL+E,mBAAoB,CAClB6D,MAAOoH,IACmE,IAAxE,KAAExzE,EAAI,cAAEuzE,EAAa,oBAAE3O,EAAmB,WAAEjC,EAAU,aAAEa,GAAcgQ,EAAA,MAGtE,YAAA54E,OAAYoF,GAAIpF,OAAGo6D,GAAK,IAAK70D,GAAKykE,EAAqB,MAAO,KAAI,WAAAhqE,OAC5D24E,EAAa,KAAA34E,OAAIo6D,GAAK,GAAI70D,GAAKwiE,EAAY,KAAM,MACvDa,CAAY,GAGhBgF,SAAU,CACR4D,MAAOqH,IAAA,IAAC,MAAEr3E,GAAOq3E,EAAA,OAAKr3E,CAAK,GAE7BqsE,WAAY,CACV2D,MAAOsH,IAAA,IAAC,MAAEt3E,GAAOs3E,EAAA,OAAKt3E,CAAK,GAE7BssE,YAAa,CACX0D,MAAOuH,IAAA,IAAC,MAAEv3E,EAAO62E,MAAOW,GAAeD,EAAA,OACrCC,EFsCC,SAA0Bx3E,EAAOq0B,GACtC,MAAMojD,EAAez3E,EAAMuiB,QAAQ,OAAQ,SAErCqzD,EAAQ6B,EAAa91E,MAAM,gBAC3B+1E,EAAgC,IAAjB9B,EAAM13E,OAErBy5E,EACJ/B,EAAM13E,OAAS,GACf03E,EACGr3E,MAAM,GACNyS,OAAOs6D,GAAyB,IAAhBA,EAAKptE,QAAgBo3E,GAAahK,EAAKgL,WAAW,MAEjEsB,EAA0BH,EAAaI,SAAS,SAEhDC,EAAmB93E,EAAM63E,SAAS,OAASD,EAC3CG,EAAmB/3E,EAAM63E,SAAS,MAClCG,EAAuBF,GAAoBC,EAC3CE,IACU,OAAZ5jD,QAAgC,IAAZA,GAAsBA,EAAQ6jD,aAClDR,GACA13E,EAAM9B,OAAS,IACf85E,GACAL,GACAC,GACJ,IAAI9/D,EAAS,GAEb,MAAMqgE,EAAqBT,GAAgBpC,GAAat1E,EAAMs2E,WAAW,IAYzE,OAVK2B,IAAyBE,GAAuBR,KACnD7/D,GAAU,MAGZA,GAAU2/D,GAENQ,GAAwBD,KAC1BlgE,GAAU,MAGL,MAAQA,EAAS,KAC1B,CE7EsBsgE,CAAiBp4E,GD/F9B,IAAPxB,OC+F0DwB,ED/F3CuiB,QAAQg0D,GAAeC,IAAgB,IC+FU,GAEhEjK,aAAc,CACZyD,MAAOqI,IAAA,IAAC,MAAEr4E,GAAOq4E,EAAA,OAAMr4E,EAAQ,OAAS,OAAO,GAEjDwsE,UAAW,CACTwD,MAAOA,IAAM,QAEfvD,UAAW,CACTuD,MAAOsI,IAAA,IAAC,MAAEt4E,GAAOs4E,EAAA,OAAKt4E,CAAK,GAE7B0sE,UAAW,CACTsD,MAAOuI,IAAA,IAAC,OAAEvlE,GAAQulE,EAAA,MAAK,IAAMx0E,GAAKiP,EAAQ,MAAQ,GAAG,GAEvD25D,YAAa,CACXqD,MAAOwI,IAAA,IAAC,OAAE7S,GAAQ6S,EAAA,MAAK,IAAMz0E,GAAK4hE,EAAQ,MAAQ,GAAG,GAEvDiH,YAAa,CACXoD,MAAOyI,IAAA,IAAC,KAAE70E,EAAI,MAAE5D,GAAOy4E,EAAA,OAAK70E,EAAO,KAAO5D,CAAK,GAGjD6sE,UAAW,CACTmD,MAAO0I,IAAA,IAAC,KAAE90E,EAAM3F,UAAW46D,GAAM6f,EAAA,MAC/B,IAAM90E,EAAOg1D,GAAK,IAAK70D,GAAK80D,EAAM,MAAO,IAAI,GAGjDiU,UAAW,CACTkD,MAAO2I,IAAA,IAAC,KAAE/0E,GAAM+0E,EAAA,OAAK/0E,CAAI,GAE3BmpE,SAAU,CACRiD,MAAO4I,IAAA,IAAC,KAAE1rE,GAAM0rE,EAAA,MAAK,IAAM1rE,EAAO,GAAG,GAEvC8/D,YAAa,CACXgD,MAAO6I,IAAA,IAAC,KAAE3rE,GAAM2rE,EAAA,OAAK3rE,EAAO,GAAG,GAGjC+/D,iBAAkB,CAChB+C,MAAO8I,IAAA,IAAC,YAAEC,EAAW,WAAExS,EAAU,eAAEyS,GAAgBF,EAAA,OACjDlgB,GAAK,GAAImgB,EAAa,MACtBh1E,GAAK,CAAC,SAAUA,GAAKwiE,EAAY,KAAMsQ,GAAMmC,IAAkB,IAAI,GAEvE9L,wBAAyB,CACvB8C,MAAOiJ,IAAA,IAAC,UAAE3Z,EAAS,KAAEpyD,GAAM+rE,EAAA,OAAK3Z,EAAY,KAAOpyD,CAAI,GAEzDigE,qBAAsB,CACpB6C,MAAOkJ,IAAA,IAAC,YAAEH,EAAW,KAAEn1E,EAAI,WAAE2iE,GAAY2S,EAAA,OACvCtgB,GAAK,GAAImgB,EAAa,MACtBh1E,GAAK,CAAC,SAAUH,EAAMG,GAAKwiE,EAAY,MAAO,IAAI,GAEtD6G,qBAAsB,CACpB4C,MAAOmJ,IAAA,IAAC,YAAEJ,EAAW,KAAEn1E,EAAI,WAAEw1E,EAAU,WAAE7S,EAAU,OAAEZ,GAAQwT,EAAA,OAC3DvgB,GAAK,GAAImgB,EAAa,MACtBh1E,GACE,CACE,OACAH,EACAg1D,GAAK,cAAe70D,GAAKq1E,EAAY,QACrCr1E,GAAKwiE,EAAY,KACjBsQ,GAAMlR,IAER,IACD,GAEL0H,gBAAiB,CACf2C,MAAOqJ,IAAA,IAAC,YAAEN,EAAW,KAAEn1E,EAAM3F,UAAW46D,EAAI,KAAE3rD,EAAI,WAAEq5D,GAAY8S,EAAA,OAC9DzgB,GAAK,GAAImgB,EAAa,MACtBn1E,GACC01E,GAAkBzgB,GACfD,GAAK,MAAOud,GAAOpyE,GAAK80D,EAAM,OAAQ,OACtCD,GAAK,IAAK70D,GAAK80D,EAAM,MAAO,MAChC,KACA3rD,EACA0rD,GAAK,IAAK70D,GAAKwiE,EAAY,KAAK,GAEpC+G,qBAAsB,CACpB0C,MAAOuJ,IAAA,IAAC,YAAER,EAAW,KAAEn1E,EAAI,KAAEsJ,EAAI,aAAEumB,EAAY,WAAE8yC,GAAYgT,EAAA,OAC3D3gB,GAAK,GAAImgB,EAAa,MACtBh1E,GACE,CAACH,EAAO,KAAOsJ,EAAM0rD,GAAK,KAAMnlC,GAAe1vB,GAAKwiE,EAAY,MAChE,IACD,GAELgH,wBAAyB,CACvByC,MAAOwJ,IAAA,IAAC,YAAET,EAAW,KAAEn1E,EAAI,WAAEw1E,EAAU,WAAE7S,EAAU,OAAEZ,GAAQ6T,EAAA,OAC3D5gB,GAAK,GAAImgB,EAAa,MACtBh1E,GACE,CACE,YACAH,EACAg1D,GAAK,cAAe70D,GAAKq1E,EAAY,QACrCr1E,GAAKwiE,EAAY,KACjBsQ,GAAMlR,IAER,IACD,GAEL6H,oBAAqB,CACnBwC,MAAOyJ,IAAA,IAAC,YAAEV,EAAW,KAAEn1E,EAAI,WAAE2iE,EAAU,MAAEmT,GAAOD,EAAA,OAC9C7gB,GAAK,GAAImgB,EAAa,MACtBh1E,GACE,CAAC,QAASH,EAAMG,GAAKwiE,EAAY,KAAM3N,GAAK,KAAM70D,GAAK21E,EAAO,SAC9D,IACD,GAELjM,mBAAoB,CAClBuC,MAAO2J,IAAA,IAAC,YAAEZ,EAAW,KAAEn1E,EAAI,WAAE2iE,EAAU,OAAEvzD,GAAQ2mE,EAAA,OAC/C/gB,GAAK,GAAImgB,EAAa,MACtBh1E,GAAK,CAAC,OAAQH,EAAMG,GAAKwiE,EAAY,KAAMsQ,GAAM7jE,IAAU,IAAI,GAEnE06D,oBAAqB,CACnBsC,MAAO4J,IAAA,IAAC,YAAEb,EAAW,KAAEn1E,EAAI,WAAE2iE,GAAYqT,EAAA,OACvChhB,GAAK,GAAImgB,EAAa,MAAQh1E,GAAK,CAACH,EAAMG,GAAKwiE,EAAY,MAAO,IAAI,GAE1EoH,0BAA2B,CACzBqC,MAAO6J,IAAA,IAAC,YAAEd,EAAW,KAAEn1E,EAAI,WAAE2iE,EAAU,OAAEZ,GAAQkU,EAAA,OAC/CjhB,GAAK,GAAImgB,EAAa,MACtBh1E,GAAK,CAAC,QAASH,EAAMG,GAAKwiE,EAAY,KAAMsQ,GAAMlR,IAAU,IAAI,GAEpEiI,oBAAqB,CACnBoC,MAAO8J,IAAA,IAAC,YAAEf,EAAW,KAAEn1E,EAAM3F,UAAW46D,EAAI,WAAEkhB,EAAU,UAAEC,GAAWF,EAAA,OACnElhB,GAAK,GAAImgB,EAAa,MACtB,cACAn1E,GACC01E,GAAkBzgB,GACfD,GAAK,MAAOud,GAAOpyE,GAAK80D,EAAM,OAAQ,OACtCD,GAAK,IAAK70D,GAAK80D,EAAM,MAAO,OAC/BkhB,EAAa,cAAgB,IAC9B,OACAh2E,GAAKi2E,EAAW,MAAM,GAE1BnM,gBAAiB,CACfmC,MAAOiK,IAAA,IAAC,WAAE1T,EAAU,eAAEyS,GAAgBiB,EAAA,OACpCl2E,GACE,CAAC,gBAAiBA,GAAKwiE,EAAY,KAAMsQ,GAAMmC,IAC/C,IACD,GAELlL,oBAAqB,CACnBkC,MAAOkK,IAAA,IAAC,KAAEt2E,EAAI,WAAE2iE,GAAY2T,EAAA,OAC1Bn2E,GAAK,CAAC,gBAAiBH,EAAMG,GAAKwiE,EAAY,MAAO,IAAI,GAE7DwH,oBAAqB,CACnBiC,MAAOmK,IAAA,IAAC,KAAEv2E,EAAI,WAAEw1E,EAAU,WAAE7S,EAAU,OAAEZ,GAAQwU,EAAA,OAC9Cp2E,GACE,CACE,cACAH,EACAg1D,GAAK,cAAe70D,GAAKq1E,EAAY,QACrCr1E,GAAKwiE,EAAY,KACjBsQ,GAAMlR,IAER,IACD,GAELqI,uBAAwB,CACtBgC,MAAOoK,IAAA,IAAC,KAAEx2E,EAAI,WAAEw1E,EAAU,WAAE7S,EAAU,OAAEZ,GAAQyU,EAAA,OAC9Cr2E,GACE,CACE,mBACAH,EACAg1D,GAAK,cAAe70D,GAAKq1E,EAAY,QACrCr1E,GAAKwiE,EAAY,KACjBsQ,GAAMlR,IAER,IACD,GAELsI,mBAAoB,CAClB+B,MAAOqK,IAAA,IAAC,KAAEz2E,EAAI,WAAE2iE,EAAU,MAAEmT,GAAOW,EAAA,OACjCt2E,GACE,CACE,eACAH,EACAG,GAAKwiE,EAAY,KACjB3N,GAAK,KAAM70D,GAAK21E,EAAO,SAEzB,IACD,GAELxL,kBAAmB,CACjB8B,MAAOsK,IAAA,IAAC,KAAE12E,EAAI,WAAE2iE,EAAU,OAAEvzD,GAAQsnE,EAAA,OAClCv2E,GAAK,CAAC,cAAeH,EAAMG,GAAKwiE,EAAY,KAAMsQ,GAAM7jE,IAAU,IAAI,GAE1Em7D,yBAA0B,CACxB6B,MAAOuK,IAAA,IAAC,KAAE32E,EAAI,WAAE2iE,EAAU,OAAEZ,GAAQ4U,EAAA,OAClCx2E,GAAK,CAAC,eAAgBH,EAAMG,GAAKwiE,EAAY,KAAMsQ,GAAMlR,IAAU,IAAI,IAQ7E,SAAS5hE,GAAKy2E,GAA4B,IAAhBC,EAASx8E,UAAAC,OAAA,QAAAqzD,IAAAtzD,UAAA,GAAAA,UAAA,GAAG,GACpC,IAAIy8E,EAEJ,OAGuD,QAH/CA,EACS,OAAfF,QAAsC,IAAfA,OACnB,EACAA,EAAW34E,QAAQ7C,GAAMA,IAAG+E,KAAK02E,UACX,IAA1BC,EACEA,EACA,EACN,CAKA,SAAS7D,GAAMpM,GACb,OAAO7R,GAAK,MAAOud,GAAOpyE,GAAK0mE,EAAO,OAAQ,MAChD,CAKA,SAAS7R,GAAKriD,EAAOokE,GACnB,OAAsB,MAAfA,GAAuC,KAAhBA,EAC1BpkE,EAAQokE,GAFuB18E,UAAAC,OAAA,QAAAqzD,IAAAtzD,UAAA,GAAAA,UAAA,GAAG,IAGlC,EACN,CAEA,SAASk4E,GAAOE,GACd,OAAOzd,GAAK,KAAMyd,EAAI9zD,QAAQ,MAAO,QACvC,CAEA,SAAS+2D,GAAkBkB,GACzB,IAAII,EAKJ,OAGwD,QAHhDA,EACS,OAAfJ,QAAsC,IAAfA,OACnB,EACAA,EAAW9wE,MAAM2sE,GAAQA,EAAIv/D,SAAS,eACrB,IAArB8jE,GACEA,CAEN,CCzUA,IAAIC,GACSxY,GAAQ/kE,OAAOS,QAC1B,SAAC+8E,GACC,IAAIhjE,EAAS+iE,GAAWh7E,IAAIi7E,GAM5B,OAJKhjE,IACHA,EDPC,SAAegjE,GACpB,OAAOnM,GAAMmM,EAAKpE,GACpB,CCKeqE,CAAUD,GACnBD,GAAW/6E,IAAIg7E,EAAKhjE,IAEfA,CACT,GACA,CACE2sD,MAAK,WACHoW,GAAa,IAAIpZ,GACfI,GAAWQ,OAAS,IAExB,IAGJA,GAAMoC,SAEQ,IAAV/lE,WAAU86D,SACZuI,GAAoB,SAAS,WAAM,OAAC8Y,GAAaA,GAAWnyD,KAAO,CAAhC,ICoErC,IA4BasyD,GAAqB,CAChCC,KA7B2C,CAC3CC,cAAc,EACdC,mBAAmB,EACnBC,oBAAoB,GA2BpBC,QAxBqB,CAErBC,OAAQ,MAaR,eAAgB,oBAUhBjnD,QAPqB,CACrBkqC,OAAQ,SASGgd,GAA0B,SAACT,EAAKU,GAAY,OAAAA,EAAQV,EAAR,EAenD,SAAUW,GACdnc,EACAkc,OACA,IAAAE,EAAA,GAAA5iB,EAAA,EAAAA,EAAA76D,UAAAC,OAAA46D,IAAA4iB,EAAA5iB,EAAA,GAAA76D,UAAA66D,GAEA,IAAIzkC,EAAU,CAAC,EACX4mD,EAAO,CAAC,EAEZS,EAAQv8E,SAAQ,SAACikE,GACf/uC,EAAOqhC,EAAAA,EAAAA,EAAA,GACFrhC,GACA+uC,EAAO/uC,SAAO,CACjBgnD,QAAO3lB,EAAAA,EAAA,GACFrhC,EAAQgnD,SACRjY,EAAOiY,WAIVjY,EAAOuY,cACTtnD,EAAQsnD,YAAcvY,EAAOuY,aAG/BV,EAAIvlB,EAAAA,EAAA,GACCulB,GACA7X,EAAO6X,KAEd,IAEI5mD,EAAQgnD,UACVhnD,EAAQgnD,QAwBZ,SACEA,EACAD,GAGA,IAAKA,EAAoB,CACvB,IAAMQ,EAAoBt+E,OAAO6C,OAAO,MAIxC,OAHA7C,OAAOyB,KAAKzB,OAAO+9E,IAAUl8E,SAAQ,SAACyE,GACpCg4E,EAAkBh4E,EAAKiW,eAAiBwhE,EAAQz3E,EAClD,IACOg4E,CACT,CAMA,IAAMC,EAAav+E,OAAO6C,OAAO,MACjC7C,OAAOyB,KAAKzB,OAAO+9E,IAAUl8E,SAAQ,SAACyE,GACpCi4E,EAAWj4E,EAAKiW,eAAiB,CAC/BiiE,aAAcl4E,EACd5D,MAAOq7E,EAAQz3E,GAEnB,IAEA,IAAMm4E,EAAoBz+E,OAAO6C,OAAO,MAIxC,OAHA7C,OAAOyB,KAAK88E,GAAY18E,SAAQ,SAACyE,GAC/Bm4E,EAAkBF,EAAWj4E,GAAMk4E,cAAgBD,EAAWj4E,GAAM5D,KACtE,IACO+7E,CACT,CAtDsBC,CAChB3nD,EAAQgnD,QACRJ,EAAKG,qBAKD,IAAA7R,EAAgDjK,EAASiK,cAA1CD,EAAiChK,EAASgK,WAA9BlE,EAAqB9F,EAAS8F,UAAnBpvD,EAAUspD,EAAStpD,MAC3Dsd,EAAa,CAAEi2C,cAAaA,EAAEnE,UAASA,GAO7C,OALI6V,EAAKE,oBAAoB7nD,EAAag2C,WAAaA,GAGnD2R,EAAKC,eAAe5nD,EAAatd,MAAQwlE,EAAQxlE,EAAOqsD,KAErD,CACLhuC,QAAOA,EACPf,KAAIA,EAER,CClMM,SAAU2oD,GAAaC,GAC3B,OAAO,IAAIhgB,IAAc,SAACW,GACxBA,EAASvlD,MAAM4kE,EACjB,GACF,CCoDA,IAAMC,GAA4B,CAChC9c,KAAMoP,GAAK2N,MACXx4E,KAAM,CACJy7D,KAAMoP,GAAK4N,KACXr8E,MAAO,eAIX,SAASs8E,GACP3lB,EACAiJ,GAEA,OACGjJ,GACDA,EAAGyQ,aAAaC,WAAWr2D,OACzB,SAAC2uD,GACC,OAAAA,EAAUN,OAASoP,GAAK8N,iBACxBD,GAAQ1c,EAAYD,EAAU/7D,KAAK5D,OAAQ4/D,EAD3C,GAIR,CAEA,SAAS4c,GAAiB7U,GACxB,OACI2U,GACEzU,GAAuBF,I/BGzB,SACJA,GAEA5P,EACe,aAAb4P,EAAItI,KACJ,IAIFtH,EACE4P,EAAIvI,YAAYlhE,QAAU,EAC1B,IAGF,IAAMu+E,EAAc9U,EAAIvI,YAAY,GAOpC,OALArH,EACuB,uBAArB0kB,EAAYpd,KACZ,IAGKod,CACT,C+BzBuCC,CAAsB/U,GACrDpI,GAAkBwI,GAAuBJ,KAG3C,KACAA,CACN,CAEA,SAASgV,GACPjB,GAEA,IAAM5K,EAAQ,IAAIxnD,IAEZszD,EAAQ,IAAItzD,IAelB,OAVAoyD,EAAQv8E,SAAQ,SAACkxE,GACXA,IACEA,EAAUzsE,KACZktE,EAAMhxE,IAAIuwE,EAAUzsE,KAAMysE,GACjBA,EAAUjqE,MACnBw2E,EAAM98E,IAAIuwE,EAAUjqE,KAAMiqE,GAGhC,IAEO,SAACA,GACN,IAAIjN,EAAS0N,EAAMjxE,IAAIwwE,EAAUzsE,KAAK5D,OAQtC,OAPKojE,GAAUwZ,EAAMl0D,MACnBk0D,EAAMz9E,SAAQ,SAAC09E,EAAYz2E,GACrBA,EAAKiqE,KACPjN,EAASyZ,EAEb,IAEKzZ,CACT,CACF,CAcA,SAAS0Z,GAA8BC,GACrC,IAAMn7E,EAAM,IAAI0nB,IAEhB,OAAO,SACL/Y,QAAA,IAAAA,IAAAA,EAAAwsE,GAEA,IAAIC,EAAQp7E,EAAI/B,IAAI0Q,GAcpB,OAbKysE,GACHp7E,EAAI9B,IACFyQ,EACCysE,EAAQ,CAKP5X,UAAW,IAAIrjE,IACfk7E,gBAAiB,IAAIl7E,MAIpBi7E,CACT,CACF,CAEM,SAAUE,GACd3W,EACAoB,GAEAD,GAAcC,GA8Bd,IAxBA,IAAMwV,EAA0BL,GAAgC,IAC1DM,EAAyBN,GAAgC,IACzDO,EAAW,SACfjO,GAEA,IACE,IAAI1uE,EAAI,EAAG48E,OAAQ,EACnB58E,EAAI0uE,EAAUlxE,SAAWo/E,EAAWlO,EAAU1uE,MAC5CA,EAEF,IAAIzB,GAAQq+E,GAAZ,CACA,GAAIA,EAASje,OAASoP,GAAK8O,qBAEzB,OAAOJ,EAAwBG,EAAS15E,MAAQ05E,EAAS15E,KAAK5D,OAEhE,GAAIs9E,EAASje,OAASoP,GAAK+O,oBACzB,OAAOJ,EAAuBE,EAAS15E,KAAK5D,MANf,CAUjC,OADgB,IAAhBtB,WAAU86D,SAAMzB,EAAAzgD,MAAA,IACT,IACT,EAEImmE,EAAiB,EACZt/E,EAAIwpE,EAAIvI,YAAYlhE,OAAS,EAAGC,GAAK,IAAKA,EAC7CwpE,EAAIvI,YAAYjhE,GAAGkhE,OAASoP,GAAK8O,wBACjCE,EAIN,IAAMC,EAAmBf,GAAoBpW,GACvCoX,EAAoB,SAACC,GACzB,OAAAnK,GAAgBmK,IAChBA,EACGh8E,IAAI87E,GACJh0E,MACC,SAAC05D,GAA8C,OAAAA,GAAUA,EAAOvsD,MAAjB,GAJnD,EAOIgnE,EAA6B,IAAIv0D,IAOnCw0D,GAAwB,EAEtBC,EAEF,CACF9N,MAAK,SAAC7kC,GACJ,GAAIuyC,EAAkBvyC,EAAKm7B,YAEzB,OADAuX,GAAwB,EACjB,IAEX,GAGIE,EAA8BrP,GAAMhH,EAAK,CAE7CoE,MAAOgS,EACP7R,eAAgB6R,EAEhBnS,mBAAoB,CAClBqE,MAAK,WAKH,OAAO,CACT,GAGFpE,SAAU,CACRoE,MAAK,SAAC7kC,EAAM4yB,EAAMigB,EAASC,EAAO9O,GAChC,IAAM4N,EAAQK,EAASjO,GACnB4N,GACFA,EAAM5X,UAAU1yD,IAAI04B,EAAKxnC,KAAK5D,MAElC,GAGFisE,eAAgB,CACdgE,MAAK,SAAC7kC,EAAM4yB,EAAMigB,EAASC,EAAO9O,GAChC,GAAIuO,EAAkBvyC,EAAKm7B,YAEzB,OADAuX,GAAwB,EACjB,KAET,IAAMd,EAAQK,EAASjO,GACnB4N,GACFA,EAAMC,gBAAgBvqE,IAAI04B,EAAKxnC,KAAK5D,MAOxC,GAGFmsE,mBAAoB,CAClB8D,MAAK,SAAC7kC,EAAM4yB,EAAMigB,EAAS9O,GACzB0O,EAA2B/9E,IAAIsR,KAAKC,UAAU89D,GAAO/jC,EACvD,EACA4kC,MAAK,SAAC5kC,EAAM4yB,EAAMigB,EAAS9O,GAIzB,OAAI/jC,IAHiByyC,EAA2Bh+E,IAC9CuR,KAAKC,UAAU89D,IASR/jC,EAOPqyC,EAAiB,GACjBryC,EAAKg8B,aAAaC,WAAWr2D,OAC3B,SAAC2uD,GACC,OAAAA,EAAUN,OAASoP,GAAK2N,OACC,eAAzBzc,EAAU/7D,KAAK5D,KADf,KAOJo9E,EAAuBhyC,EAAKxnC,KAAK5D,OAAOm+E,SAAU,EAClDL,GAAwB,EACjB,WAhBT,CAkBF,GAGFjR,UAAW,CACTmD,MAAK,SAAC5kC,GAIJ,GAAIsyC,EAAiBtyC,GAEnB,OADA0yC,GAAwB,EACjB,IAEX,KAIJ,IAAKA,EAGH,OAAOnW,EAQT,IAAMyW,EAAyB,SAACpB,GAa9B,OAZKA,EAAMqB,iBACTrB,EAAMqB,eAAiB,IAAIt8E,IAAIi7E,EAAM5X,WAChC4X,EAAMmB,SACTnB,EAAMC,gBAAgB99E,SAAQ,SAACm/E,GAC7BF,EACEhB,EAAuBkB,IACvBD,eAAgBl/E,SAAQ,SAACo/E,GACzBvB,EAAMqB,eAAgB3rE,IAAI6rE,EAC5B,GACF,KAGGvB,CACT,EAKMwB,EAAuB,IAAIz8E,IACjCi8E,EAA4B5e,YAAYjgE,SAAQ,SAAC+iB,GAC3CA,EAAIm9C,OAASoP,GAAK8O,qBACpBa,EACEjB,EAAwBj7D,EAAIte,MAAQse,EAAIte,KAAK5D,QAC7Ci9E,gBAAgB99E,SAAQ,SAACm/E,GACzBE,EAAqB9rE,IAAI4rE,EAC3B,IAEAp8D,EAAIm9C,OAASoP,GAAK+O,qBAKC,IAAnBC,GACCL,EAAuBl7D,EAAIte,KAAK5D,OAAOm+E,SAExCK,EAAqB9rE,IAAIwP,EAAIte,KAAK5D,MAEtC,IAIAw+E,EAAqBr/E,SAAQ,SAAC8/D,GAG5Bmf,EACEhB,EAAuBne,IACvBge,gBAAgB99E,SAAQ,SAACm/E,GACzBE,EAAqB9rE,IAAI4rE,EAC3B,GACF,IAEA,IAWMG,EAEF,CACFxO,MAAK,SAAC7kC,GACJ,GAf2B6zB,EAeD7zB,EAAKxnC,KAAK5D,OATjCw+E,EAAqBr8E,IAAI88D,IAC1Bme,EAAuBne,GAAckf,QASrC,OAAO,KAhBiB,IAAClf,CAkB7B,GAGF,OAAOud,GACL7N,GAAMqP,EAA6B,CAGjC/R,eAAgBwS,EAGhBtS,mBAAoBsS,EAEpB9S,oBAAqB,CACnBqE,MAAK,SAAC5kC,GAGJ,GAAIA,EAAKo9B,oBAAqB,CAC5B,IAAMkW,EAAoBN,EAExBjB,EAAwB/xC,EAAKxnC,MAAQwnC,EAAKxnC,KAAK5D,QAC/Cq+E,eAaF,GAAIK,EAAkBh2D,KAAO0iB,EAAKo9B,oBAAoBtqE,OACpD,OAAAw3D,EAAAA,EAAA,GACKtqB,GAAI,CACPo9B,oBAAqBp9B,EAAKo9B,oBAAoB3mE,QAAO,SAAC88E,GACpD,OAAAD,EAAkBv8E,IAAIw8E,EAAOlW,SAAS7kE,KAAK5D,MAA3C,KAIR,CACF,KAIR,CAEO,IAAM4+E,GAAwBthF,OAAOS,QAC1C,SAAiC4pE,GAC/B,OAAOgH,GAAMhH,EAAK,CAChBmE,aAAc,CACZmE,MAAK,SAAC7kC,EAAM4yB,EAAMjyD,GAEhB,IACEA,GACCA,EAAmCszD,OAClCoP,GAAK8O,qBAHT,CASQ,IAAAlW,EAAej8B,EAAIi8B,WAC3B,GAAKA,EAaL,IAPaA,EAAW39D,MAAK,SAACi2D,GAC5B,OACE2H,GAAQ3H,KACkB,eAAzBA,EAAU/7D,KAAK5D,OACgC,IAA9C2/D,EAAU/7D,KAAK5D,MAAM6+E,YAAY,KAAM,GAE7C,IACA,CAMA,IAAM9X,EAAQh7D,EACd,KACEu7D,GAAQP,IACRA,EAAMR,YACNQ,EAAMR,WAAW78D,MAAK,SAAClJ,GAAM,MAAiB,WAAjBA,EAAEoD,KAAK5D,KAAP,KAM/B,OAAA01D,EAAAA,EAAA,GACKtqB,GAAI,CACPi8B,WAAUvQ,EAAAA,EAAA,GAAMuQ,GAAY,GAAF,CAAE8U,KAAc,IAhB5C,CAnBA,CAqCF,IAGN,GACA,CACE2C,MAAK,SAAC/X,GACJ,OAAOA,IAAUoV,EACnB,IAsKJ,SAAA4C,GAAkC9vD,GAKhC,MAAsD,UAJxCi5C,GAAAj5C,GAGuBqwC,UAInCrwC,EAIF0/C,GAAA1/C,EAAA,CACM08C,oBAAoB,CACxBsE,MAAA,SAAqB7kC,GACnB,OAAKsqB,EAACA,EAAI,GAAAtqB,GAAA,CAAAk0B,UAAA,cAWhB,SAAA0f,GAAA/vD,UACAy4C,GAAgBz4C,GAGAiuD,GAAU,CAEpB,CAEA92E,KAAA,SAAAiqE,GAAA,iBAAAA,EAAAzsE,KAAA5D,KAAA,EACE6W,QAAM,OCzqBd,IAAMooE,GAAc7mB,GAAM,WAAM,OAAA8mB,KAAA,IAEnBC,GAAiB,SAACC,QAAA,IAAAA,IAAAA,EAAA,IAE3B,IAAA3nB,EASE2nB,EAAWC,IATbA,OAAG,IAAA5nB,EAAG,WAAUA,EAET6nB,EAOLF,EAAWF,MANb3c,EAME6c,EAAW/c,MANbA,OAAK,IAAAE,EAAGgZ,GAAchZ,EACtB4Y,EAKEiE,EAAWjE,kBAJbC,EAIEgE,EAAWhE,mBAHbmE,EAGEH,EAAWG,iBAFb9c,EAEE2c,EAAWI,uBAFbA,OAAsB,IAAA/c,GAAQA,EAC3Bgd,EAAc9pB,EACfypB,EAVA,+GAYU,IAAV1gF,WAAU86D,SCzCY,SAACkmB,GAC3B,IAAKA,GAA4B,qBAAVR,MACrB,MAAM/lB,EAAkB,GAa5B,CD6BIwmB,CAAaL,GAAkBL,IAGjC,IAAMW,EAAa,CACjB3E,KAAM,CAAEE,kBAAiBA,EAAEC,mBAAkBA,GAC7C/mD,QAASorD,EAAeI,aACxBlE,YAAa8D,EAAe9D,YAC5BN,QAASoE,EAAepE,SAG1B,OAAO,IAAIvS,IAAW,SAACxJ,GACrB,IAAIwgB,EEvDiB,SACvBxgB,EACAygB,GAEA,IACMC,EADU1gB,EAAU2gB,aACCZ,IAE3B,OAAIW,IAE8B,oBAAhBD,EACTA,EAAYzgB,GAEXygB,GAA0B,WAEtC,CFyCoBG,CAAU5gB,EAAW+f,GAE/B/oC,EAAUgpB,EAAU2gB,aAQpBE,EAGF,CAAC,EAEL,GAAI7pC,EAAQ8pC,gBAAiB,CACrB,IAAA3oB,EAAoBnhB,EAAQ8pC,gBAA1BnL,EAAIxd,EAAA7zD,KAAE6c,EAAOg3C,EAAAh3C,QACjBw0D,IACFkL,EAAuB,6BAA+BlL,GAEpDx0D,IACF0/D,EAAuB,gCAAkC1/D,EAE7D,CAEA,IAAM4/D,EAAc3qB,EAAAA,EAAA,GAAQyqB,GAA2B7pC,EAAQ+kC,SAEzDiF,EAAgB,CACpBrF,KAAM3kC,EAAQ2kC,KACd5mD,QAASiiB,EAAQupC,aACjBlE,YAAarlC,EAAQqlC,YACrBN,QAASgF,GAGX,GAAIxP,GAAc,CAAC,UAAWvR,EAAUtpD,OAAQ,CAC9C,IAAMuqE,EAAmBvB,GAA6B1f,EAAUtpD,OAEhE,IAAKuqE,EACH,OAAOtE,GACL,IAAIr7E,MACF,0MAKN0+D,EAAUtpD,MAAQuqE,CACpB,CAGM,IAeFC,EAfEje,EAAoBkZ,GACxBnc,EACA+C,EACA2Y,GACA4E,EACAU,GALMjsD,EAAOkuC,EAAAluC,QAAEf,EAAIivC,EAAAjvC,KAQjBA,EAAK8xC,YAAcoa,IACrBlsD,EAAK8xC,UGhHL,SACJA,EACApvD,GAEA,IAAM8B,EAAM49C,EAAA,GAAQ0P,GACdqb,EAAc,IAAI1+E,IAAIzE,OAAOyB,KAAKqmE,IAkBxC,OAjBAuJ,GAAM34D,EAAO,CACX61D,SAAQ,SAACzgC,EAAM4yB,EAAMjyD,GAMjBA,GAC4C,uBAA3CA,EAAkCszD,MAEnCohB,EAAYltE,OAAO63B,EAAKxnC,KAAK5D,MAEjC,IAEFygF,EAAYthF,SAAQ,SAACyE,UACZkU,EAAQlU,EACjB,IACOkU,CACT,CHwFuB4oE,CACfptD,EAAK8xC,UACL9F,EAAUtpD,QAKTqe,EAAQxL,QAAqC,qBAApBD,kBAC5B43D,EAAa,IAAI53D,gBACjByL,EAAQxL,OAAS23D,EAAW33D,QAI9B,IAGkCroB,EAG5BmgF,EAFc,yBADcngF,EAIhC0nE,GAAkB5I,EAAUtpD,QAHnBqpD,MAAkD,iBAAhB7+D,EAAE8+D,UAMzCshB,EAAW/P,GAAc,CAAC,SAAUvR,EAAUtpD,OAQpD,GANEupE,IACCjgB,EAAUtpD,MAAMopD,YAAY11D,MAbF,SAAClJ,GAC5B,MAAkB,wBAAXA,EAAE6+D,MAAkD,aAAhB7+D,EAAE8+D,SAC/C,MAaEjrC,EAAQkqC,OAAS,OAGfqiB,GAAYD,EAAgB,CAC9BtsD,EAAQgnD,QAAUhnD,EAAQgnD,SAAW,CAAC,EACtC,IAAIwF,EAAe,mBAGfF,GAAkBC,IACL,IAAfliF,WAAU86D,SAAKzB,EAAAtoD,KAAA,IAGbkxE,EACFE,GACE,yDACOD,IACTC,GAAgB,uCAElBxsD,EAAQgnD,QAAQC,OAASuF,CAC3B,CAEA,GAAuB,QAAnBxsD,EAAQkqC,OAAkB,CACtB,IAAAkE,EIhKN,SAA2Bqd,EAAmBxsD,GAGlD,IAAMwtD,EAAwB,GACxBC,EAAgB,SAACxwE,EAAavQ,GAClC8gF,EAAY7/E,KAAK,GAAAzC,OAAG+R,EAAG,KAAA/R,OAAImwB,mBAAmB3uB,IAChD,EAQA,GANI,UAAWszB,GACbytD,EAAc,QAASztD,EAAKtd,OAE1Bsd,EAAKi2C,eACPwX,EAAc,gBAAiBztD,EAAKi2C,eAElCj2C,EAAK8xC,UAAW,CAClB,IAAI4b,OAAmB,EACvB,IACEA,EAAsB9P,GACpB59C,EAAK8xC,UACL,gBAEJ,CAAE,MAAOgM,GACP,MAAO,CAAEA,WAAUA,EACrB,CACA2P,EAAc,YAAaC,EAC7B,CACA,GAAI1tD,EAAKg2C,WAAY,CACnB,IAAI2X,OAAoB,EACxB,IACEA,EAAuB/P,GACrB59C,EAAKg2C,WACL,iBAEJ,CAAE,MAAO8H,GACP,MAAO,CAAEA,WAAUA,EACrB,CACA2P,EAAc,aAAcE,EAC9B,CAQA,IAAIxhB,EAAW,GACbyhB,EAAcpB,EACVqB,EAAgBrB,EAAU5+E,QAAQ,MACjB,IAAnBigF,IACF1hB,EAAWqgB,EAAU3+E,OAAOggF,GAC5BD,EAAcpB,EAAU3+E,OAAO,EAAGggF,IAEpC,IAAMC,GAAkD,IAA9BF,EAAYhgF,QAAQ,KAAc,IAAM,IAGlE,MAAO,CAAEmgF,OADPH,EAAcE,EAAoBN,EAAY/8E,KAAK,KAAO07D,EAE9D,CJwGqC6hB,CAAiBxB,EAAWxsD,GAAnD+tD,EAAM5e,EAAA4e,OAAEjQ,EAAU3O,EAAA2O,WAC1B,GAAIA,EACF,OAAO6K,GAAU7K,GAEnB0O,EAAYuB,CACd,MACE,IACGhtD,EAAgBf,KAAO49C,GAAwB59C,EAAM,UACxD,CAAE,MAAO89C,GACP,OAAO6K,GAAU7K,EACnB,CAGF,OAAO,IAAIlV,IAAW,SAACW,GAMrB,IAAM0kB,EAAejC,GAAkBlnB,GAAM,WAAM,OAAA8mB,KAAA,KAAUD,GAEvDuC,EAAe3kB,EAAS95D,KAAK1C,KAAKw8D,GAuBxC,OAtBA0kB,EAAczB,EAAWzrD,GACtBvuB,MAAK,SAACosE,SACL5S,EAAUmiB,WAAW,CAAEvP,SAAQA,IAC/B,ITcgCtK,ESd1B8Z,EAAwB,QAAhBjqB,EAAAya,EAASmJ,eAAO,IAAA5jB,OAAA,EAAAA,EAAE53D,IAAI,gBAEpC,OAAc,OAAV6hF,GAAkB,qBAAqBt7E,KAAKs7E,GTjLpD,SAEJxP,EAAoByP,iJACpB,QAAoBpwB,IAAhBqwB,YACF,MAAM,IAAIhhF,MACR,6EAGEihF,EAAU,IAAID,YAAY,SAC1BE,EAA8B,QAAhB7e,EAAAiP,EAASmJ,eAAO,IAAApY,OAAA,EAAAA,EAAEpjE,IAAI,gBACpCkiF,EAAY,YAMZC,GACO,OAAXF,QAAW,IAAXA,OAAW,EAAXA,EAAahrE,SAASirE,IACT,OAAXD,QAAW,IAAXA,OAAW,EAAXA,EACI7qE,WAAqB,OAAX6qE,QAAW,IAAXA,OAAW,EAAXA,EAAa5gF,QAAQ6gF,IAAaA,GAC7Cx/D,QAAQ,QAAS,IACjBA,QAAQ,WAAY,IACpBD,OACH,IAEE2/D,EAAW,SAAAzjF,OAASwjF,GACtBj0E,EAAS,GACPrL,EAAWuvE,GAAiBC,GAC9BgQ,GAAU,0BAEPA,EACmB,GAAMx/E,EAASK,QAD3B,aAQZ,IAPM00D,EAAkBrvD,EAAAmuD,OAAhBv2D,EAAKy3D,EAAAz3D,MAAEgD,EAAIy0D,EAAAz0D,KACbyuE,EAAyB,kBAAVzxE,EAAqBA,EAAQ6hF,EAAQM,OAAOniF,GAC3DoiF,EAAar0E,EAAO7P,OAAS+jF,EAAS/jF,OAAS,EACrDgkF,GAAWl/E,EAEPk4C,GADJntC,GAAU0jE,GACMvwE,QAAQ+gF,EAAUG,GAE3BlnC,GAAM,GAAG,CASd,GARIr3C,OAAO,EACX0+D,EAAoB,CAClBx0D,EAAOxP,MAAM,EAAG28C,GAChBntC,EAAOxP,MAAM28C,EAAK+mC,EAAS/jF,SAFnB6P,EAAMw0D,EAAA,GAIVpkE,GAJL0F,EAAO0+D,EAAA,IAIUrhE,QAAQ,YACpBm6E,EAAUvG,GAAajxE,EAAQtF,MAAM,EAAGJ,KACxCkkF,EAAchH,EAAQ,mBAGiC,IAA3DgH,EAAYxoE,cAAc3Y,QAAQ,oBAElC,MAAM,IAAIN,MACR,iEAOJ,GAFM0yB,EAAOzvB,EAAQtF,MAAMJ,GAIzB,GADM2Z,EAASo9D,GAAiBhD,EAAU5+C,GAExCh2B,OAAOyB,KAAK+Y,GAAQ5Z,OAAS,GAC7B,SAAU4Z,GACV,gBAAiBA,GACjB,WAAYA,GACZ,YAAaA,EAEb,GAAI08D,GAAsB18D,GAAS,CAEjC,GADI/U,EAAO,CAAC,EACR,YAAa+U,EAAQ,CACvB,GAAmC,IAA/Bxa,OAAOyB,KAAK+Y,GAAQ5Z,QAAmC,OAAnB4Z,EAAO4/B,QAC7C,UAEF30C,EAAI2yD,EAAA,GAAQ59C,EAAO4/B,QACrB,CACI,WAAY5/B,IACd/U,EAAI2yD,EAAAA,EAAA,GACC3yD,GAAI,CACPumE,WAAU5T,EAAAA,EAAA,GACJ,eAAgB3yD,EAAOA,EAAKumE,WAAc,OAAa7G,EAAA,GAAAA,EAC1DsQ,IAAyBj7D,EAAOy7D,OAAM9Q,OAI7Ckf,EAAU5+E,EACZ,MAGE4+E,EAAU7pE,QAEP,GAG0B,IAA/Bxa,OAAOyB,KAAK+Y,GAAQ5Z,QACpB,YAAa4Z,IACZA,EAAOwqE,QAER,UAGJpnC,EAAKntC,EAAO7M,QAAQ+gF,EACtB,qCS4EeM,CAAkBrQ,EAAUsP,ITWL5Z,ESTGtI,ETUpC,SAAC4S,GACN,OAAAA,EACGvnC,OACA7kC,MAAK,SAACqvE,GAAa,OAAAD,GAAchD,EAAUiD,EAAxB,IACnBrvE,MAAK,SAACgS,GAiBL,OAfGra,MAAMwB,QAAQ6Y,IACdla,GAAeC,KAAKia,EAAQ,SAC5Bla,GAAeC,KAAKia,EAAQ,WAG7B+6D,GACEX,EACAp6D,EACA,0CAAAtZ,OACEf,MAAMwB,QAAQ2oE,GACZA,EAAWhmE,KAAI,SAAC+0D,GAAO,OAAAA,EAAG4S,aAAH,IACvB3B,EAAW2B,cAAa,OAIzBzxD,CACT,GArBF,GSXoDo6D,GAAUpsE,KACpD07E,EAGN,IACC17E,MAAK,WACJ06E,OAAajvB,EACbsL,EAASpyC,UACX,IACCvgB,OAAM,SAACmlD,GACNmxB,OAAajvB,ETzCjB,SAAsBlC,EAAUwN,GAMhCxN,EAAIv3C,QAAUu3C,EAAIv3C,OAAOy7D,QAAUlkB,EAAIv3C,OAAO6V,MA4BhDkvC,EAAS95D,KAAKssD,EAAIv3C,QAGpB+kD,EAASvlD,MAAM+3C,EACjB,CSIUmzB,CAAYnzB,EAAKwN,EACnB,IAEK,WAGD2jB,GAAYA,EAAW7iE,OAC7B,CACF,GACF,GACF,EKpNA8kE,GAAA,SAAA7qB,GACE,SAAA6qB,EAAmBpuD,QAAA,IAAAA,IAAAA,EAAA,IACjB,IAAAwjC,EAAAD,EAAK/5D,KAAC,KAAAshF,GAAe9qD,GAAS2gC,UAAQ,YADrB6C,EAAAxjC,QAAAA,GAEnB,CACF,OAJ8BmhC,EAAAitB,EAAA7qB,GAI9B6qB,CAAA,CAJA,CAA8B3Z,ICJ9B,MAAQxmE,SAAQ,GAAE1E,eAAcA,IAAKN,OAAOK,UACtC+kF,GAAU9uB,SAASj2D,UAAU2E,SAC7BqgF,GAAsB,IAAIr5D,IAK1B,SAAUs5D,GAAM1jF,EAAQuB,GAC5B,IACE,OAAOoiF,GAAM3jF,EAAGuB,GAChB,QACAkiF,GAAoBnvE,QAExB,CAGA,YAEA,SAASqvE,GAAM3jF,EAAQuB,GAErB,GAAIvB,IAAMuB,EACR,OAAO,EAKT,MAAMqiF,EAAOxgF,GAASzE,KAAKqB,GAM3B,GAAI4jF,IALSxgF,GAASzE,KAAK4C,GAMzB,OAAO,EAGT,OAAQqiF,GACN,IAAK,iBAGH,GAAI5jF,EAAEhB,SAAWuC,EAAEvC,OAAQ,OAAO,EAEpC,IAAK,kBAAmB,CACtB,GAAI6kF,GAAmB7jF,EAAGuB,GAAI,OAAO,EAErC,MAAMuiF,EAAQC,GAAY/jF,GACpBgkF,EAAQD,GAAYxiF,GAIpB0iF,EAAWH,EAAM9kF,OACvB,GAAIilF,IAAaD,EAAMhlF,OAAQ,OAAO,EAGtC,IAAK,IAAI8C,EAAI,EAAGA,EAAImiF,IAAYniF,EAC9B,IAAKpD,GAAeC,KAAK4C,EAAGuiF,EAAMhiF,IAChC,OAAO,EAKX,IAAK,IAAIA,EAAI,EAAGA,EAAImiF,IAAYniF,EAAG,CACjC,MAAMuP,EAAMyyE,EAAMhiF,GAClB,IAAK6hF,GAAM3jF,EAAEqR,GAAM9P,EAAE8P,IACnB,OAAO,EAIX,OAAO,EAGT,IAAK,iBACH,OAAOrR,EAAE0E,OAASnD,EAAEmD,MAAQ1E,EAAE2E,UAAYpD,EAAEoD,QAE9C,IAAK,kBAEH,GAAI3E,IAAMA,EAAG,OAAOuB,IAAMA,EAE5B,IAAK,mBACL,IAAK,gBACH,OAAQvB,KAAOuB,EAEjB,IAAK,kBACL,IAAK,kBACH,OAAOvB,GAAK,GAAJV,OAAOiC,GAEjB,IAAK,eACL,IAAK,eAAgB,CACnB,GAAIvB,EAAEwpB,OAASjoB,EAAEioB,KAAM,OAAO,EAC9B,GAAIq6D,GAAmB7jF,EAAGuB,GAAI,OAAO,EAErC,MAAM2iF,EAAYlkF,EAAE2lB,UACdw+D,EAAiB,iBAATP,EAEd,OAAa,CACX,MAAMQ,EAAOF,EAAUrgF,OACvB,GAAIugF,EAAKtgF,KAAM,MAGf,MAAOugF,EAAMC,GAAUF,EAAKtjF,MAG5B,IAAKS,EAAE0B,IAAIohF,GACT,OAAO,EAKT,GAAIF,IAAUR,GAAMW,EAAQ/iF,EAAEZ,IAAI0jF,IAChC,OAAO,EAIX,OAAO,EAGT,IAAK,uBACL,IAAK,sBACL,IAAK,uBACL,IAAK,sBACL,IAAK,qBACL,IAAK,sBACL,IAAK,uBAGHrkF,EAAI,IAAI2H,WAAW3H,GACnBuB,EAAI,IAAIoG,WAAWpG,GAErB,IAAK,oBAAqB,CACxB,IAAIu6D,EAAM97D,EAAE+O,WACZ,GAAI+sD,IAAQv6D,EAAEwN,WACZ,KAAO+sD,KAAS97D,EAAE87D,KAASv6D,EAAEu6D,KAI/B,OAAgB,IAATA,EAGT,IAAK,yBACL,IAAK,6BACL,IAAK,kCACL,IAAK,oBAAqB,CACxB,MAAMyoB,EAAQf,GAAQ7kF,KAAKqB,GAC3B,OAAIukF,IAAUf,GAAQ7kF,KAAK4C,KAiDjC,SAAkBijF,EAAcC,GAC9B,MAAMC,EAAYF,EAAKxlF,OAASylF,EAAOzlF,OACvC,OAAO0lF,GAAa,GAClBF,EAAKxiF,QAAQyiF,EAAQC,KAAeA,CACxC,CA1Bc/L,CAAS4L,EAAOI,KAK5B,OAAO,CACT,CAEA,SAASZ,GAAoC5vB,GAG3C,OAAO/1D,OAAOyB,KAAKs0D,GAAKxxD,OAAOiiF,GAAczwB,EAC/C,CACA,SAASywB,GAEPvzE,GAEA,YAAqB,IAAdlS,KAAKkS,EACd,CAEA,MAAMszE,GAAmB,oBAQzB,SAASd,GAAmB7jF,EAAWuB,GASrC,IAAIsjF,EAAOpB,GAAoB9iF,IAAIX,GACnC,GAAI6kF,GAGF,GAAIA,EAAK5hF,IAAI1B,GAAI,OAAO,OAExBkiF,GAAoB7iF,IAAIZ,EAAG6kF,EAAO,IAAIhiF,KAGxC,OADAgiF,EAAKrxE,IAAIjS,IACF,CACT,CCnNA,MAAMujF,GAAkBA,IAAM1mF,OAAO6C,OAAO,OAGtC,QAAEhB,GAAO,MAAEZ,IAAUd,MAAME,WACzBC,eAAcA,IAAKN,OAAOK,UAE5B,MAAOsmF,GAQX7hF,WAAAA,GAE4D,IADlD8hF,IAAAjmF,UAAAC,OAAA,QAAAqzD,IAAAtzD,UAAA,KAAAA,UAAA,GACAkmF,EAAAlmF,UAAAC,OAAA,QAAAqzD,IAAAtzD,UAAA,GAAAA,UAAA,GAAmC+lF,GADnC,KAAAE,SAAAA,EACA,KAAAC,SAAAA,CACP,CAGIrgB,MAAAA,GACL,OAAOzlE,KAAK+lF,YAAYnmF,UAC1B,CAEOmmF,WAAAA,CAA0C3Z,GAC/C,IAAIr/B,EAAmB/sC,KAEvB,OADAc,GAAQtB,KAAK4sE,GAAOl6D,GAAO66B,EAAOA,EAAKi5C,aAAa9zE,KAC7C3S,GAAeC,KAAKutC,EAAM,QAC7BA,EAAKzd,KACLyd,EAAKzd,KAAOtvB,KAAK8lF,SAAS5lF,GAAMV,KAAK4sE,GAC3C,CAGO6Z,IAAAA,GACL,OAAOjmF,KAAKkmF,UAAUtmF,UACxB,CAEOsmF,SAAAA,CAAwC9Z,GAC7C,IAAIr/B,EAA+B/sC,KAEnC,IAAK,IAAIF,EAAI,EAAG68D,EAAMyP,EAAMvsE,OAAQktC,GAAQjtC,EAAI68D,IAAO78D,EAAG,CACxD,MAAMyD,EAAMwpC,EAAKo5C,OAAO/Z,EAAMtsE,IAAI,GAClCitC,EAAOxpC,GAAOA,EAAI/B,IAAI4qE,EAAMtsE,IAG9B,OAAOitC,GAAQA,EAAKzd,IACtB,CAGO9W,MAAAA,GACL,OAAOxY,KAAKomF,YAAYxmF,UAC1B,CAEOwmF,WAAAA,CAA0Cha,GAC/C,IAAI98C,EAEJ,GAAI88C,EAAMvsE,OAAQ,CAChB,MAAMy2D,EAAO8V,EAAM,GACb7oE,EAAMvD,KAAKmmF,OAAO7vB,GAAM,GACxB93B,EAAQj7B,GAAOA,EAAI/B,IAAI80D,GACzB93B,IACFlP,EAAOkP,EAAM4nD,YAAYlmF,GAAMV,KAAK4sE,EAAO,IACtC5tC,EAAMlP,MAASkP,EAAM6nD,MAAU7nD,EAAM8nD,QAAU9nD,EAAM8nD,OAAOj8D,MAC/D9mB,EAAI2R,OAAOohD,SAIfhnC,EAAOtvB,KAAKsvB,YACLtvB,KAAKsvB,KAGd,OAAOA,CACT,CAEQ02D,YAAAA,CAAa9zE,GACnB,MAAM3O,EAAMvD,KAAKmmF,OAAOj0E,GAAK,GAC7B,IAAIssB,EAAQj7B,EAAI/B,IAAI0Q,GAEpB,OADKssB,GAAOj7B,EAAI9B,IAAIyQ,EAAKssB,EAAQ,IAAIonD,GAAW5lF,KAAK6lF,SAAU7lF,KAAK8lF,WAC7DtnD,CACT,CAEQ2nD,MAAAA,CAAOj0E,EAAUpQ,GACvB,OAAO9B,KAAK6lF,UAMhB,SAAkBlkF,GAChB,cAAeA,GACf,IAAK,SACH,GAAc,OAAVA,EAAgB,MAEtB,IAAK,WACH,OAAO,EAET,OAAO,CACT,CAf4B4kF,CAASr0E,GAC7BlS,KAAKqmF,OAASvkF,EAAS9B,KAAKqmF,KAAO,IAAIxiF,aAAU,GACjD7D,KAAKsmF,SAAWxkF,EAAS9B,KAAKsmF,OAAS,IAAIr7D,SAAM,EACvD,ECrFF,MAAM06D,GAAkBA,IAAM1mF,OAAO6C,OAAO,OAGpChB,QAAO,GAAEZ,MAAKA,IAAKd,MAAME,WACzBC,eAAcA,IAAKN,OAAOK,UAE5B,MAAOsmF,GAQX7hF,WAAAA,GAE4D,IADlD8hF,IAAAjmF,UAAAC,OAAA,QAAAqzD,IAAAtzD,UAAA,KAAAA,UAAA,GACAkmF,EAAAlmF,UAAAC,OAAA,QAAAqzD,IAAAtzD,UAAA,GAAAA,UAAA,GAAmC+lF,GADnC,KAAAE,SAAAA,EACA,KAAAC,SAAAA,CACP,CAEIrgB,MAAAA,GAAmC,QAAAhG,EAAA7/D,UAAAC,OAARusE,EAAQ,IAAAhtE,MAAAqgE,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAARyM,EAAQzM,GAAA//D,UAAA+/D,GACxC,OAAO3/D,KAAK+lF,YAAY3Z,EAC1B,CAEO2Z,WAAAA,CAA0C3Z,GAC/C,IAAIr/B,EAAmB/sC,KAEvB,OADAc,GAAQtB,KAAK4sE,GAAOl6D,GAAO66B,EAAOA,EAAKi5C,aAAa9zE,KAC7C3S,GAAeC,KAAKutC,EAAM,QAC7BA,EAAKzd,KACLyd,EAAKzd,KAAOtvB,KAAK8lF,SAAS5lF,GAAMV,KAAK4sE,GAC3C,CAEO6Z,IAAAA,GAAiC,QAAA1lB,EAAA3gE,UAAAC,OAARusE,EAAQ,IAAAhtE,MAAAmhE,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAR2L,EAAQ3L,GAAA7gE,UAAA6gE,GACtC,OAAOzgE,KAAKkmF,UAAU9Z,EACxB,CAEO8Z,SAAAA,CAAwC9Z,GAC7C,IAAIr/B,EAA+B/sC,KAEnC,IAAK,IAAIF,EAAI,EAAG68D,EAAMyP,EAAMvsE,OAAQktC,GAAQjtC,EAAI68D,IAAO78D,EAAG,CACxD,MAAMyD,EACJvD,KAAK6lF,UAAYU,GAASna,EAAMtsE,IAAMitC,EAAKs5C,KAAOt5C,EAAKu5C,OAEzDv5C,EAAOxpC,GAAOA,EAAI/B,IAAI4qE,EAAMtsE,IAG9B,OAAOitC,GAAQA,EAAKzd,IACtB,CAEQ02D,YAAAA,CAAa9zE,GACnB,MAAM3O,EAAMvD,KAAK6lF,UAAYU,GAASr0E,GAClClS,KAAKqmF,OAASrmF,KAAKqmF,KAAO,IAAIxiF,SAC9B7D,KAAKsmF,SAAWtmF,KAAKsmF,OAAS,IAAIr7D,KACtC,IAAIuT,EAAQj7B,EAAI/B,IAAI0Q,GAEpB,OADKssB,GAAOj7B,EAAI9B,IAAIyQ,EAAKssB,EAAQ,IAAIonD,GAAW5lF,KAAK6lF,SAAU7lF,KAAK8lF,WAC7DtnD,CACT,EAGF,SAAS+nD,GAAS5kF,GAChB,cAAeA,GACf,IAAK,SACH,GAAc,OAAVA,EAAgB,MAEtB,IAAK,WACH,OAAO,EAET,OAAO,CACT,CCjEA,IAAI6kF,GAAiC,KAIrC,MAAMC,GAAqB,CAAC,EAE5B,IAAIC,GAAY,EA+GhB,SAAS3sB,GAASl3C,GAChB,IACE,OAAOA,IACP,MAAO8jE,GAAU,CACrB,CAUA,MAAMC,GAAY,oBAiBZC,GAZJ9sB,IAAM,IAAM15D,cAIZ05D,IAAM,IAAMv5D,UAIZvB,OAAO6C,OAAO,MAQHglF,GACXD,GAAWD,KAGVxnF,MAA4BwnF,KAC5B,SAAUE,GACT,IACE7nF,OAAOsC,eAAeslF,GAAYD,GAAW,CAC3CjlF,MAAOmlF,EACP5yE,YAAY,EACZtS,UAAU,EAOVF,cAAc,IAEhB,QACA,OAAOolF,EAEX,CAjBC,CAlJyB,MAAA/iF,WAAAA,GAIV,KAAAsF,GAAK,CACnB,OACAq9E,KACAxgD,KAAKC,MACL7sB,KAAK82B,SAASnsC,SAAS,IAAI/D,MAAM,IACjCwF,KAAK,IA+FT,CA7FSwnB,QAAAA,GACL,IAAK,IAAI+qB,EAAUuuC,GAAgBvuC,EAASA,EAAUA,EAAQvqC,OAG5D,GAAI1N,KAAKqJ,MAAM4uC,EAAQ8uC,MAAO,CAC5B,MAAMplF,EAAQs2C,EAAQ8uC,MAAM/mF,KAAKqJ,IACjC,GAAI1H,IAAU8kF,GAAe,MAO7B,OANIxuC,IAAYuuC,KAIdA,GAAgBO,MAAM/mF,KAAKqJ,IAAM1H,IAE5B,EASX,OANI6kF,KAIFA,GAAeO,MAAM/mF,KAAKqJ,IAAMo9E,KAE3B,CACT,CAEOt5D,QAAAA,GACL,GAAIntB,KAAKktB,WACP,OAAOs5D,GAAgBO,MAAM/mF,KAAKqJ,GAEtC,CAEO29E,SAAAA,CACLrlF,EACA23C,EAGAkhB,EACA9C,GAEA,MAAMqvB,EAAQ,CACZ5nF,UAAW,KACX,CAACa,KAAKqJ,IAAK1H,GAEP+L,EAAS84E,GACfA,GAAiB,CAAE94E,SAAQq5E,SAC3B,IAGE,OAAOztC,EAASv5C,MAAM23D,EAAU8C,GAChC,QACAgsB,GAAiB94E,EAErB,CAIA,WAAO1L,CACLs3C,GAEA,MAAMrB,EAAUuuC,GAChB,OAAO,WACL,MAAMS,EAAQT,GACd,IAEE,OADAA,GAAiBvuC,EACVqB,EAASv5C,MAAMC,KAAMJ,WAC5B,QACA4mF,GAAiBS,EAErB,CACF,CAGA,gBAAOC,CACL5tC,EAGAkhB,EACA9C,GAEA,IAAI8uB,GAWF,OAAOltC,EAASv5C,MAAM23D,EAAU8C,GAXd,CAClB,MAAMysB,EAAQT,GACd,IAIE,OAHAA,GAAiB,KAGVltC,EAASv5C,MAAM23D,EAAU8C,GAChC,QACAgsB,GAAiBS,GAKvB,KCxHW,KAAEjlF,GAAI,UAAEklF,IAAcJ,GCC5B,MAAMK,GAAkB,IAAIL,GCD5B,MACLvnF,eAAcA,IACZN,OAAOK,UAEE8nF,GACXhoF,MAAMyC,MACN,SAAUJ,GACR,MAAM2qE,EAAe,GAErB,OADA3qE,EAAIX,SAAQw/D,GAAQ8L,EAAMxpE,KAAK09D,KACxB8L,CACT,EAMI,SAAUib,GAAiBC,GAC/B,MAAM,YAAE/yE,GAAgB+yE,EACG,oBAAhB/yE,IACT+yE,EAAW/yE,iBAAc,EACzBA,IAEJ,CCnBA,MAAMgzE,GAA2B,GAC3BC,GAAmB,IAIzB,SAASC,GAAO9tB,EAAgB+tB,GAC9B,IAAM/tB,EACJ,MAAM,IAAIp3D,MAAMmlF,GAAmB,oBAEvC,CASA,SAASC,GAAQ9mF,EAAeuB,GAC9B,MAAMu6D,EAAM97D,EAAEhB,OACd,OAEE88D,EAAM,GAENA,IAAQv6D,EAAEvC,QAEVgB,EAAE87D,EAAM,KAAOv6D,EAAEu6D,EAAM,EAE3B,CAEA,SAASirB,GAAYjmF,GACnB,OAAQA,EAAM9B,QACZ,KAAK,EAAG,MAAM,IAAI0C,MAAM,iBACxB,KAAK,EAAG,OAAOZ,EAAM,GACrB,KAAK,EAAG,MAAMA,EAAM,GAExB,CAEA,SAASkmF,GAAalmF,GACpB,OAAOA,EAAMzB,MAAM,EACrB,CAIM,MAAO4nF,GAmBX/jF,WAAAA,CACkB8e,GAAA,KAAAA,GAAAA,EAbF,KAAAklE,QAAU,IAAIrkF,IACd,KAAAskF,YAAc,IAAI/8D,IAK3B,KAAAg9D,cAAsC,KAEtC,KAAAj+D,OAAQ,EACR,KAAAk+D,aAAc,EACL,KAAAvmF,MAAuB,GAuE/B,KAAA47C,KAA6B,OAlEjCuqC,GAAMt0E,KACV,CAEOyyE,IAAAA,GACL,GAA0B,IAAtBjmF,KAAK2B,MAAM9B,SAAiBsoF,GAAanoF,MAE3C,OADAooF,GAAepoF,MACRA,KAAK2B,MAAM,EAEtB,CAQO0mF,SAAAA,CAAU7tB,GAGf,OAFAitB,IAASznF,KAAKkoF,YAAa,uBAC3BE,GAAepoF,MACRmoF,GAAanoF,MAsFxB,SAAyBsoF,EAAiB9tB,GACxC+tB,GAAeD,GAGfnB,GAAgBH,UAAUsB,EAAOE,GAAmB,CAACF,EAAO9tB,IA6K9D,SAAwB8tB,EAAiB9tB,GACvC,GAA+B,oBAApB8tB,EAAMjyE,UACf,IACEgxE,GAAiBiB,GACjBA,EAAM/zE,YAAc+zE,EAAMjyE,UAAUtW,MAAM,KAAMy6D,GAChD,MAAOz7D,IAMP,OADAupF,EAAMG,YACC,EAMX,OAAO,CACT,CA7LMC,CAAeJ,EAAO9tB,IAmD5B,SAAkB8tB,GAGhB,GAFAA,EAAMt+D,OAAQ,EAEVm+D,GAAaG,GAGf,OAGFK,GAAYL,EACd,CA1DIM,CAASN,GAGX,OAAOV,GAASU,EAAM3mF,MACxB,CAlGQknF,CAAgB7oF,KAAMw6D,GACtBotB,GAAS5nF,KAAK2B,MACpB,CAEO8mF,QAAAA,GACDzoF,KAAKgqB,QACThqB,KAAKgqB,OAAQ,EACb8+D,GAAY9oF,MAIZqnF,GAAiBrnF,MACnB,CAEOoiE,OAAAA,GACLpiE,KAAKyoF,WAKLF,GAAevoF,MAaf+oF,GAAW/oF,MAAM,CAAC0N,EAAQ8wB,KACxB9wB,EAAO+6E,WACPO,GAAYt7E,EAAQ1N,KAAK,GAE7B,CAEOipF,MAAAA,GAILjpF,KAAKoiE,SACP,CAIO8mB,QAAAA,CAASC,GACdA,EAAI90E,IAAIrU,MACFA,KAAKu9C,OACTv9C,KAAKu9C,KAAOgqC,GAAax5E,OAAS,IAAIrK,KAExC1D,KAAKu9C,KAAKlpC,IAAI80E,EAChB,CAEOC,UAAAA,GACDppF,KAAKu9C,OACP6pC,GAAapnF,KAAKu9C,MAAMz8C,SAAQqoF,GAAOA,EAAIj0E,OAAOlV,QAClDA,KAAKu9C,KAAKpoC,QACVoyE,GAAa3kF,KAAK5C,KAAKu9C,MACvBv9C,KAAKu9C,KAAO,KAEhB,EAGF,SAAS6qC,GAAe5pD,GACtB,MAAM9wB,EAASy5E,GAAgBh6D,WAC/B,GAAIzf,EAaF,OAZA8wB,EAAMupD,QAAQ1zE,IAAI3G,GAEZA,EAAOs6E,YAAYlkF,IAAI06B,IAC3B9wB,EAAOs6E,YAAYvmF,IAAI+8B,EAAO,IAG5B2pD,GAAa3pD,GACf6qD,GAAiB37E,EAAQ8wB,GAEzB8qD,GAAiB57E,EAAQ8wB,GAGpB9wB,CAEX,CAiBA,SAAS86E,GAAkBF,EAAiB9tB,GAC1C8tB,EAAMJ,aAAc,EAEpB,MAAM,gBAAEqB,GAAoBjB,EAC5B,IAAIkB,EACAD,GAA0C,IAAvBjB,EAAM3mF,MAAM9B,SACjC2pF,EAAe3B,GAAUS,EAAM3mF,QAIjC2mF,EAAM3mF,MAAM9B,OAAS,EAErB,IAQE,GANAyoF,EAAM3mF,MAAM,GAAK2mF,EAAMzlE,GAAG9iB,MAAM,KAAMy6D,GAMlC+uB,GAAmBC,IAAiB7B,GAAQ6B,EAAclB,EAAM3mF,OAClE,IACE2mF,EAAM3mF,MAAM,GAAK4nF,EAAgBjB,EAAM3mF,MAAM,GAAI6nF,EAAa,IAC9D,MAAApwB,GAEA,EAIJ,MAAOr6D,IAEPupF,EAAM3mF,MAAM,GAAK5C,GAInBupF,EAAMJ,aAAc,CACtB,CAEA,SAASC,GAAaG,GACpB,OAAOA,EAAMt+D,UAAYs+D,EAAML,gBAAiBK,EAAML,cAAc59D,KACtE,CAcA,SAASy+D,GAAYtqD,GACnBuqD,GAAWvqD,EAAO6qD,GACpB,CAEA,SAASV,GAAYnqD,GACnBuqD,GAAWvqD,EAAO8qD,GACpB,CAEA,SAASP,GACPvqD,EACA8a,GAEA,MAAMmwC,EAAcjrD,EAAMupD,QAAQ19D,KAClC,GAAIo/D,EAAa,CACf,MAAM1B,EAAUX,GAAa5oD,EAAMupD,SACnC,IAAK,IAAIjoF,EAAI,EAAGA,EAAI2pF,IAAe3pF,EACjCw5C,EAASyuC,EAAQjoF,GAAI0+B,GAG3B,CAGA,SAAS6qD,GAAiB37E,EAAkB8wB,GAG1CipD,GAAO/5E,EAAOs6E,YAAYlkF,IAAI06B,IAC9BipD,GAAOU,GAAa3pD,IACpB,MAAMkrD,GAAkBvB,GAAaz6E,GAErC,GAAMA,EAAOu6E,eAGN,GAAIv6E,EAAOu6E,cAAcnkF,IAAI06B,GAIlC,YANA9wB,EAAOu6E,cAAgBV,GAAax5E,OAAS,IAAIrK,IASnDgK,EAAOu6E,cAAc5zE,IAAImqB,GAIrBkrD,GACFZ,GAAYp7E,EAEhB,CAGA,SAAS47E,GAAiB57E,EAAkB8wB,GAG1CipD,GAAO/5E,EAAOs6E,YAAYlkF,IAAI06B,IAC9BipD,IAASU,GAAa3pD,IAEtB,MAAMmrD,EAAaj8E,EAAOs6E,YAAYxmF,IAAIg9B,GAChB,IAAtBmrD,EAAW9pF,OACb6N,EAAOs6E,YAAYvmF,IAAI+8B,EAAOqpD,GAAUrpD,EAAM78B,QACnCgmF,GAAQgC,EAAYnrD,EAAM78B,QACrC+L,EAAO+6E,WAGTmB,GAAiBl8E,EAAQ8wB,GAErB2pD,GAAaz6E,IAIjBi7E,GAAYj7E,EACd,CAEA,SAASk8E,GAAiBl8E,EAAkB8wB,GAC1C,MAAMW,EAAKzxB,EAAOu6E,cACd9oD,IACFA,EAAGjqB,OAAOspB,GACM,IAAZW,EAAG9U,OACDk9D,GAAa1nF,OAAS2nF,IACxBD,GAAa3kF,KAAKu8B,GAEpBzxB,EAAOu6E,cAAgB,MAG7B,CAIA,SAASM,GAAe76E,GAClBA,EAAOs6E,YAAY39D,KAAO,GAC5B3c,EAAOs6E,YAAYlnF,SAAQ,CAACsJ,EAAQo0B,KAClCwqD,GAAYt7E,EAAQ8wB,EAAM,IAM9B9wB,EAAO07E,aAIP3B,GAAgC,OAAzB/5E,EAAOu6E,cAChB,CAEA,SAASe,GAAYt7E,EAAkB8wB,GACrCA,EAAMupD,QAAQ7yE,OAAOxH,GACrBA,EAAOs6E,YAAY9yE,OAAOspB,GAC1BorD,GAAiBl8E,EAAQ8wB,EAC3B,CA7SgBspD,GAAAt0E,MAAQ,ECvCxB,MAAMq2E,GAAe,CACnBpB,UAAU,EACVrmB,SAAS,EACT6mB,QAAQ,GAYJ,SAAUE,GAAUnzD,GAGxB,MAAM8zD,EAAY,IAAI7+D,IAChB5U,EAAY2f,GAAWA,EAAQ3f,UAErC,SAAS0zE,EAAO73E,GACd,MAAMxE,EAASy5E,GAAgBh6D,WAC/B,GAAIzf,EAAQ,CACV,IAAIy7E,EAAMW,EAAUtoF,IAAI0Q,GACnBi3E,GACHW,EAAUroF,IAAIyQ,EAAKi3E,EAAM,IAAIzlF,KAE/BgK,EAAOw7E,SAASC,GACS,oBAAd9yE,IACTgxE,GAAiB8B,GACjBA,EAAI50E,YAAc8B,EAAUnE,IAGlC,CAqBA,OAnBA63E,EAAO//D,MAAQ,SACb9X,EACA83E,GAEA,MAAMb,EAAMW,EAAUtoF,IAAI0Q,GAC1B,GAAIi3E,EAAK,CACP,MAAMjoF,EACJ8oF,GACAzqF,GAAeC,KAAKqqF,GAAcG,GAChCA,EAAkB,WAItB5C,GAAa+B,GAAKroF,SAAQwnF,GAASA,EAAMpnF,OACzC4oF,EAAU50E,OAAOhD,GACjBm1E,GAAiB8B,GAErB,EAEOY,CACT,CChCA,IAAIE,GACE,SAAUC,KACd,MAAMC,EAAOF,KACXA,GAAiB,IAAIrE,GAAwB,oBAAZ/hF,UACjC,QAAA47D,EAAA7/D,UAAAC,OAHmC26D,EAAW,IAAAp7D,MAAAqgE,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAXnF,EAAWmF,GAAA//D,UAAA+/D,GAIhD,OAAOwqB,EAAKpE,YAAYvrB,EAC1B,CA4FA,MAAM4vB,GAAS,IAAI1mF,IAEb,SAAU62D,GAKd8vB,GAOiF,IAPlC,IAC/CzkE,EAAMtM,KAAKiO,IAAI,EAAG,IAAG,QACrB+iE,EAAO,aACPC,EAAgBL,GAAuC,gBACvDX,EAAe,UACflzE,EACAP,MAAO00E,EAAcvnB,IAAWrjE,UAAAC,OAAA,QAAAqzD,IAAAtzD,UAAA,GAAAA,UAAA,GAC8BX,OAAO6C,OAAO,MAC5E,MAAMgU,EACmB,oBAAhB00E,EACH,IAAIA,EAAY5kE,GAAK0iE,GAASA,EAAMlmB,YACpCooB,EAEAC,EAAa,WACjB,MAAMv4E,EAAMq4E,EAAaxqF,MACvB,KACAuqF,EAAUA,EAAQvqF,MAAM,KAAMH,WAAoBA,WAGpD,QAAY,IAARsS,EACF,OAAOm4E,EAAiBtqF,MAAM,KAAMH,WAGtC,IAAI0oF,EAAQxyE,EAAMtU,IAAI0Q,GACjBo2E,IACHxyE,EAAMrU,IAAIyQ,EAAKo2E,EAAQ,IAAIR,GAAMuC,IACjC/B,EAAMiB,gBAAkBA,EACxBjB,EAAMjyE,UAAYA,EAGlBiyE,EAAMW,OAAS,IAAMnzE,EAAMZ,OAAOhD,IAGpC,MAAMvQ,EAAQ2mF,EAAMD,UAClBjpF,MAAME,UAAUY,MAAMV,KAAKI,YAiB7B,OAZAkW,EAAMrU,IAAIyQ,EAAKo2E,GAEf8B,GAAO/1E,IAAIyB,GAKLqxE,GAAgBj6D,aACpBk9D,GAAOtpF,SAAQgV,GAASA,EAAMktD,UAC9BonB,GAAOj1E,SAGFxT,CACT,EAiBA,SAAS+oF,EAASx4E,GAChB,MAAMo2E,EAAQp2E,GAAO4D,EAAMtU,IAAI0Q,GAC3Bo2E,GACFA,EAAMG,UAEV,CAMA,SAASkC,EAAQz4E,GACf,MAAMo2E,EAAQp2E,GAAO4D,EAAMtU,IAAI0Q,GAC/B,GAAIo2E,EACF,OAAOA,EAAMrC,MAEjB,CAMA,SAAS2E,EAAU14E,GACjB,QAAOA,GAAM4D,EAAMZ,OAAOhD,EAC5B,CAWA,OAlDAjT,OAAOsC,eAAekpF,EAAY,OAAQ,CACxCjpF,IAAKA,IAAMsU,EAAMuU,KACjB3oB,cAAc,EACdwS,YAAY,IAGdjV,OAAO8qB,OAAO0gE,EAAWz0D,QAAU,CACjCpQ,MACA0kE,UACAC,eACAhB,kBACAlzE,YACAP,UASF20E,EAAWC,SAAWA,EACtBD,EAAWzgE,MAAQ,WACjB0gE,EAASH,EAAaxqF,MAAM,KAAMH,WACpC,EAQA6qF,EAAWE,QAAUA,EACrBF,EAAWxE,KAAO,WAChB,OAAO0E,EAAQJ,EAAaxqF,MAAM,KAAMH,WAC1C,EAKA6qF,EAAWG,UAAYA,EACvBH,EAAWxB,OAAS,WAClB,OAAO2B,EAAUL,EAAaxqF,MAAM,KAAMH,WAC5C,EAEA6qF,EAAWF,aAAeA,EAC1BE,EAAWI,OAASP,EAAU,WAC5B,OAAOC,EAAaxqF,MAAM,KAAMuqF,EAAQvqF,MAAM,KAAMH,WACtD,EAAI2qF,EAEGtrF,OAAO8qB,OAAO0gE,EACvB,CCrNA,SAASK,GAASl6D,GAChB,OAAOA,CACT,CAEA,IAAAm6D,GAAA,WA4CE,SAAAA,EACErlB,EACA1vC,QAAA,IAAAA,IAAAA,EAAoC/2B,OAAO6C,OAAO,OA1CnC,KAAAkpF,YACfxvB,EAAgB,IAAI5U,QAA0B,IAAIljD,IA2ClD1D,KAAK0lE,UAAYA,EAEb1vC,EAAQi1D,cAEVjrF,KAAKirF,YAAcj1D,EAAQi1D,aAE7BjrF,KAAKkrF,QAA2B,IAAlBl1D,EAAQlgB,MAEtB9V,KAAKmrF,YACP,CA2EF,OAxHUJ,EAAAzrF,UAAA2rF,YAAR,SACEr6D,GAEA,MAAO,CAACA,EACV,EAEOm6D,EAAAD,SAAP,WAIE,OAAO,IAAIC,EAAkBD,GAAU,CAAEh1E,OAAO,GAClD,EAEOi1E,EAAAznF,MAAP,SACE8nF,EACA58C,EACAy3B,GAEA,YAFA,IAAAA,IAAAA,EAA2B8kB,EAAkBD,YAEtC7rF,OAAOS,OACZ,IAAIqrF,GACF,SAACn6D,GAGC,OAF0Bw6D,EAAUx6D,GAAY4d,EAAOy3B,GAE9BolB,kBAAkBz6D,EAC7C,GAEA,CAAE9a,OAAO,IAEX,CAAE04B,KAAIA,EAAEy3B,MAAKA,GAEjB,EAoBA8kB,EAAAzrF,UAAA6rF,WAAA,eAAA3xB,EAAA,KACE,GAAIx5D,KAAKkrF,OAAQ,CACf,IAAMI,EAAkB,IAAI1F,GAActqB,GAC1Ct7D,KAAKurF,YAAchxB,GACjBwwB,EAAkBzrF,UAAUisF,YAAYvpF,KAAKhC,MAC7C,CACEuqF,aAAc,SAAC35D,GACb,IAAM46D,EAAYhyB,EAAKyxB,YAAYr6D,GACnC,GAAI46D,EAKF,OAJA9xB,EACEt6D,MAAMwB,QAAQ4qF,GACd,IAEKF,EAAgBvF,YAAYyF,EAEvC,EACA5lE,IAAK49C,GAAW,2BAChB1tD,MAAOqsD,IAGb,CACF,EAEQ4oB,EAAAzrF,UAAAisF,YAAR,SAAoB36D,GAElB,OADAy4C,GAAcz4C,GACP5wB,KAAK0lE,UAAU90C,EACxB,EAEAm6D,EAAAzrF,UAAA+rF,kBAAA,SAAkBz6D,GAGhB,GAAI5wB,KAAKgrF,YAAYlnF,IAAI8sB,GACvB,OAAOA,EAGT,IAAM66D,EAAsBzrF,KAAKurF,YAAY36D,GAI7C,OAFA5wB,KAAKgrF,YAAY32E,IAAIo3E,GAEdA,CACT,EAEAV,EAAAzrF,UAAAa,OAAA,SAAOurF,GAAP,IAAAlyB,EAAA,KACE,OAAOv6D,OAAOS,OACZ,IAAIqrF,GACF,SAACn6D,GACC,OAAO86D,EAAeL,kBACpB7xB,EAAK6xB,kBAAkBz6D,GAE3B,GAEA,CAAE9a,OAAO,IAEX,CACE04B,KAAMxuC,KACNimE,MAAOylB,GAGb,EAYFX,CAAA,CApIA,GC/BM,SAAUY,GACdp/D,EACAq/D,EACAC,GAEA,OAAO,IAAIhuB,IAAc,SAACW,GACxB,IAAIstB,EAAe,CAIjBrkF,KAAI,SAAC6xC,GACH,OAAO,IAAIv4C,SAAQ,SAACqH,GAAY,OAAAA,EAAQkxC,IAAR,GAClC,GAGF,SAASyyC,EACPC,EACA95E,GAEA,OAAO,SAAC+oD,GACN,GAAI+wB,EAAU,CACZ,IAAMC,EAAO,WAGX,OAAAztB,EAASxxC,OACkB,EACzBg/D,EAAS/wB,EAFX,EAIF6wB,EAAeA,EAAarkF,KAAKwkF,EAAMA,GAAMxkF,MAC3C,SAACgS,GAAW,OAAA+kD,EAAS95D,KAAK+U,EAAd,IACZ,SAACR,GAAU,OAAAulD,EAASvlD,MAAMA,EAAf,GAEf,MACEulD,EAAStsD,GAAK+oD,EAElB,CACF,CAEA,IAAMuP,EAAuB,CAC3B9lE,KAAMqnF,EAAaH,EAAO,QAC1B3yE,MAAO8yE,EAAaF,EAAS,SAC7Bz/D,SAAQ,WAGc0/D,EAAarkF,MAAK,WAAM,OAAA+2D,EAASpyC,UAAT,GAC9C,GAGI8/D,EAAM3/D,EAAWlW,UAAUm0D,GACjC,OAAO,WAAM,OAAA0hB,EAAI33E,aAAJ,CACf,GACF,CCpDM,SAAU43E,GAAyB1yE,GAEvC,OAAO27D,GADQgX,GAA2B3yE,GAE5C,CAEM,SAAU2yE,GAA8B3yE,GAC5C,IAAMm7D,EACJQ,GAAgB37D,EAAOy7D,QAAUz7D,EAAOy7D,OAAOh1E,MAAM,GAAK,GAY5D,OATEg2E,GAAkCz8D,IAClC27D,GAAgB37D,EAAO88D,cAEvB98D,EAAO88D,YAAYz1E,SAAQ,SAACurF,GACtBA,EAAkBnX,QACpBN,EAAchyE,KAAI7C,MAAlB60E,EAAsByX,EAAkBnX,OAE5C,IAEKN,CACT,CCtBM,SAAU0X,GACdC,EACArsB,EACAssB,GAKA,IAAMC,EAAqC,GAC3CF,EAAUzrF,SAAQ,SAAC4rF,GAAQ,OAAAA,EAAIxsB,IAAWusB,EAAoB7pF,KAAK8pF,EAAxC,IAC3BD,EAAoB3rF,SAAQ,SAAC4rF,GAAQ,OAACA,EAAYxsB,GAAQssB,EAArB,GACvC,CCFM,SAAUG,GAEdC,GACA,SAASnrF,EAAIyQ,GAIXjT,OAAOsC,eAAeqrF,EAAU16E,EAAK,CAAEvQ,MAAOk8D,IAChD,CAQA,OAPIpC,GAAgBr3D,OAAOyoF,SACzBprF,EAAI2C,OAAOyoF,SAKbprF,EAAI,aACGmrF,CACT,CCjBA,SAASE,GAAiBnrF,GACxB,OAAOA,GAAwC,oBAAvBA,EAAc8F,IACxC,CAqCA,IC/CYslF,GD+CZC,GAAA,SAAAzzB,GAcE,SAAAyzB,EAAYttB,GACV,IAAAlG,EAAAD,EAAK/5D,KAAC,eAACg/D,GAEL,OADAhF,EAAKyzB,YAAYzuB,GACV,WAAM,OAAAhF,EAAK0zB,eAAe1uB,EAApB,CACf,KAAE,YAdIhF,EAAA+yB,UAAY,IAAI7oF,IAiGR81D,EAAA3uC,QAAU,IAAI9pB,SAAuB,SAACqH,EAAS+C,GAC7DquD,EAAKpxD,QAAUA,EACfoxD,EAAKruD,OAASA,CAChB,IAQQquD,EAAA2zB,SAAW,CACjBzoF,KAAM,SAAC+U,GACY,OAAb+/C,EAAK0yB,MACP1yB,EAAK4zB,OAAS,CAAC,OAAQ3zE,GACvB+/C,EAAK6zB,OAAO,OAAQ5zE,GACpB6yE,GAAuB9yB,EAAK+yB,UAAW,OAAQ9yE,GAEnD,EAEAR,MAAO,SAACA,GACE,IAAAizE,EAAQ1yB,EAAI0yB,IACR,OAARA,IAIEA,GAAKxpF,YAAW,WAAM,OAAAwpF,EAAI33E,aAAJ,IAC1BilD,EAAK0yB,IAAM,KACX1yB,EAAK4zB,OAAS,CAAC,QAASn0E,GACxBugD,EAAKruD,OAAO8N,GACZugD,EAAK6zB,OAAO,QAASp0E,GACrBqzE,GAAuB9yB,EAAK+yB,UAAW,QAAStzE,GAEpD,EAEAmT,SAAU,WACF,IAAAgtC,EAAwBI,EAAtB0yB,EAAG9yB,EAAA8yB,IAAEhoB,EAAA9K,EAAAsG,QACb,GAAY,OAARwsB,EAAc,CAMhB,IAAMvqF,QAPY,IAAAuiE,EAAG,GAAEA,GAODlmD,QACjBrc,EAgBMmrF,GAAcnrF,GACvBA,EAAM8F,MACJ,SAACilF,GAAQ,OAAClzB,EAAK0yB,IAAMQ,EAAIr2E,UAAUmjD,EAAK2zB,SAA/B,GACT3zB,EAAK2zB,SAASl0E,OAGhBugD,EAAK0yB,IAAMvqF,EAAM0U,UAAUmjD,EAAK2zB,WArB5BjB,GAAKxpF,YAAW,WAAM,OAAAwpF,EAAI33E,aAAJ,IAC1BilD,EAAK0yB,IAAM,KACP1yB,EAAK4zB,QAA6B,SAAnB5zB,EAAK4zB,OAAO,GAC7B5zB,EAAKpxD,QAAQoxD,EAAK4zB,OAAO,IAEzB5zB,EAAKpxD,UAEPoxD,EAAK6zB,OAAO,YAOZf,GAAuB9yB,EAAK+yB,UAAW,YAS3C,CACF,GAGM/yB,EAAA8zB,oBAAsB,IAAI5pF,IAgC3B81D,EAAA+zB,OAAS,SAACvgF,GACfwsD,EAAKruD,OAAO6B,GACZwsD,EAAKkG,QAAU,GACflG,EAAK2zB,SAAS/gE,UAChB,EA1LEotC,EAAK3uC,QAAQhf,OAAM,SAACpL,GAAO,IAKJ,oBAAZi/D,IACTA,EAAU,CAAC,IAAI7B,GAAW6B,KAGxBotB,GAAcptB,GAChBA,EAAQj4D,MAAK,SAAC+lF,GAAa,OAAAh0B,EAAKthD,MAAMs1E,EAAX,GAAsBh0B,EAAK2zB,SAASl0E,OAE/DugD,EAAKthD,MAAMwnD,IAEf,CA6KF,OAlNgCvI,EAAA61B,EAAAzzB,GA8CtByzB,EAAA1tF,UAAA4Y,MAAR,SAAcwnD,QACK,IAAb1/D,KAAKksF,MAKTlsF,KAAK0/D,QAAUtgE,MAAMyC,KAAK69D,GAM1B1/D,KAAKmtF,SAAS/gE,WAChB,EAEQ4gE,EAAA1tF,UAAAmuF,mBAAR,SAA2BjvB,GACzB,GAAIx+D,KAAKotF,OAAQ,CACf,IAAMM,EAAc1tF,KAAKotF,OAAO,GAC1BltB,EAAS1B,EAASkvB,GACpBxtB,GACFA,EAAO1gE,KAAKg/D,EAAUx+D,KAAKotF,OAAO,IAKnB,OAAbptF,KAAKksF,KAAgC,SAAhBwB,GAA0BlvB,EAASpyC,UAC1DoyC,EAASpyC,UAEb,CACF,EAEO4gE,EAAA1tF,UAAA2tF,YAAP,SAAmBzuB,GACZx+D,KAAKusF,UAAUzoF,IAAI06D,KAGtBx+D,KAAKytF,mBAAmBjvB,GACxBx+D,KAAKusF,UAAUl4E,IAAImqD,GAEvB,EAEOwuB,EAAA1tF,UAAA4tF,eAAP,SAAsB1uB,GAChBx+D,KAAKusF,UAAUr3E,OAAOspD,IAAax+D,KAAKusF,UAAUliE,KAAO,GAK3DrqB,KAAKmtF,SAAS/gE,UAElB,EAiFQ4gE,EAAA1tF,UAAA+tF,OAAR,SACEntB,EACAjF,GAEQ,IAAAqyB,EAAwBttF,KAAIstF,oBAChCA,EAAoBjjE,OAGtBrqB,KAAKstF,oBAAsB,IAAI5pF,IAC/B4pF,EAAoBxsF,SAAQ,SAACivC,GAAa,OAAAA,EAASmwB,EAAQjF,EAAjB,IAE9C,EAQA+xB,EAAA1tF,UAAAquF,WAAA,SAAWr0C,GACT,IAAIs0C,GAAS,EACb5tF,KAAKstF,oBAAoBj5E,KAAI,SAAC6rD,EAAQjF,GAC/B2yB,IACHA,GAAS,EACTt0C,EAAS4mB,EAAQjF,GAErB,GACF,EAQF+xB,CAAA,CAlNA,CAAgCnvB,ICC1B,SAAUgwB,GACdC,GAEA,QAAOA,GAAgBA,EAAgB,CACzC,CCjDM,SAAUC,SACd,IAAAC,EAAA,GAAAvzB,EAAA,EAAAA,EAAA76D,UAAAC,OAAA46D,IAAAuzB,EAAAvzB,GAAA76D,UAAA66D,GAEA,IAAMhhD,EAASxa,OAAO6C,OAAO,MAY7B,OAVAksF,EAAQltF,SAAQ,SAACk0D,GACVA,GACL/1D,OAAOyB,KAAKs0D,GAAKl0D,SAAQ,SAACoR,GACxB,IAAMvQ,EAASqzD,EAAY9iD,QACb,IAAVvQ,IACF8X,EAAOvH,GAAOvQ,EAElB,GACF,IAEO8X,CACT,CFuPAkzE,GAAsBK,IC1QtB,SAAYD,GAMVA,EAAAA,EAAA,qBAMAA,EAAAA,EAAA,+BAMAA,EAAAA,EAAA,yBAMAA,EAAAA,EAAA,qBAOAA,EAAAA,EAAA,eAKAA,EAAAA,EAAA,iBAKAA,EAAAA,EAAA,gBACD,CA1CD,CAAYA,KAAAA,GAAa,KEHjB,IAAA9oF,GAAahF,OAAOK,UAAS2E,SAK/B,SAAUgqF,GAAatsF,GAC3B,OAAOusF,GAAgBvsF,EACzB,CAEA,SAASusF,GAAmBC,EAAQC,GAClC,OAAQnqF,GAASzE,KAAK2uF,IACpB,IAAK,iBAEH,IADAC,EAAOA,GAAQ,IAAInjE,KACVnnB,IAAIqqF,GAAM,OAAOC,EAAK5sF,IAAI2sF,GACnC,IAAME,EAAmBF,EAAYjuF,MAAM,GAK3C,OAJAkuF,EAAK3sF,IAAI0sF,EAAKE,GACdA,EAAKvtF,SAAQ,SAAU09B,EAAO1+B,GAC5BuuF,EAAKvuF,GAAKouF,GAAgB1vD,EAAO4vD,EACnC,IACOC,EAGT,IAAK,kBAEH,IADAD,EAAOA,GAAQ,IAAInjE,KACVnnB,IAAIqqF,GAAM,OAAOC,EAAK5sF,IAAI2sF,GAGnC,IAAMG,EAAOrvF,OAAO6C,OAAO7C,OAAOgC,eAAektF,IAKjD,OAJAC,EAAK3sF,IAAI0sF,EAAKG,GACdrvF,OAAOyB,KAAKytF,GAAgCrtF,SAAQ,SAACoR,GACnDo8E,EAAKp8E,GAAOg8E,GAAiBC,EAAYj8E,GAAMk8E,EACjD,IACOE,EAGT,QACE,OAAOH,EAEb,CCVM,SAAUI,GACd52E,EACAyhD,EACA8K,EACA6C,GAFE,IAAMynB,EAAKp1B,EAAA9pC,KAAKm/D,EAAKn3B,EAAA8B,EAAvB,UACQs1B,EAAKxqB,EAAA50C,KAAKq/D,EAAKr3B,EAAA4M,EAAvB,UAGA,OACEqgB,GAAMkK,EAAOE,IACbC,GAAoB/kB,GAAkBlyD,GAAOoxD,aAAcylB,EAAOE,EAAO,CACvEntB,YAAaL,GAAkBwI,GAAuB/xD,IACtDovD,UAASA,GAGf,CASA,SAAS6nB,GACP7lB,EACA8lB,EACAC,EACA72C,GAEA,GAAI42C,IAAYC,EACd,OAAO,EAGT,IAAMC,EAAiB,IAAIrrF,IAK3B,OAAOqlE,EAAaC,WAAWr2D,OAAM,SAAC2uD,GAGpC,GAAIytB,EAAejrF,IAAIw9D,GAAY,OAAO,EAI1C,GAHAytB,EAAe16E,IAAIitD,IAGdyQ,GAAczQ,EAAWrpB,EAAQ8uB,WAAY,OAAO,EAIzD,GAAIioB,GAAiC1tB,GAAY,OAAO,EAExD,GAAI2H,GAAQ3H,GAAY,CACtB,IAAM2tB,EAAYrmB,GAAuBtH,GACnC4tB,EAAeL,GAAWA,EAAQI,GAClCE,EAAeL,GAAWA,EAAQG,GAClCG,EAAoB9tB,EAAUyH,aAEpC,IAAKqmB,EAGH,OAAO7K,GAAM2K,EAAcC,GAG7B,IAAME,EAAgBjwF,MAAMwB,QAAQsuF,GAC9BI,EAAgBlwF,MAAMwB,QAAQuuF,GACpC,GAAIE,IAAkBC,EAAe,OAAO,EAC5C,GAAID,GAAiBC,EAAe,CAClC,IAAMC,EAASL,EAAarvF,OAC5B,GAAIsvF,EAAatvF,SAAW0vF,EAC1B,OAAO,EAET,IAAK,IAAIzvF,EAAI,EAAGA,EAAIyvF,IAAUzvF,EAC5B,IACG8uF,GACCQ,EACAF,EAAapvF,GACbqvF,EAAarvF,GACbm4C,GAGF,OAAO,EAGX,OAAO,CACT,CAEA,OAAO22C,GACLQ,EACAF,EACAC,EACAl3C,EAEJ,CACE,IAAMmpB,EAAWC,GAAyBC,EAAWrpB,EAAQspB,aAC7D,OAAIH,IAGE4tB,GAAiC5tB,IAE9BwtB,GACLxtB,EAAS2H,aAKT8lB,EACAC,EACA72C,QAbJ,CAiBJ,GACF,CAEA,SAAS+2C,GACP1tB,GAMA,QACIA,EAAU4G,YAAc5G,EAAU4G,WAAW78D,KAAKmkF,GAExD,CAEA,SAASA,GAAuB/3E,GAC9B,MAA0B,gBAAnBA,EAAIlS,KAAK5D,KAClB,CCpHQ,IAAAjC,GAA2BT,OAAMS,OAAzBH,GAAmBN,OAAMM,eAyBzCkwF,GAAA,SAAAl2B,GA8CE,SAAAk2B,EAAYr2B,OACVmL,EAAYnL,EAAAmL,aACZmrB,EAASt2B,EAAAs2B,UACT15D,EAAOojC,EAAApjC,QAMPwjC,EAAAD,EAAK/5D,KAAC,eAACg/D,GAGL,IACE,IAAImxB,EAAenxB,EAAiBO,cAAcV,UAC9CsxB,IAAgBA,EAAY12E,QAC9B02E,EAAY12E,MAAQ22E,GAExB,CAAE,MAAAx2B,GAAO,CAET,IAAMpnD,GAASwnD,EAAK+yB,UAAUliE,KAC9BmvC,EAAK+yB,UAAUl4E,IAAImqD,GAGnB,IAAM5kD,EAAO4/C,EAAK5/C,KAiBlB,OAhBIA,GAAQA,EAAKX,MACfulD,EAASvlD,OAASulD,EAASvlD,MAAMW,EAAKX,OAC7BW,GAAQA,EAAKH,QACtB+kD,EAAS95D,MAAQ85D,EAAS95D,KAAKkV,EAAKH,QAKlCzH,GAKFwnD,EAAKq2B,YAAYhkF,OAAM,WAAO,IAGzB,WACD2tD,EAAK+yB,UAAUr3E,OAAOspD,KAAchF,EAAK+yB,UAAUliE,MACrDmvC,EAAKs2B,eAET,CACF,KAAE,KAhEIt2B,EAAA+yB,UAAY,IAAI7oF,IAChB81D,EAAAuG,cAAgB,IAAIr8D,IAkE1B81D,EAAKk2B,UAAYA,EACjBl2B,EAAK+K,aAAeA,EAGpB/K,EAAKu2B,iBAAmBC,GAAiBh6D,EAAQi6D,aACjDz2B,EAAK02B,YAAa,EAGhB,IAAAhsB,EACEK,EAAa4rB,eAAcC,WADfxrB,QAAd,IAAAV,EAAkE,CAAC,EAACA,GAAtD+rB,YAAaI,OAAkB,IAAAzrB,EAAG,cAAaA,EAI7D76D,EAKEisB,EAAOi6D,YALTA,OAAW,IAAAlmF,EAAGsmF,EAAkBtmF,EAEhCumF,EAGEt6D,EAAOu6D,mBAHTA,OAAkB,IAAAD,EAAmB,YAAhBL,EAA4BI,EAC/CJ,EACDK,EAGH92B,EAAKxjC,QAAOqhC,EAAAA,EAAA,GACPrhC,GAAO,CAKVu6D,mBAAkBA,EAIlBN,YAAWA,IAGbz2B,EAAKg3B,QAAUd,EAAUc,SAAWjsB,EAAaksB,kBAEjD,IAAMC,EAAQlnB,GAAuBhQ,EAAK7hD,cAC1C6hD,EAAKm3B,UAAYD,GAASA,EAAMnrF,MAAQmrF,EAAMnrF,KAAK5D,OACrD,CAy2BF,OAx+BUw1D,EAAAs4B,EAAAl2B,GASRt6D,OAAAsC,eAAWkuF,EAAAnwF,UAAA,QAAK,KAAhB,WACE,OAAOU,KAAK4wF,WAAa5wF,KAAKg2B,QAAQre,KACxC,kCAOA1Y,OAAAsC,eAAWkuF,EAAAnwF,UAAA,YAAS,KAApB,WACE,OAAOU,KAAKg2B,QAAQ+wC,SACtB,kCA6GO0oB,EAAAnwF,UAAAma,OAAP,eAAA+/C,EAAA,KACE,OAAO,IAAIz4D,SAAQ,SAACqH,EAAS+C,GAI3B,IAAMqzD,EAA+C,CACnD95D,KAAM,SAAC+U,GACLrR,EAAQqR,GAYR+/C,EAAK+yB,UAAUr3E,OAAOspD,GACjBhF,EAAK+yB,UAAUliE,MAClBmvC,EAAK+K,aAAassB,YAAYr3B,EAAKg3B,SAGrC9tF,YAAW,WACTu7D,EAAa1pD,aACf,GAAG,EACL,EACA0E,MAAO9N,GAEH8yD,EAAezE,EAAKnjD,UAAUmoD,EACtC,GACF,EAGOixB,EAAAnwF,UAAAwxF,UAAP,WACE9wF,KAAK0vF,UAAUoB,WACjB,EAEOrB,EAAAnwF,UAAAyxF,iBAAP,SAAwBC,QAAA,IAAAA,IAAAA,GAAA,GAEtB,IAAMn8E,EAAa7U,KAAKixF,eAAc,GAEhCnD,EACJ9tF,KAAK0vF,UAAU5B,eACdj5E,GAAcA,EAAWi5E,eAC1Bf,GAAc/kE,MAEVvO,EAAS49C,EAAAA,EAAA,GACVxiD,GAAU,CACbq8E,QAASrD,GAAyBC,GAClCA,cAAaA,IAGP10B,EAAgCp5D,KAAKg2B,QAAOi6D,YAA5CA,OAAW,IAAA72B,EAAG,cAAaA,EACnC,GAGE42B,GAAiBC,IAKjBjwF,KAAKukE,aAAaC,gBAAgBxkE,KAAK2X,OAAOw5E,yBAGzC,GAAInxF,KAAK+vF,iBAId/vF,KAAK0vF,UAAuB,kBACvB,CACL,IAAM0B,EAAOpxF,KAAK0vF,UAAU2B,WAExBD,EAAKhlE,UAAYpsB,KAAKg2B,QAAQs7D,qBAChC73E,EAAO6V,KAAO8hE,EAAK33E,QAGjB8qE,GAAM9qE,EAAO6V,KAAM,CAAC,KACtB7V,EAAO6V,UAAO,GAGZ8hE,EAAKhlE,iBAGA3S,EAAO83E,SAMZH,EAAKhlE,UACL3S,EAAOq0E,gBAAkBf,GAAcmE,SACtB,gBAAhBjB,GAAiD,eAAhBA,IAElCx2E,EAAOq0E,cAAgBf,GAAc/kE,MACrCvO,EAAOy3E,SAAU,IAGnBz3E,EAAO83E,SAAU,GAIV,IAAPlxF,WAAO86D,SACNi2B,EAAKhlE,UACLpsB,KAAKg2B,QAAQw7D,gBACb/3E,EAAOy3E,SACPz3E,EAAO6V,MACP7V,EAAOR,OAERw4E,GAAsBL,EAAKM,QAE/B,CAMA,OAJIV,GACFhxF,KAAK2xF,iBAAiBl4E,GAGjBA,CACT,EAIOg2E,EAAAnwF,UAAAsyF,0BAAP,SACEC,EACA9qB,GAEA,OAAK/mE,KAAK4Z,QAKR5Z,KAAKukE,aAAaC,gBAAgBxkE,KAAK2X,OAAOm6E,yBAC3CvD,GAAavuF,KAAK2X,MAAO3X,KAAK4Z,KAAKH,OAAQo4E,EAAW7xF,KAAK+mE,YAC3Dwd,GAAMvkF,KAAK4Z,KAAKH,OAAQo4E,KAGL9qB,IAAcwd,GAAMvkF,KAAK4Z,KAAKmtD,UAAWA,GAEnE,EAEQ0oB,EAAAnwF,UAAAyyF,QAAR,SACE7/E,EACA8/E,GAEA,IAAMp4E,EAAO5Z,KAAK4Z,KAClB,GACEA,GACAA,EAAK1H,MACH8/E,GAAsBzN,GAAM3qE,EAAKmtD,UAAW/mE,KAAK+mE,YAEnD,OAAOntD,EAAK1H,EAEhB,EAEOu9E,EAAAnwF,UAAA2xF,cAAP,SACEe,GAEA,OAAOhyF,KAAK+xF,QAAQ,SAAUC,EAChC,EAEOvC,EAAAnwF,UAAA2yF,aAAP,SAAoBD,GAClB,OAAOhyF,KAAK+xF,QAAQ,QAASC,EAC/B,EAEOvC,EAAAnwF,UAAA4yF,iBAAP,kBACSlyF,KAAK4Z,KACZ5Z,KAAKkwF,YAAa,CACpB,EAEOT,EAAAnwF,UAAA6yF,sBAAP,WACEnyF,KAAKukE,aAAa6tB,YAAYpyF,KAAKwwF,QACrC,EASOf,EAAAnwF,UAAA+yF,QAAP,SACEtrB,SAEMurB,EAAkE,CAEtEC,aAAc,GAMRtC,EAAgBjwF,KAAKg2B,QAAOi6D,YASpC,GAPEqC,EAAiBrC,YADC,sBAAhBA,EAC6BA,EACN,aAAhBA,EACsB,WAEA,gBAGT,IAApB5vF,WAAW86D,SAAa4L,GAAoBxnE,GAAWC,KAAAunE,EAAe,cACxE,IAAM6C,EAAWD,GAAmB3pE,KAAK2X,OACnC66E,EAAO5oB,EAASO,oBACjBqoB,GAASA,EAAKnnF,MAAK,SAAC7I,GAAM,MAA0B,cAA1BA,EAAE4nE,SAAS7kE,KAAK5D,KAAhB,MAE3B,IADFtB,WAAU86D,SACRzB,EAAAtoD,KAKH,GACF21D,GAEoC,QAAxB3N,EAAKwQ,EAAUrkE,YAAoB,IAAF6zD,OAAe,EAAAA,EAAAz3D,QAAAioE,EAM7D,CAQC,OANG7C,IAAWwd,GAAA,KAAcvuD,QAAG+wC,UAAAA,KAEjCurB,EAAAvrB,UAAA,KAAA/wC,QAAA+wC,UAAA1P,EAAAA,EAAA,QAAArhC,QAAA+wC,WAAAA,oCAIE,KAAA8oB,UAAAyC,EAAAvF,GAAAsF,QACI,IA2BH/yF,UAAAmzF,UAAA,SAAAC,OACAl5B,EAAA,KACAm5B,EAAAt7B,EAAAA,EAAA,GAAAq7B,EAAA/6E,MAAA+6E,EAAmEr7B,EAAAA,EAAAA,EAAAA,EAAA,QAAArhC,SAAA,CAAAre,MAAA,KAAAqe,QAAAre,QAAA+6E,GAAA,CAAA3rB,UAAA1P,EAAAA,EAAA,QAAArhC,QAAA+wC,WAAA2rB,EAAA3rB,cAAA,CAUrEkpB,YAAA,aACA0C,EAAAh7E,MAAA,KAAA0zE,kBAAAsH,EAAAh7E,OACA,IAAAi7E,EAAA,KAAAruB,aAAAksB,kBAOA,KAAAG,UACA8B,EAAA/6E,MACQ,KAAS0zE,kBAAU,KAAAr1D,QAAAre,OACrBg7E,EAAqBh7E,UAGzB+3E,EAAY,KAAGA,UAChBmD,EAAAnD,EAAA5B,cAED4B,EAAM5B,cAAsBf,GAAoB0F,UAEhDE,EAAYG,kCACTC,cAECC,EAAiB,IAACtvF,WAElB,KAAI6gE,aAAU,WACZquB,EAAUD,EAAgB5F,GAAA0F,WAC3BhrF,MAAA,SAAAwrF,GAiDD,OA/CAz5B,EAAA+K,aAAAssB,YAAA+B,GACAlD,EAAA5B,gBAAAf,GAAA0F,YACA/C,EAAA5B,cAAA+E,kBAOY/8E,MAAAo9E,MACJ,iBACOp9E,SACI48E,EAAgBS,gBAEzBA,YAAY,CAEdx7E,MAAA6hD,EAAC7hD,MACCovD,UAAAvN,EAAAuN,6BACiB,cACf,aACAyB,GACJ,OAAA2qB,EAAA3qB,EAAA,CACHyqB,gBAAAA,EAAA3jE,KAAOy3C,UAAA4rB,EAAA5rB,WAEN,MAQGqsB,WAAA,CACJz7E,MAAAg7E,EAAAh7E,MACFovD,UAAA4rB,EAAA5rB,UAEDz3C,KAAgB2jE,EAAM3jE,QAItB+jE,eAAC,SAAAC,GAIHN,EAAA3+E,IAAAi/E,EAAA37E,MACD,IAECs7E,KAEAnnF,SAAA,WAMLknF,EAAAlvF,IAAA01D,EAAA7hD,QAED47E,GAAA/5B,EAEA,GACA,IAiBal6D,UAAQk0F,gBAAQ,SAAAx9D,OACvBwjC,EAAA,KACAyE,EAAS,KAAQsG,aACjBkvB,yBAAA,OACDz9D,EAAUpF,SACTm2C,UAAM/wC,EAAC+wC,kBACG/wC,EAAAiiB,oBAEN,eACey7C,SACX19D,EAAWm9D,8BAEA,SAAA3qB,EAAApP,OACT2N,EAAA3N,EAAA2N,UACJ,OAAAosB,EAAA3qB,EAAA,CACHkrB,iBAAAA,EACF3sB,UAAAA,GAEK,WAGH,SAAA/V,GACDh7B,EAAUwH,QACXxH,EAAAwH,QAAAwzB,IAKE,IAAA3wD,WAAA86D,SAAAzB,EAAAzgD,MAAC,GAAD+3C,EACL,IAGF,YADG+O,cAAA1rD,IAAA4pD,GACD,WACHzE,EAAAuG,cAAA7qD,OAAA+oD,IAEMA,EAAA1pD,aAIN,CAEM,IAGCjV,UAAgBq0F,WAAa,SAASC,GAC5C,OAAO5zF,KAAK6vF,UAAS+D,EACvB,EAEAnE,EAAAnwF,UAAAu0F,iBAAA,SAAAD,sDAwBIt0F,UAAAw0F,aAAA,SAAA/sB,UACAwd,GAAA,KAAWxd,UAAWA,GAMd,KAAAwlB,UAAgBliE,KAAC,KAAA5Q,SAAA1Y,QAAAqH,WAE3B,KAAC4tB,QAAA+wC,UAAAA,EAIG,KAAAwlB,UAAAliE,KAIF,KAAAwlE,UAAc,CAIlBI,YAAA,KAAAj6D,QAAAu6D,iDAPMxvF,QAAaqH,cAqBf9I,UAAgB6zF,YAAS,SAAAvH,OACzBrnB,EAAA,KAAmBA,aASnBstB,EAAYjG,EARZrnB,EAAiBzuD,MAAAs7E,KAAA,CACjBz5E,MAAC,KAAAqe,QAAAre,MAEGovD,UAAS,KAAGA,UAChBuqB,mBAAyB,EACxB7G,YAAA,IAEHhxE,OACqB,WACVzZ,KAAK+mE,kBAGXjxD,MAAAs9E,WAAA,CAEHz7E,MAAA,KAAaqe,QAAAre,MACd2X,KAAAuiE,EACF9qB,UAAA,KAAAA,iCAKM,EAKP0oB,EAAAnwF,UAAAy0F,aAAA,SAAAxB,+BAEG,KAAAyB,eACI,EAKPvE,EAAAnwF,UAAA20F,YAAA,WACQ,KAAAj+D,QAAAu8D,aAAA,EAEN,KAAAyB,eACA,EAEAvE,EAAAnwF,UAAA40F,qBAAA,SAAAlnF,QASEgpB,EAACm+D,gBAAA,OAAUn+D,EAAOi6D,YAAQA,OAAoB,IAAA72B,EAAa,cAAAA,EAAA8K,EAAAluC,EAAAu6D,mBAAAA,OAAA,IAAArsB,EAAA+rB,EAAA/rB,EACzD,YAAA+rB,IAGA,oBAAAj6D,EAAAm+D,kBAWElE,YAAkBj6D,EAAAm+D,gBAAAlE,EAAA,CACjBjjF,OAAAA,EACJgpB,QAAAA,EAAMzJ,WAAe,KACpBgkE,mBAAsBA,IAGvBv6D,EAAAi6D,YADS,sBAARjjF,EACDujF,EAIJv6D,EAAAm+D,gBAOC,CACA,OAAAn+D,EAAAi6D,eAEY3wF,UAAAuhF,MAAa,SAAA7qD,EACvBo+D,EACAz8E,GAOJ,OAAQ,KAAA4sD,aAAA8vB,mBAAc,MAAtB,KAAA9vB,aAiEC,0BAAAisB,QAAAx6D,EAAAo+D,EAAAz8E,MA9DUrY,UAAA00F,cAAA,WACT,IAACx6B,EAAA,KAOD,IAAI,KAAC+K,aAAiB+vB,QAAtB,KAGWC,EAAP,KAAwBA,YAAAhC,EAAxB,KAAwBv8D,QAAAu8D,gBACzBA,GAAA,KAAAiC,gBAaH,IAAMD,GAAOA,EAAoBE,WAAYlC,EAA7C,UAIMgC,IAAkB,KAACA,YAAA,cAElBhC,QACA,iBAEDruB,qBAGI1K,EAAAk2B,UAAA5B,iBACA,QADA,GACA10B,EAAAI,EAAAxjC,SAAA0+D,uBAAA,IAAAxwB,OAAA,EAAAA,EAAiF1kE,KAAA45D,IAe9Eu7B,MAdH9E,UAAA,CAQLI,YAAA,aAAAz2B,EAAAxjC,QAAAu6D,mBAAO,WACC,gBACRxD,GAAA4H,MAAAltF,KAAAktF,EAAAA,OAQD,WACF,IAAC1P,EAAAzrB,EAAA+6B,YACDtP,IAEKh5E,aAAAg5E,EAAAl5E,SACRk5E,EAAAl5E,QAAArJ,WAAAkyF,EAAA3P,EAAAwP,UAIC,EAEAE,GAxCA,OAfEJ,IACDtoF,aAAAsoF,EAAAxoF,gBAEc,KAAIwoF,iBAsDVj1F,UAAaqyF,iBAAW,SAAgBE,EAAK9qB,QACtC,IAAdA,IAAeA,EAAA,KAAAA,WACjB,IAAC9tD,EAAA,KAAAg5E,eAWI,UAPC,KAASr4E,OAAA2qE,GAAAxd,EAAA,KAAAntD,KAAAmtD,oBACT,GAMD,KAAAntD,KAAAy9C,EAAA,CAAA59C,OAAA,KAAP8qD,aACEswB,uBADFhD,EAIO5D,GAAa4D,GAAM9qB,UAAAA,GAAA9tD,EAAA,CAAAA,MAAAA,GAAA,SAGtB3Z,UAAAw1F,mBAAA,SAAAlB,EAAAQ,GACA,IAAA56B,EAAA,KACA,KAAA02B,YAAA,EACA,IAAA6E,MAIAhI,GAAAsF,SAIF+B,IAAArH,GAAA0F,WAIM2B,IAAgBrH,GAAa4H,KAG/BK,EAAA,KAAAh/D,QAAA+wC,UACAkuB,EAAA,KAAAj/D,QAAAi6D,YACAiF,EAAanH,GAAA,KAAA/3D,QAAA49D,GAAA,IACf59D,EAAS++D,EAIXG,EACAx1F,GAAA,KAAAs2B,QAAAk/D,GAOEv9E,EAAK,KAAA0zE,kBAAgBr1D,EAAAre,YAErBi5E,UAAAj5E,EACAo9E,SAGEf,gBAGAJ,GACAA,EAAA7sB,YACAwd,GAAAqP,EAAA7sB,UAAAiuB,IAGK,YAALh/D,EAAKi6D,aAGLj6D,EAACi6D,cAAAgF,IACF,KAAAf,qBAAA,oBAAAl+D,QACF,IAAAo+D,IAEIA,EAAArH,GAAA+G,qBAIF/D,mBAAA,KAAAA,iBAAAC,GAAAh6D,EAAAi6D,cACH,IAAEkF,EAAA,WAEI37B,EAAS47B,UAAWA,IACpB57B,EAA6Bu2B,kBAAe,MAG1C/5D,EAAW+wC,WAAW1P,EAAU,CAAE,EAACrhC,EAAA+wC,kBACrC8Z,MAAA7qD,EAAAo+D,EAA4Bz8E,GAAAy9E,EAAAh8B,EAAAg8B,QAAAC,EAAAj8B,EAAAi8B,WAC5B,MACD,SAAA57E,GACF8qE,GAAA/qB,EAAAuN,UAAAA,KACMouB,IACD37B,EAAM87B,aAAK77E,EAAWstD,WAGzB,SAAA9tD,GACFsrE,GAAA/qB,EAAAuN,UAAAA,KACDouB,IAEG37B,EAAAlM,YAAyBr0C,EAAA8tD,GAE5B,cAEesuB,GAAoB,KAAAD,UAI/B,KAACA,SAAW,KAAS52B,UAC1B,KAAA42B,QAAAlI,eAAA,KAAA1uB,UAID,KAAO42B,QAAQA,EAChB,KAAA52B,SAAAA,GAMC42B,EAAOnI,YAAKzuB,GACT42B,CACL,EAYO3F,EAAAnwF,UAAAuwF,UAAA,SAAqB+D,EAA5BQ,GAA6B,YAAAU,mBAA0BlB,EAAAQ,GAA1BvpE,sDAE3B,IADA,IAAA2vC,EAAA,GACAC,EAAA,EAAAA,EAAA76D,UAAAC,OAAA46D,IACAD,EAAAC,GAAA76D,UAAA66D,GAUA,IAAA7gD,EAAO,KAAAA,KACR,KAAAs4E,mBAED,IAAAj0B,EAAA,KAAA5nD,UAAAtW,MAAA,KAAAy6D,GAEQ,OADR,KAAA5gD,KAAAA,EACQqkD,KAIJ3+D,UAAAyzF,QAAA,WACA,KAAAuC,aAWF,KAAMvE,kBAAkB,GAAC,KAAAhqB,cAEzBznE,UAAAg2F,aAAA,SAAA77E,EAAAstD,GACA,IAAAwuB,EAAA,KAAAtD,eACAuD,EAAA,KAAA5D,0BAAAn4E,EAAAstD,IAKEwuB,IAAA97E,EAAA83E,SAA4B,KAASv7D,QAAQs7D,oBAC9C,KAAAK,iBAAAl4E,EAAAstD,IAGKwuB,GAAAC,IACNlJ,GAAA,KAAAC,UAAA,OAAA9yE,MAUKna,UAAiBguD,YAAa,SAAWr0C,EAAA8tD,GAKzC,IAAA0uB,EAAAp+B,EAAAA,EAAa,CAApB,OAAA45B,iBAAA,CAAAh4E,MAAAA,EAAAi8D,OAAAj8D,EAAA27D,cAAAkZ,cAAAf,GAAA9zE,MAAAi4E,SAAA,IACE,KAAAS,iBAAsB8D,EAAS1uB,GAChCulB,GAAA,KAAAC,UAAA,aAAA3yE,KAAAX,MAAAA,EAEO,IACG3Z,UAAUk1F,aAAA,kBAAE,KAAOjI,UAAAliE,KAAA,KAErB/qB,UAAQwwF,cAAoB,WACjC,KAAAI,aAED,KAAAkF,SAAA,KAAA52B,WAEG,KAAC42B,QAAWlI,eAAG,KAAA1uB,iBACnB,KAAA42B,eACK,KAAA52B,UAELx+D,KAAKi0F,cAELj0F,KAAK+/D,cAAaj/D,SAAK,SAAAorF,GAAA,OAAAA,EAAA33E,aAAA,IACxB,KAAAwrD,cAAA5qD,QAEO,KAAAovD,aAAAmxB,UAAA,KAAAlF,SACN,KAAAjE,UAAYp3E,QACb,KAAA+6E,YAAA,EACH,EAr+BUT,EAq+BTnwF,UAAA+rF,kBAAA,SAAAz6D,wCAED,EACA6+D,CACA,CA5+BA,CA4+BA5xB,aAgBM01B,GAAaoC,SACbA,EAAA3/D,QAAAi6D,EAAA72B,EAAA62B,YAAAkE,EAAA/6B,EAAA+6B,sBACA,0CAAAlE,EACA0F,EAAA9F,UAAgB,aAKd,8BAGA,SAAA+F,EAAA39C,GAMA,YAHEk8C,gBAAYA,EAGM,oBAAb,KAAAA,gBACR,KAAAA,gBAAAyB,EAAA39C,GAIWg4C,CACjB,IAIA0F,EAAA9F,WAED,UAGMD,GAAqB32E,IACP,eAAhBkiD,SAAgBzB,EAAAzgD,MAAA,GAAAA,EAAmCzT,QAASyT,EAAAsI,OAE/D,SAAAkwE,GAAAC,IAGC,IADFrxF,WAAS86D,SAC6Bu2B,IAGlB,IADlBrxF,WACE86D,SAAgBzB,EAAc91C,MAAA,GAAA8tE,GAIlC,SAAC1B,GAAAC,2DC3lCM,SAAS4F,GAAgB9oD,GAC9B,OACEA,EAAKi0B,OAASoP,GAAK2N,OACnBhxC,EAAKi0B,OAASoP,GAAK8N,iBACnBnxC,EAAKi0B,OAASoP,GAAK0lB,eAEvB,CD6hCAnJ,GAAA8C,IEjiCO,IAAMsG,GAAY,IAAIjP,GAEvBkP,GAAe,IAAInyF,QAQzB,SAASoyF,GAAangF,GACpB,IAAImvE,EAAO+Q,GAAax0F,IAAIsU,GAU5B,OATKmvE,GACH+Q,GAAav0F,IACXqU,EACCmvE,EAAO,CACNuN,KAAM,IAAI9uF,IACVylF,IAAKA,OAIJlE,CACT,CAEM,SAAUiR,GAAYpgF,GAC1BmgF,GAAangF,GAAO08E,KAAK1xF,SAAQ,SAACq1F,GAAO,OAAAA,EAAGD,YAAYpgF,EAAf,GAC3C,CAcM,SAAUsgF,GAAWz0F,GACzB,IAAMyoF,EAAS,IAAI1mF,IACbipC,EAAY,IAAIjpC,IAEhByyF,EAAqB,SAAUE,GACnC,GAAIz2F,UAAUC,OAAS,GACrB,GAAI8B,IAAU00F,EAAU,CACtB10F,EAAQ00F,EACRjM,EAAOtpF,SAAQ,SAACgV,GAIdmgF,GAAangF,GAAOqzE,IAAIn/D,MAAMmsE,GAgDxC,SAAmBrgF,GACbA,EAAMwgF,kBACRxgF,EAAMwgF,kBAEV,CAjDUC,CAAUzgF,EACZ,IAEA,IAAM0gF,EAAep3F,MAAMyC,KAAK8qC,GAChCA,EAAUx3B,QACVqhF,EAAa11F,SAAQ,SAACivC,GAAa,OAAAA,EAASpuC,EAAT,GACrC,MACK,CAIL,IAAMmU,EAAQigF,GAAU5oE,WACpBrX,IACF2gF,EAAO3gF,GACPmgF,GAAangF,GAAOqzE,IAAIgN,GAE5B,CAEA,OAAOx0F,CACT,EAEAw0F,EAAGO,aAAe,SAAC3mD,GAEjB,OADApD,EAAUt4B,IAAI07B,GACP,WACLpD,EAAUz3B,OAAO66B,EACnB,CACF,EAEA,IAAM0mD,EAAUN,EAAGQ,YAAc,SAAC7gF,GAGhC,OAFAs0E,EAAO/1E,IAAIyB,GACXmgF,GAAangF,GAAO08E,KAAKn+E,IAAI8hF,GACtBA,CACT,EAIA,OAFAA,EAAGD,YAAc,SAACpgF,GAAU,OAAAs0E,EAAOl1E,OAAOY,EAAd,EAErBqgF,CACT,CCjCA,IAAAS,GAAA,WAUE,SAAAA,EAAYx9B,OACVtjD,EAAKsjD,EAAAtjD,MACLomD,EAAM9C,EAAA8C,OACN26B,EAASz9B,EAAAy9B,UACTC,EAAe19B,EAAA09B,gBATT,KAAAC,yBAA2B,IAAIlzF,QAWrC7D,KAAK8V,MAAQA,EAETomD,IACFl8D,KAAKk8D,OAASA,GAGZ26B,GACF72F,KAAKg3F,aAAaH,GAGhBC,GACF92F,KAAKi3F,mBAAmBH,EAE5B,CA2cF,OAzcSF,EAAAt3F,UAAA03F,aAAP,SAAoBH,GAApB,IAAAr9B,EAAA,KACEx5D,KAAK62F,UAAY72F,KAAK62F,WAAa,CAAC,EAChCz3F,MAAMwB,QAAQi2F,GAChBA,EAAU/1F,SAAQ,SAACo2F,GACjB19B,EAAKq9B,UAAYxhB,GAAU7b,EAAKq9B,UAAWK,EAC7C,IAEAl3F,KAAK62F,UAAYxhB,GAAUr1E,KAAK62F,UAAWA,EAE/C,EAEOD,EAAAt3F,UAAA63F,aAAP,SAAoBN,GAClB72F,KAAK62F,UAAY,CAAC,EAClB72F,KAAKg3F,aAAaH,EACpB,EAEOD,EAAAt3F,UAAA83F,aAAP,WACE,OAAOp3F,KAAK62F,WAAa,CAAC,CAC5B,EAMaD,EAAAt3F,UAAA+3F,aAAb,SAAAj+B,4CAAiC8K,OAC/BtzC,EAAQszC,EAAAtzC,SACR0mE,EAAYpzB,EAAAozB,aACZr/C,EAAOisB,EAAAjsB,QACP8uB,EAAS7C,EAAA6C,UACT3C,EAAAF,EAAAqzB,uBAAAA,OAAsB,IAAAnzB,GAAQA,6BAQ9B,OAAIxzC,EACK,CAAP,EAAO5wB,KAAKw3F,gBACV5mE,EACA0mE,EAAahoE,KACb2oB,EACA8uB,EACA/mE,KAAK82F,gBACLS,GACA9vF,MAAK,SAACgwF,GAAgB,OAAApgC,EAAAA,EAAC,CAAC,EACrBigC,GAAY,CACfhoE,KAAMmoE,EAAYh+E,QAFI,KAMnB,CAAP,EAAO69E,UAGFV,EAAAt3F,UAAA23F,mBAAP,SAA0BH,GACxB92F,KAAK82F,gBAAkBA,CACzB,EAEOF,EAAAt3F,UAAAo4F,mBAAP,WACE,OAAO13F,KAAK82F,eACd,EAIOF,EAAAt3F,UAAAq4F,YAAP,SAAmB/mE,GACjB,OAAI4hD,GAAc,CAAC,UAAW5hD,IACxB5wB,KAAK62F,UACAjmE,EAGJ,IACT,EAGOgmE,EAAAt3F,UAAAs4F,YAAP,SAAmBhnE,GACjB,OAAO+vD,GAA6B/vD,EACtC,EAEOgmE,EAAAt3F,UAAAu4F,eAAP,SAAsB5/C,GACZ,IAAAniC,EAAU9V,KAAI8V,MACtB,OAAAuhD,EAAAA,EAAA,GACKpf,GAAO,CACVniC,MAAKA,EAELm1E,YAAW,SAACj2B,GACV,OAAOl/C,EAAMgiF,SAAS9iC,EACxB,GAEJ,EAKa4hC,EAAAt3F,UAAAy4F,qBAAb,SAAAC,4CACEpnE,EACAm2C,EACA9uB,eADA,IAAA8uB,IAAAA,EAAmB,CAAC,QACpB,IAAA9uB,IAAAA,EAAA,wBAEA,OAAIrnB,EACK,CAAP,EAAO5wB,KAAKw3F,gBACV5mE,EACA5wB,KAAKi4F,wBAAwBrnE,EAAUm2C,IAAc,CAAC,EACtD/mE,KAAK63F,eAAe5/C,GACpB8uB,GACAt/D,MAAK,SAAC6nB,GAAS,OAAA+nC,EAAAA,EAAC,CAAC,EACd0P,GACAz3C,EAAK4oE,kBAFO,KAMZ,CAAP,EAAA7gC,EAAA,GACK0P,WAIA6vB,EAAAt3F,UAAA64F,qBAAP,SAA4BvnE,GAC1B,IAAIwnE,GAAiB,EAkBrB,OAjBA9nB,GAAM1/C,EAAU,CACd49C,UAAW,CACToD,MAAK,SAAC7kC,GACJ,GAAwB,WAApBA,EAAKxnC,KAAK5D,OAAsBorC,EAAKntC,YACvCw4F,EAAiBrrD,EAAKntC,UAAUyL,MAC9B,SAAC4vD,GACC,MAAmB,WAAnBA,EAAI11D,KAAK5D,OACU,iBAAnBs5D,EAAIt5D,MAAMq/D,OACU,IAApB/F,EAAIt5D,MAAMA,KAFV,KAKF,OAAO0uE,EAGb,KAGG+nB,CACT,EAGQxB,EAAAt3F,UAAA24F,wBAAR,SACErnE,EACAm2C,GAEA,OAAO/mE,KAAK8V,MAAMs7E,KAAK,CACrBz5E,MAAO+oE,GAA2B9vD,GAClCm2C,UAASA,EACTuqB,mBAAmB,EACnB7G,YAAY,IACXhxE,MACL,EAEcm9E,EAAAt3F,UAAAk4F,gBAAd,SAAAQ,EAAAK,4CACEznE,EACA0nE,EACArgD,EACA8uB,EACA+vB,EACAS,uCAHA,IAAAt/C,IAAAA,EAAA,SACA,IAAA8uB,IAAAA,EAAA,SACA,IAAA+vB,IAAAA,EAAA,WAAyC,gBACzC,IAAAS,IAAAA,GAAA,uBAqCA,OAnCMgB,EAAiB1uB,GACrBj5C,GAEIkwC,EAAY4I,GAAuB94C,GACnC2wC,EAAcL,GAAkBJ,GAChC03B,EAAsBx4F,KAAKy4F,2BAC/BF,EACAh3B,GAGIm3B,EAAsBH,EAAet3B,UAErC03B,EACJD,EACEA,EAAoB99D,OAAO,GAAGrf,cAC9Bm9E,EAAoBx4F,MAAM,GAC1B,QAEI4V,GAAFsjD,EAAoBp5D,MAAb8V,MAAEomD,EAAM9C,EAAA8C,OACf08B,EAA2B,CAC/Br3B,YAAWA,EACXtpB,QAAOof,EAAAA,EAAA,GACFpf,GAAO,CACVniC,MAAKA,EACLomD,OAAMA,IAER6K,UAASA,EACT+vB,gBAAeA,EACf6B,qBAAoBA,EACpBT,kBAAmB,CAAC,EACpBM,oBAAmBA,EACnBjB,uBAAsBA,GAIjB,CAAP,EAAOv3F,KAAK64F,oBACVN,EAAexvB,aAHe,MAK9BuvB,EACAM,GACAnxF,MAAK,SAACgS,GAAW,MAAC,CAClBA,OAAMA,EACNy+E,kBAAmBU,EAAYV,kBAFd,YAMPtB,EAAAt3F,UAAAu5F,oBAAd,SACE9vB,EACA+vB,EACAR,EACAM,2FA2DA,OAzDQr3B,EAAoCq3B,EAAWr3B,YAAlCtpB,EAAuB2gD,EAAW3gD,QAAzB8uB,EAAc6xB,EAAW7xB,UACjDgyB,EAA0B,CAACT,GAE3BhgF,EAAU,SAAOgpD,GAAwB,OAAA7J,EAAA+B,OAAA,wDAC7C,OACGs/B,GACAF,EAAYJ,oBAAoB10F,IAAIw9D,KAMlCyQ,GAAczQ,EAAWyF,GAK1BkC,GAAQ3H,GACH,CAAP,EAAOthE,KAAKg5F,aACV13B,EACAw3B,EACAR,EACAM,GACAnxF,MAAK,SAACwxF,SACqB,qBAAhBA,GACTF,EAAen2F,OAAKw2D,EAAA,IACjBwP,GAAuBtH,IAAa23B,EAAW,GAGtD,O9DHN,SAA0B33B,GAC3B,yBAAAA,EAAAN,IAED,C8DKUk4B,CAAiB53B,IAInBF,EAAWG,EAAYD,EAAU/7D,KAAK5D,OACtC+3D,EAAU0H,EAAU,GAAAE,EAAA/7D,KAAA5D,QAJpBy/D,EAAWE,EAOTF,GAAYA,EAAS0X,gBACjBA,EAAgB1X,EAAS0X,cAAcvzE,KAAK5D,MAC9Ci3F,EAAY9B,gBAAgBwB,EAAWxf,EAAe7gC,IACjD,CAAP,EAAOj4C,KAAK64F,oBACVz3B,EAAS2H,aACT+vB,EACAR,EACAM,GACAnxF,MAAK,SAAC0xF,GACNJ,EAAen2F,KAAKu2F,EACtB,UA1CF,WA+CG,CAAP,EAAOp4F,QAAQoL,IAAI48D,EAAaC,WAAWzlE,IAAI+U,IAAU7Q,MAAK,WAC5D,OAAO6tE,GAAeyjB,EACxB,YAGYnC,EAAAt3F,UAAA05F,aAAd,SACEtwB,EACAowB,EACAR,EACAM,mGAEA,OAAKN,GAIGvxB,EAAc6xB,EAAW7xB,UAC3BkB,EAAYS,EAAMnjE,KAAK5D,MACvBy3F,EAAmBxwB,GAAuBF,GAC1C2wB,EAAYpxB,IAAcmxB,EAC1BE,EAAgBhB,EAAUc,IAAqBd,EAAUrwB,GAC3DsxB,EAAgBx4F,QAAQqH,QAAQkxF,GAOjCV,EAAYrB,yBACbv3F,KAAKm4F,qBAAqBzvB,KAEpB8wB,EACJlB,EAAUpvB,YAAc0vB,EAAYD,sBAChCc,EAAcz5F,KAAK62F,WAAa72F,KAAK62F,UAAU2C,MAE7CpxF,EAAUqxF,EAAYJ,EAAYpxB,EAAYmxB,MAElDG,EAAgBx4F,QAAQqH,QAGtB2tF,GAAU/O,UAAUhnF,KAAK8V,MAAO1N,EAAS,CACvCkwF,EACA7vB,GAAyBC,EAAO3B,GAChC6xB,EAAY3gD,QACZ,CAAEywB,MAAKA,EAAEnH,YAAaq3B,EAAYr3B,kBAOrC,CAAP,EAAOg4B,EAAc9xF,MAAK,SAACgS,WAgBzB,QAhByB,IAAAA,IAAAA,EAAA6/E,GAGrB5wB,EAAMR,YACRQ,EAAMR,WAAWpnE,SAAQ,SAACkxE,GACK,WAAzBA,EAAUzsE,KAAK5D,OAAsBqwE,EAAUpyE,WACjDoyE,EAAUpyE,UAAUkB,SAAQ,SAACm6D,GACJ,OAAnBA,EAAI11D,KAAK5D,OAAqC,gBAAnBs5D,EAAIt5D,MAAMq/D,OACvC43B,EAAYV,kBAAkBj9B,EAAIt5D,MAAMA,OAAS8X,EAErD,GAEJ,KAIGivD,EAAMK,aACT,OAAOtvD,EAKT,GAAc,MAAVA,EAEF,OAAOA,EAGT,IAAMigF,EACoD,QAAxDx1B,EAAgB,QAAhB9K,EAAAsP,EAAMR,kBAAU,IAAA9O,OAAA,EAAAA,EAAE/tD,MAAK,SAAClJ,GAAM,MAAiB,WAAjBA,EAAEoD,KAAK5D,KAAP,WAA0B,IAAAuiE,GAAAA,EAE1D,OAAI9kE,MAAMwB,QAAQ6Y,GACT+/C,EAAKmgC,wBACVjxB,EACAowB,GAA2BY,EAC3BjgF,EACAm/E,GAKAlwB,EAAMK,aACDvP,EAAKq/B,oBACVnwB,EAAMK,aACN+vB,GAA2BY,EAC3BjgF,EACAm/E,QALJ,CAQF,MAtFS,CAAP,EAAO,aAyFHhC,EAAAt3F,UAAAq6F,wBAAR,SACEjxB,EACAowB,EACAr/E,EACAm/E,GAJF,IAAAp/B,EAAA,KAME,OAAOz4D,QAAQoL,IACbsN,EAAOlW,KAAI,SAAC+8D,GACV,OAAa,OAATA,EACK,KAILlhE,MAAMwB,QAAQ0/D,GACT9G,EAAKmgC,wBACVjxB,EACAowB,EACAx4B,EACAs4B,GAKAlwB,EAAMK,aACDvP,EAAKq/B,oBACVnwB,EAAMK,aACN+vB,EACAx4B,EACAs4B,QALJ,CAQF,IAEJ,EAKQhC,EAAAt3F,UAAAm5F,2BAAR,SACEF,EACAh3B,GAEA,IAAMq4B,EAAkB,SACtB7sD,GACoB,OAAC3tC,MAAMwB,QAAQmsC,EAAf,EAChBgqD,EAA2B/2F,KAAK+2F,yBA0CtC,OAxCA,SAAS8C,EACPC,GAEA,IAAK/C,EAAyBjzF,IAAIg2F,GAAiB,CACjD,IAAMC,EAAU,IAAIr2F,IACpBqzF,EAAyBt1F,IAAIq4F,EAAgBC,GAE7CzpB,GAAMwpB,EAAgB,CACpBtrB,UAAS,SAACzhC,EAAqBtsC,EAAG22D,EAAI4iC,EAAKjpB,GACjB,WAApBhkC,EAAKxnC,KAAK5D,OACZovE,EAAUjwE,SAAQ,SAACisC,GACb6sD,EAAgB7sD,IAAS8oD,GAAgB9oD,IAC3CgtD,EAAQ1lF,IAAI04B,EAEhB,GAEJ,EACA6gC,eAAc,SAACqsB,EAA4Bx5F,EAAG22D,EAAI4iC,EAAKjpB,GACrD,IAAM3P,EAAWG,EAAY04B,EAAO10F,KAAK5D,OACzC+3D,EAAU0H,EAAU,GAAA64B,EAAA10F,KAAA5D,OAEpB,IAAMu4F,EAAqBL,EAAoBz4B,GAC3C84B,EAAmB7vE,KAAO,IAG5B0mD,EAAUjwE,SAAQ,SAACisC,GACb6sD,EAAgB7sD,IAAS8oD,GAAgB9oD,IAC3CgtD,EAAQ1lF,IAAI04B,EAEhB,IACAgtD,EAAQ1lF,IAAI4lF,GACZC,EAAmBp5F,SAAQ,SAACwgE,GAC1By4B,EAAQ1lF,IAAIitD,EACd,IAEJ,GAEJ,CACA,OAAOy1B,EAAyBv1F,IAAIs4F,EACtC,CACOD,CAAoBtB,EAC7B,EACF3B,CAAA,CAxeA,GC5CMuD,GAA0B,IAAK7+B,EAAgBz3D,QAAUonB,KAK/D,SAASmvE,GACPtkF,EACAukF,GAEA,IAAMC,EAAWxkF,EAAMukF,GACC,oBAAbC,IAETxkF,EAAMukF,GAAc,WAUlB,OATAF,GAAwB14F,IACtBqU,GAKCqkF,GAAwB34F,IAAIsU,GAAU,GAAK,MAGvCwkF,EAASv6F,MAAMC,KAAMJ,UAC9B,EAEJ,CAEA,SAAS26F,GAAoBtV,GACvBA,EAAoB,gBACtBh5E,aAAag5E,EAAoB,eACjCA,EAAoB,mBAAI,EAE5B,CAcA,IAAAuV,GAAA,WAYE,SAAAA,EACEj2B,EACgBisB,QAAA,IAAAA,IAAAA,EAAUjsB,EAAaksB,mBAAvB,KAAAD,QAAAA,EAblB,KAAA7jD,UAAY,IAAIjpC,IAChB,KAAAktB,SAAgC,KAChC,KAAA6pE,cAAgB,EAKhB,KAAAC,SAAU,EAiEF,KAAA1wE,OAAiB,EAsFT,KAAA2wE,gBAAoD,KA/IlE,IAAM7kF,EAAS9V,KAAK8V,MAAQyuD,EAAazuD,MAOpCqkF,GAAwBr2F,IAAIgS,KAC/BqkF,GAAwB14F,IAAIqU,EAAO,GACnCskF,GAA2BtkF,EAAO,SAClCskF,GAA2BtkF,EAAO,UAClCskF,GAA2BtkF,EAAO,SAEtC,CAoaF,OAlaS0kF,EAAAl7F,UAAAs7F,KAAP,SAAYjjF,GAUV,IAAIm2E,EAAgBn2E,EAAMm2E,eAAiBf,GAAcmE,QA6BzD,OA3BElxF,KAAK+mE,WACL/mE,KAAK8tF,gBAAkBf,GAAcmE,UACpC3M,GAAMvkF,KAAK+mE,UAAWpvD,EAAMovD,aAE7B+mB,EAAgBf,GAAc+G,cAG3BvP,GAAM5sE,EAAMovD,UAAW/mE,KAAK+mE,aAC/B/mE,KAAK66F,cAAW,GAGlB57F,OAAOS,OAAOM,KAAM,CAClB4wB,SAAUjZ,EAAMiZ,SAChBm2C,UAAWpvD,EAAMovD,UACjBgO,aAAc,KACdH,cAAe50E,KAAK40E,eAAiB,GACrCkZ,cAAaA,IAGXn2E,EAAMgjF,iBACR36F,KAAKq0F,mBAAmB18E,EAAMgjF,iBAG5BhjF,EAAM8iF,gBACRz6F,KAAKy6F,cAAgB9iF,EAAM8iF,eAGtBz6F,IACT,EAMAw6F,EAAAl7F,UAAA8mE,MAAA,WACEm0B,GAAoBv6F,MACpBA,KAAKgqB,OAAQ,CACf,EAEAwwE,EAAAl7F,UAAAwxF,UAAA,WACE9wF,KAAK66F,cAAW,CAClB,EAEAL,EAAAl7F,UAAA+xF,QAAA,WACE,IAAMr7D,EAAUh2B,KAAK86F,iBAErB,GAAI96F,KAAK66F,UAAYtW,GAAMvuD,EAASh2B,KAAK66F,SAAS7kE,SAChD,OAAOh2B,KAAK66F,SAASzJ,KAGvBpxF,KAAK+6F,YAAY/6F,KAAK+mE,WAEtB,IAAMi0B,EAAKh7F,KAAK26F,gBAChB,GAAIK,GAAiC,aAA3BA,EAAGhlE,QAAQi6D,YACnB,MAAO,CAAE7jE,UAAU,GAGrB,IAAMglE,EAAOpxF,KAAK8V,MAAMs7E,KAAKp7D,GAE7B,OADAh2B,KAAKi7F,eAAe7J,EAAMp7D,GACnBo7D,CACT,EAOQoJ,EAAAl7F,UAAA27F,eAAR,SACE7J,EACAp7D,GAEAh2B,KAAK66F,SACHzJ,EACE,CACEA,KAAIA,EACJp7D,QAASA,GAAWh2B,KAAK86F,uBAE3B,CACN,EAEQN,EAAAl7F,UAAAw7F,eAAR,SAAuB/zB,SACrB,YADqB,IAAAA,IAAAA,EAAY/mE,KAAK+mE,WAC/B,CACLpvD,MAAO3X,KAAK4wB,SACZm2C,UAASA,EACTuqB,mBAAmB,EACnB7G,YAAY,EACZyQ,gBAAqC,QAApB9hC,EAAAp5D,KAAK26F,uBAAe,IAAAvhC,OAAA,EAAAA,EAAEpjC,QAAQklE,gBAEnD,EAEAV,EAAAl7F,UAAA67F,QAAA,SAAQ/J,GAAR,MAAA53B,EAAA,KACQ4hC,EAAUp7F,KAAK66F,UAAY76F,KAAK66F,SAASzJ,KAW3CA,IAASA,EAAKhlE,WAAgC,QAApBgtC,EAAAp5D,KAAK26F,uBAAe,IAAAvhC,OAAA,EAAAA,EAAE64B,kBAIpDjyF,KAAKi7F,eAAe7J,GAEfpxF,KAAKgqB,OAAUu6D,GAAM6W,GAAWA,EAAQ3hF,OAAQ23E,GAAQA,EAAK33E,UAChEzZ,KAAKgqB,OAAQ,EACRhqB,KAAKq7F,gBACRr7F,KAAKq7F,cAAgB34F,YAAW,WAAM,OAAA82D,EAAK6zB,QAAL,GAAe,KAG3D,EAKAmN,EAAAl7F,UAAA+0F,mBAAA,SAAmB2G,GAAnB,IAAAxhC,EAAA,KACMwhC,IAAOh7F,KAAK26F,kBAEZ36F,KAAKs7F,YACPt7F,KAAK2sC,UAAUz3B,OAAOlV,KAAKs7F,YAG5Bt7F,KAAa26F,gBAAkBK,EAE5BA,GACFA,EAAc,UAAIh7F,KAClBA,KAAK2sC,UAAUt4B,IACZrU,KAAKs7F,WAAa,WACJ9hC,EAAK63B,UACTkK,0BAMPP,EAAY,UAUZzH,GAAoByH,EAExB,WAGKh7F,KAAKs7F,WAEhB,EAEAd,EAAAl7F,UAAA+tF,OAAA,eAAA7zB,EAAA,KACE+gC,GAAoBv6F,MAEhBA,KAAKw7F,gBACPx7F,KAAK2sC,UAAU7rC,SAAQ,SAACivC,GAAa,OAAAA,EAASypB,EAAT,IAGvCx5D,KAAKgqB,OAAQ,CACf,EAEQwwE,EAAAl7F,UAAAk8F,aAAR,WACE,IAAKx7F,KAAKgqB,QAAUhqB,KAAK2sC,UAAUtiB,KACjC,OAAO,EAGT,GAAIwjE,GAAyB7tF,KAAK8tF,gBAAkB9tF,KAAK26F,gBAAiB,CAChE,IAAA1K,EAAgBjwF,KAAK26F,gBAAgB3kE,QAAOi6D,YACpD,GAAoB,eAAhBA,GAAgD,sBAAhBA,EAClC,OAAO,CAEX,CAEA,OAAO,CACT,EAEOuK,EAAAl7F,UAAAuY,KAAP,WACE,IAAK7X,KAAK06F,QAAS,CACjB16F,KAAK06F,SAAU,EAGf16F,KAAKomE,QAELpmE,KAAKutF,SAGLvtF,KAAKutF,OAASiN,EAAUl7F,UAAUiuF,OAElC,IAAMyN,EAAKh7F,KAAK26F,gBACZK,GAAIA,EAAG/G,aACb,CACF,EAIQuG,EAAAl7F,UAAAiuF,OAAR,WAAkB,EAIViN,EAAAl7F,UAAAy7F,YAAR,SAAoBh0B,GAApB,IAAAvN,EAAA,UAAoB,IAAAuN,IAAAA,EAAY/mE,KAAK+mE,WACnC,IAAMi0B,EAAKh7F,KAAK26F,gBAChB,IAAIK,GAAiC,aAA3BA,EAAGhlE,QAAQi6D,YAArB,CAIA,IAAMwL,EAAYpkC,EAAAA,EAAA,GAIbr3D,KAAK86F,eAAe/zB,IAAU,CACjC20B,QAAS17F,KACTs5C,SAAU,SAAC83C,GAAS,OAAA53B,EAAK2hC,QAAQ/J,EAAb,IAGjBpxF,KAAK27F,WAAcpX,GAAMkX,EAAcz7F,KAAK27F,aAC/C37F,KAAKutF,SACLvtF,KAAKutF,OAASvtF,KAAK8V,MAAMw9E,MAAOtzF,KAAK27F,UAAYF,GAbnD,CAeF,EAQOjB,EAAAl7F,UAAAs8F,eAAP,WACE57F,KAAK67F,eAAY,CACnB,EAEQrB,EAAAl7F,UAAAw8F,YAAR,SACEriF,EACAstD,GAEQ,IAAA80B,EAAc77F,KAAI67F,UAC1B,QACEA,GAIAA,EAAUE,UAAY5B,GAAwB34F,IAAIxB,KAAK8V,QACvDyuE,GAAMxd,EAAW80B,EAAU90B,YAC3Bwd,GAAM9qE,EAAO6V,KAAMusE,EAAUpiF,OAAO6V,MAExC,EAEOkrE,EAAAl7F,UAAA08F,WAAP,SACEviF,EACAmX,EACAoF,EAIAimE,GAPF,IAAAziC,EAAA,KASQ+b,EAAS,IAAIC,GACbZ,EACJQ,GAAgB37D,EAAOy7D,QAAUz7D,EAAOy7D,OAAOh1E,MAAM,GAAK,GAM5D,GAFAF,KAAKomE,QAED,gBAAiB3sD,GAAU27D,GAAgB37D,EAAO88D,aAAc,CAClE,IAAMD,EAAaF,GAAqBp2E,KAAKqxF,UAAU53E,OAAQA,GAC/DA,EAAO6V,KAAOgnD,CAOhB,MAAO,GAAI,YAAa78D,GAAUA,EAAOwqE,QAAS,CAChD,IAAMmN,EAAOpxF,KAAKqxF,UAClB53E,EAAO6V,KAAOimD,EAAOE,MAAM2b,EAAK33E,OAAQA,EAAO6V,KACjD,CAEAtvB,KAAK40E,cAAgBA,EAEO,aAAxB5+C,EAAQi6D,YACVjwF,KAAKi7F,eACH,CAAExhF,OAAQA,EAAO6V,KAAMlD,UAAU,GACjCpsB,KAAK86F,eAAe9kE,EAAQ+wC,YAEE,IAAvBk1B,IACLC,GAAkBziF,EAAQuc,EAAQmmE,aAKpCn8F,KAAK8V,MAAMsmF,oBAAmB,SAACtmF,GAC7B,GAAI0jD,EAAKsiC,YAAYriF,EAAQuc,EAAQ+wC,WACnCjxD,EAAMs9E,WAAW,CACfz7E,MAAOiZ,EACPtB,KAAM7V,EAAO6V,KACby3C,UAAW/wC,EAAQ+wC,UACnBs1B,UAAkC,IAAvBJ,IAGbziC,EAAKqiC,UAAY,CACfpiF,OAAMA,EACNstD,UAAW/wC,EAAQ+wC,UACnBg1B,QAAS5B,GAAwB34F,IAAIg4D,EAAK1jD,aAmC5C,GAAI0jD,EAAKqhC,UAAYrhC,EAAKqhC,SAASzJ,KAAKhlE,SAItC,YADA3S,EAAO6V,KAAOkqC,EAAKqhC,SAASzJ,KAAK33E,QAOrC,IAAM6iF,EAAc9iC,EAAKshC,eAAe9kE,EAAQ+wC,WAC1CqqB,EAAOt7E,EAAMs7E,KAAQkL,IAQtB9iC,EAAKkhC,SAAWnW,GAAM/qB,EAAKuN,UAAW/wC,EAAQ+wC,YAGjDvN,EAAKuhC,YAAY/kE,EAAQ+wC,WAQ3BvN,EAAKyhC,eAAe7J,EAAMkL,GACtBlL,EAAKhlE,WACP3S,EAAO6V,KAAO8hE,EAAK33E,OAEvB,IAEAzZ,KAAK67F,eAAY,EAGvB,EAEOrB,EAAAl7F,UAAAi9F,UAAP,WAEE,OADAv8F,KAAK+0E,aAAe,KACZ/0E,KAAK8tF,cAAgBf,GAAc/kE,KAC7C,EAEOwyE,EAAAl7F,UAAAk9F,UAAP,SAAiBvjF,GAcf,OAbAjZ,KAAK8tF,cAAgBf,GAAc9zE,MACnCjZ,KAAK67F,eAAY,EAEjB77F,KAAKomE,QAEDntD,EAAM27D,gBACR50E,KAAK40E,cAAgB37D,EAAM27D,eAGzB37D,EAAM87D,eACR/0E,KAAK+0E,aAAe97D,EAAM87D,cAGrB97D,CACT,EACFuhF,CAAA,CAjcA,GAmcM,SAAU0B,GACdziF,EACA0iF,QAAA,IAAAA,IAAAA,EAAA,QAEA,IAAMM,EAA+B,WAAhBN,GAA4C,QAAhBA,EAC7CO,GAAmBvQ,GAAsB1yE,GAI7C,OAHKijF,GAAmBD,GAAgBhjF,EAAO6V,OAC7CotE,GAAkB,GAEbA,CACT,CC1cQ,IAAAn9F,GAAmBN,OAAOK,UAASC,eAErCo9F,GAAyB19F,OAAO6C,OAAO,MAyB7C86F,GAAA,WA6BE,SAAAA,EAAYxjC,OACVtjD,EAAKsjD,EAAAtjD,MACL0lB,EAAI49B,EAAA59B,KACJ20D,EAAc/2B,EAAA+2B,eACdxrB,EAAiBvL,EAAAuL,kBACjBT,EAAA9K,EAAAyjC,mBAAAA,OAAkB,IAAA34B,GAAQA,EAC1B44B,EAAW1jC,EAAA0jC,YACX14B,EAAAhL,EAAAk7B,QAAAA,OAAO,IAAAlwB,GAAQA,EACfQ,EAAAxL,EAAA2oB,gBAAAA,OAAe,IAAAnd,EAAG,CAAC,EAACA,EACpBm4B,EAAU3jC,EAAA2jC,WACVhzF,EAAAqvD,EAAAy7B,uBAAAA,OAAsB,IAAA9qF,IAAK+L,EAAM++E,uBAAsB9qF,EACvDizF,EAAc5jC,EAAA4jC,eAXhBxjC,EAAA,KAlBQ,KAAAuoB,gBAA0C,CAAC,EAU3C,KAAAt7D,QAAU,IAAIwE,IAMZ,KAAAgyE,eAAiB,IAAIhyE,IAmhBvB,KAAAiyE,eAAiB,IAAI95B,GAI3BI,GAAW,iCAA+B,KAmIpC,KAAA25B,eAAiB,EAKjB,KAAAC,iBAAmB,EAKnB,KAAAC,kBAAoB,EAgRlB,KAAAC,wBAA0B,IAAI1X,IAErC,GA35BD,IAAM2X,EAA2B,IAAIxS,IACnC,SAACn6D,GAAa,OAAA4oC,EAAK1jD,MAAMu1E,kBAAkBz6D,EAA7B,GAEd,CAAE9a,OAAO,IAGX9V,KAAK8V,MAAQA,EACb9V,KAAKw7B,KAAOA,EACZx7B,KAAKmwF,eAAiBA,GAAkBlxF,OAAO6C,OAAO,MACtD9B,KAAK68F,mBAAqBA,EAC1B78F,KAAK+hF,gBAAkBA,EACvB/hF,KAAK+8F,WAAaA,GAAc,IAAInG,GAAW,CAAE9gF,MAAKA,IACtD9V,KAAKs0F,QAAUA,EACft0F,KAAK60F,uBAAyBA,EAC9B70F,KAAK2kE,kBACHA,EACE44B,EACGp9F,OAAOwkE,GAKPxkE,OAAOo9F,GACVA,EACJv9F,KAAKg9F,eAAiBA,GAAkB/9F,OAAO6C,OAAO,OAEjD9B,KAAK88F,YAAcA,KACtB98F,KAAKw9F,cAAgBv+F,OAAO6C,OAAO,MAEvC,QAMO86F,EAAAt9F,UAAAuY,KAAP,eAAA2hD,EAAA,KACEx5D,KAAKymB,QAAQ3lB,SAAQ,SAAC28F,EAAOjN,GAC3Bh3B,EAAKkkC,qBAAqBlN,EAC5B,IAEAxwF,KAAK29F,qBACH7iC,EAAkB,IAEtB,EAEQ8hC,EAAAt9F,UAAAq+F,qBAAR,SAA6B1kF,GAC3BjZ,KAAKi9F,eAAen8F,SAAQ,SAACysF,GAAW,OAAAA,EAAOt0E,EAAP,IACxCjZ,KAAKi9F,eAAe9nF,OACtB,EAEaynF,EAAAt9F,UAAAoV,OAAb,SAAA0kD,4CAKE8K,qBACA05B,EAAQ15B,EAAA05B,SACR72B,EAAS7C,EAAA6C,UACT82B,EAAkB35B,EAAA25B,mBAClBC,EAAa55B,EAAA45B,cACb/zF,EAAAm6D,EAAA65B,eAAAA,OAAc,IAAAh0F,EAAG,GAAEA,EACnBumF,EAAApsB,EAAA85B,oBAAAA,OAAmB,IAAA1N,GAAQA,EACnB2N,EAAiB/5B,EAAApvD,OACzBopF,EAAch6B,EAAAg6B,eACdC,EAAAj6B,EAAA+rB,YAAAA,OAAW,IAAAkO,GAA6B,QAA1B/5B,EAAApkE,KAAKmwF,eAAez7E,cAAM,IAAA0vD,OAAA,EAAAA,EAAE6rB,cAAe,eAAckO,EACvEC,EAAAl6B,EAAAi4B,YAAAA,OAAW,IAAAiC,GAA6B,QAA1Bx5B,EAAA5kE,KAAKmwF,eAAez7E,cAAM,IAAAkwD,OAAA,EAAAA,EAAEu3B,cAAe,OAAMiC,EAC/DC,EAAcn6B,EAAAm6B,eACdpmD,EAAOisB,EAAAjsB,iEAIPyhB,EACEkkC,EACA,IAGFlkC,EACkB,iBAAhBu2B,GAAkD,aAAhBA,EAClC,IAGIqO,EAAat+F,KAAKu+F,qBAExBX,EAAW59F,KAAK8V,MAAM0oF,iBAAiBx+F,KAAK0lE,UAAUk4B,IAC9ChrB,EAAqB5yE,KAAKwkE,gBAAgBo5B,GAAShrB,iBAE3D7L,EAAY/mE,KAAKy+F,aAAab,EAAU72B,GACpC6L,EACW,GAAM5yE,KAAK+8F,WAAWhF,qBACjC6F,EACA72B,EACA9uB,IAJA,aACF8uB,EAAa23B,EAAAxmC,wBAqCf,OA9BMymC,EACJ3+F,KAAKw9F,gBACJx9F,KAAKw9F,cAAcc,GAAc,CAChCV,SAAQA,EACR72B,UAASA,EACTmqB,SAAS,EACTj4E,MAAO,OAGL2lF,EACJf,GACA79F,KAAK6+F,uBACHhB,EACA,CACES,WAAUA,EACV1tE,SAAUgtE,EACV72B,UAASA,EACTkpB,YAAWA,EACXkM,YAAWA,EACXlkD,QAAOA,EACP6lD,cAAaA,EACbhpF,OAAQmpF,EACRI,eAAcA,IAIpBr+F,KAAK8+F,mBAECx+F,EAAON,KAEN,CAAP,EAAO,IAAIe,SAAQ,SAACqH,EAAS+C,GAC3B,OAAOwgF,GACLrrF,EAAKy+F,sBACHnB,EAAQvmC,EAAAA,EAAA,GAEHpf,GAAO,CACV4lD,mBAAoBe,EAAef,OAAqB,IAE1D92B,GACA,IAGF,SAACttD,GACC,GAAI0yE,GAAsB1yE,IAA2B,SAAhB0iF,EACnC,MAAM,IAAIxnB,GAAY,CACpBC,cAAewX,GAA2B3yE,KAI1CklF,IACFA,EAAmBzN,SAAU,EAC7ByN,EAAmB1lF,MAAQ,MAG7B,IAAM+lF,EAAW3nC,EAAA,GAAuB59C,GAUxC,MAR8B,oBAAnBskF,IACTA,EAAiBA,EAAeiB,IAGd,WAAhB7C,GAA4BhQ,GAAsB6S,WAC7CA,EAAY9pB,OAGd50E,EAAK2+F,mBAAwD,CAClEX,WAAUA,EACV7kF,OAAQulF,EACRpuE,SAAUgtE,EACV72B,UAASA,EACTkpB,YAAWA,EACXkM,YAAWA,EACXlkD,QAAOA,EACPnjC,OAAQmpF,EACRH,cAAaA,EACbE,oBAAmBA,EACnBD,eAAcA,EACdmB,iBAAkBN,EAAeN,OAAa,EAC9CJ,eAAcA,EACdG,eAAcA,GAElB,IACAhoF,UAAU,CACV3R,KAAI,SAACs6F,GACH1+F,EAAKw+F,mBAOC,YAAaE,IAAwC,IAAxBA,EAAY/a,SAC7C77E,EAAQ42F,EAEZ,EAEA/lF,MAAK,SAAC+3C,GACA2tC,IACFA,EAAmBzN,SAAU,EAC7ByN,EAAmB1lF,MAAQ+3C,GAGzB4tC,GACFt+F,EAAKwV,MAAMopF,iBAAiBZ,GAG9Bh+F,EAAKw+F,mBAEL3zF,EACE6lD,aAAe2jB,GAAc3jB,EAC3B,IAAI2jB,GAAY,CACdI,aAAc/jB,IAItB,GAEJ,aAGK4rC,EAAAt9F,UAAA2/F,mBAAP,SAMErB,EAgBA9nF,GAtBF,IAAA0jD,EAAA,UAsBE,IAAA1jD,IAAAA,EAAQ9V,KAAK8V,OAEP,IAAA2D,EAAWmkF,EAAQnkF,OACnB0lF,EAAoC,GACpCC,EAAqC,aAAzBxB,EAAS3N,YAE3B,IAAKmP,GAAalD,GAAkBziF,EAAQmkF,EAASzB,aAAc,CASjE,GARKjmB,GAAkCz8D,IACrC0lF,EAAYv8F,KAAK,CACf6W,OAAQA,EAAO6V,KACf+vE,OAAQ,gBACR1nF,MAAOimF,EAAShtE,SAChBm2C,UAAW62B,EAAS72B,YAItBmP,GAAkCz8D,IAClC27D,GAAgB37D,EAAO88D,aACvB,CACA,IAAM6a,EAAOt7E,EAAMs7E,KAAY,CAC7B/nF,GAAI,gBAIJsO,MAAO3X,KAAKwkE,gBAAgBo5B,EAAShtE,UAAU0uE,QAC/Cv4B,UAAW62B,EAAS72B,UACpB0jB,YAAY,EACZ6G,mBAAmB,IAEjBhb,OAAU,EACV8a,EAAK33E,SACP68D,EAAaF,GAAqBgb,EAAK33E,OAAQA,IAEvB,qBAAf68D,IAGR78D,EAAuB6V,KAAOgnD,EAC/B6oB,EAAYv8F,KAAK,CACf6W,OAAQ68D,EACR+oB,OAAQ,gBACR1nF,MAAOimF,EAAShtE,SAChBm2C,UAAW62B,EAAS72B,YAG1B,CAEQ,IAAAw4B,EAAkB3B,EAAQE,cAC9ByB,GACFv/F,KAAKymB,QAAQ3lB,SAAQ,SAACs4D,EAAqBo3B,OAAnBmK,EAAevhC,EAAAuhC,gBAC/BhK,EAAYgK,GAAmBA,EAAgBhK,UACrD,GAAKA,GAAcpxF,GAAeC,KAAK+/F,EAAe5O,GAAtD,CAGA,IAAM9vC,EAAU0+C,EAAc5O,GACxBzsB,EAA0B1K,EAAK/yC,QAAQjlB,IAAIgvF,GAAzC5/D,EAAQszC,EAAAtzC,SAAEm2C,EAAS7C,EAAA6C,UAGrB3C,EAA2CtuD,EAAMs7E,KAAY,CACjEz5E,MAAOiZ,EACPm2C,UAASA,EACTuqB,mBAAmB,EACnB7G,YAAY,IAJE+U,EAAkBp7B,EAAA3qD,OAOlC,GAP4C2qD,EAAAh4C,UAO5BozE,EAAoB,CAElC,IAAMC,EAAkB5+C,EAAQ2+C,EAAoB,CAClDE,eAAgBjmF,EAChBk3E,UAAY//D,GAAY64C,GAAiB74C,SAAc,EACvD+uE,eAAgB54B,IAId04B,GACFN,EAAYv8F,KAAK,CACf6W,OAAQgmF,EACRJ,OAAQ,aACR1nF,MAAOiZ,EACPm2C,UAASA,GAGf,CA7BA,CA8BF,GAEJ,CAEA,GACEo4B,EAAYt/F,OAAS,IACpB+9F,EAASG,gBAAkB,IAAIl+F,OAAS,GACzC+9F,EAAS9oF,QACT8oF,EAASM,gBACTN,EAASsB,iBACT,CACA,IAAMU,EAAiB,GAqFvB,GAnFA5/F,KAAK+9F,eAAe,CAClB8B,YAAa,SAAC/pF,GACPspF,GACHD,EAAYr+F,SAAQ,SAACg/F,GAAU,OAAAhqF,EAAMgqF,MAAMA,EAAZ,IAMzB,IzC7dhBn+F,EyC6dgBmT,EAAW8oF,EAAQ9oF,OAGrBirF,IzC7dZ7pB,GAHFv0E,EyCiekC8X,IzCxe9B,SACJ9X,GAEA,MAAO,YAAaA,GAAS,SAAUA,CACzC,CAOIq+F,CAA8Br+F,KyC8drBu0E,GAAkCz8D,KAAYA,EAAOwqE,QAExD,GAAInvE,EAAQ,CACV,IAAKsqF,EAAW,CAKd,IAAMhO,EAAOt7E,EAAMs7E,KAAY,CAC7B/nF,GAAI,gBAIJsO,MAAO6hD,EAAKgL,gBAAgBo5B,EAAShtE,UAAU0uE,QAC/Cv4B,UAAW62B,EAAS72B,UACpB0jB,YAAY,EACZ6G,mBAAmB,IAGjBF,EAAKhlE,WAEH,gBADJ3S,EAAM49C,EAAAA,EAAA,GAAS59C,GAAsB,CAAE6V,KAAM8hE,EAAK33E,kBAEzCA,EAAO88D,YAEZ,YAAa98D,UACRA,EAAOwqE,QAGpB,CAKI8b,GACFjrF,EAAOgB,EAAiB2D,EAAQ,CAC9Bw+B,QAAS2lD,EAAS3lD,QAClB8uB,UAAW62B,EAAS72B,WAG1B,CAIKq4B,GAAcxB,EAASS,iBAAkB0B,GAC5CjqF,EAAMf,OAAO,CACX1L,GAAI,gBACJi+D,OAAM,SAAC3lE,EAAOy3D,OAAE6O,EAAS7O,EAAA6O,UAAEg4B,EAAM7mC,EAAA6mC,OAC/B,MAAqB,eAAdh4B,EAA6BtmE,EAAQs+F,CAC9C,GAGN,EAEAC,QAAStC,EAASG,eAGlBtT,YAAY,EAIZyU,iBAAkBtB,EAASsB,iBAM3BhB,eAAgBN,EAASM,gBAAkB,OAC1Cp9F,SAAQ,SAAC2Y,GAAW,OAAAmmF,EAAQh9F,KAAK6W,EAAb,IAEnBmkF,EAASI,qBAAuBJ,EAASM,eAI3C,OAAOn9F,QAAQoL,IAAIyzF,GAASn4F,MAAK,WAAM,OAAAgS,CAAA,GAE3C,CAEA,OAAO1Y,QAAQqH,QAAQqR,EACzB,EAEOmjF,EAAAt9F,UAAAu/F,uBAAP,SAMEhB,EACAD,GAPF,IAAApkC,EAAA,KAmBQlqC,EAC0B,oBAAvBuuE,EACLA,EAAmBD,EAAS72B,UAAW,CAAE41B,OAAMA,KAC/CkB,EAEJ,OAAIvuE,IAASqtE,KAIb38F,KAAK8V,MAAMqqF,6BAA4B,SAACrqF,GACtC,IACE0jD,EAAKylC,mBAAkB5nC,EAAAA,EAAA,GAEhBumC,GAAQ,CACXnkF,OAAQ,CAAE6V,KAAIA,KAEhBxZ,EAEJ,CAAE,MAAOmD,IACgB,IAAvB5Y,WAAU86D,SAAazB,EAAAzgD,MAAAA,EACzB,CACF,GAAG2kF,EAASU,aAEL,EACT,EAEO1B,EAAAt9F,UAAA8gG,WAAP,SACE5P,EACAx6D,EACA83D,GAEA,OAAO9tF,KAAKqgG,qBAAqB7P,EAASx6D,EAAS83D,GAAesH,QAC/DvqE,OACL,EAEO+xE,EAAAt9F,UAAAghG,cAAP,WACE,IAAMC,EAAyCthG,OAAO6C,OAAO,MAS7D,OARA9B,KAAKymB,QAAQ3lB,SAAQ,SAACmkF,EAAMuL,GAC1B+P,EAAM/P,GAAW,CACfzpB,UAAWke,EAAKle,UAChB+mB,cAAe7I,EAAK6I,cACpB/Y,aAAckQ,EAAKlQ,aACnBH,cAAeqQ,EAAKrQ,cAExB,IACO2rB,CACT,EAEO3D,EAAAt9F,UAAA8yF,YAAP,SAAmB5B,GACjB,IAAMd,EAAY1vF,KAAKymB,QAAQjlB,IAAIgvF,GAC/Bd,IACFA,EAAU3a,kBAAe7hB,EACzBw8B,EAAU9a,cAAgB,GAE9B,EAEOgoB,EAAAt9F,UAAAomE,UAAP,SAAiB90C,GACf,OAAO5wB,KAAK2kE,kBAAkB0mB,kBAAkBz6D,EAClD,EAUOgsE,EAAAt9F,UAAAklE,gBAAP,SAAuB5zC,GACb,IAAAssE,EAAmBl9F,KAAIk9F,eAE/B,IAAKA,EAAep5F,IAAI8sB,GAAW,CACjC,IAAM4vE,EAAkC,CAMtC5tB,iBAAkBA,GAAiBhiD,GACnCugE,mBAAoBnxF,KAAK+8F,WAAW5E,qBAAqBvnE,GACzDkhE,wBAAyBtf,GAAc,CAAC,eAAgB5hD,GACxD+mE,YAAa33F,KAAK+8F,WAAWpF,YAAY/mE,GACzCgnE,YAAa/Y,GACX,CACE,CAAEt5E,KAAM,SAAUiT,QAAQ,GAC1B,CAAEjT,KAAM,cACR,CAAEA,KAAM,gBAEVqrB,GAEF6vE,YAAaz2B,GACXR,GAAuB54C,IAIzB0uE,QAAOjoC,EAAAA,EAAA,GACFzmC,GAAQ,CACXmwC,YAAanwC,EAASmwC,YAAYx9D,KAAI,SAACsgB,GACrC,MACe,wBAAbA,EAAIm9C,MACc,UAAlBn9C,EAAIo9C,UAEJ5J,EAAAA,EAAA,GAAYxzC,GAAG,CAAEo9C,UAAW,UAEvBp9C,CACT,OAIJq5E,EAAez7F,IAAImvB,EAAU4vE,EAC/B,CAEA,OAAOtD,EAAe17F,IAAIovB,EAC5B,EAEQgsE,EAAAt9F,UAAAm/F,aAAR,SACE7tE,EACAm2C,GAEA,OAAA1P,EAAAA,EAAA,GACKr3D,KAAKwkE,gBAAgB5zC,GAAU6vE,aAC/B15B,EAEP,EAEO61B,EAAAt9F,UAAA8wF,WAAP,SAGEp6D,GACA,IAAMre,EAAQ3X,KAAK0lE,UAAU1vC,EAAQre,OAUc,qBALnDqe,EAAOqhC,EAAAA,EAAA,GACFrhC,GAAO,CACV+wC,UAAW/mE,KAAKy+F,aAAa9mF,EAAOqe,EAAQ+wC,cAG3B+rB,8BACjB98D,EAAQ88D,6BAA8B,GAGxC,IAAMpD,EAAY,IAAI8K,GAAUx6F,MAC1BusB,EAAa,IAAIkjE,GAA+B,CACpDlrB,aAAcvkE,KACd0vF,UAASA,EACT15D,QAAOA,IAcT,OAZAzJ,EAAsB,UAAI5U,EAE1B3X,KAAKymB,QAAQhlB,IAAI8qB,EAAWikE,QAASd,GAIrCA,EAAUkL,KAAK,CACbhqE,SAAUjZ,EACVgjF,gBAAiBpuE,EACjBw6C,UAAWx6C,EAAWw6C,YAGjBx6C,CACT,EAEOqwE,EAAAt9F,UAAAqY,MAAP,SACEqe,EACAw6D,GAFF,IAAAh3B,EAAA,KAoBE,YAlBA,IAAAg3B,IAAAA,EAAUxwF,KAAKywF,mBAEf/2B,EACE1jC,EAAQre,MACR,MAEA,aADEqe,EAAAre,MAAAqpD,KACF,IAEFtH,GACE1jC,EAAQs7D,kBAAe,IAIzB53B,GACI1jC,EAAgBu8D,aAAA,IAIpB,KACI6N,WAAgB5P,EAAYn5B,EAC9BA,EAAA,GAAArhC,GAAA,CAAAre,MAAA,KAAA+tD,UACA1vC,EAAAre,UAAA7L,SAAA,kBAAA0tD,EAAAk8B,UAAAlF,EAAA,KAMJoM,EAACt9F,UAAAmxF,gBAAA,WAGM,OAAAtiF,OAAA,KAAAgvF,mBAEPP,EAACt9F,UAAAohG,kBAAA,WAGM,YAAAtD,oBAEPR,EAACt9F,UAAAi/F,mBAAA,WAGM,OAAApwF,OAAA,KAAAkvF,sBAEPT,EAACt9F,UAAAqhG,iBAAA,SAAAnQ,GAEM,KAAAoQ,4BAAApQ,GACLxwF,KAAK8+F,oBAEPlC,EAACt9F,UAAAshG,4BAAA,SAAApQ,GAEO,IAAAd,EAAA,KAAAjpE,QAAAjlB,IAAAgvF,GACAd,GACFA,EAAS73E,QACf+kF,EAACt9F,UAAAuhG,WAAA,SAAA7qE,GAgCC,YA9BK,IAAAA,IAAAA,EAAP,CACE8qE,gBAAA,IAQA,KAAAnD,qBAAA7iC,EAAA,KACA96D,KAAKymB,QAAA3lB,SAAA,SACH4uF,GAKGA,EAAQiL,gBAGTjL,EAAA5B,cAAAf,GAA6BmE,UAEvBr5E,UAGP,KAAA2lF,gBAECx9F,KAAKw9F,cAAgBv+F,OAAA6C,OAAA,OAIzB,KAAAgU,MAAAswD,MAAApwC,IAEF4mE,EAACt9F,UAAAyhG,qBAAA,SAAAb,GAEM,IAAA1mC,EAAA,UAAP,IAAA0mC,IAwFCA,EAAA,UAvFC,IAAAz5E,EAAA,IAAAwE,IAEM+1E,EAAkD,IAAA/1E,IAClDg2E,EAAoB,IAAIv9F,WACxBtE,MAAAwB,QAAAs/F,IAEFA,EAAMp/F,SAAQ,SAAWiZ,GhEtxB3B,IAAyBpY,EgEuxBT,kBAADoY,EACTinF,EAAgBv/F,IAAAsY,GAAW,GhEtxBnC2mD,GAF2B/+D,EgE0xBtBoY,IhEvxB4B,aAAhCpY,EAAuBq/D,MACxB5hE,MAAMwB,QAASe,EAAuBo/D,egEsxBvBt/D,IAAe+3D,EAAQkM,UAAA3rD,IAAA,GAEjC2mD,GAAA3mD,IAAAA,EAAApC,SAAUtD,IAAgB0F,MAI/B,KAAC0M,QAAA3lB,SAAA,SAAAs4D,EAAAo3B,GAEG,IAACwK,EAAQ5hC,EAAAuhC,gBAA0C/pE,EAASwoC,EAAAxoC,YAAvBoqE,EAAE,CACrC,GAAK,QAADkF,EAEJ,YADEz5E,EAAOhlB,IAAK+uF,EAAQwK,GAGxB,IAACrK,EAAAqK,EAAArK,UAGC,GAEI,YALLqK,EAAAhlE,QAAAi6D,aAQY,WAAXiQ,IAAyBlF,EAAAxG,eACzB,QAGD,WAAA0L,GAGCvP,GAAYqQ,EAAQl9F,IAAA6sF,IACnB//D,GAASowE,EAAqBl9F,IAAI8sB,MACnCnK,EAAChlB,IAAQ+uF,EAAIwK,GAEbrK,GACIqQ,EAASv/F,IAAAkvF,GAAA,GAAE//D,GACXowE,EAAQv/F,IAAAmvB,GAAA,QAGfqwE,EAAA52E,MAEC42E,EAAmBngG,SAAO,SAAAk1B,GAI1B,IAAAw6D,EAAAt2B,EAAA,sBACMw1B,EAAUl2B,EAAA0nC,SAAa1Q,GAAAoK,KAAA,CACvBhqE,SAASoF,EAAQre,MACrBovD,UAAU/wC,EAAQ+wC,YAEjBi0B,EAAA,IAAAvL,GAAA,CACGlrB,aAAS/K,EACbk2B,UAAAA,EACA15D,QAASqhC,EAAAA,EAAA,GAAArhC,GAAA,CAAAi6D,YAAA,qBAKR+K,EAAAxK,UAAAA,GACHd,EAAU2E,mBAAe2G,GACzBv0E,EAAAhlB,IAAU+uF,EAAAwK,OAGb,IAAA36F,WAAA86D,SAAA6lC,EAAA32E,MAEG22E,EAAWlgG,SAAA,SAAyBqgG,EAAAC,GACtCD,IACkB,IAAZ9gG,WAAW86D,SAACzB,EAAAtoD,KAAA,kBAAAgwF,EAAA,MAAAA,WASnB9hG,UAAA+hG,yBAAA,SAAAC,GAED,IAAA9nC,EAAO,UACR,IAAA8nC,IAAAA,GAAA,GAEM,IAAAC,EAAA,UAAP,KAAAR,qBAsBCO,EAAA,gBAAAxgG,SAAA,SAAA65F,EAAAnK,GArBC,IAAAP,EAAA0K,EAAA3kE,QAAAi6D,YAEM0K,EAAAzI,oBAEDoP,GAEuB,YAAhBrR,GAAuC,eAAPA,IACxCsR,EAAgB3+F,KAAgB+3F,EAAGtI,aAGhC6O,SAAA1Q,GAAgB2K,QAAS,cAG3B2D,mBACD/9F,QAAKoL,IAASo1F,MAIbjiG,UAAA+0F,mBAAmB,SAAAsG,GAExB,KAAAuG,SAAcvG,EAAKnK,SAAA6D,mBAAyBsG,EAC9C,EAEOiC,EAAAt9F,UAAAm0F,yBAAP,SAA0Br6B,GACxB,IAAII,EAAC,KACN7hD,EAAAyhD,EAAAzhD,MAAAs4E,EAAA72B,EAAA62B,YAAA/rB,EAAA9K,EAAA+iC,YAAAA,OAAA,IAAAj4B,EAAA,OAAAA,EAAA6C,EAAA3N,EAAA2N,UAAA3C,EAAAhL,EAAAnhB,QAAAA,OAAA,IAAAmsB,EAAA,GAAAA,EAEMzsD,EAAA,KAAA+tD,UAAA/tD,GAAPovD,EAAA,KAqEC03B,aAAA9mF,EAAAovD,OApECy6B,EAAK,SACLz6B,GAKA,OAAQvN,EAAKulC,sBAAiBpnF,EAAAsgC,EAAA8uB,GAAAxjE,KAAA,SAAAkW,GACb,aAALw2E,IAIJiM,GAAgBziF,EAAa0iF,IAC/B3iC,EAAA1jD,MAAAgqF,MAAA,CACAnoF,MAAAA,EACI8B,OAAAA,EAAkB6V,KACpB+vE,OAAW,oBACTt4B,UAAKA,8BAKT06B,EAACtV,GAAA1yE,GAEDioF,E5C38BJ,SACJjoF,GAEA,QAAIA,EAAOwxD,YACF7rE,MAAMwB,QACV6Y,EAA8CwxD,WAC7CyJ,IAKR,C4Cg8BeitB,CAAmBloF,GAC1B,GAACgoF,GAAAC,EAAA,CAEK,IAAAxsB,EAAY,GAWhB,GAVIusB,IACFvsB,EAASN,cAAIn7D,EAAoBy7D,QAE/BwsB,IACFxsB,EAAOL,eAAgBp7D,EAAOwxD,WAAOyJ,KAMvC,SAAAynB,GAAAuF,EACA,UAAA/sB,GAAAO,GAOF,MAJc,qBACXz7D,EAAAy7D,OAGCz7D,cAIJ+qD,gBAAc7sD,GAAAi7D,iBAAA,CAChB,IAAEgvB,EAAA,KAAA7E,WAAChF,qBAAApgF,EAAAovD,EAAA9uB,GAEIxwC,KAAA+5F,GACP,OAAM,IAAA3jC,IAAA,SAAyBW,OAC5B0tB,EAAA,KAGH,SAFsBzkF,MAAE,SAAA8kB,GAAA,OAAA2/D,EAAA3/D,EAAAlW,UAAAmoD,EAAA,GAAAA,EAAAvlD,OAEb,WAA2B,OAACizE,GAAAA,EAAQ33E,aAAA,cAMtCwyD,MAEVznE,UAAAo2F,UAAA,SAAAlF,GAED,KAAAkN,qBAAsBlN,GACvB,KAAAsO,kBAEM,IACAx/F,UAAAo+F,qBAA8B,SAAAlN,GACnCxwF,KAAK4gG,4BAAmBpQ,GACzB,KAAAK,YAAAL,EAEO,IACDlxF,UAAAuxF,YAA4B,SAASL,GAO1C,KAAAyM,eAAA/nF,OAAAs7E,GACA,KAAA/pE,QAAA3iB,IAAA0sF,KACA,KAAA0Q,SAAA1Q,GAAA34E,OACI,KAAC4O,QAAAvR,OAAes7E,OAGblxF,UAAQw/F,iBAAgB,WAC9B,KAAAhC,aACF,KAAAA,cAEM,KAAAr2E,QAAA3lB,SAAA,SAAAmkF,GAAP,OAAAA,EAAAoI,QAAA,OAC6B/tF,UAAAuiG,cAAc,WACzC,OAAK,KAAO9E,UACd,EAEOH,EAAAt9F,UAAAy/F,sBAAP,SAAApnF,EAAAsgC,EAAA8uB,EAEA+6B,GAQQ,IAIN1oC,EAJF7sC,EAAQitC,EAAA,UAMmB,IADzBsoC,IACyBA,EAAA,QAAA1oC,EAAA,OAAAnhB,QAAA,IAAAA,OAAA,EAAAA,EAAA4kD,0BAAA,IAAAzjC,EAAAA,EAAA,KAAAyjC,kFADzB,GAAAjF,EAAA,CAGI,IAAmDmK,EAAnD,KAAmDzE,wBAAA9hE,EAAnD,KAAmDA,KAEjDylC,EAAoC,CACtCtpD,MAAWigF,EACP7wB,UAAEA,EAEFmE,cAAYzB,GAAAmuB,SAAA,EAChB3/C,QAAO,KAAA4/C,eAAWxgC,EAAAA,EAAA,GAAApf,GAAA,CAAA+pD,YAAAF,WAElB7gC,EAAehpB,QACf6pD,EAAc,CAId,IAAAG,EAAAj+B,GAAA4zB,GAEKsK,EAAa/9B,GAAQ4C,GAExBuhB,EAAAyZ,EAAgBt8B,OAAAw8B,EAAAC,GAElB,KADA31E,EAAM+7D,EAAA/7D,YACU,CAEV,IAAA6oE,EAAQ,IAAApI,GAAA,CAKd10E,GAAakjB,EAAMylC,KAEjB10C,EAAa+7D,EAAO/7D,WAAQ6oE,IAC1BzH,YAAc,WACboU,EAAAvpF,OAAAypF,EAAAC,EACH,UAKF31E,EAAC,IAAAygE,GAAA,CACF10E,GAAAkjB,EAAAylC,UAID10C,EAAC,IAAAygE,GAAA,CAAAnvB,GAAA7tB,GAAA,CAAA1gB,KAAA,OACF2oB,EAAA,KAAA4/C,eAAA5/C,UACC0/C,IACAprE,EAAUo/D,GAAKp/D,GAAe,SAAS9S,GACxC,OAAA+/C,EAAAujC,WAAA1F,aAAA,CAEGzmE,SAAc+mE,EAChBL,aAAsB79E,EACpBw+B,QAAYA,EACV8uB,UAAUA,aAMfznE,UAAA6iG,mBAAA,SAAAzS,EAAAuM,EAAAjmE,GAED,IAAAosE,EAAiB1S,EAAC+K,cAAA,KAAAiG,oBAalB2B,EAAA,KAAAvsF,MAAA0oF,iBAAAxoE,EAAAre,OACA,OAAAg0E,GAAA,KAAAoT,sBAAAsD,EAAArsE,EAAAiiB,QAA0EjiB,EAAA+wC,YAAA,SAAAttD,GAC1E,IAAAm7D,EAAAwX,GAA0B3yE,GACpBgoF,EAAe7sB,EAAW/0E,OAAA,EAW5B,GAAMuiG,GAAY1S,EAAA+K,cAAyB,CAE3C,GAAAgH,GAAA,SAAAzrE,EAAAmmE,YAEI,MAASzM,EAAI8M,UAAU,IAAA7nB,GAAgB,CACrCC,cAAaA,KAQjB8a,EAAAsM,WAAAviF,EAAA4oF,EAAArsE,EAAAimE,GACAvM,EAAA6M,gBAEA+F,EAAA,CAMAhzE,KAAA7V,EAAU6V,KACX4hE,SAAA,EAEKpD,cAAgCf,GAAA/kE,cAEpCy5E,GAAc,WAALzrE,EAAKmmE,cACdmG,EAAAptB,OAAaN,EACb0tB,EAAAxU,cAAAf,GAAA9zE,OAGGqpF,cACCvtB,GACN,IAAC97D,EAAA87D,E5ClpCIx1E,eAAe,iB4CkpCnBw1E,EAAA,IAAAJ,GAAA,CAAAI,aAAAA,IAYD,MAPFqtB,GAAC1S,EAAY+K,eACL/K,EACJ8M,UAAAvjF,GAKEA,QAIJ3Z,UAAY+gG,qBAAA,SAAA7P,EAAAx6D,EAQhB83D,EAAAn2E,GACA,IAAA6hD,EAAA,UACmB,IAAnBs0B,IAAmBA,EAAAf,GAAAmE,cAEnB,IADAv5E,IACqBA,EAAAqe,EAAAre,OAPvB,IAkEIy9E,EAAAmN,EAlEJx7B,EAAA,KA4GC03B,aAAA9mF,EAAAqe,EAAA+wC,WAtGC2oB,EAAA,KAAAwR,SAAA1Q,GACAgS,EAAA,KAAArS,eAAQC,WAEFh3B,EAAApjC,EAAYi6D,YAAKA,OAA4B,IAAR72B,EAA4BopC,GAAAA,EAAAvS,aAAA,cAAA72B,EAAA8K,EAAAluC,EAAAmmE,YAAAA,OAAA,IAAAj4B,EAAAs+B,GAAAA,EAAArG,aAAA,OAAAj4B,EAAAE,EAAApuC,EAAAs7D,kBAAAA,OAAA,IAAAltB,GAAAA,EAAAQ,EAAA5uC,EAAA88D,4BAAAA,OAAA,IAAAluB,GAAAA,EAAA76D,EAAAisB,EAAAiiB,QAAAA,OAAA,IAAAluC,EAAA,GAAAA,EACjE04F,EAAYxjG,OAAKS,OAAS,GAAAs2B,EAAS,CAEnCre,MAAAA,EAEJovD,UAKEA,EAEEkpB,YAAaA,EACjBkM,YAAKA,EACL7K,kBAASA,EACTwB,4BAAWA,EACX76C,QAAAA,IAEAyqD,EAAA,SAAA37B,GAKA07B,EAAA17B,UAAAA,EACA,IAAA47B,EAAAnpC,EAAAopC,mBAAAlT,EAAA+S,EAAmE3U,SAUnE,YAAA2U,EAAAxS,aAGE0S,EAAWjjC,QAAgB7/D,OAAS,GACpC6vF,EAAAiL,iBACAjL,EAAAiL,gBAAA,mCAA+D3kE,GAE/D2sE,GASFE,EAAA,kBAAArpC,EAAAyjC,eAAA/nF,OAAAs7E,EAAA,EAiBF,GAfA,KAAAyM,eAAAx7F,IAAA+uF,GAAA,SAAAxjF,GACA61F,IAEIngG,YAAC,WAAmB,OAAS0yF,EAAC7H,OAAMvgF,EAAA,OAYxC,KAAAw3D,gBAAAi+B,EAAA9qF,OAAAi7D,iBACAwiB,EAAA,IAAApI,GAAA,KAAA+P,WACAhF,qBAAA0K,EAAwC9qF,MAAA8qF,EAAA17B,UAAA07B,EAAAxqD,SAC/BxwC,KAAAi7F,GACPj7F,MAAU,SAAIk7F,GACG,OAAAA,EAAAjjC,OAAA,KAWjB6iC,GAAA,MAEA,CACA,IAAAI,EAAoBD,EAAQD,EAAA17B,WAC7Bw7B,EAAAI,EAAAtN,WAAO,IAAArI,GAAA2V,EAAAjjC,kBAEN70C,QAAApjB,KAAAo7F,EAAuBA,GACvB,CACDzN,QAAAA,EAEDC,SAAQkN,MAINjjG,UAAUy+F,eAAoB,SAAA3kC,OAC9BI,EAAA,KACHqmC,EAAAzmC,EAAAymC,YAAAK,EAAA9mC,EAAA8mC,QAAAh8B,EAAA9K,EAAAqxB,WAAAA,OAAA,IAAAvmB,GAAAA,EAAAE,EAAAhL,EAAA8lC,iBAAAA,OAAA,IAAA96B,EAAAqmB,EAAAvwB,EAAA,yBAAAkK,EAAA85B,EAAA9kC,EAAA8kC,eAEM4E,EAAA,IAAA73E,IAAPi1E,GACE,KAAAa,qBAAWb,GACXp/F,SAAO,SACPk6F,EAAAxK,GAOMsS,EAAsBrhG,IAAI+uF,EAO5B,CAEOwK,GAAGA,EACPH,SAAArhC,EAAA0nC,SAA4B1Q,GAASa,qBAIrC,IAAApmE,WACL40E,GACD,KAAA/pF,MAAAo9E,MAAA,CAEKp+E,OAA8C+qF,EAgChDpV,WAAAA,GAAAyU,IAAA,EASAA,iBAAAA,EACA7L,eAAA,SAAAC,EAAAlC,EAAAyJ,GACA,IAAAG,EAAA1H,EAAAoI,mBAAAlB,IAAAlH,EAAyDoI,QAAAf,gBACzD,GAAAK,EAAA,CAEA,GAAAkD,EAAe,CAMT4E,EAAA5tF,OAAA8lF,EAAAxK,SACA,IAAA/2E,EAAAykF,EAAAlD,EAAA5J,EAAAyJ,GAoBA,OAnBA,IAAAphF,IAMIA,EAAMuhF,EAAK3I,YAId,IAAA54E,GAED/D,EAAAjU,IAAAu5F,EAAAvhF,GAOCA,EAGD,OAAAykF,GAKA4E,EAAArhG,IAAAu5F,EAAAxK,QAAA,CAAAwK,GAAAA,EAAAH,SAAAA,EAAkEzJ,KAAAA,UAMvE/mE,QACAvpB,SAAA,SAAAs4D,EAAAo3B,GACJ,IAEG/2E,EAFHuhF,EAAA5hC,EAAA4hC,GAAAH,EAAAzhC,EAAAyhC,SAAAzJ,EAAAh4B,EAAAg4B,KAIG,GAAI8M,EAIU,CAEd,IAAA9M,EAAA,CACA,IAAAnM,EAAA+V,EAAA,UACI/V,EAAA7e,QACEgrB,EAAOnM,EAACoM,YAEL6M,EAASlD,EAAA5J,EAAAyJ,GAGhBqD,IAA4B,IAAnBzkF,IACVA,EAAAuhF,EAAA3I,YAGI,IAAD54E,GACF/D,EAAMjU,IAAMu5F,EAAAvhF,GAGV+2E,EAAM3tF,QAAU,uBAAG,GACrB22D,EAAAkkC,qBAAiElN,SAcrE,KAAA16E,MAAAopF,iBAAAA,GAEAxpF,KAEDpW,UAAAsjG,mBAAA,SAAAlT,EAAAt2B,EAiBD00B,GACA,IAAAt0B,EAAA,KACA7hD,EAAAyhD,EAAmBzhD,MAAAovD,EAAA3N,EAAA2N,UAAAkpB,EAAA72B,EAAA62B,YAAA8S,EAAA3pC,EAAA2pC,mBAAA5G,EAAA/iC,EAAA+iC,YAAA7K,EAAAl4B,EAAAk4B,kBAAAr5C,EAAAmhB,EAAAnhB,QAAA66C,EAAA15B,EAAA05B,4BACnBkQ,EAA4BtT,EAAA5B,cAf9B4B,EAAAkL,KAAA,CAGIhqE,SAAKjZ,EAcDovD,UAAAA,EAEN+mB,cAAeA,QAEbmV,EAAS,kBAAAvT,EAAA2B,SAAA,EACT6R,EAAa,SAAA9R,EAAAtD,QACZ,IAAAA,IAAAA,EAAA4B,EAAA5B,eAAAf,GAAAmE,SAEG,IAAA5hE,EAAS8hE,EAAG33E,QAEO,IAAnBpZ,WAAA86D,SAEJm2B,GAAgE/M,GAAAj1D,EAAA,KAAhEmiE,GAAAL,EAAAM,SAIA,IAAIyR,EAAW,SAAC7zE,GACd,OAAAuuC,GAAA7tB,GAAqBqnB,EAAM,CAAA/nC,KAASA,EAAA4hE,QAAArD,GAAAC,GAAAA,cAAAA,GAAAsD,EAAAhlE,SAAA,MAAAmlE,SAAA,IACtC,EAEA,OAAMjiE,GAAQkqC,EAAGgL,gBAAwB7sD,GAAAw5E,mBACvC33B,EAAAujC,WAK+B1F,aAAA,CAEzBzmE,SAASjZ,EACf2/E,aAAY,CAAAhoE,KAAUA,WACnB2oB,EACC8uB,UAAUA,EACVwwB,wBAAoB,IAEpB9vF,MAAA,SAAS2sE,GAAA,OAAA+uB,EAAA/uB,EAAA9kD,WAAA,MAOf,SAAA6sE,GACArO,IAAAf,GAAAsF,SACAjzF,MAAAwB,QAAAwwF,EAAAM,SAEEyR,OAAgB,GAEhBA,EAAM7zE,IAGR2sE,EAAC,aAAAhM,EAAA,EAKGnC,IACJf,GAAWsF,SACT,UAAA0Q,EACA,EAEA,IACA,4CAGFprF,MAACA,EAEGovD,UAAeA,EACnB9uB,QAAKA,EACHg4C,YAAKA,EACLkM,YAASA,OAGErJ,GACX,kBAAAkQ,GAACA,IAAAlV,GAECD,GACJC,UACAmC,GACA,QACA,kBAGA,OADMmB,EAAW6R,KACT72E,SACH,CACOipE,UAAG,EAEL31B,QAAS,CAAAwjC,EAAG9R,EAAA1B,EAAA6M,kBAGNf,EACV,CACHnG,UAAA,EAEG31B,QAAA,CAAAwjC,EAAqB9R,GAAegS,OAGpC/N,UAAU,EAAA31B,QAAgB,CAAC0jC,UAE9B,oBAED,IAAAhS,EACD,OADCA,EAAS6R,KACV72E,UAAAklE,GAAAkK,EAEI,CACOnG,UAAG,EAEL31B,QAAS,CAAAwjC,EAAI9R,GAAqBgS,OAGtC/N,UAAU,EAAA31B,QAAgB,CAAC0jC,UAE9B,aAED,MAAO,CACR/N,UAAA,EAEI31B,QAAY,CAAAwjC,EAAAD,IAAAvT,EAAA6M,yCAGbf,EACA,CAECnG,UAAc,EACb31B,QAAY,CAAEwjC,EAACD,KAAAG,OAGf/N,UAAU,EAAA31B,QAAgB,CAAC0jC,qBAE/B,OAAC5H,EAEQ,CAENnG,UAAU,EAIT31B,QAAA,CAAAwjC,EAAAxT,EAAA2B,WAAA+R,OAGA/N,UAAU,EAAA31B,QAAgB,CAAC0jC,oBAE/B,MAAC,CAAA/N,UAAA,EAAA31B,QAAA,QAKDpgE,UAAS4hG,SAAU,SAAO1Q,GAK9B,OAJCA,IAAA,KAAA/pE,QAAA3iB,IAAA0sF,IACF,KAAA/pE,QAAAhlB,IAAA+uF,EAAA,IAAAgK,GAAA,KAAAhK,IAGK,KAAO/pE,QAASjlB,IAACgvF,MAEpBlxF,UAAAu4F,eAAA,SAAA5/C,QACW,IAAZA,IAAwBA,EAAU,IACnC,IAAAorD,EAAA,KAAAtG,WAAAlF,eAAA5/C,GAEO,OAAAof,EAAAA,EAAAA,EAAe,CAAD,EAAtB,KAAA2lC,gBAAmCqG,GAAA,CAAAthB,gBAAA,KAAAA,mBACjC6a,EA5iDJ,GC7FM,SAAU0G,GAIdd,EACAxsE,GAEA,OAAO+3D,GACLyU,EACAxsE,EACAA,EAAQ+wC,WAAa,CACnBA,UAAWgnB,GAAO12B,EAAAA,EAAC,CAAC,EACdmrC,GAAYA,EAASz7B,WACtB/wC,EAAQ+wC,aAInB,CCYA,IAAIw8B,IAAuB,EAmG3BC,GAAA,WAyCE,SAAAA,EAAYxtE,GAAZ,IAAAwjC,EAAA,KACE,GA/BM,KAAAiqC,oBAAiD,GACjD,KAAAC,oBAAiD,IA8BlD1tE,EAAQlgB,MACX,MAAMglD,EACJ,UAEE9kC,EAAAgrD,IAAA1D,EAAAtnD,EAAAsnD,YAAAN,EAAAhnD,EACFgnD,QAAAlnE,EAAAkgB,EAAAlgB,MAAA6uD,EAAA3uC,EAAA2uC,kBAAAvL,EAAApjC,EAAAs+D,QAAAA,OAAA,IAAAl7B,GAAAA,EAAA8K,EAAAluC,EAAA2tE,mBAAAA,OAAA,IAAAz/B,EAAA,EAAAA,EAYFE,EAAApuC,EAAA4tE,kBAAAA,OAAA,IAAAx/B,EAAA,kBAAA7jE,SACAA,OAAAsjG,oBACiB,IAAjBxjG,WAAA86D,QAAiBiJ,EAAGQ,EAAO5uC,EAAM6mE,mBAAaA,OAAA,IAAAj4B,GAAAA,EAAAurB,EAAAn6D,EAAAm6D,eAAA6M,EAAAhnE,EAAAgnE,eAAAjzF,EAAAisB,EAAA6+D,uBAAAA,OAAA,IAAA9qF,EAAA+L,EAAA++E,uBAAA9qF,EAAA8sF,EAAA7gE,EAAA6gE,UAAAiN,EAAA9tE,EAAA8tE,SAAAhN,EAAA9gE,EAAA8gE,gBAAAiN,EAAA/tE,EAAAzwB,KAAAy+F,EAAAhuE,EAAA5T,QAC5CoZ,EAAgBxF,EAACwF,KACjBA,IAYEA,EAEDwlD,EAAO,IAAAoD,GAAA,CAAApD,IAAAA,EAAA1D,YAAAA,EAAAN,QAAAA,IAAAvS,GAAAE,mBAEJnvC,EACR,KAAC1lB,MAAAA,EAED9V,KAAKikG,sBAAY3P,GAAAqP,EAAA,EACjB3jG,KAAK68F,mBAAcA,EACnB78F,KAAKmwF,eAAAA,GAAmClxF,OAAA6C,OAAA,MACxC9B,KAAK8jG,SAAAA,EACDH,GACAjhG,YAAS,WAAY,OAAA82D,EAAAyqC,uBAAA,IAAAN,QAGvBvT,WACE,KAAAA,WAAMpuF,KAAChC,MAGX,KAAC2X,MAAA,KAAAA,MAAA3V,KAAA,MAEDhC,KAAK0U,OAAA,KAAaA,OAAK1S,KAAA,MACvBhC,KAAKkkG,cAAa,KAAMA,cAAWliG,KAAA,MACnChC,KAAKmkG,WAAa,KAACA,WAAYniG,KAAM,MACrChC,KAAKqhG,yBAAqB,KAAAA,yBAAyBr/F,KAAA,MACnDhC,KAAKoiB,QAAUA,EACfpiB,KAAK+8F,WAAA,IAAAnG,GAA2B,CAE5B9gF,MAACA,EAEDomD,OAAC,KACH26B,UAAKA,EACLC,gBAAYA,SAEZvyB,aAAe,IAAAq4B,GAAA,CACd9mF,MAAA,KAAAA,MAEC0lB,KAAC,KAAAA,KACH20D,eAAY,KAAKA,eACjB6M,eAAeA,EACfr4B,kBAAgBA,EAChBk4B,mBAAcA,EACdvI,QAAAA,EACAvS,gBAAA,CACAx8E,KAAOw+F,EACP3hF,QAAA4hF,cAES,KAAEjH,kCACVlI,EACDiI,YAAY8G,EACZ,WACWpqC,EACT4qC,gBACE5qC,EAAA4qC,eAAC,CACKloD,OAAK,GACP0E,MAAK,CACHn6B,QAAU+yC,EAAA+K,aAAA+7B,gBACV+D,UAAO7qC,EAAA+K,aAAAi5B,eAAA,8BAEWhkC,EAAY1jD,MAACwuF,SAAa,kBAOrD,KAAAV,6BAEyBtkG,UAAAskG,kBAAoB,WACjD,qBAAArjG,OAAA,CAEO,IAAAgkG,EAAAhkG,OACFikG,EAAkBpgG,OAAUkuB,IAAC,oBAI/BiyE,EAAMC,GAIAD,EAAiBC,IAAW,IAAA5hG,KAAmB,MACrD2hG,EAAmBV,kBAAgB,mCASlCN,IAAA,EACC7gG,YAAC,WACH,GAAuB,qBAAvBnC,QACAA,OAAWqwB,UAEPrwB,OAAOmuC,MAAMnuC,OAAKD,OAClBC,OAAOkkG,iCACP,mBAAe18F,KAAOxH,OAAIuH,SAAA48F,UAAA,CAC1B,IAAEC,EAAepkG,OAAA6gB,UACjB+Q,EAAAwyE,GAAAA,EAAmBtjF,UAEbmrB,OAAM,EACM,kBAAPra,IACJA,EAAAtvB,QAAqB,cACxB2pC,EACK,yGAGH3pC,QAAA,iBACH2pC,EAAM,2EAGPA,IACD,IAAAnsC,WAAA86D,SAAAzB,EAAAl5B,IAAA,uEACSgM,oBASfjrC,eAAAiiG,EAAAlkG,UAAA,oCAOA,YAAAilE,aAAAI,+BAEM,EACTjjE,cAAC,gCAKE,KAAA6iE,aAAA1sD,MACI,4CAsBJ,KAAAs4E,eAAAC,aACIp6D,EAAAstE,GAAA,KAAPnT,eAGEC,WAAyCp6D,KAGxC,KAAAiuE,uBAED,iBAAAjuE,EAAAi6D,aAE4B,sBAAtBj6D,EAACi6D,cACLj6D,EAASqhC,EAAAA,EAAgB,GAAArhC,GAAc,CAAAi6D,YAAA,iBAGvC,KAAO1rB,aAAA6rB,WAAQp6D,yCAchB,KAAAm6D,eAAAx4E,QACIqe,EAAAstE,GAAP,KAAAnT,eAGsCx4E,MAAAqe,MAEN,sBAA5BA,EAAUi6D,YAAwC,IACnD,KAAAgU,uBAAA,iBAAAjuE,EAAAi6D,cAEDj6D,EACGqhC,EAAQA,EAAqC,GAAKrhC,GAAA,CAAAi6D,YACnD,iBAEE,KAAA1rB,aAAA5sD,MAAAqe,mCAkBH,6EAAAuuC,aAAA7vD,OAAAshB,EACI,EAcPwtE,EAAClkG,UAAA+W,UAAA,SAAA2f,GAED,YAAAuuC,aAAAkvB,yBAAAz9D,sQA0EAwtE,EAAAlkG,UAAA8zF,WAAA,SAAAp9D,kCAKO,6DAAA1sB,2EAuBA,6DAAAA,KAKDhK,UAAQslG,wBAAsB,SAAAhvE,QAChCwuE,eAAkBxuE,KAGbt2B,UAAIulG,aAAA,SAAAxrD,GACZ,OAAA/gC,GAAA,KAAAkjB,KAAA6d,EAEM,yFAuBJ,OAAAmgB,EAAA+K,aAAAs8B,WAAA,CACIC,gBAAA,GACL,IACGr5F,MAAK,kBAAA1G,QAAAoL,IAAAqtD,EAAAiqC,oBAAAlgG,KAAC,SAADsf,GAAA,OAAAA,GAAA,QACJpb,MAAA,WAAK,OAAa+xD,EAAA6nC,0BAAW,KAMnCmC,EAAClkG,UAAAuhG,WAAA,WAED,IAAArnC,EAAA,+CAGG,OAAAA,EAAA+K,aAAAs8B,WAAA,CACIC,gBAAA,GACL,IACGr5F,MAAK,kBAAA1G,QAAAoL,IAAAqtD,EAAAkqC,oBAAAngG,KAAC,SAADsf,GAAA,OAAAA,GAAA,SAQV2gF,EAAAlkG,UAAAwlG,aAAA,SAAAlvE,iEAIG4jC,EAAAiqC,oBAAAjqC,EAAAiqC,oBAAAjgG,QAAA,SAAAxC,GAAA,OAAAA,IAAA40B,CAAA,GACI,GASP4tE,EAAAlkG,UAAAylG,aAAA,SAAAnvE,iEAIG4jC,EAAAkqC,oBAAAlqC,EAAAkqC,oBAAAlgG,QAAA,SAAAxC,GAAA,OAAAA,IAAA40B,CAAA,GACI,qMAqCJryB,EAAAzC,SAAA,SAAA2Y,EAAAk8E,GACIlvE,EAAA7jB,KAAA+yF,GAMCjgF,EAAM9S,KAAK6W,EAGjB,IACA,IAAMA,EAAO1Y,QAA+CoL,IAAAuJ,GAiB5D,SAbE+Q,QAAaA,EACfhN,EAAG/D,QAAAA,EAQH+D,EAAO5N,OAAA,SAAUoN,IACQ,IAAzB5Y,WAAc86D,SAAWzB,EAAA91C,MAAA,GAAA3K,EAEzB,IACAQ,6HA0BOna,UAAKglG,QAAa,SAAA7Z,GAC1B,YAAA30E,MAAAwuF,QAAA7Z,EAED,kEAeSnrF,UAAW03F,aAAQ,SAAiBH,GAC5C,KAAAkG,WAAA/F,aAAAH,EAED,IAIOv3F,UAAW63F,aAAa,SAAWN,GACzC,KAAAkG,WAAA5F,aAAAN,EAED,IAIOv3F,UAAW83F,aAAa,WAC9B,YAAA2F,WAAA3F,cAED,IAIS93F,UAAK0lG,6BAA0B,SAAAlO,GACvC,KAAAiG,WAAA9F,mBAAAH,EAED,IAIOx3F,UAAW2lG,QAAA,SAAmBC,GACpC,KAAA1pE,KAAA,KAAA+oC,aAAA/oC,KAAA0pE,CAED,sDAEG1jG,IAAA,WACI,YAAA+iE,aAAPy4B,cACE,EACD9oF,YAAA,EAEDxS,cAAA,MAloBF,gCAooBGpC,UAAAulE,mBAAAjB,IC/qBH,IAAAuhC,GAAA,oBAAAA,IACkB,KAAAtQ,wBAAkC,EAmL1C,KAAAuQ,eAAiB7qC,GAAKoG,GAA0B,CACtD/6C,IACE49C,GAAW,iCAA+B,IAE5C1tD,MAAOqsD,IAkFX,QAnNSgjC,EAAA7lG,UAAA4zF,MAAP,SAAgBl9D,GAAhB,IAKMqvE,EALN7rC,EAAA,KACQ8rC,EAC0B,kBAAvBtvE,EAAQy0D,WAA0Bz0D,EAAQy0D,YACxB,IAAvBz0D,EAAQy0D,WAAuB,UAC/B,EAMJ,OAJAzqF,KAAKo8F,oBACH,WAAM,OAACiJ,EAAervE,EAAQlhB,OAAO0kD,EAA/B,GACN8rC,GAEKD,CACT,EAcOF,EAAA7lG,UAAA6gG,4BAAP,SACE/hF,EACAknF,GAEAtlG,KAAKo8F,mBAAmBh+E,EAAaknF,EACvC,EAMOH,EAAA7lG,UAAA+rF,kBAAP,SAAyBz6D,GACvB,OAAOA,CACT,EAIOu0E,EAAA7lG,UAAAk/F,iBAAP,SAAwB5tE,GACtB,OAAOA,CACT,EAEOu0E,EAAA7lG,UAAAw4F,SAAP,SAAgBvrB,GAEhB,EAEO44B,EAAA7lG,UAAAogC,GAAP,WACE,MAAO,EACT,EAEOylE,EAAA7lG,UAAAyV,OAAP,SACEihB,GAEA,OAAO,CACT,EAGOmvE,EAAA7lG,UAAAimG,UAAP,SACEvvE,EACAy0D,GAEA,YAFA,IAAAA,IAAAA,IAAez0D,EAAQy0D,YAEhBzqF,KAAK2zE,KAAItc,EAAAA,EAAC,CAAC,EACbrhC,GAAO,CACVwvE,OAAQxvE,EAAQ3sB,IAAM,aACtBohF,WAAUA,IAEd,EAGO0a,EAAA7lG,UAAA4kG,cAAP,SACEluE,GADF,IAaMyvE,EAbNjsC,EAAA,KAGU4H,EAAoDprC,EAAOorC,SAAjDR,EAA0C5qC,EAAO4qC,aAAnC/+D,EAA4Bm0B,EAAOn0B,KAA7Bu3D,EAAsBpjC,EAAOy0D,WAA7BA,OAAU,IAAArxB,GAAOA,EACjDzhD,EAAQ3X,KAAKolG,eAAehkC,EAAUR,GAEtC07B,EAA+C,CACnDhL,mBAAmB,EACnBjoF,GAAoB,kBAATxH,EAAoBA,EAAO7B,KAAK83F,SAASj2F,GACpD8V,MAAKA,EACL8yE,WAAUA,GAKZ,OAAO,IAAI5sB,IAAW,SAACW,GACrB,OAAOhF,EAAK85B,MAAKj8B,EAAAA,EAAA,GACZilC,GAAW,CACdoJ,WAAW,EACXpsD,SAAQ,SAAC83C,GACP,IAEEqU,IACAlX,GACE52E,EACA,CAAE2X,KAAgB,OAAVm2E,QAAU,IAAVA,OAAU,EAAVA,EAAYhsF,QACpB,CAAE6V,KAAM8hE,EAAK33E,SANjB,CAYA,IAAMA,EAAS,CACb6V,KAAM8hE,EAAK33E,OACX2S,WAAYglE,EAAKhlE,UAGfglE,EAAKM,UACPj4E,EAAOi4E,QAAUpc,GACf8b,EAAKM,QAAQnuF,KAAI,SAAC0V,GAAU,OAAAA,EAAMy4E,OAAN,MAIhC+T,EAAarU,EACb5yB,EAAS95D,KAAK+U,EAdd,CAeF,IAEJ,GACF,EAWO0rF,EAAA7lG,UAAAqmG,aAAP,SACE3vE,EACAy0D,GAEA,YAFA,IAAAA,IAAAA,IAAez0D,EAAQy0D,YAEhBzqF,KAAK2zE,KAAItc,EAAAA,EAAC,CAAC,EACbrhC,GAAO,CACVre,MAAO3X,KAAKolG,eAAepvE,EAAQorC,SAAUprC,EAAQ4qC,cACrD4kC,OAAQxvE,EAAQ3sB,GAChBohF,WAAUA,IAEd,EAEO0a,EAAA7lG,UAAA8zF,WAAP,SAAiDh6B,GAC/C,IAAA/vD,EAAE+vD,EAAA/vD,GACFimB,EAAI8pC,EAAA9pC,KACD0G,EAAOshC,EAAA8B,EAHqC,eAK/C,OAAOp5D,KAAK8/F,MACV7gG,OAAOS,OAAOs2B,EAAS,CACrBqpE,OAAQh2F,GAAM,aACdoQ,OAAQ6V,IAGd,EAEO61E,EAAA7lG,UAAAsmG,cAAP,SAAoDxsC,GAClD,IAAA/vD,EAAE+vD,EAAA/vD,GACFimB,EAAI8pC,EAAA9pC,KACJ8xC,EAAQhI,EAAAgI,SACRR,EAAYxH,EAAAwH,aACT5qC,EAAOshC,EAAA8B,EALwC,yCAOlD,OAAOp5D,KAAK8/F,MACV7gG,OAAOS,OAAOs2B,EAAS,CACrBre,MAAO3X,KAAKolG,eAAehkC,EAAUR,GACrCy+B,OAAQh2F,EACRoQ,OAAQ6V,IAGd,EAEO61E,EAAA7lG,UAAA6zF,YAAP,SACEn9D,EACAlhB,GAEA,OAAO9U,KAAKkzF,MAAM,CAChBp+E,OAAM,SAACgB,GACL,IAAMnU,EAAQmU,EAAMyvF,UAA6BvvE,GAC3C1G,EAAOxa,EAAOnT,GACpB,YAAa,IAAT2tB,GAA4B,OAATA,EAAsB3tB,GAC7CmU,EAAMs9E,WAAU/7B,EAAAA,EAAA,GAAyBrhC,GAAO,CAAE1G,KAAIA,KAC/CA,EACT,GAEJ,EAEO61E,EAAA7lG,UAAAumG,eAAP,SACE7vE,EACAlhB,GAEA,OAAO9U,KAAKkzF,MAAM,CAChBp+E,OAAM,SAACgB,GACL,IAAMnU,EAAQmU,EAAM6vF,aAAgC3vE,GAC9C1G,EAAOxa,EAAOnT,GACpB,YAAa,IAAT2tB,GAA4B,OAATA,EAAsB3tB,GAC7CmU,EAAM8vF,cAAavuC,EAAAA,EAAA,GAAyBrhC,GAAO,CAAE1G,KAAIA,KAClDA,EACT,GAEJ,EAUF61E,CAAA,CA1QA,IA4Qc,IAAV9kG,WAAU86D,UACZgqC,GAAY7lG,UAAUulE,mBAAqBc,ICrV7C,IAAAmgC,GAAA,SAAAvsC,GACE,SAAAusC,EACkBtgG,EACAsrE,EACAn5D,EACAovD,SAGhBvN,EAAAD,EAAK/5D,KAAC,KAAAgG,IAAQ,KAEd,GARgBg0D,EAAAh0D,QAAAA,EACAg0D,EAAAsX,KAAAA,EACAtX,EAAA7hD,MAAAA,EACA6hD,EAAAuN,UAAAA,EAKZ3nE,MAAMwB,QAAQ44D,EAAKsX,MAAO,CAC5BtX,EAAKk4B,QAAUl4B,EAAKh0D,QACpB,IAAK,IAAI1F,EAAI05D,EAAKsX,KAAKjxE,OAAS,EAAGC,GAAK,IAAKA,EAC3C05D,EAAKk4B,UAAOt4B,EAAG,CAAC,GAAEI,EAAKsX,KAAKhxE,IAAK05D,EAAKk4B,QAAOt4B,EAEjD,MACEI,EAAKk4B,QAAUl4B,EAAKsX,YAKrBtX,EAAar6D,UAAY2mG,EAAkBxmG,WAC9C,CAGF,OAzBuC63D,EAAA2uC,EAAAvsC,GAyBvCusC,CAAA,CAzBA,CAAuCvjG,OCzBvC,SAASwjG,GAAWpkG,GAClB,IAAMqkG,EAAU,IAAItiG,IAAI,CAAC/B,IAQzB,OAPAqkG,EAAQllG,SAAQ,SAACk0D,GACX0L,GAAgB1L,IASxB,SAAyCA,GACvC,IAAuB,IAAnB30D,WAAW86D,UAAqBl8D,OAAG+D,SAAAgyD,GACrC,IACE/1D,OAAO8qB,OAAOirC,EAChB,CAAE,MAAOj2D,IAIP,GAAIA,cAAa0H,UAAW,OAAO,KACnC,MAAM1H,EACR,CAEF,OAAOi2D,CACT,CAtBgCixC,CAAcjxC,KAASA,GACjD/1D,OAAOmV,oBAAoB4gD,GAAKl0D,SAAQ,SAACyE,GACnCm7D,GAAgB1L,EAAIzvD,KAAQygG,EAAQ3xF,IAAI2gD,EAAIzvD,GAClD,GAEJ,IACO5D,CACT,CAiBM,SAAUukG,GAAmBlxC,GAIjC,OAHc,IAAV30D,WAAU86D,SACZ4qC,GAAW/wC,GAENA,CACT,CCHe,IAAgBmxC,GAAWlnG,OAAOK,UAASC,eAEpD,SAAU6mG,GAAUzkG,GACxB,OAAiB,OAAVA,QAA4B,IAAVA,CAC3B,CAIM,SAAU0kG,GACdjtC,EACAnhB,OADEixB,EAAU9P,EAAA8P,WAAE7/D,EAAE+vD,EAAA/vD,GAAEi9F,EAAGltC,EAAAktC,IAGrB,GAA0B,kBAAfp9B,IACLjxB,IACFA,EAAQsuD,UACLH,GAAU/8F,GACR+8F,GAAUE,QACX,EADkB,CAAEA,IAAGA,GADR,CAAEj9F,GAAEA,IAMrB+8F,GAAU/8F,KAAQ+8F,GAAUE,KAC9Bj9F,EAAKi9F,IAGFF,GAAU/8F,IACb,MAAO,GAAAlJ,OAAG+oE,EAAU,KAAA/oE,OACJ,kBAAPkJ,GAAiC,kBAAPA,EAC/BA,EACA0J,KAAKC,UAAU3J,GAIzB,CAEA,IAAMm9F,GAAgB,CACpBC,iBAAkBJ,GAClBK,aAAa,EACbC,eAAe,EAGfzL,iBAAiB,GAOb,SAAU0L,GACd7hC,GAEA,IAAMpjE,EAAQojE,EAAOm2B,gBACrB,YAAiB,IAAVv5F,EAAmB6kG,GAActL,gBAAkBv5F,CAC5D,CAWO,IAAMklG,GAAwB,qBAE/B,SAAUC,GAAuBC,GACrC,IAAMzlF,EAAQylF,EAAezlF,MAAMulF,IACnC,OAAOvlF,EAAQA,EAAM,GAAKylF,CAC5B,CAEM,SAAUC,GACdj+B,EACAtvD,EACAstD,GAEA,QAAIrG,GAAgBjnD,KACX7Y,GAAQ6Y,GACXA,EAAO9G,OAAM,SAAC2tD,GACZ,OAAA0mC,GAA0Bj+B,EAAczI,EAAMyG,EAA9C,IAEFgC,EAAaC,WAAWr2D,OAAM,SAAC+1D,GAC7B,GAAIO,GAAQP,IAAUqJ,GAAcrJ,EAAO3B,GAAY,CACrD,IAAM70D,EAAM02D,GAAuBF,GACnC,OACEy9B,GAAO3mG,KAAKia,EAAQvH,MAClBw2D,EAAMK,cACNi+B,GACEt+B,EAAMK,aACNtvD,EAAOvH,GACP60D,GAGR,CAMA,OAAO,CACT,IAGR,CAEM,SAAUkgC,GACdtlG,GAEA,OAAO++D,GAAgB/+D,KAAWilE,GAAYjlE,KAAWf,GAAQe,EACnE,CAMM,SAAUulG,GACdt2E,EACAkwC,GAOA,IAAMS,EAAcL,GAAkBwI,GAAuB94C,IAC7D,MAAO,CACL2wC,YAAWA,EACX4lC,eAAc,SAAC5hG,GACb,IAAIse,EAAqC09C,EAAYh8D,GAIrD,OAHKse,GAAOi9C,IACVj9C,EAAMi9C,EAAU2E,OAAOlgE,IAElBse,GAAO,IAChB,EAEJ,CClIA,IAAMo8E,GAAyBhhG,OAAO6C,OAAO,MACvCslG,GAA6B,WAAM,OAAAnH,EAAA,EACnCoH,GAAiCpoG,OAAO6C,OAAO,MAErDwlG,GAAA,WAGE,SAAAA,EACkBC,EACAC,GAFlB,IAAAhuC,EAAA,KACkB,KAAA+tC,SAAAA,EACA,KAAAC,MAAAA,EAJR,KAAAl4E,KAA8BrwB,OAAO6C,OAAO,MAgY9C,KAAA2lG,QAEJxoG,OAAO6C,OAAO,MA0DV,KAAAy0C,KAEJt3C,OAAO6C,OAAO,MAkEX,KAAA4lG,cAAgB,SACrBC,EACAZ,GAEA,OAAAb,GACEt/B,GAAY+gC,GACVnuC,EAAKh4D,IAAImmG,EAAkBhhC,MAAOogC,GAClCY,GAAqBA,EAAkBZ,GAH3C,EASK,KAAAa,QAA2B,SAACC,GACjC,OAAOjhC,GAAYihC,GACfruC,EAAK11D,IAAI+jG,EAASlhC,OACE,kBAAbkhC,CACb,EAMO,KAAAC,YAAmC,SAACC,EAAcC,GACvD,GAA4B,kBAAjBD,EACT,OAAOrhC,GAAcqhC,GAGvB,GAAInhC,GAAYmhC,GACd,OAAOA,EAGF,IAAA1+F,EAAMmwD,EAAK+tC,SAASzP,SAASiQ,GAAa,GAEjD,GAAI1+F,EAAI,CACN,IAAMC,EAAMo9D,GAAcr9D,GAI1B,OAHI2+F,GACFxuC,EAAKic,MAAMpsE,EAAI0+F,GAEVz+F,CACT,CACF,CApiBG,CAqfI,OAxeAg+F,EAAAhoG,UAAA2oG,SAAP,WACE,OAAA5wC,EAAA,GAAYr3D,KAAKsvB,KACnB,EAEOg4E,EAAAhoG,UAAAwE,IAAP,SAAWu7F,GACT,YAAqC,IAA9Br/F,KAAKylE,OAAO45B,GAAQ,EAC7B,EAEOiI,EAAAhoG,UAAAkC,IAAP,SAAW69F,EAAgBp3B,GAEzB,GADAjoE,KAAKwnG,MAAMzd,OAAOsV,EAAQp3B,GACtBk+B,GAAO3mG,KAAKQ,KAAKsvB,KAAM+vE,GAAS,CAClC,IAAM6I,EAAcloG,KAAKsvB,KAAK+vE,GAC9B,GAAI6I,GAAe/B,GAAO3mG,KAAK0oG,EAAajgC,GAC1C,OAAOigC,EAAYjgC,EAEvB,CACA,MACgB,eAAdA,GACAk+B,GAAO3mG,KAAKQ,KAAKunG,SAASY,kBAAmB9I,GAEtCr/F,KAAKunG,SAASY,kBAAkB9I,GAErCr/F,gBAAgBooG,GACXpoG,KAAK0N,OAAOlM,IAAI69F,EAAQp3B,QADjC,CAGF,EAEUq/B,EAAAhoG,UAAAmmE,OAAV,SACE45B,EACAgJ,GASA,OAFIA,GAAmBroG,KAAKwnG,MAAMzd,OAAOsV,EAAQ,YAE7C8G,GAAO3mG,KAAKQ,KAAKsvB,KAAM+vE,GAClBr/F,KAAKsvB,KAAK+vE,GAGfr/F,gBAAgBooG,GACXpoG,KAAK0N,OAAO+3D,OAAO45B,EAAQgJ,GAGhCroG,KAAKunG,SAASY,kBAAkB9I,GAC3BpgG,OAAO6C,OAAO,WADvB,CAGF,EAEOwlG,EAAAhoG,UAAAm2E,MAAP,SAAa5S,EAA6BC,GAA1C,IACMu8B,EADN7lC,EAAA,KAIMoN,GAAY/D,KAAQA,EAAQA,EAAM8D,OAClCC,GAAY9D,KAAQA,EAAQA,EAAM6D,OAEtC,IAAM2hC,EACa,kBAAVzlC,EAAqB7iE,KAAKylE,OAAQ45B,EAASx8B,GAAUA,EAExD0lC,EACa,kBAAVzlC,EAAqB9iE,KAAKylE,OAAQ45B,EAASv8B,GAAUA,EAI9D,GAAKylC,EAAL,CAEA7uC,EAA4B,kBAAX2lC,EAAqB,GAEtC,IAAMmJ,EAAsB,IAAIhzB,GAAWizB,IAAuBhzB,MAChE6yB,EACAC,GAOF,GAFAvoG,KAAKsvB,KAAK+vE,GAAUmJ,EAEhBA,IAAWF,WACNtoG,KAAKu2C,KAAK8oD,GACbr/F,KAAKwnG,MAAMkB,SAAS,CACtB,IAAMC,EAAmC1pG,OAAO6C,OAAO,MAKlDwmG,IAAUK,EAAcC,SAAW,GAIxC3pG,OAAOyB,KAAK6nG,GAAUznG,SAAQ,SAACimG,GAC7B,IACGuB,GACDA,EAASvB,KAAoByB,EAAOzB,GACpC,CAGA4B,EAAc5B,GAAkB,EAShC,IAAM9+B,EAAY6+B,GAAuBC,GAEvC9+B,IAAc8+B,GACbvtC,EAAK+tC,SAASsB,WAAWL,EAAOt/B,WAAYjB,KAE7C0gC,EAAc1gC,GAAa,QAME,IAA3BugC,EAAOzB,IAAgCvtC,aAAgB4uC,WAClDI,EAAOzB,EAElB,CACF,KAGE4B,EAAcz/B,YACZo/B,GAAYA,EAASp/B,YAKvBlpE,KAAKunG,SAASY,kBAAkB9I,KAAYmJ,EAAOt/B,mBAE5Cy/B,EAAcz/B,WAGvBjqE,OAAOyB,KAAKioG,GAAe7nG,SAAQ,SAACmnE,GAClC,OAAAzO,EAAKguC,MAAMx9E,MAAMq1E,EAAkBp3B,EAAnC,GAEJ,CAzEmB,CA2EvB,EAEOq/B,EAAAhoG,UAAAyV,OAAP,SACEsqF,EACA/3B,GAFF,IAAA9N,EAAA,KAIQ0uC,EAAcloG,KAAKylE,OAAO45B,GAEhC,GAAI6I,EAAa,CACf,IAAMY,EAAqC7pG,OAAO6C,OAAO,MACrDinG,GAAc,EACdC,GAAa,EAEXC,EAAgB,CACpBhJ,OAAMA,GACNoH,WAAUA,GACVzgC,YAAWA,GACXkhC,YAAa9nG,KAAK8nG,YAClBF,QAAS5nG,KAAK4nG,QACdsB,UAAW,SACTC,EACAtnG,GAEA,OAAA23D,EAAK+tC,SAAS2B,UACkB,kBAAvBC,EACL,CACElhC,UAAWkhC,EACXtnG,KAAMA,GAAQ6kE,GAAc24B,IAE9B8J,EACF,CAAE5I,MAAO/mC,GAPX,MAWJv6D,OAAOyB,KAAKwnG,GAAapnG,SAAQ,SAACimG,GAChC,IAAM9+B,EAAY6+B,GAAuBC,GACrCqC,EAAalB,EAAYnB,GAC7B,QAAmB,IAAfqC,EAAJ,CACA,IAAMr0F,EACc,oBAAXuyD,EAAwBA,EAC7BA,EAAOy/B,IAAmBz/B,EAAOW,GAErC,GAAIlzD,EAAQ,CACV,IAAIshF,EACFthF,IAAWqyF,GAAcnH,GACvBlrF,EAAOmxF,GAAgBkD,GAAW/xC,EAAAA,EAAA,GAC7B4xC,GAAa,CAChBhhC,UAASA,EACT8+B,eAAcA,EACdsC,QAAS7vC,EAAK8vC,WAAWjK,EAAQ0H,MAGvC,GAAI1Q,IAAagR,GACf7tC,EAAKguC,MAAMx9E,MAAMq1E,EAAQ0H,QAGzB,GADI1Q,IAAa4J,KAAQ5J,OAAW,GAChCA,IAAa+S,IACfN,EAAc/B,GAAkB1Q,EAChC0S,GAAc,EACdK,EAAa/S,GAEC,IAAVh2F,WAAU86D,SAAA,CACZ,IAAMouC,EAAiB,SAACjgG,GACtB,QAA+B4pD,IAA3BsG,EAAKiM,OAAOn8D,EAAIq9D,cAEhB,IADFtmE,WAAU86D,SACRzB,EAAAtoD,KAAA,EAAA9H,IACE,MAKNs9D,GAACyvB,GACDkT,EAAAlT,QAEA,GAAAj3F,MAAAwB,QAAey1F,GAGf,QAFKmT,GAAkB,EACvBC,OAAA,EACIhvC,EAAA,EAAaivC,EAAkBrT,EAAA57B,EAAAivC,EAAA7pG,OAAA46D,IAAA,CAC/B,IAAA94D,EAAA+nG,EAAgBjvC,GACpB,GAAoBmM,GAAAjlE,IACd,GADK6nG,GAAK,EACVD,EAAkB5nG,GACpB,WAGA,qBAAAA,GAAAA,EACA63D,EAAA+tC,SAAAzP,SAAAn2F,GAAA,KAGE8nG,EAAA9nG,MAIF6nG,QAACt2C,IAAAu2C,EAAA,EACF,IAAAppG,WAAA86D,SAAAzB,EAAAtoD,KAAA,EAAAq4F,GACG,cAWX,QACHT,GAAC,EArE8B,cAyEjC,KAACvzB,MAAA4pB,EAAAyJ,GACAE,IAEC,gBAAcZ,GACX,KAAM94E,KAAM+vE,QAAE,SAIV,KAAK/vE,KAAO+vE,QACZmI,MAACx9E,MAAAq1E,EAAA,cAEP,YAcTiI,EAAAhoG,UAAA4V,OAAA,SAAAmqF,EAAAp3B,EAAAzN,GACA,IAAApB,EACA8uC,EAAA,KAAAziC,OAAA45B,GACO,GAAA6I,EAAA,0CAKCnB,EAAmB9+B,GAAezN,EACpC,KAAA+sC,SAAcoC,kBAAA,CAAAvgC,SAAAA,EAAAnB,UAAAA,EAAAzN,KAAAA,IACVyN,EACN,OAAM,KAAAlzD,OAAcsqF,EAClB0H,IAAmB3tC,EAAA,IACjB2tC,GAAcK,GAChBhuC,GAAEguC,gBASL9nG,UAAAsqG,MAAA,SAAA5zE,EAAAtiB,GACD,IAAAm2F,GAAa,SACd7zE,EAAA3sB,KAEM88F,GAAA3mG,KAAA,KAAK8vB,KAAZ0G,EAAa3sB,MACPwgG,EAAU,KAAM30F,OAAA8gB,EAAA3sB,GAAA2sB,EAAAiyC,UAAAjyC,EAAAwkC,OAEd,gBAAgB4tC,IAAO,OAAW10F,IACpCm2F,EAAU7pG,KAAK0N,OAAOk8F,MAAA5zE,EAAYtiB,IAAQm2F,IAM5C7zE,EAAAiyC,WAAA4hC,IACA,KAAArC,MAAAx9E,MAAAgM,EAAA3sB,GAAA2sB,EAAAiyC,WAAA,kBAKD3oE,UAAA6V,MAAA,WACD,KAAA+O,QAAO,KACT,EAEOojF,EAAAhoG,UAAAglG,QAAP,WACE,IAAI9qC,EAAQ,KACbxE,EAAA,KAAAizC,WAEM6B,EAAA,GAQL,OARF,KAAAC,eAYCjpG,SAAA,SAAAuI,GAXU88F,GAAQ3mG,KAAAg6D,EAAW+tC,SAAAY,kBAAA9+F,IACtBygG,EAA2BlnG,KAACyG,QAG9BxJ,SACFm1D,EAACg1C,OAAA,CAAAF,aAAAA,EAAAj3F,SAECmiD,KAEH11D,UAAA4kB,QAAA,SAAA+lF,GACD,IAAAzwC,EAAW,QACZv6D,OAAAyB,KAAA,KAAA4uB,MAAAxuB,SAAA,SAAAu+F,GAEM4K,GAAA9D,GAAP3mG,KAAAyqG,EAAe5K,IAAf7lC,EAAAtkD,OAeCmqF,QAZS,CACN,IAAC2K,EAAAC,EAAAD,OAAAE,EAAA5yC,EAAA2yC,EAAA,YACAhrG,OAAAyB,KAAAwpG,GAAAppG,SAAA,SAAAu+F,GACC7lC,EAAUic,MAAA4pB,EAAA6K,EAAA7K,GACJ,IACR2K,GACEA,EAAKF,aAAchpG,QAAK,KAAMqpG,OAAkB,UAIjD7qG,UAAA6qG,OAAA,SAAA3E,GACH,OAAC,KAAAiC,QAAAjC,IAAA,KAAAiC,QAAAjC,IAAA,IACH,EAcO8B,EAAAhoG,UAAA8qG,QAAP,SAAc5E,GACZ,QAAQiC,QAAKjC,GAAc,EAAC,CAC7B,IAAAhyF,IAAA,KAAAi0F,QAAAjC,GAIG,OAFGhyF,UACI,KAAQi0F,QAAWjC,GACpBhyF,YAKV8zF,EAAChoG,UAAAyqG,aAAA,SAAAM,eAED,IAAAA,IAAAA,EAAA,IAAA3mG,KACAzE,OAAAyB,KAAA,KAAA+mG,SAAA3mG,QAAAupG,EAAAh2F,IAAAg2F,GACO,gBAAAjC,GAAa,KAAA16F,OAAAq8F,aAAAM,GAKhBprG,OAAAyB,KAAA,KAAA6mG,SAAAY,mBAAArnG,QAAAupG,EAAAh2F,IAAAg2F,GAEAA,GAOJ/C,EAAAhoG,UAAAogC,GAAA,WACA,IAAA85B,EAAA,KACA6wC,EAAA,KAAAN,eACOO,EAAA,KAAErC,WAAToC,EAAAvpG,SAAA,SAqBCuI,GApBU88F,GAAQ3mG,KAAA8qG,EAAejhG,KAI5BpK,OAAAyB,KAAA84D,EAAA+wC,gBAAAlhG,IAAAvI,QAAAupG,EAAAh2F,IAAAg2F,UAGOC,EAAKjhG,aAGLpK,OAASyB,KAAI4pG,MACtBE,EAAC3qG,OAAA,CAEG,IADH,IAAA4qG,EAAA,KACGA,aAAyBrC,IAC3BqC,EAAYA,EAAQ/8F,OACtB88F,EAAQ1pG,SAAqB,SAAAuI,GAAA,OAAAohG,EAAAv1F,OAAA7L,EAAA,gBAG9B/J,UAAAirG,gBAAA,SAAAlL,GACD,IAAA8G,GAAO3mG,KAAA,KAAY+2C,KAAA8oD,GAAA,CACpB,IAAAqL,EAAA,KAAAn0D,KAAA8oD,GAAApgG,OAAA6C,OAAA,MAOMyuE,EAAA,KAAAjhD,KAAA+vE,GACD,IAAC9uB,EACG,OAAKm6B,EACX,IAAMC,EAAY,IAAIjnG,IAAC,CAAA6sE,IAGvBo6B,EAAM7pG,SAAU,SAAuCk0D,GACvD4R,GAAA5R,KACA01C,EAAA11C,EAAA2R,QAAA,GASIjG,GAAA1L,IACA/1D,OAAAyB,KAAAs0D,GAAAl0D,SAAA,SAAAoR,GACD,IAAAssB,EAAAw2B,EAAA9iD,GAGSwuD,GAAgBliC,IACtBmsE,EAAAt2F,IAAAmqB,qBAMH+X,KAAA8oD,MAEJ//F,UAAAirF,aAAA,WACD,OAAOvqF,KAAKwnG,MAAKoD,SAAQ7kB,YAAAnmF,UAC3B,EAyBO0nG,EA3fT,GAyjBAuD,GAAA,WACA,SAAAA,EAAAnC,EAAAh7F,QACA,IAAAA,IAAAA,EAAA,MACA,KAAAg7F,QAAAA,EAOE,KAAAh7F,OAAAA,EAEU,KAAAvL,EAAA,KADQ,KAAA2oG,wBAPTxrG,UAAqDwrG,aAAA,WAU5D9qG,KAAKmC,EAAA,KAAAumG,QAAevf,KAAA,KACrB,KAAAyhB,SAAA,IAAAhlB,GAAAtqB,EAEM,IACCh8D,UAAQyqF,OAAU,SAAoBsV,EAAC0H,GAC7C,GAAI,KAAC5kG,EAAA,CACN,KAAAA,EAAA4oG,GAAA1L,EAAA0H,IAEM,IAAA9+B,EAAA6+B,GAAqBC,GAClB9+B,IAAK8+B,GAMT,KAAA5kG,EAAA4oG,GAAA1L,EAAAp3B,IAEA,KAAAv6D,QACA1N,KAAK0N,OAAEq8E,OAAWsV,EAAQ0H,OAI3BznG,UAAA0qB,MAAA,SAAAq1E,EAAA0H,GACF,KAAA5kG,GACF,KAAAA,EAAA6nB,MAAA+gF,GAAA1L,EAAA0H,GAUK,aAAAA,EAAA,wBAhDR,YAsDGgE,GAAA1L,EAAA0H,GAID,OAAAA,EAAA,IAAA1H,EAEA,SAAA2L,GAAAzK,EAAA0K,GACAC,GAAwB3K,IAatBA,EAAAiH,MAAAzd,OAAAkhB,EAAA,sBAGA3D,GAEH,IAAA6D,EAAA,SAAA5xC,GAGC,SAAA4xC,EAAA/xC,GACA,IAAAmuC,EAAAnuC,EAAAmuC,SAAArjC,EAAA9K,EAAAutC,cAAAA,OAAA,IAAAziC,GAAAA,EAAAknC,EAAAhyC,EAAAgyC,KAA0B5xC,EAAAD,EAAA/5D,KAAW,KAAA+nG,EAAA,IAAAsD,GAAAlE,KAAA,KA+BnB,OA9BhBntC,EAAA6xC,MAQC,IAAAC,GAAA9xC,KAPC+xC,YAAQ,IAAA3lB,GACRtqB,GAOA8vC,GAIc5xC,EAAAt1C,QAAYknF,GAiBZ5xC,EACT,OAlCXrC,EAAiBg0C,EAAW5xC,eAaPiyC,SAAY,SAAEC,EAAAC,GAS7B,YAAAL,MAAAG,SAAAC,EAAAC,MAEApsG,UAAAqsG,YAAA,WAED,WAEM,IACLrsG,UAAAgqG,WAAA,WACA,OAAOtpG,KAAKurG,YAAAxlB,YAAAnmF,UACd,EAGOurG,EApCV,MAsCIA,KAAAA,QACF7D,GAAA,KACH,IAtCiBc,GAAA,SAAW7uC,GAyC5B,SAAA6uC,EAAA/+F,EAAAqE,EAAAg+F,EAAiClE,GACjC,IAAAhuC,EAAAD,EAAA/5D,KAAA,KAAAkO,EAAA65F,SAAAC,IAAA,KAIoB,OAJAhuC,EAAAnwD,GAAAA,EAClBmwD,EAAA9rD,OAEkBA,EAIhB8rD,EAAAkyC,OAAAA,EALgBlyC,EAAAguC,MAAUA,EACVkE,EAAAlyC,GACAA,SANpBrC,EAAAixC,EAAA7uC,KAUIj6D,UAAWksG,SAAE,SAAAC,EAAAC,oCACf,EAEOtD,EAAA9oG,UAAAqsG,YAAP,SAAgBF,GACd,IAAAjyC,EAAW,KAGN9rD,EAAA,KAAAA,OAAWi+F,YAACF,GAAnB,OAAAA,IAAA,KAuDCpiG,IAtDC,KAAAm+F,MAAAkB,SAMIzpG,OAAAyB,KAAA,KAAA4uB,MAAAxuB,SAAA,SAAAu+F,GACA,IAAAuM,EAAApyC,EAAAlqC,KAAA+vE,GACAwM,EAAAn+F,EAAA,OAA6C2xF,GACtCwM,EAQHD,EASEA,IAAiBC,GAGnB5sG,OAAAyB,KAAAkrG,GAAA9qG,SAAA,SAAAimG,GACAxiB,GAAAqnB,EAAA7E,GAAA8E,EAAgE9E,KAChEvtC,EAAWguC,MAAAx9E,MAAAq1E,EAAA0H,OAVXvtC,EAAAguC,MAAAx9E,MAAAq1E,EAAA,YACApgG,OAAAyB,KAAAmrG,GAAA/qG,SAAA,SAAAimG,GACAvtC,EAAAguC,MAAAx9E,MAAAq1E,EAAA0H,EACA,KATAvtC,EAAAtkD,OAAAmqF,SA+BN3xF,IAAO,KAAOA,OACf,KAGGA,EAAM89F,SAAU,KAAMniG,GAAA,KAAAqiG,WAE1BpsG,UAAA2oG,SAAA,WACA,OAAO5wC,EAAOA,EAAS,GAAK,KAAI3pD,OAAKu6F,YAAQ,KAAA34E,KAC/C,EAEO84E,EAAA9oG,UAAAirG,gBAAP,SAAAlL,GACE,IAAAyM,EAAA,KAAAp+F,OACK68F,gBAAYlL,GAGlB,OAAA8G,GAAA3mG,KAAA,KAAA8vB,KAAA+vE,GAAAhoC,EAAAA,EAAA,GAAAy0C,GAAAvyC,EAAAj6D,UAAAirG,gBAAA/qG,KAAA,KAAA6/F,IAAAyM,CAEM,IACLxsG,UAAMgqG,WAAkB,WAOzB,IANC,IAAAjnG,EAAO,KAAMqL,OAMdrL,EAAAqL,QAEMrL,EAAAA,EAAAqL,OACL,OAAKrL,EAAgBinG,WAAYvpG,MAAAsC,cAI/B+lG,EAxIW,KA+IjBkD,GAAA,SAAA/xC,GAEA,SAAA+xC,EAAA/6B,GACA,OAAAhX,EAAA/5D,KAAA,yBAAA+wE,GAAA,kBAAAs6B,GAAAt6B,EAAAi3B,MAAAkB,QAAAn4B,EAAAi3B,SAAA,IAAoB,QAFpBrwC,EAAAm0C,EAAA/xC,GAGE+xC,EAAAhsG,UAAYqsG,YAAsB,WAOjC,WAEM,IACLrsG,UAAAm2E,MAAA,SAAA5S,EAAgCC,GAOhC,YAAAp1D,OAAA+nE,MAAA5S,EAAAC,IAEAwoC,EAvBJ,cAyBG7C,GAAAsD,EAAAC,EAAAr2B,GACH,IAAAs2B,EAACF,EAAAp2B,GAvBwBu2B,EAuBxBF,EAAAr2B,GAWC,OAAA4O,GAAA0nB,EAAAC,GAAAD,EAAAC,EAEA,SAAAhB,GAAA3K,GAED,SAAAA,aAAA+G,IAAA/G,EAAAiH,MAAAkB,QAED,CCpyBA,IAAAyD,GAAA,oBAAAA,IAGU,KAAAC,MAAQ,IAAK5wC,EAAgB5U,QAAUljD,KAGvC,KAAA2oG,KAAO,IAAIzmB,GAIhBtqB,GAQK,KAAAgxC,OAAS,IAAIzoG,QAiGb,KAAA0oG,WAAa,IAAIthF,IAGT,KAAA0/C,MAAQ3qE,KAAKwsG,MAAM,CAAC,EACtC,QA3GSL,EAAA7sG,UAAAmtG,QAAP,SAAe9qG,GACb,OAAO+qG,GAAgB/qG,IAAU3B,KAAKosG,MAAMtoG,IAAInC,EAClD,EAMOwqG,EAAA7sG,UAAAqtG,KAAP,SAAYhrG,GACV,GAAI+qG,GAAgB/qG,GAAQ,CAC1B,IAAMirG,EAtFZ,SAAwBjrG,GACtB,OAAI+qG,GAAgB/qG,GACXf,GAAQe,GACVA,EAAMzB,MAAM,GACdm3D,EAAA,CAAGl4D,UAAWF,OAAOgC,eAAeU,IAAWA,GAE7CA,CACT,CA+EmBkrG,CAAYlrG,GAEzB,OADA3B,KAAKssG,OAAO7qG,IAAImrG,EAAMjrG,GACfirG,CACT,CACA,OAAOjrG,CACT,EAIOwqG,EAAA7sG,UAAAktG,MAAP,SAAa7qG,GAAb,IAAA63D,EAAA,KACE,GAAIkzC,GAAgB/qG,GAAQ,CAC1B,IAAM24F,EAAWt6F,KAAKssG,OAAO9qG,IAAIG,GACjC,GAAI24F,EAAU,OAAOA,EAGrB,OADcr7F,OAAOgC,eAAeU,IAElC,KAAKvC,MAAME,UACT,GAAIU,KAAKosG,MAAMtoG,IAAInC,GAAQ,OAAOA,EAClC,IAAMyqE,EAAgBzqE,EAAgB4B,IAAIvD,KAAKwsG,MAAOxsG,MActD,OAVM+sC,EAAO/sC,KAAKqsG,KAAKtmB,YAAY3Z,IACzBA,QACRpsE,KAAKosG,MAAM/3F,IAAK04B,EAAKq/B,MAAQA,IAIf,IAAV/rE,WAAU86D,SACZl8D,OAAO8qB,OAAOqiD,IAGXr/B,EAAKq/B,MAGd,KAAK,KACL,KAAKntE,OAAOK,UACV,GAAIU,KAAKosG,MAAMtoG,IAAInC,GAAQ,OAAOA,EAClC,IAAMmrG,EAAQ7tG,OAAOgC,eAAeU,GAC9BorG,EAAQ,CAACD,GACTpsG,EAAOV,KAAKumE,WAAW5kE,GAC7BorG,EAAMnqG,KAAKlC,EAAKssG,MAChB,IAYMjgE,EAZAkgE,EAAkBF,EAAMltG,OAa9B,GAZAa,EAAKwsG,OAAOpsG,SAAQ,SAACoR,GACnB66F,EAAMnqG,KAAK42D,EAAKgzC,MAAO7qG,EAAcuQ,IACvC,MASM66B,EAAO/sC,KAAKqsG,KAAKtmB,YAAYgnB,IACzBxgC,OAAQ,CAChB,IAAM4gC,EAAOpgE,EAAKw/B,OAASttE,OAAO6C,OAAOgrG,GACzC9sG,KAAKosG,MAAM/3F,IAAI84F,GACfzsG,EAAKwsG,OAAOpsG,SAAQ,SAACoR,EAAKpS,GACxBqtG,EAAIj7F,GAAO66F,EAAME,EAAkBntG,EACrC,KAIc,IAAVO,WAAU86D,SACZl8D,OAAO8qB,OAAOojF,EAElB,CACA,OAAOpgE,EAAKw/B,OAGlB,CACA,OAAO5qE,CACT,EAMQwqG,EAAA7sG,UAAAinE,WAAR,SAAmBvR,GACjB,IAAMt0D,EAAOzB,OAAOyB,KAAKs0D,GACnBjoB,EAAO/sC,KAAKqsG,KAAKtmB,YAAYrlF,GACnC,IAAKqsC,EAAKrsC,KAAM,CACdA,EAAKmS,OACL,IAAMm6F,EAAOj6F,KAAKC,UAAUtS,IACtBqsC,EAAKrsC,KAAOV,KAAKusG,WAAW/qG,IAAIwrG,KACpChtG,KAAKusG,WAAW9qG,IAAIurG,EAAOjgE,EAAKrsC,KAAO,CAAEwsG,OAAQxsG,EAAMssG,KAAIA,GAE/D,CACA,OAAOjgE,EAAKrsC,IACd,EAOFyrG,CAAA,CAvHA,GC+BA,SAASiB,GACPp3E,GAEA,MAAO,CACLA,EAAQ+yC,aACR/yC,EAAQ2xE,kBACR3xE,EAAQiiB,QAGRjiB,EAAQiiB,QAAQijD,gBAEpB,CAEA,IAAAmS,GAAA,WAiCE,SAAAA,EAAYtoC,GAAZ,IAAAvL,EAAA,KAVQ,KAAA8zC,aAAe,IAAKhyC,EAAgBz3D,QAAUonB,KAWpDjrB,KAAK+kE,OAASgpB,GAAQhpB,EAAQ,CAC5B2hC,aAAoC,IAAvB3hC,EAAO2hC,YACpBxL,gBAAiB0L,GAAsB7hC,KAGzC/kE,KAAKutG,MAAQxoC,EAAOwoC,OAAS,IAAIpB,GAMjCnsG,KAAKmlE,oBAAsB5K,IACzB,SAACvkC,SACSklE,EAAoBllE,EAAQiiB,QAAOijD,gBAErCsS,EAAWJ,GAAwBp3E,GAIzCw3E,EAAS,IAAMtS,EAEf,IAAMuS,GAAQr0C,EAAAI,EAAK2L,qBAAoB8gB,KAAIlmF,MAAAq5D,EAAIo0C,GAE/C,OAAIC,EACEvS,EACF7jC,EAAAA,EAAA,GACKo2C,GAAK,CAGRh0F,OAAQ+/C,EAAK+zC,MAAMf,MAAMiB,EAAMh0F,UAK5Bg0F,GAGTzC,GACEh1E,EAAQiiB,QAAQsoD,MAChBvqE,EAAQ03E,aAAa/mC,OAKhBnN,EAAKm0C,qBAAqB33E,GACnC,GACA,CACEpQ,IACE5lB,KAAK+kE,OAAO6oC,oBACZpqC,GAAW,sCAAoC,IAEjD8mB,QAAS8iB,GAGT7iB,aAAY,SAACxhB,EAAcr7D,EAAQuqC,EAASijD,GAC1C,GAAIgQ,GAAsBjzD,EAAQsoD,OAChC,OAAOtoD,EAAQsoD,MAAMhW,aACnBxhB,EACAnC,GAAYl5D,GAAUA,EAAOi5D,MAAQj5D,EACrCuqC,EAAQ41D,UACR3S,EAGN,IAIJl7F,KAAKqlE,wBAA0B9K,IAC7B,SAACvkC,GAKC,OAJAg1E,GACEh1E,EAAQiiB,QAAQsoD,MAChBvqE,EAAQ03E,aAAa/mC,OAEhBnN,EAAKs0C,yBAAyB93E,EACvC,GACA,CACEpQ,IACE5lB,KAAK+kE,OAAO6oC,oBACZpqC,GAAW,0CAAwC,IAErD+mB,aAAY,SAACnxB,OAAEsP,EAAKtP,EAAAsP,MAAE0D,EAAKhT,EAAAgT,MAAEn0B,EAAOmhB,EAAAnhB,QAClC,GAAIizD,GAAsBjzD,EAAQsoD,OAChC,OAAOtoD,EAAQsoD,MAAMhW,aAAa7hB,EAAO0D,EAAOn0B,EAAQ41D,UAE5D,GAGN,CAgTF,OA5YSR,EAAA/tG,UAAAyuG,WAAP,WACE/tG,KAAKutG,MAAQ,IAAIpB,EACnB,EAgGOkB,EAAA/tG,UAAA0uG,sBAAP,SAAgC50C,OAC9BmnC,EAAKnnC,EAAAmnC,MACL5oF,EAAKyhD,EAAAzhD,MACLusD,EAAA9K,EAAAosC,OAAAA,OAAM,IAAAthC,EAAG,aAAYA,EACrB6C,EAAS3N,EAAA2N,UACT3C,EAAAhL,EAAAk4B,kBAAAA,OAAiB,IAAAltB,GAAOA,EACxBQ,EAAAxL,EAAA8hC,gBAAAA,OAAe,IAAAt2B,EAAG5kE,KAAK+kE,OAAOm2B,gBAAet2B,EAEvC2iC,EAAWvnG,KAAK+kE,OAAOjvD,MAAMyxF,SAEnCxgC,EAAS1P,EAAAA,EAAA,GACJ2S,GAAiBL,GAAmBhyD,KACpCovD,GAGL,IAgBI2qB,EAhBEuc,EAAUvnC,GAAc8+B,GACxB0I,EAAaluG,KAAKmlE,oBAAoB,CAC1C4D,aAAcc,GAAkBlyD,GAAOoxD,aACvC4+B,kBAAmBsG,EACnBP,aAAcO,EACdh2D,QAAOof,EAAA,CACLkpC,MAAKA,EACL5oF,MAAKA,EACL4vF,SAAQA,EACRxgC,UAASA,EACT8mC,UAAW1pC,GAAmB4C,GAC9Bm0B,gBAAeA,GACZgM,GAAuBvvF,EAAO3X,KAAK+kE,OAAOjE,cAKjD,GAAIotC,EAAWxc,UAKbA,EAAU,CACR,IAAIoU,GACFqI,GAAaD,EAAWxc,SACxBwc,EAAWxc,QACX/5E,EACAovD,KAGCuqB,GACH,MAAMI,EAAQ,GAIlB,MAAO,CACLj4E,OAAQy0F,EAAWz0F,OACnB2S,UAAWslE,EACXA,QAAOA,EAEX,EAEO2b,EAAA/tG,UAAA8uG,QAAP,SACE30F,EACA/L,EACAq7D,EACA9wB,GAEA,GACEizD,GAAsBjzD,EAAQsoD,QAC9BvgG,KAAKstG,aAAa9rG,IAAIiY,KAAYsvD,EAClC,CACA,IAAMqkB,EAASptF,KAAKmlE,oBAAoB8gB,KACtCld,EACAr7D,EACAuqC,EAIAj4C,KAAKutG,MAAMd,QAAQhzF,IAErB,GAAI2zE,GAAU3zE,IAAW2zE,EAAO3zE,OAC9B,OAAO,CAEX,CACA,OAAO,CACT,EAGQ4zF,EAAA/tG,UAAAquG,qBAAR,SAA6Bv0C,GAA7B,IAAAI,EAAA,KACEuP,EAAY3P,EAAA2P,aACZ4+B,EAAiBvuC,EAAAuuC,kBACjB+F,EAAYt0C,EAAAs0C,aACZz1D,EAAOmhB,EAAAnhB,QAEP,GACE2uB,GAAY+gC,KACX1vD,EAAQsvD,SAASY,kBAAkBR,EAAkBhhC,SACrD1uB,EAAQsoD,MAAMz8F,IAAI6jG,EAAkBhhC,OAErC,MAAO,CACLltD,OAAQzZ,KAAKutG,MAAM5iC,MACnB+mB,QAAS,iCAAAvxF,OAAiCwnG,EAAkBhhC,MAAK,YAI7D,IAOJ+qB,EAPI3qB,EAA+B9uB,EAAO8uB,UAA3BwgC,EAAoBtvD,EAAOsvD,SACxCn+B,EADiCnxB,EAAOsoD,MACvBmH,cACrBC,EACA,cAGI0G,EAAwC,GAExCC,EAAgB,IAAI94B,GAa1B,SAAS+4B,EAAiB90F,EAAuB+0F,SAM/C,OALI/0F,EAAOi4E,UACTA,EAAU4c,EAAc74B,MAAMic,IAAOt4B,EAAA,IAClCo1C,GAAa/0F,EAAOi4E,QAAO,KAGzBj4E,EAAOA,MAChB,CAjBEzZ,KAAK+kE,OAAO2hC,aACQ,kBAAbt9B,IACNm+B,EAASkH,kBAAkBrlC,IAK5BilC,EAAezrG,KAAK,CAAEsmE,WAAYE,IAYpC,IAAM48B,EAAU,IAAItiG,IAAIqlE,EAAaC,YAErCg9B,EAAQllG,SAAQ,SAACwgE,WAGf,GAAKyQ,GAAczQ,EAAWyF,GAE9B,GAAIkC,GAAQ3H,GAAY,CACtB,IAAI8nC,EAAa7B,EAAS2B,UACxB,CACEjhC,UAAW3G,EAAU/7D,KAAK5D,MAC1B+mE,MAAOpH,EACPyF,UAAW9uB,EAAQ8uB,UACnBllE,KAAM8lG,GAER1vD,GAGIu2D,EAAa5lC,GAAuBtH,QAEvB,IAAf8nC,EACG7oB,GAAsBE,MAAMnf,KAC/BowB,EAAU4c,EAAc74B,MAAMic,IAAOt4B,EAAA,IAClCo1C,GAAa,qBAAAruG,OAAqBmhE,EAAU/7D,KAAK5D,MAAK,SAAAxB,OACrDymE,GAAY+gC,GACVA,EAAkBhhC,MAAQ,UAC1B,UAAY5zD,KAAKC,UAAU20F,EAAmB,KAAM,IACtD,KAGG/mG,GAAQwoG,GACbA,EAAWvpG,OAAS,IACtBupG,EAAamF,EACX/0C,EAAK6L,wBAAwB,CAC3BqD,MAAOpH,EACP8K,MAAOg9B,EACPsE,aAAYA,EACZz1D,QAAOA,IAETu2D,IAGMltC,EAAUyH,aAQG,MAAdqgC,IAITA,EAAamF,EACX/0C,EAAK2L,oBAAoB,CACvB4D,aAAczH,EAAUyH,aACxB4+B,kBAAmByB,EACnBsE,aAAc9mC,GAAYwiC,GAAcA,EAAasE,EACrDz1D,QAAOA,IAETu2D,IAdEv2D,EAAQijD,kBACVkO,EAAa5vC,EAAK+zC,MAAMZ,KAAKvD,SAiBd,IAAfA,GACFiF,EAAezrG,OAAIshE,EAAA,IAAIsqC,GAAapF,EAAUllC,GAElD,KAAO,CACL,IAAM9C,EAAWC,GACfC,EACArpB,EAAQkvD,gBAGV,IAAK/lC,GAAYE,EAAUN,OAASoP,GAAK8N,gBACvC,MAAMpjB,EAAkB,EAAAwG,EAAA/7D,KAAA5D,OAGtBy/D,GAAYmmC,EAASmH,gBAAgBttC,EAAUgI,IACjDhI,EAAS2H,aAAaC,WAAWloE,QAAQklG,EAAQ3xF,IAAK2xF,EAE1D,CACF,IAEA,IACM2I,EAA0B,CAAEl1F,OADnB67D,GAAe+4B,GACY3c,QAAOA,GAC3Ckd,EACJ32D,EAAQijD,gBACNl7F,KAAKutG,MAAMf,MAAMmC,GAGjBzI,GAAgByI,GAQpB,OAJIC,EAAOn1F,QACTzZ,KAAKstG,aAAa7rG,IAAImtG,EAAOn1F,OAAQsvD,GAGhC6lC,CACT,EAGQvB,EAAA/tG,UAAAwuG,yBAAR,SAAiC10C,GAAjC,IAMMs4B,EANNl4B,EAAA,KACEkP,EAAKtP,EAAAsP,MACL0D,EAAKhT,EAAAgT,MACLshC,EAAYt0C,EAAAs0C,aACZz1D,EAAOmhB,EAAAnhB,QAGHq2D,EAAgB,IAAI94B,GAExB,SAAS+4B,EAAiBM,EAA4B/uG,SAIpD,OAHI+uG,EAAYnd,UACdA,EAAU4c,EAAc74B,MAAMic,IAAOt4B,EAAA,IAAKt5D,GAAI+uG,EAAYnd,QAAOt4B,KAE5Dy1C,EAAYp1F,MACrB,CA6CA,OA3CIivD,EAAMK,eACRqD,EAAQA,EAAM5oE,OAAOy0C,EAAQsoD,MAAMqH,UAGrCx7B,EAAQA,EAAM7oE,KAAI,SAAC+8D,EAAMxgE,GAEvB,OAAa,OAATwgE,EACK,KAIL1/D,GAAQ0/D,GACHiuC,EACL/0C,EAAK6L,wBAAwB,CAC3BqD,MAAKA,EACL0D,MAAO9L,EACPotC,aAAYA,EACZz1D,QAAOA,IAETn4C,GAKA4oE,EAAMK,aACDwlC,EACL/0C,EAAK2L,oBAAoB,CACvB4D,aAAcL,EAAMK,aACpB4+B,kBAAmBrnC,EACnBotC,aAAc9mC,GAAYtG,GAAQA,EAAOotC,EACzCz1D,QAAOA,IAETn4C,KAIU,IAAVO,WAAU86D,SAyBpB,SACEolC,EACA73B,EACA0gC,GAEA,IAAK1gC,EAAMK,aAAc,CACvB,IAAM4hC,EAAU,IAAIjnG,IAAI,CAAC0lG,IACzBuB,EAAQ7pG,SAAQ,SAACa,GACX++D,GAAgB/+D,KAClB+3D,GAMAkN,GAAcjlE,GACf,GHpeD,SACJ4+F,EACAoH,GAEA,OAAO/gC,GAAY+gC,GACdpH,EAAM/+F,IAAImmG,EAAkBhhC,MAAO,cACpCghC,GAAqBA,EAAkBz+B,UAC7C,CG8dO4lC,CAAAvO,EAAA5+F,GACJ+mE,EAAAnjE,KAAA5D,8CA1CKotG,CAA6B92D,EAAQsoD,MAAO73B,EAAOpI,GAG9CA,EACT,IAEO,CACL7mD,OAAQw+B,EAAQijD,gBAAkBl7F,KAAKutG,MAAMf,MAAMpgC,GAASA,EAC5DslB,QAAOA,EAEX,EACF2b,CAAA,CAzaA,GA2aA,SAASc,GAAaa,GACpB,IACEj8F,KAAKC,UAAUg8F,GAAM,SAACvuG,EAAGkB,GACvB,GAAqB,kBAAVA,EAAoB,MAAMA,EACrC,OAAOA,CACT,GACF,CAAE,MAAO8X,GACP,OAAOA,CACT,CACF,CCvhBA,IAAMw1F,GAOFhwG,OAAO6C,OAAO,MAElB,SAASotG,GAAoBC,GAI3B,IAAMC,EAAWr8F,KAAKC,UAAUm8F,GAChC,OACEF,GAAmBG,KAClBH,GAAmBG,GAAYnwG,OAAO6C,OAAO,MAElD,CAEM,SAAUutG,GACdC,GAEA,IAAMrqB,EAAOiqB,GAAoBI,GAEjC,OACErqB,EAAKsqB,cAAWtqB,EAAAsqB,YAAA,SAAAhjC,EAAAt0B,GACf,IAAKqsD,EAAW,SAAGziG,EAACqQ,GACb,OAAO+lC,EAAsBixD,UAAKh3F,EAAKrQ,IACd0kG,EAAAtuD,EAAAsuD,UAAAiJ,GAAAF,GAAA,SAAAG,GAEzB,IAAAC,EAAaC,GAAiB13D,EAAGiwD,YAAAuH,EAQjCnL,GAqBF,YAnBE,IADAoL,GAIAnjC,IAASt0B,EAAUiwD,aACnB/B,GAAM3mG,KAAK+sE,EAAQkjC,EAAW,MAW9BC,EAAAC,GAAApjC,EAAAkjC,EAAyCh1F,KAE3Ci/C,OAAC,IAAAg2C,EAAA,EAAAD,EAAA/pG,KAAA,KAAA6mE,GAEDmjC,KAQF,MACC,GAAAvvG,OAAA83C,EAAAmxB,SAAA,KAAAjpE,OAAA4S,KAAAC,UAAAuzF,MAaT,SAAAqJ,GAAqBN,GACrB,IAAMrqB,EAAAiqB,GAAUI,GAGd,OAAUrqB,EAAG4qB,YAEb5qB,EACE4qB,UAAc,SAAAr1C,EAAApB,GACb,IAAKsP,EAAStP,EAAGsP,MAAA3B,EAAsC3N,EAAA2N,UAAAkB,EAAA7O,EAAA6O,UAA7B6nC,EAAKN,GAAWF,GAAE,SAAS18F,GAC9C,IAAAyH,EAAYzH,EAAA,GACVm9F,EAAW11F,EAAUugB,OAAC,GAC5B,GAAkB,MAAZm1E,EAmCN,GAAC,MAAAA,GAaD,GAACv1C,EAEG,OAAOm1C,GAAAn1C,EAAA5nD,OAfX,CAEI,IAAAo9F,EAAmB31F,EAACna,MAAA,GACtB,GAAM6mE,GAAYo/B,GAAG3mG,KAASunE,EAASipC,GAAA,CACnC,IAAAC,EAAar9F,EAAY1S,MAAA,GAE3B,OADA+vG,EAAM,GAAUD,EAChBL,GAAgB5oC,EAAakpC,SAvC7B,GAAAvnC,GAAS0M,GAAW1M,EAAAR,YAAA,CAClB,IAAAgoC,EAAS71F,EAAsBna,MAAA,GAIjCiC,EAAAumE,EAAAR,WAAAn9C,MAAA,SAAA5oB,GAAA,OAA+CA,EAAAoD,KAAA5D,QAAAuuG,CAAA,IAI/CC,EAAAhuG,GAAAsmE,GAAAtmE,EAAA4kE,GAQA,OAAAopC,GACAR,GACEQ,EAKEv9F,EAAA1S,MAAA,QA2BPolF,EAAAvyE,KAAAC,UAAA88F,GAWH,OAHAt1C,GAAA,OAAA8qB,KACIrd,GAAQ,IAAWqd,GAEtBrd,IAKN,SAAAunC,GAAAF,EAAAc,GAOC,IAAA76B,EAAA,IAAAC,GACA,OAAM66B,GAAaf,GAAappG,QAAA,SAAA4pG,EAAAh/B,GAChC,IAAO1X,SACL,QAAc,IAAVk3C,EAAoB,CAGtB,QAAAxwG,EAAAgxE,EAAAjxE,OAAA,EAAAC,GAAA,IAAAA,GACas5D,EAAK,IAAS0X,EAAIhxE,IAAOwwG,EAAtCA,EAA4Cl3C,EAE5C02C,EAACv6B,EAAAE,MAAAq6B,EAAAQ,GAEH,OAACR,WACDhuG,OAAO,OAEV,SAAAuuG,GAAAlB,GAED,IAAMlqB,EAAAiqB,GAA4BC,GAChC,IAAMlqB,EAAIsrB,MAAG,CAET,IAACC,EAAavrB,EAAAsrB,MAAA,GACVE,EAA0B,GAChCtB,EAAMruG,SAAA,SAA2BhC,EAAAgB,GAE5Bc,GAAQ9B,IACPuxG,GAAavxG,GAAAgC,SAAA,SAAAuB,GAAA,OAAAmuG,EAAA5tG,KAAA6tG,EAAAtwG,OAAAkC,GAAA,IACfouG,EAAA5wG,OAAqB,MAEf+C,KAAA9D,GACN8B,GAAWuuG,EAAKrvG,EAAI,MAChB0wG,EAAQ5tG,KAAK6tG,EAAWvwG,MAAA,IAC1BuwG,EAAW5wG,OAAA,OAKnB,OAAColF,EAAAsrB,MAGH,SAAC91F,GAAA8xD,EAAAr6D,GAED,OAASq6D,EAAAr6D,GAKR,SAAAy9F,GAAApjC,EAAAuE,EAAAwzB,GAkBC,OADAA,EAAAA,GAAA7pF,GACOi2F,GAAU5/B,EAAI5qE,QAAA,SAAWyqG,EAAA37C,EAAA9iD,GAChC,OAAOtR,GACLo0D,GACEA,EAAOzxD,KAAA,SAAci7B,GAAA,OAAAmyE,EAAAnyE,EAAAtsB,EAAA,IACjB8iD,GAAQsvC,EAAAtvC,EAAC9iD,SAInB,SAACw+F,GAAA/uG,GAKC,OAAA++D,GAAA/+D,GACIf,GAAAe,GACSA,EAAM4B,IAAImtG,IAEpBlB,GAAAvwG,OAAAyB,KAAAiB,GAAAkR,QAAA,SAAAi+D,GACD,OAAO6+B,GAAAhuG,EAAsBmvE,MAG9BnvE,ECvGH,SAASivG,GAAuBzB,GAC9B,YACgB,IAAdA,EAAK30C,KAAkB20C,EAAK30C,KAC1B20C,EAAKzmC,MAAQD,GAAyB0mC,EAAKzmC,MAAOymC,EAAKpoC,WACvD,IAEN,CA6FA,IAAM8pC,GAAqC,WAAM,EAC3CC,GAAmC,SAACC,EAAO94D,GAAY,OAAAA,EAAQgwB,SAAR,EAIvD+oC,GAAuC,SAC3C1I,EACAC,EACAnvC,GACG,OAAA63C,EADW73C,EAAA63C,cACE3I,EAAUC,EAAvB,EACC2I,GAAwC,SAACzwG,EAAG8nG,GAAa,OAAAA,CAAA,EAM/D4I,GAAA,WAwCE,SAAAA,EACUpsC,GAAA,KAAAA,OAAAA,EAxCF,KAAAqsC,aAYJnyG,OAAO6C,OAAO,MAEV,KAAAuvG,UAEJpyG,OAAO6C,OAAO,MAMV,KAAAwvG,aAAe,IAAIrmF,IAMnB,KAAAsmF,cAAgB,IAAItmF,IAIZ,KAAAwjF,kBACdxvG,OAAO6C,OAAO,MACA,KAAAqmG,kBACdlpG,OAAO6C,OAAO,MAEA,KAAA0vG,oBAAqB,EAUnCxxG,KAAK+kE,OAAM1N,EAAA,CACTovC,iBAAkBJ,IACfthC,GAGL/kE,KAAK8V,MAAQ9V,KAAK+kE,OAAOjvD,MAEzB9V,KAAKyxG,gBAAgB,SACrBzxG,KAAKyxG,gBAAgB,YACrBzxG,KAAKyxG,gBAAgB,gBAEjB1sC,EAAO2sC,eACT1xG,KAAK2xG,iBAAiB5sC,EAAO2sC,eAG3B3sC,EAAOqsC,cACTpxG,KAAK4xG,gBAAgB7sC,EAAOqsC,aAEhC,CAmlBF,OAjlBSD,EAAA7xG,UAAAw4F,SAAP,SACEvrB,EACAslC,SAEMtK,EAAWvnG,KAEXopE,EACHyoC,IACEA,EAAezoC,WAAsC,QAA1BhQ,EAAAy4C,EAAe3J,mBAAW,IAAA9uC,OAAA,EAAAA,EAAE8P,cAC1DqD,EAAOrD,WAOT,GAAIE,IAAappE,KAAKmoG,kBAAkB2J,WACtC,MAAO,CAAC,cA0BV,IAtBA,IAkBIzoG,EAlBE6+F,EACH2J,GAAkBA,EAAe3J,aAAgB37B,EAE9Ct0B,EAAOof,EAAAA,EAAA,GACRw6C,GAAc,CACjBzoC,SAAQA,EACR8+B,YAAWA,EACXgB,UACG2I,GAAkBA,EAAe3I,WAClC,WACE,IAAMlzE,EAAU+7E,GAA0BnyG,UAAWsoG,GACrD,OAAOX,EAAS2B,UAAUlzE,EAAS,CACjCuqE,MAAOgH,EAASzxF,MAAY,KAC5BixD,UAAW/wC,EAAQ+wC,WAEvB,IAKEirC,EAAS5oC,GAAYppE,KAAKiyG,cAAc7oC,GAC1C8oC,EAASF,GAAUA,EAAOE,OAAUlyG,KAAK+kE,OAAO0hC,iBAC7CyL,GAAO,CACZ,IAAMC,EAAgBD,EAAK76C,EAAAA,EAAC,CAAC,EAAIkV,GAAW27B,GAAejwD,GAC3D,IAAIr3C,GAAQuxG,GAEL,CACL9oG,EAAK8oG,EACL,KACF,CAJED,EAAQ7C,GAAyB8C,EAKrC,CAGA,OADA9oG,EAAKA,EAAK8E,OAAO9E,QAAM,EAChB4uC,EAAQsuD,UAAY,CAACl9F,EAAI4uC,EAAQsuD,WAAa,CAACl9F,EACxD,EAEO8nG,EAAA7xG,UAAAsyG,gBAAP,SAAuBR,GAAvB,IAAA53C,EAAA,KACEv6D,OAAOyB,KAAK0wG,GAActwG,SAAQ,SAACsoE,GACjC,IAAMhQ,EACJg4C,EAAahoC,GADPgpC,EAASh5C,EAAAg5C,UAAEC,EAAYj5C,EAAAi5C,aAAEC,EAAgBl5C,EAAAk5C,iBAAK/J,EAAQjxC,EAAA8B,EAAxD,iDAiBFg5C,GAAW54C,EAAKi4C,gBAAgB,QAASroC,GACzCipC,GAAc74C,EAAKi4C,gBAAgB,WAAYroC,GAC/CkpC,GAAkB94C,EAAKi4C,gBAAgB,eAAgBroC,GAEvD+8B,GAAO3mG,KAAKg6D,EAAK63C,UAAWjoC,GAC9B5P,EAAK63C,UAAUjoC,GAAUxmE,KAAK2lG,GAE9B/uC,EAAK63C,UAAUjoC,GAAY,CAACm/B,EAEhC,GACF,EAEQ4I,EAAA7xG,UAAAizG,iBAAR,SAAyBnpC,EAAkBm/B,GAA3C,IAAA/uC,EAAA,KACQ8uC,EAAWtoG,KAAKiyG,cAAc7oC,GAC5BopC,EAAsBjK,EAAQiK,UAAnBlrC,EAAWihC,EAAQjhC,OAEtC,SAASmrC,EACPnK,EACA7yB,GAEA6yB,EAAS7yB,MACU,oBAAVA,EAAuBA,GAGlB,IAAVA,EAAiBu7B,IAGP,IAAVv7B,EAAkBy7B,GAClB5I,EAAS7yB,KACf,CAIAg9B,EAASnK,EAAUC,EAAS9yB,OAE5B6yB,EAAS4J,OAEO,IAAdM,EAAsB3B,GAGpBjwG,GAAQ4xG,GAAanD,GAAyBmD,GAEzB,oBAAdA,EAA2BA,EAElClK,EAAS4J,MAET5qC,GACFroE,OAAOyB,KAAK4mE,GAAQxmE,SAAQ,SAACmnE,GAC3B,IAAMqgC,EAAW9uC,EAAKk5C,eAAetpC,EAAUnB,GAAW,GACpDsgC,EAAWjhC,EAAOW,GAExB,GAAwB,oBAAbsgC,EACTD,EAAS30B,KAAO40B,MACX,CACG,IAAAje,EAAyBie,EAAQje,QAAxB3W,EAAgB40B,EAAQ50B,KAAlB8B,EAAU8yB,EAAQ9yB,MAEzC6yB,EAAS4J,OAGK,IAAZ5nB,EAAoBwmB,GAGlBlwG,GAAQ0pF,GAAWslB,GAAuBtlB,GAEvB,oBAAZA,EAAyBA,EAEhCge,EAAS4J,MAEO,oBAATv+B,IACT20B,EAAS30B,KAAOA,GAGlB8+B,EAASnK,EAAU7yB,EACrB,CAEI6yB,EAAS30B,MAAQ20B,EAAS7yB,QAM5B6yB,EAAS4J,MAAQ5J,EAAS4J,OAASpB,GAEvC,GAEJ,EAEQK,EAAA7xG,UAAAmyG,gBAAR,SACExnE,EACAm/B,QAAA,IAAAA,IAAAA,EAAAn/B,GAEA,IAAMu7D,EAAS,QAAUv7D,EAAM1uB,cACzBo3F,EAAM3yG,KAAKmoG,kBAAkB3C,GAC/Bp8B,IAAaupC,IACfj5C,GACGi5C,GAAOA,IAAQ1oE,EAChB,EAAAA,GAKE0oE,UAAY3yG,KAAKyuG,kBAAkBkE,GAEvC3yG,KAAKyuG,kBAAkBrlC,GAAYo8B,EAEnCxlG,KAAKmoG,kBAAkB3C,GAAUp8B,EAErC,EAEO+nC,EAAA7xG,UAAAqyG,iBAAP,SAAwBD,GAAxB,IAAAl4C,EAAA,KACGx5D,KAAKwxG,oBAAiC,EACvCvyG,OAAOyB,KAAKgxG,GAAe5wG,SAAQ,SAAC8xG,GAIlCp5C,EAAKq5C,gBAAgBD,GAAW,GAEhClB,EAAckB,GAAW9xG,SAAQ,SAACgyG,GAChCt5C,EAAKq5C,gBAAgBC,GAAS,GAAOz+F,IAAIu+F,GACzC,IAAMtxF,EAAQwxF,EAAQxxF,MAAMulF,IACvBvlF,GAASA,EAAM,KAAOwxF,GAEzBt5C,EAAK+3C,cAAc9vG,IAAIqxG,EAAS,IAAIC,OAAOD,GAE/C,GACF,GACF,EAEQ3B,EAAA7xG,UAAA2yG,cAAR,SAAsB7oC,GAAtB,IAAA5P,EAAA,KACE,IAAK2sC,GAAO3mG,KAAKQ,KAAKoxG,aAAchoC,GAAW,CAC7C,IAAM4pC,EAA4ChzG,KAAKoxG,aACrDhoC,GACEnqE,OAAO6C,OAAO,MAClBkxG,EAAO1rC,OAASroE,OAAO6C,OAAO,MAuB9B,IAAImxG,EAAajzG,KAAKsxG,aAAa9vG,IAAI4nE,IAClC6pC,GAAcjzG,KAAKuxG,cAAclnF,OAIpC4oF,EAAajzG,KAAK6yG,gBAAgBzpC,GAAU,GAM5CppE,KAAKuxG,cAAczwG,SAAQ,SAACoyG,EAAQC,GAClC,GAAID,EAAOnrG,KAAKqhE,GAAW,CAIzB,IAAMgqC,EAAkB55C,EAAK83C,aAAa9vG,IAAI2xG,GAC1CC,GACFA,EAAgBtyG,SAAQ,SAAC8xG,GACvB,OAAAK,EAAY5+F,IAAIu+F,EAAhB,GAGN,CACF,KAEEK,GAAcA,EAAW5oF,MAC3B4oF,EAAWnyG,SAAQ,SAAC8xG,GAClB,IAAMx5C,EAAsBI,EAAKy4C,cAAcW,GAAvCtrC,EAAMlO,EAAAkO,OAAK+rC,EAAI/7C,EAAA8B,EAAjB,YACNn6D,OAAOS,OAAOszG,EAAQK,GACtBp0G,OAAOS,OAAOszG,EAAO1rC,OAAQA,EAC/B,GAEJ,CAEA,IAAMgsC,EAAQtzG,KAAKqxG,UAAUjoC,GAS7B,OARIkqC,GAASA,EAAMzzG,QAGjByzG,EAAMnwG,OAAO,GAAGrC,SAAQ,SAACkxG,GACvBx4C,EAAK+4C,iBAAiBnpC,EAAU4oC,EAClC,IAGKhyG,KAAKoxG,aAAahoC,EAC3B,EAEQ+nC,EAAA7xG,UAAAozG,eAAR,SACEtpC,EACAnB,EACAsrC,GAQA,GAAInqC,EAAU,CACZ,IAAMoqC,EAAgBxzG,KAAKiyG,cAAc7oC,GAAU9B,OACnD,OACEksC,EAAcvrC,IACbsrC,IAAoBC,EAAcvrC,GAAahpE,OAAO6C,OAAO,MAElE,CACF,EAEQqvG,EAAA7xG,UAAAuzG,gBAAR,SACEC,EACAS,GAEA,IAAIE,EAAezzG,KAAKsxG,aAAa9vG,IAAIsxG,GAIzC,OAHKW,GAAgBF,GACnBvzG,KAAKsxG,aAAa7vG,IAAIqxG,EAAUW,EAAe,IAAI/vG,KAE9C+vG,CACT,EAEOtC,EAAA7xG,UAAAovG,gBAAP,SACEttC,EACAgI,EACA3vD,EACAstD,GAJF,IAAAvN,EAAA,KAME,IAAK4H,EAAS0X,cAAe,OAAO,EAIpC,IAAK1P,EAAU,OAAO,EAEtB,IAAMwpC,EAAYxxC,EAAS0X,cAAcvzE,KAAK5D,MAE9C,GAAIynE,IAAawpC,EAAW,OAAO,EAEnC,GAAI5yG,KAAKwxG,oBAAsBxxG,KAAKsxG,aAAaxtG,IAAI8uG,GAyBnD,IAxBA,IAAMc,EAAuB1zG,KAAK6yG,gBAAgBzpC,GAAU,GACtDuqC,EAAY,CAACD,GACbE,EAAe,SAACd,GACpB,IAAMW,EAAej6C,EAAKq5C,gBAAgBC,GAAS,GAEjDW,GACAA,EAAappF,MACbspF,EAAU9wG,QAAQ4wG,GAAgB,GAElCE,EAAU/wG,KAAK6wG,EAEnB,EAQII,KAA8Bp6F,IAAUzZ,KAAKuxG,cAAclnF,MAC3DypF,GAAwB,EAInBh0G,EAAI,EAAGA,EAAI6zG,EAAU9zG,SAAUC,EAAG,CACzC,IAAM2zG,EAAeE,EAAU7zG,GAE/B,GAAI2zG,EAAa3vG,IAAI8uG,GAenB,OAdKc,EAAqB5vG,IAAI8uG,KACxBkB,IAEA,IADFzzG,WAAU86D,SACRzB,EAAAtoD,KAAA,EAAAg4D,EACAwpC,GAQJc,EAAqBr/F,IAAIu+F,KAEpB,EAGTa,EAAa3yG,QAAQ8yG,GAGnBC,GAGA/zG,IAAM6zG,EAAU9zG,OAAS,GAKzBmnG,GAA0B5lC,EAAS2H,aAActvD,EAASstD,KAK1D8sC,GAA2B,EAC3BC,GAAwB,EAMxB9zG,KAAKuxG,cAAczwG,SAAQ,SAACoyG,EAAQa,GAClC,IAAMzyF,EAAQ8nD,EAAS9nD,MAAM4xF,GACzB5xF,GAASA,EAAM,KAAO8nD,GACxBwqC,EAAaG,EAEjB,IAEJ,CAGF,OAAO,CACT,EAEO5C,EAAA7xG,UAAAupG,WAAP,SAAkBz/B,EAA8BnB,GAC9C,IAAM+pC,EAAShyG,KAAK0yG,eAAetpC,EAAUnB,GAAW,GACxD,SAAU+pC,IAAUA,EAAOE,MAC7B,EAEOf,EAAA7xG,UAAAqqG,kBAAP,SAAyBqK,GACf,IAEJjN,EAFI39B,EAAwB4qC,EAAS5qC,SAAvBnB,EAAc+rC,EAAS/rC,UACnC+pC,EAAShyG,KAAK0yG,eAAetpC,EAAUnB,GAAW,GAGpDiqC,EAAQF,GAAUA,EAAOE,MAC7B,GAAIA,GAAS9oC,EAQX,IAPA,IAAMnxB,EAA0C,CAC9CmxB,SAAQA,EACRnB,UAASA,EACTS,MAAOsrC,EAAUtrC,OAAS,KAC1B3B,UAAWitC,EAAUjtC,WAEjBvM,EAAOo2C,GAAuBoD,GAC7B9B,GAAO,CACZ,IAAM+B,EAAoB/B,EAAM13C,EAAMviB,GACtC,IAAIr3C,GAAQqzG,GAEL,CAGLlN,EAAiBkN,GAAqBhsC,EACtC,KACF,CANEiqC,EAAQtC,GAAuBqE,EAOnC,CAYF,YATuB,IAAnBlN,IACFA,EACEiN,EAAUtrC,M3ErnBf,SAAAA,EAAA3B,GACF,IAAAmtC,EAAA,KAEKxrC,EAAAR,aAIAgsC,EAAqB,GACrBxrC,EAAMR,WAAUpnE,SAAG,SAAAkxE,GACrBkiC,EAAkBliC,EAACzsE,KAAA5D,OAAA,GACbqwE,EAAWpyE,WACfoyE,EAAcpyE,UAAUkB,SAAK,SAAYs4D,GAErC,IAAA7zD,EAAU6zD,EAAA7zD,KAAY5D,EAAAy3D,EAAAz3D,MACxB,OAAUklE,GAAmBqtC,EAAeliC,EAAAzsE,KAAA5D,OAAA4D,EAAA5D,EAAAolE,cAShDD,EAAG,YACJ4B,EAAA9oE,WAAA8oE,EAAA9oE,UAAAC,SAEGinE,EAAc,GACd4B,EAAM9oE,UAASkB,SAAS,SAAUs4D,GACpC,IAAM7zD,EAAM6zD,EAAA7zD,KAAA5D,EAAAy3D,EAAAz3D,MACZ,OAAMklE,GAAkCC,EAAAvhE,EAAA5D,EAAAolE,OAEtCiB,GAAAU,EAAAnjE,KAAA5D,MAAAmlE,EAAAotC,G2EulBIC,CAAsBH,EAAUtrC,MAAOsrC,EAAUjtC,WACjDiB,GAAgBC,EAAW2oC,GAAuBoD,MAKjC,IAAnBjN,EACK9+B,EAMFA,IAAc6+B,GAAuBC,GAAkBA,EAC1D9+B,EAAY,IAAM8+B,CACxB,EAEOoK,EAAA7xG,UAAA4pG,UAAP,SACElzE,EACAiiB,GAEA,IAAM0vD,EAAoB3xE,EAAQn0B,KAClC,GAAK8lG,IAEe3xE,EAAQ0yC,OAAS1yC,EAAQiyC,WAC7C,CAEA,QAAyB,IAArBjyC,EAAQozC,SAAqB,CAC/B,IAAMA,EAAWnxB,EAAQsoD,MAAMmH,cAC7BC,EACA,cAEEv+B,IAAUpzC,EAAQozC,SAAWA,EACnC,CAEA,IAAM29B,EAAiB/mG,KAAK2pG,kBAAkB3zE,GACxCiyC,EAAY6+B,GAAuBC,GACnCuB,EAAWrwD,EAAQsoD,MAAMmH,cAC7BC,EACAZ,GAEIiL,EAAShyG,KAAK0yG,eAAe18E,EAAQozC,SAAUnB,GAAW,GAC1D0L,EAAOq+B,GAAUA,EAAOr+B,KAE9B,GAAIA,EAAM,CACR,IAAMygC,EAAcC,GAClBr0G,KACA2nG,EACA3xE,EACAiiB,EACAA,EAAQsoD,MAAM+I,WACZ1iC,GAAY+gC,GACVA,EAAkBhhC,MAClBghC,EACFZ,IAKJ,OAAOhR,GAAU/O,UAAUhnF,KAAK8V,MAAO69D,EAAM,CAC3C20B,EACA8L,GAEJ,CAEA,OAAO9L,CAxCiB,CAyC1B,EAEO6I,EAAA7xG,UAAAg1G,gBAAP,SACElrC,EACAnB,GAEA,IAAM+pC,EAAShyG,KAAK0yG,eAAetpC,EAAUnB,GAAW,GACxD,OAAO+pC,GAAUA,EAAOr+B,IAC1B,EAEOw9B,EAAA7xG,UAAAi1G,iBAAP,SACEC,EACAvsC,EACAwsC,GAEA,IAAIzC,EAGYhyG,KAAK0yG,eAAe8B,EAAgBvsC,GAAW,GAC3DwN,EAAQu8B,GAAUA,EAAOv8B,MAK7B,OAJKA,GAASg/B,IAEZh/B,GADAu8B,EAAShyG,KAAKiyG,cAAcwC,KACVzC,EAAOv8B,OAEpBA,CACT,EAEO07B,EAAA7xG,UAAAo1G,iBAAP,SACEpM,EACAC,EACAnvC,EACAnhB,EACAoxD,OAFE3gC,EAAKtP,EAAAsP,MAAEU,EAAQhQ,EAAAgQ,SAAEqM,EAAKrc,EAAAqc,MAIxB,OAAIA,IAAUu7B,GAIL2D,GAAyB18D,EAAQsoD,MAAjCoU,CACLrM,EACAC,GAIA9yB,IAAUy7B,GAEL3I,GAOLtwD,EAAQokD,YACViM,OAAW,GAGN7yB,EACL6yB,EACAC,EACA8L,GACEr0G,UAYA,EACA,CACEopE,SAAQA,EACRnB,UAAWS,EAAMnjE,KAAK5D,MACtB+mE,MAAKA,EACL3B,UAAW9uB,EAAQ8uB,WAErB9uB,EACAoxD,GAAWpqG,OAAO6C,OAAO,QAG/B,EACFqvG,CAAA,CArpBA,GAupBA,SAASkD,GACP9M,EACAI,EACAqM,EACA/7D,EACAoxD,GAEA,IAAMtC,EAAiBQ,EAASoC,kBAAkBqK,GAC5C/rC,EAAY6+B,GAAuBC,GACnChgC,EAAYitC,EAAUjtC,WAAa9uB,EAAQ8uB,UAC3C3N,EAA2BnhB,EAAQsoD,MAAjCuH,EAAW1uC,EAAA0uC,YAAEF,EAAOxuC,EAAAwuC,QAE5B,MAAO,CACLptC,KAAMo2C,GAAuBoD,GAC7BtrC,MAAOsrC,EAAUtrC,OAAS,KAC1BT,UAASA,EACT8+B,eAAcA,EACdhgC,UAASA,EACTH,YAAWA,GACXkhC,YAAWA,EACXuB,QAAOA,EACPvzF,MAAOyxF,EAASzxF,MAChB8xF,QAAOA,EACPsB,UAAS,WACP,OAAO3B,EAAS2B,UACd6I,GAA0BnyG,UAAW+nG,EAAmB5gC,GACxD9uB,EAEJ,EACAg5D,aAAc0D,GAAyB18D,EAAQsoD,OAEnD,CAEM,SAAUwR,GACd6C,EACAjN,EACA5gC,GAEQ,IAEJ/wC,EAFOmzE,EAA8CyL,EAAa,GAApC/yG,EAAuB+yG,EAAa,GAAtBC,EAASD,EAAa/0G,OAgCtE,MA5BkC,kBAAvBspG,EACTnzE,EAAU,CACRiyC,UAAWkhC,EAIXtnG,KAAMgzG,EAAO,EAAIhzG,EAAO8lG,IAG1B3xE,EAAOqhC,EAAA,GAAQ8xC,GAGVhD,GAAO3mG,KAAKw2B,EAAS,UACxBA,EAAQn0B,KAAO8lG,KAIQ,IAAvBtnG,WAAW86D,cAA0B,IAATnlC,EAASn0B,OAErC,IADFxB,WAAU86D,SACRzB,EAAAtoD,KAAA,EAAAgpD,EAAAh7D,MACAyC,KAAA+yG,UAIA,IAAW5+E,EAAQ+wC,YACrB/wC,EAAQ+wC,UAAYA,GAGf/wC,CACT,CAEA,SAAS2+E,GACPpU,GAEA,OAAO,SAAsB+H,EAAUC,GACrC,GAAI3nG,GAAQ0nG,IAAa1nG,GAAQ2nG,GAC/B,MAAMztC,EAAkB,GAO1B,GAAI4F,GAAgB4nC,IAAa5nC,GAAgB6nC,GAAW,CAC1D,IAAMuM,EAAQvU,EAAMmH,cAAcY,EAAU,cACtCyM,EAAQxU,EAAMmH,cAAca,EAAU,cAG5C,GAFoBuM,GAASC,GAASD,IAAUC,EAG9C,OAAOxM,EAGT,GAAI3hC,GAAY0hC,IAAarB,GAAwBsB,GAKnD,OADAhI,EAAM9qB,MAAM6yB,EAAS3hC,MAAO4hC,GACrBD,EAGT,GAAIrB,GAAwBqB,IAAa1hC,GAAY2hC,GAMnD,OADAhI,EAAM9qB,MAAM6yB,EAAUC,EAAS5hC,OACxB4hC,EAGT,GACEtB,GAAwBqB,IACxBrB,GAAwBsB,GAExB,OAAAlxC,EAAAA,EAAA,GAAYixC,GAAaC,EAE7B,CAEA,OAAOA,CACT,CACF,CCp9BA,SAASyM,GACP/8D,EACAg9D,EACAC,GAEA,IAAMhjG,EAAM,GAAA/R,OAAG80G,GAAU90G,OAAG+0G,GACxBC,EAAWl9D,EAAQm9D,QAAQ5zG,IAAI0Q,GAcnC,OAbKijG,GACHl9D,EAAQm9D,QAAQ3zG,IACdyQ,EACCijG,EACCl9D,EAAQg9D,aAAeA,GAAch9D,EAAQi9D,WAAaA,EACxDj9D,EACDof,EAAAA,EAAA,GACMpf,GAAO,CACVg9D,WAAUA,EACVC,SAAQA,KAIXC,CACT,CAUA,IAAAE,GAAA,WACE,SAAAA,EACkBv/F,EACR49D,EACA5S,GAFQ,KAAAhrD,MAAAA,EACR,KAAA49D,OAAAA,EACA,KAAA5S,UAAAA,CACP,CAylBL,OAvlBSu0C,EAAA/1G,UAAAg2G,aAAP,SACE/U,EACAnnC,GAFF,IAAAI,EAAA,KAEI7hD,EAAKyhD,EAAAzhD,MAAE8B,EAAM2/C,EAAA3/C,OAAE4lF,EAAMjmC,EAAAimC,OAAEt4B,EAAS3N,EAAA2N,UAAEs1B,EAASjjC,EAAAijC,UAEvCkZ,EAAsB/rC,GAAuB7xD,GAC7C49D,ENcD,IAAIC,GMZTzO,EAAS1P,EAAAA,EAAA,GACJ2S,GAAiBurC,IACjBxuC,GAGL,IAAM9uB,EAAOof,EAAAA,EAAA,CACXkpC,MAAKA,EACLiV,QAASv2G,OAAO6C,OAAO,MACvB2zE,MAAK,SAAI6yB,EAAaC,GACpB,OAAOhzB,EAAOE,MAAM6yB,EAAUC,EAChC,EACAxhC,UAASA,EACT8mC,UAAW1pC,GAAmB4C,IAC3BmgC,GAAuBvvF,EAAO3X,KAAK8gE,YAAU,CAChDu7B,YAAaA,EACboZ,aAAc,IAAIxqF,IAClBgqF,YAAY,EACZC,UAAU,EACVE,QAAS,IAAInqF,MAGT3hB,EAAMtJ,KAAK01G,oBAAoB,CACnCj8F,OAAQA,GAAUxa,OAAO6C,OAAO,MAChCu9F,OAAMA,EACNt2B,aAAcwsC,EAAoBxsC,aAClC4sC,UAAW,CAAEpyG,IAAK,IAAI0nB,KACtBgtB,QAAOA,IAGT,IAAK2uB,GAAYt9D,GACf,MAAMwxD,EAAkB,GAAArhD,GA2E1B,OAtEAw+B,EAAQw9D,aAAa30G,SACnB,SAACs4D,EAA0CimC,OAAxC6I,EAAW9uC,EAAA8uC,YAAEyN,EAASv8C,EAAAu8C,UAAEC,EAAYx8C,EAAAw8C,aAC/BC,EAAYnvC,GAAc24B,GAEhC,GAAIsW,GAAaA,EAAUpyG,IAAI8mB,KAAM,CACnC,IAAMyrF,EAAUt8C,EAAKu8C,YACnBJ,EACAE,EACA3N,EACAjwD,GAEF,GAAI2uB,GAAYkvC,GAId,OAIF5N,EAAc4N,CAChB,CAEA,IAAwB,IAApBz1G,WAAW86D,UAAqBljB,EAAAokD,UAAA,CAClC,IAAM2Z,EACJ/2G,OAAO6C,OAAO,MAChB8zG,EAAa90G,SAAQ,SAAC4nE,GAChBA,EAAMK,eACRitC,EAAwBttC,EAAMnjE,KAAK5D,QAAS,EAEhD,IAWA1C,OAAOyB,KAAKwnG,GAAapnG,SAAQ,SAACimG,IATV,SAACA,GACvB,OACA,IADAiP,EAAwBlP,GAAuBC,GAA/C,EAcEkP,CAAgBlP,KAXK,SAACA,GACxB,IAAMmP,EAAYP,GAAaA,EAAUpyG,IAAI/B,IAAIulG,GACjD,OAAO1pC,QAAQ64C,GAAaA,EAAUjxB,MAAQixB,EAAUjxB,KAAKxP,MAC/D,CASK0gC,CAAiBpP,IAskBhC,SACEqP,EACAC,EACAtP,EACAxG,GAEA,IAAM+V,EAAW,SAACzO,GAChB,IAAMrpE,EAAQ+hE,EAAMmH,cAA2BG,EAAUd,GACzD,MAAwB,kBAAVvoE,GAAsBA,CACtC,EAEM8pE,EAAWgO,EAASF,GAC1B,IAAK9N,EAAU,OAEf,IAAMC,EAAW+N,EAASD,GAC1B,IAAK9N,EAAU,OAIf,GAAI3hC,GAAY0hC,GAAW,OAI3B,GAAI/jB,GAAM+jB,EAAUC,GAAW,OAK/B,GACEtpG,OAAOyB,KAAK4nG,GAAU31F,OACpB,SAACT,GAAQ,YAAuC,IAAvCquF,EAAMmH,cAAca,EAAUr2F,EAA9B,IAGX,OAGF,IAAMqkG,EACJhW,EAAMmH,cAAsB0O,EAAa,eACzC7V,EAAMmH,cAAsB2O,EAAa,cACrCpuC,EAAY6+B,GAAuBC,GACnCyP,EAAc,GAAAr2G,OAAGo2G,EAAU,KAAAp2G,OAAI8nE,GAErC,GAAIwuC,GAAS3yG,IAAI0yG,GAAc,OAC/BC,GAASpiG,IAAImiG,GAEb,IAAME,EAA2B,GAG5B91G,GAAQ0nG,IAAc1nG,GAAQ2nG,IACjC,CAACD,EAAUC,GAAUznG,SAAQ,SAAC09B,GAC5B,IAAM4qC,EAAWm3B,EAAMmH,cAAclpE,EAAO,cACpB,kBAAb4qC,GAA0BstC,EAAej+F,SAAS2wD,IAC3DstC,EAAe9zG,KAAKwmE,EAExB,KAIA,IADF/oE,WAAU86D,SACRzB,EAAAtoD,KAAA,GAAA62D,EAAAsuC,EAAAG,EAAA72G,OAiBE,qCACE62G,EAAehxG,KAAK,SACpB,8CACF,GACF8wG,EAAWn/C,EAAA,GACNixC,GAAQjxC,EAAA,GACRkxC,GAET,CAvpBcoO,CACEd,EACA3N,EACAnB,EACA9uD,EAAQsoD,MAGd,GACF,CAEAA,EAAM9qB,MAAM4pB,EAAQ6I,EACtB,IAQF3H,EAAM4J,OAAO7gG,EAAIq9D,OAEVr9D,CACT,EAEQ+rG,EAAA/1G,UAAAo2G,oBAAR,SAA4Bt8C,GAA5B,IAAAI,EAAA,KACE6lC,EAAMjmC,EAAAimC,OACN5lF,EAAM2/C,EAAA3/C,OACNsvD,EAAY3P,EAAA2P,aACZ9wB,EAAOmhB,EAAAnhB,QAGP09D,EAASv8C,EAAAu8C,UAEDpO,EAAavnG,KAAK8V,MAAKyxF,SAI3BgB,EAAwBtpG,OAAO6C,OAAO,MAKpCsnE,EACHi2B,GAAUkI,EAASY,kBAAkB9I,IACtCv2B,GAAsBrvD,EAAQsvD,EAAc9wB,EAAQspB,cACnD89B,GAAWpnD,EAAQsoD,MAAM/+F,IAAI69F,EAAQ,cAEpC,kBAAoBj2B,IACtBm/B,EAASr/B,WAAaE,GAWxB,IAAM8/B,EAA+B,WACnC,IAAMlzE,EAAU+7E,GACdnyG,UACA2oG,EACAtwD,EAAQ8uB,WAGV,GAAIH,GAAY5wC,EAAQn0B,MAAO,CAC7B,IAAMojF,EAAOhtC,EAAQw9D,aAAaj0G,IAAIw0B,EAAQn0B,KAAK8kE,OACnD,GAAIse,EAAM,CACR,IAAM2xB,EAASrP,EAAS2B,UAAS7xC,EAAAA,EAAC,CAAD,EAE1BrhC,GAAO,CACVn0B,KAAMojF,EAAKijB,cAEbjwD,GAGF,QAAe,IAAX2+D,EACF,OAAOA,CAEX,CACF,CAEA,OAAOrP,EAAS2B,UAAUlzE,EAASiiB,EACrC,EAEM29D,EAAe,IAAIlyG,IAEzB1D,KAAK62G,cACH9tC,EACAtvD,EAIAw+B,EACAmxB,GACAtoE,SAAQ,SAACm3C,EAASywB,SACZouC,EAAiBluC,GAAuBF,GACxC/mE,EAAQ8X,EAAOq9F,GAIrB,GAFAlB,EAAavhG,IAAIq0D,QAEH,IAAV/mE,EAAkB,CACpB,IAAMolG,EAAiBQ,EAASoC,kBAAkB,CAChDvgC,SAAQA,EACRnB,UAAWS,EAAMnjE,KAAK5D,MACtB+mE,MAAKA,EACL3B,UAAW9uB,EAAQ8uB,YAGfmvC,EAAYa,GAAkBpB,EAAW5O,GAE3CmF,EAAgB1yC,EAAKw9C,kBACvBr1G,EACA+mE,EAGAA,EAAMK,aACJisC,GAAiB/8D,GAAS,GAAO,GACjCA,EACFi+D,GAMEzB,OAAa,EAKf/rC,EAAMK,eACLnC,GAAYslC,IAAkBjF,GAAwBiF,MAEvDuI,EAAgBvL,EAAkB,aAAcgD,IAGlD,IAAMz2B,EAAQ8xB,EAASgN,iBACrBnrC,EACAV,EAAMnjE,KAAK5D,MACX8yG,GAGEh/B,EACFygC,EAAUjxB,KAAO,CAEfvc,MAAKA,EACLU,SAAQA,EACRqM,MAAKA,GAGPwhC,GAA2BtB,EAAW5O,GAGxCwB,EAAWtwD,EAAQw9B,MAAM8yB,IAAQnvC,EAAA,IAC9B2tC,GAAiBmF,EAAa,GAEnC,MACS,IAAP7rG,WAAO86D,SACNljB,EAAQg9D,YACRh9D,EAAQi9D,UACR30B,GAAsBE,MAAM/X,IAI5B6+B,EAAS+M,gBAAgBlrC,EAAUV,EAAMnjE,KAAK5D,SAG7C,IADFtB,WAAU86D,SACRzB,EAAAzgD,MAAA,GAAA2vD,GACAF,GAAAjvD,EAIN,IAIA,IACQ,IAAAyqD,EAAkBqjC,EAASzP,SAASr+E,EAAQ,CAChD2vD,SAAQA,EACRL,aAAYA,EACZxH,YAAatpB,EAAQspB,YACrB2mC,YAAaK,EACbW,UAASA,IALJ7/F,EAAE66D,EAAA,GAAEqiC,EAASriC,EAAA,GAUpBm7B,EAASA,GAAUh2F,EAIfk9F,IAEFgC,EAAWtwD,EAAQw9B,MAAM8yB,EAAUhC,GAEvC,CAAE,MAAOxnG,IAEP,IAAKsgG,EAAQ,MAAMtgG,EACrB,CAEA,GAAI,kBAAoBsgG,EAAQ,CAC9B,IAAM6X,EAAUxwC,GAAc24B,GAOxB8X,EAAOl/D,EAAQu9D,QAAQnW,KAAYpnD,EAAQu9D,QAAQnW,GAAU,IACnE,GAAI8X,EAAKt0G,QAAQkmE,IAAiB,EAAG,OAAOmuC,EAQ5C,GAPAC,EAAKv0G,KAAKmmE,GAQR/oE,KAAK0zE,QACL1zE,KAAK0zE,OAAO06B,QAAQ30F,EAAQy9F,EAASnuC,EAAc9wB,GAEnD,OAAOi/D,EAGT,IAAME,EAAWn/D,EAAQw9D,aAAaj0G,IAAI69F,GAgB1C,OAfI+X,GACFA,EAASlP,YAAcjwD,EAAQw9B,MAAM2hC,EAASlP,YAAaK,GAC3D6O,EAASzB,UAAY0B,GAAgBD,EAASzB,UAAWA,GACzDC,EAAa90G,SAAQ,SAAC4nE,GAAU,OAAA0uC,EAASxB,aAAavhG,IAAIq0D,EAA1B,KAEhCzwB,EAAQw9D,aAAah0G,IAAI49F,EAAQ,CAC/B6I,YAAaK,EAIboN,UAAW2B,GAAiB3B,QAAa,EAASA,EAClDC,aAAYA,IAITsB,CACT,CAEA,OAAO3O,CACT,EAEQ8M,EAAA/1G,UAAA03G,kBAAR,SACEr1G,EACA+mE,EACAzwB,EACA09D,GAJF,IAAAn8C,EAAA,KAME,OAAKkP,EAAMK,cAA0B,OAAVpnE,EAOvBf,GAAQe,GACHA,EAAM4B,KAAI,SAAC+8D,EAAMxgE,GACtB,IAAM6B,EAAQ63D,EAAKw9C,kBACjB12C,EACAoI,EACAzwB,EACA8+D,GAAkBpB,EAAW71G,IAG/B,OADAm3G,GAA2BtB,EAAW71G,GAC/B6B,CACT,IAGK3B,KAAK01G,oBAAoB,CAC9Bj8F,OAAQ9X,EACRonE,aAAcL,EAAMK,aACpB9wB,QAAOA,EACP09D,UAASA,KApBkB,IAApBt1G,WAAU86D,QAAmB8yB,GAAMtsF,GAAAA,CAsB9C,EAIQ0zG,EAAA/1G,UAAAu3G,cAAR,SAWE9tC,EACAtvD,EACAw+B,EACAmxB,QAAA,IAAAA,IAAAA,EAAWN,GAAsBrvD,EAAQsvD,EAAc9wB,EAAQspB,cAE/D,IAAMg2C,EAAW,IAAItsF,IACbs8E,EAAavnG,KAAK8V,MAAKyxF,SAEzBiQ,EAAe,IAAI5xB,IAUtB,GA6FH,OA3FA,SAAU6xB,EAER1uC,EACA2uC,GAEA,IAAMC,EAAcH,EAAa/xC,OAC/BsD,EAKA2uC,EAAiBzC,WACjByC,EAAiBxC,UAEfyC,EAAYC,UAChBD,EAAYC,SAAU,EAEtB7uC,EAAaC,WAAWloE,SAAQ,SAACwgE,GAC/B,GAAKyQ,GAAczQ,EAAWrpB,EAAQ8uB,WAAtC,CAEM,IAAAkuC,EAAyByC,EAAgBzC,WAA7BC,EAAawC,EAAgBxC,SA0B/C,GArBID,GAAcC,IAChB9/B,GAAgB9T,EAAU4G,aAE1B5G,EAAU4G,WAAWpnE,SAAQ,SAAC2W,GAC5B,IAAMlS,EAAOkS,EAAIlS,KAAK5D,MAEtB,GADa,WAAT4D,IAAmB0vG,GAAa,GACvB,UAAT1vG,EAAkB,CACpB,IAAMi1D,EAAOiO,GAAyBhxD,EAAKwgC,EAAQ8uB,WAK9CvM,IAA0C,IAAjCA,EAA0Bq9C,KACtC3C,GAAW,EAIf,CACF,IAGEjsC,GAAQ3H,GAAY,CACtB,IAAMgnC,EAAWiP,EAAS/1G,IAAI8/D,GAC1BgnC,IAIF2M,EAAaA,GAAc3M,EAAS2M,WACpCC,EAAWA,GAAY5M,EAAS4M,UAGlCqC,EAAS91G,IACP6/D,EACA0zC,GAAiB/8D,EAASg9D,EAAYC,GAE1C,KAAO,CACL,IAAM9zC,EAAWC,GACfC,EACArpB,EAAQkvD,gBAGV,IAAK/lC,GAAYE,EAAUN,OAASoP,GAAK8N,gBACvC,MAAMpjB,EACJ,GAAAwG,EAAA/7D,KAAA5D,OAMFy/D,GACAmmC,EAASmH,gBACPttC,EACAgI,EACA3vD,EACAw+B,EAAQ8uB,YAGV0wC,EACEr2C,EAAS2H,aACTisC,GAAiB/8D,EAASg9D,EAAYC,GAG5C,CArEwD,CAsE1D,IACD,CAzFD,CAyFGnsC,EAAc9wB,GAEVs/D,CACT,EAEQlC,EAAA/1G,UAAAy2G,YAAR,SACEJ,EACArN,EACAC,EACAtwD,EACA6/D,SALFt+C,EAAA,KAOE,GAAIm8C,EAAUpyG,IAAI8mB,OAASu8C,GAAY2hC,GAAW,CAChD,IAgCIO,EAhCEiP,EAKDn3G,GAAQ2nG,KAIR3hC,GAAY0hC,KAAarB,GAAwBqB,QAGlD,EADAA,EAME0P,EAAIzP,EAMNwP,IAAMD,IACRA,EAAiB,CAAClxC,GAAYmxC,GAAKA,EAAEpxC,MAAQoxC,IAU/C,IAAME,EAAW,SACfp2G,EACA0D,GAEA,OACE3E,GAAQiB,GACU,kBAAT0D,EACL1D,EAAK0D,QACL,EACF0yC,EAAQsoD,MAAMmH,cAAc7lG,EAAMsM,OAAO5I,GAE/C,EAEAowG,EAAUpyG,IAAIzC,SAAQ,SAACo1G,EAAWnP,GAChC,IAAMmR,EAAOD,EAASF,EAAGhR,GACnBoR,EAAOF,EAASD,EAAGjR,GAEzB,QAAI,IAAWoR,EAAf,CACIL,GACFA,EAAel1G,KAAKmkG,GAEtB,IAAMqR,EAAO5+C,EAAKu8C,YAChBG,EACAgC,EACAC,EACAlgE,EACA6/D,GAEEM,IAASD,IACXrP,EAAgBA,GAAiB,IAAI79E,KACvBxpB,IAAIslG,EAAgBqR,GAEhCN,GACFp+C,EAAUo+C,EAAe/pG,QAAUg5F,EAhBV,CAkB7B,IAEI+B,IAEFP,EAAY3nG,GAAQo3G,GAAKA,EAAE93G,MAAM,GAAIm3D,EAAA,GAAM2gD,GAC3ClP,EAAchoG,SAAQ,SAACa,EAAO4D,GAC3BgjG,EAAiBhjG,GAAQ5D,CAC5B,IAEJ,CAEA,OAAIg0G,EAAU1wB,KACLjlF,KAAK8V,MAAMyxF,SAASmN,iBACzBpM,EACAC,EACAoN,EAAU1wB,KACVhtC,EACA6/D,IAAkB1+C,EAAAnhB,EAAQsoD,OAAM+I,WAAUvpG,MAAAq5D,EAAI0+C,IAI3CvP,CACT,EACF8M,CAAA,CA9lBA,GAgmBMgD,GAAkC,GAExC,SAAStB,GACP39C,EACA7zD,OADEhC,EAAG61D,EAAA71D,IAML,OAHKA,EAAIO,IAAIyB,IACXhC,EAAI9B,IAAI8D,EAAM8yG,GAAmBtqG,OAAS,CAAExK,IAAK,IAAI0nB,MAEhD1nB,EAAI/B,IAAI+D,EACjB,CAEA,SAAS8xG,GACP7oE,EACAy3B,GAEA,GAAIz3B,IAASy3B,IAAUA,GAASqxC,GAAiBrxC,GAAQ,OAAOz3B,EAChE,IAAKA,GAAQ8oE,GAAiB9oE,GAAO,OAAOy3B,EAE5C,IAAMgf,EACJz2C,EAAKy2C,MAAQhf,EAAMgf,KAAM5tB,EAAAA,EAAA,GAElB7oB,EAAKy2C,MACLhf,EAAMgf,MAEXz2C,EAAKy2C,MAAQhf,EAAMgf,KAEjBqzB,EAAkB9pE,EAAKjrC,IAAI8mB,MAAQ47C,EAAM1iE,IAAI8mB,KAM7Cm+E,EAAS,CAAEvjB,KAAIA,EAAE1hF,IAJrB+0G,EAAkB,IAAIrtF,IACpBujB,EAAKjrC,IAAI8mB,KAAOmkB,EAAKjrC,IACrB0iE,EAAM1iE,KAIV,GAAI+0G,EAAiB,CACnB,IAAMC,EAAqB,IAAI70G,IAAIuiE,EAAM1iE,IAAI7C,QAE7C8tC,EAAKjrC,IAAIzC,SAAQ,SAAC03G,EAAUtmG,GAC1Bs2F,EAAOjlG,IAAI9B,IAAIyQ,EAAKmlG,GAAgBmB,EAAUvyC,EAAM1iE,IAAI/B,IAAI0Q,KAC5DqmG,EAAmBrjG,OAAOhD,EAC5B,IAEAqmG,EAAmBz3G,SAAQ,SAACoR,GAC1Bs2F,EAAOjlG,IAAI9B,IACTyQ,EACAmlG,GAAgBpxC,EAAM1iE,IAAI/B,IAAI0Q,GAAMs8B,EAAKjrC,IAAI/B,IAAI0Q,IAErD,GACF,CAEA,OAAOs2F,CACT,CAEA,SAAS8O,GAAiBtI,GACxB,OAAQA,KAAUA,EAAK/pB,MAAQ+pB,EAAKzrG,IAAI8mB,KAC1C,CAEA,SAAS4sF,GAA2B79C,EAAoB7zD,OAAlBhC,EAAG61D,EAAA71D,IACjC2yG,EAAY3yG,EAAI/B,IAAI+D,GACtB2wG,GAAaoB,GAAiBpB,KAChCmC,GAAmBz1G,KAAKszG,GACxB3yG,EAAI2R,OAAO3P,GAEf,CAEA,IAAMkxG,GAAW,IAAI/yG,ICjvBrB,IAAA+0G,GAAA,SAAAl/C,GA6BE,SAAAk/C,EAAY1zC,QAAA,IAAAA,IAAAA,EAAA,IACV,IAAAvL,EAAAD,EAAK/5D,KAAC,OAAC,YAzBDg6D,EAAAk/C,QAAU,IAAIh1G,IAKd81D,EAAAm/C,qBAAuB,IAAI5tB,GAAkBxK,IAUrC/mB,EAAAq7B,wBAAyB,EAOzBr7B,EAAA48B,QAAUA,GA4VlB58B,EAAAo/C,QAAU,EAxVhBp/C,EAAKuL,OPMH,SAA0BA,GAC9B,OAAOgpB,GAAQyY,GAAezhC,EAChC,CORkB8zC,CAAgB9zC,GAC9BvL,EAAKktC,cAAgBltC,EAAKuL,OAAO2hC,YAEjCltC,EAAK+tC,SAAW,IAAI4J,GAAS,CAC3Br7F,MAAO0jD,EACPitC,iBAAkBjtC,EAAKuL,OAAO0hC,iBAC9BiL,cAAel4C,EAAKuL,OAAO2sC,cAC3BN,aAAc53C,EAAKuL,OAAOqsC,eAG5B53C,EAAKohC,QACP,CAigBF,OA3iBmCzjC,EAAAshD,EAAAl/C,GA4CzBk/C,EAAAn5G,UAAAs7F,KAAR,WAIE,IAAMke,EAAa94G,KAAKsvB,KAAO,IAAIg4E,GAAY6D,KAAK,CAClD5D,SAAUvnG,KAAKunG,SACfZ,cAAe3mG,KAAK+kE,OAAO4hC,gBAQ7B3mG,KAAK+4G,eAAiBD,EAAUzN,MAEhCrrG,KAAKg5G,kBACP,EAEQP,EAAAn5G,UAAA05G,iBAAR,SAAyBC,GAAzB,IAAAz/C,EAAA,KACQ0/C,EAAiBl5G,KAAKm5G,YACpBr4C,EAAc9gE,KAAK+kE,OAAMjE,UAKjC9gE,KAAKo5G,YAAc,IAAI/D,GACrBr1G,KACCA,KAAKm5G,YAAc,IAAI9L,GAAY,CAClCv3F,MAAO9V,KACP0mG,YAAa1mG,KAAK0mG,YAClBkH,mBAAoB5tG,KAAK+kE,OAAO6oC,mBAChC1S,gBAAiB0L,GAAsB5mG,KAAK+kE,QAC5CwoC,MACE0L,OAAwB,EACtBC,GAAkBA,EAAe3L,MAErCzsC,UAASA,IAEXA,GAGF9gE,KAAKslE,oBAAsB/K,IACzB,SAACv5D,EAAuBg1B,GACtB,OAAOwjC,EAAK6/C,eAAer4G,EAAGg1B,EAChC,GACA,CACEpQ,IACE5lB,KAAK+kE,OAAO6oC,oBACZpqC,GAAW,sCAAoC,IAEjD+mB,aAAc,SAACvpF,GAGb,IAAMu/F,EAAQv/F,EAAEypF,WAAajxB,EAAKu/C,eAAiBv/C,EAAKlqC,KACxD,GAAI47E,GAAsB3K,GAAQ,CACxB,IAAA9V,EAA8BzpF,EAACypF,WAAnBphF,EAAkBrI,EAACqI,GAAf09D,EAAc/lE,EAAC+lE,UACvC,OAAOw5B,EAAMhW,aACXvpF,EAAE2W,MAOF3W,EAAEs4C,SACF6qB,GAAmB,CAAEsmB,WAAUA,EAAEphF,GAAEA,EAAE09D,UAASA,IAElD,CACF,IAOJ,IAAIrjE,IAAI,CAAC1D,KAAKsvB,KAAKk4E,MAAOxnG,KAAK+4G,eAAevR,QAAQ1mG,SAAQ,SAAC0mG,GAC7D,OAAAA,EAAMsD,cAAN,GAEJ,EAEO2N,EAAAn5G,UAAAg6G,QAAP,SAAehqF,GAMb,OALAtvB,KAAK46F,OAIDtrE,GAAMtvB,KAAKsvB,KAAKpL,QAAQoL,GACrBtvB,IACT,EAEOy4G,EAAAn5G,UAAAglG,QAAP,SAAe7Z,GACb,YADa,IAAAA,IAAAA,GAAA,IACLA,EAAazqF,KAAK+4G,eAAiB/4G,KAAKsvB,MAAMg1E,SACxD,EAEOmU,EAAAn5G,UAAAq0E,KAAP,SAAe39C,GASX,IAAAojC,EACEpjC,EAAOs7D,kBADTA,OAAiB,IAAAl4B,GAAQA,EAE3B,IACE,OACEp5D,KAAKm5G,YAAYnL,sBAAqB32C,EAAAA,EAAA,GACjCrhC,GAAO,CACVuqE,MAAOvqE,EAAQy0D,WAAazqF,KAAK+4G,eAAiB/4G,KAAKsvB,KACvDy1C,OAAQ/kE,KAAK+kE,OACbusB,kBAAiBA,KAChB73E,QAAU,IAEjB,CAAE,MAAO1a,IACP,GAAIA,cAAa+mG,GAMf,OAAO,KAET,MAAM/mG,EACR,CACF,EAEO05G,EAAAn5G,UAAAwgG,MAAP,SAAa9pE,GACX,IAEE,QADEh2B,KAAK44G,QACA54G,KAAKo5G,YAAY9D,aAAat1G,KAAKsvB,KAAM0G,EAClD,CAAE,UACOh2B,KAAK44G,UAAiC,IAAtB5iF,EAAQugE,WAC7Bv2F,KAAKs2F,kBAET,CACF,EAEOmiB,EAAAn5G,UAAAyV,OAAP,SACEihB,GAEA,GAAImwE,GAAO3mG,KAAKw2B,EAAS,QAAUA,EAAQ3sB,GAUzC,OAAO,EAET,IAAMk3F,EAEFvqE,EAAQy0D,WAERzqF,KAAK+4G,eACL/4G,KAAKsvB,KACT,IAEE,QADEtvB,KAAK44G,QACArY,EAAMxrF,OAAOihB,EAAQ3sB,IAAM,aAAc2sB,EAAQsxC,OAC1D,CAAE,UACOtnE,KAAK44G,UAAiC,IAAtB5iF,EAAQugE,WAC7Bv2F,KAAKs2F,kBAET,CACF,EAEOmiB,EAAAn5G,UAAA8xF,KAAP,SACEp7D,GAEA,OAAOh2B,KAAKm5G,YAAYnL,sBAAqB32C,EAAAA,EAAC,CAAC,EAC1CrhC,GAAO,CACVuqE,MAAOvqE,EAAQy0D,WAAazqF,KAAK+4G,eAAiB/4G,KAAKsvB,KACvDk2E,OAAQxvE,EAAQ3sB,IAAM,aACtB07D,OAAQ/kE,KAAK+kE,SAEjB,EAEO0zC,EAAAn5G,UAAAg0F,MAAP,SACEA,GADF,IAAA95B,EAAA,KAoBE,OAjBKx5D,KAAK04G,QAAQruF,MhBrNhB,SAAsBvU,GAC1BmgF,GAAangF,GAAO08E,KAAK1xF,SAAQ,SAACq1F,GAAO,OAAAA,EAAGQ,YAAY7gF,EAAf,GAC3C,CgB8NMyjG,CAAYv5G,MAEdA,KAAK04G,QAAQrkG,IAAIi/E,GACbA,EAAMoS,WACR1lG,KAAKslE,oBAAoBguB,GAEpB,WAID95B,EAAKk/C,QAAQxjG,OAAOo+E,KAAW95B,EAAKk/C,QAAQruF,MAC9C6rE,GAAY18B,GAKdA,EAAK8L,oBAAoB2jB,OAAOqK,EAClC,CACF,EAEOmlB,EAAAn5G,UAAAogC,GAAP,SAAU1J,SASRmuC,GAAmBiC,QACnBpC,GAAMoC,QACNpmE,KAAK24G,qBAAqBxtB,aACL,QAArB/xB,EAAAp5D,KAAK+kE,OAAOjE,iBAAS,IAAA1H,GAAAA,EAAEogD,cACvB,IAAMnP,EAAMrqG,KAAK+4G,eAAer5E,KAQhC,OAPI1J,IAAYh2B,KAAK44G,UACf5iF,EAAQgjF,iBACVh5G,KAAKg5G,iBAAiBhjF,EAAQijF,uBACrBjjF,EAAQijF,uBACjBj5G,KAAKm5G,YAAYpL,cAGd1D,CACT,EASOoO,EAAAn5G,UAAA6qG,OAAP,SAAc3E,EAAgB/a,GAC5B,OAAQA,EAAazqF,KAAK+4G,eAAiB/4G,KAAKsvB,MAAM66E,OAAO3E,EAC/D,EAOOiT,EAAAn5G,UAAA8qG,QAAP,SAAe5E,EAAgB/a,GAC7B,OAAQA,EAAazqF,KAAK+4G,eAAiB/4G,KAAKsvB,MAAM86E,QAAQ5E,EAChE,EAQOiT,EAAAn5G,UAAAw4F,SAAP,SAAgBvrB,GACd,GAAI3F,GAAY2F,GAAS,OAAOA,EAAO5F,MACvC,IACE,OAAO3mE,KAAKunG,SAASzP,SAASvrB,GAAQ,EACxC,CAAE,MAAOxtE,KACW,IAAlBsB,WAAU86D,SAAQzB,EAAAtoD,KAAArS,GACpB,CACF,EAEO05G,EAAAn5G,UAAAsqG,MAAP,SAAa5zE,GACX,IAAKA,EAAQ3sB,GAAI,CACf,GAAI88F,GAAO3mG,KAAKw2B,EAAS,MAGvB,OAAO,EAETA,EAAOqhC,EAAAA,EAAA,GAAQrhC,GAAO,CAAE3sB,GAAI,cAC9B,CACA,IASE,QAJErJ,KAAK44G,QAIA54G,KAAK+4G,eAAenP,MAAM5zE,EAASh2B,KAAKsvB,KACjD,CAAE,UACOtvB,KAAK44G,UAAiC,IAAtB5iF,EAAQugE,WAC7Bv2F,KAAKs2F,kBAET,CACF,EAEOmiB,EAAAn5G,UAAA8mE,MAAP,SAAapwC,GAAb,IAAAwjC,EAAA,KAqBE,OApBAx5D,KAAK46F,OAELz2B,GAAmBiC,QAEfpwC,GAAWA,EAAQ8qE,gBAGrB9gG,KAAK04G,QAAQ53G,SAAQ,SAACwyF,GAAU,OAAA95B,EAAK8L,oBAAoB2jB,OAAOqK,EAAhC,IAChCtzF,KAAK04G,QAAQvjG,QACb+gF,GAAYl2F,OAQZA,KAAKs2F,mBAGAv1F,QAAQqH,SACjB,EAEOqwG,EAAAn5G,UAAA4/F,iBAAP,SAAwBua,GACtB,IAAMC,EAAoB15G,KAAK+4G,eAAepN,YAAY8N,GACtDC,IAAsB15G,KAAK+4G,iBAC7B/4G,KAAK+4G,eAAiBW,EACtB15G,KAAKs2F,mBAET,EAIOmiB,EAAAn5G,UAAA4zF,MAAP,SACEl9D,GADF,IAUMqvE,EAVN7rC,EAAA,KAII1kD,EAIEkhB,EAAOlhB,OAHTskD,EAGEpjC,EAAOy0D,WAHTA,OAAU,IAAArxB,GAAOA,EACjB8lC,EAEElpE,EAAOkpE,iBADT7L,EACEr9D,EAAOq9D,eAGLsmB,EAAU,SAACC,GACT,IAAAxgD,EAA2BI,EAAzBlqC,EAAI8pC,EAAA9pC,KAAEypF,EAAc3/C,EAAA2/C,iBAC1Bv/C,EAAKo/C,QACHgB,IACFpgD,EAAKlqC,KAAOkqC,EAAKu/C,eAAiBa,GAEpC,IACE,OAAQvU,EAAevwF,EAAO0kD,EAChC,CAAE,UACEA,EAAKo/C,QACPp/C,EAAKlqC,KAAOA,EACZkqC,EAAKu/C,eAAiBA,CACxB,CACF,EAEMc,EAAe,IAAIn2G,IAwEzB,OAtEI2vF,IAAmBrzF,KAAK44G,SAU1B54G,KAAKs2F,iBAAgBj/B,EAAAA,EAAC,CAAC,EAClBrhC,GAAO,CACVq9D,eAAc,SAACC,GAEb,OADAumB,EAAaxlG,IAAIi/E,IACV,CACT,KAIsB,kBAAf7I,EAITzqF,KAAK+4G,eAAiB/4G,KAAK+4G,eAAevN,SAAS/gB,EAAYkvB,IACvC,IAAflvB,EAMTkvB,EAAQ35G,KAAKsvB,MAIbqqF,IAG8B,kBAArBza,IACTl/F,KAAK+4G,eAAiB/4G,KAAK+4G,eAAepN,YAAYzM,IAMpD7L,GAAkBwmB,EAAaxvF,MACjCrqB,KAAKs2F,iBAAgBj/B,EAAAA,EAAC,CAAC,EAClBrhC,GAAO,CACVq9D,eAAc,SAACC,EAAOlC,GACpB,IAAM33E,EAAS45E,EAAe7zF,KAAKQ,KAAMszF,EAAOlC,GAOhD,OANe,IAAX33E,GAIFogG,EAAa3kG,OAAOo+E,GAEf75E,CACT,KAIEogG,EAAaxvF,MACfwvF,EAAa/4G,SAAQ,SAACwyF,GAAU,OAAA95B,EAAK8L,oBAAoBt7C,MAAMspE,EAA/B,KAMlCtzF,KAAKs2F,iBAAiBtgE,GAGjBqvE,CACT,EAEOoT,EAAAn5G,UAAA88F,mBAAP,SACEtnF,EACAwwF,GAEA,OAAOtlG,KAAKkzF,MAAM,CAChBp+E,OAAMA,EACN21E,WAAY6a,GAAiC,OAAjBA,GAEhC,EAEOmT,EAAAn5G,UAAA+rF,kBAAP,SAAyBz6D,GACvB,OAAO5wB,KAAKugF,sBAAsBvgF,KAAK85G,uBAAuBlpF,GAChE,EAEU6nF,EAAAn5G,UAAAg3F,iBAAV,SAA2BtgE,GAA3B,IAAAwjC,EAAA,KACOx5D,KAAK44G,SACR54G,KAAK04G,QAAQ53G,SAAQ,SAACE,GAAM,OAAAw4D,EAAK8L,oBAAoBtkE,EAAGg1B,EAA5B,GAEhC,EAEQyiF,EAAAn5G,UAAAw6G,uBAAR,SAA+BlpF,GACrB,IAAAkwC,EAAc9gE,KAAK+kE,OAAMjE,UACjC,OAAOA,EAAYA,EAAU4E,UAAU90C,GAAYA,CACrD,EAEQ6nF,EAAAn5G,UAAAihF,sBAAR,SAA8B3vD,GAC5B,OAAI5wB,KAAK0mG,YACA1mG,KAAK24G,qBAAqBttB,kBAAkBz6D,GAE9CA,CACT,EAQQ6nF,EAAAn5G,UAAA+5G,eAAR,SAAuBr4G,EAAuBg1B,GACpC,IAAA6kE,EAAa75F,EAAC65F,SAQhBzJ,EAAOpxF,KAAKoxF,KAAUpwF,GAExBg1B,IACEh1B,EAAEypF,YAA4C,kBAAvBz0D,EAAQy0D,aACjC2G,EAAKmK,2BAA4B,GAIjCvlE,EAAQq9D,iBACiD,IAAzDr9D,EAAQq9D,eAAe7zF,KAAKQ,KAAMgB,EAAGowF,EAAMyJ,KAQ1CA,GAAatW,GAAMsW,EAASphF,OAAQ23E,EAAK33E,SAC5CzY,EAAEs4C,SAAUt4C,EAAE65F,SAAWzJ,EAAOyJ,EAEpC,EAUF4d,CAAA,CA3iBA,CAAmCtT,KA6iBrB,IAAV9kG,WAAU86D,UACZs9C,GAAcn5G,UAAUulE,mBAAqBC,ICllB/C,MAOA,GAPe,IAAI0+B,GAAa,CAC9BhoE,KAAM,IAAI4oD,GAAS,CACjBpD,IAAK,wCAEPlrE,MAAO,IAAI2iG,KCDb,ICUYsB,GAYRjkG,GDtBAkkG,IAA6B,EAmBpBt6D,GANIsc,EAAa,sBAQ3B,SAAC3lD,EAAWumC,EAAaq9D,GAKxB,IAAMt4G,EAAQi7C,KAGL,IAAPv8C,WAAO86D,SACN6+C,IAGDr4G,IAAUi7C,MAEVo9D,IAA6B,GAG3B,IADF35G,WAAU86D,SACRzB,EAAAzgD,MAAA,KAkBE,IAAAmgD,EAA0B4C,EAAAA,SAAe,CAC7Ck+C,KAAM,CAAEv4G,MAAKA,EAAEi7C,YAAWA,KADnBs9D,EAAI9gD,EAAA,GAAA8gD,KAAI5oD,EAAW8H,EAAA,GAuD5B,OAhDIyC,EAKFG,EAAAA,iBAAsB,WACpB/8D,OAAOS,OAAOw6G,EAAM,CAAEv4G,MAAKA,EAAEi7C,YAAWA,IAKpCu9D,GAAuBD,IAEzB5oD,EAAY,CAAE4oD,KAAIA,GAItB,GAAG,CAAC7jG,EAAW1U,EAAOi7C,IAEtB39C,OAAOS,OAAOw6G,EAAM,CAAEv4G,MAAKA,EAAEi7C,YAAWA,IAG1Cof,EAAAA,WAAgB,WASd,OANIm+C,GAAuBD,IAEzB5oD,EAAY,CAAE4oD,KAAIA,IAIb7jG,GAAU,WAQX8jG,GAAuBD,IAEzB5oD,EAAY,CAAE4oD,KAAIA,GAEtB,GAGF,GAAG,CAAC7jG,IAEG1U,CACT,EAEF,SAASw4G,GAAiC/gD,OACxCz3D,EAAKy3D,EAAAz3D,MACLi7C,EAAWwc,EAAAxc,YAKX,IACE,OAAOj7C,IAAUi7C,GACnB,CAAE,MAAAsnB,GACA,OAAO,CACT,CACF,CC7FM,SAAUgH,GAAcr8D,GAC5B,IAAItJ,EACJ,OAAQsJ,GACN,KAAKkrG,GAAaK,MAChB70G,EAAO,QACP,MACF,KAAKw0G,GAAaM,SAChB90G,EAAO,WACP,MACF,KAAKw0G,GAAap7C,aAChBp5D,EAAO,eAGX,OAAOA,CACT,CAGM,SAAU0+D,GAAOrzC,GAChB9a,KACHA,GAAQ,IAAIstD,GACVI,GAAWS,QAAU,MAGzB,IAGI8C,EAAWl4D,EAHTq8E,EAASp1E,GAAMtU,IAAIovB,GACzB,GAAIs6D,EAAQ,OAAOA,EAInBxxB,IACI9oC,KAAcA,EAASowC,KACzB,GAAApwC,GAQF,QAPIkwC,EAAA,GACAr6C,EAAA,GAIE49E,EAA8B,GAC9BtkC,EAA+B,GAC/BtF,EAAS,EAAqBrB,EAAGxoC,EAAAmwC,YAAAtG,EAAArB,EAAAv5D,OAAA46D,IAAA,CACjC,IAAA95D,EAAAy4D,EAAAqB,GAEN,GAAgB,uBAAA95D,EAAAqgE,SAGH,wBAATrgE,EAAAqgE,KACD,OAAArgE,EAAAsgE,WAEK,IAAI,QACAx6C,EAAE7jB,KAAWjC,GACnB,UACE,WACA0jG,EAAMzhG,KAAAjC,GACR,UACE,eACAo/D,EAAMn9D,KAAAjC,SAbHmgE,EAACl+D,KAAAjC,MAkBTmgE,EAAAjhE,QACF4mB,EAAA5mB,QAEDwkG,EACGxkG,QACCkgE,EAAclgE,OAAA,MAEd4mB,EAAA5mB,OAAcwkG,EAChBxkG,OAAAkgE,EAAAlgE,QAAA,EACE,GAGJ+wB,EAGInK,EAAA5mB,OACAkgE,EAAAlgE,OACAwkG,EAAAxkG,QAQJgP,EAAK4X,EAAQ5mB,OAAWk6G,GAAUK,MAAML,GAAAM,SAAE5zF,EAAO5mB,QAAawkG,EAAAxkG,SAExDgP,EAAAkrG,GACJp7C,kBACAoC,EAAYt6C,EAAS5mB,OAAS4mB,EAAA,EAC5B5mB,OAAcwkG,EAGhBtkC,IAEoB,IAAlBgB,EAAkBlhE,OAAA,GAAA+wB,EAAAmwC,EAAAlhE,YAClBs1D,EAAA4L,EAAA,GAKJgG,EAAM5R,EAAagV,qBAA0C,GAO7D,IAAC9wB,EAAA,CAAA9zC,KAND4vD,EAAY5vD,MAAoC,SAAzB4vD,EAAA5vD,KAAAy7D,KAEnB7L,EAAe5vD,KAAI5D,MAEf,OAEPkN,KAAAA,EAAAk4D,UAAAA,GAGD,OADAjxD,GAAMrU,IAAAmvB,EAAgByoB,GAChBA,EChIF,SAAUihE,GACdvsF,GAEA,IAAMkqB,EAAU+jB,EAAAA,WAAiBD,KAC3BG,EAASnuC,GAAYkqB,EAAQikB,cACnCxC,IACIwC,EACF,IACEA,GDbN,SAAY69C,GACVA,EAAAA,EAAA,iBACAA,EAAAA,EAAA,uBACAA,EAAAA,EAAA,8BACD,CAJD,CAAYA,KAAAA,GAAY,KAuIxB91C,GAACknB,WAAA,WAEDr1E,QAAOo9C,IAEL,IAAA7yD,WAAA86D,SAEEuI,GAAU,4BAAA5tD,GAAAA,GAAAuU,KAAA,KEhJd,IAAMkwF,GAAgBn2G,OAAOkuB,IAAI,wBC6BlB,IAAA/yB,GACXN,OAAMK,UAAAC,eAoCJ,SAAUi7G,GAId7iG,EACAqe,GAKA,YALA,IAAAA,IAAAA,EAGI/2B,OAAO6C,OAAO,ODbd,SACJ24G,EACAC,EACAC,GAEA,IAAMp2C,EACJo2C,EAKc,aACVC,EAAWr2C,GAAgBA,EAAag2C,IACxCM,EACJD,GAAaA,EAASH,GACxB,OAAOI,EAAUA,EAAQH,GAAWA,CACtC,CCDSI,CACL,WACAC,GACAT,GAAgBtkF,GAAWA,EAAQkmC,QAH9B4+C,CAILnjG,EAAOqe,EACX,CAEA,SAAS+kF,GAIPpjG,EACAqe,GAEA,OAKI,SACJkmC,EACAvkD,GAOA,IAAMqjG,EAAmBh/C,EAAAA,YAAiB,SAACi/C,GAAS,OAAAA,EAAO,CAAP,GAAU,GAAG,GAEjE,SAASC,EAAoB1yC,GAC3B,OAAOvpE,OAAOS,OAAO,IAAIy7G,GAAcj/C,EAAQvkD,EAAO6wD,GAAW,CAC/DwyC,iBAAgBA,GAEpB,CAEI,IAAA5hD,EAAuB4C,EAAAA,SAAek/C,GAArCt6D,EAAKwY,EAAA,GAAEgiD,EAAWhiD,EAAA,GAEnB8C,IAAWtb,EAAMsb,QAAUvkD,IAAUipC,EAAMjpC,OAO7CyjG,EAAax6D,EAAQs6D,EAAoBt6D,IAG3C,OAAOA,CACT,CAnCSy6D,CAAiBf,GAAgBtkF,EAAQkmC,QAASvkD,GAAO6iG,SAC9DxkF,EAEJ,CAkCA,IAAAmlF,GAAA,WACE,SAAAA,EACkBj/C,EACAvkD,EAChB6wD,GAHF,IAAAhP,EAAA,KACkB,KAAA0C,OAAAA,EACA,KAAAvkD,MAAAA,EAgClB,KAAA25C,YAAc,WAAM,OAAAkI,EAAKwhD,kBAAL,EA0QZ,KAAAM,kBAAoBpV,GAAgB,CAC1ChV,SAAS,EACT5hE,UAAM,EACNrW,WAAO,EACP60E,cAAef,GAAcmE,UAGvB,KAAAqqB,kBAAoBrV,GAAgB,CAC1ChV,SAAS,EACT5hE,UAAM,EACNrW,WAAO,EACP60E,cAAef,GAAc/kE,QAyLvB,KAAAwzF,mBAAqB,IAAKlgD,EAAgBz3D,QAAUonB,KH9d7D,SAAA2F,EAAA/hB,GAED,IAAMoyD,EAAUgD,GAAArzC,GACR6qF,EAAmBvwC,GAAUr8D,GAC7B6sG,EAAAxwC,GAAwBjK,EAAoBpyD,MAClD6qD,EACAuH,EACEpyD,OAAUA,EAMb,UG1BG8sG,CAAmBhkG,EAAOoiG,GAAaK,OAIvC,IAAMwB,EAAiBpzC,GAAYA,EAAS/uD,OACtCoiG,EAAeD,GAAkBA,EAAetsF,KAClDusF,IACF77G,KAAK67G,aAAeA,EAExB,CA2hBF,OAlhBEV,EAAA77G,UAAA07G,iBAAA,YAGI,IADF36G,WAAU86D,SACRzB,EAAAtoD,KAAA,GAEJ,EAQA+pG,EAAA77G,UAAAw8G,aAAA,SACE9lF,GADF,MAAAwjC,EAAA,KAKMxjC,EAAQre,OACV1Y,OAAOS,OAAOM,KAAM,CAAE2X,MAAOqe,EAAQre,QAGvC3X,KAAK+7G,kBAAoB/7G,KAAKg8G,wBAC3Bh8G,KAAKi8G,iBAAmBjmF,GAG3B,IAAMo/D,EAAUp1F,KAAKusB,WAAWuoE,mBAC9B90F,KAAKk8G,sBAUP,OAJAl8G,KAAK67G,cAA0B,QAAXziD,EAAAp5D,KAAKyZ,cAAM,IAAA2/C,OAAA,EAAAA,EAAE9pC,OAAQtvB,KAAK67G,aAC9C77G,KAAKyZ,YAAS,EACdzZ,KAAKsxD,cAEE,IAAIvwD,SAAwC,SAACqH,GAClD,IAAIqR,EAMJ27E,EAAQ/+E,UAAU,CAChB3R,KAAM,SAAC/C,GACL8X,EAAS9X,CACX,EACAsX,MAAO,WACL7Q,EAAQoxD,EAAK2iD,cAAc3iD,EAAKjtC,WAAWwkE,oBAC7C,EACA3kE,SAAU,WACRhkB,EAAQoxD,EAAK2iD,cAAc1iG,GAC7B,GAEJ,GACF,EAKA0hG,EAAA77G,UAAAk7G,SAAA,SAASxkF,GAAT,IAAAwjC,EAAA,KASEx5D,KAAKo8G,eAAiBpgD,EAAAA,WAAiBD,KAAoBqgD,eAE3Dp8G,KAAKq8G,WAAWrmF,GAEhB,IAAM2/D,EAAW31F,KAAKs8G,qBAGhB7iG,EAASimC,GAEbsc,EAAAA,aACE,SAACugD,GACC,GAAI/iD,EAAK4iD,eACP,OAAO,WAAO,EAGhB5iD,EAAKlI,YAAcirD,EAEnB,IAAMC,EAAS,WACb,IAAMZ,EAAiBpiD,EAAK//C,OAItBA,EAASk8E,EAAS5E,mBAGtB6qB,GACAA,EAAe1qB,UAAYz3E,EAAOy3E,SAClC0qB,EAAe9tB,gBAAkBr0E,EAAOq0E,eACxCvJ,GAAMq3B,EAAetsF,KAAM7V,EAAO6V,OAKpCkqC,EAAKijD,UAAUhjG,EACjB,EAEM+jB,EAAU,SAACvkB,GAIf,GAHAglD,EAAa1pD,cACb0pD,EAAe03B,EAAS+mB,sBAAsBF,EAAQh/E,IAEjDj+B,GAAeC,KAAKyZ,EAAO,iBAE9B,MAAMA,EAGR,IAAM2iG,EAAiBpiD,EAAK//C,SAEzBmiG,GACAA,GAAkBA,EAAe1qB,UACjC3M,GAAMtrE,EAAO2iG,EAAe3iG,SAE7BugD,EAAKijD,UAAU,CACbntF,KAAOssF,GAAkBA,EAAetsF,KACxCrW,MAAOA,EACPi4E,SAAS,EACTpD,cAAef,GAAc9zE,OAGnC,EAEIglD,EAAe03B,EAASt/E,UAAUmmG,EAAQh/E,GAM9C,OAAO,WACL96B,YAAW,WAAM,OAAAu7D,EAAa1pD,aAAb,IACjBilD,EAAKlI,YAAc,WAAM,OAAAkI,EAAKwhD,kBAAL,CAC3B,CACF,GACA,CAOErlB,EAEA31F,KAAKo8G,eAELp8G,KAAKk8D,OAAO+nC,yBAIhB,WAAM,OAAAzqC,EAAKu3B,kBAAL,IACN,WAAM,OAAAv3B,EAAKu3B,kBAAL,IAMR,OAFA/wF,KAAK28G,2BAA2BljG,GAEzBzZ,KAAKm8G,cAAc1iG,EAC5B,EAUQ0hG,EAAA77G,UAAA+8G,WAAR,SAAmBrmF,SACX+lF,EAAoB/7G,KAAKg8G,wBAC5Bh8G,KAAKi8G,iBAAmBjmF,GAMrB4mF,EAA2B58G,KAAK+7G,kBAEjCx3B,GAAMw3B,EAAmBa,KAC5B58G,KAAK+7G,kBAAoBA,EAErBa,GAA4B58G,KAAKusB,aASnCvsB,KAAKusB,WAAWsjE,UAAU7vF,KAAKk8G,sBAK/Bl8G,KAAK67G,cAA0B,QAAXziD,EAAAp5D,KAAKyZ,cAAM,IAAA2/C,OAAA,EAAAA,EAAE9pC,OAAQtvB,KAAK67G,aAC9C77G,KAAKyZ,YAAS,IAUlBzZ,KAAK68G,YACH7mF,EAAQ6mF,aAAe1B,EAAc77G,UAAUu9G,YACjD78G,KAAKw9B,QAAUxH,EAAQwH,SAAW29E,EAAc77G,UAAUk+B,SAGvDx9B,KAAKo8G,iBAAkBp8G,KAAKk8D,OAAO+nC,wBACN,IAA9BjkG,KAAKi8G,iBAAiBa,KACrB98G,KAAKi8G,iBAAiBc,KAMvB/8G,KAAKi8G,iBAAiBc,MACiB,YAAvC/8G,KAAK+7G,kBAAkB9rB,YAYvBjwF,KAAKyZ,OAASzZ,KAAKu7G,kBAEnBv7G,KAAKyZ,SAAWzZ,KAAKs7G,mBACrBt7G,KAAKyZ,SAAWzZ,KAAKu7G,oBAErBv7G,KAAKyZ,YAAS,GApBdzZ,KAAKyZ,OAASzZ,KAAKs7G,iBAsBvB,EAEQH,EAAA77G,UAAA48G,mBAAR,WACE,IAAM5L,EAAgE,GAEhE0M,EAAiBh9G,KAAKk8D,OAAOi0B,eAAeC,WAwBlD,OAvBI4sB,GAAgB1M,EAAQ1tG,KAAKo6G,GAE7Bh9G,KAAKi8G,iBAAiB9rB,gBACxBmgB,EAAQ1tG,KAAK5C,KAAKi8G,iBAAiB9rB,gBAarCmgB,EAAQ1tG,KACNmrF,GACE/tF,KAAKusB,YAAcvsB,KAAKusB,WAAWyJ,QACnCh2B,KAAK+7G,oBAIFzL,EAAQpqG,OAAOo9F,GACxB,EAiBQ6X,EAAA77G,UAAA08G,wBAAR,SAAgC5iD,cAAA,IAAAA,IAAAA,EAAA,IAC9B,IAAA2jD,EAAI3jD,EAAA2jD,KAQDE,GAPA7jD,EAAA0jD,IACQ1jD,EAAAyjD,YACJzjD,EAAA57B,QACO47B,EAAA+2B,eAIC74B,EAAA8B,EATe,0DAgBxB2iD,EACJ98G,OAAOS,OAAOu9G,EAAc,CAAEtlG,MAAO3X,KAAK2X,QAgB5C,IAbE3X,KAAKo8G,gBAC8B,iBAAlCL,EAAkB9rB,aACiB,sBAAlC8rB,EAAkB9rB,cAIpB8rB,EAAkB9rB,YAAc,eAG7B8rB,EAAkBh1C,YACrBg1C,EAAkBh1C,UAAY,CAAC,GAG7Bg2C,EAAM,CAEN,IAAA34C,EAEE23C,EAAiB9rB,YAFnBA,OAAW,IAAA7rB,EAAGpkE,KAAKk9G,wBAAuB94C,EAC1CQ,EACEm3C,EAAiBxrB,mBADnBA,OAAkB,IAAA3rB,EAAGqrB,EAAWrrB,EAMlC3lE,OAAOS,OAAOq8G,EAAmB,CAC/BxrB,mBAAkBA,EAClBN,YAAa,WAEjB,MAAY8rB,EAAkB9rB,cAC5B8rB,EAAkB9rB,aACD,QAAf/rB,EAAAlkE,KAAKusB,kBAAU,IAAA23C,OAAA,EAAAA,EAAEluC,QAAQu6D,qBACzBvwF,KAAKk9G,yBAGT,OAAOnB,CACT,EAEAZ,EAAA77G,UAAA49G,sBAAA,mBACE,OACsC,QAApC9jD,EAAAp5D,KAAKi8G,iBAAiB9rB,sBAAc,IAAA/2B,OAAA,EAAAA,EAAE62B,eACD,QAArC/rB,EAAAlkE,KAAKk8D,OAAOi0B,eAAeC,kBAAU,IAAAlsB,OAAA,EAAAA,EAAE+rB,cACvC,aAEJ,EAKQkrB,EAAA77G,UAAAu9G,YAAR,SAAoBvtF,GAAc,EAC1B6rF,EAAA77G,UAAAk+B,QAAR,SAAgBvkB,GAAqB,EAQ7BkiG,EAAA77G,UAAAg9G,mBAAR,WAIE,IAAM3mB,EAAY31F,KAAKusB,WACpBvsB,KAAKo8G,gBACJp8G,KAAKo8G,eAAee,iBAAiBn9G,KAAK+7G,oBAC5C/7G,KAAKusB,YACLvsB,KAAKk8D,OAAOk0B,WAAWpwF,KAAKk8G,sBAG9Bl8G,KAAKo9G,eAAiBphD,EAAAA,SACpB,WAAM,MAAC,CACLq2B,QAASsD,EAAStD,QAAQrwF,KAAK2zF,GAC/B9F,UAAW8F,EAAS9F,UAAU7tF,KAAK2zF,GACnClD,UAAWkD,EAASlD,UAAUzwF,KAAK2zF,GACnCxC,YAAawC,EAASxC,YAAYnxF,KAAK2zF,GACvC5B,aAAc4B,EAAS5B,aAAa/xF,KAAK2zF,GACzC1B,YAAa0B,EAAS1B,YAAYjyF,KAAK2zF,GACvCnC,gBAAiBmC,EAASnC,gBAAgBxxF,KAAK2zF,GAP3C,GASN,CAACA,IAGH,IAAM0nB,KAC0B,IAA9Br9G,KAAKi8G,iBAAiBa,KAAiB98G,KAAKi8G,iBAAiBc,MAY/D,OATI/8G,KAAKo8G,gBAAkBiB,IACzBr9G,KAAKo8G,eAAekB,sBAAsB3nB,GAEtCA,EAAS5E,mBAAmBG,SAE9BlxF,KAAKo8G,eAAemB,0BAA0B5nB,IAI3CA,CACT,EAOQwlB,EAAA77G,UAAAm9G,UAAR,SAAkBe,GAChB,IAAM5B,EAAiB57G,KAAKyZ,OACxBmiG,GAAkBA,EAAetsF,OACnCtvB,KAAK67G,aAAeD,EAAetsF,MAErCtvB,KAAKyZ,OAAS+jG,EAGdx9G,KAAKsxD,cACLtxD,KAAKy9G,uBAAuBD,EAAY5B,EAC1C,EAEQT,EAAA77G,UAAAm+G,uBAAR,SACEhkG,EACAmiG,GAFF,IAAApiD,EAAA,KAIE,IAAK//C,EAAOy3E,QAAS,CACnB,IAAMwsB,EAAQ19G,KAAK29G,cAAclkG,GAGjC1Y,QAAQqH,UACLX,MAAK,WACAi2G,EACFlkD,EAAKh8B,QAAQkgF,GAEbjkG,EAAO6V,OACO,OAAdssF,QAAc,IAAdA,OAAc,EAAdA,EAAgB9tB,iBAAkBr0E,EAAOq0E,eACzCr0E,EAAOq0E,gBAAkBf,GAAc/kE,OAEvCwxC,EAAKqjD,YAAYpjG,EAAO6V,KAE5B,IACCzjB,OAAM,SAACoN,IACgB,IAAtB5Y,WAAU86D,SAAYzB,EAAAtoD,KAAA6H,EACxB,GACJ,CACF,EAEQkiG,EAAA77G,UAAAq+G,cAAR,SACElkG,GAEA,OAAO27D,GAAgB37D,EAAOy7D,QAC1B,IAAIP,GAAY,CAAEC,cAAen7D,EAAOy7D,SACxCz7D,EAAOR,KACb,EAEQkiG,EAAA77G,UAAAyxF,iBAAR,WASE,OALK/wF,KAAKyZ,QACRzZ,KAAKy9G,uBACFz9G,KAAKyZ,OAASzZ,KAAKusB,WAAWwkE,oBAG5B/wF,KAAKyZ,MACd,EAUA0hG,EAAA77G,UAAA68G,cAAA,SACE1iG,GAEA,IAAImkG,EAAc59G,KAAKw7G,mBAAmBh6G,IAAIiY,GAC9C,GAAImkG,EAAa,OAAOA,EAEhB,IAAAtuF,EAA2C7V,EAAM6V,KAA/BuuF,GAAyBpkG,EAAM83E,QAAXj6B,EAAK79C,EAA7C,qBAuBN,OAtBAzZ,KAAKw7G,mBAAmB/5G,IACtBgY,EACCmkG,EAAWvmD,EAAAA,EAAAA,EAAA,CACV/nC,KAAIA,GACDuuF,GACA79G,KAAKo9G,gBAAc,CACtBlhD,OAAQl8D,KAAKk8D,OACb3vC,WAAYvsB,KAAKusB,WACjBw6C,UAAW/mE,KAAKusB,WAAWw6C,UAC3B6mB,QAAS5tF,KAAKi8G,iBAAiBc,KAC/BlB,aAAc77G,KAAK67G,iBAIlB+B,EAAY3kG,OAASm8D,GAAgB37D,EAAOy7D,UAK/C0oC,EAAY3kG,MAAQ,IAAI07D,GAAY,CAAEC,cAAen7D,EAAOy7D,UAGvD0oC,CACT,EAEQzC,EAAA77G,UAAAq9G,2BAAR,SAAmCljG,IAO/BA,EAAO83E,UACPvxF,KAAKi8G,iBAAiBzqB,gBACrB/3E,EAAOy3E,SACNz3E,EAAO6V,MAA4C,IAApCrwB,OAAOyB,KAAK+Y,EAAO6V,MAAMzvB,QACF,eAAxCG,KAAKusB,WAAWyJ,QAAQi6D,cAExBhxF,OAAOS,OAAO+Z,EAAQ,CACpBy3E,SAAS,EACTpD,cAAef,GAAcsF,UAE/BryF,KAAKusB,WAAW8lE,UAEpB,EACF8oB,CAAA,CA1iBA,GC3IO,SAASzhD,GAAUC,EAAWn0D,GAGnC,IAFyB63D,QAAQ1D,GAG/B,MAAM,IAAIp3D,MACG,MAAXiD,EAAkBA,EAAU,kCAGlC,CCPA,MAAMs4G,GAAa,eASZ,SAASC,GAAYpiF,EAAQqiF,GAClC,IAAIC,EAAgB,EAChBhxC,EAAO,EAEX,IAAK,MAAM3rD,KAASqa,EAAO1G,KAAKipF,SAASJ,IAAa,CAGpD,GAFuB,kBAAhBx8F,EAAMlK,OAAsBsiD,IAAU,GAEzCp4C,EAAMlK,OAAS4mG,EACjB,MAGFC,EAAgB38F,EAAMlK,MAAQkK,EAAM,GAAGzhB,OACvCotE,GAAQ,CACV,CAEA,MAAO,CACLA,OACAC,OAAQ8wC,EAAW,EAAIC,EAE3B,CCxBO,SAASE,GAAcr2G,GAC5B,OAAOs2G,GACLt2G,EAAS6zB,OACToiF,GAAYj2G,EAAS6zB,OAAQ7zB,EAASoQ,OAE1C,CAKO,SAASkmG,GAAoBziF,EAAQ0iF,GAC1C,MAAMC,EAAwB3iF,EAAO4iF,eAAerxC,OAAS,EACvDj4C,EAAO,GAAGupF,SAASF,GAAyB3iF,EAAO1G,KACnDwpF,EAAYJ,EAAepxC,KAAO,EAClCyxC,EAAa/iF,EAAO4iF,eAAetxC,KAAO,EAC1C0xC,EAAUN,EAAepxC,KAAOyxC,EAChCE,EAAuC,IAAxBP,EAAepxC,KAAaqxC,EAAwB,EACnEO,EAAYR,EAAenxC,OAAS0xC,EACpCE,EAAc,GAAH3+G,OAAMw7B,EAAOp2B,KAAI,KAAApF,OAAIw+G,EAAO,KAAAx+G,OAAI0+G,EAAS,MACpDtnC,EAAQtiD,EAAK3xB,MAAM,gBACnBy7G,EAAexnC,EAAMknC,GAE3B,GAAIM,EAAal/G,OAAS,IAAK,CAC7B,MAAMm/G,EAAe1lG,KAAK46C,MAAM2qD,EAAY,IACtCI,EAAmBJ,EAAY,GAC/BK,EAAW,GAEjB,IAAK,IAAIp/G,EAAI,EAAGA,EAAIi/G,EAAal/G,OAAQC,GAAK,GAC5Co/G,EAASt8G,KAAKm8G,EAAa7+G,MAAMJ,EAAGA,EAAI,KAG1C,OACEg/G,EACAK,GAAmB,CACjB,CAAC,GAADh/G,OAAIw+G,EAAO,MAAMO,EAAS,OACvBA,EAASh/G,MAAM,EAAG8+G,EAAe,GAAGz7G,KAAK67G,GAAY,CAAC,IAAKA,KAC9D,CAAC,IAAK,IAAIZ,SAASS,IACnB,CAAC,IAAKC,EAASF,EAAe,KAGpC,CAEA,OACEF,EACAK,GAAmB,CAEjB,CAAC,GAADh/G,OAAIw+G,EAAU,EAAC,MAAMpnC,EAAMknC,EAAY,IACvC,CAAC,GAADt+G,OAAIw+G,EAAO,MAAMI,GACjB,CAAC,IAAK,IAAIP,SAASK,IACnB,CAAC,GAAD1+G,OAAIw+G,EAAU,EAAC,MAAMpnC,EAAMknC,EAAY,KAG7C,CAEA,SAASU,GAAmB5nC,GAC1B,MAAM8nC,EAAgB9nC,EAAM/zE,QAAOkpE,IAAA,IAAEjsE,EAAGwsE,GAAKP,EAAA,YAAcxZ,IAAT+Z,CAAkB,IAC9DqyC,EAAShmG,KAAKsM,OAAOy5F,EAAc97G,KAAIg1E,IAAA,IAAEpe,GAAOoe,EAAA,OAAKpe,EAAOt6D,MAAM,KACxE,OAAOw/G,EACJ97G,KAAIk1E,IAAA,IAAEte,EAAQ8S,GAAKwL,EAAA,OAAKte,EAAOqkD,SAASc,IAAWryC,EAAO,IAAMA,EAAO,GAAG,IAC1EvnE,KAAK,KACV,CCnCO,MAAM65G,WAAqBh9G,MA8ChCwB,WAAAA,CAAYyB,GAC6B,IAAvC,IAAIg6G,EAAaC,EAAiB/yC,EAAKjN,EAAA7/D,UAAAC,OADjB6/G,EAAO,IAAAtgH,MAAAqgE,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAP+/C,EAAO//C,EAAA,GAAA//D,UAAA+/D,GAG7B,MAAM,MAAEggD,EAAK,OAAEhkF,EAAM,UAAEikF,EAAS,KAAE9uC,EAAI,cAAE+uC,EAAa,WAAE50C,GAxE3D,SAA6BzQ,GAC3B,MAAMslD,EAAWtlD,EAAK,GAEtB,OAAgB,MAAZslD,GAAoB,SAAUA,GAAY,WAAYA,EACjD,CACLH,MAAOG,EACPnkF,OAAQ6+B,EAAK,GACbolD,UAAWplD,EAAK,GAChBsW,KAAMtW,EAAK,GACXqlD,cAAerlD,EAAK,GACpByQ,WAAYzQ,EAAK,IAIdslD,CACT,CA0DMC,CAAoBL,GACtBM,MAAMx6G,GACNxF,KAAKuF,KAAO,eACZvF,KAAK8wE,KAAgB,OAATA,QAA0B,IAATA,EAAkBA,OAAO5d,EACtDlzD,KAAK6/G,cACe,OAAlBA,QAA4C,IAAlBA,EACtBA,OACA3sD,EAENlzD,KAAK2/G,MAAQM,GACX7gH,MAAMwB,QAAQ++G,GAASA,EAAQA,EAAQ,CAACA,QAASzsD,GAEnD,MAAMgtD,EAAgBD,GACW,QAA9BT,EAAcx/G,KAAK2/G,aAAmC,IAAhBH,OACnC,EACAA,EAAYj8G,KAAKwpC,GAASA,EAAKozE,MAAK38G,QAAQ28G,GAAe,MAAPA,KAG1DngH,KAAK27B,OACQ,OAAXA,QAA8B,IAAXA,EACfA,EACkB,OAAlBukF,QAA4C,IAAlBA,GAEe,QAAxCT,EAAkBS,EAAc,UACb,IAApBT,OAFA,EAIAA,EAAgB9jF,OACtB37B,KAAK4/G,UACW,OAAdA,QAAoC,IAAdA,EAClBA,EACkB,OAAlBM,QAA4C,IAAlBA,OAC1B,EACAA,EAAc38G,KAAK48G,GAAQA,EAAIjoG,QACrClY,KAAK27E,UACHikC,GAAajkF,EACTikF,EAAUr8G,KAAK68G,GAAQrC,GAAYpiF,EAAQykF,KACzB,OAAlBF,QAA4C,IAAlBA,OAC1B,EACAA,EAAc38G,KAAK48G,GAAQpC,GAAYoC,EAAIxkF,OAAQwkF,EAAIjoG,SAC7D,MAAMmoG,EClHe,iBADI1+G,EDoHL,OAAlBk+G,QAA4C,IAAlBA,OACtB,EACAA,EAAc50C,aCrHuB,OAAVtpE,EDuHX,OAAlBk+G,QAA4C,IAAlBA,OACxB,EACAA,EAAc50C,gBAChB/X,EC3HD,IAAsBvxD,ED4HzB3B,KAAKirE,WAI2B,QAH7ByB,EACgB,OAAfzB,QAAsC,IAAfA,EACnBA,EACAo1C,SAAyC,IAAT3zC,EAClCA,EACAztE,OAAO6C,OAAO,MAGpB7C,OAAOqyE,iBAAiBtxE,KAAM,CAC5BwF,QAAS,CACP5D,UAAU,EACVsS,YAAY,GAEd3O,KAAM,CACJ2O,YAAY,GAEdyrG,MAAO,CACLzrG,YAAY,GAEdynB,OAAQ,CACNznB,YAAY,GAEd0rG,UAAW,CACT1rG,YAAY,GAEd2rG,cAAe,CACb3rG,YAAY,KAQI,OAAlB2rG,QACkB,IAAlBA,GACAA,EAAct+F,MAEdtiB,OAAOsC,eAAevB,KAAM,QAAS,CACnC2B,MAAOk+G,EAAct+F,MACrB3f,UAAU,EACVF,cAAc,IAEPa,MAAM+9G,kBACf/9G,MAAM+9G,kBAAkBtgH,KAAMu/G,IAE9BtgH,OAAOsC,eAAevB,KAAM,QAAS,CACnC2B,MAAOY,QAAQgf,MACf3f,UAAU,EACVF,cAAc,GAIpB,CAEA,IAAK0C,OAAOS,eACV,MAAO,cACT,CAEAZ,QAAAA,GACE,IAAIs8G,EAASvgH,KAAKwF,QAElB,GAAIxF,KAAK2/G,MACP,IAAK,MAAM5yE,KAAQ/sC,KAAK2/G,MAClB5yE,EAAKozE,MACPI,GAAU,OAASpC,GAAcpxE,EAAKozE,WAGrC,GAAIngH,KAAK27B,QAAU37B,KAAK27E,UAC7B,IAAK,MAAM7zE,KAAY9H,KAAK27E,UAC1B4kC,GAAU,OAASnC,GAAoBp+G,KAAK27B,OAAQ7zB,GAIxD,OAAOy4G,CACT,CAEAt0C,MAAAA,GACE,MAAMu0C,EAAiB,CACrBh7G,QAASxF,KAAKwF,SAehB,OAZsB,MAAlBxF,KAAK27E,YACP6kC,EAAe7kC,UAAY37E,KAAK27E,WAGjB,MAAb37E,KAAK8wE,OACP0vC,EAAe1vC,KAAO9wE,KAAK8wE,MAGN,MAAnB9wE,KAAKirE,YAAsBhsE,OAAOyB,KAAKV,KAAKirE,YAAYprE,OAAS,IACnE2gH,EAAev1C,WAAajrE,KAAKirE,YAG5Bu1C,CACT,EAGF,SAASP,GAAiB7zC,GACxB,YAAiBlZ,IAAVkZ,GAAwC,IAAjBA,EAAMvsE,YAAeqzD,EAAYkZ,CACjE,CE/NO,SAASq0C,GAAY9kF,EAAQqiF,EAAUtjC,GAC5C,OAAO,IAAI6kC,GAAa,iBAADp/G,OAAkBu6E,GAAe,CACtD/+C,SACAikF,UAAW,CAAC5B,IAEhB,CCRA,IAAI0C,GCCAC,IDCJ,SAAWD,GACTA,EAAyB,MAAI,QAC7BA,EAA4B,SAAI,WAChCA,EAAgC,aAAI,eACpCA,EAAyB,MAAI,QAC7BA,EAAuC,oBAAI,sBAC3CA,EAAmC,gBAAI,kBACvCA,EAAmC,gBAAI,kBACvCA,EAAuC,oBAAI,sBAC3CA,EAA0B,OAAI,SAC9BA,EAA0B,OAAI,SAC9BA,EAA0B,OAAI,SAC9BA,EAAoC,iBAAI,mBACxCA,EAAuC,oBAAI,sBAC3CA,EAA6B,UAAI,YACjCA,EAAyB,MAAI,QAC7BA,EAAwB,KAAI,OAC5BA,EAA8B,WAAI,aAClCA,EAAgC,aAAI,eACpCA,EAA0C,uBAAI,wBAC/C,CApBD,CAoBGA,KAAsBA,GAAoB,CAAC,ICnB9C,SAAWC,GACTA,EAAe,IAAI,QACnBA,EAAe,IAAI,QACnBA,EAAgB,KAAI,IACpBA,EAAkB,OAAI,IACtBA,EAAe,IAAI,IACnBA,EAAmB,QAAI,IACvBA,EAAmB,QAAI,IACvBA,EAAkB,OAAI,MACtBA,EAAiB,MAAI,IACrBA,EAAkB,OAAI,IACtBA,EAAc,GAAI,IAClBA,EAAqB,UAAI,IACzBA,EAAqB,UAAI,IACzBA,EAAmB,QAAI,IACvBA,EAAgB,KAAI,IACpBA,EAAmB,QAAI,IACvBA,EAAgB,KAAI,OACpBA,EAAe,IAAI,MACnBA,EAAiB,MAAI,QACrBA,EAAkB,OAAI,SACtBA,EAAwB,aAAI,cAC5BA,EAAmB,QAAI,SACxB,CAvBD,CAuBGA,KAAcA,GAAY,CAAC,ICfvB,MAAMC,GAgBX78G,WAAAA,CAAY43B,GACV,MAAMklF,EAAmB,IAAI7zC,GAAM2zC,GAAUG,IAAK,EAAG,EAAG,EAAG,GAC3D9gH,KAAK27B,OAASA,EACd37B,KAAK+gH,UAAYF,EACjB7gH,KAAKghH,MAAQH,EACb7gH,KAAKitE,KAAO,EACZjtE,KAAKihH,UAAY,CACnB,CAEA,IAAK78G,OAAOS,eACV,MAAO,OACT,CAKA6U,OAAAA,GACE1Z,KAAK+gH,UAAY/gH,KAAKghH,MAEtB,OADehhH,KAAKghH,MAAQhhH,KAAKkhH,WAEnC,CAMAA,SAAAA,GACE,IAAIF,EAAQhhH,KAAKghH,MAEjB,GAAIA,EAAMhgD,OAAS2/C,GAAUQ,IAC3B,GACE,GAAIH,EAAMt8G,KACRs8G,EAAQA,EAAMt8G,SACT,CAEL,MAAM08G,EAAYC,GAAcrhH,KAAMghH,EAAMxzE,KAE5CwzE,EAAMt8G,KAAO08G,EAEbA,EAAUjrD,KAAO6qD,EACjBA,EAAQI,CACV,QACOJ,EAAMhgD,OAAS2/C,GAAUW,SAGpC,OAAON,CACT,EAiCF,SAASO,GAAqBz3E,GAC5B,OACGA,GAAQ,GAAUA,GAAQ,OAAYA,GAAQ,OAAUA,GAAQ,OAErE,CAUA,SAAS03E,GAAyBvsF,EAAMntB,GACtC,OACE25G,GAAmBxsF,EAAKgjD,WAAWnwE,KACnC45G,GAAoBzsF,EAAKgjD,WAAWnwE,EAAW,GAEnD,CAEA,SAAS25G,GAAmB33E,GAC1B,OAAOA,GAAQ,OAAUA,GAAQ,KACnC,CAEA,SAAS43E,GAAoB53E,GAC3B,OAAOA,GAAQ,OAAUA,GAAQ,KACnC,CASA,SAAS63E,GAAiBC,EAAO95G,GAC/B,MAAMgiC,EAAO83E,EAAMjmF,OAAO1G,KAAK4sF,YAAY/5G,GAE3C,QAAaorD,IAATppB,EACF,OAAO62E,GAAUQ,IACZ,GAAIr3E,GAAQ,IAAUA,GAAQ,IAAQ,CAE3C,MAAMmH,EAAO9iC,OAAO2zG,cAAch4E,GAClC,MAAgB,MAATmH,EAAe,OAAS,IAAH9wC,OAAO8wC,EAAI,IACzC,CAEA,MAAO,KAAOnH,EAAK7lC,SAAS,IAAIsX,cAAcijG,SAAS,EAAG,IAC5D,CAKA,SAASuD,GAAYH,EAAO5gD,EAAM9oD,EAAOs1B,EAAK7rC,GAC5C,MAAMsrE,EAAO20C,EAAM30C,KACb/xC,EAAM,EAAIhjB,EAAQ0pG,EAAMX,UAC9B,OAAO,IAAIj0C,GAAMhM,EAAM9oD,EAAOs1B,EAAKy/B,EAAM/xC,EAAKv5B,EAChD,CASA,SAAS0/G,GAAcO,EAAO1pG,GAC5B,MAAM+c,EAAO2sF,EAAMjmF,OAAO1G,KACpB+sF,EAAa/sF,EAAKp1B,OACxB,IAAIm+G,EAAW9lG,EAEf,KAAO8lG,EAAWgE,GAAY,CAC5B,MAAMl4E,EAAO7U,EAAKgjD,WAAW+lC,GAE7B,OAAQl0E,GAeN,KAAK,MAEL,KAAK,EAEL,KAAK,GAEL,KAAK,KAEDk0E,EACF,SAMF,KAAK,KAEDA,IACA4D,EAAM30C,KACR20C,EAAMX,UAAYjD,EAClB,SAEF,KAAK,GAEmC,KAAlC/oF,EAAKgjD,WAAW+lC,EAAW,GAC7BA,GAAY,IAEVA,IAGF4D,EAAM30C,KACR20C,EAAMX,UAAYjD,EAClB,SAGF,KAAK,GAEH,OAAOiE,GAAYL,EAAO5D,GAU5B,KAAK,GAEH,OAAO+D,GAAYH,EAAOjB,GAAUuB,KAAMlE,EAAUA,EAAW,GAEjE,KAAK,GAEH,OAAO+D,GAAYH,EAAOjB,GAAUwB,OAAQnE,EAAUA,EAAW,GAEnE,KAAK,GAEH,OAAO+D,GAAYH,EAAOjB,GAAUyB,IAAKpE,EAAUA,EAAW,GAEhE,KAAK,GAEH,OAAO+D,GAAYH,EAAOjB,GAAU0B,QAASrE,EAAUA,EAAW,GAEpE,KAAK,GAEH,OAAO+D,GAAYH,EAAOjB,GAAU2B,QAAStE,EAAUA,EAAW,GAEpE,KAAK,GAEH,GACoC,KAAlC/oF,EAAKgjD,WAAW+lC,EAAW,IACO,KAAlC/oF,EAAKgjD,WAAW+lC,EAAW,GAE3B,OAAO+D,GAAYH,EAAOjB,GAAU4B,OAAQvE,EAAUA,EAAW,GAGnE,MAEF,KAAK,GAEH,OAAO+D,GAAYH,EAAOjB,GAAU6B,MAAOxE,EAAUA,EAAW,GAElE,KAAK,GAEH,OAAO+D,GAAYH,EAAOjB,GAAU8B,OAAQzE,EAAUA,EAAW,GAEnE,KAAK,GAEH,OAAO+D,GAAYH,EAAOjB,GAAU+B,GAAI1E,EAAUA,EAAW,GAE/D,KAAK,GAEH,OAAO+D,GAAYH,EAAOjB,GAAUgC,UAAW3E,EAAUA,EAAW,GAEtE,KAAK,GAEH,OAAO+D,GAAYH,EAAOjB,GAAUiC,UAAW5E,EAAUA,EAAW,GAEtE,KAAK,IAEH,OAAO+D,GAAYH,EAAOjB,GAAUkC,QAAS7E,EAAUA,EAAW,GAEpE,KAAK,IAEH,OAAO+D,GAAYH,EAAOjB,GAAUmC,KAAM9E,EAAUA,EAAW,GAEjE,KAAK,IAEH,OAAO+D,GAAYH,EAAOjB,GAAUoC,QAAS/E,EAAUA,EAAW,GAGpE,KAAK,GAEH,OACoC,KAAlC/oF,EAAKgjD,WAAW+lC,EAAW,IACO,KAAlC/oF,EAAKgjD,WAAW+lC,EAAW,GAEpBgF,GAAgBpB,EAAO5D,GAGzBiF,GAAWrB,EAAO5D,GAG7B,GAAI9mC,GAAQptC,IAAkB,KAATA,EACnB,OAAOo5E,GAAWtB,EAAO5D,EAAUl0E,GAGrC,GAAIstC,GAAYttC,GACd,OAAOq5E,GAASvB,EAAO5D,GAGzB,MAAMyC,GACJmB,EAAMjmF,OACNqiF,EACS,KAATl0E,EACI,kFACAy3E,GAAqBz3E,IAAS03E,GAAyBvsF,EAAM+oF,GAAS,yBAAA79G,OAC7CwhH,GAAiBC,EAAO5D,GAAS,2BAAA79G,OACpCwhH,GAAiBC,EAAO5D,GAAS,KAE/D,CAEA,OAAO+D,GAAYH,EAAOjB,GAAUQ,IAAKa,EAAYA,EACvD,CAWA,SAASC,GAAYL,EAAO1pG,GAC1B,MAAM+c,EAAO2sF,EAAMjmF,OAAO1G,KACpB+sF,EAAa/sF,EAAKp1B,OACxB,IAAIm+G,EAAW9lG,EAAQ,EAEvB,KAAO8lG,EAAWgE,GAAY,CAC5B,MAAMl4E,EAAO7U,EAAKgjD,WAAW+lC,GAE7B,GAAa,KAATl0E,GAA4B,KAATA,EACrB,MAGF,GAAIy3E,GAAqBz3E,KACrBk0E,MACG,KAAIwD,GAAyBvsF,EAAM+oF,GAGxC,MAFAA,GAAY,CAGd,CACF,CAEA,OAAO+D,GACLH,EACAjB,GAAUW,QACVppG,EACA8lG,EACA/oF,EAAK/0B,MAAMgY,EAAQ,EAAG8lG,GAE1B,CA+BA,SAASkF,GAAWtB,EAAO1pG,EAAOkrG,GAChC,MAAMnuF,EAAO2sF,EAAMjmF,OAAO1G,KAC1B,IAAI+oF,EAAW9lG,EACX4xB,EAAOs5E,EACPC,GAAU,EAMd,GAJa,KAATv5E,IACFA,EAAO7U,EAAKgjD,aAAa+lC,IAGd,KAATl0E,GAGF,GAFAA,EAAO7U,EAAKgjD,aAAa+lC,GAErB9mC,GAAQptC,GACV,MAAM22E,GACJmB,EAAMjmF,OACNqiF,EAAQ,6CAAA79G,OACqCwhH,GAC3CC,EACA5D,GACD,WAILA,EAAWsF,GAAW1B,EAAO5D,EAAUl0E,GACvCA,EAAO7U,EAAKgjD,WAAW+lC,GAsBzB,GAnBa,KAATl0E,IACFu5E,GAAU,EACVv5E,EAAO7U,EAAKgjD,aAAa+lC,GACzBA,EAAWsF,GAAW1B,EAAO5D,EAAUl0E,GACvCA,EAAO7U,EAAKgjD,WAAW+lC,IAGZ,KAATl0E,GAA4B,MAATA,IACrBu5E,GAAU,EACVv5E,EAAO7U,EAAKgjD,aAAa+lC,GAEZ,KAATl0E,GAA4B,KAATA,IACrBA,EAAO7U,EAAKgjD,aAAa+lC,IAG3BA,EAAWsF,GAAW1B,EAAO5D,EAAUl0E,GACvCA,EAAO7U,EAAKgjD,WAAW+lC,IAGZ,KAATl0E,GAAmBstC,GAAYttC,GACjC,MAAM22E,GACJmB,EAAMjmF,OACNqiF,EAAQ,2CAAA79G,OACmCwhH,GACzCC,EACA5D,GACD,MAIL,OAAO+D,GACLH,EACAyB,EAAU1C,GAAU4C,MAAQ5C,GAAU6C,IACtCtrG,EACA8lG,EACA/oF,EAAK/0B,MAAMgY,EAAO8lG,GAEtB,CAKA,SAASsF,GAAW1B,EAAO1pG,EAAOkrG,GAChC,IAAKlsC,GAAQksC,GACX,MAAM3C,GACJmB,EAAMjmF,OACNzjB,EAAK,2CAAA/X,OACsCwhH,GACzCC,EACA1pG,GACD,MAIL,MAAM+c,EAAO2sF,EAAMjmF,OAAO1G,KAC1B,IAAI+oF,EAAW9lG,EAAQ,EAEvB,KAAOg/D,GAAQjiD,EAAKgjD,WAAW+lC,OAC3BA,EAGJ,OAAOA,CACT,CAsBA,SAASiF,GAAWrB,EAAO1pG,GACzB,MAAM+c,EAAO2sF,EAAMjmF,OAAO1G,KACpB+sF,EAAa/sF,EAAKp1B,OACxB,IAAIm+G,EAAW9lG,EAAQ,EACnBurG,EAAazF,EACbr8G,EAAQ,GAEZ,KAAOq8G,EAAWgE,GAAY,CAC5B,MAAMl4E,EAAO7U,EAAKgjD,WAAW+lC,GAE7B,GAAa,KAATl0E,EAEF,OADAnoC,GAASszB,EAAK/0B,MAAMujH,EAAYzF,GACzB+D,GAAYH,EAAOjB,GAAU+C,OAAQxrG,EAAO8lG,EAAW,EAAGr8G,GAGnE,GAAa,KAATmoC,EAAJ,CAcA,GAAa,KAATA,GAA4B,KAATA,EACrB,MAGF,GAAIy3E,GAAqBz3E,KACrBk0E,MACG,KAAIwD,GAAyBvsF,EAAM+oF,GAGxC,MAAMyC,GACJmB,EAAMjmF,OACNqiF,EAAQ,oCAAA79G,OAC4BwhH,GAClCC,EACA5D,GACD,MARHA,GAAY,CAUd,CAnBA,KAZA,CACEr8G,GAASszB,EAAK/0B,MAAMujH,EAAYzF,GAChC,MAAMzsD,EAC8B,MAAlCt8B,EAAKgjD,WAAW+lC,EAAW,GACW,MAAlC/oF,EAAKgjD,WAAW+lC,EAAW,GACzB2F,GAAgC/B,EAAO5D,GACvC4F,GAA6BhC,EAAO5D,GACtC6F,GAAqBjC,EAAO5D,GAClCr8G,GAAS4vD,EAAO5vD,MAChBq8G,GAAYzsD,EAAOlnC,KACnBo5F,EAAazF,CAEf,CAoBF,CAEA,MAAMyC,GAAYmB,EAAMjmF,OAAQqiF,EAAU,uBAC5C,CAEA,SAAS2F,GAAgC/B,EAAO5D,GAC9C,MAAM/oF,EAAO2sF,EAAMjmF,OAAO1G,KAC1B,IAAI6uF,EAAQ,EACRz5F,EAAO,EAEX,KAAOA,EAAO,IAAI,CAChB,MAAMyf,EAAO7U,EAAKgjD,WAAW+lC,EAAW3zF,KAExC,GAAa,MAATyf,EAAiB,CAEnB,GAAIzf,EAAO,IAAMk3F,GAAqBuC,GACpC,MAGF,MAAO,CACLniH,MAAOwM,OAAO2zG,cAAcgC,GAC5Bz5F,OAEJ,CAIA,GAFAy5F,EAASA,GAAS,EAAKC,GAAaj6E,GAEhCg6E,EAAQ,EACV,KAEJ,CAEA,MAAMrD,GACJmB,EAAMjmF,OACNqiF,EAAQ,qCAAA79G,OAC6B80B,EAAK/0B,MACxC89G,EACAA,EAAW3zF,GACZ,MAEL,CAEA,SAASu5F,GAA6BhC,EAAO5D,GAC3C,MAAM/oF,EAAO2sF,EAAMjmF,OAAO1G,KACpB6U,EAAOk6E,GAAiB/uF,EAAM+oF,EAAW,GAE/C,GAAIuD,GAAqBz3E,GACvB,MAAO,CACLnoC,MAAOwM,OAAO2zG,cAAch4E,GAC5Bzf,KAAM,GAKV,GAAIo3F,GAAmB33E,IAGe,KAAlC7U,EAAKgjD,WAAW+lC,EAAW,IACO,MAAlC/oF,EAAKgjD,WAAW+lC,EAAW,GAC3B,CACA,MAAMiG,EAAeD,GAAiB/uF,EAAM+oF,EAAW,GAEvD,GAAI0D,GAAoBuC,GAOtB,MAAO,CACLtiH,MAAOwM,OAAO2zG,cAAch4E,EAAMm6E,GAClC55F,KAAM,GAGZ,CAGF,MAAMo2F,GACJmB,EAAMjmF,OACNqiF,EAAQ,qCAAA79G,OAC6B80B,EAAK/0B,MAAM89G,EAAUA,EAAW,GAAE,MAE3E,CASA,SAASgG,GAAiB/uF,EAAM+oF,GAG9B,OACG+F,GAAa9uF,EAAKgjD,WAAW+lC,KAAc,GAC3C+F,GAAa9uF,EAAKgjD,WAAW+lC,EAAW,KAAO,EAC/C+F,GAAa9uF,EAAKgjD,WAAW+lC,EAAW,KAAO,EAChD+F,GAAa9uF,EAAKgjD,WAAW+lC,EAAW,GAE5C,CAgBA,SAAS+F,GAAaj6E,GACpB,OAAOA,GAAQ,IAAUA,GAAQ,GAC7BA,EAAO,GACPA,GAAQ,IAAUA,GAAQ,GAC1BA,EAAO,GACPA,GAAQ,IAAUA,GAAQ,IAC1BA,EAAO,IACN,CACP,CAcA,SAAS+5E,GAAqBjC,EAAO5D,GACnC,MAAM/oF,EAAO2sF,EAAMjmF,OAAO1G,KAG1B,OAFaA,EAAKgjD,WAAW+lC,EAAW,IAGtC,KAAK,GAEH,MAAO,CACLr8G,MAAO,IACP0oB,KAAM,GAGV,KAAK,GAEH,MAAO,CACL1oB,MAAO,KACP0oB,KAAM,GAGV,KAAK,GAEH,MAAO,CACL1oB,MAAO,IACP0oB,KAAM,GAGV,KAAK,GAEH,MAAO,CACL1oB,MAAO,KACP0oB,KAAM,GAGV,KAAK,IAEH,MAAO,CACL1oB,MAAO,KACP0oB,KAAM,GAGV,KAAK,IAEH,MAAO,CACL1oB,MAAO,KACP0oB,KAAM,GAGV,KAAK,IAEH,MAAO,CACL1oB,MAAO,KACP0oB,KAAM,GAGV,KAAK,IAEH,MAAO,CACL1oB,MAAO,KACP0oB,KAAM,GAIZ,MAAMo2F,GACJmB,EAAMjmF,OACNqiF,EAAQ,uCAAA79G,OAC+B80B,EAAK/0B,MAC1C89G,EACAA,EAAW,GACZ,MAEL,CAcA,SAASgF,GAAgBpB,EAAO1pG,GAC9B,MAAM+c,EAAO2sF,EAAMjmF,OAAO1G,KACpB+sF,EAAa/sF,EAAKp1B,OACxB,IAAIohH,EAAYW,EAAMX,UAClBjD,EAAW9lG,EAAQ,EACnBurG,EAAazF,EACbkG,EAAc,GAClB,MAAMC,EAAa,GAEnB,KAAOnG,EAAWgE,GAAY,CAC5B,MAAMl4E,EAAO7U,EAAKgjD,WAAW+lC,GAE7B,GACW,KAATl0E,GACkC,KAAlC7U,EAAKgjD,WAAW+lC,EAAW,IACO,KAAlC/oF,EAAKgjD,WAAW+lC,EAAW,GAC3B,CACAkG,GAAejvF,EAAK/0B,MAAMujH,EAAYzF,GACtCmG,EAAWvhH,KAAKshH,GAChB,MAAMlD,EAAQe,GACZH,EACAjB,GAAUyD,aACVlsG,EACA8lG,EAAW,EACX1mC,GAAuB6sC,GAAYz+G,KAAK,OAI1C,OAFAk8G,EAAM30C,MAAQk3C,EAAWtkH,OAAS,EAClC+hH,EAAMX,UAAYA,EACXD,CACT,CAEA,GACW,KAATl3E,GACkC,KAAlC7U,EAAKgjD,WAAW+lC,EAAW,IACO,KAAlC/oF,EAAKgjD,WAAW+lC,EAAW,IACO,KAAlC/oF,EAAKgjD,WAAW+lC,EAAW,GAS7B,GAAa,KAATl0E,GAA4B,KAATA,EAgBvB,GAAIy3E,GAAqBz3E,KACrBk0E,MACG,KAAIwD,GAAyBvsF,EAAM+oF,GAGxC,MAAMyC,GACJmB,EAAMjmF,OACNqiF,EAAQ,oCAAA79G,OAC4BwhH,GAClCC,EACA5D,GACD,MARHA,GAAY,CAUd,MA5BEkG,GAAejvF,EAAK/0B,MAAMujH,EAAYzF,GACtCmG,EAAWvhH,KAAKshH,GAEH,KAATp6E,GAAqD,KAAlC7U,EAAKgjD,WAAW+lC,EAAW,GAChDA,GAAY,IAEVA,EAGJkG,EAAc,GACdT,EAAazF,EACbiD,EAAYjD,OAnBZkG,GAAejvF,EAAK/0B,MAAMujH,EAAYzF,GACtCyF,EAAazF,EAAW,EAExBA,GAAY,CAkChB,CAEA,MAAMyC,GAAYmB,EAAMjmF,OAAQqiF,EAAU,uBAC5C,CAUA,SAASmF,GAASvB,EAAO1pG,GACvB,MAAM+c,EAAO2sF,EAAMjmF,OAAO1G,KACpB+sF,EAAa/sF,EAAKp1B,OACxB,IAAIm+G,EAAW9lG,EAAQ,EAEvB,KAAO8lG,EAAWgE,GAAY,CAG5B,IAAI3qC,GAFSpiD,EAAKgjD,WAAW+lC,IAK3B,QAFEA,CAIN,CAEA,OAAO+D,GACLH,EACAjB,GAAU3iC,KACV9lE,EACA8lG,EACA/oF,EAAK/0B,MAAMgY,EAAO8lG,GAEtB,CCl4BA,MAUaqG,GATXhkH,WAAWikH,UACXA,EAYI,SAAoB3iH,EAAOoC,GACzB,OAAOpC,aAAiBoC,CAC1B,EACA,SAAoBpC,EAAOoC,GACzB,GAAIpC,aAAiBoC,EACnB,OAAO,EAGT,GAAqB,kBAAVpC,GAAgC,OAAVA,EAAgB,CAC/C,IAAI4iH,EAGJ,MAAMC,EAAYzgH,EAAYzE,UAAU8E,OAAOS,aAS/C,GAAI2/G,KAPFpgH,OAAOS,eAAelD,EAClBA,EAAMyC,OAAOS,aACgC,QAA5C0/G,EAAqB5iH,EAAMoC,mBACL,IAAvBwgH,OACA,EACAA,EAAmBh/G,MAES,CAChC,MAAMk/G,EAAmB54C,GAAQlqE,GACjC,MAAM,IAAIY,MAAM,cAADpC,OAAeqkH,EAAS,MAAArkH,OAAKskH,EAAgB,0jBAY9D,CACF,CAEA,OAAO,CACT,EC7CC,MAAMC,GACX3gH,WAAAA,CACEkxB,GAMA,IALA1vB,EAAI3F,UAAAC,OAAA,QAAAqzD,IAAAtzD,UAAA,GAAAA,UAAA,GAAG,kBACP2+G,EAAc3+G,UAAAC,OAAA,QAAAqzD,IAAAtzD,UAAA,GAAAA,UAAA,GAAG,CACfqtE,KAAM,EACNC,OAAQ,GAGM,kBAATj4C,GACLy2C,IAAU,EAAO,oCAAFvrE,OAAsC0rE,GAAQ52C,GAAK,MACpEj1B,KAAKi1B,KAAOA,EACZj1B,KAAKuF,KAAOA,EACZvF,KAAKu+G,eAAiBA,EACtBv+G,KAAKu+G,eAAetxC,KAAO,GACzBvB,IACE,EACA,6DAEJ1rE,KAAKu+G,eAAerxC,OAAS,GAC3BxB,IACE,EACA,8DAEN,CAEA,IAAKtnE,OAAOS,eACV,MAAO,QACT,ECwCK,MAAM8/G,GACX5gH,WAAAA,CAAY43B,GAAsB,IAAd3F,EAAOp2B,UAAAC,OAAA,QAAAqzD,IAAAtzD,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC7B,MAAMglH,EDlCH,SAAkBjpF,GACvB,OAAO0oF,GAAW1oF,EAAQ+oF,GAC5B,CCgCsBG,CAASlpF,GAAUA,EAAS,IAAI+oF,GAAO/oF,GACzD37B,KAAK8kH,OAAS,IAAIlE,GAAMgE,GACxB5kH,KAAK0a,SAAWsb,EAChBh2B,KAAK+kH,cAAgB,CACvB,CAKAC,SAAAA,GACE,MAAMhE,EAAQhhH,KAAKilH,YAAYtE,GAAU3iC,MACzC,OAAOh+E,KAAK+sC,KAAKi0E,EAAO,CACtBhgD,KAAMoP,GAAK4N,KACXr8E,MAAOq/G,EAAMr/G,OAEjB,CAMAujH,aAAAA,GACE,OAAOllH,KAAK+sC,KAAK/sC,KAAK8kH,OAAO9D,MAAO,CAClChgD,KAAMoP,GAAK+0C,SACXpkD,YAAa/gE,KAAKolH,KAChBzE,GAAUG,IACV9gH,KAAKqlH,gBACL1E,GAAUQ,MAGhB,CAyBAkE,eAAAA,GACE,GAAIrlH,KAAKimF,KAAK06B,GAAUkC,SACtB,OAAO7iH,KAAKslH,2BAGd,MAAMC,EAAiBvlH,KAAKwlH,kBACtBC,EAAeF,EACjBvlH,KAAK8kH,OAAO5D,YACZlhH,KAAK8kH,OAAO9D,MAEhB,GAAIyE,EAAazkD,OAAS2/C,GAAU3iC,KAAM,CACxC,OAAQynC,EAAa9jH,OACnB,IAAK,SACH,OAAO3B,KAAK0lH,wBAEd,IAAK,SACH,OAAO1lH,KAAK2lH,4BAEd,IAAK,OACH,OAAO3lH,KAAK4lH,4BAEd,IAAK,YACH,OAAO5lH,KAAK6lH,+BAEd,IAAK,QACH,OAAO7lH,KAAK8lH,2BAEd,IAAK,OACH,OAAO9lH,KAAK+lH,0BAEd,IAAK,QACH,OAAO/lH,KAAKgmH,iCAEd,IAAK,YACH,OAAOhmH,KAAKimH,2BAGhB,GAAIV,EACF,MAAM9E,GACJzgH,KAAK8kH,OAAOnpF,OACZ37B,KAAK8kH,OAAO9D,MAAM9oG,MAClB,gFAIJ,OAAQutG,EAAa9jH,OACnB,IAAK,QACL,IAAK,WACL,IAAK,eACH,OAAO3B,KAAKslH,2BAEd,IAAK,WACH,OAAOtlH,KAAKkmH,0BAEd,IAAK,SACH,OAAOlmH,KAAKmmH,2BAElB,CAEA,MAAMnmH,KAAKomH,WAAWX,EACxB,CAQAH,wBAAAA,GACE,MAAMptG,EAAQlY,KAAK8kH,OAAO9D,MAE1B,GAAIhhH,KAAKimF,KAAK06B,GAAUkC,SACtB,OAAO7iH,KAAK+sC,KAAK70B,EAAO,CACtB8oD,KAAMoP,GAAK8O,qBACXje,UAAWkP,GAAkBk2C,MAC7B9gH,UAAM2tD,EACNiX,oBAAqB,GACrBjC,WAAY,GACZa,aAAc/oE,KAAKsmH,sBAIvB,MAAMrlD,EAAYjhE,KAAKumH,qBACvB,IAAIhhH,EAMJ,OAJIvF,KAAKimF,KAAK06B,GAAU3iC,QACtBz4E,EAAOvF,KAAKglH,aAGPhlH,KAAK+sC,KAAK70B,EAAO,CACtB8oD,KAAMoP,GAAK8O,qBACXje,YACA17D,OACA4kE,oBAAqBnqE,KAAKwmH,2BAC1Bt+C,WAAYloE,KAAKymH,iBAAgB,GACjC19C,aAAc/oE,KAAKsmH,qBAEvB,CAKAC,kBAAAA,GACE,MAAMG,EAAiB1mH,KAAKilH,YAAYtE,GAAU3iC,MAElD,OAAQ0oC,EAAe/kH,OACrB,IAAK,QACH,OAAOwuE,GAAkBk2C,MAE3B,IAAK,WACH,OAAOl2C,GAAkBw2C,SAE3B,IAAK,eACH,OAAOx2C,GAAkBy2C,aAG7B,MAAM5mH,KAAKomH,WAAWM,EACxB,CAKAF,wBAAAA,GACE,OAAOxmH,KAAK6mH,aACVlG,GAAU0B,QACVriH,KAAK8mH,wBACLnG,GAAU2B,QAEd,CAKAwE,uBAAAA,GACE,OAAO9mH,KAAK+sC,KAAK/sC,KAAK8kH,OAAO9D,MAAO,CAClChgD,KAAMoP,GAAK22C,oBACX38C,SAAUpqE,KAAKgnH,gBACfn4G,MAAO7O,KAAKilH,YAAYtE,GAAU6B,OAAQxiH,KAAKinH,sBAC/C7xF,aAAcp1B,KAAKknH,oBAAoBvG,GAAU8B,QAC7CziH,KAAKmnH,8BACLj0D,EACJgV,WAAYloE,KAAKonH,wBAErB,CAKAJ,aAAAA,GACE,MAAM9uG,EAAQlY,KAAK8kH,OAAO9D,MAE1B,OADAhhH,KAAKilH,YAAYtE,GAAUwB,QACpBniH,KAAK+sC,KAAK70B,EAAO,CACtB8oD,KAAMoP,GAAKi3C,SACX9hH,KAAMvF,KAAKglH,aAEf,CAOAsB,iBAAAA,GACE,OAAOtmH,KAAK+sC,KAAK/sC,KAAK8kH,OAAO9D,MAAO,CAClChgD,KAAMoP,GAAKk3C,cACXt+C,WAAYhpE,KAAKolH,KACfzE,GAAUkC,QACV7iH,KAAKunH,eACL5G,GAAUoC,UAGhB,CAQAwE,cAAAA,GACE,OAAOvnH,KAAKimF,KAAK06B,GAAU4B,QACvBviH,KAAKwnH,gBACLxnH,KAAKynH,YACX,CAOAA,UAAAA,GACE,MAAMvvG,EAAQlY,KAAK8kH,OAAO9D,MACpB0G,EAAc1nH,KAAKglH,YACzB,IAAIn8C,EACAtjE,EASJ,OAPIvF,KAAKknH,oBAAoBvG,GAAU6B,QACrC35C,EAAQ6+C,EACRniH,EAAOvF,KAAKglH,aAEZz/G,EAAOmiH,EAGF1nH,KAAK+sC,KAAK70B,EAAO,CACtB8oD,KAAMoP,GAAK2N,MACXlV,QACAtjE,OACA3F,UAAWI,KAAK2nH,gBAAe,GAC/Bz/C,WAAYloE,KAAKymH,iBAAgB,GACjC19C,aAAc/oE,KAAKimF,KAAK06B,GAAUkC,SAC9B7iH,KAAKsmH,yBACLpzD,GAER,CAKAy0D,cAAAA,CAAeC,GACb,MAAMtnD,EAAOsnD,EAAU5nH,KAAK6nH,mBAAqB7nH,KAAK8nH,cACtD,OAAO9nH,KAAK6mH,aAAalG,GAAU0B,QAAS/hD,EAAMqgD,GAAU2B,QAC9D,CAKAwF,aAAAA,GAA+B,IAAjBF,EAAOhoH,UAAAC,OAAA,QAAAqzD,IAAAtzD,UAAA,IAAAA,UAAA,GACnB,MAAMsY,EAAQlY,KAAK8kH,OAAO9D,MACpBz7G,EAAOvF,KAAKglH,YAElB,OADAhlH,KAAKilH,YAAYtE,GAAU6B,OACpBxiH,KAAK+sC,KAAK70B,EAAO,CACtB8oD,KAAMoP,GAAK23C,SACXxiH,OACA5D,MAAO3B,KAAKgoH,kBAAkBJ,IAElC,CAEAC,kBAAAA,GACE,OAAO7nH,KAAK8nH,eAAc,EAC5B,CAUAN,aAAAA,GACE,MAAMtvG,EAAQlY,KAAK8kH,OAAO9D,MAC1BhhH,KAAKilH,YAAYtE,GAAU4B,QAC3B,MAAM0F,EAAmBjoH,KAAKkoH,sBAAsB,MAEpD,OAAKD,GAAoBjoH,KAAKimF,KAAK06B,GAAU3iC,MACpCh+E,KAAK+sC,KAAK70B,EAAO,CACtB8oD,KAAMoP,GAAK8N,gBACX34E,KAAMvF,KAAKmoH,oBACXjgD,WAAYloE,KAAKymH,iBAAgB,KAI9BzmH,KAAK+sC,KAAK70B,EAAO,CACtB8oD,KAAMoP,GAAK0lB,gBACXhd,cAAemvC,EAAmBjoH,KAAKooH,sBAAmBl1D,EAC1DgV,WAAYloE,KAAKymH,iBAAgB,GACjC19C,aAAc/oE,KAAKsmH,qBAEvB,CAQAJ,uBAAAA,GACE,MAAMhuG,EAAQlY,KAAK8kH,OAAO9D,MAK1B,OAJAhhH,KAAKqoH,cAAc,aAIgC,IAA/CroH,KAAK0a,SAAS4tG,6BACTtoH,KAAK+sC,KAAK70B,EAAO,CACtB8oD,KAAMoP,GAAK+O,oBACX55E,KAAMvF,KAAKmoH,oBACXh+C,oBAAqBnqE,KAAKwmH,2BAC1B1tC,eAAgB94E,KAAKqoH,cAAc,MAAOroH,KAAKooH,kBAC/ClgD,WAAYloE,KAAKymH,iBAAgB,GACjC19C,aAAc/oE,KAAKsmH,sBAIhBtmH,KAAK+sC,KAAK70B,EAAO,CACtB8oD,KAAMoP,GAAK+O,oBACX55E,KAAMvF,KAAKmoH,oBACXrvC,eAAgB94E,KAAKqoH,cAAc,MAAOroH,KAAKooH,kBAC/ClgD,WAAYloE,KAAKymH,iBAAgB,GACjC19C,aAAc/oE,KAAKsmH,qBAEvB,CAKA6B,iBAAAA,GACE,GAAgC,OAA5BnoH,KAAK8kH,OAAO9D,MAAMr/G,MACpB,MAAM3B,KAAKomH,aAGb,OAAOpmH,KAAKglH,WACd,CAqBAgD,iBAAAA,CAAkBJ,GAChB,MAAM5G,EAAQhhH,KAAK8kH,OAAO9D,MAE1B,OAAQA,EAAMhgD,MACZ,KAAK2/C,GAAUgC,UACb,OAAO3iH,KAAKuoH,UAAUX,GAExB,KAAKjH,GAAUkC,QACb,OAAO7iH,KAAKwoH,YAAYZ,GAE1B,KAAKjH,GAAU6C,IAEb,OADAxjH,KAAKyoH,eACEzoH,KAAK+sC,KAAKi0E,EAAO,CACtBhgD,KAAMoP,GAAKozC,IACX7hH,MAAOq/G,EAAMr/G,QAGjB,KAAKg/G,GAAU4C,MAEb,OADAvjH,KAAKyoH,eACEzoH,KAAK+sC,KAAKi0E,EAAO,CACtBhgD,KAAMoP,GAAKmzC,MACX5hH,MAAOq/G,EAAMr/G,QAGjB,KAAKg/G,GAAU+C,OACf,KAAK/C,GAAUyD,aACb,OAAOpkH,KAAK0oH,qBAEd,KAAK/H,GAAU3iC,KAGb,OAFAh+E,KAAKyoH,eAEGzH,EAAMr/G,OACZ,IAAK,OACH,OAAO3B,KAAK+sC,KAAKi0E,EAAO,CACtBhgD,KAAMoP,GAAKu4C,QACXhnH,OAAO,IAGX,IAAK,QACH,OAAO3B,KAAK+sC,KAAKi0E,EAAO,CACtBhgD,KAAMoP,GAAKu4C,QACXhnH,OAAO,IAGX,IAAK,OACH,OAAO3B,KAAK+sC,KAAKi0E,EAAO,CACtBhgD,KAAMoP,GAAKw4C,OAGf,QACE,OAAO5oH,KAAK+sC,KAAKi0E,EAAO,CACtBhgD,KAAMoP,GAAKy4C,KACXlnH,MAAOq/G,EAAMr/G,QAIrB,KAAKg/G,GAAUwB,OACb,GAAIyF,EAAS,CAGX,GAFA5nH,KAAKilH,YAAYtE,GAAUwB,QAEvBniH,KAAK8kH,OAAO9D,MAAMhgD,OAAS2/C,GAAU3iC,KAAM,CAC7C,MAAMkC,EAAUlgF,KAAK8kH,OAAO9D,MAAMr/G,MAClC,MAAM8+G,GACJzgH,KAAK8kH,OAAOnpF,OACZqlF,EAAM9oG,MAAK,yBAAA/X,OACc+/E,EAAO,wBAEpC,CACE,MAAMlgF,KAAKomH,WAAWpF,EAE1B,CAEA,OAAOhhH,KAAKgnH,gBAEd,QACE,MAAMhnH,KAAKomH,aAEjB,CAEAe,sBAAAA,GACE,OAAOnnH,KAAKgoH,mBAAkB,EAChC,CAEAU,kBAAAA,GACE,MAAM1H,EAAQhhH,KAAK8kH,OAAO9D,MAE1B,OADAhhH,KAAKyoH,eACEzoH,KAAK+sC,KAAKi0E,EAAO,CACtBhgD,KAAMoP,GAAKszC,OACX/hH,MAAOq/G,EAAMr/G,MACb62E,MAAOwoC,EAAMhgD,OAAS2/C,GAAUyD,cAEpC,CAOAmE,SAAAA,CAAUX,GAGR,OAAO5nH,KAAK+sC,KAAK/sC,KAAK8kH,OAAO9D,MAAO,CAClChgD,KAAMoP,GAAK04C,KACXn0G,OAAQ3U,KAAKiN,IAAI0zG,GAAUgC,WAJhBriD,IAAMtgE,KAAKgoH,kBAAkBJ,IAIIjH,GAAUiC,YAE1D,CASA4F,WAAAA,CAAYZ,GAGV,OAAO5nH,KAAK+sC,KAAK/sC,KAAK8kH,OAAO9D,MAAO,CAClChgD,KAAMoP,GAAK24C,OACXzhD,OAAQtnE,KAAKiN,IAAI0zG,GAAUkC,SAJhBviD,IAAMtgE,KAAKgpH,iBAAiBpB,IAIGjH,GAAUoC,UAExD,CAKAiG,gBAAAA,CAAiBpB,GACf,MAAM1vG,EAAQlY,KAAK8kH,OAAO9D,MACpBz7G,EAAOvF,KAAKglH,YAElB,OADAhlH,KAAKilH,YAAYtE,GAAU6B,OACpBxiH,KAAK+sC,KAAK70B,EAAO,CACtB8oD,KAAMoP,GAAK64C,aACX1jH,OACA5D,MAAO3B,KAAKgoH,kBAAkBJ,IAElC,CAMAnB,eAAAA,CAAgBmB,GACd,MAAM1/C,EAAa,GAEnB,KAAOloE,KAAKimF,KAAK06B,GAAU+B,KACzBx6C,EAAWtlE,KAAK5C,KAAKkpH,eAAetB,IAGtC,OAAO1/C,CACT,CAEAk/C,oBAAAA,GACE,OAAOpnH,KAAKymH,iBAAgB,EAC9B,CAOAyC,cAAAA,CAAetB,GACb,MAAM1vG,EAAQlY,KAAK8kH,OAAO9D,MAE1B,OADAhhH,KAAKilH,YAAYtE,GAAU+B,IACpB1iH,KAAK+sC,KAAK70B,EAAO,CACtB8oD,KAAMoP,GAAK+4C,UACX5jH,KAAMvF,KAAKglH,YACXplH,UAAWI,KAAK2nH,eAAeC,IAEnC,CASAX,kBAAAA,GACE,MAAM/uG,EAAQlY,KAAK8kH,OAAO9D,MAC1B,IAAInyG,EAEJ,GAAI7O,KAAKknH,oBAAoBvG,GAAUgC,WAAY,CACjD,MAAMyG,EAAYppH,KAAKinH,qBACvBjnH,KAAKilH,YAAYtE,GAAUiC,WAC3B/zG,EAAO7O,KAAK+sC,KAAK70B,EAAO,CACtB8oD,KAAMoP,GAAKi5C,UACXx6G,KAAMu6G,GAEV,MACEv6G,EAAO7O,KAAKooH,iBAGd,OAAIpoH,KAAKknH,oBAAoBvG,GAAUuB,MAC9BliH,KAAK+sC,KAAK70B,EAAO,CACtB8oD,KAAMoP,GAAKk5C,cACXz6G,SAIGA,CACT,CAKAu5G,cAAAA,GACE,OAAOpoH,KAAK+sC,KAAK/sC,KAAK8kH,OAAO9D,MAAO,CAClChgD,KAAMoP,GAAKm5C,WACXhkH,KAAMvF,KAAKglH,aAEf,CAEAQ,eAAAA,GACE,OAAOxlH,KAAKimF,KAAK06B,GAAU+C,SAAW1jH,KAAKimF,KAAK06B,GAAUyD,aAC5D,CAKAoF,gBAAAA,GACE,GAAIxpH,KAAKwlH,kBACP,OAAOxlH,KAAK0oH,oBAEhB,CAOAhD,qBAAAA,GACE,MAAMxtG,EAAQlY,KAAK8kH,OAAO9D,MACpBtmC,EAAc16E,KAAKwpH,mBACzBxpH,KAAKqoH,cAAc,UACnB,MAAMngD,EAAaloE,KAAKonH,uBAClBzsC,EAAiB36E,KAAKolH,KAC1BzE,GAAUkC,QACV7iH,KAAKypH,6BACL9I,GAAUoC,SAEZ,OAAO/iH,KAAK+sC,KAAK70B,EAAO,CACtB8oD,KAAMoP,GAAKs5C,kBACXhvC,cACAxS,aACAyS,kBAEJ,CAKA8uC,4BAAAA,GACE,MAAMvxG,EAAQlY,KAAK8kH,OAAO9D,MACpB//C,EAAYjhE,KAAKumH,qBACvBvmH,KAAKilH,YAAYtE,GAAU6B,OAC3B,MAAM3zG,EAAO7O,KAAKooH,iBAClB,OAAOpoH,KAAK+sC,KAAK70B,EAAO,CACtB8oD,KAAMoP,GAAKu5C,0BACX1oD,YACApyD,QAEJ,CAKA82G,yBAAAA,GACE,MAAMztG,EAAQlY,KAAK8kH,OAAO9D,MACpBtmC,EAAc16E,KAAKwpH,mBACzBxpH,KAAKqoH,cAAc,UACnB,MAAM9iH,EAAOvF,KAAKglH,YACZ98C,EAAaloE,KAAKonH,uBACxB,OAAOpnH,KAAK+sC,KAAK70B,EAAO,CACtB8oD,KAAMoP,GAAKw5C,uBACXlvC,cACAn1E,OACA2iE,cAEJ,CAOA09C,yBAAAA,GACE,MAAM1tG,EAAQlY,KAAK8kH,OAAO9D,MACpBtmC,EAAc16E,KAAKwpH,mBACzBxpH,KAAKqoH,cAAc,QACnB,MAAM9iH,EAAOvF,KAAKglH,YACZjqC,EAAa/6E,KAAK6pH,4BAClB3hD,EAAaloE,KAAKonH,uBAClB9/C,EAAStnE,KAAK8pH,wBACpB,OAAO9pH,KAAK+sC,KAAK70B,EAAO,CACtB8oD,KAAMoP,GAAK25C,uBACXrvC,cACAn1E,OACAw1E,aACA7S,aACAZ,UAEJ,CAOAuiD,yBAAAA,GACE,OAAO7pH,KAAKkoH,sBAAsB,cAC9BloH,KAAKgqH,cAAcrJ,GAAUyB,IAAKpiH,KAAKooH,gBACvC,EACN,CAOA0B,qBAAAA,GACE,OAAO9pH,KAAK6mH,aACVlG,GAAUkC,QACV7iH,KAAKiqH,qBACLtJ,GAAUoC,QAEd,CAMAkH,oBAAAA,GACE,MAAM/xG,EAAQlY,KAAK8kH,OAAO9D,MACpBtmC,EAAc16E,KAAKwpH,mBACnBjkH,EAAOvF,KAAKglH,YACZxqD,EAAOx6D,KAAKkqH,oBAClBlqH,KAAKilH,YAAYtE,GAAU6B,OAC3B,MAAM3zG,EAAO7O,KAAKinH,qBACZ/+C,EAAaloE,KAAKonH,uBACxB,OAAOpnH,KAAK+sC,KAAK70B,EAAO,CACtB8oD,KAAMoP,GAAK+5C,iBACXzvC,cACAn1E,OACA3F,UAAW46D,EACX3rD,OACAq5D,cAEJ,CAKAgiD,iBAAAA,GACE,OAAOlqH,KAAK6mH,aACVlG,GAAU0B,QACVriH,KAAKoqH,mBACLzJ,GAAU2B,QAEd,CAMA8H,kBAAAA,GACE,MAAMlyG,EAAQlY,KAAK8kH,OAAO9D,MACpBtmC,EAAc16E,KAAKwpH,mBACnBjkH,EAAOvF,KAAKglH,YAClBhlH,KAAKilH,YAAYtE,GAAU6B,OAC3B,MAAM3zG,EAAO7O,KAAKinH,qBAClB,IAAI7xF,EAEAp1B,KAAKknH,oBAAoBvG,GAAU8B,UACrCrtF,EAAep1B,KAAKmnH,0BAGtB,MAAMj/C,EAAaloE,KAAKonH,uBACxB,OAAOpnH,KAAK+sC,KAAK70B,EAAO,CACtB8oD,KAAMoP,GAAKi6C,uBACX3vC,cACAn1E,OACAsJ,OACAumB,eACA8yC,cAEJ,CAMA29C,4BAAAA,GACE,MAAM3tG,EAAQlY,KAAK8kH,OAAO9D,MACpBtmC,EAAc16E,KAAKwpH,mBACzBxpH,KAAKqoH,cAAc,aACnB,MAAM9iH,EAAOvF,KAAKglH,YACZjqC,EAAa/6E,KAAK6pH,4BAClB3hD,EAAaloE,KAAKonH,uBAClB9/C,EAAStnE,KAAK8pH,wBACpB,OAAO9pH,KAAK+sC,KAAK70B,EAAO,CACtB8oD,KAAMoP,GAAKk6C,0BACX5vC,cACAn1E,OACAw1E,aACA7S,aACAZ,UAEJ,CAMAw+C,wBAAAA,GACE,MAAM5tG,EAAQlY,KAAK8kH,OAAO9D,MACpBtmC,EAAc16E,KAAKwpH,mBACzBxpH,KAAKqoH,cAAc,SACnB,MAAM9iH,EAAOvF,KAAKglH,YACZ98C,EAAaloE,KAAKonH,uBAClB/rC,EAAQr7E,KAAKuqH,wBACnB,OAAOvqH,KAAK+sC,KAAK70B,EAAO,CACtB8oD,KAAMoP,GAAKo6C,sBACX9vC,cACAn1E,OACA2iE,aACAmT,SAEJ,CAOAkvC,qBAAAA,GACE,OAAOvqH,KAAKknH,oBAAoBvG,GAAU8B,QACtCziH,KAAKgqH,cAAcrJ,GAAUmC,KAAM9iH,KAAKooH,gBACxC,EACN,CAMArC,uBAAAA,GACE,MAAM7tG,EAAQlY,KAAK8kH,OAAO9D,MACpBtmC,EAAc16E,KAAKwpH,mBACzBxpH,KAAKqoH,cAAc,QACnB,MAAM9iH,EAAOvF,KAAKglH,YACZ98C,EAAaloE,KAAKonH,uBAClBzyG,EAAS3U,KAAKyqH,4BACpB,OAAOzqH,KAAK+sC,KAAK70B,EAAO,CACtB8oD,KAAMoP,GAAKs6C,qBACXhwC,cACAn1E,OACA2iE,aACAvzD,UAEJ,CAOA81G,yBAAAA,GACE,OAAOzqH,KAAK6mH,aACVlG,GAAUkC,QACV7iH,KAAK2qH,yBACLhK,GAAUoC,QAEd,CAKA4H,wBAAAA,GACE,MAAMzyG,EAAQlY,KAAK8kH,OAAO9D,MACpBtmC,EAAc16E,KAAKwpH,mBACnBjkH,EAAOvF,KAAK4qH,qBACZ1iD,EAAaloE,KAAKonH,uBACxB,OAAOpnH,KAAK+sC,KAAK70B,EAAO,CACtB8oD,KAAMoP,GAAKy6C,sBACXnwC,cACAn1E,OACA2iE,cAEJ,CAKA0iD,kBAAAA,GACE,GAC8B,SAA5B5qH,KAAK8kH,OAAO9D,MAAMr/G,OACU,UAA5B3B,KAAK8kH,OAAO9D,MAAMr/G,OACU,SAA5B3B,KAAK8kH,OAAO9D,MAAMr/G,MAElB,MAAM8+G,GACJzgH,KAAK8kH,OAAOnpF,OACZ37B,KAAK8kH,OAAO9D,MAAM9oG,MAAK,GAAA/X,OACpB2qH,GACD9qH,KAAK8kH,OAAO9D,OACb,uDAIL,OAAOhhH,KAAKglH,WACd,CAMAgB,8BAAAA,GACE,MAAM9tG,EAAQlY,KAAK8kH,OAAO9D,MACpBtmC,EAAc16E,KAAKwpH,mBACzBxpH,KAAKqoH,cAAc,SACnB,MAAM9iH,EAAOvF,KAAKglH,YACZ98C,EAAaloE,KAAKonH,uBAClB9/C,EAAStnE,KAAK+qH,6BACpB,OAAO/qH,KAAK+sC,KAAK70B,EAAO,CACtB8oD,KAAMoP,GAAK46C,6BACXtwC,cACAn1E,OACA2iE,aACAZ,UAEJ,CAOAyjD,0BAAAA,GACE,OAAO/qH,KAAK6mH,aACVlG,GAAUkC,QACV7iH,KAAKoqH,mBACLzJ,GAAUoC,QAEd,CAeAoD,wBAAAA,GACE,MAAMV,EAAezlH,KAAK8kH,OAAO5D,YAEjC,GAAIuE,EAAazkD,OAAS2/C,GAAU3iC,KAClC,OAAQynC,EAAa9jH,OACnB,IAAK,SACH,OAAO3B,KAAKirH,uBAEd,IAAK,SACH,OAAOjrH,KAAKkrH,2BAEd,IAAK,OACH,OAAOlrH,KAAKmrH,2BAEd,IAAK,YACH,OAAOnrH,KAAKorH,8BAEd,IAAK,QACH,OAAOprH,KAAKqrH,0BAEd,IAAK,OACH,OAAOrrH,KAAKsrH,yBAEd,IAAK,QACH,OAAOtrH,KAAKurH,gCAIlB,MAAMvrH,KAAKomH,WAAWX,EACxB,CASAwF,oBAAAA,GACE,MAAM/yG,EAAQlY,KAAK8kH,OAAO9D,MAC1BhhH,KAAKqoH,cAAc,UACnBroH,KAAKqoH,cAAc,UACnB,MAAMngD,EAAaloE,KAAKonH,uBAClBzsC,EAAiB36E,KAAK6mH,aAC1BlG,GAAUkC,QACV7iH,KAAKypH,6BACL9I,GAAUoC,SAGZ,GAA0B,IAAtB76C,EAAWroE,QAA0C,IAA1B86E,EAAe96E,OAC5C,MAAMG,KAAKomH,aAGb,OAAOpmH,KAAK+sC,KAAK70B,EAAO,CACtB8oD,KAAMoP,GAAKo7C,iBACXtjD,aACAyS,kBAEJ,CAMAuwC,wBAAAA,GACE,MAAMhzG,EAAQlY,KAAK8kH,OAAO9D,MAC1BhhH,KAAKqoH,cAAc,UACnBroH,KAAKqoH,cAAc,UACnB,MAAM9iH,EAAOvF,KAAKglH,YACZ98C,EAAaloE,KAAKonH,uBAExB,GAA0B,IAAtBl/C,EAAWroE,OACb,MAAMG,KAAKomH,aAGb,OAAOpmH,KAAK+sC,KAAK70B,EAAO,CACtB8oD,KAAMoP,GAAKq7C,sBACXlmH,OACA2iE,cAEJ,CAQAijD,wBAAAA,GACE,MAAMjzG,EAAQlY,KAAK8kH,OAAO9D,MAC1BhhH,KAAKqoH,cAAc,UACnBroH,KAAKqoH,cAAc,QACnB,MAAM9iH,EAAOvF,KAAKglH,YACZjqC,EAAa/6E,KAAK6pH,4BAClB3hD,EAAaloE,KAAKonH,uBAClB9/C,EAAStnE,KAAK8pH,wBAEpB,GACwB,IAAtB/uC,EAAWl7E,QACW,IAAtBqoE,EAAWroE,QACO,IAAlBynE,EAAOznE,OAEP,MAAMG,KAAKomH,aAGb,OAAOpmH,KAAK+sC,KAAK70B,EAAO,CACtB8oD,KAAMoP,GAAKs7C,sBACXnmH,OACAw1E,aACA7S,aACAZ,UAEJ,CAQA8jD,2BAAAA,GACE,MAAMlzG,EAAQlY,KAAK8kH,OAAO9D,MAC1BhhH,KAAKqoH,cAAc,UACnBroH,KAAKqoH,cAAc,aACnB,MAAM9iH,EAAOvF,KAAKglH,YACZjqC,EAAa/6E,KAAK6pH,4BAClB3hD,EAAaloE,KAAKonH,uBAClB9/C,EAAStnE,KAAK8pH,wBAEpB,GACwB,IAAtB/uC,EAAWl7E,QACW,IAAtBqoE,EAAWroE,QACO,IAAlBynE,EAAOznE,OAEP,MAAMG,KAAKomH,aAGb,OAAOpmH,KAAK+sC,KAAK70B,EAAO,CACtB8oD,KAAMoP,GAAKu7C,yBACXpmH,OACAw1E,aACA7S,aACAZ,UAEJ,CAOA+jD,uBAAAA,GACE,MAAMnzG,EAAQlY,KAAK8kH,OAAO9D,MAC1BhhH,KAAKqoH,cAAc,UACnBroH,KAAKqoH,cAAc,SACnB,MAAM9iH,EAAOvF,KAAKglH,YACZ98C,EAAaloE,KAAKonH,uBAClB/rC,EAAQr7E,KAAKuqH,wBAEnB,GAA0B,IAAtBriD,EAAWroE,QAAiC,IAAjBw7E,EAAMx7E,OACnC,MAAMG,KAAKomH,aAGb,OAAOpmH,KAAK+sC,KAAK70B,EAAO,CACtB8oD,KAAMoP,GAAKw7C,qBACXrmH,OACA2iE,aACAmT,SAEJ,CAOAiwC,sBAAAA,GACE,MAAMpzG,EAAQlY,KAAK8kH,OAAO9D,MAC1BhhH,KAAKqoH,cAAc,UACnBroH,KAAKqoH,cAAc,QACnB,MAAM9iH,EAAOvF,KAAKglH,YACZ98C,EAAaloE,KAAKonH,uBAClBzyG,EAAS3U,KAAKyqH,4BAEpB,GAA0B,IAAtBviD,EAAWroE,QAAkC,IAAlB8U,EAAO9U,OACpC,MAAMG,KAAKomH,aAGb,OAAOpmH,KAAK+sC,KAAK70B,EAAO,CACtB8oD,KAAMoP,GAAKy7C,oBACXtmH,OACA2iE,aACAvzD,UAEJ,CAOA42G,6BAAAA,GACE,MAAMrzG,EAAQlY,KAAK8kH,OAAO9D,MAC1BhhH,KAAKqoH,cAAc,UACnBroH,KAAKqoH,cAAc,SACnB,MAAM9iH,EAAOvF,KAAKglH,YACZ98C,EAAaloE,KAAKonH,uBAClB9/C,EAAStnE,KAAK+qH,6BAEpB,GAA0B,IAAtB7iD,EAAWroE,QAAkC,IAAlBynE,EAAOznE,OACpC,MAAMG,KAAKomH,aAGb,OAAOpmH,KAAK+sC,KAAK70B,EAAO,CACtB8oD,KAAMoP,GAAK07C,4BACXvmH,OACA2iE,aACAZ,UAEJ,CAQA2+C,wBAAAA,GACE,MAAM/tG,EAAQlY,KAAK8kH,OAAO9D,MACpBtmC,EAAc16E,KAAKwpH,mBACzBxpH,KAAKqoH,cAAc,aACnBroH,KAAKilH,YAAYtE,GAAU+B,IAC3B,MAAMn9G,EAAOvF,KAAKglH,YACZxqD,EAAOx6D,KAAKkqH,oBACZxuC,EAAa17E,KAAKkoH,sBAAsB,cAC9CloH,KAAKqoH,cAAc,MACnB,MAAM1sC,EAAY37E,KAAK+rH,0BACvB,OAAO/rH,KAAK+sC,KAAK70B,EAAO,CACtB8oD,KAAMoP,GAAK47C,qBACXtxC,cACAn1E,OACA3F,UAAW46D,EACXkhB,aACAC,aAEJ,CAOAowC,uBAAAA,GACE,OAAO/rH,KAAKgqH,cAAcrJ,GAAUmC,KAAM9iH,KAAKisH,uBACjD,CA6BAA,sBAAAA,GACE,MAAM/zG,EAAQlY,KAAK8kH,OAAO9D,MACpBz7G,EAAOvF,KAAKglH,YAElB,GAAI/lH,OAAOK,UAAUC,eAAeC,KAAKkhH,GAAmBn7G,EAAK5D,OAC/D,OAAO4D,EAGT,MAAMvF,KAAKomH,WAAWluG,EACxB,CAQA60B,IAAAA,CAAK+/B,EAAY//B,GASf,OARiC,IAA7B/sC,KAAK0a,SAASwxG,aAChBn/E,EAAKozE,IAAM,IAAItzC,GACbC,EACA9sE,KAAK8kH,OAAO/D,UACZ/gH,KAAK8kH,OAAOnpF,SAIToR,CACT,CAKAk5C,IAAAA,CAAKjlB,GACH,OAAOhhE,KAAK8kH,OAAO9D,MAAMhgD,OAASA,CACpC,CAMAikD,WAAAA,CAAYjkD,GACV,MAAMggD,EAAQhhH,KAAK8kH,OAAO9D,MAE1B,GAAIA,EAAMhgD,OAASA,EAEjB,OADAhhE,KAAKyoH,eACEzH,EAGT,MAAMP,GACJzgH,KAAK8kH,OAAOnpF,OACZqlF,EAAM9oG,MAAK,YAAA/X,OACCgsH,GAAiBnrD,GAAK,YAAA7gE,OAAW2qH,GAAa9J,GAAM,KAEpE,CAMAkG,mBAAAA,CAAoBlmD,GAGlB,OAFchhE,KAAK8kH,OAAO9D,MAEhBhgD,OAASA,IACjBhhE,KAAKyoH,gBACE,EAIX,CAMAJ,aAAAA,CAAc1mH,GACZ,MAAMq/G,EAAQhhH,KAAK8kH,OAAO9D,MAE1B,GAAIA,EAAMhgD,OAAS2/C,GAAU3iC,MAAQgjC,EAAMr/G,QAAUA,EAGnD,MAAM8+G,GACJzgH,KAAK8kH,OAAOnpF,OACZqlF,EAAM9oG,MAAK,aAAA/X,OACEwB,EAAK,aAAAxB,OAAY2qH,GAAa9J,GAAM,MALnDhhH,KAAKyoH,cAQT,CAMAP,qBAAAA,CAAsBvmH,GACpB,MAAMq/G,EAAQhhH,KAAK8kH,OAAO9D,MAE1B,OAAIA,EAAMhgD,OAAS2/C,GAAU3iC,MAAQgjC,EAAMr/G,QAAUA,IACnD3B,KAAKyoH,gBACE,EAIX,CAKArC,UAAAA,CAAWgG,GACT,MAAMpL,EACQ,OAAZoL,QAAgC,IAAZA,EAAqBA,EAAUpsH,KAAK8kH,OAAO9D,MACjE,OAAOP,GACLzgH,KAAK8kH,OAAOnpF,OACZqlF,EAAM9oG,MAAK,cAAA/X,OACG2qH,GAAa9J,GAAM,KAErC,CAOA/zG,GAAAA,CAAIo/G,EAAUC,EAASC,GACrBvsH,KAAKilH,YAAYoH,GACjB,MAAM1M,EAAQ,GAEd,MAAQ3/G,KAAKknH,oBAAoBqF,IAC/B5M,EAAM/8G,KAAK0pH,EAAQ9sH,KAAKQ,OAG1B,OAAO2/G,CACT,CAQAkH,YAAAA,CAAawF,EAAUC,EAASC,GAC9B,GAAIvsH,KAAKknH,oBAAoBmF,GAAW,CACtC,MAAM1M,EAAQ,GAEd,GACEA,EAAM/8G,KAAK0pH,EAAQ9sH,KAAKQ,cAChBA,KAAKknH,oBAAoBqF,IAEnC,OAAO5M,CACT,CAEA,MAAO,EACT,CAOAyF,IAAAA,CAAKiH,EAAUC,EAASC,GACtBvsH,KAAKilH,YAAYoH,GACjB,MAAM1M,EAAQ,GAEd,GACEA,EAAM/8G,KAAK0pH,EAAQ9sH,KAAKQ,cAChBA,KAAKknH,oBAAoBqF,IAEnC,OAAO5M,CACT,CAOAqK,aAAAA,CAAcwC,EAAeF,GAC3BtsH,KAAKknH,oBAAoBsF,GACzB,MAAM7M,EAAQ,GAEd,GACEA,EAAM/8G,KAAK0pH,EAAQ9sH,KAAKQ,aACjBA,KAAKknH,oBAAoBsF,IAElC,OAAO7M,CACT,CAEA8I,YAAAA,GACE,MAAM,UAAEgE,GAAczsH,KAAK0a,SAErBsmG,EAAQhhH,KAAK8kH,OAAOprG,UAE1B,QAAkBw5C,IAAdu5D,GAA2BzL,EAAMhgD,OAAS2/C,GAAUQ,QACpDnhH,KAAK+kH,cAEH/kH,KAAK+kH,cAAgB0H,GACvB,MAAMhM,GACJzgH,KAAK8kH,OAAOnpF,OACZqlF,EAAM9oG,MAAK,+BAAA/X,OACoBssH,EAAS,6BAIhD,EAMF,SAAS3B,GAAa9J,GACpB,MAAMr/G,EAAQq/G,EAAMr/G,MACpB,OAAOwqH,GAAiBnL,EAAMhgD,OAAkB,MAATr/D,EAAgB,KAAHxB,OAAQwB,EAAK,KAAM,GACzE,CAKA,SAASwqH,GAAiBnrD,GACxB,OHh6CK,SAA+BA,GACpC,OACEA,IAAS2/C,GAAUuB,MACnBlhD,IAAS2/C,GAAUwB,QACnBnhD,IAAS2/C,GAAUyB,KACnBphD,IAAS2/C,GAAU0B,SACnBrhD,IAAS2/C,GAAU2B,SACnBthD,IAAS2/C,GAAU4B,QACnBvhD,IAAS2/C,GAAU6B,OACnBxhD,IAAS2/C,GAAU8B,QACnBzhD,IAAS2/C,GAAU+B,IACnB1hD,IAAS2/C,GAAUgC,WACnB3hD,IAAS2/C,GAAUiC,WACnB5hD,IAAS2/C,GAAUkC,SACnB7hD,IAAS2/C,GAAUmC,MACnB9hD,IAAS2/C,GAAUoC,OAEvB,CG+4CS2J,CAAsB1rD,GAAQ,IAAH7gE,OAAO6gE,EAAI,KAAMA,CACrD,CC1+CA,IAAM2rD,GAAW,IAAI1hG,IAGf2hG,GAAoB,IAAI3hG,IAE1B4hG,IAAwB,EACxBC,IAAgC,EAIpC,SAASpc,GAAUqc,GACjB,OAAOA,EAAO7oG,QAAQ,UAAW,KAAKD,MACxC,CASA,SAAS+oG,GAAiBvwC,GACxB,IAAMwwC,EAAW,IAAIvpH,IACfq9D,EAAgC,GAgCtC,OA9BA0b,EAAI1b,YAAYjgE,SAAQ,SAAAipE,GACtB,GAAgC,uBAA5BA,EAAmB/I,KAA+B,CACpD,IAAIJ,EAAemJ,EAAmBxkE,KAAK5D,MACvCo0E,EAbD26B,IADgByP,EAcap2C,EAAmBo2C,KAblCxkF,OAAO1G,KAAKrc,UAAUunG,EAAIjoG,MAAOioG,EAAI3yE,MAgBlD0/E,EAAeN,GAAkBprH,IAAIo/D,GACrCssD,IAAiBA,EAAappH,IAAIiyE,GAGhC82C,IACF38G,QAAQkB,KAAK,+BAAiCwvD,EAAjC,iMAILssD,GACVN,GAAkBnrH,IAAIm/D,EAAcssD,EAAe,IAAIxpH,KAGzDwpH,EAAa74G,IAAI0hE,GAEZk3C,EAASnpH,IAAIiyE,KAChBk3C,EAAS54G,IAAI0hE,GACbhV,EAAYn+D,KAAKmnE,SAGnBhJ,EAAYn+D,KAAKmnE,GArCvB,IAAyBo2C,CAuCvB,IAEA9oD,EAAAA,EAAA,GACKolB,GAAG,CACN1b,YAAWA,GAEf,CAwBA,SAASmkD,GAAcvpF,GACrB,IAAIyzE,EAAWsB,GAAU/0E,GACzB,IAAKgxF,GAAS7oH,IAAIsrG,GAAW,CAC3B,IAAM+d,EDhFH,SAAexxF,EAAQ3F,GAE5B,OADe,IAAI2uF,GAAOhpF,EAAQ3F,GACpBkvF,eAChB,CC6EmBnuC,CAAMp7C,EAAQ,CAC3BmxF,8BAA6BA,GAC7BxE,6BAA8BwE,KAEhC,IAAKK,GAA0B,aAAhBA,EAAOnsD,KACpB,MAAM,IAAIz+D,MAAM,iCAElBoqH,GAASlrH,IACP2tG,EAjCN,SAAkB9lC,GAChB,IAAM08B,EAAU,IAAItiG,IAAyB4lE,EAAIvI,aAEjDilC,EAAQllG,SAAQ,SAAAisC,GACVA,EAAKozE,YAAYpzE,EAAKozE,IAC1BlhH,OAAOyB,KAAKqsC,GAAMjsC,SAAQ,SAAAoR,GACxB,IAAMvQ,EAAQorC,EAAK76B,GACfvQ,GAA0B,kBAAVA,GAClBqkG,EAAQ3xF,IAAI1S,EAEhB,GACF,IAEA,IAAMw+G,EAAM72C,EAAI62C,IAMhB,OALIA,WACKA,EAAIrzC,kBACJqzC,EAAIpzC,UAGNzD,CACT,CAgBM8jD,CAASJ,GAAiBG,KAG9B,OAAOR,GAASnrH,IAAI4tG,EACtB,CAGM,SAAUie,GACdC,OACA,IAAA9yD,EAAA,GAAAC,EAAA,EAAAA,EAAA76D,UAAAC,OAAA46D,IAAAD,EAAAC,EAAA,GAAA76D,UAAA66D,GAGwB,kBAAb6yD,IACTA,EAAW,CAACA,IAGd,IAAI7zG,EAAS6zG,EAAS,GAWtB,OATA9yD,EAAK15D,SAAQ,SAACm6D,EAAKn7D,GACbm7D,GAAoB,aAAbA,EAAI+F,KACbvnD,GAAUwhD,EAAIklD,IAAIxkF,OAAO1G,KAEzBxb,GAAUwhD,EAEZxhD,GAAU6zG,EAASxtH,EAAI,EACzB,IAEOolH,GAAczrG,EACvB,CAmBA,IAQiB8zG,GARXC,GACDH,GADCG,GAjBA,WACJb,GAASx3G,QACTy3G,GAAkBz3G,OACpB,EAcMq4G,GAZA,WACJX,IAAwB,CAC1B,EAUMW,GARA,WACJV,IAAgC,CAClC,EAMMU,GAJA,WACJV,IAAgC,CAClC,GAUiBS,GAAAF,KAAAA,GAAG,KAEhBA,IAKEG,GAJFD,GAAA/T,YAIEgU,GAHFD,GAAAE,wBAGED,GAFFD,GAAAG,oCAEEF,GADFD,GAAAI,qCACEH,GAGNH,GAAW,QAAGA,UCzKP,MAAMO,GAAgBP,GAAGQ,KCFA9uH,GDEA,gHCDvBC,KAAMA,GAAID,GAAEmB,MAAM,IDCK2tH,GCDA5uH,OAAO8qB,OAAO9qB,OAAOqyE,iBAAiBvyE,GAAG,CACrEsa,IAAK,CACH1X,MAAO1C,OAAO8qB,OAAO/qB,UAH3B,IAAgCD,GAAGC,aC4BnC,SAvBA,WACE,MAAM,QAAEkyF,EAAO,MAAEj4E,EAAK,KAAEqW,GAASkrF,GAASoT,IAE1C,OAAI18B,GAAgB48B,EAAAA,GAAAA,KAAA,KAAGtJ,UAAU,UAASluF,SAAC,eACvCrd,GAAc80G,EAAAA,GAAAA,MAAA,KAAGvJ,UAAU,QAAOluF,SAAA,CAAC,UAAQrd,EAAMzT,YAGnDuoH,EAAAA,GAAAA,MAAA,OAAKvJ,UAAU,YAAWluF,SAAA,EACxBw3F,EAAAA,GAAAA,KAAA,MAAAx3F,SAAI,+CACJw3F,EAAAA,GAAAA,KAAA,OAAKtJ,UAAU,YAAWluF,SACvBhH,EAAK0+F,UAAUzqH,KAAK0qH,IACnBF,EAAAA,GAAAA,MAAA,OAAwBvJ,UAAU,eAAcluF,SAAA,EAC9Cy3F,EAAAA,GAAAA,MAAA,MAAAz3F,SAAA,CACG23F,EAAQ1oH,KAAK,IAAE0oH,EAAQC,UAE1BH,EAAAA,GAAAA,MAAA,KAAAz3F,SAAA,CAAG,YAAU23F,EAAQE,aAJbF,EAAQnkF,YAU5B,EC1BA,SAASskF,GAAQnuH,GAGf,OAAOmuH,GAAU,mBAAqBhqH,QAAU,iBAAmBA,OAAOC,SAAW,SAAUpE,GAC7F,cAAcA,CAChB,EAAI,SAAUA,GACZ,OAAOA,GAAK,mBAAqBmE,QAAUnE,EAAE8D,cAAgBK,QAAUnE,IAAMmE,OAAO9E,UAAY,gBAAkBW,CACpH,EAAGmuH,GAAQnuH,EACb,CCNA,SAASouH,GAAcrvH,GACrB,IAAIc,ECFN,SAAqBd,EAAGW,GACtB,GAAI,UAAYyuH,GAAQpvH,KAAOA,EAAG,OAAOA,EACzC,IAAID,EAAIC,EAAEoF,OAAOkqH,aACjB,QAAI,IAAWvvH,EAAG,CAChB,IAAIe,EAAIf,EAAES,KAAKR,EAAGW,GAAK,WACvB,GAAI,UAAYyuH,GAAQtuH,GAAI,OAAOA,EACnC,MAAM,IAAI2G,UAAU,+CACtB,CACA,OAAQ,WAAa9G,EAAIwO,OAAS+H,QAAQlX,EAC5C,CDPUsvH,CAAYtvH,EAAG,UACvB,MAAO,UAAYovH,GAAQtuH,GAAKA,EAAIA,EAAI,EAC1C,CEJA,SAAS,GAAkBf,EAAGY,GAC5B,IAAK,IAAIX,EAAI,EAAGA,EAAIW,EAAEE,OAAQb,IAAK,CACjC,IAAIiB,EAAIN,EAAEX,GACViB,EAAEiU,WAAajU,EAAEiU,aAAc,EAAIjU,EAAEyB,cAAe,EAAI,UAAWzB,IAAMA,EAAE2B,UAAW,GAAK3C,OAAOsC,eAAexC,EAAGsvH,GAAcpuH,EAAEiS,KAAMjS,EAC5I,CACF,CACA,SAAS,GAAalB,EAAGY,EAAGX,GAC1B,OAAOW,GAAK,GAAkBZ,EAAEO,UAAWK,GAAIX,GAAK,GAAkBD,EAAGC,GAAIC,OAAOsC,eAAexC,EAAG,YAAa,CACjH6C,UAAU,IACR7C,CACN,CCJO,SAASwvH,GAAU1tH,EAAQuB,GAC9B,GAAIvB,IAAMuB,EAAG,OAAO,EAEpB,GAAIvB,GAAKuB,GAAiB,iBAALvB,GAA6B,iBAALuB,EAAe,CACxD,GAAIvB,EAAEkD,cAAgB3B,EAAE2B,YAAa,OAAO,EAE5C,IAAIlE,EACAC,EACJ,GAAIV,MAAMwB,QAAQC,GAAI,CAElB,IADAhB,EAASgB,EAAEhB,UACIuC,EAAEvC,OAAQ,OAAO,EAChC,IAAKC,EAAID,EAAgB,IAARC,KACb,IAAKyuH,GAAU1tH,EAAEf,GAAIsC,EAAEtC,IAAK,OAAO,EACvC,OAAO,CACX,CAGA,GAAIe,EAAEkD,cAAgBgvG,OAAQ,OAAOlyG,EAAE86B,SAAWv5B,EAAEu5B,QAAU96B,EAAEq9B,QAAU97B,EAAE87B,MAC5E,GAAIr9B,EAAEo2B,UAAYh4B,OAAOK,UAAU23B,QAAS,OAAOp2B,EAAEo2B,YAAc70B,EAAE60B,UACrE,GAAIp2B,EAAEoD,WAAahF,OAAOK,UAAU2E,SAAU,OAAOpD,EAAEoD,aAAe7B,EAAE6B,WAExE,IAAMvD,EAAOzB,OAAOyB,KAAKG,GAEzB,IADAhB,EAASa,EAAKb,UACCZ,OAAOyB,KAAK0B,GAAGvC,OAAQ,OAAO,EAE7C,IAAKC,EAAID,EAAgB,IAARC,KACb,IAAKb,OAAOK,UAAUC,eAAeC,KAAK4C,EAAG1B,EAAKZ,IAAK,OAAO,EAElE,IAAKA,EAAID,EAAgB,IAARC,KAAY,CACzB,IAAMoS,EAAMxR,EAAKZ,GACjB,IAAKyuH,GAAU1tH,EAAEqR,GAAM9P,EAAE8P,IAAO,OAAO,CAC3C,CAEA,OAAO,CACX,CAGA,OAAOrR,IAAMA,GAAKuB,IAAMA,CAC5B,CCzCO,SAAS2jG,GAAc9lG,GAgB1B,OAfAhB,OAAO8qB,OAAO9pB,GACdhB,OAAOmV,oBAAoBnU,GAAGa,SAAQ,SAAU00D,IAExCv2D,OAAOK,UAAUC,eAAeC,KAAKS,EAAGu1D,IACnB,OAApBv1D,EAAUu1D,IAEqB,kBAApBv1D,EAAUu1D,IAEU,oBAApBv1D,EAAUu1D,IAErBv2D,OAAO+D,SAAU/C,EAAUu1D,KAE5BuwC,GAAY9lG,EAAUu1D,GAE9B,IACOv1D,CACX,CAYO,SAASuuH,GAA4BC,GACxC,IAAMnrH,EAAQmrH,EAAWnrH,MAAM,KAGzBorH,EAAcprH,EAAMzD,OAO1B,OAAoB,IAAhB6uH,EACQ15D,GAAYA,EAAYy5D,GAI5Bz5D,IAEJ,IADA,IAAI25D,EAAkB35D,EACbl1D,EAAI,EAAGA,EAAI4uH,IAAe5uH,EAAG,CAGlC,GAA0B,qBAD1B6uH,EAAaA,EADGrrH,EAAMxD,KAGlB,OAAO6uH,CAEf,CACA,OAAOA,CAAU,CAEzB,CAkBO,SAASC,GAAcr3F,GAC1B,IAAMs3F,EAAgB,CAAC,EAEvB,IAAK,IAAM/uH,KAAKy3B,EACZ,GAAKt4B,OAAOK,UAAUC,eAAeC,KAAK+3B,EAAIz3B,GAC9C,GAAuB,kBAAXy3B,EAAGz3B,GAAkB,CAC7B,IAAMgvH,EAAaF,GAAcr3F,EAAGz3B,IACpC,IAAK,IAAMa,KAAKmuH,EACP7vH,OAAOK,UAAUC,eAAeC,KAAKsvH,EAAYnuH,KACtDkuH,EAAS/uH,EAAI,IAAMa,GAAKmuH,EAAWnuH,GAE3C,MACIkuH,EAAS/uH,GAAKy3B,EAAGz3B,GAGzB,OAAO+uH,CACX,CAQO,SAASE,GAAa/5D,GACzB,OAAO/1D,OAAOS,OAAO,CAAC,EAAGs1D,EAC7B,CAkBO,SAASg6D,GAAWh6D,GAAoC,IAA1Bi6D,EAAWrvH,UAAAC,OAAA,QAAAqzD,IAAAtzD,UAAA,IAAAA,UAAA,GAC5C,IAAKo1D,EAAK,OAAOA,EAGjB,IAAKi6D,GAAe7vH,MAAMwB,QAAQo0D,GAC9B,OAAOA,EACFniD,MAAK,CAAChS,EAAGuB,IACW,kBAANvB,GAA+B,kBAANuB,EACzBvB,EAAEquH,cAAc9sH,GAEV,kBAANvB,EAAuB,GACrB,IAEhB0C,KAAIzD,GAAKkvH,GAAWlvH,EAAGmvH,KAKhC,GAAmB,kBAARj6D,IAAqB51D,MAAMwB,QAAQo0D,GAAM,CAChD,IAAMm6D,EAAW,CAAC,EAMlB,OALAlwH,OAAOyB,KAAKs0D,GACPniD,MAAK,CAAChS,EAAGuB,IAAMvB,EAAEquH,cAAc9sH,KAC/BtB,SAAQoR,IACLi9G,EAAIj9G,GAAO88G,GAAWh6D,EAAI9iD,GAAM+8G,EAAY,IAE7CE,CACX,CAGA,OAAOn6D,CACX,CAmCO,IAAM57C,GAtBb,SAASmV,EAAa7O,GAClB,IAAKA,EACD,OAAOA,EAEX,GAAY,OAARA,GAAiC,kBAATA,EACxB,OAAOA,EAEX,GAAItgB,MAAMwB,QAAQ8e,GAAM,CAGpB,IAFA,IAAM2jD,EAAM,IAAIjkE,MAAMsgB,EAAI7f,QACtBC,EAAIujE,EAAIxjE,OACLC,KACHujE,EAAIvjE,GAAKyuB,EAAU7O,EAAI5f,IAE3B,OAAOujE,CACX,CACA,IAAM+rD,EAAY,CAAC,EAEnB,IAAK,IAAMl9G,KAAOwN,EACd0vG,EAAKl9G,GAAOqc,EAAU7O,EAAIxN,IAE9B,OAAOk9G,CACX,EASO,SAASC,GACZr6D,EACAs6D,EACA3tH,GAOA,OALA1C,OAAOsC,eAAeyzD,EAAKs6D,EAAY,CACnC9tH,IAAK,WACD,OAAOG,CACX,IAEGA,CACX,CCxLO,SAASiS,GAAW0nB,GACvB,OAAOl8B,MAAMwB,QAAQ06B,GAAUA,EAAgBp7B,MAAM,GAAK,CAACo7B,EAC/D,CAmCO,SAASi0F,GAAqB5uH,GAQjC,OAAOvB,MAAMwB,QAAQD,EACzB,CAqBO,SAAS6uH,GAA4B7tH,GACxC,OAAc,OAAVA,QAA4BuxD,IAAVvxD,CAI1B,CAEO,SAAS8tH,GACZriG,EACAsiG,GAEA,IAAIl8G,EAAQ,EACRm8G,GAAO,EACX,IAAK,IAAMrvD,KAAQlzC,EAAI,CAGnB,IADiBsiG,EAAWpvD,EAD5BqvD,GAAY,GAKR,MAFAn8G,GAAgB,CAIxB,CACA,OAAOA,CACX,CAqCO,SAASo8G,GAAiBxiG,EAAS/Y,GAMtC,IAAMw7G,EAAUx7G,EAAIxU,OACpB,GAAgB,IAAZgwH,EAAJ,CAGA,IAAMC,EAAW1iG,EAAGvtB,OACpButB,EAAGvtB,OAASiwH,EAAWz7G,EAAIxU,OAC3B,IAAK,IAAIC,EAAI,EAAGA,EAAI+vH,IAAW/vH,EAC3BstB,EAAG0iG,EAAWhwH,GAAKuU,EAAIvU,EAJ3B,CAMJ,CCpKA,SAASiwH,GAAgB/wH,EAAGD,GAC1B,OAAOgxH,GAAkB9wH,OAAOC,eAAiBD,OAAOC,eAAe8C,OAAS,SAAUhD,EAAGD,GAC3F,OAAOC,EAAEG,UAAYJ,EAAGC,CAC1B,EAAG+wH,GAAgB/wH,EAAGD,EACxB,CCHA,SAASixH,GAAehxH,EAAGiB,GACzBjB,EAAEM,UAAYL,OAAO6C,OAAO7B,EAAEX,WAAYN,EAAEM,UAAUyE,YAAc/E,EAAG,GAAeA,EAAGiB,EAC3F,CCHA,SAASgwH,GAAgBjxH,GACvB,OAAOixH,GAAkBhxH,OAAOC,eAAiBD,OAAOgC,eAAee,OAAS,SAAUhD,GACxF,OAAOA,EAAEG,WAAaF,OAAOgC,eAAejC,EAC9C,EAAGixH,GAAgBjxH,EACrB,CCJA,SAASkxH,KACP,IACE,IAAIlxH,GAAKq+D,QAAQ/9D,UAAU23B,QAAQz3B,KAAK2B,QAAQuyB,UAAU2pC,QAAS,IAAI,WAAa,IACtF,CAAE,MAAOr+D,GAAI,CACb,OAAQkxH,GAA4B,WAClC,QAASlxH,CACX,IACF,CCHA,SAASmxH,GAAiBnxH,GACxB,IAAIW,EAAI,mBAAqBsrB,IAAM,IAAIA,SAAQ,EAC/C,OAAOklG,GAAmB,SAA0BnxH,GAClD,GAAI,OAASA,ICPjB,SAA2BA,GACzB,IACE,OAAQ,IAAMu2D,SAAStxD,SAASzE,KAAKR,GAAG6D,QAAQ,gBAClD,CAAE,MAAOxD,GACP,MAAO,mBAAqBL,CAC9B,CACF,CDCuB,CAAiBA,GAAI,OAAOA,EAC/C,GAAI,mBAAqBA,EAAG,MAAM,IAAIyH,UAAU,sDAChD,QAAI,IAAW9G,EAAG,CAChB,GAAIA,EAAEmE,IAAI9E,GAAI,OAAOW,EAAE6B,IAAIxC,GAC3BW,EAAE8B,IAAIzC,EAAGoxH,EACX,CACA,SAASA,IACP,OEZN,SAAoBpxH,EAAGD,EAAGY,GACxB,GAAI,KAA4B,OAAOwB,QAAQuyB,UAAU3zB,MAAM,KAAMH,WACrE,IAAIK,EAAI,CAAC,MACTA,EAAE2C,KAAK7C,MAAME,EAAGlB,GAChB,IAAIsD,EAAI,IAAKrD,EAAEgD,KAAKjC,MAAMf,EAAGiB,IAC7B,OAAON,GAAK,GAAe0C,EAAG1C,EAAEL,WAAY+C,CAC9C,CFMa,CAAUrD,EAAGY,UAAW,GAAeI,MAAM+D,YACtD,CACA,OAAOqsH,EAAQ9wH,UAAYL,OAAO6C,OAAO9C,EAAEM,UAAW,CACpDyE,YAAa,CACXpC,MAAOyuH,EACPl8G,YAAY,EACZtS,UAAU,EACVF,cAAc,KAEd,GAAe0uH,EAASpxH,EAC9B,EAAGmxH,GAAiBnxH,EACtB,CGhBO,IAAMqxH,GAAe,CAMxBC,UAASA,KACE,EASXC,sBAAyBv7D,GACdA,EAMXw7D,mBAAmBhrH,GACR,mBAAmBA,EAAO,2FCMzC,SAASirH,GACLjrH,EACAskC,EACA4mF,GAEA,MAAO,YAAc5mF,EAAd,OACHtkC,EAAU,KA9BlB,SAA4BkrH,GACxB,IAAIrtD,EAAM,GACV,OAAuC,IAAnCpkE,OAAOyB,KAAKgwH,GAAY7wH,OACjBwjE,GACXA,GAAO,wBACPA,GAAOpkE,OAAOyB,KAAKgwH,GACdntH,KAAIZ,IACD,IAAIguH,EAAW,kBACf,IAEQA,EADM,WAANhuH,EACW+tH,EAAW/tH,GAAGY,KAAKytD,GAAaj+C,KAAKC,UAAUg+C,EAAK/xD,OAAOmV,oBAAoB48C,MAE/Ej+C,KAAKC,UAAU09G,EAAW/tH,IAAI,SAAUiuH,EAAIpuH,GACnD,YAAa0wD,IAAN1wD,EAAkB,KAAOA,CACpC,GAAG,EAEX,CAAE,MAAOzD,IAAK,CACd,OAAO4D,EAAI,IAAMguH,CAAQ,IAE5BjrH,KAAK,MACV29D,GAAO,IAEX,CASQwtD,CAAmBH,EAC3B,CAEO,IAAMI,GAAO,SAAAC,GAOhB,SAAAD,EACIhnF,EACAtkC,GAEF,IADEkrH,EAA6B9wH,UAAAC,OAAA,QAAAqzD,IAAAtzD,UAAA,GAAAA,UAAA,GAAG,CAAC,EACnC,IAAA45D,EACQw3D,EAAMP,GAAgBjrH,EAASskC,EAAM4mF,GAMzB,OALlBl3D,EAAAu3D,EAAAvxH,KAAA,KAAMwxH,IAAI,MACLlnF,KAAOA,EACZ0vB,EAAKh0D,QAAUwrH,EACfx3D,EAAKhtB,IAAMykF,GAAYnnF,GACvB0vB,EAAKk3D,WAAaA,EAClBl3D,EAAK03D,MAAO,EAAM13D,CACtB,CAMC,OANAw2D,GAAAc,EAAAC,GAAAD,EAAAxxH,UAID2E,SAAA,WACI,OAAOjE,KAAKwF,OAChB,EAACu3D,GAAA+zD,EAAA,EAAA5+G,IAAA,OAAA1Q,IALD,WACI,MAAO,YAAcxB,KAAK8pC,KAAO,GACrC,GAAC,CAAA53B,IAAA,YAAA1Q,IAID,WACI,OAAO,CACX,IAAC,CA5Be,CA4Bf2uH,GA5BwB5tH,QA+BhB4uH,GAAW,SAAAC,GAOpB,SAAAD,EACIrnF,EACAtkC,GAEF,IADEkrH,EAA6B9wH,UAAAC,OAAA,QAAAqzD,IAAAtzD,UAAA,GAAAA,UAAA,GAAG,CAAC,EACnC,IAAAu/D,EACQ6xD,EAAMP,GAAgBjrH,EAASskC,EAAM4mF,GAMzB,OALlBvxD,EAAAiyD,EAAA5xH,KAAA,KAAMwxH,IAAI,MACLlnF,KAAOA,EACZq1B,EAAK35D,QAAUwrH,EACf7xD,EAAK3yB,IAAMykF,GAAYnnF,GACvBq1B,EAAKuxD,WAAaA,EAClBvxD,EAAK+xD,MAAO,EAAM/xD,CACtB,CAMC,OANA6wD,GAAAmB,EAAAC,GAAAD,EAAA7xH,UAID2E,SAAA,WACI,OAAOjE,KAAKwF,OAChB,EAACu3D,GAAAo0D,EAAA,EAAAj/G,IAAA,OAAA1Q,IALD,WACI,MAAO,gBAAkBxB,KAAK8pC,KAAO,GACzC,GAAC,CAAA53B,IAAA,YAAA1Q,IAID,WACI,OAAO,CACX,IAAC,CA5BmB,CA4BnB2uH,GA5B4B1pH,YAgC1B,SAASwqH,GAAYnnF,GACxB,MAAO,gDAAkDA,CAC7D,CAEO,SAASunF,GAAavnF,GACzB,MAAO,mDAAqDmnF,GAAYnnF,GAAQ,GACpF,CAEO,SAASwnF,GACZxnF,EACA4mF,GAEA,OAAO,IAAII,GACPhnF,EACAumF,GAAaG,mBAAmB1mF,GAAQunF,GAAavnF,GACrD4mF,EAER,CAEO,SAASa,GACZznF,EACA4mF,GAEA,OAAO,IAAIS,GACPrnF,EACAumF,GAAaG,mBAAmB1mF,GAAQunF,GAAavnF,GACrD4mF,EAER,CAOO,SAASc,GACZxgE,GAEA,SACIA,GACe,MAAfA,EAAIjkD,SAEGikD,CAIf,CAGA,IAAMygE,GAAgE,CAClE,IAAK,0BACL,IAAK,0BACL,IAAK,2BChKF,IAAMC,GAAiC,CAK1CC,eAAgB,GAIhBC,oBAAqB,GAMrBC,iBAAkB,GAClBC,sBAAuB,GACvBC,mBAAoB,GACpBC,cAAe,GAKfC,wBAAyB,GAKzBC,uBAAwB,GAKxBC,kBAAmB,GAKnBC,eAAgB,GAChBC,iBAAkB,GAKlBC,gBAAiB,GACjBC,iBAAkB,GAKlBC,qBAAsB,GAOtBC,2BAA4B,GAC5BC,gBAAiB,GAQjBC,mBAAoB,GAIpBC,oBAAqB,GAIrBC,qBAAsB,GAKtBC,qBAAsB,GAOtBC,0BAA2B,GAO3BC,yCAA0C,IAGvC,SAASC,GAAeC,EAAiBl+D,GACxC08D,GAAMwB,GAASrzH,OAAS,GACxB6xH,GAAMwB,GAASpyH,SAAQqyH,GAAOA,EAAIn+D,IAE1C,CAQO,SAASo+D,GAAoBF,EAAiBl+D,GACjD,OAAOj0D,QAAQoL,IACXulH,GAAMwB,GAAS3vH,KAAI4vH,GAAOA,EAAIn+D,KAEtC,CCpHO,IAAMq+D,GAAiB,MCAxBC,GAAmB,6BAKlB,SAASC,KAA+C,IAA7B1zH,EAAcD,UAAAC,OAAA,QAAAqzD,IAAAtzD,UAAA,GAAAA,UAAA,GAAG,GAG/C,IAFA,IAAI0sC,EAAO,GAEFxsC,EAAI,EAAGA,EAAID,EAAQC,IACxBwsC,GAAQgnF,GAAiB14F,OAAOthB,KAAK46C,MAAM56C,KAAK82B,SAAWkjF,GAAiBzzH,SAGhF,OAAOysC,CACX,CAWO,SAASknF,GAAQx7C,GAIpB,OAHAA,GAAO,IACOp9C,OAAO,GAChBrf,cACMy8D,EAAIl1E,OAAO,EAC1B,CAKO,SAAS2wH,GAASz7C,GAErB,KAAyB,MAAlBA,EAAIp9C,OAAO,IACdo9C,EAAMA,EAAIl1E,OAAO,GAIrB,KAAyB,MAAlBk1E,EAAI93E,OAAO,IACd83E,EAAMA,EAAI93E,MAAM,GAAI,GAGxB,OAAO83E,CACX,CAYO,SAAS07C,GAAanuH,GAEzB,SACIA,EAAKkT,SAAS,OACdlT,EAAKkT,SAAS,MAMtB,CC7DA,IAAMo9D,GAAYl0E,IACd,IAAMkN,SAAclN,EACpB,OAAiB,OAAVA,IAA4B,WAATkN,GAA8B,aAATA,EAAoB,EAGjE8kH,GAAiB,IAAIjwH,IAAI,CAC3B,YACA,YACA,gBAGEkwH,GAAS,IAAIlwH,IAAI,cAEvB,SAASmwH,GAAgB/iD,GACrB,IAAMgjD,EAAQ,GACVC,EAAiB,GACjBC,EAAc,QACdC,GAAa,EAEjB,IAAK,IAAMC,KAAapjD,EACpB,OAAQojD,GACJ,IAAK,KACD,GAAoB,UAAhBF,EACA,MAAM,IAAIzxH,MAAM,iCAGpB,GAAoB,aAAhByxH,EACA,MAAM,IAAIzxH,MAAM,oCAGhB0xH,IACAF,GAAkBG,GAGtBF,EAAc,WACdC,GAAcA,EACd,MAGJ,IAAK,IACD,GAAoB,UAAhBD,EACA,MAAM,IAAIzxH,MAAM,iCAGpB,GAAoB,aAAhByxH,EAA4B,CAC5BA,EAAc,WACd,KACJ,CAEA,GAAIC,EAAY,CACZA,GAAa,EACbF,GAAkBG,EAClB,KACJ,CAEA,GAAIP,GAAe7vH,IAAIiwH,GACnB,MAAO,GAGXD,EAAMlxH,KAAKmxH,GACXA,EAAiB,GACjBC,EAAc,WACd,MAGJ,IAAK,IACD,GAAoB,UAAhBA,EACA,MAAM,IAAIzxH,MAAM,iCAGpB,GAAoB,aAAhByxH,EAA4B,CAC5BA,EAAc,QACd,KACJ,CAEA,GAAIC,EAAY,CACZA,GAAa,EACbF,GAAkBG,EAClB,KACJ,CAEA,GAAoB,aAAhBF,EAA4B,CAC5B,GAAIL,GAAe7vH,IAAIiwH,GACnB,MAAO,GAGXD,EAAMlxH,KAAKmxH,GACXA,EAAiB,EACrB,CAEAC,EAAc,QACd,MAGJ,IAAK,IACD,GAAoB,UAAhBA,EAAyB,CACzBF,EAAMlxH,KAAKsT,OAAOhT,SAAS6wH,EAAgB,KAC3CA,EAAiB,GACjBC,EAAc,WACd,KACJ,CAEA,GAAoB,aAAhBA,EACA,MAAM,IAAIzxH,MAAM,oCAMxB,QACI,GAAoB,UAAhByxH,IAA4BJ,GAAO9vH,IAAIowH,GACvC,MAAM,IAAI3xH,MAAM,iCAGpB,GAAoB,aAAhByxH,EACA,MAAM,IAAIzxH,MAAM,oCAGA,UAAhByxH,IACAA,EAAc,YAGdC,IACAA,GAAa,EACbF,GAAkB,MAGtBA,GAAkBG,EAS9B,OAJID,IACAF,GAAkB,MAGdC,GACJ,IAAK,WACD,GAAIL,GAAe7vH,IAAIiwH,GACnB,MAAO,GAGXD,EAAMlxH,KAAKmxH,GAEX,MAGJ,IAAK,QACD,MAAM,IAAIxxH,MAAM,wBAGpB,IAAK,QACDuxH,EAAMlxH,KAAK,IAOnB,OAAOkxH,CACX,CAEA,SAASK,GAAc5nD,EAAer6D,GAClC,GAAmB,kBAARA,GAAoB9S,MAAMwB,QAAQ2rE,GAAS,CAClD,IAAMn1D,EAAQlB,OAAOhT,SAASgP,EAAK,IACnC,OAAOgE,OAAOk+G,UAAUh9G,IAAUm1D,EAAOn1D,KAAWm1D,EAAOr6D,EAC/D,CAEA,OAAO,CACX,CAEA,SAASmiH,GAAqB9nD,EAAar6D,GACvC,GAAIiiH,GAAc5nD,EAAQr6D,GACtB,MAAM,IAAI3P,MAAM,0BAExB,CAKO,SAAS+xH,GAAY/nD,EAAauE,EAAyBnvE,GAU9D,GATIvC,MAAMwB,QAAQkwE,KACdA,EAAOA,EAAKprE,KAAK,OAShBorE,EAAKr4D,SAAS,OACdq4D,EAAKr4D,SAAS,KAEf,OAAO8zD,EAAOuE,GAGlB,IAAK+E,GAAStJ,IAAkC,kBAATuE,EACnC,YAAiB5d,IAAVvxD,EAAsB4qE,EAAS5qE,EAG1C,IAAM4yH,EAAYV,GAAgB/iD,GAClC,GAAyB,IAArByjD,EAAU10H,OACV,OAAO8B,EAGX,IAAK,IAAIyV,EAAQ,EAAGA,EAAQm9G,EAAU10H,OAAQuX,IAAS,CACnD,IAAMlF,EAAMqiH,EAAUn9G,GAQtB,QAAe87C,KALXqZ,EADA4nD,GAAc5nD,EAAer6D,GACpBkF,IAAUm9G,EAAU10H,OAAS,OAAIqzD,EAAY,KAE5CqZ,EAAer6D,KAGU,OAAXq6D,EAAiB,CAMzC,GAAIn1D,IAAUm9G,EAAU10H,OAAS,EAC7B,OAAO8B,EAGX,KACJ,CACJ,CAEA,YAAkBuxD,IAAXqZ,EAAuB5qE,EAAQ4qE,CAC1C,CAEO,SAAS5xC,GAAY4xC,EAAauE,EAAcnvE,GAKnD,GAJIvC,MAAMwB,QAAQkwE,KACdA,EAAOA,EAAKprE,KAAK,OAGhBmwE,GAAStJ,IAAkC,kBAATuE,EACnC,OAAOvE,EAMX,IAHA,IAAMgE,EAAOhE,EACPgoD,EAAYV,GAAgB/iD,GAEzB15D,EAAQ,EAAGA,EAAQm9G,EAAU10H,OAAQuX,IAAS,CACnD,IAAMlF,EAAMqiH,EAAUn9G,GAEtBi9G,GAAqB9nD,EAAQr6D,GAEzBkF,IAAUm9G,EAAU10H,OAAS,EAC7B0sE,EAAOr6D,GAAOvQ,EACNk0E,GAAStJ,EAAOr6D,MACxBq6D,EAAOr6D,GAAuC,kBAAzBqiH,EAAUn9G,EAAQ,GAAkB,GAAK,CAAC,GAGnEm1D,EAASA,EAAOr6D,EACpB,CAEA,OAAOq+D,CACX,CC5PO,IAAMikD,GAAsB,EAE5B,SAASC,KACZ,MAAO,CAOHC,IAAKF,GAEb,CC2BO,SAASG,GACZC,EACA9jD,GAEA,IAAI+jD,EAAkB/jD,EAMtB,OADYwjD,GAAYM,EAFxBC,EAAUpB,GADVoB,EAAU,eADVA,EAAUA,EAAQ3wG,QAAQmvG,GAAgB,kBAM9C,CAEO,SAASyB,GACZC,EACAC,EACAC,GAGA,GAAqC,kBAA1BD,EAAW99G,WAClB,OAAO+9G,EAGX,IAAMC,EAAaC,GACfH,EACAC,GAEEG,EAAsCH,EAAaF,GACzD,GACIK,GACAA,IAAoBF,EAEpB,MAAM5D,GACF,QACA,CACI92D,KAAM,CACFy6D,eACAG,kBACAF,cAEJ9kH,OAAQ4kH,IAKpB,OADCC,EAAqBF,GAAeG,EAC9BD,CACX,CAEO,SAASI,GACZn+G,GAEA,MAA0B,kBAAfA,EACAA,EAECA,EAA8ChF,GAE9D,CAaO,SAASijH,GACZH,EACAC,GAEA,GAAqC,kBAA1BD,EAAW99G,WAClB,OAAQ+9G,EAAqBD,EAAW99G,YAG5C,IAAMo+G,EAAmDN,EAAW99G,WACpE,OAAOo+G,EAAiBhuD,OAAO/jE,KAAImlE,IAC/B,IAAM/mE,EAAQ2yH,GAAYW,EAAqBvsD,GAC/C,GAAqB,qBAAV/mE,EACP,MAAM2vH,GAAW,QAAS,CAAE92D,KAAM,CAAEkO,QAAOusD,kBAE/C,OAAOtzH,CAAK,IACb+D,KAAK4vH,EAAiBl5C,UAC7B,CAiCO,SAASm5C,GACZC,GAGA,IAAMT,EAAsBM,IAD5BG,EAAYzG,GAAUyG,IAC4Ct+G,YAClEs+G,EAAU/oD,WAAasiD,GAAUyG,EAAU/oD,YAG3C+oD,EAAUC,sBAAuB,EAG5Bx2H,OAAOK,UAAUC,eAAeC,KAAKg2H,EAAW,oBACjDA,EAAUE,gBAAiB,GAI/BF,EAAUhjH,QAAUgjH,EAAUhjH,QAAUgjH,EAAUhjH,QAAQtS,MAAM,GAAK,GAGrEs1H,EAAUG,SAAWH,EAAUG,SAAWH,EAAUG,SAASz1H,MAAM,GAAK,GAGxEs1H,EAAUI,UAAYJ,EAAUI,UAAYJ,EAAUI,UAAU11H,MAAM,GAAK,GAG1Es1H,EAAU/oD,WAAmBopD,KAAO,CACjChnH,KAAM,SACNinH,UAAW,GAIdN,EAAU/oD,WAAmBspD,aAAe,CACzClnH,KAAM,UAIT2mH,EAAU/oD,WAAmBupD,SAAW,CACrCnnH,KAAM,WAIT2mH,EAAU/oD,WAAmBwpD,MAAQC,GAKtCV,EAAUG,SAAWH,EAAUG,SAAWH,EAAUG,SAASz1H,MAAM,GAAK,GACvEs1H,EAAUG,SAAsB/yH,KAAK,YACrC4yH,EAAUG,SAAsB/yH,KAAK,QACrC4yH,EAAUG,SAAsB/yH,KAAK,SACrC4yH,EAAUG,SAAsB/yH,KAAK,gBAGtC,IAAMuzH,EAAcC,GAAeZ,GACnC5F,GAAc4F,EAAUG,SAAiBQ,GACzCX,EAAUG,SAAWH,EAAUG,SAC1BnyH,QAAQklE,IAAmBA,EAAMjwD,SAAS,OAC1CjV,QAAO,CAAC6yH,EAAWjW,EAAU1jD,IAAaA,EAAI75D,QAAQwzH,KAAUjW,IAGrEoV,EAAUpzG,QAAUozG,EAAUpzG,SAAW,EAEzC,IAAMk0G,EAAyBd,EAAUhjH,QAAQjP,KAAI6T,IACjD,IAAMm/G,EAAUhH,GAAqBn4G,GAASA,EAAMlX,MAAM,GAAK,CAACkX,GAehE,OAVKm/G,EAAQ99G,SAASs8G,IAClBwB,EAAQ3zH,KAAKmyH,GAKE,aAAfwB,EAAQ,IACRA,EAAQrlF,QAAQ,YAGbqlF,CAAO,IAGQ,IAAtBD,EAAWz2H,QACXy2H,EAAW1zH,KA1FZ,SAAyBmyH,GAC5B,MAAO,CAAC,WAAYA,EACxB,CAwFwByB,CAAgBzB,IAIpCuB,EAAW1zH,KAAK,CAAC,YAAamyH,IAG1BS,EAAUiB,iBACVjB,EAAUiB,gBAAgBlzH,KAAIosH,IAC1B2G,EAAW1zH,KAAK+sH,EAAI,IAK5B,IAAM+G,EAAW,IAAIhzH,IAarB,OAZA4yH,EAAW9yH,QAAO4T,IACd,IAAMu/G,EAAWv/G,EAAM1R,KAAK,KAC5B,OAAIgxH,EAAS5yH,IAAI6yH,KAGbD,EAASriH,IAAIsiH,IACN,EACX,IAGJnB,EAAUhjH,QAAU8jH,EAEbd,CACX,CAGO,IAAMU,GAA6B,CACtCrnH,KAAM,SACN49D,WAAY,CAKRioD,IAAK,CACD7lH,KAAM,SAIN+nH,QAASpC,GACTqC,QAAS,KACTC,WAAY,MAOpBrB,sBAAsB,EACtBE,SAAU,CACN,QASD,SAASS,GACZpB,GAEA,IAAM3xD,EAAMpkE,OAAOyB,KAAKs0H,EAAWvoD,YAC9BjpE,QAAO0O,GAAQ8iH,EAAmBvoD,WAAWv6D,GAAK6kH,QAGjDhC,EAAcM,GAA4BL,EAAW99G,YAS3D,OARAmsD,EAAIzgE,KAAKmyH,GAG4B,kBAA1BC,EAAW99G,YACjB89G,EAAW99G,WAAsCowD,OAC7CxmE,SAAQ4nE,GAASrF,EAAIzgE,KAAK8lE,KAG5BrF,CACX,CAiBO,IC9TM2zD,GAAQ,WAKjB,SAAAA,EACoBhC,EACAiC,GAClB,KAFkBjC,WAAAA,EAAmD,KACnDiC,aAAAA,EAEhBj3H,KAAKwS,QA2IN,SACHwiH,GAEA,OAAQA,EAAWxiH,SAAW,IAAIjP,KAAI6T,GAASm4G,GAAqBn4G,GAASA,EAAQ,CAACA,IAC1F,CA/IuB8/G,CAAWl3H,KAAKg1H,YAG/Bh1H,KAAK+0H,YAAcM,GAA4Br1H,KAAKg1H,WAAW99G,YAE/DlX,KAAKm2H,YAAcC,GAAep2H,KAAKg1H,WAC3C,CAAC,IAAAmC,EAAAH,EAAA13H,UAkIA,OAjGD63H,EAMAC,eAAA,SAAeC,EAAiBC,GAC5Bt3H,KAAKm2H,YAAYr1H,SAAQmnE,IACrB,IAAKsmD,GAAU8I,EAAWpvD,GAAYqvD,EAAUrvD,IAC5C,MAAMqpD,GAAW,OAAQ,CACrB+F,aACAC,YACArvD,YACA73D,OAAQpQ,KAAKg1H,YAErB,GAER,EAEAmC,EAIOI,qBAAP,WACI,IAAMl+D,EAAa,CAAC,EAOdm+D,EAAiB7C,GACnB30H,KAAKg1H,WACL,IAqDJ,OAnDA/1H,OAAOyB,KAAK82H,GACP12H,SAAQoR,IACL,IAAMulH,EAAWvlH,EAGjBmnD,EAAMq+D,iBACFxlH,GACA,WACI,GAAKlS,KAAKwB,KAA2B,oBAAbxB,KAAKwB,IAS7B,OADYxB,KAAKwB,IAAIi2H,EAEzB,IAGJx4H,OAAOsC,eAAe83D,EAAOnnD,EAAM,IAAK,CACpC1Q,IAAK,WACD,OAAOxB,KAAK23H,KAAKF,EACrB,EACAvjH,YAAY,EACZxS,cAAc,IAGlBzC,OAAOsC,eAAe83D,EAAOnnD,EAAM,KAAM,CACrC1Q,IAAK,WACD,OAAOxB,KAAK43H,MAAMH,EACtB,EACAvjH,YAAY,EACZxS,cAAc,IAGlBzC,OAAOsC,eAAe83D,EAAOnnD,EAAM,IAAK,CACpC1Q,IAAK,WACD,OAAOxB,KAAK0jB,SAAS+zG,EACzB,EACAvjH,YAAY,EACZxS,cAAc,GAChB,IAGV2tH,GACIrvH,KACA,wBACA,IAAMq5D,IAEHA,CACX,EAAC89D,EAGDU,yBAAA,SACI5C,GAEA,OAAOE,GACHn1H,KAAKg1H,WACLC,EAER,EAACl4D,GAAAi6D,EAAA,EAAA9kH,IAAA,UAAA1Q,IAhID,WACI,OAAOxB,KAAKg1H,WAAW5yG,OAC3B,GAAC,CAAAlQ,IAAA,gBAAA1Q,IAED,WACI,IAAMmT,EAAS,CAAC,EAKhB,OAJA1V,OACKunB,QAAQxmB,KAAKg1H,WAAWvoD,YACxBjpE,QAAOkpE,IAAA,IAAE,CAAElqE,GAAEkqE,EAAA,OAAKztE,OAAOK,UAAUC,eAAeC,KAAKgD,EAAG,UAAU,IACpE1B,SAAQy3E,IAAA,IAAE51E,EAAGH,GAAE+1E,EAAA,OAAM5jE,EAAehS,GAAMH,EAAUutB,OAAO,IACzDs/F,GACHrvH,KACA,gBACA2U,EAER,GAEA,CAAAzC,IAAA,OAAA1Q,IAMA,WACI,OAAO6tH,GACHrvH,KACA,OACAA,KAAKi3H,aAAalkH,KAAKC,UAAUhT,KAAKg1H,aAE9C,IAAC,CA9CgB,GAqKd,SAAS5C,GACZ4C,EACAiC,MACiBr3H,UAAAC,OAAA,QAAAqzD,IAAAtzD,UAAA,KAAAA,UAAA,KAGbqzH,GAAe,oBAAqB+B,GAGxC,IAAI8C,EAAgBvC,GAAwBP,GAC5C8C,EDtDG,SAAkC9C,GAErC,OAD0ChG,GAAWgG,GAAY,EAErE,CCmDoB+C,CAAsBD,GACtCzH,GAAaE,sBAAsBuH,GAEnC,IAAM1nH,EAAS,IAAI4mH,GAASc,EAAeb,GAE3C,OADAhE,GAAe,iBAAkB7iH,GAC1BA,CACX,CCjNM,SAAU4nH,GAAWr2H,GACzB,MAAwB,oBAAVA,CAChB,CCUM,SAAUs2H,GACdr9B,GAEA,OAAO,SAACj/D,GACN,GAZE,SAAkBA,GACtB,OAAOq8F,GAAiB,OAANr8F,QAAM,IAANA,OAAM,EAANA,EAAQu8F,KAC5B,CAUQC,CAAQx8F,GACV,OAAOA,EAAOu8F,MAAK,SAA+BE,GAChD,IACE,OAAOx9B,EAAKw9B,EAAcp4H,MAC1B,MAAOgxD,GACPhxD,KAAKiZ,MAAM+3C,GAEf,IAEF,MAAM,IAAIvqD,UAAU,yCACtB,CACF,CCtBM,SAAU4xH,GAAoBC,GAClC,IAKMC,EAAWD,GALF,SAACxoF,GACdvtC,MAAM/C,KAAKswC,GACXA,EAASvuB,OAAQ,IAAIhf,OAAQgf,KAC/B,IAKA,OAFAg3G,EAASj5H,UAAYL,OAAO6C,OAAOS,MAAMjD,WACzCi5H,EAASj5H,UAAUyE,YAAcw0H,EAC1BA,CACT,CCDO,IAAMC,GAA+CH,IAC1D,SAAC9+D,GACC,gBAA4C2b,GAC1C3b,EAAOv5D,MACPA,KAAKwF,QAAU0vE,EACRA,EAAOr1E,OAAM,4CACxBq1E,EAAO3xE,KAAI,SAACytD,EAAKlxD,GAAM,OAAGA,EAAI,EAAC,KAAKkxD,EAAI/sD,UAAjB,IAA+ByB,KAAK,QACnD,GACJ1F,KAAKuF,KAAO,sBACZvF,KAAKk1E,OAASA,CAChB,CARA,ICfE,SAAUujD,GAAa/7D,EAA6B4D,GACxD,GAAI5D,EAAK,CACP,IAAMtlD,EAAQslD,EAAI75D,QAAQy9D,GAC1B,GAAKlpD,GAASslD,EAAIv5D,OAAOiU,EAAO,GAEpC,CCOA,IAAAunD,GAAA,WAyBE,SAAAA,EAAoB+5D,GAAA,KAAAA,gBAAAA,EAdb,KAAA1rG,QAAS,EAER,KAAA2rG,WAAmD,KAMnD,KAAAC,YAAqD,IAMV,CA4JrD,OApJEj6D,EAAAr/D,UAAAiV,YAAA,uBACM2gE,EAEJ,IAAKl1E,KAAKgtB,OAAQ,CAChBhtB,KAAKgtB,QAAS,EAGN,IAAA2rG,EAAe34H,KAAI24H,WAC3B,GAAIA,EAEF,GADA34H,KAAK24H,WAAa,KACdv5H,MAAMwB,QAAQ+3H,OAChB,IAAqB,IAAAE,EAAAtgE,EAAAogE,GAAUG,EAAAD,EAAAn0H,QAAAo0H,EAAAn0H,KAAAm0H,EAAAD,EAAAn0H,OAAE,CAAhBo0H,EAAAn3H,MACR6W,OAAOxY,6GAGhB24H,EAAWngH,OAAOxY,MAId,IAAiB+4H,EAAqB/4H,KAAI04H,gBAClD,GAAIV,GAAWe,GACb,IACEA,IACA,MAAOh6H,IACPm2E,EAASn2E,cAAay5H,GAAsBz5H,GAAEm2E,OAAS,CAACn2E,IAIpD,IAAA65H,EAAgB54H,KAAI44H,YAC5B,GAAIA,EAAa,CACf54H,KAAK44H,YAAc,SACnB,IAAwB,IAAAI,EAAAzgE,EAAAqgE,GAAWK,EAAAD,EAAAt0H,QAAAu0H,EAAAt0H,KAAAs0H,EAAAD,EAAAt0H,OAAE,CAAhC,IAAMw0H,EAASD,EAAAt3H,MAClB,IACEw3H,GAAcD,GACd,MAAOloE,GACPkkB,EAAe,OAANA,QAAM,IAANA,EAAAA,EAAU,GACflkB,aAAewnE,GACjBtjD,EAAMzc,EAAAA,EAAA,GAAAD,EAAO0c,IAAM1c,EAAKxH,EAAIkkB,SAE5BA,EAAOtyE,KAAKouD,uGAMpB,GAAIkkB,EACF,MAAM,IAAIsjD,GAAoBtjD,GAGpC,EAoBAvW,EAAAr/D,UAAA+U,IAAA,SAAI+kH,SAGF,GAAIA,GAAYA,IAAap5H,KAC3B,GAAIA,KAAKgtB,OAGPmsG,GAAcC,OACT,CACL,GAAIA,aAAoBz6D,EAAc,CAGpC,GAAIy6D,EAASpsG,QAAUosG,EAASC,WAAWr5H,MACzC,OAEFo5H,EAASE,WAAWt5H,OAErBA,KAAK44H,YAA8B,QAAhBx/D,EAAAp5D,KAAK44H,mBAAW,IAAAx/D,EAAAA,EAAI,IAAIx2D,KAAKw2H,GAGvD,EAOQz6D,EAAAr/D,UAAA+5H,WAAR,SAAmB3rH,GACT,IAAAirH,EAAe34H,KAAI24H,WAC3B,OAAOA,IAAejrH,GAAWtO,MAAMwB,QAAQ+3H,IAAeA,EAAWlgH,SAAS/K,EACpF,EASQixD,EAAAr/D,UAAAg6H,WAAR,SAAmB5rH,GACT,IAAAirH,EAAe34H,KAAI24H,WAC3B34H,KAAK24H,WAAav5H,MAAMwB,QAAQ+3H,IAAeA,EAAW/1H,KAAK8K,GAASirH,GAAcA,EAAa,CAACA,EAAYjrH,GAAUA,CAC5H,EAMQixD,EAAAr/D,UAAAi6H,cAAR,SAAsB7rH,GACZ,IAAAirH,EAAe34H,KAAI24H,WACvBA,IAAejrH,EACjB1N,KAAK24H,WAAa,KACTv5H,MAAMwB,QAAQ+3H,IACvBF,GAAUE,EAAYjrH,EAE1B,EAgBAixD,EAAAr/D,UAAAkZ,OAAA,SAAO4gH,GACG,IAAAR,EAAgB54H,KAAI44H,YAC5BA,GAAeH,GAAUG,EAAaQ,GAElCA,aAAoBz6D,GACtBy6D,EAASG,cAAcv5H,KAE3B,EAlLc2+D,EAAA66D,MAAS,WACrB,IAAM7uD,EAAQ,IAAIhM,EAElB,OADAgM,EAAM39C,QAAS,EACR29C,CACT,CAJuB,GAmLzBhM,EArLA,GAuLa86D,GAAqB96D,GAAa66D,MAEzC,SAAUl3C,GAAe3gF,GAC7B,OACEA,aAAiBg9D,IAChBh9D,GAAS,WAAYA,GAASq2H,GAAWr2H,EAAM6W,SAAWw/G,GAAWr2H,EAAM0S,MAAQ2jH,GAAWr2H,EAAM4S,YAEzG,CAEA,SAAS4kH,GAAcD,GACjBlB,GAAWkB,GACbA,IAEAA,EAAU3kH,aAEd,CChNO,IAAMwwD,GAAuB,CAClC20D,iBAAkB,KAClBC,sBAAuB,KACvB54H,aAASmyD,EACT0mE,uCAAuC,EACvCC,0BAA0B,GCGfC,GAAmC,CAG9Cp3H,WAAA,SAAW8nE,EAAqBz+D,OAAkB,IAAAyuD,EAAA,GAAAC,EAAA,EAAAA,EAAA76D,UAAAC,OAAA46D,IAAAD,EAAAC,EAAA,GAAA76D,UAAA66D,GACxC,IAAAs/D,EAAaD,GAAeC,SACpC,OAAY,OAARA,QAAQ,IAARA,OAAQ,EAARA,EAAUr3H,YACLq3H,EAASr3H,WAAU3C,MAAnBg6H,EAAQthE,EAAA,CAAY+R,EAASz+D,GAAOysD,EAAKgC,KAE3C93D,WAAU3C,WAAC,EAAD04D,EAAC,CAAA+R,EAASz+D,GAAOysD,EAAKgC,IACzC,EACAvuD,aAAA,SAAa+tH,GACH,IAAAD,EAAaD,GAAeC,SACpC,QAAgB,OAARA,QAAQ,IAARA,OAAQ,EAARA,EAAU9tH,eAAgBA,cAAc+tH,EAClD,EACAD,cAAU7mE,GCjBN,SAAU+mE,GAAqBjpE,GACnC8oE,GAAgBp3H,YAAW,WACjB,IAAAg3H,EAAqB30D,GAAM20D,iBACnC,IAAIA,EAKF,MAAM1oE,EAHN0oE,EAAiB1oE,EAKrB,GACF,CCtBM,SAAUwQ,KAAS,CCMlB,IAAM04D,GAA+BC,GAAmB,SAAKjnE,OAAWA,GA0BzE,SAAUinE,GAAmBn5D,EAAuBr/D,EAAYsX,GACpE,MAAO,CACL+nD,KAAIA,EACJr/D,MAAKA,EACLsX,MAAKA,EAET,CCrCA,IAAIg/B,GAAuD,KASrD,SAAUmiF,GAAaxkG,GAC3B,GAAImvC,GAAO60D,sCAAuC,CAChD,IAAMS,GAAUpiF,GAKhB,GAJIoiF,IACFpiF,GAAU,CAAEqiF,aAAa,EAAOrhH,MAAO,OAEzC2c,IACIykG,EAAQ,CACJ,IAAAjhE,EAAyBnhB,GAAvBqiF,EAAWlhE,EAAAkhE,YAAErhH,EAAKmgD,EAAAngD,MAE1B,GADAg/B,GAAU,KACNqiF,EACF,MAAMrhH,QAMV2c,GAEJ,CCVA,IAAA2kG,GAAA,SAAAhhE,GA6BE,SAAAghE,EAAYC,GAAZ,IAAAhhE,EACED,EAAA/5D,KAAA,OAAO,YATCg6D,EAAAihE,WAAqB,EAUzBD,GACFhhE,EAAKghE,YAAcA,EAGfl4C,GAAek4C,IACjBA,EAAYnmH,IAAImlD,IAGlBA,EAAKghE,YAAcE,IAEvB,CA2EF,OApHmCvjE,EAAAojE,EAAAhhE,GAgB1BghE,EAAAz4H,OAAP,SAAiB4C,EAAwBuU,EAA2BmT,GAClE,OAAO,IAAIuuG,GAAej2H,EAAMuU,EAAOmT,EACzC,EAgCAmuG,EAAAj7H,UAAAoF,KAAA,SAAK/C,GACC3B,KAAKy6H,UACPG,GFjDA,SAA8Bj5H,GAClC,OAAOw4H,GAAmB,IAAKx4H,OAAOuxD,EACxC,CE+CgC2nE,CAAiBl5H,GAAQ3B,MAEnDA,KAAK86H,MAAMn5H,EAEf,EASA44H,EAAAj7H,UAAA2Z,MAAA,SAAM+3C,GACAhxD,KAAKy6H,UACPG,GFxEGT,GAAmB,SAAKjnE,EEwEiBlC,GAAMhxD,OAElDA,KAAKy6H,WAAY,EACjBz6H,KAAK+6H,OAAO/pE,GAEhB,EAQAupE,EAAAj7H,UAAA8sB,SAAA,WACMpsB,KAAKy6H,UACPG,GAA0BV,GAAuBl6H,OAEjDA,KAAKy6H,WAAY,EACjBz6H,KAAKg7H,YAET,EAEAT,EAAAj7H,UAAAiV,YAAA,WACOvU,KAAKgtB,SACRhtB,KAAKy6H,WAAY,EACjBlhE,EAAAj6D,UAAMiV,YAAW/U,KAAC,MAClBQ,KAAKw6H,YAAc,KAEvB,EAEUD,EAAAj7H,UAAAw7H,MAAV,SAAgBn5H,GACd3B,KAAKw6H,YAAY91H,KAAK/C,EACxB,EAEU44H,EAAAj7H,UAAAy7H,OAAV,SAAiB/pE,GACf,IACEhxD,KAAKw6H,YAAYvhH,MAAM+3C,GACvB,QACAhxD,KAAKuU,cAET,EAEUgmH,EAAAj7H,UAAA07H,UAAV,WACE,IACEh7H,KAAKw6H,YAAYpuG,WACjB,QACApsB,KAAKuU,cAET,EACFgmH,CAAA,CApHA,CAAmC57D,IA2H7Bs8D,GAAQ1lE,SAASj2D,UAAU0C,KAEjC,SAASA,GAAyC6gB,EAAQ60C,GACxD,OAAOujE,GAAMz7H,KAAKqjB,EAAI60C,EACxB,CAMA,IAAAwjE,GAAA,WACE,SAAAA,EAAoBC,GAAA,KAAAA,gBAAAA,CAAwC,CAoC9D,OAlCED,EAAA57H,UAAAoF,KAAA,SAAK/C,GACK,IAAAw5H,EAAoBn7H,KAAIm7H,gBAChC,GAAIA,EAAgBz2H,KAClB,IACEy2H,EAAgBz2H,KAAK/C,GACrB,MAAOsX,GACPmiH,GAAqBniH,GAG3B,EAEAiiH,EAAA57H,UAAA2Z,MAAA,SAAM+3C,GACI,IAAAmqE,EAAoBn7H,KAAIm7H,gBAChC,GAAIA,EAAgBliH,MAClB,IACEkiH,EAAgBliH,MAAM+3C,GACtB,MAAO/3C,GACPmiH,GAAqBniH,QAGvBmiH,GAAqBpqE,EAEzB,EAEAkqE,EAAA57H,UAAA8sB,SAAA,WACU,IAAA+uG,EAAoBn7H,KAAIm7H,gBAChC,GAAIA,EAAgB/uG,SAClB,IACE+uG,EAAgB/uG,WAChB,MAAOnT,GACPmiH,GAAqBniH,GAG3B,EACFiiH,CAAA,CArCA,GAuCAP,GAAA,SAAAphE,GACE,SAAAohE,EACEU,EACApiH,EACAmT,GAHF,IAOM+uG,EAWEG,EAlBR9hE,EAKED,EAAA/5D,KAAA,OAAO,KAGHw4H,GAAWqD,KAAoBA,EAGjCF,EAAkB,CAChBz2H,KAAqB,OAAd22H,QAAc,IAAdA,EAAAA,OAAkBnoE,EACzBj6C,MAAY,OAALA,QAAK,IAALA,EAAAA,OAASi6C,EAChB9mC,SAAkB,OAARA,QAAQ,IAARA,EAAAA,OAAY8mC,GAKpBsG,GAAQuL,GAAO80D,2BAIjByB,EAAUr8H,OAAO6C,OAAOu5H,IAChB9mH,YAAc,WAAM,OAAAilD,EAAKjlD,aAAL,EAC5B4mH,EAAkB,CAChBz2H,KAAM22H,EAAe32H,MAAQ1C,GAAKq5H,EAAe32H,KAAM42H,GACvDriH,MAAOoiH,EAAepiH,OAASjX,GAAKq5H,EAAepiH,MAAOqiH,GAC1DlvG,SAAUivG,EAAejvG,UAAYpqB,GAAKq5H,EAAejvG,SAAUkvG,KAIrEH,EAAkBE,SAMtB7hE,EAAKghE,YAAc,IAAIU,GAAiBC,IAC1C,CACF,OAzCuChkE,EAAAwjE,EAAAphE,GAyCvCohE,CAAA,CAzCA,CAAuCJ,IA2CvC,SAASa,GAAqBniH,GDvMxB,IAAuB+3C,ECwMvB+T,GAAO60D,uCDxMgB5oE,ECyMZ/3C,EDxMX8rD,GAAO60D,uCAAyC3hF,KAClDA,GAAQqiF,aAAc,EACtBriF,GAAQh/B,MAAQ+3C,IC0MhBipE,GAAqBhhH,EAEzB,CAiBA,SAAS2hH,GAA0BW,EAA2C38D,GACpE,IAAA+6D,EAA0B50D,GAAM40D,sBACxCA,GAAyBG,GAAgBp3H,YAAW,WAAM,OAAAi3H,EAAsB4B,EAAc38D,EAApC,GAC5D,CAOO,IAAM87D,GAA6D,CACxE1tG,QAAQ,EACRtoB,KAAM88D,GACNvoD,MAtBF,SAA6B+3C,GAC3B,MAAMA,CACR,EAqBE5kC,SAAUo1C,ICpQN,SAAUg6D,GACdhB,EACAhe,EACAif,EACAj+F,EACAk+F,GAEA,OAAO,IAAIC,GAAmBnB,EAAahe,EAAQif,EAAYj+F,EAASk+F,EAC1E,CAMA,IAAAC,GAAA,SAAApiE,GAiBE,SAAAoiE,EACEnB,EACAhe,EACAif,EACAj+F,EACQk+F,EACAE,GANV,IAAApiE,EAoBED,EAAA/5D,KAAA,KAAMg7H,IAAY,YAfVhhE,EAAAkiE,WAAAA,EACAliE,EAAAoiE,kBAAAA,EAeRpiE,EAAKshE,MAAQte,EACT,SAAuC76G,GACrC,IACE66G,EAAO76G,GACP,MAAOqvD,GACPwpE,EAAYvhH,MAAM+3C,GAEtB,EACAuI,EAAAj6D,UAAMw7H,MACVthE,EAAKuhE,OAASv9F,EACV,SAAuCwzB,GACrC,IACExzB,EAAQwzB,GACR,MAAOA,GAEPwpE,EAAYvhH,MAAM+3C,GAClB,QAEAhxD,KAAKuU,cAET,EACAglD,EAAAj6D,UAAMy7H,OACVvhE,EAAKwhE,UAAYS,EACb,WACE,IACEA,IACA,MAAOzqE,GAEPwpE,EAAYvhH,MAAM+3C,GAClB,QAEAhxD,KAAKuU,cAET,EACAglD,EAAAj6D,UAAM07H,WACZ,CAUF,OAnF2C7jE,EAAAwkE,EAAApiE,GA2EzCoiE,EAAAr8H,UAAAiV,YAAA,iBACE,IAAKvU,KAAK47H,mBAAqB57H,KAAK47H,oBAAqB,CAC/C,IAAAC,EAAW77H,KAAIgtB,OACvBusC,EAAAj6D,UAAMiV,YAAW/U,KAAC,OAEjBq8H,IAAyB,QAAfziE,EAAAp5D,KAAK07H,kBAAU,IAAAtiE,GAAAA,EAAA55D,KAAfQ,OAEf,EACF27H,CAAA,CAnFA,CAA2CpB,ICmBrC,SAAUh3H,GAAUu4H,EAAyCpkE,GACjE,OAAOugE,IAAQ,SAACt8F,EAAQijC,GAEtB,IAAIxnD,EAAQ,EAGZukB,EAAOtlB,UACLmlH,GAAyB58D,GAAY,SAACj9D,GAGpCi9D,EAAWl6D,KAAKo3H,EAAQt8H,KAAKk4D,EAAS/1D,EAAOyV,KAC/C,IAEJ,GACF,CCDM,SAAU5T,GAAU4nF,EAAiD1zB,GACzE,OAAOugE,IAAQ,SAACt8F,EAAQijC,GAEtB,IAAIxnD,EAAQ,EAIZukB,EAAOtlB,UAILmlH,GAAyB58D,GAAY,SAACj9D,GAAU,OAAAypF,EAAU5rF,KAAKk4D,EAAS/1D,EAAOyV,MAAYwnD,EAAWl6D,KAAK/C,EAA3D,IAEpD,GACF,CC1EO,IAAMo6H,GAAe,SAAIp7H,GAA8B,OAAAA,GAAyB,kBAAbA,EAAEd,QAAoC,oBAANc,CAA5C,ECMxD,SAAUq7H,GAAUr6H,GACxB,OAAOq2H,GAAgB,OAALr2H,QAAK,IAALA,OAAK,EAALA,EAAO8F,KAC3B,CCFO,IAAM8kB,GAAwD,oBAAXnoB,QAAyBA,OAAOmoB,YAAe,eCoCnG,SAAUu+D,GAAYnqF,GAC1B,OAAOA,CACT,CCsCM,SAAUs7H,GAAoBC,GAClC,OAAmB,IAAfA,EAAIr8H,OACCirF,GAGU,IAAfoxC,EAAIr8H,OACCq8H,EAAI,GAGN,SAAe5gG,GACpB,OAAO4gG,EAAIh2H,QAAO,SAACiwD,EAAWtzC,GAA4B,OAAAA,EAAGszC,EAAH,GAAU76B,EACtE,CACF,CC9EA,IAAAuiC,GAAA,WAkBE,SAAAA,EAAYxnD,GACNA,IACFrW,KAAK2sB,WAAatW,EAEtB,CAwbF,OA5ZEwnD,EAAAv+D,UAAA44H,KAAA,SAAQiE,GACN,IAAM5vG,EAAa,IAAIsxC,EAGvB,OAFAtxC,EAAWoP,OAAS37B,KACpBusB,EAAW4vG,SAAWA,EACf5vG,CACT,EA6IAsxC,EAAAv+D,UAAA+W,UAAA,SACEglH,EACApiH,EACAmT,GAHF,IA2RuBzqB,EA3RvB63D,EAAA,KAKQoF,GAsRej9D,EAtRW05H,IAuRjB15H,aAAiB44H,IALpC,SAAuB54H,GACrB,OAAOA,GAASq2H,GAAWr2H,EAAM+C,OAASszH,GAAWr2H,EAAMsX,QAAU++G,GAAWr2H,EAAMyqB,SACxF,CAGoDgwG,CAAWz6H,IAAU2gF,GAAe3gF,GAvRlC05H,EAAiB,IAAIV,GAAeU,EAAgBpiH,EAAOmT,GAoB7G,OAlBAguG,IAAa,WACL,IAAAhhE,EAAuBI,EAArB2iE,EAAQ/iE,EAAA+iE,SAAExgG,EAAMy9B,EAAAz9B,OACxBijC,EAAWvqD,IACT8nH,EAGIA,EAAS38H,KAAKo/D,EAAYjjC,GAC1BA,EAIA69B,EAAK7sC,WAAWiyC,GAGhBpF,EAAK6iE,cAAcz9D,GAE3B,IAEOA,CACT,EAGUf,EAAAv+D,UAAA+8H,cAAV,SAAwBC,GACtB,IACE,OAAOt8H,KAAK2sB,WAAW2vG,GACvB,MAAOtrE,GAIPsrE,EAAKrjH,MAAM+3C,GAEf,EA6DA6M,EAAAv+D,UAAAwB,QAAA,SAAQ4D,EAA0B63H,GAAlC,IAAA/iE,EAAA,KAGE,OAAO,IAFP+iE,EAAcC,GAAeD,KAEA,SAACn0H,EAAS+C,GACrC,IAAMyzD,EAAa,IAAI+7D,GAAkB,CACvCj2H,KAAM,SAAC/C,GACL,IACE+C,EAAK/C,GACL,MAAOqvD,GACP7lD,EAAO6lD,GACP4N,EAAWrqD,cAEf,EACA0E,MAAO9N,EACPihB,SAAUhkB,IAEZoxD,EAAKnjD,UAAUuoD,EACjB,GACF,EAGUf,EAAAv+D,UAAAqtB,WAAV,SAAqBiyC,SACnB,OAAkB,QAAXxF,EAAAp5D,KAAK27B,cAAM,IAAAy9B,OAAA,EAAAA,EAAE/iD,UAAUuoD,EAChC,EAOAf,EAAAv+D,UAACm9H,IAAD,WACE,OAAOz8H,IACT,EA4FA69D,EAAAv+D,UAAAg1E,KAAA,eAAK,IAAA/K,EAAA,GAAA9O,EAAA,EAAAA,EAAA76D,UAAAC,OAAA46D,IAAA8O,EAAA9O,GAAA76D,UAAA66D,GACH,OAAOwhE,GAAc1yD,EAAd0yD,CAA0Bj8H,KACnC,EA6BA69D,EAAAv+D,UAAAo9H,UAAA,SAAUH,GAAV,IAAA/iE,EAAA,KAGE,OAAO,IAFP+iE,EAAcC,GAAeD,KAEN,SAACn0H,EAAS+C,GAC/B,IAAIxJ,EACJ63D,EAAKnjD,WACH,SAAC1V,GAAS,OAACgB,EAAQhB,CAAT,IACV,SAACqwD,GAAa,OAAA7lD,EAAO6lD,EAAP,IACd,WAAM,OAAA5oD,EAAQzG,EAAR,GAEV,GACF,EA1aOk8D,EAAA/7D,OAAkC,SAAIuU,GAC3C,OAAO,IAAIwnD,EAAcxnD,EAC3B,EAyaFwnD,EA9cA,GAudA,SAAS2+D,GAAeD,SACtB,OAAoC,QAA7BnjE,EAAW,OAAXmjE,QAAW,IAAXA,EAAAA,EAAex3D,GAAOhkE,eAAO,IAAAq4D,EAAAA,EAAIr4D,OAC1C,CCpeM,SAAU47H,GAAoBrhG,GAClC,OAAO08F,GAAW18F,EAAMmhG,IAC1B,CCLM,SAAUG,GAAmB5nE,GACjC,OAAO5wD,OAAOy0D,eAAiBm/D,GAAc,OAAHhjE,QAAG,IAAHA,OAAG,EAAHA,EAAM5wD,OAAOy0D,eACzD,CCAM,SAAUgkE,GAAiCvhG,GAE/C,OAAO,IAAI70B,UACT,iBACY,OAAV60B,GAAmC,kBAAVA,EAAqB,oBAAsB,IAAIA,EAAK,KAAG,2HAGtF,CCHO,IAAMj3B,GAPW,oBAAXD,QAA0BA,OAAOC,SAIrCD,OAAOC,SAHL,aCEL,SAAUy4H,GAAWxhG,GACzB,OAAO08F,GAAgB,OAAL18F,QAAK,IAALA,OAAK,EAALA,EAAQyhG,IAC5B,CCHM,SAAiBC,GAAsCC,mGACrDvpD,EAASupD,EAAelpD,qEAGF,SAAApb,EAAM+a,EAAOC,uBAA/Bva,EAAkB8K,EAAAhM,OAAhBv2D,EAAKy3D,EAAAz3D,MAAMy3D,EAAAz0D,mBACf,aACF,SAAAu/D,EAAAhM,0BAEIv2D,WAAN,SAAAuiE,EAAAhM,sBAAAgM,EAAAhM,+CAGFwb,EAAOwpD,2CAIL,SAAUC,GAAwBnoE,GAGtC,OAAOgjE,GAAc,OAAHhjE,QAAG,IAAHA,OAAG,EAAHA,EAAK+e,UACzB,CCPM,SAAUqpD,GAAa9hG,GAC3B,GAAIA,aAAiBuiC,GACnB,OAAOviC,EAET,GAAa,MAATA,EAAe,CACjB,GAAIqhG,GAAoBrhG,GACtB,OA0BmC05B,EA1BN15B,EA2B1B,IAAIuiC,IAAW,SAACe,GACrB,IAAM8tB,EAAM13B,EAAIynE,MAChB,GAAIzE,GAAWtrC,EAAIr2E,WACjB,OAAOq2E,EAAIr2E,UAAUuoD,GAGvB,MAAM,IAAIn4D,UAAU,iEACtB,IAhCE,GAAIs1H,GAAYzgG,GACd,OAyC2B8wC,EAzCN9wC,EA0ClB,IAAIuiC,IAAW,SAACe,GAUrB,IAAK,IAAI9+D,EAAI,EAAGA,EAAIssE,EAAMvsE,SAAW++D,EAAW5xC,OAAQltB,IACtD8+D,EAAWl6D,KAAK0nE,EAAMtsE,IAExB8+D,EAAWxyC,UACb,IAtDE,GAAI4vG,GAAU1gG,GACZ,OAwDyBzQ,EAxDNyQ,EAyDhB,IAAIuiC,IAAW,SAACe,GACrB/zC,EACGpjB,MACC,SAAC9F,GACMi9D,EAAW5xC,SACd4xC,EAAWl6D,KAAK/C,GAChBi9D,EAAWxyC,WAEf,IACA,SAAC4kC,GAAa,OAAA4N,EAAW3lD,MAAM+3C,EAAjB,IAEfvpD,KAAK,KAAMwyH,GAChB,IAnEE,GAAI2C,GAAgBthG,GAClB,OAAO+hG,GAAkB/hG,GAE3B,GAAIwhG,GAAWxhG,GACb,OAkE0BkyD,EAlENlyD,EAmEjB,IAAIuiC,IAAW,SAACe,eACrB,IAAoB,IAAA0+D,EAAA/kE,EAAAi1B,GAAQ+vC,EAAAD,EAAA54H,QAAA64H,EAAA54H,KAAA44H,EAAAD,EAAA54H,OAAE,CAAzB,IAAM/C,EAAK47H,EAAA57H,MAEd,GADAi9D,EAAWl6D,KAAK/C,GACZi9D,EAAW5xC,OACb,yGAGJ4xC,EAAWxyC,UACb,IAzEE,GAAI+wG,GAAqB7hG,GACvB,OAkFG+hG,GAAkBL,GAlFS1hG,IAiF9B,IAlB0BkyD,EAhBD3iE,EAlBEuhD,EAlBQpX,EAPvC,MAAM6nE,GAAiCvhG,EACzC,CAsEM,SAAU+hG,GAAqBG,GACnC,OAAO,IAAI3/D,IAAW,SAACe,IASzB,SAA0B4+D,EAAiC5+D,yIAC/B6+D,EAAAxkE,EAAAukE,+EAIxB,GAJe77H,EAAK+7H,EAAA/7H,MACpBi9D,EAAWl6D,KAAK/C,GAGZi9D,EAAW5xC,OACb,4SAGJ4xC,EAAWxyC,uBAjBTk4F,CAAQkZ,EAAe5+D,GAAY/yD,OAAM,SAACmlD,GAAQ,OAAA4N,EAAW3lD,MAAM+3C,EAAjB,GACpD,GACF,CCjGM,SAAU2sE,GACdC,EACAjxH,EACAkxH,EACAtpE,EACAxqB,QADA,IAAAwqB,IAAAA,EAAA,QACA,IAAAxqB,IAAAA,GAAA,GAEA,IAAM+zF,EAAuBnxH,EAAUw2D,UAAS,WAC9C06D,IACI9zF,EACF6zF,EAAmBvpH,IAAIrU,KAAKmjE,SAAS,KAAM5O,IAE3Cv0D,KAAKuU,aAET,GAAGggD,GAIH,GAFAqpE,EAAmBvpH,IAAIypH,IAElB/zF,EAKH,OAAO+zF,CAEX,CCuCM,SAAUC,GACdjC,EACAkC,EACAC,GAEA,YAFA,IAAAA,IAAAA,EAAA10E,KAEIyuE,GAAWgG,GAEND,IAAS,SAACl9H,EAAGf,GAAM,OAAAyD,IAAI,SAACnB,EAAQi7C,GAAe,OAAA2gF,EAAen9H,EAAGuB,EAAGtC,EAAGu9C,EAAxB,GAA5B95C,CAAyD65H,GAAUtB,EAAQj7H,EAAGf,IAA9E,GAAoFm+H,IAC3E,kBAAnBD,IAChBC,EAAaD,GAGR/F,IAAQ,SAACt8F,EAAQijC,GAAe,OC1EnC,SACJjjC,EACAijC,EACAk9D,EACAmC,EACAC,EACAC,EACAC,EACAC,GAGA,IAAM3uH,EAAc,GAEhByO,EAAS,EAET/G,EAAQ,EAERknH,GAAa,EAKXC,EAAgB,YAIhBD,GAAe5uH,EAAO7P,QAAWse,GACnCygD,EAAWxyC,UAEf,EAGMoyG,EAAY,SAAC78H,GAAa,OAACwc,EAAS8/G,EAAaQ,EAAW98H,GAAS+N,EAAO9M,KAAKjB,EAAvD,EAE1B88H,EAAa,SAAC98H,GAIlBw8H,GAAUv/D,EAAWl6D,KAAK/C,GAI1Bwc,IAKA,IAAIugH,GAAgB,EAGpBtB,GAAUtB,EAAQn6H,EAAOyV,MAAUf,UACjCmlH,GACE58D,GACA,SAAC+/D,GAGa,OAAZT,QAAY,IAAZA,GAAAA,EAAeS,GAEXR,EAGFK,EAAUG,GAGV//D,EAAWl6D,KAAKi6H,EAEpB,IACA,WAGED,GAAgB,CAClB,QAEAxrE,GACA,WAIE,GAAIwrE,EAKF,IAIEvgH,IAKA,qBACE,IAAMygH,EAAgBlvH,EAAOsO,QAIzBogH,EACFT,GAAgB/+D,EAAYw/D,GAAmB,WAAM,OAAAK,EAAWG,EAAX,IAErDH,EAAWG,IARRlvH,EAAO7P,QAAUse,EAAS8/G,OAYjCM,IACA,MAAOvtE,GACP4N,EAAW3lD,MAAM+3C,GAGvB,IAGN,EAaA,OAVAr1B,EAAOtlB,UACLmlH,GAAyB58D,EAAY4/D,GAAW,WAE9CF,GAAa,EACbC,GACF,KAKK,WACc,OAAnBF,QAAmB,IAAnBA,GAAAA,GACF,CACF,CDtDyCQ,CAAeljG,EAAQijC,EAAYk9D,EAASmC,EAA5C,IACzC,CEhCM,SAAUa,GAAyCb,GACvD,YADuD,IAAAA,IAAAA,EAAA10E,KAChDw0E,GAASjzC,GAAUmzC,EAC5B,CC7DA,SAASrkH,GAAQ8iD,GACf,OAAOA,EAAIA,EAAI78D,OAAS,EAC1B,CAMM,SAAUk/H,GAAavkE,GAC3B,OCV0B74D,EDUPiY,GAAK4gD,KCTRw9D,GAAWr2H,EAAMwhE,UDSA3I,EAAKzsD,WAAQmlD,ECV1C,IAAsBvxD,CDW5B,CAEM,SAAUq9H,GAAUxkE,EAAaplC,GACrC,MAA6B,kBAAfxb,GAAK4gD,GAAqBA,EAAKzsD,MAASqnB,CACxD,CEwCM,SAAU6pG,GAAatyH,EAA0B4nD,GACrD,YADqD,IAAAA,IAAAA,EAAA,GAC9C0jE,IAAQ,SAACt8F,EAAQijC,GACtBjjC,EAAOtlB,UACLmlH,GACE58D,GACA,SAACj9D,GAAU,OAAAg8H,GAAgB/+D,EAAYjyD,GAAW,WAAM,OAAAiyD,EAAWl6D,KAAK/C,EAAhB,GAAwB4yD,EAArE,IACX,WAAM,OAAAopE,GAAgB/+D,EAAYjyD,GAAW,WAAM,OAAAiyD,EAAWxyC,UAAX,GAAuBmoC,EAApE,IACN,SAACvD,GAAQ,OAAA2sE,GAAgB/+D,EAAYjyD,GAAW,WAAM,OAAAiyD,EAAW3lD,MAAM+3C,EAAjB,GAAuBuD,EAApE,IAGf,GACF,CCPM,SAAU2qE,GAAevyH,EAA0B4nD,GACvD,YADuD,IAAAA,IAAAA,EAAA,GAChD0jE,IAAQ,SAACt8F,EAAQijC,GACtBA,EAAWvqD,IAAI1H,EAAUw2D,UAAS,WAAM,OAAAxnC,EAAOtlB,UAAUuoD,EAAjB,GAA8BrK,GACxE,GACF,CC9DM,SAAU4qE,GAAyB7jG,EAAyB3uB,GAChE,IAAK2uB,EACH,MAAM,IAAI/4B,MAAM,2BAElB,OAAO,IAAIs7D,IAAc,SAACe,GACxB++D,GAAgB/+D,EAAYjyD,GAAW,WACrC,IAAMtI,EAAWi3B,EAAMl3B,OAAOy0D,iBAC9B8kE,GACE/+D,EACAjyD,GACA,WACEtI,EAASK,OAAO+C,MAAK,SAACgS,GAChBA,EAAO9U,KAGTi6D,EAAWxyC,WAEXwyC,EAAWl6D,KAAK+U,EAAO9X,MAE3B,GACF,GACA,GACA,EAEJ,GACF,GACF,CCHM,SAAUy9H,GAAa9jG,EAA2B3uB,GACtD,GAAa,MAAT2uB,EAAe,CACjB,GAAIqhG,GAAoBrhG,GACtB,OCzBA,SAAgCA,EAA6B3uB,GACjE,OAAOywH,GAAU9hG,GAAOg5C,KAAK4qD,GAAYvyH,GAAYsyH,GAAUtyH,GACjE,CDuBa0yH,CAAmB/jG,EAAO3uB,GAEnC,GAAIovH,GAAYzgG,GACd,OE9BA,SAA2BA,EAAqB3uB,GACpD,OAAO,IAAIkxD,IAAc,SAACe,GAExB,IAAI9+D,EAAI,EAER,OAAO6M,EAAUw2D,UAAS,WACpBrjE,IAAMw7B,EAAMz7B,OAGd++D,EAAWxyC,YAIXwyC,EAAWl6D,KAAK42B,EAAMx7B,MAIjB8+D,EAAW5xC,QACdhtB,KAAKmjE,WAGX,GACF,GACF,CFOam8D,CAAchkG,EAAO3uB,GAE9B,GAAIqvH,GAAU1gG,GACZ,OG/BA,SAA6BA,EAAuB3uB,GACxD,OAAOywH,GAAU9hG,GAAOg5C,KAAK4qD,GAAYvyH,GAAYsyH,GAAUtyH,GACjE,CH6Ba4yH,CAAgBjkG,EAAO3uB,GAEhC,GAAIiwH,GAAgBthG,GAClB,OAAO6jG,GAAsB7jG,EAAO3uB,GAEtC,GAAImwH,GAAWxhG,GACb,OI/BA,SAA8BA,EAAoB3uB,GACtD,OAAO,IAAIkxD,IAAc,SAACe,GACxB,IAAIv6D,EA4CJ,OAvCAs5H,GAAgB/+D,EAAYjyD,GAAW,WAErCtI,EAAYi3B,EAAcyhG,MAE1BY,GACE/+D,EACAjyD,GACA,iBACMhL,EACAgD,EACJ,IAEKhD,GAAFy3D,EAAkB/0D,EAASK,QAApB/C,MAAEgD,EAAIy0D,EAAAz0D,KACd,MAAOqsD,GAGP,YADA4N,EAAW3lD,MAAM+3C,GAIfrsD,EAKFi6D,EAAWxyC,WAGXwyC,EAAWl6D,KAAK/C,EAEpB,GACA,GACA,EAEJ,IAMO,WAAM,OAAAq2H,GAAmB,OAAR3zH,QAAQ,IAARA,OAAQ,EAARA,EAAU45B,SAAW55B,EAAS45B,QAAzC,CACf,GACF,CJjBauhG,CAAiBlkG,EAAO3uB,GAEjC,GAAIwwH,GAAqB7hG,GACvB,OKxCA,SAAwCA,EAA8B3uB,GAC1E,OAAOwyH,GAAsBnC,GAAmC1hG,GAAQ3uB,EAC1E,CLsCa8yH,CAA2BnkG,EAAO3uB,GAG7C,MAAMkwH,GAAiCvhG,EACzC,CMoDM,SAAUz5B,GAAQy5B,EAA2B3uB,GACjD,OAAOA,EAAYyyH,GAAU9jG,EAAO3uB,GAAaywH,GAAU9hG,EAC7D,CCSM,SAAUn7B,SAAO,IAAAq6D,EAAA,GAAAC,EAAA,EAAAA,EAAA76D,UAAAC,OAAA46D,IAAAD,EAAAC,GAAA76D,UAAA66D,GACrB,OCrDOqkE,GAAS,EDqDTY,CAAY79H,GAAK24D,EAAMukE,GAAavkE,IAC7C,CExDM,SAAUmlE,SAAgB,IAAAhrH,EAAA,GAAA8lD,EAAA,EAAAA,EAAA76D,UAAAC,OAAA46D,IAAA9lD,EAAA8lD,GAAA76D,UAAA66D,GAC9B,IAAM9tD,EAAYoyH,GAAapqH,GAC/B,OAAOsjH,IAAQ,SAACt8F,EAAQijC,IAIrBjyD,EAAYxM,GAAOwU,EAAQgnB,EAAQhvB,GAAaxM,GAAOwU,EAAQgnB,IAAStlB,UAAUuoD,EACrF,GACF,CCwEM,SAAUghE,GACdC,EACAC,GAOA,YAPA,IAAAA,IAAAA,EAA+Bh1C,IAK/B+0C,EAAuB,OAAVA,QAAU,IAAVA,EAAAA,EAAcE,GAEpB9H,IAAQ,SAACt8F,EAAQijC,GAGtB,IAAIohE,EAEAhuH,GAAQ,EAEZ2pB,EAAOtlB,UACLmlH,GAAyB58D,GAAY,SAACj9D,GAEpC,IAAMs+H,EAAaH,EAAYn+H,IAK3BqQ,GAAU6tH,EAAYG,EAAaC,KAMrCjuH,GAAQ,EACRguH,EAAcC,EAGdrhE,EAAWl6D,KAAK/C,GAEpB,IAEJ,GACF,CAEA,SAASo+H,GAAel/H,EAAQuB,GAC9B,OAAOvB,IAAMuB,CACf,CChKO,IAAM89H,GAAuD7H,IAClE,SAAC9+D,GACC,kBACEA,EAAOv5D,MACPA,KAAKuF,KAAO,0BACZvF,KAAKwF,QAAU,qBACjB,CAJA,ICPJ26H,GAAA,SAAA5mE,GAwBE,SAAA4mE,IAAA,IAAA3mE,EAEED,EAAA/5D,KAAA,OAAO,YAzBTg6D,EAAAxsC,QAAS,EAEDwsC,EAAA4mE,iBAAyC,KAGjD5mE,EAAA+yB,UAA2B,GAE3B/yB,EAAAihE,WAAY,EAEZjhE,EAAA6mE,UAAW,EAEX7mE,EAAA8mE,YAAmB,MAenB,CAkHF,OA7IgCnpE,EAAAgpE,EAAA5mE,GA8B9B4mE,EAAA7gI,UAAA44H,KAAA,SAAQiE,GACN,IAAMoE,EAAU,IAAIC,GAAiBxgI,KAAMA,MAE3C,OADAugI,EAAQpE,SAAWA,EACZoE,CACT,EAGUJ,EAAA7gI,UAAAmhI,eAAV,WACE,GAAIzgI,KAAKgtB,OACP,MAAM,IAAIkzG,EAEd,EAEAC,EAAA7gI,UAAAoF,KAAA,SAAK/C,GAAL,IAAA63D,EAAA,KACE4gE,IAAa,mBAEX,GADA5gE,EAAKinE,kBACAjnE,EAAKihE,UAAW,CACdjhE,EAAK4mE,mBACR5mE,EAAK4mE,iBAAmBhhI,MAAMyC,KAAK23D,EAAK+yB,gBAE1C,IAAuB,IAAAroB,EAAA3L,EAAAiB,EAAK4mE,kBAAgBh8D,EAAAF,EAAAx/D,QAAA0/D,EAAAz/D,KAAAy/D,EAAAF,EAAAx/D,OAAE,CAA3B0/D,EAAAziE,MACR+C,KAAK/C,sGAGpB,GACF,EAEAw+H,EAAA7gI,UAAA2Z,MAAA,SAAM+3C,GAAN,IAAAwI,EAAA,KACE4gE,IAAa,WAEX,GADA5gE,EAAKinE,kBACAjnE,EAAKihE,UAAW,CACnBjhE,EAAK6mE,SAAW7mE,EAAKihE,WAAY,EACjCjhE,EAAK8mE,YAActvE,EAEnB,IADQ,IAAAu7B,EAAc/yB,EAAI+yB,UACnBA,EAAU1sF,QACf0sF,EAAUvuE,QAAS/E,MAAM+3C,GAG/B,GACF,EAEAmvE,EAAA7gI,UAAA8sB,SAAA,eAAAotC,EAAA,KACE4gE,IAAa,WAEX,GADA5gE,EAAKinE,kBACAjnE,EAAKihE,UAAW,CACnBjhE,EAAKihE,WAAY,EAEjB,IADQ,IAAAluC,EAAc/yB,EAAI+yB,UACnBA,EAAU1sF,QACf0sF,EAAUvuE,QAASoO,WAGzB,GACF,EAEA+zG,EAAA7gI,UAAAiV,YAAA,WACEvU,KAAKy6H,UAAYz6H,KAAKgtB,QAAS,EAC/BhtB,KAAKusF,UAAYvsF,KAAKogI,iBAAmB,IAC3C,EAEAnhI,OAAAsC,eAAI4+H,EAAA7gI,UAAA,WAAQ,KAAZ,iBACE,OAAqB,QAAd85D,EAAAp5D,KAAKusF,iBAAS,IAAAnzB,OAAA,EAAAA,EAAEv5D,QAAS,CAClC,kCAGUsgI,EAAA7gI,UAAA+8H,cAAV,SAAwBz9D,GAEtB,OADA5+D,KAAKygI,iBACElnE,EAAAj6D,UAAM+8H,cAAa78H,KAAC,KAAAo/D,EAC7B,EAGUuhE,EAAA7gI,UAAAqtB,WAAV,SAAqBiyC,GAGnB,OAFA5+D,KAAKygI,iBACLzgI,KAAK0gI,wBAAwB9hE,GACtB5+D,KAAK2gI,gBAAgB/hE,EAC9B,EAGUuhE,EAAA7gI,UAAAqhI,gBAAV,SAA0B/hE,GAA1B,IAAApF,EAAA,KACQJ,EAAqCp5D,KAAnCqgI,EAAQjnE,EAAAinE,SAAE5F,EAASrhE,EAAAqhE,UAAEluC,EAASnzB,EAAAmzB,UACtC,OAAI8zC,GAAY5F,EACPhB,IAETz5H,KAAKogI,iBAAmB,KACxB7zC,EAAU3pF,KAAKg8D,GACR,IAAID,IAAa,WACtBnF,EAAK4mE,iBAAmB,KACxB3H,GAAUlsC,EAAW3tB,EACvB,IACF,EAGUuhE,EAAA7gI,UAAAohI,wBAAV,SAAkC9hE,GAC1B,IAAAxF,EAAuCp5D,KAArCqgI,EAAQjnE,EAAAinE,SAAEC,EAAWlnE,EAAAknE,YAAE7F,EAASrhE,EAAAqhE,UACpC4F,EACFzhE,EAAW3lD,MAAMqnH,GACR7F,GACT77D,EAAWxyC,UAEf,EAQA+zG,EAAA7gI,UAAAshI,aAAA,WACE,IAAMr0G,EAAkB,IAAIsxC,GAE5B,OADAtxC,EAAWoP,OAAS37B,KACbusB,CACT,EAxHO4zG,EAAAr+H,OAAkC,SAAI04H,EAA0B7+F,GACrE,OAAO,IAAI6kG,GAAoBhG,EAAa7+F,EAC9C,EAuHFwkG,EA7IA,CAAgCtiE,IAkJhC2iE,GAAA,SAAAjnE,GACE,SAAAinE,EAEShG,EACP7+F,GAHF,IAAA69B,EAKED,EAAA/5D,KAAA,OAAO,YAHAg6D,EAAAghE,YAAAA,EAIPhhE,EAAK79B,OAASA,GAChB,CAkBF,OA1ByCw7B,EAAAqpE,EAAAjnE,GAUvCinE,EAAAlhI,UAAAoF,KAAA,SAAK/C,WACmB,QAAtBuiE,EAAgB,QAAhB9K,EAAAp5D,KAAKw6H,mBAAW,IAAAphE,OAAA,EAAAA,EAAE10D,YAAI,IAAAw/D,GAAAA,EAAA1kE,KAAA45D,EAAGz3D,EAC3B,EAEA6+H,EAAAlhI,UAAA2Z,MAAA,SAAM+3C,WACmB,QAAvBkT,EAAgB,QAAhB9K,EAAAp5D,KAAKw6H,mBAAW,IAAAphE,OAAA,EAAAA,EAAEngD,aAAK,IAAAirD,GAAAA,EAAA1kE,KAAA45D,EAAGpI,EAC5B,EAEAwvE,EAAAlhI,UAAA8sB,SAAA,mBAC4B,QAA1B83C,EAAgB,QAAhB9K,EAAAp5D,KAAKw6H,mBAAW,IAAAphE,OAAA,EAAAA,EAAEhtC,gBAAQ,IAAA83C,GAAAA,EAAA1kE,KAAA45D,EAC5B,EAGUonE,EAAAlhI,UAAAqtB,WAAV,SAAqBiyC,WACnB,OAAyC,QAAlCsF,EAAW,QAAX9K,EAAAp5D,KAAK27B,cAAM,IAAAy9B,OAAA,EAAAA,EAAE/iD,UAAUuoD,UAAW,IAAAsF,EAAAA,EAAIu1D,EAC/C,EACF+G,CAAA,CA1BA,CAAyCL,IC5J5BU,GAA+C,CAC1D16F,IAAG,WAGD,OAAQ06F,GAAsB9G,UAAY7zF,MAAMC,KAClD,EACA4zF,cAAU7mE,GCwBZ4tE,GAAA,SAAAvnE,GAUE,SAAAunE,EACUC,EACAC,EACAC,QAFA,IAAAF,IAAAA,EAAAx3E,UACA,IAAAy3E,IAAAA,EAAAz3E,UACA,IAAA03E,IAAAA,EAAAJ,IAHV,IAAArnE,EAKED,EAAA/5D,KAAA,OAAO,YAJCg6D,EAAAunE,YAAAA,EACAvnE,EAAAwnE,YAAAA,EACAxnE,EAAAynE,mBAAAA,EAZFznE,EAAA0nE,QAA0B,GAC1B1nE,EAAA2nE,qBAAsB,EAc5B3nE,EAAK2nE,oBAAsBH,IAAgBz3E,IAC3CiQ,EAAKunE,YAAcznH,KAAKsM,IAAI,EAAGm7G,GAC/BvnE,EAAKwnE,YAAc1nH,KAAKsM,IAAI,EAAGo7G,IACjC,CAsDF,OAzEsC7pE,EAAA2pE,EAAAvnE,GAqBpCunE,EAAAxhI,UAAAoF,KAAA,SAAK/C,GACG,IAAAy3D,EAA+Ep5D,KAA7Ey6H,EAASrhE,EAAAqhE,UAAEyG,EAAO9nE,EAAA8nE,QAAEC,EAAmB/nE,EAAA+nE,oBAAEF,EAAkB7nE,EAAA6nE,mBAAED,EAAW5nE,EAAA4nE,YAC3EvG,IACHyG,EAAQt+H,KAAKjB,IACZw/H,GAAuBD,EAAQt+H,KAAKq+H,EAAmB96F,MAAQ66F,IAElEhhI,KAAKohI,cACL7nE,EAAAj6D,UAAMoF,KAAIlF,KAAC,KAAAmC,EACb,EAGUm/H,EAAAxhI,UAAAqtB,WAAV,SAAqBiyC,GACnB5+D,KAAKygI,iBACLzgI,KAAKohI,cAQL,IANA,IAAMnjE,EAAej+D,KAAK2gI,gBAAgB/hE,GAElCuiE,EAAiCnhI,KAAdmhI,oBAGrBv0B,EAHmC5sG,KAALkhI,QAGfhhI,QACZJ,EAAI,EAAGA,EAAI8sG,EAAK/sG,SAAW++D,EAAW5xC,OAAQltB,GAAKqhI,EAAsB,EAAI,EACpFviE,EAAWl6D,KAAKkoG,EAAK9sG,IAKvB,OAFAE,KAAK0gI,wBAAwB9hE,GAEtBX,CACT,EAEQ6iE,EAAAxhI,UAAA8hI,YAAR,WACQ,IAAAhoE,EAAoEp5D,KAAlE+gI,EAAW3nE,EAAA2nE,YAAEE,EAAkB7nE,EAAA6nE,mBAAEC,EAAO9nE,EAAA8nE,QAAEC,EAAmB/nE,EAAA+nE,oBAK/DE,GAAsBF,EAAsB,EAAI,GAAKJ,EAK3D,GAJAA,EAAcx3E,KAAY83E,EAAqBH,EAAQrhI,QAAUqhI,EAAQ/9H,OAAO,EAAG+9H,EAAQrhI,OAASwhI,IAI/FF,EAAqB,CAKxB,IAJA,IAAMh7F,EAAM86F,EAAmB96F,MAC3BvsB,EAAO,EAGF9Z,EAAI,EAAGA,EAAIohI,EAAQrhI,QAAWqhI,EAAQphI,IAAiBqmC,EAAKrmC,GAAK,EACxE8Z,EAAO9Z,EAET8Z,GAAQsnH,EAAQ/9H,OAAO,EAAGyW,EAAO,GAErC,EACFknH,CAAA,CAzEA,CAAsCX,ICgNtC,SAASmB,GACPl7D,EACA1nD,OACA,IAAA87C,EAAA,GAAAC,EAAA,EAAAA,EAAA76D,UAAAC,OAAA46D,IAAAD,EAAAC,EAAA,GAAA76D,UAAA66D,GAEA,IAAW,IAAP/7C,GAKJ,IAAW,IAAPA,EAAJ,CAIA,IAAM6iH,EAAe,IAAI5G,GAAe,CACtCj2H,KAAM,WACJ68H,EAAahtH,cACb6xD,GACF,IAGF,OAAOg3D,GAAU1+G,EAAE3e,WAAC,EAAD04D,EAAC,GAADD,EAAIgC,MAAOnkD,UAAUkrH,SAftCn7D,GAgBJ,CChHM,SAAUo7D,GACdC,EACAC,EACA/0H,aAEIg1H,EACAC,GAAW,EAMf,OALIH,GAAoD,kBAAvBA,GAC5BroE,EAA8EqoE,EAAkBE,WAAhGA,OAAU,IAAAvoE,EAAG7P,IAAQ6P,EAAE8K,EAAuDu9D,EAAkBC,WAAzEA,OAAU,IAAAx9D,EAAG3a,IAAQ2a,EAAE09D,OAAQ,KAARx9D,EAAgCq9D,EAAkBG,WAAlCx9D,EAAEz3D,EAAc80H,EAAkB90H,WAEnGg1H,EAAgC,OAAlBF,QAAkB,IAAlBA,EAAAA,EAAsBl4E,IDvBlC,SAAmBvzB,QAAA,IAAAA,IAAAA,EAAA,IACf,IAAAojC,EAAgHpjC,EAAO6rG,UAAvHA,OAAS,IAAAzoE,EAAG,WAAM,WAAI+mE,EAAJ,EAAgB/mE,EAAE8K,EAA4EluC,EAAO8rG,aAAnFA,OAAY,IAAA59D,GAAOA,EAAEE,EAAuDpuC,EAAO+rG,gBAA9DA,OAAe,IAAA39D,GAAOA,EAAEQ,EAA+B5uC,EAAOgsG,oBAAtCA,OAAmB,IAAAp9D,GAAOA,EAUnH,OAAO,SAACq9D,GACN,IAAIC,EACAC,EACA5B,EACAqB,EAAW,EACXQ,GAAe,EACfC,GAAa,EAEXC,EAAc,WACH,OAAfH,QAAe,IAAfA,GAAAA,EAAiB5tH,cACjB4tH,OAAkBjvE,CACpB,EAGMkT,EAAQ,WACZk8D,IACAJ,EAAa3B,OAAUrtE,EACvBkvE,EAAeC,GAAa,CAC9B,EACME,EAAsB,WAG1B,IAAMC,EAAON,EACb97D,IACI,OAAJo8D,QAAI,IAAJA,GAAAA,EAAMjuH,aACR,EAEA,OAAO0jH,IAAc,SAACt8F,EAAQijC,GAC5BgjE,IACKS,GAAeD,GAClBE,IAOF,IAAMlT,EAAQmR,EAAiB,OAAPA,QAAO,IAAPA,EAAAA,EAAWsB,IAOnCjjE,EAAWvqD,KAAI,WAMI,MALjButH,GAKuBS,GAAeD,IACpCD,EAAkBb,GAAYiB,EAAqBP,GAEvD,IAIA5S,EAAK/4G,UAAUuoD,IAGZsjE,GAIDN,EAAW,IAOXM,EAAa,IAAIvH,GAAe,CAC9Bj2H,KAAM,SAAC/C,GAAU,OAAAytH,EAAK1qH,KAAK/C,EAAV,EACjBsX,MAAO,SAAC+3C,GACNqxE,GAAa,EACbC,IACAH,EAAkBb,GAAYl7D,EAAO07D,EAAc9wE,GACnDo+D,EAAKn2G,MAAM+3C,EACb,EACA5kC,SAAU,WACRg2G,GAAe,EACfE,IACAH,EAAkBb,GAAYl7D,EAAO27D,GACrC3S,EAAKhjG,UACP,IAEFgxG,GAAUzhG,GAAQtlB,UAAU6rH,GAEhC,GA7DOjK,CA6DJgK,EACL,CACF,CC5ESQ,CAAS,CACdZ,UAAW,WAAM,WAAIf,GAAca,EAAYD,EAAY/0H,EAA1C,EACjBm1H,cAAc,EACdC,iBAAiB,EACjBC,oBAAqBJ,GAEzB,CCxKO,SAASc,GAAkB1tE,EAAmCxvD,GACjE,IAAKwvD,EAID,MAHKxvD,IACDA,EAAU,IAER,IAAIjD,MAAM,8BAAgCiD,GAEpD,OAAOwvD,CACX,CAeO,IAAM2tE,GAA6B,CACtChB,WAAY,EACZC,UAAU,GCQqC7gI,QAAQqH,SAAQ,GAA5D,IACMw6H,GAAwC7hI,QAAQqH,SAAQ,GACxDy6H,GAAsC9hI,QAAQqH,QAAQ,MACtD06H,GAAsC/hI,QAAQqH,UAGpD,SAAS26H,KAQd,IADEh3H,EAA2BnM,UAAAC,OAAA,QAAAqzD,IAAAtzD,UAAA,GAAAA,UAAA,GAAG,IAS9B,MACmC,oBAAxBojI,oBAEA,IAAIjiI,SAAc4pB,IACrBq4G,qBACI,IAAMr4G,KACN,CACI5e,WAEP,IA7DN,WAAoD,IAA/Bk3H,EAAUrjI,UAAAC,OAAA,QAAAqzD,IAAAtzD,UAAA,GAAAA,UAAA,GAAG,EACrC,OAAO,IAAImB,SAAQ4pB,GAAOjoB,WAAWioB,EAAKs4G,IAC9C,CA8DeC,CAAY,EAE3B,CAOA,IAAIC,GAAmBL,GC7EhB,SAASM,GAAwB7/H,EAAkC2O,GACtE,IAAMi8E,EAAM5qF,EAAI/B,IAAI0Q,GACpB,GAAmB,qBAARi8E,EACP,MAAM,IAAI5rF,MAAM,0BAA4B2P,GAEhD,OAAOi8E,CACX,CAEO,SAASk1C,GACZ9/H,EACA6T,EACAksH,EACAC,GAEA,IAAI5hI,EAAQ4B,EAAI/B,IAAI4V,GAOpB,MANqB,qBAAVzV,GACPA,EAAQ2hI,IACR//H,EAAI9B,IAAI2V,EAAOzV,IACR4hI,GACPA,EAAW5hI,GAERA,CACX,CCXO,SAAS6hI,GACZC,GAEA,IAAMC,EAAWD,EAAUngI,MAAM,KAC7BqgI,EAAa,OAKjB,OAJAD,EAAS5iI,SAAQ8iI,IACbD,GAAcnQ,GAAQoQ,EAAK,IAE/BD,GAAc,SACP,IAAIphI,MAAM,8KAGEohI,EAAU,yBAAyBF,EAAS,+BACzCE,EAAU,eAGpC,CCjBA,IAAIE,GAAmB,EAKhB,SAAS19F,KACZ,IAAIk9B,EAAMn9B,KAAKC,OACfk9B,GAAY,MACDwgE,KACPxgE,EAAMwgE,GAAW,KASrB,IAAMC,EAAcC,WAAW1gE,EAAI2gE,QAAQ,IAG3C,OADAH,GAAWC,EACJA,CACX,CCTO,SAASG,GAAoBC,GAEhC,IADA,IAAIC,EAAW,GACN/sH,EAAQ,EAAGA,EAAQ8sH,EAASrkI,OAAQuX,IAAS,CAClD,IAAM65B,EAAOizF,EAAS9sH,GACtB,GAAa,MAAT65B,EACA,OAAO/tC,SAASihI,EAAU,IAE9BA,GAAYlzF,CAChB,CACA,MAAM,IAAI1uC,MAAM,0BAA4B2hI,EAChD,CAMO,SAASE,GACZC,EACAC,GAGA,OAD2BA,EAAsBL,GAAoBK,EAAgBzO,MAAQ,EAAhD,GAClB,IAAMwO,CACrC,CCKO,IAAME,GAAwB,iBAG9B72G,eAAe82G,GAClBC,EACAC,GAEA,IACMp7D,SADgBm7D,EAAgBE,kBAAkB,CAACD,IAAa,IAClD,GACpB,OAAIp7D,QAGA,CAER,CA+DO,SAASs7D,GACZC,EACAH,EACAI,EACA7rH,GAEA,GAAIA,EACA,MAAqB,MAAjBA,EAAMlM,OACAukH,GAAW,WAAY,CACzBuT,WAAYA,EAAWt/H,KACvB8D,GAAIq7H,EACJK,WAAY9rH,EACZqW,KAAMw1G,IAEc,MAAjB7rH,EAAMlM,OACPukH,GAAW,MAAO,CACpBuT,WAAYA,EAAWt/H,KACvB8D,GAAIq7H,EACJK,WAAY9rH,EACZqW,KAAMw1G,IAGJ7rH,CAGlB,CAmTO,SAAS+rH,GAAuCC,GACnD,MAAO,CACHz8D,SAAUy8D,EAASz8D,SACnB53C,SAAUs0G,GAAiCD,EAASr0G,UAE5D,CAwBO,SAASs0G,GAA4C57D,GACxD,IAAKA,EAAIysD,cAAyD,IAAzC92H,OAAOyB,KAAK4oE,EAAIysD,cAAcl2H,OACnD,OAAOypE,EAGX,IAAM67D,EAAoCpW,GAAUzlD,GAOpD,OANA67D,EAAOpP,aAAe,CAAC,EACvB92H,OACKunB,QAAQ8iD,EAAIysD,cACZj1H,SAAQ63E,IAAoC,IAAlCysD,EAAcC,GAAe1sD,EACpCwsD,EAAOpP,aAAaqP,GAvBzB,SAAyCN,GAC5C,IATAQ,EASMh2G,EAAQw1G,EAAoCx1G,KAClD,OAAKA,EAGyB,CAC1BzvB,QAdJylI,EAc8Bh2G,EAZvBi2G,KAAKD,GAAwBzlI,QAahC0I,OAAQu8H,EAAUv8H,OAClBsG,KAAMi2H,EAAUj2H,MALTi2H,CAQf,CAYgDU,CAAgCH,EAAe,IAEpFF,CACX,CAQO,SAASM,GACZn8D,GAEA,OAAOrqE,OAAOS,OACV,CAAC,EACD4pE,EACA,CACI2sD,MAAOlH,GAAUzlD,EAAI2sD,QAGjC,CAOA,IAAMyP,GAAyB,IAAI7hI,QAQ5B,SAAS8hI,GAMZC,EACAnB,EAKA7P,GAEAvE,GAAaE,sBAAsBqE,GAEnC,IAAMG,EAAcM,GAA4BoP,EAAgBr0H,OAAO8G,YAEjEmsD,EAA+E,CACjFwiE,wBAAyBpB,EACzBr0H,OAAQq0H,EAAgBr0H,OACxB01H,UAAWrB,EAAgBqB,UAC3BC,eAAgBtB,EAAgBsB,eAChCC,aAAcvB,EAAgBuB,aAC9BhwG,QAASyuG,EAAgBzuG,QACzBiwG,SAAAA,CACIC,EACAjuF,GAUA,IARA,IAAMkuF,EAAgBP,EAAS5kB,MACzBolB,EAAgD,IAAIhnI,MAAM8mI,EAAKrmI,QAM/D0sC,EAAOpG,KACJ/uB,EAAQ,EAAGA,EAAQ8uH,EAAKrmI,OAAQuX,IAAS,CAC9C,IAAM6tH,EAAWiB,EAAK9uH,GAChBwZ,EAAW60G,GAAqBR,EAASr0G,UAC/CA,EAASqlG,MAAMvB,IAAMnoF,EAOrB,IAAMi8B,EAAWy8D,EAASz8D,SAC1B53C,EAASilG,KAAOuO,GACZ+B,EACA39D,GAEJ49D,EAAmBhvH,GAAS,CACxBwZ,WACA43C,WAER,CAOA,OALAyqD,GAAe,kBAAmB,CAC9BwR,gBAAiBzkI,KAAK6lI,wBACtBK,KAAME,IAGHR,EAASS,WACZ,IAAM5B,EAAgBwB,UAClBG,EACAnuF,KAWHxwC,MAAK6+H,IACF,IAAMC,EAAqC,CACvCttH,MAAO,IAOLutH,EAAeC,GACjB1R,EACAqR,EACAE,GAEJZ,GAAuBjkI,IAAI8kI,EAAgBC,GAE3C,IAAME,EAAwF,IAA7BJ,EAAYrtH,MAAMpZ,OAC7E,GACAymI,EAAYrtH,MACTzV,QAAQyV,KAEgB,MAAjBA,EAAMlM,QACLkM,EAAMgsH,SAASz8D,UACfvvD,EAAMgsH,SAASr0G,SAASolG,WACzB0M,GAAezpH,EAAM0tH,cAAc3Q,YAMvCuQ,EAAettH,MAAMrW,KAAKqW,IACnB,KAEnB,GAAIytH,EAAe7mI,OAAS,EAAG,CAC3B,IAAM+mI,EAAuCF,EACxCnjI,KAAK0V,IACK,CACHuvD,SAAUvvD,EAAM0tH,aAChB/1G,SAAU3xB,OAAOS,OACb,CAAC,EACDuZ,EAAMgsH,SAASr0G,SACf,CACIilG,KAAMuO,GACFwB,EAAS5kB,MACT/nG,EAAM0tH,oBAO9B,OAAOf,EAASS,WACZ,IAAM5B,EAAgBwB,UAClBW,EACA3uF,KAENxwC,MAAKo/H,IACHjX,GAAc2W,EAAettH,MAAO4tH,EAAU5tH,OAE9C,IAAM6tH,EAAaL,GACf1R,EACA6R,EACAC,GAIJ,OAFAjX,GAAc4W,EAAcM,GAErBP,CAAc,GAE7B,CACA,OAAOA,CAAc,GAEjC,EACA5uH,MAAMovH,GACKnB,EAASS,WACZ,IAAM5B,EAAgB9sH,MAAMovH,KAGpCvzH,MAAMuzH,GACKnB,EAASS,WACZ,IAAM5B,EAAgBjxH,MAAMuzH,KAGpCpC,kBAAiBA,CAACt6B,EAAK28B,IACZpB,EAASS,WACZ,IAAM5B,EAAgBE,kBAAkBt6B,EAAK28B,KAGrDC,kBAAiBA,CACbvC,EACAU,EACA78H,IAEOq9H,EAASS,WACZ,IAAM5B,EAAgBwC,kBAAkBvC,EAAYU,EAAc78H,KAG1E2+H,yBAA2BzC,EAAgByC,yBAAuC,CAACxzH,EAAeyzH,IACvFvB,EAASS,WACZ,IAAQ5B,EAAwByC,yBAA0BxE,GAAehvH,GAAQyzH,UAFnBj0E,EAKtEgL,QAAQkpE,GACGxB,EAASS,WACZ,IAAM5B,EAAgBvmE,QAAQkpE,KAGtC5uH,OAAMA,KACFotH,EAASyB,iBAAiBnyH,OAAOmuD,GAC1BuiE,EAASS,WACZ,IAAM5B,EAAgBjsH,YAG9BnH,MAAKA,KACDu0H,EAASyB,iBAAiBnyH,OAAOmuD,GAC1BuiE,EAASS,WACZ,IAAM5B,EAAgBpzH,WAG9Bi2H,aAAYA,IACD7C,EAAgB6C,eAE3BC,uBAAsBA,IACX9C,EAAgB8C,yBAE3BC,4BAAAA,CAA6BC,GACzB,GAAIA,EAAalnB,OAAOmnB,QACpB,OAAOjD,EAAgB+C,6BAA6BC,GAGxD,IAUMxS,EAAelG,GAVT9vH,OAAOS,OACf,CAAC,EACD+nI,EAAalnB,OAAO0U,aACpB,CACIgB,MAAOxB,KACPoB,KhErsBT,GgEssBSE,aAAc,CAAC,KASvB,cAJQd,EAAqBgB,aACrBhB,EAAqBY,YACrBZ,EAAqBc,aAEtB0O,EAAgB+C,6BAA6B,CAChDn+H,GAAIo+H,EAAap+H,GACjBk3G,OAAQ,CACJmnB,SAAS,EACTzS,iBAGZ,GAIJ,OADA2Q,EAASyB,iBAAiBhzH,IAAIgvD,GACvBA,CACX,CA8HO,SAASojE,GACZ1R,EACA4S,EACA9zD,GAEA,IAAM+zD,EAAUlC,GAAuBlkI,IAAIqyE,GAC3C,GAAI+zD,EACA,OAAOA,EAGX,IAAMvkE,EAAmC,IAAIjkE,MAAMuoI,EAAU9nI,OAASg0E,EAAS56D,MAAMpZ,QACrF,GAAIg0E,EAAS56D,MAAMpZ,OAAS,EAAG,CAE3B,IADA,IAAMgoI,EAAW,IAAInkI,IACZ0T,EAAQ,EAAGA,EAAQy8D,EAAS56D,MAAMpZ,OAAQuX,IAAS,CACxD,IAAM6B,EAAQ46D,EAAS56D,MAAM7B,GAC7BywH,EAASxzH,IAAI4E,EAAMyrH,WACvB,CAEA,IAAK,IAAIoD,EAAQ,EAAGA,EAAQH,EAAU9nI,OAAQioI,IAAS,CACnD,IAAMx+D,EAAMq+D,EAAUG,GAAOl3G,SACxBi3G,EAAS/jI,IAAKwlE,EAAYyrD,MAC3B1xD,EAAIykE,GAAS5C,GAAiC57D,GAEtD,CACJ,MACI,IAAK,IAAIy+D,EAAQ,EAAGA,EAAQJ,EAAU9nI,OAAQkoI,IAAS,CACnD,IAAMC,EAAML,EAAUI,GAAOn3G,SAC7ByyC,EAAI0kE,GAAS7C,GAAiC8C,EAClD,CAGJ,OAAO3kE,CACX,CCj3BO,IAAM4kE,GAAqB,WAI9B,SAAAA,EACoBxD,EACA1P,EAEAmT,EACAC,GAElB,KAVKC,aAAe,IAAIn9G,IAAqD,KACxEo9G,WAAqB,EAAK,KAGb5D,gBAAAA,EAAuD,KACvD1P,YAAAA,EAAkD,KAElDmT,SAAAA,EAAwG,KACxGC,UAAAA,CAEhB,CAAC,IAAAhR,EAAA8Q,EAAA3oI,UA8HJ,OA9HI63H,EAELmR,SAAA,SACIC,EACAC,GAEA,IAAMC,EAAgBF,EAAuBvoI,KAAK+0H,aAC5C3nG,EAAKi2G,GAAmBrjI,KAAKooI,aAAcK,GAAO,IAAM,KAW9D,OAVY,IAAI1nI,SAAmC,CAACqH,EAAS+C,KACzD,IAAMm1D,EAA6C,CAC/CioE,yBACAC,WACApgI,UACA+C,UAEJu3H,GAAet1G,GAAIxqB,KAAK09D,GACxBtgE,KAAK0oI,YAAY,GAGzB,EAACvR,EAEKuR,WAANh7G,iBACI,IACuB,IAAnB1tB,KAAKqoI,WACsB,IAA3BroI,KAAKooI,aAAa/9G,KAFtB,CAOArqB,KAAKqoI,WAAY,EACjB,IAAMV,EAAuC,GAMvCgB,EAAY3oI,KAAKooI,aACvBpoI,KAAKooI,aAAe,IAAIn9G,UAClBlqB,QAAQoL,IACV/M,MAAMyC,KAAK8mI,EAAUniH,WAChBjjB,KAAImqB,UAA2B,IAAnBk7G,EAAQpoE,GAAMkM,EACvB,IAAMm8D,EAiHnB,SACHC,GAGA,IAAIzmE,EAASymE,EAAK,GACdC,EAAuB9E,GAAoB5hE,EAAOwzD,MAQtD,OAPAiT,EAAKhoI,SAAQwoE,IACT,IAAMj/B,EAAS45F,GAAoB36D,EAAIusD,MACnCxrF,EAAS0+F,IACT1mE,EAASiH,EACTy/D,EAAuB1+F,EAC3B,IAEGg4B,CACX,CA/HoC2mE,CACZxoE,EAAMj9D,KAAIzD,GAAKA,EAAEyoI,0BAEjBt+B,EAAU4+B,EACd,IAAK,IAAMvoE,KAAQE,EACf,IACIypC,QAAgB3pC,EAAKkoE,SAMjBpvH,GAAM6wF,GAEd,CAAE,MAAOj5C,GACLsP,EAAKn1D,OAAO6lD,GACZsP,EAAKn1D,OAAS,OACdm1D,EAAKl4D,QAAU,MACnB,CAGJ,UACUpI,KAAKkoI,SAASj+B,EAAS4+B,EACjC,CAAE,MAAO73E,GAOL,YADAwP,EAAM1/D,SAAQw/D,GAAQA,EAAKn1D,OAAO6lD,IAEtC,CACA22E,EAAU/kI,KAAK,CACX4lE,SAAUqgE,EACVj4G,SAAUq5E,GACZ,KAGd,IAAMq8B,EAAqDqB,EAAU9nI,OAAS,QACpEG,KAAKykI,gBAAgBwB,UAAU0B,EAAW,qBAChD,CAAE1uH,MAAO,IA4Cb,aAzCMlY,QAAQoL,IACVs6H,GAAyCzmI,KAAK+0H,YAAa4S,EAAWrB,GAAa/iI,KAAIkW,IACnF,IAAMgvH,EAAQhvH,EAAOzZ,KAAK+0H,aAC1B/0H,KAAKmoI,UAAU1uH,GACD2pH,GAAkBuF,EAAWF,GACrC3nI,SAAQw/D,GAAQA,EAAKl4D,QAAQqR,IAAQ,KAKnD6sH,EAAYrtH,MACPnY,SAAQmY,IACL,ItEa6B+3C,EsEbvBy3E,EAAQxvH,EAAMyrH,WACdlkE,EAAQ4iE,GAAkBuF,EAAWF,GACrCQ,EAAazX,GAAoCv4G,GACvD,GAAIgwH,EAAY,CAEZ,IAAM77G,EAAKi2G,GAAmBrjI,KAAKooI,aAAcK,GAAO,IAAM,KAK9DjoE,EACKzsD,UACAjT,SAAQw/D,IACLA,EAAKioE,uBAAyB7F,GAAeuG,EAAWtC,cACxDjE,GAAet1G,GAAI8jB,QAAQovB,EAAK,GAE5C,KAAO,CAEH,IAAM4oE,EtEJf5X,GAAW,QAAS,CACvB/rH,KAAMksH,IAF+BzgE,EsEKoB/3C,GtEHXlM,QAC9C6jB,SAAUogC,EAAI0zE,WACdK,WAAY/zE,IsEEAwP,EAAM1/D,SAAQw/D,GAAQA,EAAKn1D,OAAO+9H,IACtC,KAERlpI,KAAKqoI,WAAY,EAOVroI,KAAK0oI,YAjGZ,CAkGJ,EAACT,CAAA,CAzI6B,GA6I3B,SAASkB,GACZC,GAmBA,OAjBY17G,UACR,IAAM27G,EjErJP,SAA8CC,GACjD,OAAOrqI,OAAOS,OAAO,CAAC,EAAG4pI,EAAS,CAC9BrT,WAAO/iE,EACP8iE,cAAU9iE,EACV2iE,UAAM3iE,GAEd,CiE+IoDq2E,CAA0BD,GACtED,EAAYrT,SAAWsT,EAAQtT,SAC/B,IAAMwT,QAAiBJ,EAAeC,GAChCI,EAA4CxqI,OAAOS,OAAO,CAAC,EAAG8pI,EAAU,CAC1EvT,MAAOqT,EAAQrT,MACfF,aAAcuT,EAAQvT,aACtBF,KAAMyT,EAAQzT,KACdG,SAAmE,qBAAjDwT,EAAoCxT,SACjDwT,EAAoCxT,SACrCsT,EAAQtT,WAKhB,MAHuC,qBAA5ByT,EAAezT,WACtByT,EAAezT,UAAW,GAEvByT,CAAc,CAG7B,CCvKO,IAAMC,GAAgB,CACzB,eAAI3U,GAEA,GAD0B/0H,KACf2pI,uBAGX,OAJ0B3pI,KAIb6kI,WAAWz0H,OAAO2kH,WACnC,EACA,WAAI6U,GACA,IAAMpwE,EAAoBx5D,KAC1B,GAAKw5D,EAAMmwE,uBAGX,OAAQnwE,EAAMqwE,MAAcrwE,EAAMu7D,YACtC,EACA,YAAImP,GAEA,GAD0BlkI,KACf2pI,uBAGX,OAJ0B3pI,KAIb6pI,MAAMhU,IACvB,EACA,YAAIiU,GAEA,GAD+B9pI,KACpB2pI,uBAGX,OAJ+B3pI,KAIlB4G,EAAE0tE,KACX/wE,IAAKpB,GAAWA,EAAE0nI,MAAM7T,WAEhC,EACA,aAAI+T,GACA,IAAMvwE,EAAoBx5D,KAE1B,OADmBw5D,EAAMqrE,WAAWe,SAASoE,uBAC3BC,eACdzwE,EAAMswE,SACNtwE,EAAM0wE,YAAYlD,QAClBxtE,EAAMqrE,WAAWe,SAEzB,EACA,WAAIoB,GAEA,GAD0BhnI,KACf2pI,uBAGX,OAJ0B3pI,KAIb6pI,MAAM7T,QACvB,EAEAkU,SAAAA,GACI,IAAMC,EAAgBnqI,KAAK6kI,WAAWuF,UAAUC,sBAAsBrqI,KAAK4pI,SAC3E,OAAO5pI,KAAK6kI,WAAWuF,UAAUE,oBAAoBH,EACzD,EAKA,KAAIvjI,GAEA,OADsC5G,KACzB6kI,WAAWj+H,EAAE0tE,KACtB9wE,IAAO+mI,IAAgBA,EAAYC,UACnChnI,IAAO+mI,GAAeA,EAAY7F,aAAe1kI,KAAK4pI,UACtDrmI,IAAIgnI,IAAeE,OCrF3BC,EDqF0DH,GCnF/BtV,aACfyV,EAAsBzV,aAEtByV,EAAsBC,qBAN/B,IACHD,CDqFsE,IAC9D/K,GALkC3/H,KAKlB6kI,WAAWuF,UAAUC,sBAAsBrqI,KAAK4pI,UAChEhK,IAAqB,CAACzpE,EAAMy0E,IAASz0E,EAAK0/D,OAAS+U,EAAK/U,OACxDtyH,IAAI+lI,GAAYtpI,KAAyB6kI,WAAWuF,UAAUE,oBAAoBhB,KAClF9H,GAAYmB,IAEpB,EACA,MAAIkI,GACA,IAAMrxE,EAAoBx5D,KAE1B,OADmBw5D,EAAMqrE,WAAWe,SAASoE,uBAC3BC,eACdzwE,EAAM5yD,EACN4yD,EAAM0wE,YAAYL,MAClBrwE,EAAMqrE,WAAWe,SAEzB,EAKAjO,IAAAA,CAAuB7mD,GACnB,GAAIu/C,GAAaC,YAAa,CAC1B,GAAIx/C,EAAKr4D,SAAS,UACd,MAAM64G,GAAW,OAAQ,CACrBxgD,SAIR,GAAIA,IAAS9wE,KAAK+0H,YACd,MAAMzD,GAAW,QAIrB,GAAItxH,KAAK6kI,WAAWz0H,OAAO+lH,YAAY19G,SAASq4D,GAC5C,MAAMwgD,GAAW,OAAQ,CACrBxgD,SASR,IALkB6jD,GACd30H,KAAK6kI,WAAWz0H,OAAO4kH,WACvBlkD,GAIA,MAAMwgD,GAAW,OAAQ,CACrBxgD,QAGZ,CAEA,OAAO9wE,KAAK4G,EACP0tE,KACG/wE,IAAI+rB,GAAQglG,GAAYhlG,EAAMwhD,KAC9B8uD,KAEZ,EACAhI,KAAAA,CAAwB9mD,GACpB,IAAM4b,EAAM1sF,KAAK23H,KAAK7mD,GAEtB,OADmB9wE,KAAK6kI,WAAWe,SAASoE,uBAC1BC,eACdv9C,EACA1sF,KAAKkqI,YAAY1oI,IAAIsvE,GACrB9wE,KAAK6kI,WAAWe,SAExB,EAKAliH,QAAAA,CAA2BotD,GACvB,IAAM0kD,EAAYb,GACd30H,KAAK6kI,WAAWz0H,OAAO4kH,WACvBlkD,GAEEnvE,EAAQ3B,KAAKwB,IAAIsvE,GACvB,IAAKnvE,EACD,OAAOkhI,GAEX,IAAKrN,EACD,MAAMlE,GAAW,OAAQ,CACrBxgD,SAGR,IAAK0kD,EAAUlsH,IACX,MAAMgoH,GAAW,OAAQ,CACrBxgD,OACA0kD,cAIR,IAAMsV,EAA8B9qI,KAAK6kI,WAAWe,SAASmF,YAAYvV,EAAUlsH,KACnF,IAAKwhI,EACD,MAAMxZ,GAAW,OAAQ,CACrBhoH,IAAKksH,EAAUlsH,IACfwnE,OACA0kD,cAIR,MAAuB,UAAnBA,EAAU3mH,KACHi8H,EAAcE,UAAUrpI,GAAO4kB,OAAO9e,MAAKkjB,IAC9C,IAAMsgH,EAAiBtgH,EAAIhW,SAC3B,OAAOvV,MAAMyC,KAAKopI,EAAe,IAG9BH,EAAcI,QAAQvpI,GAAO4kB,MAE5C,EAMA/kB,GAAAA,CAAsB2pI,GAClB,OAAO9H,GACHrjI,KAAKorI,eACLD,GACA,KACI,IAAME,EAAW/W,GAAYt0H,KAAK6pI,MAAOsB,GAGzC,GACwB,kBAAbE,GACM,OAAbA,GACAjsI,MAAMwB,QAAQyqI,GAEd,OAAOhb,GAAaE,sBAAsB8a,GAE9C,IAAM7xE,EAAQx5D,KACRsrI,EAAQ,IAAIlgH,MAMd2jG,GAAUsc,GACV,CACI7pI,GAAAA,CAAI0b,EAAQy4D,GACR,GAAwB,kBAAbA,EACP,OAAOz4D,EAAOy4D,GAElB,IAAM41D,EAAW51D,EAAS/6C,OAAO+6C,EAAS91E,OAAS,GACnD,GAAI81E,EAAS6D,SAAS,MAAO,CACzB,IAAMtnE,EAAMyjE,EAASz1E,MAAM,GAAI,GAC/B,OAAOs5D,EAAMo+D,MAAMnE,GAAS0X,EAAU,IAAMj5H,GAChD,CAAO,GAAiB,MAAbq5H,EAAkB,CACzB,IAAM5rE,EAAMgW,EAASz1E,MAAM,GAAI,GAC/B,OAAOs5D,EAAMm+D,KAAKlE,GAAS0X,EAAU,IAAMxrE,GAC/C,CAAO,GAAiB,MAAb4rE,EAAkB,CACzB,IAAM9qE,EAAMkV,EAASz1E,MAAM,GAAI,GAC/B,OAAOs5D,EAAM91C,SAAS+vG,GAAS0X,EAAU,IAAM1qE,GACnD,CACI,OAAOjH,EAAMh4D,IAAIiyH,GAAS0X,EAAU,IAAMx1D,GAElD,IAER,OAAO21D,CAAK,GAIxB,EAEAr/D,MAAAA,GACI,GADmCrsE,UAAAC,OAAA,QAAAqzD,IAAAtzD,UAAA,IAAAA,UAAA,GAS/B,OAAOywH,GAAaE,sBAAsBvwH,KAAK6pI,OAP/C,IAAMv6G,EAAOy/F,GAAU/uH,KAAK6pI,OAK5B,cAJQv6G,EAAaumG,YACbvmG,EAAaymG,oBACbzmG,EAAa0mG,gBACb1mG,EAAa2mG,MACd5F,GAAaE,sBAAsBjhG,EAIlD,EACAk8G,aAAAA,GAAwD,IAAxBC,EAAc7rI,UAAAC,OAAA,QAAAqzD,IAAAtzD,UAAA,IAAAA,UAAA,GAC1C,OAAOwZ,GAAMpZ,KAAKisE,OAAOw/D,GAC7B,EAOA32H,MAAAA,CAAO42H,GACH,MAAMlI,GAAc,SACxB,EACAmI,iBAAAA,CAAkBD,GACd,MAAMlI,GAAc,SACxB,EACAoI,UAAAA,CAAWF,GACP,MAAMlI,GAAc,OACxB,EACAqI,aAAAA,GACI,MAAMrI,GAAc,cACxB,EACAsI,aAAAA,GACI,MAAMtI,GAAc,cACxB,EACAuI,cAAAA,GACI,MAAMvI,GAAc,cACxB,EACA,mBAAIwI,GACA,MAAMxI,GAAc,cACxB,EAEA,YAAMzuH,CAEFk3H,EAEAh4G,GAEA,IAAM40G,EAAU7oI,KAAK6pI,MACf5/B,QAA2Ck/B,GAAwC8C,EAAxC9C,CAA0DN,GAC3G,OAAO7oI,KAAKksI,UAAUjiC,EAAS4+B,EACnC,EAMAsD,iBAAAA,CAEIF,EAEAh4G,GAEA,OAAOj0B,KAAK6kI,WAAWuH,sBAAsB9D,SACzCtoI,KAAK6pI,MACLV,GAA6B8C,IAC/BxkI,MAAKgS,GAAUzZ,KAAK6kI,WAAWuF,UAAUE,oBAAoB7wH,IACnE,EAEA4yH,KAAAA,CAEIA,GAEA,IAAMxD,EAAU7oI,KAAK6pI,MACf5/B,EAAU7wF,GAAMyvH,GAMtB,OALA5pI,OACKunB,QAAQ6lH,GACRvrI,SAAQ4rE,IAAY,IAAV/pE,EAAGH,GAAEkqE,EACXu9B,EAAgBtnG,GAAKH,CAAC,IAExBxC,KAAKksI,UAAUjiC,EAAS4+B,EACnC,EAKAyD,gBAAAA,CAEID,GAEA,OAAOrsI,KAAKmsI,mBAAmB7C,IAC3BrqI,OACKunB,QAAQ6lH,GACRvrI,SAAQy3E,IAAY,IAAV51E,EAAGH,GAAE+1E,EACX+wD,EAAgB3mI,GAAKH,CAAC,IAExB8mI,IAEf,EAMA,eAAM4C,CAEFjiC,EACA4+B,GAKA,GAHA5+B,EAAU8kB,GAAU9kB,GAGhBjqG,KAAK6pI,MAAM7T,SACX,MAAM1E,GAAW,QAAS,CACtBjoH,GAAIrJ,KAAK4pI,QACTh5G,SAAU5wB,aAGZusI,GAA0BvsI,KAAK6kI,WAAY56B,EAAS4+B,GAC1D,IAAMlB,EAAY,CAAC,CACfn/D,SAAUqgE,EACVj4G,SAAUq5E,IAERq8B,QAAoBtmI,KAAK6kI,WAAWJ,gBAAgBwB,UAAU0B,EAAW,yBAEzE6E,EAAUlG,EAAYrtH,MAAM,GAIlC,OAHA2rH,GAA2B5kI,KAAK6kI,WAAY7kI,KAAK4pI,QAAS3/B,EAASuiC,SAE7DxsI,KAAK6kI,WAAW4H,UAAU,OAAQ,OAAQxiC,EAASjqG,MAClDA,KAAK6kI,WAAWuF,UAAUE,oBAC7B7D,GACIzmI,KAAK6kI,WAAWz0H,OAAO2kH,YACvB4S,EACArB,GACF,GAEV,EAOA9tH,MAAAA,GACI,IAAMqsH,EAAa7kI,KAAK6kI,WACxB,GAAI7kI,KAAKgnI,QACL,OAAOjmI,QAAQoK,OAAOmmH,GAAW,QAAS,CACtC1gG,SAAU5wB,KACVqJ,GAAIrJ,KAAK4pI,WAIjB,IACI8C,EADEC,EAAc5d,GAAU/uH,KAAK6pI,OAEnC,OAAOhF,EAAW4H,UAAU,MAAO,SAAUE,EAAa3sI,MACrDyH,MAAKimB,UACFi/G,EAAY3W,UAAW,EACvB,IAAM2R,EAAY,CAAC,CACfn/D,SAAUxoE,KAAK6pI,MACfj5G,SAAU+7G,IAERrG,QAAoBzB,EAAWJ,gBAAgBwB,UAAU0B,EAAW,sBACpE6E,EAAUlG,EAAYrtH,MAAM,GAElC,OADA2rH,GAA2BC,EAAY7kI,KAAK4pI,QAAS+C,EAAaH,GAC3D/F,GACHzmI,KAAK6kI,WAAWz0H,OAAO2kH,YACvB4S,EACArB,GACF,EAAE,IAEP7+H,MAAMq4E,IACH4sD,EAAiB5sD,EACV9/E,KAAK6kI,WAAW4H,UAAU,OAAQ,SAAUE,EAAa3sI,SAEnEyH,MAAK,IACKzH,KAAK6kI,WAAWuF,UAAUE,oBAAoBoC,IAEjE,EACAE,iBAAAA,GACI,OAAO5sI,KAAKmsI,mBAAkBz+G,gBACpB1tB,KAAK6kI,WAAW4H,UAAU,MAAO,SAAUnD,EAAStpI,MAC1DspI,EAAQtT,UAAW,EACZsT,KACR7hI,MAAKimB,gBACE1tB,KAAK6kI,WAAW4H,UAAU,OAAQ,SAAUI,EAAOhD,MAAOgD,GACzDA,IAEf,EACAvvF,OAAAA,GACI,MAAMg0E,GAAW,QACrB,GAGG,SAASwb,KACZ,IAAM/oI,EAAc,SAEhB8gI,EACAyE,GAEAtpI,KAAK6kI,WAAaA,EAGlB7kI,KAAK6pI,MAAQP,EACbtpI,KAAKorI,eAAiB,IAAIngH,IAM1BjrB,KAAK2pI,wBAAyB,CAClC,EAEA,OADA5lI,EAAYzE,UAlBiCM,UAAAC,OAAA,QAAAqzD,IAAAtzD,UAAA,GAAAA,UAAA,GAAG8pI,GAmBzC3lI,CACX,CAiBO,SAASwoI,GACZ1H,EACA56B,EACA4+B,GAkBA,OAVA5+B,EAAQgsB,MAAQh3H,OAAOS,OACnB,CAAC,EACDmpI,EAAQ5S,MACRhsB,EAAQgsB,OAIR5F,GAAaC,aACbuU,EAAWz0H,OAAOgnH,eAAeyR,EAAS5+B,GAEvC46B,EAAW4H,UAAU,MAAO,OAAQxiC,EAAS4+B,EACxD,CE7fA,IAAAkE,GAAA,SAAAxzE,GACE,SAAAwzE,EAAoB3iI,GAApB,IAAAovD,EACED,EAAA/5D,KAAA,OAAO,YADWg6D,EAAApvD,OAAAA,GAEpB,CAyBF,OA5BwC+sD,EAAA41E,EAAAxzE,GAKtCt6D,OAAAsC,eAAIwrI,EAAAztI,UAAA,QAAK,KAAT,WACE,OAAOU,KAAKmtB,UACd,kCAGU4/G,EAAAztI,UAAAqtB,WAAV,SAAqBiyC,GACnB,IAAMX,EAAe1E,EAAAj6D,UAAMqtB,WAAUntB,KAAC,KAAAo/D,GAEtC,OADCX,EAAajxC,QAAU4xC,EAAWl6D,KAAK1E,KAAKoK,QACtC6zD,CACT,EAEA8uE,EAAAztI,UAAA6tB,SAAA,WACQ,IAAAisC,EAAoCp5D,KAAlCqgI,EAAQjnE,EAAAinE,SAAEC,EAAWlnE,EAAAknE,YAAEl2H,EAAMgvD,EAAAhvD,OACrC,GAAIi2H,EACF,MAAMC,EAGR,OADAtgI,KAAKygI,iBACEr2H,CACT,EAEA2iI,EAAAztI,UAAAoF,KAAA,SAAK/C,GACH43D,EAAAj6D,UAAMoF,KAAIlF,KAAC,KAACQ,KAAKoK,OAASzI,EAC5B,EACForI,CAAA,CA5BA,CAAwC5M,ICc3B6M,GAA6B3U,IAAiB,SAAC9+D,GAAW,kBACrEA,EAAOv5D,MACPA,KAAKuF,KAAO,aACZvF,KAAKwF,QAAU,yBACjB,CAJuE,ICyChE,IAAMg0H,GAAQ,IAAI37D,IAAkB,SAACe,GAAe,OAAAA,EAAWxyC,UAAX,IC3DpD,MAEM6gH,GAAoC3xG,IAC7CA,EAAM4xG,gBAAgBh8F,QAAQ5V,EAAMivG,YAAYjhE,KAC5ChuC,EAAM6xG,gBACN7xG,EAAM6xG,eAAe1rI,IACjB65B,EAAMivG,YAAYlhI,GAClBiyB,EAAMivG,YAAYjhE,MAIjB8jE,GAAmC9xG,IAC5CA,EAAM4xG,gBAAgBtqI,KAAK04B,EAAMivG,YAAYjhE,KACzChuC,EAAM6xG,gBACN7xG,EAAM6xG,eAAe1rI,IACjB65B,EAAMivG,YAAYlhI,GAClBiyB,EAAMivG,YAAYjhE,MAIjB+jE,GAAwC/xG,IACjD,MAAMtpB,EAAQspB,EAAM4xG,gBAAgBlvH,QAChCsd,EAAM6xG,gBAAkBn7H,GACxBspB,EAAM6xG,eAAej4H,OACjBlD,EAAMspB,EAAMmnD,YAAYvrE,cAKvBo2H,GAAuChyG,IAChD,MAAM1hB,EAAO0hB,EAAM4xG,gBAAgBn/H,MAC/ButB,EAAM6xG,gBAAkBvzH,GACxB0hB,EAAM6xG,eAAej4H,OACjB0E,EAAK0hB,EAAMmnD,YAAYvrE,cAyBtBq2H,GAAuCjyG,IAC5CA,EAAM6xG,gBACN7xG,EAAM6xG,eAAej4H,OACjBomB,EAAMivG,YAAYlhI,IAK1B,MAAMugI,EAAUtuG,EAAMmnD,YAAYvrE,WAC5BxB,EAAU4lB,EAAM4xG,gBACtB,IAAK,IAAIptI,EAAI,EAAGA,EAAI4V,EAAQ7V,OAAQC,IAAK,CAGrC,GAFa4V,EAAQ5V,GAEZ8pI,KAAatuG,EAAMivG,YAAYlhI,GAAI,CACxCqM,EAAQvS,OAAOrD,EAAG,GAClB,SA8CC0tI,GAA6ClyG,IACtD,MAAMmtG,EAAQntG,EAAMivG,YAAYlhI,GAC1BigE,EAAMhuC,EAAMivG,YAAYjhE,IAC9B,GAAIhuC,EAAM6xG,eAAgB,CAEtB,GAAI7xG,EAAM6xG,eAAerpI,IAAI2kI,GAKzB,OAGJntG,EAAM6xG,eAAe1rI,IACjBgnI,EACAn/D,OAED,CAMH,GALuBhuC,EAAM4xG,gBAAgBniH,MAAM5oB,GAAWA,EAAEm5B,EAAMmnD,YAAYvrE,cAAgBuxH,IAM9F,QCjJL,SAA4Br8D,EAAO9L,EAAMmtE,EAAiBC,GAC/D,IAgBIC,EAhBA9tI,EAASusE,EAAMvsE,OACf+tI,EAAO/tI,EAAS,EAChBguI,EAAM,EAKV,GAAe,IAAXhuI,EAEF,OADAusE,EAAMxpE,KAAK09D,GACJ,EAQT,KAAOotE,GAAOE,GAKRH,EADJE,EAAavhE,EADbyhE,EAAMH,GAAOE,EAAOF,GAAO,IAEKptE,IAAS,EAEvCotE,EAAMG,EAAM,EAGZD,EAAOC,EAAM,EAGbJ,EAAgBE,EAAYrtE,IAAS,GACvCutE,IAMFzhE,EAAMjpE,OAAO0qI,EAAK,EAAGvtE,EAEvB,CD6GIwtE,CACIxyG,EAAM4xG,gBACN5jE,EACAhuC,EAAMmnD,YAAYsrD,eAClB,EACH,EE/HQC,GAAkC,CAC3C,YACA,cACA,aACA,kBACA,iBACA,wBACA,wBACA,yBACA,uBACA,iBACA,kBACA,cACA,uBACA,wCACA,oBACA,iBAISC,GAET,CACAC,UFhD2CC,MEiD3ClB,YAAW,GACXG,WAAU,GACVC,gBAAe,GACfC,eAAc,GACdc,sBFfuD9yG,IACvD+xG,GAAgB/xG,GAChB8xG,GAAW9xG,EAAM,EEcjB+yG,sBFXuD/yG,IACvDgyG,GAAehyG,GACf2xG,GAAY3xG,EAAM,EEUlBgzG,uBFPwDhzG,IACxD+xG,GAAgB/xG,GAChB2xG,GAAY3xG,EAAM,EEMlBizG,qBFHsDjzG,IACtDgyG,GAAehyG,GACf8xG,GAAW9xG,EAAM,EEEjBiyG,eAAc,GACdiB,gBFoBiDlzG,IAEjD,MAAMguC,EAAMhuC,EAAMivG,YAAYjhE,IACxBsgE,EAAUtuG,EAAMmnD,YAAYvrE,WAC5BxB,EAAU4lB,EAAM4xG,gBACtB,IAAK,IAAIptI,EAAI,EAAGA,EAAI4V,EAAQ7V,OAAQC,IAAK,CAGrC,GAFa4V,EAAQ5V,GAEZ8pI,KAAatuG,EAAMivG,YAAYlhI,GAAI,CACxCqM,EAAQ5V,GAAKwpE,EACThuC,EAAM6xG,gBACN7xG,EAAM6xG,eAAe1rI,IACjB65B,EAAMivG,YAAYlhI,GAClBigE,GAGR,SEnCRmlE,YF6C6CnzG,IAC7C,MAAMozG,EAAa,CACfpoC,IAAK,cAAe,IAAIpgE,MAAOyoG,WAEnCrzG,EAAM4xG,gBAAgBrtI,OAAS,EAC/By7B,EAAM4xG,gBAAgBtqI,KAAK8rI,GACvBpzG,EAAM6xG,iBACN7xG,EAAM6xG,eAAeh4H,QACrBmmB,EAAM6xG,eAAe1rI,IACjBitI,EAAWpoC,IACXooC,KEtDRlB,qBAAoB,GACpBoB,sCF8FuEtzG,IACvEiyG,GAAejyG,GACfkyG,GAAqBlyG,EAAM,EE/F3BuzG,kBFkGmDV,IACnD,MAAM,IAAI5rI,MAAM,2DAA2D,EElG3EusI,cFqG+CX,IAC/C,MAAM,IAAI5rI,MAAM,8CAA8C,IG1IlE,WAAkC,IAAlB1C,EAAAD,UAAAC,OAAA,QAAAqzD,IAAAtzD,UAAA,GAAAA,UAAA,GAAiB,EACzB6Z,EAAS,GACb,MAAMs1H,EAAa,iEAEnB,IAAK,IAAIjvI,EAAI,EAAGA,EAAID,EAAQC,IACxB2Z,GAAUs1H,EAAWn0G,OAAOthB,KAAK46C,MAFZ66E,GAEkBz1H,KAAK82B,UAGpD,CAEqB4+F,CAAO,GA2EtB,SAAUC,GAAoBj3D,EAAak3D,GAC7C,MAAMC,EAAmB,GAEzB,IAAK,IAAIrvI,EAAI,EAAGsvI,EAAcp3D,EAAIn4E,OAAQC,EAAIsvI,EAAatvI,GAAKovI,EAC5DC,EAAOvsI,KAAKo1E,EAAIp/D,UAAU9Y,EAAGA,EAAIovI,IAErC,OAAOC,CACX,CC/FO,MAAME,GAAmB,GAQ1B,SAAUC,GAAgBr+F,GAE5B,OADiBA,EAAKgnC,WAAW,GACfo3D,EACtB,CCnCM,SAAUE,GAAeniH,GAC3B,OAAOA,EAAGA,EAAGvtB,OAAS,EAC1B,CAoHM,SAAUy0H,GAAY/nD,EAAauE,EAAyBnvE,GAK9D,GAJIvC,MAAMwB,QAAQkwE,KACdA,EAAOA,EAAKprE,KAAK,OAPnB,SAAmB/D,GACrB,MAAMkN,SAAclN,EACpB,OAAiB,OAAVA,IAA4B,WAATkN,GAA8B,aAATA,EACnD,CAOSgnE,CAAStJ,IAAkC,kBAATuE,EACnC,YAAiB5d,IAAVvxD,EAAsB4qE,EAAS5qE,EAG1C,MAAM4yH,EAAYzjD,EAAKxtE,MAAM,KAC7B,GAAyB,IAArBixH,EAAU10H,OACV,OAAO8B,EAGX,IAAK,IAAIyV,EAAQ,EAAGA,EAAQm9G,EAAU10H,OAAQuX,IAAS,CACnD,MAAMlF,EAAMqiH,EAAUn9G,GAQtB,QAAe87C,KALXqZ,EADA4nD,GAAc5nD,EAAer6D,GACpBkF,IAAUm9G,EAAU10H,OAAS,OAAIqzD,EAAY,KAE5CqZ,EAAer6D,KAGU,OAAXq6D,EAAiB,CAMzC,GAAIn1D,IAAUm9G,EAAU10H,OAAS,EAC7B,OAAO8B,EAGX,OAIR,YAAkBuxD,IAAXqZ,EAAuB5qE,EAAQ4qE,CAC1C,CAEA,SAAS4nD,GAAc5nD,EAAer6D,GAClC,GAAmB,kBAARA,GAAoB9S,MAAMwB,QAAQ2rE,GAAS,CAClD,MAAMn1D,EAAQlB,OAAOhT,SAASgP,EAAK,IACnC,OAAOgE,OAAOk+G,UAAUh9G,IAAUm1D,EAAOn1D,KAAWm1D,EAAOr6D,GAG/D,OAAO,CACX,CCxKO,MAAMs9H,GAAuCl0G,KACvCA,EAAMmnD,YAAY/uE,MAGlB+7H,GAAwCn0G,GACd,IAA5BA,EAAMmnD,YAAY/uE,MAGhBg8H,GAAsCp0G,MAC3CA,EAAMmnD,YAAYs6B,MAAQzhF,EAAMmnD,YAAYs6B,KAAO,GAO9C4yB,GAAuCr0G,GACT,WAAhCA,EAAMivG,YAAYtpE,UAGhB2uE,GAAuCt0G,GACT,WAAhCA,EAAMivG,YAAYtpE,UAGhB4uE,GAAuCv0G,GACT,WAAhCA,EAAMivG,YAAYtpE,UAIhB6uE,GAA8Cx0G,GAChDk0G,GAASl0G,IAAUA,EAAM4xG,gBAAgBrtI,QAAWy7B,EAAMmnD,YAAY/uE,MAGpEq8H,GAAgDz0G,IACzD,MAAM00G,EAAa10G,EAAMmnD,YAAYutD,WAC/B75E,EAAO76B,EAAMivG,YAAY/hE,SACzBc,EAAMhuC,EAAMivG,YAAYjhE,IAC9B,IAAKA,EACD,OAAO,EAEX,IAAKnT,EACD,OAAO,EAGX,IAAK,IAAIr2D,EAAI,EAAGA,EAAIkwI,EAAWnwI,OAAQC,IAAK,CACxC,MAAM4oE,EAAQsnE,EAAWlwI,GAGzB,GAFmBw0H,GAAYn+D,EAAMuS,KACnB4rD,GAAYhrD,EAAKZ,GAE/B,OAAO,EAGf,OAAO,CAAK,EAGHunE,GAA0C30G,IACnD,MAAMjyB,EAAKiyB,EAAMivG,YAAYlhI,GAC7B,GAAIiyB,EAAM6xG,eAAgB,CAEtB,OADY7xG,EAAM6xG,eAAerpI,IAAIuF,GAElC,CACH,MAAMugI,EAAUtuG,EAAMmnD,YAAYvrE,WAC5BxB,EAAU4lB,EAAM4xG,gBACtB,IAAK,IAAIptI,EAAI,EAAGA,EAAI4V,EAAQ7V,OAAQC,IAAK,CAErC,GADa4V,EAAQ5V,GACZ8pI,KAAavgI,EAClB,OAAO,EAGf,OAAO,IAIF6mI,GAAuC50G,IAChD,MAAMtpB,EAAQspB,EAAM4xG,gBAAgB,GACpC,SAAIl7H,GAASA,EAAMspB,EAAMmnD,YAAYvrE,cAAgBokB,EAAMivG,YAAYlhI,KAO9D8mI,GAAsC70G,IAC/C,MAAM1hB,EAAO21H,GAAYj0G,EAAM4xG,iBAC/B,SAAItzH,GAAQA,EAAK0hB,EAAMmnD,YAAYvrE,cAAgBokB,EAAMivG,YAAYlhI,KAQ5D+mI,GAAmD90G,IAC5D,MAAM66B,EAAO76B,EAAMivG,YAAY/hE,SAC/B,IAAKrS,EACD,OAAO,EAGX,MAAMnkD,EAAQspB,EAAM4xG,gBAAgB,GACpC,IAAKl7H,EACD,OAAO,EASX,GAAIA,EAAMspB,EAAMmnD,YAAYvrE,cAAgBokB,EAAMivG,YAAYlhI,GAC1D,OAAO,EAOX,OAJaiyB,EAAMmnD,YAAYsrD,eAC3B53E,EACAnkD,GAEU,CAAC,EAGNq+H,GAAiD/0G,IAC1D,MAAM66B,EAAO76B,EAAMivG,YAAY/hE,SAC/B,IAAKrS,EACD,OAAO,EAGX,MAAMv8C,EAAO21H,GAAYj0G,EAAM4xG,iBAC/B,IAAKtzH,EACD,OAAO,EAGX,GAAIA,EAAK0hB,EAAMmnD,YAAYvrE,cAAgBokB,EAAMivG,YAAYlhI,GACzD,OAAO,EAOX,OAJaiyB,EAAMmnD,YAAYsrD,eAC3B53E,EACAv8C,GAEU,CAAC,EAGN02H,GAAkDh1G,IAC3D,MAAMguC,EAAMhuC,EAAMivG,YAAYjhE,IAC9B,IAAKA,EACD,OAAO,EAGX,MAAMt3D,EAAQspB,EAAM4xG,gBAAgB,GACpC,IAAKl7H,EACD,OAAO,EAGX,GAAIA,EAAMspB,EAAMmnD,YAAYvrE,cAAgBokB,EAAMivG,YAAYlhI,GAC1D,OAAO,EAOX,OAJaiyB,EAAMmnD,YAAYsrD,eAC3BzkE,EACAt3D,GAEU,CAAC,EAGNu+H,GAAgDj1G,IACzD,MAAMguC,EAAMhuC,EAAMivG,YAAYjhE,IAC9B,IAAKA,EACD,OAAO,EAGX,MAAM1vD,EAAO21H,GAAYj0G,EAAM4xG,iBAC/B,IAAKtzH,EACD,OAAO,EAGX,GAAIA,EAAK0hB,EAAMmnD,YAAYvrE,cAAgBokB,EAAMivG,YAAYlhI,GACzD,OAAO,EAOX,OAJaiyB,EAAMmnD,YAAYsrD,eAC3BzkE,EACA1vD,GAEU,CAAC,EAIN42H,GAA0Cl1G,IACnD,MAAM66B,EAAO76B,EAAMivG,YAAY/hE,SAC/B,QAAKrS,GAGE76B,EAAMmnD,YAAYguD,aACrBt6E,EACH,EAGQu6E,GAA2Cp1G,IACpD,MAAMguC,EAAMhuC,EAAMivG,YAAYjhE,IAC9B,IAAKA,EACD,OAAO,EAKX,OAHYhuC,EAAMmnD,YAAYguD,aAC1BnnE,EAEM,EAIDqnE,GAA8Cr1G,GACf,IAAjCA,EAAM4xG,gBAAgBrtI,OCpIpB+wI,GAET,CACA,EAAGhB,GACH,EAAGC,GACH,EAAGF,GACH,EAAGH,GACH,EAAGC,GACH,EAAGC,GACH,EAAGiB,GACH,EAAGb,GACH,EAAGI,GACH,EAAGC,GACH,GAAIJ,GACJ,GAAIE,GACJ,GAAIG,GACJ,GAAIC,GACJ,GAAIC,GACJ,GAAIC,GACJ,GAAIC,GACJ,GAAIE,IC3FR,IAAIG,GACE,SAAUC,KAIZ,OAHKD,KACDA,GCNF,SACF74D,GAEA,MAAM+4D,EAAwD,IAAI9lH,IAI5D+lH,EAAoB,EAAqB,EADxB9tI,SAAS80E,EAAIp9C,OAAO,GAAKo9C,EAAIp9C,OAAO,GAAI,IAGzDq2G,EAAiBhC,GADDj3D,EAAIp/D,UAAU,EAAGo4H,GACmB,GAC1D,IAAK,IAAIlxI,EAAI,EAAGA,EAAImxI,EAAepxI,OAAQC,IAAK,CAC5C,MAAMszE,EAAQ69D,EAAenxI,GACvBuJ,EAAK+pE,EAAMx4C,OAAO,GAClBj5B,EAA2B2tI,GAAgBl8D,EAAMx4C,OAAO,IAC9Dm2G,EAAUtvI,IAAI4H,EAAI1H,EACtB,CAGA,MACMuvI,EAAqBjC,GADDj3D,EAAIp/D,UAAUo4H,EAAkBh5D,EAAIn4E,OAAS,GACL,GAClE,IAAK,IAAIC,EAAI,EAAGA,EAAIoxI,EAAmBrxI,OAAQC,IAAK,CAChD,MAAMszE,EAAQ89D,EAAmBpxI,GAC3BuJ,EAAK+pE,EAAMx4C,OAAO,GAClBu2G,EAAc/9D,EAAMx4C,OAAO,GAC3Bw2G,EAAch+D,EAAMx4C,OAAO,GAC3BrS,EAAQ+mH,GAAgBl8D,EAAMx4C,OAAO,IAG3C,IAAKm2G,EAAUjtI,IAAIqtI,GACf,MAAM,IAAI5uI,MAAM,wBAA0B4uI,GAE9C,IAAKJ,EAAUjtI,IAAIstI,GACf,MAAM,IAAI7uI,MAAM,wBAA0B6uI,GAG9C,MAEMrkG,EAAkB,CACpB1rC,EAAGknB,EACH,EAJUwoH,EAAUvvI,IAAI2vI,GAKxB,EAJUJ,EAAUvvI,IAAI4vI,IAM5BL,EAAUtvI,IAAI4H,EAAI0jC,EACtB,CAGA,MAAMskG,EAAQr5D,EAAI93E,OAAO,GACnBoxI,EAAQD,EAAMz2G,OAAO,GACrB22G,EAAQF,EAAMz2G,OAAO,GAU3B,MAN4B,CACxBv5B,EAJgBiuI,GAAgB+B,EAAMz2G,OAAO,IAK7C,EAJYm2G,EAAUvvI,IAAI8vI,GAK1B,EAJYP,EAAUvvI,IAAI+vI,GAQlC,CDrDoBC,CALY,g2DAOrBX,EACX,CAEO,MAAMY,GAAgBn2G,GEXvB,SACFu1G,EACA3U,EACA5gG,GAEA,IAAIo2G,EAA6Cb,EAC7Cc,EAAuBd,EAAUxvI,EACrC,OAAa,CAIT,GADAqwI,EAAcA,EAFQxV,EAAIyV,GAAcr2G,GPHjC,IAEA,KOIoB,kBAAhBo2G,GAAmD,kBAAhBA,EAC1C,OAAOA,EAEPC,EAAeD,EAAYrwI,CAEnC,CACJ,CFLWuwI,CACHd,KACAF,GACAt1G,GG6CF,SAAUu2G,GACZv2G,GAEA,MAAMw2G,EAAmBL,GACrBn2G,GAEJ,OAAO0yG,GAAkB8D,EAC7B,CC7DO,IAAMC,GAAY5jI,OAAOC,aAAa,OAWhC4jI,GAAY97H,OAAO+7H,iBASzB,SAASC,GACZ9hI,EACAuH,GAEA,IAAMw6H,EAAWx6H,EAAMw6H,SAEnB3/H,EAAsBpC,EAAOoC,QAAUpC,EAAOoC,QAAQtS,MAAM,GAAY,GACxEyX,EAAMP,QACN5E,EAAU,CAACmF,EAAMP,QAOrB,IAAMg7H,IAAmBz6H,EAAM9E,KAAKkY,MAAKsnH,GAA6C,SAAhCpzI,OAAO0V,OAAO09H,GAAW,KASzEC,EAAyB,IAAI5uI,IACnCzE,OAAOyB,KAAKyxI,GAAUrxI,SAAQmnE,IAC1B,IAAMsqE,EAAa5d,GAAsBvkH,EAAQ63D,GAE7CsqE,GACoB,YAApBA,EAAW1jI,MACX5P,OAAOK,UAAUC,eAAeC,KAAM2yI,EAAiBlqE,GAAY,QAEnEqqE,EAAuBj+H,IAAI4zD,EAC/B,IAIJ,IAMIuqE,EALEC,EADmB96H,EAAM9E,KAAKtP,KAAI8uI,GAAapzI,OAAOyB,KAAK2xI,GAAW,KAEvE7uI,QAAOpD,IAAMkyI,EAAuBxuI,IAAI1D,KACxCsF,KAAK,KAENgtI,GAAsB,EA2F1B,GApFAlgI,EAAQ1R,SAASsW,IACb,IAAIu7H,GAAe,EACfC,GAAiB,EACfC,EAA4Bz7H,EAAM7T,KAAIuvI,IACxC,IAAMC,EAAWZ,EAAiBW,GAC5BE,EAAYD,EAAU9zI,OAAOyB,KAAKqyI,GAAW,GAE/CE,EAAiC,CAAC,EAEjCF,GACAC,EAAUnzI,OAUXmzI,EAAUlyI,SAAQq7H,IACd,GAAI+W,GAAkBpvI,IAAIq4H,GAAW,CACjC,IACMgX,EA2MvB,SACHhX,EACAiX,GAEA,OAAQjX,GACJ,IAAK,MACD,MAAO,CACHkX,SAAUD,EACVE,OAAQF,EACRT,cAAc,EACdC,gBAAgB,GAExB,IAAK,OACD,MAAO,CACHU,OAAQF,EACRT,cAAc,GAEtB,IAAK,OACD,MAAO,CACHU,SAAUD,EACVR,gBAAgB,GAExB,IAAK,MACD,MAAO,CACHU,OAAQF,EACRT,cAAc,GAEtB,IAAK,MACD,MAAO,CACHU,SAAUD,EACVR,gBAAgB,GAExB,QACI,MAAM,IAAIrwI,MAAM,OAE5B,CA9O4CgxI,CAAoBpX,EADlB4W,EAAQ5W,IAE9B8W,EAAch0I,OAAOS,OAAOuzI,EAAaE,EAC7C,KAZJF,EAAc,CACVI,SAFaT,EAAiBZ,GAAYD,GAG1CuB,OAAQX,EAAeZ,GAAYC,GACnCY,gBAAgB,EAChBD,cAAc,GAiCtB,MApBoC,qBAAzBM,EAAYI,WACnBJ,EAAYI,SAAWrB,IAEO,qBAAvBiB,EAAYK,SACnBL,EAAYK,OAASvB,IAEiB,qBAA/BkB,EAAYL,iBACnBK,EAAYL,gBAAiB,GAEO,qBAA7BK,EAAYN,eACnBM,EAAYN,cAAe,GAG3BC,IAAmBK,EAAYL,iBAC/BA,GAAiB,GAEjBD,IAAiBM,EAAYN,eAC7BA,GAAe,GAGZM,CAAW,IAIhBO,EAAYX,EAAKtvI,KAAIkwI,GAAOA,EAAIJ,WAChCK,EAAUb,EAAKtvI,KAAIkwI,GAAOA,EAAIH,SAC9BK,EAAyB,CAC3Bv8H,QACAo8H,YACAE,UACAf,eACAC,iBACAgB,sBAAuBxB,GAAkBK,IAAkCr7H,EAAM5T,QAAOpD,IAAMkyI,EAAuBxuI,IAAI1D,KAAIsF,KAAK,KAClImuI,yBAA0BC,GAA2B18H,EAAOO,EAAMw6H,SAAUqB,EAAWE,IAErFK,EA2MP,SACH3jI,EACAuH,EACAg8H,GAEA,IAAII,EAAkB,EAChBC,EAAcryI,IACZA,EAAQ,IACRoyI,GAAoBpyI,EACxB,EAGEsyI,EAAuB,GAEvBC,EAAiBzkB,GAAsBkkB,EAAUH,WAAWW,GAAYA,IAAanC,IAAamC,IAAapC,KACrHiC,EAAWE,EAAiBD,GAE5B,IAAMG,EAAiB3kB,GAAsBkkB,EAAUH,WAAWW,GAAYA,IAAapC,IAAaoC,IAAanC,KACrHgC,EAAWI,EAAiBH,GAE5B,IAAMI,EAAgB5kB,GAAsBkkB,EAAUH,WAAW,CAACW,EAAUxkB,IACpEwkB,IAAaR,EAAUD,QAAQ/jB,KAMvCqkB,EAAWK,EAAgBJ,EAAuB,KAElD,IAAMK,EAA6BX,EAAUC,qBAAuB,EAAI,EAGxE,OAFAI,EAAWM,GAEJP,CACX,CA5OwBQ,CACZnkI,EACAuH,EACAg8H,IAIII,GAAWrB,GAEf/6H,EAAMP,SAENs7H,EAAqBqB,EACrBvB,EAAuBmB,EAC3B,KAMCnB,EACD,MAAMlhB,GAAW,MAAO,CACpB35G,UAIR,OAAO66H,CACX,CAEO,IAAMU,GAAoB,IAAIxvI,IAAI,CAAC,MAAO,MAAO,OAAQ,MAAO,SAC1D8wI,GAAgC,IAAI9wI,IAAI,CAAC,MAAO,MAAO,SACvD+wI,GAAgC,IAAI/wI,IAAI,CAAC,MAAO,MAAO,SAG7D,SAASowI,GACZ18H,EACA+6H,EACAqB,EACAE,GAQA,IACMgB,EADkBz1I,OAAOunB,QAAQ2rH,GAElCpnH,MAAK2hD,IAA4B,IAA1BzE,EAAWhH,GAAUyL,EACzB,OAAKt1D,EAAMqB,SAASwvD,IAGQhpE,OAAOunB,QAAQy6C,GACtCl2C,MAAKwtD,IAAA,IAAEjgB,EAAIluD,GAAOmuE,EAAA,OAAM26D,GAAkBpvI,IAAIw0D,EAAG,GAC5B,IAGlC,GAAIo8E,EACA,OAAO,EAMX,GAAIvC,EAASwC,MAAQxC,EAASyC,IAC1B,OAAO,EAMX,IAAMC,EAAiC,GACjCC,EAA0B,IAAIpxI,IACpC,IAAK,IAAOukE,EAAWhH,KAAchiE,OAAOunB,QAAQ2rH,GAAW,CAC3D,IAAK/6H,EAAMqB,SAASwvD,GAChB,OAAO,EAIX,IAAM8sE,EAAgB91I,OAAOyB,KAAKugE,GAAkBz9D,QAAO0O,GAAOsiI,GAA8B1wI,IAAIoO,KACpG,GAAI6iI,EAAcl1I,OAAS,EACvB,OAAO,EAGX,IAAMm1I,EAAkBD,EAAc,GAItC,GAHIC,GACAF,EAAwBzgI,IAAI4zD,GAER,QAApB+sE,EAA2B,CAC3B,GAAIH,EAAqBh1I,OAAS,EAC9B,OAAO,EAEPg1I,EAAqBjyI,KAAKoyI,EAElC,CACJ,CAGA,IAAMC,EAAiC,GACjCC,EAA0B,IAAIxxI,IACpC,IAAK,IAAOyxI,EAAWC,KAAcn2I,OAAOunB,QAAQ2rH,GAAW,CAC3D,IAAK/6H,EAAMqB,SAAS08H,GAChB,OAAO,EAIX,IAAME,EAAgBp2I,OAAOyB,KAAK00I,GAAkB5xI,QAAO0O,GAAOuiI,GAA8B3wI,IAAIoO,KACpG,GAAImjI,EAAcx1I,OAAS,EACvB,OAAO,EAGX,IAAMy1I,EAAiBD,EAAc,GAIrC,GAHIC,GACAJ,EAAwB7gI,IAAI8gI,GAET,QAAnBG,EAA0B,CAC1B,GAAIL,EAAqBp1I,OAAS,EAC9B,OAAO,EAEPo1I,EAAqBryI,KAAK0yI,EAElC,CACJ,CAOA,IAAIx1I,EAAI,EACR,IAAK,IAAMy1I,KAAan+H,EAAO,CAC3B,IAAK,IAAM3V,IAAO,CACdqzI,EACAI,GACD,CACC,IACKzzI,EAAIqC,IAAIyxI,IACT9zI,EAAI4oB,KAAO,EAEX,OAAO,EAEX5oB,EAAIyT,OAAOqgI,EACf,CAKA,GAHiB/B,EAAU1zI,KACZ4zI,EAAQ5zI,IAIfg1I,EAAwBzqH,KAAO,GAC/B6qH,EAAwB7qH,KAAO,EAGnC,OAAO,EAGXvqB,GACJ,CAEA,OAAO,CACX,CCjTO,MAAM01I,WAAmBjzI,OCGzB,MAEMkzI,GAAWv/H,OAAOwhE,iBAClBg+D,GAAWx/H,OAAO+7H,iBAEzB0D,GAAUvxI,OAAO,WACjBwxI,GAAoB32I,OAAO8qB,OAAO,IAAIxnB,MAAM,wDAC5CszI,GAAc52I,OAAOgC,eAAe,IACpC60I,GAAe72I,OAAOgC,eAAe,CAAC,GAEtC80I,GAAiB,8BACvB,MAAMC,IAEN,MAAMC,IAEN,MAAMC,GAAkB1zI,GACV,OAANA,EACOwzI,QACD9iF,IAAN1wD,EACOyzI,GACJzzI,EAAEuB,YAQPoyI,GAAyBx0I,IAC3B,MAAM7C,EAybH,SAAmB6C,GACtB,MAAMy0I,EAAQ,IAAI1yI,IAEZs0E,EAAOx1E,IACT,MAAMo7D,EAAOs4E,GAAe1zI,GAE5B,GAAI6zI,GAAkBvyI,IAAI85D,GACtB,OAAOy4E,GAAkB70I,IAAIo8D,EAAtBy4E,CAA4B7zI,GAEvC,MAAMqxB,EAAM+pC,IAAS3+D,OAAS,GAAK2+D,EAAKr4D,KAExC,GAAIyyH,GAAWx1H,EAAU,QACrB,MAAO,GAAPrC,OAAU0zB,EAAG,KAAA1zB,OAAI4S,KAAKC,UAAUxQ,GAAE,KAGtC,GAAI4zI,EAAMtyI,IAAItB,GACV,MAAMozI,GACVQ,EAAM/hI,IAAI7R,GACV,IAEI,GAAIo7D,IAASx+D,MACT,MAAO,IAAMoD,EAAEe,IAAIy0E,GAAKtyE,KAAK,KAAO,IAGxC,GAAIk4D,IAAS3+D,OAAQ,CAEjB,MAAOq3I,EAAS71I,GAAK81I,GAAa/zI,GAElC,GAAI5B,GAAQ4B,GAER,MAAO,GAAPrC,OAAU0zB,GAAG1zB,OAAG63E,EAAI,IAAIx1E,EAAG8zI,KAG/B9zI,EAAI8zI,CACR,CACA,MAAME,EAAUv3I,OAAOyB,KAAK8B,GAE5B,OADAg0I,EAAQ3jI,OACA,GAAA1S,OAAG0zB,EAAG,KACV2iH,EAAQjzI,KAAIZ,GAAK,GAAJxC,OAAOwC,EAAC,KAAAxC,OAAI63E,EAAIx1E,EAAEG,OAAO+C,KAAK,KAC3C,GACR,CAAC,QAEG0wI,EAAMlhI,OAAO1S,EACjB,GAGJ,OAAOw1E,EAAIr2E,EACf,CAxecqR,CAAUrR,GACpB,IAAI80I,EAAO,EACP32I,EAAIhB,EAAEe,OACV,KAAOC,GACH22I,GAASA,GAAQ,GAAKA,EAAQ33I,EAAEm5E,aAAan4E,GACjD,OAAO22I,IAAS,CAAC,EAGfC,GAAkB,IAAIhzI,IAAI,CAC5B,OACA,YACA,UACA,SACA,SACA,OACA,WAEEizI,GAAsB,IAAIjzI,IAAI,CAACuyI,GAAWD,GAAM34E,QAASlvD,OAAQ+H,SAEjEjS,GAAYzB,GAAMA,EAAEyB,WAEpB2yI,GAAsBp0I,GAAC,GAAArC,OAAQ+1I,GAAe1zI,GAAG+C,KAAI,KAAApF,OAAIqC,EAAEyB,WAAU,KAErEoyI,GAAoB,IAAIprH,IAAI,CAC9B,CAAC/U,OAAQjS,IACT,CAACo5D,QAASp5D,IACV,CAAC8uG,OAAQ9uG,IACT,CAACsxD,SAAUtxD,IACX,CAACG,OAAQH,IACT,CAACiiC,KAAO/jC,GAAMA,EAAE00I,eAChB,CAAC1oI,OAAQ4E,KAAKC,WACd,CAACgjI,GAAOv1I,GAAM,QACd,CAACw1I,GAAYx1I,GAAM,aACnB,CAACq2I,UAAWF,IACZ,CAACpuI,WAAYouI,IACb,CAACG,kBAAmBH,IACpB,CAACI,WAAYJ,IACb,CAACK,YAAaL,IACd,CAACM,WAAYN,IACb,CAACO,YAAaP,IACd,CAACQ,aAAcR,IACf,CAACS,aAAcT,MAOG,qBAAXr+H,QACP89H,GAAkB50I,IAAI8W,QAASlZ,GAAM,KAAOA,EAAE4E,SAAS,MAE9B,qBAAlBqzI,eACPjB,GAAkB50I,IAAI61I,cAAeV,IAEX,qBAAnBW,gBACPlB,GAAkB50I,IAAI81I,eAAgBX,IAG1C,MAAMY,GAAqB,CACvBC,KAAM,EACNvkF,UAAW,EACXhnB,OAAQ,EACR6gF,OAAQ,EACRxgD,OAAQ,EACRH,MAAO,EACPsrE,QAAS,EACT5rG,KAAM,EACN6rG,OAAQ,EACRC,SAAU,GASD70F,GAAUA,CAACliD,EAAGuB,KACnBvB,IAAM80I,KACN90I,OAAIqyD,GACJ9wD,IAAMuzI,KACNvzI,OAAI8wD,GACR,MAAO5xD,EAAGkB,GAAK,CAAC3B,EAAGuB,GAAGmB,KAAIlE,GAAKm4I,GAAmBK,GAAQx4I,GAAGmc,iBAC7D,OAAIla,IAAMkB,EACClB,EAAIkB,EAEL,IAANlB,GAAiB,IAANA,GAAiB,IAANA,EAClBT,EAAIuB,GACI,EACRvB,EAAIuB,EACG,EACJ,EAGPslI,GAAQ7mI,EAAGuB,GACJ,EACPvB,EAAIuB,GACI,EACRvB,EAAIuB,EACG,EAEJ,CAAC,EAEL,SAASqlF,GAAO9tB,EAAWn0D,GAC9B,IAAKm0D,EACD,MAAM,IAAI67E,GAAWhwI,EAC7B,CACA,MAOayoF,GAAaj5B,IACtB,GAAI2hF,GAAoB7yI,IAAIoyI,GAAelhF,IACvC,OAAOA,EACX,MAAMohF,EAAQ,IAAI1yI,IACZ0V,EAAS+0E,IACX,GAAIioD,EAAMtyI,IAAIqqF,GACV,MAAMynD,GACV,MAAMh4E,EAAOs4E,GAAe/nD,GAC5B,GAAIwoD,GAAoB7yI,IAAI85D,GACxB,OAAOuwB,EACX,IAEI,GAAIvtF,GAAQutF,GAER,OADAioD,EAAM/hI,IAAI85E,GACHA,EAAI5qF,IAAI6V,GAGnB,GAAIy8D,GAASsY,GAAM,CACfioD,EAAM/hI,IAAI85E,GACV,MAAMxjE,EAAM,CAAC,EACb,IAAK,MAAMhoB,KAAKwrF,EACZxjE,EAAIhoB,GAAKyW,EAAM+0E,EAAIxrF,IACvB,OAAOgoB,CACX,CACJ,CAAC,QAEGyrH,EAAMlhI,OAAOi5E,EACjB,CAEA,OAAIvwB,IAAS13B,MAAQ03B,IAASm1C,QApChBvwG,KAClB,MAAM62D,EAAQp6D,OAAOgC,eAAei1I,GAAe1zI,IACnD,OAAO62D,GAAwB,eAAfA,EAAM9zD,IAAqB,EAkCCuyI,CAAa3pD,GAC1C,IAAIvwB,EAAKuwB,GAEbA,CAAG,EAEd,OAAO/0E,EAAM47C,EAAI,EAMR6iF,GAAWr1I,GAAMuzI,GAAexvH,KAAKtnB,OAAOK,UAAU2E,SAASzE,KAAKgD,IAAI,GACxEu1I,GAAav1I,GAAmB,mBAANA,EAC1Bw1I,GAAYx1I,GAAmB,kBAANA,EAEzBy1I,GAAYz1I,IAAOS,MAAMT,IAAmB,kBAANA,EAGtC5B,GAAUxB,MAAMwB,QAChBi1E,GAAYrzE,IACrB,IAAKA,EACD,OAAO,EACX,MAAM62D,EAAQp6D,OAAOgC,eAAeuB,GACpC,OAAS62D,IAAUy8E,IAA0B,OAAVz8E,IA1LpB,oBA2LIp6D,OAAOK,UAAU2E,SAASzE,KAAKgD,EAAE,EAG3C01I,GAAgB11I,GAAMA,IAAMvD,OAAOuD,GACnC21I,GAAU31I,GAAMA,aAAa0jC,KAC7BkyG,GAAY51I,GAAMA,aAAauwG,OAC/BilB,GAAcx1H,GAAmB,oBAANA,EAC3B61I,GAAS71I,GAAY,OAANA,QAAoB0wD,IAAN1wD,EAC7BouE,GAAUA,CAAClU,EAAK4D,IAAS5D,EAAIjkD,SAAS6nD,GACtCg4E,GAAaA,CAAC57E,EAAK4D,KAAUsQ,GAAQlU,EAAK4D,GAE1C2d,GAAWt9E,GAAM03I,GAAM13I,IAC/Bq3I,GAASr3I,KAAOA,GAChBA,aAAavB,OAAsB,IAAbuB,EAAEd,QACxBg2E,GAASl1E,IAAgC,IAA1B1B,OAAOyB,KAAKC,GAAGd,OACtB04I,GAAa/1I,GAAMA,IAAMmzI,GAEzB6C,GAAe73I,GAAMA,aAAavB,MAAQuB,EAAI,CAACA,GAC/CmD,GAAMA,CAACkxD,EAAKQ,MAAWR,GAAO/1D,OAAOK,UAAUC,eAAeC,KAAKw1D,EAAKQ,GAC/EijF,GAAYA,CAACjqG,EAAMy3B,IAAW4P,GAASrnC,IAASqnC,GAAS5P,IAAYrlE,GAAQ4tC,IAAS5tC,GAAQqlE,GAS7F,SAASwP,GAAMv4D,EAAQ83C,EAAKh/B,GAI/B,GAFAA,EAAUA,GAAW,CAAEyhF,SAAS,GAE5B8gC,GAAUr7H,IAAWm7H,GAAMn7H,GAC3B,OAAO83C,EACX,GAAIujF,GAAUvjF,IAAQqjF,GAAMrjF,GACxB,OAAO93C,EAEX,IAAKu7H,GAAUv7H,EAAQ83C,GAAM,CACzB,GAAIh/B,EAAQ0iH,eACR,OAAO1jF,GAAO93C,EAClB,MAAM3a,MAAM,iDAChB,CAGA,GADAyzB,EAAQ0iH,gBAAiB,EACrB93I,GAAQsc,GAAS,CACjB,MAAMzD,EAASyD,EACToe,EAAQ05B,EACd,GAAIh/B,EAAQyhF,QAAS,CACjB,IAAI33G,EAAI,EACJkE,EAAI,EACR,KAAOlE,EAAI2Z,EAAO5Z,QAAUmE,EAAIs3B,EAAMz7B,QAClC4Z,EAAO3Z,GAAK21E,GAAMh8D,EAAO3Z,KAAMw7B,EAAMt3B,KAAMgyB,GAE/C,KAAOhyB,EAAIs3B,EAAMz7B,QACb4Z,EAAO7W,KAAKoyD,EAAIhxD,KAExB,MAEI20I,GAAKl/H,EAAQ6hB,EAErB,MAEI,IAAK,MAAM34B,KAAKqyD,EACZ93C,EAAOva,GAAK8yE,GAAMv4D,EAAOva,GAAIqyD,EAAIryD,GAAIqzB,GAG7C,OAAO9Y,CACX,CACA,SAAS07H,GAAel8E,GAA2C,IAAtCu6D,EAAYr3H,UAAAC,OAAA,QAAAqzD,IAAAtzD,UAAA,GAAAA,UAAA,GAAGu2I,GACxC,MAAM5yI,EAAM,IAAI0nB,IAYhB,OAXAyxC,EAAI57D,SAAQ,CAACb,EAAGH,KACZ,MAAMmC,EAAI42I,GAAS54I,EAAGg3H,GAClB1zH,EAAIO,IAAI7B,GACHsB,EAAI/B,IAAIS,GAAGoJ,MAAKrH,GAAK0jI,GAAQhrE,EAAI14D,GAAI/D,MACtCsD,EAAI/B,IAAIS,GAAGW,KAAK9C,GAIpByD,EAAI9B,IAAIQ,EAAG,CAACnC,GAChB,IAEGyD,CACX,CAQO,SAASu1I,GAAax9G,GAA6C,IAAtC27F,EAAYr3H,UAAAC,OAAA,QAAAqzD,IAAAtzD,UAAA,GAAAA,UAAA,GAAGu2I,GAE/C,GAAI76G,EAAMjwB,MAAKqxD,GAAqB,GAAdA,EAAI78D,SACtB,MAAO,GACX,GAAqB,IAAjBy7B,EAAMz7B,OACN,OAAOT,MAAMyC,KAAKy5B,GAGtB,MAAMy9G,EAwPH,SAAgBlU,EAAY3yB,GAA6B,IAAtB2tB,EAAUjgI,UAAAC,OAAA,QAAAqzD,IAAAtzD,UAAA,GAAAA,UAAA,GAAGmjD,GACnD,GAAIk7B,GAAQ4mD,GACR,OAAOA,EACX,MAAM33B,EAAS,IAAI9tG,MACbqa,EAAS,IAAIra,MACnB,IAAK,IAAIU,EAAI,EAAGA,EAAI+kI,EAAWhlI,OAAQC,IAAK,CACxC,MAAMk1D,EAAM6vE,EAAW/kI,GACjBoS,EAAMggG,EAAMl9C,EAAKl1D,GACnBu4I,GAAMnmI,GACNuH,EAAO7W,KAAKoyD,GAGZk4C,EAAOtqG,KAAK,CAACsP,EAAK8iD,GAE1B,CAGA,OADAk4C,EAAOr6F,MAAK,CAAChS,EAAGuB,IAAMy9H,EAAWh/H,EAAE,GAAIuB,EAAE,MAClCu2I,GAAKl/H,EAAQyzF,EAAO3pG,KAAKtD,GAAMA,EAAE,KAC5C,CA1QwBuZ,CAAO8hB,EAAM/3B,KAAI,CAAC1C,EAAGf,IAAM,CAACA,EAAGe,EAAEhB,WAAWgB,GAAMA,EAAE,KAElEm4I,EAAW19G,EAAMy9G,EAAY,GAAG,IAEhCx1I,EAAMq1I,GAAeI,EAAU/hB,GAE/BgiB,EAAO,IAAIhuH,IAEXvV,EAAU,IAAItW,MAgDpB,OA/CAmE,EAAIzC,SAAQ,CAAC0B,EAAGG,KACZ,MAAMu2I,EAAM12I,EAAEe,KAAIS,GAAKg1I,EAASh1I,KAC1B2mB,EAAMuuH,EAAI31I,KAAI9C,GAAK,IAEnB04I,EAASD,EAAI31I,KAAI9C,GAAK,CAACs4I,EAAY,GAAG,GAAI,KAChD,IAAIK,GAAQ,EACZ,IAAK,IAAIt5I,EAAI,EAAGA,EAAIw7B,EAAMz7B,OAAQC,IAAK,CACnC,MAAOu5I,EAAW54I,GAAKs4I,EAAYj5I,GAC7B48D,EAAMphC,EAAM+9G,GAIlB,GAHKJ,EAAKn1I,IAAIhE,IACVm5I,EAAKx3I,IAAI3B,EAAG84I,GAAel8E,IAE3Bu8E,EAAKz3I,IAAI1B,GAAGgE,IAAInB,GAAI,CACpB,MAAM22I,EAAML,EACPz3I,IAAI1B,GACJ0B,IAAImB,GACJY,KAAIS,GAAK04D,EAAI14D,KAElBo1I,EAAQF,EACH31I,KAAI,CAACzE,EAAGO,IAAMi6I,EAAIjuI,MAAK,CAACrM,EAAGkC,KAE5B,MAAMmB,EAAIsoB,EAAItrB,GAQd,OAPIqoI,GAAQ5oI,EAAGE,KACX2rB,EAAItrB,KAEAg6I,EAAYF,EAAO95I,GAAG,KACtB85I,EAAO95I,GAAK,CAACg6I,EAAWJ,EAAKz3I,IAAI1B,GAAG0B,IAAImB,GAAGzB,MAG5CmB,EAAIsoB,EAAItrB,EAAE,MAEhBgM,KAAKgyD,QACd,CAEA,IAAK+7E,EACD,MACR,CAGIA,GACAT,GAAKjjI,EAASiV,EACTpnB,KAAI,CAAClE,EAAGS,IACFT,IAAMi8B,EAAMz7B,OAAS,EAAI,CAACq5I,EAAIp5I,GAAIq5I,EAAOr5I,IAAM61I,KAErDnyI,QAAOnE,GAAKA,IAAMs2I,KAC3B,IAEGjgI,EACF7C,MAAK,CAAChS,EAAGuB,KACV,MAAOq4D,GAAKn5D,EAAGJ,IAAML,GACd69F,GAAKl8F,EAAGnD,IAAM+C,EACfzC,EAAIojD,GAAQzhD,EAAGkB,GACrB,OAAU,IAAN7C,EACOA,EACJojD,GAAQ7hD,EAAG7B,EAAE,IAEnBkE,KAAIf,GAAKA,EAAE,IACpB,CAOO,SAASi1G,GAAQ8hC,GAAe,IAAXC,EAAK55I,UAAAC,OAAA,QAAAqzD,IAAAtzD,UAAA,GAAAA,UAAA,GAAG,EAChC,MAAM88D,EAAM,IAAIt9D,MAYhB,OAXA,SAASq6I,EAASC,EAAIr6I,GAClB,IAAK,IAAIS,EAAI,EAAG68D,EAAM+8E,EAAG75I,OAAQC,EAAI68D,EAAK78D,IAClCc,GAAQ84I,EAAG55I,MAAQT,EAAI,GAAKA,EAAI,GAChCo6I,EAASC,EAAG55I,GAAIwZ,KAAKsM,KAAK,EAAGvmB,EAAI,IAGjCq9D,EAAI95D,KAAK82I,EAAG55I,GAGxB,CACA25I,CAASF,EAAIC,GACN98E,CACX,CAEA,MAAM65E,GAAgB50I,IAClB,IAAK03D,EAAOoZ,GAAS,CACjBxzE,OAAOgC,eAAeU,GACtB1C,OAAOmV,oBAAoBzS,IAG3Bg4I,EAActgF,EAElB,MAAQoZ,EAAM5yE,QAAUw5D,IAAUy8E,IAAgBz8E,IAAUw8E,IACxD8D,EAActgF,EACdoZ,EAAQxzE,OAAOmV,oBAAoBilD,GACnCA,EAAQp6D,OAAOgC,eAAeo4D,GAElC,MAAMp5D,EAAI,CAAC,EAEX,OADAwyE,EAAM3xE,SAAQ6B,GAAM1C,EAAE0C,GAAKhB,EAAMgB,KAC1B,CAAC1C,EAAG05I,EAAY,EAYpB,SAASjS,GAAQ7mI,EAAGuB,GACvB,MAAMo4D,EAAO,CAAC,CAAC35D,EAAGuB,IAClB,KAAOo4D,EAAK36D,OAAS,GAAG,CAGpB,IAFCgB,EAAGuB,GAAKo4D,EAAKzsD,MAEVlN,IAAMuB,EACN,SAEJ,MAAMw7D,EAAOs4E,GAAer1I,GAC5B,GAAI+8D,IAASs4E,GAAe9zI,IAAM41H,GAAWn3H,GACzC,OAAO,EAEX,GAAIw1I,GAAkBvyI,IAAI85D,GAA1B,CACI,MAAMoa,EAAMq+D,GAAkB70I,IAAIo8D,GAElC,GAAIoa,EAAIn3E,KAAOm3E,EAAI51E,GACf,OAAO,CAGf,KAPA,CASA,GAAIw7D,IAASx+D,OAASw+D,IAAS3+D,OAc/B,OAAO,EAdP,CACI,MAAM8xB,EAAK9xB,OAAOyB,KAAKG,GACjB81B,EAAK13B,OAAOyB,KAAK0B,GACvB,GAAI2uB,EAAGlxB,SAAW82B,EAAG92B,OACjB,OAAO,EACX,GAAI,IAAI6D,IAAIqtB,EAAG5wB,OAAOw2B,IAAKtM,MAAQ0G,EAAGlxB,OAClC,OAAO,EACX,IAAK,MAAM8C,KAAKouB,EACZypC,EAAK53D,KAAK,CAAC/B,EAAE8B,GAAIP,EAAEO,IAG3B,CAbA,CAiBJ,CAEA,OAAQ63D,EAAK36D,MACjB,CA6EO,SAASg5I,GAASl3I,EAAOs1H,GAE5B,OADAA,EAAeA,GAAgBkf,GAC3BkC,GAAM12I,GACC,KACJs1H,EAAat1H,GAAOsC,UAC/B,CAqCO,SAAS21I,GAAQ/U,EAAY3yB,GAA6C,IAAtC+kB,EAAYr3H,UAAAC,OAAA,QAAAqzD,IAAAtzD,UAAA,GAAAA,UAAA,GAAGu2I,GACtD,GAAItR,EAAWhlI,OAAS,EACpB,OAAO,IAAIorB,IAEf,MAAMw6C,EAAS,IAAIx6C,IAEbxR,EAAS,IAAIwR,IACnB,IAAK,IAAInrB,EAAI,EAAGA,EAAI+kI,EAAWhlI,OAAQC,IAAK,CACxC,MAAMk1D,EAAM6vE,EAAW/kI,GACjBoS,EAAMggG,EAAMl9C,EAAKl1D,GACjB22I,EAAOoC,GAAS3mI,EAAK+kH,GAC3B,GAAa,OAATwf,EACIh9H,EAAO3V,IAAI,MACX2V,EAAOjY,IAAI,MAAMoB,KAAKoyD,GAGtBv7C,EAAOhY,IAAI,KAAM,CAACuzD,QAGrB,CAGD,MAAM6kF,EAAcp0E,EAAO3hE,IAAI2yI,GACzBhxE,EAAOjkE,IAAIi1I,GAAM1rH,MAAKpoB,GAAK+kI,GAAQ/kI,EAAGuP,KACtC,KAEFmmI,GAAMwB,IAENpgI,EAAOhY,IAAIyQ,EAAK,CAAC8iD,IAEbyQ,EAAO3hE,IAAI2yI,GACXhxE,EAAOjkE,IAAIi1I,GAAM7zI,KAAKsP,GAGtBuzD,EAAOhkE,IAAIg1I,EAAM,CAACvkI,KAKtBuH,EAAOjY,IAAIq4I,GAAaj3I,KAAKoyD,EAErC,CACJ,CACA,OAAOv7C,CACX,CAGA,MAAMqgI,GAAiB,IAOhB,SAASnB,GAAKz7H,GAAiB,QAAAuiD,EAAA7/D,UAAAC,OAANwzG,EAAI,IAAAj0G,MAAAqgE,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJ0zC,EAAI1zC,EAAA,GAAA//D,UAAA+/D,GAChC,OAAIziD,aAAkB9d,MACXi0G,EAAKntG,QAAQ,CAACq5D,EAAK7C,KAEtB,IAAI58D,EAAIwZ,KAAKkK,KAAKk5C,EAAI78D,OAASi6I,IAC3BC,EAAQ,EACZ,KAAOj6I,KAAM,GACTV,MAAME,UAAUsD,KAAK7C,MAAMw/D,EAAK7C,EAAIx8D,MAAM65I,EAAOA,EAAQD,KACzDC,GAASD,GAEb,OAAOv6E,CAAG,GACVriD,GAIGm2F,EAAK7vG,OAAO00I,IAAchyI,QAAO,CAACq5D,EAAKe,KAC1CrhE,OAAOS,OAAO6/D,EAAKe,GACZf,IACRriD,EAEX,CA8BA,SAASiQ,GAAS6nC,EAAK9iD,GACnB,OAAOgmI,GAAaljF,GAAOA,EAAI9iD,QAAOghD,CAC1C,CAmBO,SAAS9qD,GAAQ4sD,EAAKm9E,EAAUn8G,GACnC,IAAIwjH,EAAQ,EAgCZ,MAAM//H,EAASi9H,GAAgB5yI,IAAI+zI,GAAQ7iF,GAAKx5C,eAC1Cw5C,EAhCN,SAASglF,EAAS/5I,EAAG6wE,GACjB,IAAInvE,EAAQ1B,EACZ,IAAK,IAAIH,EAAI,EAAGA,EAAIgxE,EAAKjxE,OAAQC,IAAK,CAClC,MAAM4oE,EAAQoI,EAAKhxE,GAGnB,GAFuC,OAAxB,QAAQymB,KAAKmiD,IAEd/mE,aAAiBvC,MAAO,CAIlC,GAAU,IAANU,GAAW05I,EAAQ,EACnB,MACJA,GAAS,EAET,MAAMS,EAAUnpE,EAAK5wE,MAAMJ,GAC3B6B,EAAQA,EAAMuE,QAAO,CAACq5D,EAAKe,KACvB,MAAM99D,EAAIw3I,EAAS15E,EAAM25E,GAGzB,YAFU/mF,IAAN1wD,GACA+8D,EAAI38D,KAAKJ,GACN+8D,CAAG,GACX,IACH,KACJ,CAIA,GAFI59D,EAAQwrB,GAASxrB,EAAO+mE,QAEdxV,IAAVvxD,EACA,KACR,CACA,OAAOA,CACX,CAGMq4I,CAAShlF,EAAKm9E,EAAS7uI,MAAM,MACnC,OAAOmW,aAAkBra,QAAsB,OAAZ42B,QAAgC,IAAZA,OAAqB,EAASA,EAAQkkH,aAjDjG,SAAgBx9E,EAAK88E,GACjB,GAAIA,EAAQ,EACR,OAAO98E,EACX,KAAO88E,KAA0B,IAAf98E,EAAI78D,QAClB68D,EAAMA,EAAI,GACd,OAAOA,CACX,CA4CUy9E,CAAO1gI,EAAQ+/H,GACf//H,CACV,CAQO,SAAS2gI,GAAaplF,EAAKm9E,EAAUn8G,GACxC,MAAMy8C,EAAQ0/D,EAAS7uI,MAAM,KACvB4O,EAAMugE,EAAM,GAEZ/tE,EAAO+tE,EAAMvyE,MAAM,GAAGwF,KAAK,KAC3B20I,EAAgC,OAAtB,QAAQ9zH,KAAKrU,GACvB+xE,EAAUxR,EAAM5yE,OAAS,EAC/B,IAAI4Z,EACA9X,EACJ,GAAIqzD,aAAe51D,MACf,GAAIi7I,EACA5gI,EAAS0T,GAAS6nC,EAAK9+C,OAAOhE,IAC1B+xE,IACAxqE,EAAS2gI,GAAa3gI,EAAQ/U,EAAMsxB,IAExCvc,EAAS,CAACA,OAET,CACDA,EAAS,GACT,IAAK,MAAM6mD,KAAQtL,EACfrzD,EAAQy4I,GAAa95E,EAAM6xE,EAAUn8G,IACrB,OAAZA,QAAgC,IAAZA,OAAqB,EAASA,EAAQskH,uBAC5CpnF,IAAVvxD,IACAA,EAAQg0I,IAEZl8H,EAAO7W,KAAKjB,SAEGuxD,IAAVvxD,GACL8X,EAAO7W,KAAKjB,EAGxB,KAEC,CAKD,GAJAA,EAAQwrB,GAAS6nC,EAAK9iD,GAClB+xE,IACAtiF,EAAQy4I,GAAaz4I,EAAO+C,EAAMsxB,SAExBk9B,IAAVvxD,EACA,OACJ8X,GAAsB,OAAZuc,QAAgC,IAAZA,OAAqB,EAASA,EAAQukH,cAAgBt7I,OAAOS,OAAO,CAAC,EAAGs1D,GAAO,CAAC,EAC9Gv7C,EAAOvH,GAAOvQ,CAClB,CACA,OAAO8X,CACX,CAMO,SAAS+gI,GAAcxlF,GAC1B,GAAIA,aAAe51D,MACf,IAAK,IAAIU,EAAIk1D,EAAIn1D,OAAS,EAAGC,GAAK,EAAGA,IAC7Bk1D,EAAIl1D,KAAO61I,GACX3gF,EAAI7xD,OAAOrD,EAAG,GAGd06I,GAAcxlF,EAAIl1D,SAIzB,GAAI+1E,GAAS7gB,GACd,IAAK,MAAMryD,KAAKqyD,EACRlxD,GAAIkxD,EAAKryD,IACT63I,GAAcxlF,EAAIryD,GAIlC,CACA,MAAM83I,GAAY,QAUX,SAASC,GAAK1lF,EAAKm9E,EAAUtvH,EAAImT,GACpC,MAAMy8C,EAAQ0/D,EAAS7uI,MAAM,KACvB4O,EAAMugE,EAAM,GACZ/tE,EAAO+tE,EAAMvyE,MAAM,GAAGwF,KAAK,KACjC,GAAqB,IAAjB+sE,EAAM5yE,QACFg2E,GAAS7gB,IAASp0D,GAAQo0D,IAAQylF,GAAU1yI,KAAKmK,KACjD2Q,EAAGmyC,EAAK9iD,OAGX,EAEgB,OAAZ8jB,QAAgC,IAAZA,OAAqB,EAASA,EAAQ2kH,aAAetC,GAAMrjF,EAAI9iD,MACpF8iD,EAAI9iD,GAAO,CAAC,GAGhB,MAAMouD,EAAOtL,EAAI9iD,GAEjB,IAAKouD,EACD,OAEJ,MAAMs6E,KAAsBnoE,EAAM5yE,OAAS,GAAK46I,GAAU1yI,KAAK0qE,EAAM,KAQjEnS,aAAgBlhE,QAAsB,OAAZ42B,QAAgC,IAAZA,OAAqB,EAASA,EAAQ6kH,gBAAkBD,EACtGt6E,EAAKx/D,SAAU/B,GAAM27I,GAAK37I,EAAG2F,EAAMme,EAAImT,KAGvC0kH,GAAKp6E,EAAM57D,EAAMme,EAAImT,EAE7B,CACJ,CAQO,SAAStB,GAASsgC,EAAKm9E,EAAUxwI,GACpC+4I,GAAK1lF,EAAKm9E,GAAW,CAAC7xE,EAAMpuD,KACxBouD,EAAKpuD,GAAO8lH,GAAWr2H,GAASA,EAAM2+D,EAAKpuD,IAAQvQ,CAAK,GACxD,CAAEg5I,YAAY,GACtB,CASO,SAASG,GAAY9lF,EAAKm9E,EAAUn8G,GACvC0kH,GAAK1lF,EAAKm9E,GAAW,CAAC7xE,EAAMpuD,KACxB,GAAIouD,aAAgBlhE,OAChB,GAAI,QAAQ2I,KAAKmK,GACbouD,EAAKn9D,OAAOD,SAASgP,GAAM,QAE1B,GAAI8jB,GAAWA,EAAQ6kH,aACxB,IAAK,MAAMxkB,KAAQ/1D,EACXuV,GAASwgD,WACFA,EAAKnkH,QAKnB2jE,GAASvV,WACPA,EAAKpuD,EAChB,GACA8jB,EACR,CACA,MAAM+kH,GAAwB,oBAMvB,SAASC,GAAWz1I,GACvB,OAAOw1I,GAAsBhzI,KAAKxC,EACtC,CAMO,SAASmrG,GAAUuqC,GAEtB,GAAIvE,GAAgB5yI,IAAI+zI,GAAQoD,GAAMz/H,eAClC,OAAO48H,GAAS6C,GAAQ,CAAEC,OAAQD,GAAS,CAAEE,IAAKF,GAGtD,GAAI/C,GAAa+C,GAAO,CACpB,MAAMG,EAAUH,EAEhB,IAAKh8I,OAAOyB,KAAK06I,GAAS/vI,KAAK2vI,IAC3B,MAAO,CAAEG,IAAKF,GAGlB,GAAIn3I,GAAIm3I,EAAM,UAAW,CACrB,MAAMI,EAAUp8I,OAAOS,OAAO,CAAC,EAAGu7I,GAGlC,OAFAI,EAAgB,OAAI,IAAItoC,OAAOkoC,EAAa,OAAGA,EAAe,iBACvDI,EAAkB,SAClBA,CACX,CACJ,CACA,OAAOJ,CACX,CC/5BO,IAAIK,GAwIAC,IAvIX,SAAWD,GAOPA,EAA0B,UAAI,YAO9BA,EAA4B,YAAI,cAKhCA,EAA6B,aAAI,eASjCA,EAA0B,UAAI,WACjC,CA7BD,CA6BGA,KAAmBA,GAAiB,CAAC,IAEjC,MAAME,GACTz3I,WAAAA,CAAY03I,EAEZz8H,EAAO08H,GAEiB,IAAxBC,EAAS/7I,UAAAC,OAAA,QAAAqzD,IAAAtzD,UAAA,GAAAA,UAAA,GAAGsmC,KAAKC,MACbnmC,KAAKy7I,MAAQA,EACbz7I,KAAKgf,MAAQA,EACbhf,KAAK07I,OAASA,EACd17I,KAAK27I,UAAYA,EACjB37I,KAAK8U,OAAOkK,EAAO08H,EACvB,CASA,WAAO9gD,CAAK5kE,EAASu6C,EAAMqrE,GACvB,OAAO5lH,aAAmBwlH,GACpB,IAAIA,GAAexlH,EAAQylH,MAAOpD,GAAMriH,EAAQu6C,MAAQA,EAAOv6C,EAAQu6C,KAAMtxE,OAAOS,OAAO,CAAC,EAAGs2B,EAAQ4lH,MAAOA,IAC9G,IAAIJ,GAAexlH,EAASu6C,EAAMqrE,EAC5C,CAEA9mI,MAAAA,CAAOy7D,EAAMqrE,GACT,IAAIxiF,EAQJ,OANAp5D,KAAKgf,MAAQuxD,EACbvwE,KAAK07I,OAASE,EACR38I,OAAOS,OAAO,CAAC,EAAGk8I,EAAO,CACvB70E,UAAW9nE,OAAOS,OAAO,CAAC,EAA0B,QAAtB05D,EAAKp5D,KAAK07I,cAA2B,IAAPtiF,OAAgB,EAASA,EAAG2N,UAAqB,OAAV60E,QAA4B,IAAVA,OAAmB,EAASA,EAAM70E,aAEzJ60E,EACC57I,IACX,CACA67I,UAAAA,GACI,OAAO58I,OAAO8qB,OAAO9qB,OAAOS,OAAOT,OAAOS,OAAO,CAAC,EAAGM,KAAKy7I,OAAQ,CAAExjG,QAAS6jG,GAAQj6I,KAAK7B,KAAKy7I,MAAMxjG,WACzG,CACA,QAAIs4B,GACA,OAAOvwE,KAAKgf,KAChB,CACA,SAAI48H,GACA,OAAO57I,KAAK07I,MAChB,CACA,SAAIK,GACA,OAAO/7I,KAAKy7I,MAAMM,KACtB,CACA,aAAIC,GACA,IAAI5iF,EACJ,OAA6B,QAArBA,EAAKp5D,KAAKy7I,aAA0B,IAAPriF,OAAgB,EAASA,EAAG4iF,SACrE,CACA,kBAAIC,GACA,IAAI7iF,EACJ,OAA8B,QAArBA,EAAKp5D,KAAKy7I,aAA0B,IAAPriF,OAAgB,EAASA,EAAG6iF,iBAAmBX,GAAeY,SACxG,CACA,iBAAIC,GACA,IAAI/iF,EACJ,OAA6B,QAArBA,EAAKp5D,KAAKy7I,aAA0B,IAAPriF,OAAgB,EAASA,EAAG+iF,aACrE,CACA,iBAAIC,GACA,IAAIhjF,EACJ,OAA6B,QAArBA,EAAKp5D,KAAKy7I,aAA0B,IAAPriF,OAAgB,EAASA,EAAGgjF,aACrE,CACA,oBAAIC,GACA,IAAIjjF,EACJ,OAA6B,QAArBA,EAAKp5D,KAAKy7I,aAA0B,IAAPriF,OAAgB,EAASA,EAAGijF,gBACrE,CACA,gBAAIplB,GACA,IAAI79D,EACJ,OAA6B,QAArBA,EAAKp5D,KAAKy7I,aAA0B,IAAPriF,OAAgB,EAASA,EAAG69D,YACrE,CACA,sBAAIqlB,GACA,IAAIljF,EACJ,OAA6B,QAArBA,EAAKp5D,KAAKy7I,aAA0B,IAAPriF,OAAgB,EAASA,EAAGkjF,kBACrE,CACA,uBAAIC,GACA,IAAInjF,EACJ,OAA6B,QAArBA,EAAKp5D,KAAKy7I,aAA0B,IAAPriF,OAAgB,EAASA,EAAGmjF,mBACrE,CACA,aAAIx1E,GACA,IAAI3N,EACJ,OAA6B,QAArBA,EAAKp5D,KAAKy7I,aAA0B,IAAPriF,OAAgB,EAASA,EAAG2N,SACrE,CACA,WAAI9uB,GACA,IAAImhB,EACJ,OAA6B,QAArBA,EAAKp5D,KAAKy7I,aAA0B,IAAPriF,OAAgB,EAASA,EAAGnhB,OACrE,EAMG,SAASukG,GAAYxmH,GACxB,OAAOA,aAAmBwlH,GACpBxlH,EAAQ6lH,aACR58I,OAAO8qB,OAAO9qB,OAAOS,OAAOT,OAAOS,OAAO,CAAEq8I,MAAO,MAAOK,eAAe,EAAMD,eAAe,EAAME,kBAAkB,EAAMJ,eAAgBX,GAAeY,WAAalmH,GAAU,CAAEiiB,SAAsB,OAAZjiB,QAAgC,IAAZA,OAAqB,EAASA,EAAQiiB,SAChP6jG,GAAQj6I,KAAiB,OAAZm0B,QAAgC,IAAZA,OAAqB,EAASA,EAAQiiB,SACvE6jG,GAAQlhD,KAAK,CAAC,KAChC,EAKA,SAAW2gD,GACPA,EAA0B,YAAI,cAC9BA,EAAyB,WAAI,aAC7BA,EAAuB,SAAI,WAC3BA,EAAyB,WAAI,aAC7BA,EAAoB,MAAI,QACxBA,EAAqB,OAAI,QAC5B,CAPD,CAOGA,KAAiBA,GAAe,CAAC,IAC7B,MAAMO,GACT/3I,WAAAA,CAAYq0D,GACRp4D,KAAKgzI,UAAY,CACb,CAACuI,GAAakB,aAAc,CAAC,EAC7B,CAAClB,GAAamB,YAAa,CAAC,EAC5B,CAACnB,GAAaoB,UAAW,CAAC,EAC1B,CAACpB,GAAaqB,YAAa,CAAC,EAC5B,CAACrB,GAAal1B,OAAQ,CAAC,EACvB,CAACk1B,GAAasB,QAAS,CAAC,GAE5B,IAAK,MAAOhuI,EAAMmkI,KAAc/zI,OAAOunB,QAAQ4xC,GAC3Cp4D,KAAK88I,aAAajuI,EAAMmkI,EAEhC,CACA,WAAOp4C,GACH,OAAO,IAAIkhD,GADAl8I,UAAAC,OAAA,QAAAqzD,IAAAtzD,UAAA,GAAAA,UAAA,GAAG,CAAC,EAEnB,CACA,WAAOiC,CAAKk7I,GACR,OAAO,IAAIjB,GAAQiB,EAAI/J,UAC3B,CACA8J,YAAAA,CAAajuI,EAAMupD,GACf,IAAK,MAAO7yD,EAAMsd,KAAO5jB,OAAOunB,QAAQ4xC,GAC/Bp4D,KAAKg9I,YAAYnuI,EAAMtJ,KACxBvF,KAAKgzI,UAAUnkI,GAAMtJ,GAAQsd,GAGrC,OAAO7iB,IACX,CAEAi9I,iBAAAA,CAAkB7kF,GACd,OAAOp4D,KAAK88I,aAAavB,GAAakB,YAAarkF,EACvD,CACA8kF,gBAAAA,CAAiB9kF,GACb,OAAOp4D,KAAK88I,aAAavB,GAAamB,WAAYtkF,EACtD,CACA+kF,WAAAA,CAAY/kF,GACR,OAAOp4D,KAAK88I,aAAavB,GAAal1B,MAAOjuD,EACjD,CACAglF,cAAAA,CAAehlF,GACX,OAAOp4D,KAAK88I,aAAavB,GAAaoB,SAAUvkF,EACpD,CACAilF,gBAAAA,CAAiBjlF,GACb,OAAOp4D,KAAK88I,aAAavB,GAAaqB,WAAYxkF,EACtD,CACAklF,YAAAA,CAAallF,GACT,OAAOp4D,KAAK88I,aAAavB,GAAasB,OAAQzkF,EAClD,CAEA4kF,WAAAA,CAAYnuI,EAAMtJ,GACd,OAAOsJ,KAAQ7O,KAAKgzI,WAAYhzI,KAAKgzI,UAAUnkI,GAAMtJ,IAAgB,IACzE,EAGJ,MAAMg4I,GAAiBzB,GAAQlhD,OAOxB,SAAS4iD,GAAa3uI,EAAMmkI,GAC/B,IAAK,MAAOztI,EAAMsd,KAAO5jB,OAAOunB,QAAQwsH,GAAY,CAChDvrD,GAAOuwC,GAAWn1G,IAAOm4H,GAAWz1I,GAAO,IAAFpF,OAAMoF,EAAI,8BACnD,MAAMk4I,EAAYT,GAAYnuI,EAAMtJ,EAAM,MAC1CkiF,IAAQg2D,GAAa56H,IAAO46H,EAAW,GAAFt9I,OAAKoF,EAAI,yBAAApF,OAAwB0O,EAAI,iEAC9E,CAEA,OAAQA,GACJ,KAAK0sI,GAAakB,YACdc,GAAeN,kBAAkBjK,GACjC,MACJ,KAAKuI,GAAamB,WACda,GAAeL,iBAAiBlK,GAChC,MACJ,KAAKuI,GAAaoB,SACdY,GAAeH,eAAepK,GAC9B,MACJ,KAAKuI,GAAaqB,WACdW,GAAeF,iBAAiBrK,GAChC,MACJ,KAAKuI,GAAal1B,MACdk3B,GAAeJ,YAAYnK,GAC3B,MACJ,KAAKuI,GAAasB,OACdU,GAAeD,aAAatK,GAGxC,CAcO,SAASgK,GAAYnuI,EAAMstH,EAAUnmG,GACxC,MAAQiiB,QAAS8kG,EAAKV,iBAAkB53F,GAAazuB,GAAW,CAAC,EAC3DnT,EAAKk6H,EAAMA,EAAIC,YAAYnuI,EAAMstH,GAAY,KACnD,OAAQt5G,GAAM4hC,EAAW84F,GAAeP,YAAYnuI,EAAMstH,GAAYt5G,CAC1E,CAMA,MAAM66H,GAAkB,CACpBC,OAAMA,CAACC,EAAMC,EAAO7nH,IACTA,EAAQu6C,KAEnButE,UAASA,CAAC9oF,EAAK6oF,EAAOnjI,IACXs6C,EAEX+oF,QAAAA,CAASH,EAAMC,EAAOnjI,GAEtB,EACAsjI,MAAKA,CAACJ,EAAMC,EAAO7nH,IACR,IAAIkQ,KAAKlQ,EAAQ2lH,YAU1BsC,GAAkB,CACpBC,OAAMA,CAAClpF,EAAK6oF,EAAOnjI,IACRs6C,EAEXmpF,OAAAA,CAAQP,EAAMC,EAAOnjI,GAErB,EACA0jI,SAAAA,CAAUppF,EAAKimF,EAAMjlH,GAEjB,IAAKlyB,GAAIm3I,EAAM,SACX,OAAOjmF,EACX,IAAIv7C,EACJ,IAAK,MAAOvH,EAAKwsB,KAAYz/B,OAAOunB,QAAQwuC,GACxC,GAAIkjF,GAAax5G,GAAU,CACvB,GAAIA,aAAmBt/B,MAAO,CAC1B,MAAMgtE,EAAQ,GACd,IAAK,IAAIiqD,KAAQ33F,EACTm3C,GAASwgD,KACTA,EAAOgoB,GAAOhoB,EAAM4kB,EAAMjlH,EAAQlhB,OAAOuhH,KAExCgiB,GAAMhiB,IACPjqD,EAAMxpE,KAAKyzH,GAGnB58G,EAAS2yD,CACb,MAEI3yD,EAAS4kI,GAAO3/G,EAASu8G,EAAMjlH,EAAQlhB,OAAO4pB,IAE9C25G,GAAM5+H,UACCu7C,EAAI9iD,GAGX8iD,EAAI9iD,GAAOuH,CAEnB,CAEJ,OAAOu7C,CACX,GAYG,SAASspF,GAAatpF,EAAKimF,EAAM9e,EAAUnmG,GAC9C,IAAIojC,EAEJ,MAAMmlF,EAAQ/C,GAAe5gD,KAAK5kE,EAASg/B,GAE3C,GAAIgmF,GADJ7e,EAAWA,GAAY,IACG,CAEtB,MAAMqiB,EAAiBxB,GAAYzB,GAAamB,WAAYvgB,EAAUnmG,GACtE,GAAIwoH,EACA,OAAOA,EAAexpF,EAAKimF,EAAMsD,GAErC,MAAME,EAAkBzB,GAAYzB,GAAakB,YAAatgB,EAAUnmG,GACxE,GAAIyoH,EASA,OAPMzpF,aAAe51D,QACjB41D,EAAMspF,GAAatpF,EAAKimF,EAAM,KAAMsD,GACpCtD,EAAO,MAGXxzD,GAAOzyB,aAAe51D,MAAO,IAAFe,OAAMg8H,EAAQ,+BAElCsiB,EAAgBzpF,EAAKimF,EAE5BsD,EAAMzpI,OAAO,KAAMypI,EAAM3C,QAG7B,MAAM,IAAIpG,GAAW,aAADr1I,OAAcg8H,EAAQ,uBAC9C,CAMA,GAAI6b,GAASiD,IAASA,EAAKp7I,OAAS,GAAiB,MAAZo7I,EAAK,GAAY,CAEtD,GAAIn3I,GAAIm6I,GAAiBhD,GACrB,OAAOA,EAGX,IAAIhjG,EAAUsmG,EAAMhuE,KAEpB,MAAM7T,EAAMu+E,EAAK33I,MAAM,KACvB,GAAIQ,GAAI45I,GAAiBhhF,EAAI,IAGzBzkB,EAAUylG,GAAgBhhF,EAAI,IAAI1H,EAAK,KAAMupF,GAC7CtD,EAAOA,EAAK/6I,MAAMw8D,EAAI,GAAG78D,OAAS,QAEjC,GAA2B,OAAvB68D,EAAI,GAAGx8D,MAAM,EAAG,GAAa,CAElC+3C,EAAUh5C,OAAOS,OAAO,CAAC,EAAG6+I,EAAMx3E,UAElC,CAAE/mE,KAAMg1D,GAA8B,QAAtBoE,EAAKmlF,EAAM3C,aAA0B,IAAPxiF,OAAgB,EAASA,EAAG2N,WAE1E,MAAM5M,EAASuC,EAAI,GAAGx8D,MAAM,GAC5BunF,GAAO3jF,GAAIm0C,EAASkiB,GAAS,8BAAFh6D,OAAgCg6D,IAC3D8gF,EAAOA,EAAK/6I,MAAM,EACtB,MAGI+6I,EAAOA,EAAK/6I,MAAM,GAEtB,MAAa,KAAT+6I,EACOhjG,EACJ7vC,GAAQ6vC,EAASgjG,EAC5B,CAEA,GAAIr6I,GAAQq6I,GACR,OAAOA,EAAK13I,KAAK+8D,GAASg+E,GAAatpF,EAAKsL,EAAM,KAAMi+E,KAEvD,GAAI1oE,GAASolE,GAAO,CACrB,MAAMxhI,EAAS,CAAC,EAChB,IAAK,MAAOvH,EAAKi8E,KAAQlvF,OAAOunB,QAAQy0H,GAIpC,GAHAxhI,EAAOvH,GAAOosI,GAAatpF,EAAKm5B,EAAKj8E,EAAKqsI,GAGtC,CAAChD,GAAamB,WAAYnB,GAAakB,aAAapxI,MAAKrM,KAAOg+I,GAAYh+I,EAAGkT,EAAK8jB,KAGpF,OADAyxD,GAAoC,IAA7BxoF,OAAOyB,KAAKu6I,GAAMp7I,OAAc,mCAAqCkT,KAAKC,UAAUioI,GAAQ,KAC5FxhI,EAAOvH,GAGtB,OAAOuH,CACX,CACA,OAAOwhI,CACX,CAQO,SAASoD,GAAOrpF,EAAKimF,EAAMjlH,GAC9B,MAAMvc,EAAS6kI,GAAatpF,EAAKimF,EAAM,KAAMjlH,GAC7C,OAAOlyB,GAAIm6I,GAAiBxkI,GACtBwkI,GAAgBxkI,GAAQu7C,EAAKimF,EAAMjlH,GACnCvc,CACV,CC1aO,SAASilI,GAAK/iH,GACjB,OAAOA,aAAkBgjH,GAAWhjH,EAAS,IAAIgjH,GAAShjH,EAC9D,CAoBA,SAASijH,GAASxyE,EAAOtsE,GACrB,MAAMuzG,EAAOjnC,EAAMlsE,MAAMJ,EAAI,GAC7BssE,EAAMjpE,OAAOrD,GACbV,MAAME,UAAUsD,KAAK7C,MAAMqsE,EAAOinC,EACtC,CAEA,MAAMwrC,GAAO,IAAIt8I,MAEjB,IAAIu8I,IACJ,SAAWA,GACPA,EAAOA,EAAY,IAAI,GAAK,MAC5BA,EAAOA,EAAe,OAAI,GAAK,SAC/BA,EAAOA,EAAa,KAAI,GAAK,OAC7BA,EAAOA,EAAa,KAAI,GAAK,MAChC,CALD,CAKGA,KAAWA,GAAS,CAAC,IA0DjB,MAAMH,GAQT56I,WAAAA,CAAY43B,GAIR,IAAIojH,EAKJ,GARA/+I,KAAKg/I,UAAY,GACjBh/I,KAAKi/I,cAAgB,GACrBj/I,KAAKk/I,QAAS,EAEVvjH,aAAkB45B,WAElB55B,EAAS,CAAEj3B,KAAMi3B,KA1FR17B,EA4FG07B,IA3FQ,kBAAN17B,IAAyB,OAANA,QAAoB,IAANA,OAAe,EAASA,EAAEyE,gBAAiB6wD,SA2FrE,CACrB,MAAM71C,EAAMic,EACZojH,EAAUA,KACN,MAAM9+I,EAAIyf,EAAIhb,OACd,GAAIzE,EAAE0E,KACF,MAAMk6I,GACV,OAAO5+I,EAAE0B,KAAK,CAEtB,MACK,GAAIg6B,aAAkBv8B,MAAO,CAC9B,MAAMkwB,EAAOqM,EACPtR,EAAOiF,EAAKzvB,OAClB,IAAIuX,EAAQ,EACZ2nI,EAAUA,KACN,GAAI3nI,EAAQiT,EACR,OAAOiF,EAAKlY,KAChB,MAAMynI,EAAI,CAElB,MACK,KAAMljH,aAAkB45B,UACzB,MAAM,IAAIigF,GAAW,mEAhHjC,IAAqBv1I,EAmHbD,KAAKm/I,QAjGb,SAAwBC,EAAQJ,EAAWtvI,GACvC,IAAI/K,GAAO,EACPyS,GAAS,EACTioI,EAAc,EAClB,OAAO,SAAUrgD,GAEb,IACIh/B,EAAO,MAAQr7D,GAAM,CACjB,IAAI1E,EAAIm/I,IACRhoI,IACA,IAAItX,GAAK,EACT,MAAMuqB,EAAO20H,EAAUn/I,OACvB,IAAIy/I,GAAY,EAChB,OAASx/I,EAAIuqB,GAAM,CACf,MAAM1qB,EAAIq/I,EAAUl/I,GACpB,OAAQH,EAAEu8C,QACN,KAAK4iG,GAAOS,IACRt/I,EAAIN,EAAE6/I,KAAKv/I,EAAGmX,GACd,MACJ,KAAK0nI,GAAOW,OACR,IAAK9/I,EAAE6/I,KAAKv/I,EAAGmX,GACX,SAAS4oD,EACb,MACJ,KAAK8+E,GAAOY,OACN//I,EAAE6T,MACC7T,EAAE6T,QACH8rI,GAAY,GAChB,MACJ,KAAKR,GAAOa,OACNhgJ,EAAE6T,MACC7T,EAAE6T,OACHorI,GAASI,EAAWl/I,GACxB,SAASkgE,EACb,QACI,MAAMA,EAElB,CAEA,GADAr7D,EAAO26I,GACHtgD,EAIA,MAAO,CAAEr9F,MAAO1B,EAAG0E,MAAM,GAHzB+K,EAAO2vI,KAAiBp/I,CAKhC,CACJ,CACA,MAAOlB,IACH,GAAIA,KAAM8/I,GACN,MAAM9/I,EACd,CAEA,OADA4F,GAAO,EACA,CAAEA,OACb,CACJ,CA4CuBi7I,CAAeb,EAAS/+I,KAAKg/I,UAAWh/I,KAAKi/I,cAChE,CAIAr8I,IAAAA,CAAKs5C,EAAQv6C,GAOT,MANqB,oBAAVA,EACP3B,KAAKg/I,UAAUp8I,KAAK,CAAEs5C,SAAQsjG,KAAM79I,IAEd,kBAAVA,GACZ3B,KAAKg/I,UAAUp8I,KAAK,CAAEs5C,SAAQ1oC,MAAO7R,IAElC3B,IACX,CACA0E,IAAAA,GACI,OAAO1E,KAAKm/I,SAChB,CAMA57I,GAAAA,CAAInD,GACA,OAAOJ,KAAK4C,KAAKk8I,GAAOS,IAAKn/I,EACjC,CAKAoD,MAAAA,CAAO4nF,GACH,OAAOprF,KAAK4C,KAAKk8I,GAAOW,OAAQr0D,EACpC,CAKAy0D,IAAAA,CAAKxgJ,GACD,OAAOA,EAAI,EAAIW,KAAK4C,KAAKk8I,GAAOY,KAAMrgJ,GAAKW,IAC/C,CAKA8/I,IAAAA,CAAKzgJ,GACD,OAAOA,EAAI,EAAIW,KAAK4C,KAAKk8I,GAAOa,KAAMtgJ,GAAKW,IAC/C,CAQA0lE,SAAAA,CAAU7iD,GACN,MAAMviB,EAAON,KACb,IAAI+/I,EACJ,OAAOrB,IAAK,KACHqB,IACDA,EAAOrB,GAAK77H,EAAGviB,EAAKqB,WAEjBo+I,EAAKr7I,SAEpB,CAOA/C,KAAAA,GAII,OAHK3B,KAAKk/I,SACNl/I,KAAKk/I,OAASl/I,KAAKm/I,SAAQ,GAAMx6I,MAE9B3E,KAAKi/I,aAChB,CAMAtrI,IAAAA,CAAKvT,GACD,OAAS,CACL,MAAMH,EAAID,KAAK0E,OACf,GAAIzE,EAAE0E,KACF,MACJ,IAAmB,IAAfvE,EAAEH,EAAE0B,OACJ,OAAO,CACf,CACA,OAAO,CACX,CAOAuE,MAAAA,CAAO9F,EAAGo1B,GACN,IAAIv1B,EAAID,KAAK0E,OAKb,SAJqBwuD,IAAjB19B,GAA+Bv1B,EAAE0E,OACjC6wB,EAAev1B,EAAE0B,MACjB1B,EAAID,KAAK0E,SAELzE,EAAE0E,MACN6wB,EAAep1B,EAAEo1B,EAAcv1B,EAAE0B,OACjC1B,EAAID,KAAK0E,OAEb,OAAO8wB,CACX,CAIAnL,IAAAA,GACI,OAAOrqB,KAAKkG,QAAQ,CAACq5D,EAAK9+D,MAAQ8+D,GAAM,EAC5C,CACA,CAACn7D,OAAOC,YAEJ,OAAOrE,IACX,ECtPG,MAAMggJ,GACTj8I,WAAAA,CAAYk8I,EAAUjqH,GAClBh2B,KAAKigJ,SAAWA,EAChBjgJ,KAAKg2B,QAAUwmH,GAAYxmH,EAC/B,CAOAi9C,MAAAA,CAAO4xD,GACH,IAAIxgI,EAAWq6I,GAAK7Z,GACpB,MAAM5mH,EAAOje,KAAKg2B,QAAQimH,eACtBh+H,GAAQq9H,GAAe4E,WACvBjiI,GAAQq9H,GAAe6E,aACvB97I,EAASd,IAAI0qF,IAEjB,MAAMmyD,EAAoB,IAAIhhJ,MAC9B,IAAK6+E,GAAQj+E,KAAKigJ,UAEd,IAAK,MAAM9jB,KAAYn8H,KAAKigJ,SAAU,CAClC,MAAMI,EAAephJ,OAAOyB,KAAKy7H,GAC3BmkB,EAASD,EAAa,GACtB7gJ,EAAOw9I,GAAYzB,GAAaoB,SAAU2D,EAAQtgJ,KAAKg2B,SAC7DyxD,GAA+B,IAAxB44D,EAAaxgJ,UAAkBL,EAAM,6BAAFW,OAA+BmgJ,IACzEF,EAAkBx9I,KAAK09I,GAEvBj8I,EAAW7E,EAAK6E,EAAU83H,EAASmkB,GAAStgJ,KAAKg2B,QACrD,CASJ,OALI/X,GAAQq9H,GAAeiF,cACtBtiI,GAAQq9H,GAAe4E,WAClBpH,GAAa,CAAC,CAAC,SAAU,WAAYsH,IAAoBvgJ,SAC/DwE,EAASd,IAAI0qF,IAEV5pF,CACX,CAOAmH,GAAAA,CAAIq5H,GACA,OAAO7kI,KAAKizE,OAAO4xD,GAAYljI,OACnC,EC7CG,MAAM6+I,GACTz8I,WAAAA,CAAY43B,EAAQyvD,EAAWq1D,EAAYzqH,GACvCh2B,KAAK27B,OAASA,EACd37B,KAAKorF,UAAYA,EACjBprF,KAAKygJ,WAAaA,EAClBzgJ,KAAKg2B,QAAUA,EACfh2B,KAAKgzI,UAAY,GACjBhzI,KAAKyZ,OAAS,KACdzZ,KAAK0P,OAAS,EAClB,CAEAmxE,KAAAA,GACI,OAAI7gF,KAAKyZ,SAGLo8D,GAAS71E,KAAKygJ,aACdzgJ,KAAKgzI,UAAUpwI,KAAK,CAAE89I,SAAU1gJ,KAAKygJ,aAGzCzgJ,KAAKyZ,OAASilI,GAAK1+I,KAAK27B,QAAQn4B,OAAOxD,KAAKorF,WACxCprF,KAAKgzI,UAAUnzI,OAAS,IACxBG,KAAKyZ,OAAS,IAAIumI,GAAWhgJ,KAAKgzI,UAAWhzI,KAAKg2B,SAASi9C,OAAOjzE,KAAKyZ,UARhEzZ,KAAKyZ,MAWpB,CAEAknI,QAAAA,GACI,MAAMC,EAAWlC,GAAK,IAAI1+I,KAAK0P,SAE/B,OADA1P,KAAK0P,OAAS,GFjCf,WAA+B,QAAA+vD,EAAA7/D,UAAAC,OAAXghJ,EAAS,IAAAzhJ,MAAAqgE,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAATkhF,EAASlhF,GAAA//D,UAAA+/D,GAChC,IAAIvoD,EAAQ,EACZ,OAAOsnI,IAAK,KACR,KAAOtnI,EAAQypI,EAAUhhJ,QAAQ,CAC7B,MAAMI,EAAI4gJ,EAAUzpI,GAAO1S,OAC3B,IAAKzE,EAAE0E,KACH,OAAO1E,EACXmX,GACJ,CACA,MAAO,CAAEzS,MAAM,EAAM,GAE7B,CEuBem8I,CAAQF,EAAU5gJ,KAAK6gF,QAClC,CAKA10E,GAAAA,GACI,OAAOnM,KAAK2gJ,WAAWh/I,OAC3B,CAKA6R,KAAAA,GACI,OAAOxT,KAAKmM,MAAMtM,MACtB,CAMAk9G,IAAAA,CAAK19G,GAED,OADAW,KAAKgzI,UAAUpwI,KAAK,CAAEm+I,MAAO1hJ,IACtBW,IACX,CAMA0T,KAAAA,CAAMrU,GAEF,OADAW,KAAKgzI,UAAUpwI,KAAK,CAAEo+I,OAAQ3hJ,IACvBW,IACX,CAMA6S,IAAAA,CAAK21H,GAED,OADAxoI,KAAKgzI,UAAUpwI,KAAK,CAAEq+I,MAAOzY,IACtBxoI,IACX,CAKAg8I,SAAAA,CAAU7sC,GAEN,OADAnvG,KAAKg2B,QAAU/2B,OAAOS,OAAOT,OAAOS,OAAO,CAAC,EAAGM,KAAKg2B,SAAU,CAAEgmH,UAAW7sC,IACpEnvG,IACX,CAKA0E,IAAAA,GAEI,GAAI1E,KAAK0P,OAAO7P,OAAS,EACrB,OAAOG,KAAK0P,OAAO3B,MAEvB,MAAM9N,EAAID,KAAK6gF,QAAQn8E,OACvB,OAAIzE,EAAE0E,UAAN,EAEO1E,EAAE0B,KACb,CAKAsiF,OAAAA,GAEI,GAAIjkF,KAAK0P,OAAO7P,OAAS,EACrB,OAAO,EACX,MAAMI,EAAID,KAAK6gF,QAAQn8E,OACvB,OAAIzE,EAAE0E,OAEN3E,KAAK0P,OAAO9M,KAAK3C,EAAE0B,QACZ,EACX,CAMA4B,GAAAA,CAAIsf,GACA,OAAO7iB,KAAKmM,MAAM5I,IAAIsf,EAC1B,CAKA/hB,OAAAA,CAAQ+hB,GACJ7iB,KAAKmM,MAAMrL,QAAQ+hB,EACvB,CACA,CAACze,OAAOC,YACJ,OAAOrE,KAAK2gJ,UAChB,EC/HG,MAAMvmC,GACTr2G,WAAAA,CAAY41D,EAAW3jC,GACnBh2B,KAAK25D,UAAYA,EACjB35D,KAAKg2B,QAAUwmH,GAAYxmH,GAC3Bh2B,KAAKkhJ,SAAW,GAChBlhJ,KAAKmhJ,SACT,CACAA,OAAAA,GACI15D,GAAO5R,GAAS71E,KAAK25D,WAAY,qCAAFx5D,OAAuC4S,KAAKC,UAAUhT,KAAK25D,aAC1F,MAAMynF,EAAgB,CAAC,EACvB,IAAK,MAAO14E,EAAOuyE,KAASh8I,OAAOunB,QAAQxmB,KAAK25D,WAAY,CACxD,GAAI,WAAa+O,EACbzpE,OAAOS,OAAO0hJ,EAAe,CAAE14E,MAAOA,EAAOuyE,KAAMA,SAElD,GAAIrqE,GAAQ,CAAC,OAAQ,MAAO,OAAQ,QAAS,eAAgBlI,GAC9D1oE,KAAKqhJ,gBAAgB34E,EAAOA,EAAOuyE,OAElC,CAEDxzD,IAAQuzD,GAAWtyE,GAAQ,+BAAFvoE,OAAiCuoE,IAC1D,IAAK,MAAOyzD,EAAUhuC,KAAQlvF,OAAOunB,QAAQkqF,GAAUuqC,IACnDj7I,KAAKqhJ,gBAAgB34E,EAAOyzD,EAAUhuC,EAE9C,CACIizD,EAAc14E,OACd1oE,KAAKqhJ,gBAAgBD,EAAc14E,MAAO04E,EAAc14E,MAAO04E,EAAcnG,KAErF,CACJ,CACAoG,eAAAA,CAAgB34E,EAAOyzD,EAAUx6H,GAC7B,MAAMnC,EAAOw9I,GAAYzB,GAAal1B,MAAO8V,EAAUn8H,KAAKg2B,SAC5D,IAAKx2B,EACD,MAAM,IAAIg2I,GAAW,0BAADr1I,OAA2Bg8H,IAEnD,MAAMt5G,EAAKrjB,EAAKkpE,EAAO/mE,EAAO3B,KAAKg2B,SACnCh2B,KAAKkhJ,SAASt+I,KAAKigB,EACvB,CAOA9a,IAAAA,CAAKitD,GACD,IAAK,IAAIl1D,EAAI,EAAG68D,EAAM38D,KAAKkhJ,SAASrhJ,OAAQC,EAAI68D,EAAK78D,IACjD,IAAKE,KAAKkhJ,SAASphJ,GAAGk1D,GAClB,OAAO,EAGf,OAAO,CACX,CAQAjqC,IAAAA,CAAK85G,EAAY4b,GACb,OAAO,IAAID,GAAO3b,GAAclkI,GAAMX,KAAK+H,KAAKpH,IAAK8/I,GAAc,CAAC,EAAGzgJ,KAAKg2B,QAChF,CAOAxd,MAAAA,CAAOqsH,GACH,OAAOA,EAAW3+H,QAAO,CAACq5D,EAAKvK,KACtBh1D,KAAK+H,KAAKitD,IACXuK,EAAI38D,KAAKoyD,GACNuK,IACR,GACP,ECrES,IAAI17D,QCZjB,MCMao9I,GAAQA,CAACpc,EAAYyc,EAAUtrH,KACxC,GAAIioD,GAAQqjE,KAAczrE,GAASyrE,GAC/B,OAAOzc,EACX,IAAIzxH,EAAM2vC,GAEV,MAAMw+F,EAAgBvrH,EAAQgmH,UAK9B,OAHInmE,GAAS0rE,IAAkBvJ,GAASuJ,EAAcv3G,UAClD52B,EA4CR,SAA6B+7F,GACzB,MAAMqyC,EAAY,CACdC,YAAaC,GAAmBvyC,EAAKwyC,UAAY,GACjDC,UAA8B,QAAnBzyC,EAAKyyC,UAAsB,QAAUzyC,EAAKyyC,WAAa,QAClEC,QAAS1yC,EAAK2yC,kBAAmB,EACjCC,kBAAsC,YAAnB5yC,EAAKnxE,YAGM,KAA7BmxE,EAAK6yC,YAAa,KACW,SAA1BR,EAAUC,cACVD,EAAUC,YAAc,QACE,WAA1BD,EAAUC,cACVD,EAAUC,YAAc,YAEhC,MAAMQ,EAAW,IAAIC,KAAKC,SAAShzC,EAAKnlE,OAAQw3G,GAChD,MAAO,CAAC3gJ,EAAGuB,KAEP,IAAK41I,GAASn3I,KAAOm3I,GAAS51I,GAC1B,OAAO2gD,GAAQliD,EAAGuB,GAEtB,MAAMtC,EAAImiJ,EAASl/F,QAAQliD,EAAGuB,GAC9B,OAAItC,EAAI,GACI,EACRA,EAAI,EACG,EACJ,CAAC,CAEhB,CAvEcsiJ,CAAoBb,IAEvB1c,EAAWn/D,WAAW28E,IACzB,MAAMC,EAAYrjJ,OAAOyB,KAAK4gJ,GAC9B,IAAK,MAAMpvI,KAAOowI,EAAUvuI,UAAW,CACnC,MAAMwuI,EAAS3I,GAAQyI,GAAOrtF,GAAQ5sD,GAAQ4sD,EAAK9iD,IAAM8jB,EAAQihG,cAC3D1wD,EAAannE,MAAMyC,KAAK0gJ,EAAO7hJ,QAAQmS,KAAKO,IAC3B,IAAnBkuI,EAASpvI,IACTq0D,EAAWxyD,UAEfsuI,EAAO,GACP97E,EAAWrgE,QAAO,CAACq5D,EAAKrtD,IAAQymI,GAAKp5E,EAAKgjF,EAAO/gJ,IAAI0Q,KAAOmwI,EAChE,CACA,OAAOA,CAAI,GACb,EAIAX,GAAqB,CAEvB,EAAG,OAGH,EAAG,SAGH,EAAG,WChCmB,IAAIh+I,IAAI,CAC9B,aACA,kBACA,SACA,QACA,cACA,QACA,WAGyB,IAAIA,IAAI,CACjC,aACA,gBACA,cACA,QACA,QACA,WCfG,SAAS8+I,GAAoBp3D,GAChC,MAAMhrF,EAAIA,CAAC+xI,EAAUxwI,EAAOq0B,KACxB,MAAM68G,EAAO,CAAEqH,aAAa,GACtBV,EAAQlgI,KAAKsM,IAAI,EAAGusH,EAAS7uI,MAAM,KAAKzD,OAAS,GACvD,OAAQm1D,IAEJ,MAAMkkF,EAAM9wI,GAAQ4sD,EAAKm9E,EAAUU,GACnC,OAAOznD,EAAU8tD,EAAKv3I,EAAO1C,OAAOS,OAAOT,OAAOS,OAAO,CAAC,EAAGs2B,GAAU,CAAEwjH,UAAS,CACrF,EAGL,OADAp5I,EAAEk4D,GAAK,QACAl4D,CACX,CAMO,SAASqiJ,GAAyBr3D,GACrC,MAAO,CAACp2B,EAAKimF,EAAMjlH,KACf,MAAMwkC,EAAO8jF,GAAatpF,EAAKimF,EAAM,KAAMjlH,GAC3C,OAAOo1D,KAAa5wB,EAAK,CAEjC,CAQO,SAAS2gF,GAAIt6I,EAAGuB,EAAG4zB,GAEtB,GAAI0xG,GAAQ7mI,EAAGuB,GACX,OAAO,EAEX,GAAIi2I,GAAMx3I,IAAMw3I,GAAMj2I,GAClB,OAAO,EAEX,GAAIvB,aAAazB,MAAO,CACpB,MAAMsjJ,EAAKhb,GAAQ1lI,KAAK,KAAMI,GAC9B,OAAOvB,EAAEwK,KAAKq3I,IAAOjrC,GAAQ52G,EAAe,OAAZm1B,QAAgC,IAAZA,OAAqB,EAASA,EAAQwjH,OAAOnuI,KAAKq3I,EAC1G,CACA,OAAO,CACX,CAQO,SAASC,GAAI9hJ,EAAGuB,EAAG4zB,GACtB,OAAQmlH,GAAIt6I,EAAGuB,EAAG4zB,EACtB,CAQO,SAAS4sH,GAAI/hJ,EAAGuB,EAAG4zB,GAEtB,OAAIqiH,GAAMx3I,GACCuB,EAAEiJ,MAAK7I,GAAW,OAANA,IAChBs2I,GAAa,CAACN,GAAY33I,GAAIuB,GAAgB,OAAZ4zB,QAAgC,IAAZA,OAAqB,EAASA,EAAQihG,cAAcp3H,OAAS,CAC9H,CAQO,SAASgjJ,GAAKhiJ,EAAGuB,EAAG4zB,GACvB,OAAQ4sH,GAAI/hJ,EAAGuB,EAAG4zB,EACtB,CAQO,SAAS8sH,GAAIjiJ,EAAGuB,EAAGsY,GACtB,OAAOqoC,GAAQliD,EAAGuB,GAAG,CAACzB,EAAG2B,IAAMygJ,GAASpiJ,EAAG2B,GAAK,GACpD,CAQO,SAAS0gJ,GAAKniJ,EAAGuB,EAAGsY,GACvB,OAAOqoC,GAAQliD,EAAGuB,GAAG,CAACzB,EAAG2B,IAAMygJ,GAASpiJ,EAAG2B,IAAM,GACrD,CAQO,SAAS2gJ,GAAIpiJ,EAAGuB,EAAGsY,GACtB,OAAOqoC,GAAQliD,EAAGuB,GAAG,CAACzB,EAAG2B,IAAMygJ,GAASpiJ,EAAG2B,GAAK,GACpD,CAQO,SAAS4gJ,GAAKriJ,EAAGuB,EAAGsY,GACvB,OAAOqoC,GAAQliD,EAAGuB,GAAG,CAACzB,EAAG2B,IAAMygJ,GAASpiJ,EAAG2B,IAAM,GACrD,CA2EA,SAAS6gJ,GAAqB59I,GAC1B,OAAOy1I,GAAWz1I,KAAoD,IAA3C,CAAC,OAAQ,MAAO,QAAQ1C,QAAQ0C,EAC/D,CAOO,SAAS69I,GAAWviJ,EAAGuB,EAAG4zB,GAE7B,GAAIp1B,GAAQC,KAAOo9E,GAAQp9E,GAAI,CAC3B,IAAIwiJ,EAAU1iJ,GAAMA,EAChBia,EAAWxY,EAIXnD,OAAOyB,KAAK0B,GAAGuQ,MAAMwwI,MACrBvoI,EAAW,CAAE0oI,KAAMlhJ,GACnBihJ,EAAS1iJ,IAAK,CAAG2iJ,KAAM3iJ,KAE3B,MAAMgX,EAAQ,IAAIyiG,GAAMx/F,EAAUob,GAClC,IAAK,IAAIl2B,EAAI,EAAG68D,EAAM97D,EAAEhB,OAAQC,EAAI68D,EAAK78D,IACrC,GAAI6X,EAAM5P,KAAKs7I,EAAOxiJ,EAAEf,KACpB,OAAO,CAGnB,CACA,OAAO,CACX,CAEA,MAAMyjJ,GAAU1iJ,GAAY,OAANA,EAChB2iJ,GAAS3iJ,GAAMo3I,GAASp3I,IAC1BA,IVxOmB,YUyOnBA,GV1OmB,aU2OY,IAA/BA,EAAEoD,WAAWpB,QAAQ,KACnB4gJ,GAAU5iJ,GAAMo3I,GAASp3I,IAC3BA,GAAK60I,IACL70I,GAAK40I,KAC0B,IAA/B50I,EAAEoD,WAAWpB,QAAQ,KAEnB6gJ,GAAe,CACjBt3E,MAAOxrE,GACP+iJ,KAAM5L,GACNL,QAASK,GACTjsG,KAAMqsG,GACNyL,QAAS3L,GACT4L,OAAQ5L,GACR6L,IAAKN,GACLO,KAAMN,GACNv3G,OAAQ+rG,GACRR,KAAM8L,GACNh3E,OAAQsJ,GACRmuE,MAAO5L,GACPT,OAAQS,GACRrrB,OAAQirB,GAER9kF,UAAWmlF,GACXT,SAAWn3I,IACP,MAAM,IAAI+0I,GAAW,mCAAmC,EAG5D,EAAGyC,GACH,EAAGD,GACH,EAAGniE,GACH,EAAGj1E,GACH,EAAGy3I,GACH,EAAGN,GACH,EAAGI,GACH,GAAIoL,GACJ,GAAInL,GACJ,GAAIoL,GACJ,GAAIC,GACJ,GAAIxL,IASR,SAASgM,GAAYpjJ,EAAGuB,EAAG3B,GACvB,MAAML,EAAIsjJ,GAAathJ,GACvB,QAAOhC,GAAIA,EAAES,EACjB,CAaA,SAASkiD,GAAQliD,EAAGuB,EAAGhC,GACnB,OAAOo4I,GAAY33I,GAAGwK,MAAK1K,GAAKk3I,GAAQl3I,KAAOk3I,GAAQz1I,IAAMhC,EAAEO,EAAGyB,IACtE,CCvSoBqgJ,GAAyByB,IAAtC,MCPMC,GAAUA,CAAC7rF,EAAI8rF,IAAY,CAACpvF,EAAKimF,EAAMjlH,KAChDyxD,GAAO7mF,GAAQq6I,GAAO,GAAF96I,OAAKm4D,EAAE,mCAC3B,MAAM+rF,EAAO/F,GAAatpF,EAAKimF,EAAM,KAAMjlH,GAC3C,OAAIquH,EAAKh5I,KAAKgtI,IACH,MACX5wD,GAAO48D,EAAK1xI,MAAMslI,IAAW,GAAF93I,OAAKm4D,EAAE,kDAC3B8rF,EAAQC,GAAK,ECCDF,GAAQ,WAAWE,GAAQA,EAAKn+I,QAAO,CAACrF,EAAGuB,IAAMvB,EAAIuB,IAAI,KCA1D+hJ,GAAQ,UAAUE,GAAQA,EAAKn+I,QAAO,CAACrF,EAAGuB,IAAMvB,EAAIuB,GAAG,KCAtD+hJ,GAAQ,WAAWE,GAAQA,EAAKn+I,QAAO,CAACrF,EAAGuB,IAAMvB,EAAIuB,GAAG,KCJ5DqgJ,GAAyB6B,ICAzB7B,GAAyB8B,ICAxB9B,GAAyB+B,ICA1B/B,GAAyBgC,ICAxBhC,GAAyBiC,ICA1BjC,GAAyBkC,ICF5C,MCCMC,GAAWA,CAACC,EAASC,KACvB,MAAM7iJ,EAAI,CAAC,EAEX,OADA4iJ,EAAQvhJ,MAAM,IAAIxC,SAAQ,CAAC0B,EAAG1C,IAAOmC,EAAEO,GAAKsiJ,GAAQhlJ,EAAI,KACjDmC,CAAC,EAEchD,OAAOS,OAAOT,OAAOS,OAAOT,OAAOS,OAAO,CAAC,EAAGklJ,GAAS,eAAgB,IAAKA,GAAS,gBAAiB,IAAK,CAAE19I,EAAG,ICwBnI,MC9BD69I,GAAe,CACjB7xF,UAAW,KACXukF,KAAM,KACNnoI,IAAKA,IACLi6C,SAAU,IAAIhnD,MACd,YAAa,IAAIA,OAOd,SAASyiJ,GAA0B5kJ,GAA+B,IAA5B6kJ,EAAWrlJ,UAAAC,OAAA,QAAAqzD,IAAAtzD,UAAA,GAAAA,UAAA,GAAGmlJ,GACvD,MAAMG,EAAKjmJ,OAAOS,OAAO,CAAC,EAAGqlJ,GAAcE,GACrCE,EAAS,IAAIzhJ,IAAIzE,OAAOyB,KAAKwkJ,IACnC,MAAO,CAAClwF,EAAKimF,EAAMjlH,KACf,MAAM32B,EAAIi/I,GAAatpF,EAAKimF,EAAM,KAAMjlH,GACxC,GAAImvH,EAAOrhJ,IAAI,GAAD3D,OAAId,IAAM,CACpB,MAAMsrB,EAAMu6H,EAAG,GAAD/kJ,OAAId,IAClB,GAAIsrB,aAAepoB,MACf,MAAM,IAAIizI,GAAW,iBAADr1I,OAAkBC,EAAEmF,KAAI,uCAEhD,OAAOolB,CACX,CACA,OAAOvqB,EAAEf,EAAE,CAEnB,CC1BqB2lJ,GAA0B1rI,KAAK8rI,KAAM,CACtD77F,SAAUA,IACV,EAAG,IAAIhnD,QCFWyiJ,GAA0B1rI,KAAK+rI,MAAO,CACxD97F,SAAUA,IACV,EAAG,IAAIhnD,QCFUyiJ,GAA0B1rI,KAAKgsI,MCA9BN,GAA0B1rI,KAAKisI,MAAO,CACxDh8F,SAAUA,IACV,aAAcA,MCFGy7F,GAA0B1rI,KAAKksI,MCA9BR,GAA0B1rI,KAAKmsI,MAAO,CACxD,EAAGl8F,IACH,MAAOA,MCFSy7F,GAA0B1rI,KAAKosI,KCA9BV,GAA0B1rI,KAAKqsI,KAAM,CACtD,YAAap8F,IACbA,SAAUA,MPFP,MQDDq8F,GAAiBtsI,KAAKusI,GAAK,ICA3BC,IDE2Bd,IAA2B3lJ,GAAMA,EAAIumJ,IAAgB,CAClFr8F,SAAUA,IACV,YAAaA,MCJM,IAAMjwC,KAAKusI,IAEDb,IAA2B3lJ,GAAMA,EAAIymJ,IAAgB,CAClFv8F,SAAUA,IACV,aAAcA,MCHEy7F,GAA0B1rI,KAAKysI,KCA9Bf,GAA0B1rI,KAAK0sI,KAAM,CACtD,aAAcz8F,IACdA,SAAUA,MCFMy7F,GAA0B1rI,KAAK2sI,KCDb1jJ,MCS/B,MCAMm+I,GAAWA,CAAC7b,EAAYoW,EAAMjlH,KACvC,GAAIioD,GAAQg9D,GACR,OAAOpW,EAEX,IAAIqhB,EAAiBjnJ,OAAOyB,KAAKu6I,GAC7BkL,GAAiB,EAErBC,GAAmBnL,EAAMjlH,GACzB,MAAMqwH,EAASrwH,EAAQ+lH,MACvB,GAAInrE,GAAQs1E,EAAgBG,GAAS,CACjC,MAAMh9I,EAAK4xI,EAAKoL,GACL,IAAPh9I,IAAmB,IAAPA,IACZ68I,EAAiBA,EAAe1iJ,OAAO80I,GAAWt2I,KAAK,KAAM,CAACqkJ,KAC9DF,EAA0C,GAAzBD,EAAermJ,OAExC,MAGIqmJ,EAAetjJ,KAAKyjJ,GAExB,MAAM9H,EAAQ/C,GAAe5gD,KAAK5kE,GAClC,OAAO6uG,EAAWthI,KAAMyxD,GAAQsxF,GAActxF,EAAKimF,EAAMsD,EAAMzpI,OAAOkgD,GAAMkxF,EAAgBC,IAAiB,EAUjH,SAASG,GAActxF,EAAKimF,EAAMjlH,EAASkwH,EAAgBC,GACvD,IAAII,EAAS,CAAC,EACVC,GAAa,EACbC,GAAiB,EACrB,MAAMC,EAAW,GACbP,GACAO,EAAS9jJ,KAAKozB,EAAQ+lH,OAE1B,IAAK,MAAM7pI,KAAOg0I,EAAgB,CAE9B,IAAIvkJ,EAEJ,MAAMglJ,EAAU1L,EAAK/oI,GAIrB,GAHIA,IAAQ8jB,EAAQ+lH,OAASnrE,GAAQ,CAAC,GAAG,GAAQ+1E,KAC7CF,GAAiB,GAEjBv0I,IAAQ8jB,EAAQ+lH,OAAS99D,GAAQ0oE,GAEjChlJ,EAAQqzD,EAAI9iD,QAEX,GAAI8lI,GAAS2O,GACdhlJ,EAAQ28I,GAAatpF,EAAK2xF,EAASz0I,EAAK8jB,QAEvC,GAAI46C,GAAQ,CAAC,GAAG,GAAO+1E,SAGvB,GAAIA,aAAmBvnJ,MACxBuC,EAAQglJ,EAAQpjJ,KAAIf,IAChB,MAAM7C,EAAI2+I,GAAatpF,EAAKxyD,EAAG,KAAMwzB,GACrC,OAAIqiH,GAAM14I,GACC,KACJA,CAAC,QAGX,KAAIk2E,GAAS8wE,GA6Cb,CACDD,EAAS9jJ,KAAKsP,GACd,QACJ,CAhD4B,CACxB,MAAM00I,EAAaD,EACbE,EAAc5nJ,OAAOyB,KAAKimJ,GAC1BxqB,EAAiC,GAAtB0qB,EAAYhnJ,OAAcgnJ,EAAY,GAAK,GAEtDrnJ,EAAOw9I,GAAYzB,GAAaqB,WAAYzgB,EAAUnmG,GAC5D,GAAIx2B,EAEiB,WAAb28H,EAEIqc,GAAYoO,EAAWzqB,IAAWxpH,MAAMslI,KAExCt2I,EAAQnC,EAAKw1D,EAAK4xF,EAAWzqB,GAAWjqH,EAAK8jB,GAC7CwwH,GAAa,GAIb7kJ,EAAQ28I,GAAatpF,EAAK4xF,EAAY10I,EAAK8jB,GAI/Cr0B,EAAQnC,EAAKw1D,EAAK4xF,EAAWzqB,GAAWjqH,EAAK8jB,QAGhD,GAAIglH,GAAW7e,GAEhBx6H,EAAQ28I,GAAatpF,EAAK4xF,EAAWzqB,GAAWA,EAAUnmG,QAEzD,GAAIlyB,GAAIkxD,EAAK9iD,GAAM,CAEpBk0I,GAAmBQ,EAAY5wH,GAC/B,IAAI9Y,EAAS83C,EAAI9iD,GACbgL,aAAkB9d,MAClBuC,EAAQub,EAAO3Z,KAAKtD,GAAMqmJ,GAAcrmJ,EAAG2mJ,EAAY5wH,EAAS6wH,GAAa,MAG7E3pI,EAAS24D,GAAS34D,GAAUA,EAAS83C,EACrCrzD,EAAQ2kJ,GAAcppI,EAAQ0pI,EAAY5wH,EAAS6wH,GAAa,GAExE,MAGIllJ,EAAQ28I,GAAatpF,EAAK2xF,EAAS,KAAM3wH,EAEjD,CAIA,CAEA,MAAM8wH,EAAe1M,GAAaplF,EAAK9iD,EAAK,CACxCooI,iBAAiB,SAGApnF,IAAjB4zF,GACArxE,GAAM8wE,EAAQO,EAAc,CACxBrvC,SAAS,IAIb6gC,GAAW,CAAC,EAAG,GAAG,GAAO,GAAOqO,UAClBzzF,IAAVvxD,EACAm5I,GAAYyL,EAAQr0I,EAAK,CAAE2oI,cAAc,IAGzCnmH,GAAS6xH,EAAQr0I,EAAKvQ,GAGlC,CAQA,GANA64I,GAAc+L,IAMVC,GAAcC,GAAkBN,KAChCI,EAAS5N,GAAK,CAAC,EAAG3jF,EAAKuxF,GACnBG,EAAS7mJ,OAAS,GAClB,IAAK,MAAM8C,KAAK+jJ,EACZ5L,GAAYyL,EAAQ5jJ,EAAG,CAAEk4I,cAAc,IAInD,OAAO0L,CACX,CAMA,SAASH,GAAmBnL,EAAMjlH,GAC9B,MAAMwuD,EAAQ,EAAC,GAAO,GACtB,IAAK,MAAO7hF,EAAGH,KAAMvD,OAAOunB,QAAQy0H,GAAO,CACvC,GAAIt4I,KAAmB,OAAZqzB,QAAgC,IAAZA,OAAqB,EAASA,EAAQ+lH,OACjE,OACM,IAANv5I,IAAiB,IAANA,EACXgiF,EAAM,IAAK,EAEA,IAANhiF,IAAiB,IAANA,IAChBgiF,EAAM,IAAK,GAEfiD,KAASjD,EAAM,IAAMA,EAAM,IAAK,2DACpC,CACJ,CC9KO,MCIMmwD,GAAOA,CAACl0I,EAAG64I,EAAKtjH,KACzByxD,GAAO7mF,GAAQ04I,GAAM,0DACrB,MAAM7yH,EAAU6yH,EAAI/1I,KAAI03I,GAAQ,IAAI7gC,GAAM6gC,EAAMjlH,KAChD,OAAQg/B,GAAQvuC,EAAQ9T,OAAMnO,GAAKA,EAAEuD,KAAKitD,IAAK,ECHtC4/E,GAAMA,CAACn0I,EAAG64I,EAAKtjH,KACxByxD,GAAO7mF,GAAQ04I,GAAM,wDACrB,MAAM7yH,EAAU6yH,EAAI/1I,KAAI03I,GAAQ,IAAI7gC,GAAM6gC,EAAMjlH,KAChD,OAAQg/B,GAAQvuC,EAAQpb,MAAK7G,GAAKA,EAAEuD,KAAKitD,IAAK,ECHrC+xF,GAAOA,CAACtmJ,EAAG64I,EAAKtjH,KACzByxD,GAAO7mF,GAAQ04I,GAAM,0DACrB,MAAMl5I,EAAIw0I,GAAI,MAAO0E,EAAKtjH,GAC1B,OAAQg/B,IAAS50D,EAAE40D,EAAI,ECHdgyF,GAAOA,CAAC7U,EAAUmH,EAAKtjH,KAChC,MAAMpb,EAAW,CAAC,EAClBA,EAASu3H,GAAYzhC,GAAU4oC,GAC/B,MAAM3hI,EAAQ,IAAIyiG,GAAMx/F,EAAUob,GAClC,OAAQg/B,IAASr9C,EAAM5P,KAAKitD,EAAI,ECTvBmmF,GAAMqH,GAAoB8B,ICA1BrB,GAAMT,GAAoB+B,ICA1BrB,GAAOV,GAAoBgC,ICA3B5B,GAAMJ,GAAoByE,ICA1BnE,GAAMN,GAAoBiC,ICA1BzB,GAAOR,GAAoBkC,ICA3B/B,GAAMH,GAAoBmC,ICA1B9B,GAAOL,GAAoB0B,ICAjC,MAAMgD,GAAO1E,I7CoIb,SAAc3hJ,EAAGuB,EAAGsY,GACvB,OAAO89H,GAAY33I,GAAGwK,MAAO1K,GAAmB,IAAbyB,EAAEvC,QAAgBc,EAAIyB,EAAE,KAAOA,EAAE,IACxE,I8CtIa84I,GAASsH,I9C8If,SAAgB3hJ,EAAGuB,EAAG4zB,GACzB,MAAMkjH,EAAMV,GAAY33I,GAClBygB,EAAS3gB,GAAMq3I,GAASr3I,IV6DZ,SAACs6D,GAAkB,QAAOA,MAAdr7D,UAAAC,OAAA,QAAAqzD,IAAAtzD,UAAA,KAAAA,UAAA,KAAwC,KAARq7D,CAAW,CU7DrCksF,CAAO/kJ,EAAEmkB,KAAK5lB,GAAgB,OAAZq1B,QAAgC,IAAZA,OAAqB,EAASA,EAAQmmH,eAChH,OAAOjD,EAAI7tI,KAAKiW,IAAUm2F,GAAQyhC,EAAK,GAAG7tI,KAAKiW,EACnD,I+ClJoBkhI,I/CqKb,SAAc7tI,EAAQ8R,EAASuP,GAClC,IAAKp1B,GAAQ+T,KACR/T,GAAQ6lB,KACR9R,EAAO9U,SACP4mB,EAAQ5mB,OACT,OAAO,EAEX,IAAIunJ,GAAU,EACd,IAAK,MAAMzvI,KAAS8O,EAAS,CAEzB,IAAK2gI,EACD,MAEAA,EADAvxE,GAASl+D,IAAUi5D,GAAQ3xE,OAAOyB,KAAKiX,GAAQ,cACrCyrI,GAAWzuI,EAAQgD,EAAkB,WAAGqe,GAE7Cre,aAAiBo7F,OACZp+F,EAAOtJ,MAAKvM,GAAkB,kBAANA,GAAkB6Y,EAAM5P,KAAKjJ,KAGrD6V,EAAOtJ,MAAK7I,GAAKklI,GAAQ/vH,EAAOnV,IAElD,CACA,OAAO4kJ,CACX,I+C5LO,MCAMhE,GAAaZ,GAAoB6E,ICAjCC,GAAQ9E,IjDoMd,SAAe3hJ,EAAGuB,EAAGsY,GACxB,OAAOtb,MAAMwB,QAAQC,IAAMA,EAAEhB,SAAWuC,CAC5C,IkDtMamlJ,GAAU/E,IlD0JhB,SAAiB3hJ,EAAGuB,EAAGsY,GAC1B,QAAgB,IAANtY,GAAqB,IAANA,SAAkB8wD,IAANryD,KACzB,IAANuB,GAAoB,IAANA,SAAkB8wD,IAANryD,CACpC,ImD7Ja2mJ,GAAQhF,InDoSd,SAAe3hJ,EAAGuB,EAAG4zB,GACxB,OAAO52B,MAAMwB,QAAQwB,GACfA,EAAEunB,WAAU3qB,GAAKilJ,GAAYpjJ,EAAG7B,MAAgB,EAChDilJ,GAAYpjJ,EAAGuB,EACzB,IoDzQA,IAAIqlJ,IAAgB,ECHb,SAASC,GACZt3I,EACAu3I,GAEA,IAAMzwI,EAAqBm+G,GAA4BjlH,EAAO8G,YAC9DywI,EAAa54B,GAAU44B,GAEvB,IAAMC,EAAoDxuI,GAAMuuI,GAuChE,GAtCyC,kBAA9BC,EAAqB7qC,OAC5B6qC,EAAqB7qC,KAAO,GAG3B6qC,EAAqBzV,UAGtByV,EAAqBzV,SAAWyV,EAAqBzV,SAgBrDlzI,OACKunB,QAAQohI,EAAqBzV,UAC7BrxI,SAAQ4rE,IAAsB,IAApBhE,EAAOqqE,GAAQrmE,EACC,kBAAZqmE,GAAoC,OAAZA,IAC9B6U,EAA6BzV,SAASzpE,GAAS,CAC5CyyE,IAAKpI,GAEb,KAzBR6U,EAAqBzV,SAAW,CAAC,EAiCjCyV,EAAqBxwI,MAAO,CAC5B,IAAMywI,EAAUj0I,GAAQg0I,EAAqBxwI,OACxCywI,EAAQpvI,SAASvB,IAClB2wI,EAAQjlJ,KAAKsU,GAEjB0wI,EAAqBxwI,MAAQywI,CACjC,CAUA,GAAKD,EAAqB/0I,KA6DnB,CACH,IAAMi1I,EAAkBF,EAAqB/0I,KACxCkY,MAAK1oB,IAAK0lJ,OnKjDmB/yF,EmKiDO3yD,EnKhDtCpD,OAAOyB,KAAKs0D,GAAK,KmKgD4B99C,EnKjDjD,IAAmC89C,CmKiDwB,IACrD8yF,IACDF,EAAqB/0I,KAAO+0I,EAAqB/0I,KAAK3S,MAAM,GAC5D0nJ,EAAqB/0I,KAAKjQ,KAAK,CAAE,CAACsU,GAAa,QAEvD,MA3DI,GAAI0wI,EAAqBxwI,MACrBwwI,EAAqB/0I,KAAO+0I,EAAqBxwI,MAAM7T,KAAKmlE,IACjD,CAAE,CAACA,GAAe,cAE1B,CAIH,GAAIt4D,EAAOoC,QAAS,CAChB,IAAMw1I,EAAyC,IAAItkJ,IACnDzE,OAAOunB,QAAQohI,EAAqBzV,UAAUrxI,SAAQy3E,IAAsB,IAApB7P,EAAOqqE,GAAQx6D,GAE5C,kBAAZw6D,GAAoC,OAAZA,KAChB9zI,OAAOyB,KAAKqyI,GAAShoH,MAAKoxG,GAAY+W,GAAkBpvI,IAAIq4H,OAK3E6rB,EAA0B3zI,IAAIq0D,EAClC,IAIJ,IACIu/E,EADAC,GAAuB,EAE3B93I,EAAOoC,QAAQ1R,SAAQsW,IACnB,IAAM+wI,EAAW54B,GAAqBn4G,GAASA,EAAQ,CAACA,GAClDgxI,EAAkBD,EAASx+H,WAAUmpH,IAAekV,EAA0BlkJ,IAAIgvI,KAEpFsV,EAAkB,GAClBA,EAAkBF,IAElBA,EAAsBE,EACtBH,EAA0BE,EAC9B,IAEAF,IACAL,EAAqB/0I,KAAOo1I,EAAwB1kJ,KAAKmlE,IAC9C,CAAE,CAACA,GAAe,UAIrC,CAMKk/E,EAAqB/0I,OACtB+0I,EAAqB/0I,KAAO,CAAC,CAAE,CAACqE,GAAa,QAErD,CAUJ,OAAO0wI,CACX,CAOO,SAASS,GACZj4I,EACAuH,GAEA,IAAKA,EAAM9E,KACP,MAAMy+G,GAAW,MAAO,CAAE35G,UAE9B,IAAM2wI,EAIA,GACN3wI,EAAM9E,KAAK/R,SAAQynJ,IACf,IAAMr2I,EAAMjT,OAAOyB,KAAK6nJ,GAAW,GAC7BC,EAAYvpJ,OAAO0V,OAAO4zI,GAAW,GAC3CD,EAAU1lJ,KAAK,CACXsP,MACAs2I,YACAC,WAAYj6B,GAAgBt8G,IAC9B,IAcN,MAZoDihH,CAACtyH,EAAcuB,KAC/D,IAAK,IAAItC,EAAI,EAAGA,EAAIwoJ,EAAUzoJ,SAAUC,EAAG,CACvC,IAAM4oJ,EAAWJ,EAAUxoJ,GACrB6oJ,EAASD,EAASD,WAAW5nJ,GAC7B+nJ,EAASF,EAASD,WAAWrmJ,GACnC,GAAIumJ,IAAWC,EAEX,MADmC,QAAvBF,EAASF,UAAsBK,GAAoBF,EAAQC,GAAUC,GAAoBD,EAAQD,EAGrH,EAIR,CAQO,SAASG,GACZC,EACApxI,GAEA,IAAKA,EAAM9E,KACP,MAAMy+G,GAAW,MAAO,CAAE35G,UAG9B,IDhLAw6H,ECgLM6W,GDhLN7W,ECgLiCx6H,EAAMw6H,SD9KlCsV,KACDjK,GAAajC,GAAaoB,SAAU,CAChCsE,MAAK,GACLP,SAAQA,KAEZlD,GAAajC,GAAal1B,MAAO,CAC7BsuB,KAAI,GACJwG,IAAG,GACHiI,WAAU,GACVmE,QAAO,GACPtE,IAAG,GACHC,KAAI,GACJN,IAAG,GACHE,IAAG,GACHE,KAAI,GACJL,IAAG,GACHE,KAAI,GACJqE,KAAI,GACJH,KAAI,GACJC,KAAI,GACJpS,IAAG,GACHsG,OAAM,GACNoM,MAAK,GACLE,MAAKA,KAETC,IAAgB,GAEb,IAAIrtC,GAAM+3B,ICuJjB,OAHsD7oE,GAC3C0/E,EAAWjhJ,KAAKuhE,EAG/B,CAGO57C,eAAeu7H,GAClBC,EACArmI,GAEA,IAAMimH,QAAaogB,EAAQ3iI,OAC3B,OAAKuiH,EAID1pI,MAAMwB,QAAQkoI,GACP/nI,QAAQoL,IACX28H,EAAKvlI,KAAI+lE,GAAOzmD,EAAGymD,YAIFzmD,EAAGimH,GARjB,IAWf,CCpNO,SAASqgB,GACZjyI,EACAS,GAEA,OAAKA,EAAM9E,MAA8B,IAAtB8E,EAAM9E,KAAKhT,OAGnB8X,EAAM9E,KAAKtP,KAAIqgI,GAAQ3kI,OAAOyB,KAAKkjI,GAAM,KAFzC,CAAC1sH,EAIhB,CAIO,IAAMkyI,GAAiE,IAAIvlJ,QAiE3E,SAASwlJ,GACZH,EACAI,GAEA,IAAKJ,EAAQrkB,WAAWe,SAAS2jB,YAC7B,MAAO,CACH1a,mBAAmB,GAG3B,IAAMpsD,EAzEH,SACHymE,GAEA,OAAO7lB,GACH+lB,GACAF,GACA,KACI,IAAMrkB,EAAaqkB,EAAQrkB,WACrB+iB,EAAuBF,GACzB7iB,EAAWJ,gBAAgBr0H,OAC3BgJ,GAAM8vI,EAAQvB,aAEZzwI,EAAa2tH,EAAWz0H,OAAO2kH,YAO/BgZ,EAAiBsa,GACnBxjB,EAAWz0H,OAAO4kH,WAClB4yB,GAiBEnX,EAAeqY,GACjBjkB,EAAWz0H,OAAO4kH,WAClB4yB,GAkBJ,MAR8B,CAC1B1wI,WAAYgyI,EAAQrkB,WAAWz0H,OAAO2kH,YACtChY,KAAM6qC,EAAqB7qC,KAC3BrpG,MAAOk0I,EAAqBl0I,MAC5Bs8H,WAAYmZ,GAAqBjyI,EAAY0wI,GAC7C7Z,eA/B8Dyb,CAACC,EAAiBC,KAChF,IAAMC,EAAqB,CACvBF,OACAC,OACAR,WAEJ,OAAOnb,EAAe4b,EAAmBF,KAAME,EAAmBD,KAAK,EA0BvEjZ,aAd8DnnE,GAKvDmnE,EAJkB,CACrBnnE,MACA4/E,WAEiC5/E,KAW/B,GAGtB,CAYwBsgF,CAAeV,GAC7Bhc,EAAoCxK,GAAewmB,EAAQz3F,SAASo4F,SAAS3pJ,MAAM,GACnF4pJ,EAAkDpnB,GAAewmB,EAAQz3F,SAASs4F,YACpFC,GAAmB,EAMjBC,EAJmDX,EACpD/lJ,KAAI2mJ,GlFjGN,SACHxf,GAEA,OAAQA,EAAczpE,WAClB,IAAK,SACD,MAAO,CACHA,UAAWypE,EAAczpE,UACzB53D,GAAIqhI,EAAchG,WAClBp7D,IAAKohE,EAAczV,aACnBzsD,SAAU,MAElB,IAAK,SACD,MAAO,CACHvH,UAAWypE,EAAczpE,UACzB53D,GAAIqhI,EAAchG,WAClBp7D,IAAK+mD,GAAaE,sBAAsBma,EAAczV,cACtDzsD,SAAUkiE,EAAcC,qBAAuBD,EAAcC,qBAA8B,WAEnG,IAAK,SACD,MAAO,CACH1pE,UAAWypE,EAAczpE,UACzB53D,GAAIqhI,EAAchG,WAClBp7D,IAAK,KACLd,SAAUkiE,EAAcC,sBAGxC,CkFuEmBwf,CAAsCD,KAChD1mJ,OAAOgsH,IAEmCzkG,MAAKq/H,IAChD,IAOMC,EAAyBxY,GAP8C,CACzEpvD,cACA8nD,YAAa6f,EACbld,kBACAC,eAAgB2c,IAIpB,MAAmB,sBAAfO,IAEsB,cAAfA,GACPL,GAAU,EnEzDhB,SACF9tG,EACAumC,EACA8nD,EACA2C,EACAC,IAGAtqH,EADoCorH,GAAgB/xF,IACjD,CACCumC,cACA8nD,cACA2C,kBACAC,kBAGR,CmE2CYmd,CACID,EACA5nE,EACA2nE,EACAld,EACA4c,IAEG,QATJ,EAUP,IAEJ,OAAIG,EACO,CACHpb,mBAAmB,GAGhB,CACHA,mBAAmB,EACnBmb,UACAO,WAAYrd,EAGxB,CCvJO,IAAMsd,GAAU,oBAAAA,IAAA,KACZC,KAA6B,IAAIx/H,GAAK,CAc5C,OAd4Cu/H,EAAAlrJ,UAO7CorJ,WAAA,SAAWxB,GACP,IAAMyB,EAAYzB,EAAQjlJ,WAC1B,OAAOo/H,GACHrjI,KAAKyqJ,KACLE,GACA,IAAMzB,GAEd,EAACsB,CAAA,CAfkB,GAuBhB,SAASI,GAAeC,EAAwB3B,GACnDA,EAAQ4B,UAAW,EACnB,IAAMH,EAAYzB,EAAQjlJ,WAC1B4mJ,EAAWJ,KAAKv1I,OAAOy1I,EAE3B,CAGO,SAASI,GAAwB7B,GACpC,OAAOA,EAAQ8B,UAAUz+D,UAAU1sF,MACvC,CAGO,IAaHorJ,GACAC,GAqCSC,IAtCTF,GAbmC,IAcnCC,GAbuC,IActC,CACDE,EACAP,KAEQ,KAAIA,EAAWJ,KAAKpgI,KAAO4gI,IAA3B,CAIA,IAAMI,EAAwBllH,KAAQ+kH,GAChCI,EAA0B,GAE1BC,EAAiBnsJ,MAAMyC,KAAKgpJ,EAAWJ,KAAK91I,UAClD,IAAK,IAAMu0I,KAAWqC,EAEdR,GAAwB7B,GAAW,IAIN,IAA7BA,EAAQsC,kBAA0BtC,EAAQuC,cAAgBJ,EAC1DT,GAAeC,EAAY3B,GAG/BoC,EAAa1oJ,KAAKsmJ,IAGtB,IAAMwC,EAAcJ,EAAazrJ,OAASorJ,GACtCS,GAAe,GAIOJ,EAAaz4I,MAAK,CAAChS,EAAGuB,IAAMvB,EAAE2qJ,iBAAmBppJ,EAAEopJ,mBAC1CtrJ,MAAM,EAAGwrJ,GACnC5qJ,SAAQooJ,GAAW0B,GAAeC,EAAY3B,IA1BvD,CA0BgE,GAS/DyC,GAA0D,IAAI/kG,QAQpE,SAASglG,GACZC,GAEIF,GAAiC7nJ,IAAI+nJ,KAKzCF,GAAiCt3I,IAAIw3I,G3FxH9B,IAAI9qJ,SAAQ4pB,GAAOjoB,WAAWioB,EAAK,K2F8HrCljB,MAAK,I3FjDP,WAEL,IADEsE,EAA2BnM,UAAAC,OAAA,QAAAqzD,IAAAtzD,UAAA,GAAAA,UAAA,QAAGszD,EAK9B,OAHAiwE,GAAmBA,GAAiB17H,MAAK,IAC9Bs7H,GAA0Bh3H,IAGzC,C2F0CoB+/I,CAAmB,OAC9BrkJ,MAAK,KACGokJ,EAAaE,WACdF,EAAaG,uBAAuBH,EAAcA,EAAaI,aAEnEN,GAAiCz2I,OAAO22I,EAAa,IAEjE,CCvEO,IAAMK,GAAa,WAgCtB,SAAAA,EACoBn3B,EACAo3B,EAITC,GACT,KAtCcC,iBAAmB,IAAIphI,IAA+C,KAMtEqhI,MAAQ,IAAI5oJ,IAAe,KAQ3Bg/D,SAA6F,oBAAzBV,qBAChF,IAAIA,sBAAgDuqF,IAChD,IAAM9jB,EAAQ8jB,EAAQ9jB,MAChB+jB,EAAYxsJ,KAAKqsJ,iBAAiB7qJ,IAAIinI,GACxC+jB,IACAA,EAAU,GAAGt3I,OAAOq3I,EAAQE,gBACF,IAAtBD,EAAU,GAAGniI,MAKbrqB,KAAKqsJ,iBAAiBn3I,OAAOuzH,GAErC,SAEJv1E,EAAS,KAGO6hE,YAAAA,EAAmB,KACnBo3B,SAAAA,EAAgD,KAIzDC,gBAAAA,EAEPD,EAAS91I,WAAUq2I,IACf1sJ,KAAKssJ,MAAMj4I,KAAI,KAEX,IADA,IAAMg4I,EAAmBrsJ,KAAKqsJ,iBACrBj1I,EAAQ,EAAGA,EAAQs1I,EAAO7sJ,OAAQuX,IAAS,CAChD,IAAMs1B,EAAQggH,EAAOt1I,GACfo1I,EAAYH,EAAiB7qJ,IAAIkrC,EAAMg4F,YAC7C,GAAI8nB,EAAW,CACX,IAAIv3B,EAAevoF,EAAMuoF,aACpBA,IACDA,EAAevoF,EAAMi+F,sBAEzB6hB,EAAU,GAAKv3B,CACnB,CACJ,KAEAj1H,KAAKssJ,MAAMjiI,MAAQ,GACnB04G,KAA4Bt7H,MAAK,KAC7BzH,KAAK2sJ,cAAc,GAE3B,GAER,CAAC,IAAAx1B,EAAA+0B,EAAA5sJ,UAmDA,OAnDA63H,EAEMw1B,aAAP,WAC4B,IAApB3sJ,KAAKssJ,MAAMjiI,OAGDjrB,MAAMyC,KAAK7B,KAAKssJ,OACxBxrJ,SAAQ8rJ,GAAQA,MACtB5sJ,KAAKssJ,MAAMn3I,QACf,EA2BAgiH,EAGOkT,sBAAP,SAA6B5B,GAGzB,OAFAzoI,KAAK2sJ,eACavpB,GAAkBpjI,KAAKqsJ,iBAAkB5jB,GAC1C,EACrB,EAACtR,EAEM01B,8BAAP,SAAqCpkB,GACjCzoI,KAAK2sJ,eACL,IAAMH,EAAYxsJ,KAAKqsJ,iBAAiB7qJ,IAAIinI,GAC5C,GAAI+jB,EACA,OAAOA,EAAU,EAEzB,EAACzvF,GAAAmvF,EAAA,EAAAh6I,IAAA,uBAAA1Q,IAjCD,WAEI,OAAO6tH,GACHrvH,KACA,uBAHO8sJ,GAAyB9sJ,MAMxC,GAAC,CAAAkS,IAAA,sBAAA1Q,IAED,WACI,IAAMqhB,EAAKiqI,GAAyB9sJ,MACpC,OAAOqvH,GACHrvH,KACA,uBACAspE,GAAOzmD,EAAG,CAACymD,IAAM,IAEzB,IAAC,CA/FqB,GAyH1B,SAASwjF,GACLngC,GAEA,IAAMoI,EAAcpI,EAASoI,YACvBs3B,EAAmB1/B,EAAS0/B,iBAC5B3pF,EAAWiqD,EAASjqD,SACpB6tD,EAAwBF,GAAaE,sBACrC67B,EAAkBz/B,EAASy/B,gBAyDjC,OAxD4FvC,IAGxF,IAFA,IAAMxmF,EAA2C,IAAIjkE,MAAMyqJ,EAAShqJ,QAC9DktJ,EAAqD,GAClD31I,EAAQ,EAAGA,EAAQyyI,EAAShqJ,OAAQuX,IAAS,CAClD,IAAIkyH,EAAUugB,EAASzyI,GACjBqxH,EAAiBa,EAAgBvU,GACjC03B,EAAiBxoB,GAAoBqF,EAAQzT,MAE/Cm3B,OAA8D,EAC9DC,OAA+E,EAC/ET,EAAYH,EAAiB7qJ,IAAIinI,GAChC+jB,EASDS,GADAD,EAAQR,EAAU,IACchrJ,IAAIirJ,IAPpCD,EAAY,CADZQ,EAAQ,IAAI/hI,IAGRq+G,GAEJ+iB,EAAiB5qJ,IAAIgnI,EAAO+jB,IAKhC,IAAIU,EAAmBD,EAA0BA,EAAwBprF,aAAU3O,EAC9Eg6F,IACD5jB,EAAU/Y,EAAsB+Y,GAChC4jB,EAAmBd,EAAgB9iB,GACnC0jB,EAAMvrJ,IAAIgrJ,EAAgBU,GAA0BD,IAChDxqF,GACAqqF,EAAcnqJ,KAAKsqJ,IAG3B7pF,EAAIjsD,GAAS81I,CACjB,CAsBA,OArBIH,EAAcltJ,OAAS,GAAK6iE,IAM5BiqD,EAAS2/B,MAAMj4I,KAAI,KACf,IAAK,IAAIyzH,EAAQ,EAAGA,EAAQilB,EAAcltJ,OAAQioI,IAAS,CACvD,IAAMx+D,EAAMyjF,EAAcjlB,GAC1BplE,EAAST,SAASqH,EAAK,CACnBm/D,MAAOn/D,EAAIsgE,QACX6iB,eAAgBxoB,GAAoB36D,EAAI46D,WAEhD,KAEAvX,EAAS2/B,MAAMjiI,MAAQ,GACvB04G,KAA4Bt7H,MAAK,KAC7BklH,EAASggC,cAAc,KAI5BtpF,CAAG,CAGlB,CAEO,SAAS+pF,GACZzgC,EACAk9B,GAGA,OAAOwD,EADsB1gC,EAAS0gC,sBACVxD,EAChC,CAOA,IACMsD,GADkC,oBAAZvrF,QAE5B,SAAyC5M,GACrC,OAAO,IAAI4M,QAAQ5M,EACvB,EACA,SAAiDA,GAC7C,MAAO,CACH6M,MAAKA,IACM7M,EAGnB,ECvQO,IAAMs4F,GAAmB,WAmB5B,OAAAvwF,IAXA,SACoB8nE,EAEhB0oB,EAEgB/5I,GAClB,KARc+4B,KAAOpG,KAAK,KAGR0+F,WAAAA,EAAmC,KAInCrxH,MAAAA,EAEhBxT,KAAKwtJ,UAAYJ,GAA4CptJ,KAAK6kI,WAAWuF,UAAWmjB,EAC5F,GAGA,EAAAr7I,IAAA,WAAA1Q,IAMA,WACI,OAAO6tH,GACHrvH,KACA,WACAA,KAAKwtJ,UAAUjqJ,KAAIpB,GAAKA,EAAE0nI,QAElC,GAGA,CAAA33H,IAAA,cAAA1Q,IACA,WACI,IAAM+B,EAAM,IAAI0nB,IAIhB,OAHAjrB,KAAKwtJ,UAAU1sJ,SAAQqB,IACnBoB,EAAI9B,IAAIU,EAAEynI,QAASznI,EAAE0nI,MAAM,IAExBxa,GACHrvH,KACA,cACAuD,EAER,GAAC,CAAA2O,IAAA,UAAA1Q,IAED,WAGI,IAFA,IAAM+B,EAAM,IAAI0nB,IACVuiI,EAAYxtJ,KAAKwtJ,UACd1tJ,EAAI,EAAGA,EAAI0tJ,EAAU3tJ,OAAQC,IAAK,CACvC,IAAMwpE,EAAMkkF,EAAU1tJ,GACtByD,EAAI9B,IAAI6nE,EAAIsgE,QAAStgE,EACzB,CACA,OAAO+lD,GACHrvH,KACA,UACAuD,EAER,IAAC,CA3D2B,GC4C5BkqJ,GAAc,EAKLC,GAAW,WAiCpB,SAAAA,EACWp1F,EACAqvF,EACA9iB,GAGT,IADSp3B,EAAU7tG,UAAAC,OAAA,QAAAqzD,IAAAtzD,UAAA,GAAAA,UAAA,GAAG,CAAC,EACvB,KAhCKyJ,KAVEokJ,GAUuB,KAKzBE,uBAAiC,EAAC,KAClClC,cAAgBtlH,KAAK,KAGrBqlH,iBAAmB,EAAC,KAEpBV,UAAW,EAAK,KAGhBE,UAAY,IAAIje,GAAgB,MAAK,KASrCt7E,QAAiD,KAAI,KA6FrDm8F,oBAAmC,EAAC,KAIpCC,eAAyB,EAAC,KAC1BC,aAAuB,EAAC,KAMxBC,kBAAsCnrB,GAAqB,KApGvDtqE,GAAAA,EAAa,KACbqvF,WAAAA,EAA2C,KAC3C9iB,WAAAA,EAAmC,KAEnCp3B,MAAAA,EAEFk6C,IACD3nJ,KAAK2nJ,WA+XN,CACHxV,SAAU,CAAC,IA7XXnyI,KAAKguJ,mBA4pBN,SACHj5B,EACAp9G,GAGA,IACKA,EAAMolG,MACPplG,EAAMw6H,UACiC,IAAvClzI,OAAOyB,KAAKiX,EAAMw6H,UAAUtyI,QAC5B8X,EAAMw6H,SAASpd,GACjB,CACE,IAAMpzH,EAAagW,EAAMw6H,SAASpd,GAClC,GAAqB,kBAAVpzH,EACP,OAAOA,EACJ,GAC2B,IAA9B1C,OAAOyB,KAAKiB,GAAO9B,QACE,kBAAd8B,EAAMw5I,IAEb,OAAOx5I,EAAMw5I,IAIjB,GACkC,IAA9Bl8I,OAAOyB,KAAKiB,GAAO9B,QACnBT,MAAMwB,QAAQe,EAAMw5I,OAElBx5I,EAAMw5I,IAAcpwH,MAAKprB,GAAkB,kBAANA,IAEvC,OAAOgC,EAAMw5I,GAErB,CACA,OAAO,CACX,CA5rBkC6S,CACtBhuJ,KAAK6kI,WAAWz0H,OAAO2kH,YACvB4yB,EAER,CAAC,IAAAxwB,EAAAu2B,EAAApuJ,UAoXA,OAnRD63H,EAIA82B,eAAA,SAAeC,GACX,GAA6B,kBAAlBA,EAAX,CAOWA,aAAyBjjI,MAChCijI,EAAgB9uJ,MAAMyC,KAAMqsJ,EAAyDv5I,WAGzF,IAAMw5I,EAAiB,IAAIb,GACvBttJ,KAAK6kI,WACLqpB,EACAA,EAAcruJ,QAElBG,KAAKyxD,QAAU08F,CAPf,MARInuJ,KAAKyxD,QAAU,IAAI67F,GACfttJ,KAAK6kI,WACL,GACAqpB,EAaZ,EAEA/2B,EAIMi3B,kBAAN1gI,iBAKI,GAJA1tB,KAAK2tJ,uBAAyB3tJ,KAAK2tJ,uBAAyB,EAC5D3tJ,KAAK6tJ,eAAiB1nH,KAGN,UAAZnmC,KAAKs4D,GAAgB,CACrB,IAAMyuE,EAAgB/mI,KAAKquJ,mBACrB50I,QAAezZ,KAAK6kI,WAAWJ,gBAAgBjxH,MAAMuzH,GAC3D,GAAoB,SAAhBttH,EAAOwE,MAAoBje,KAAK6kI,WAAWe,SAAS0oB,eAMpD,OAAO70I,EAAOjG,MALd,MAAM89G,GAAW,OAAQ,CACrBuT,WAAY7kI,KAAK6kI,WACjB0pB,SAAUvuJ,KAAK2nJ,YAK3B,CAEA,GAAgB,cAAZ3nJ,KAAKs4D,GAAoB,CACzB,IAAM+xC,EAAgBq4B,GAAe1iI,KAAK2nJ,WAAWxV,UAAiBnyI,KAAK6kI,WAAWz0H,OAAO2kH,aAAa6tB,IACpGv/E,EAAM,IAAIp4C,IACVujI,EAA0B,GAchC,GAZAnkD,EAAIvpG,SAAQuI,IACR,IAAMigI,EAAUtpI,KAAK6kI,WAAWuF,UAAUyiB,8BAA8BxjJ,GACxE,GAAIigI,GACA,IAAKA,EAAQtT,SAAU,CACnB,IAAM1sD,EAAMtpE,KAAK6kI,WAAWuF,UAAUE,oBAAoBhB,GAC1DjmE,EAAI5hE,IAAI4H,EAAIigE,EAChB,OAEAklF,EAAc5rJ,KAAKyG,EACvB,IAGAmlJ,EAAc3uJ,OAAS,SACJG,KAAK6kI,WAAWJ,gBAAgBE,kBAAkB6pB,GAAe,IAC/E1tJ,SAAQwoI,IACT,IAAMhgE,EAAMtpE,KAAK6kI,WAAWuF,UAAUE,oBAAoBhB,GAC1DjmE,EAAI5hE,IAAI6nE,EAAIsgE,QAAStgE,EAAI,IAGjC,OAAOjG,CACX,CAGA,IAAMorF,EA4aP/gI,eACHw7H,GAEA,IAAIpgB,EAAoC,GAClCjE,EAAaqkB,EAAQrkB,WAQ3B,GAAIqkB,EAAQ8E,mBACR,GAAI5uJ,MAAMwB,QAAQsoJ,EAAQ8E,oBAAqB,CAC3C,IAAIU,EAASxF,EAAQ8E,mBAcrB,GAbAU,EAASA,EAAOlrJ,QAAOilI,IAEnB,IAAMa,EAAU4f,EAAQrkB,WAAWuF,UAAUyiB,8BAA8BpkB,GAC3E,OAAIa,IACKA,EAAQtT,UACT8S,EAAKlmI,KAAK0mI,IAEP,EAGX,IAGAolB,EAAO7uJ,OAAS,EAAG,CACnB,IAAM8uJ,QAAwB9pB,EAAWJ,gBAAgBE,kBAAkB+pB,GAAQ,GACnF9+B,GAAckZ,EAAM6lB,EACxB,CACJ,KAAO,CACH,IAAMlmB,EAAQygB,EAAQ8E,mBAGlB1kB,EAAU4f,EAAQrkB,WAAWuF,UAAUyiB,8BAA8BpkB,GACzE,IAAKa,EAAS,CAEV,IAAMslB,QAAwB/pB,EAAWJ,gBAAgBE,kBAAkB,CAAC8D,IAAQ,GAChFmmB,EAAgB,KAChBtlB,EAAUslB,EAAgB,GAElC,CACItlB,IAAYA,EAAQtT,UACpB8S,EAAKlmI,KAAK0mI,EAElB,KACG,CACH,IAAMvC,EAAgBmiB,EAAQmF,mBACxBzwC,QAAoBinB,EAAWJ,gBAAgB9sH,MAAMovH,GAC3D+B,EAAOlrB,EAAY4vC,SACvB,CACA,OAAO1kB,CAEX,CAne4B+lB,CAA2B7uJ,MAC/C,OAAOyuJ,EAAYhnJ,MAAKqhI,IACpB9oI,KAAK8tJ,aAAe3nH,KACb2iG,IAEf,EAEA3R,EAOO5wG,KAAP,SAAYuoI,GACR,GAAIA,GAA8B,YAAZ9uJ,KAAKs4D,GACvB,MAAMg5D,GAAW,MAAO,CACpBuT,WAAY7kI,KAAK6kI,WAAWt/H,KAC5BoS,MAAO3X,KAAK2nJ,WACZrvF,GAAIt4D,KAAKs4D,KAUjB,OAAOy2F,GAAa/uJ,MACfyH,MAAK,IClQZ,SAA+Bk0B,EAAuBopC,GAC1D,IAAMiqF,EAA8B,kBAAXjqF,EACzB,OAAO,IAAIhkE,SAAe,SAACqH,EAAS+C,GAClC,IAAMyzD,EAAa,IAAI+7D,GAAkB,CACvCj2H,KAAM,SAAC/C,GACLyG,EAAQzG,GACRi9D,EAAWrqD,aACb,EACA0E,MAAO9N,EACPihB,SAAU,WACJ4iI,EACF5mJ,EAAQ28D,EAAQ3vC,cAEhBjqB,EAAO,IAAI6hI,GAEf,IAEFrxG,EAAOtlB,UAAUuoD,EACnB,GACF,CD+OwBqwF,CAAejvJ,KAAK4G,KAC/Ba,MAAKgS,IACF,IAAKA,GAAUq1I,EACX,MAAMx9B,GAAW,OAAQ,CACrBuT,WAAY7kI,KAAK6kI,WAAWt/H,KAC5BoS,MAAO3X,KAAK2nJ,WACZrvF,GAAIt4D,KAAKs4D,KAGb,OAAO7+C,CACX,GAEZ,EAwBA09G,EAIAlzH,SAAA,WACI,IAAMirJ,EAAYlgC,GAAW,CACzB12D,GAAIt4D,KAAKs4D,GACT3gD,MAAO3X,KAAK2nJ,WACZl6C,MAAOztG,KAAKytG,QACb,GACG9rG,EAAQoR,KAAKC,UAAUk8I,GAE7B,OADAlvJ,KAAKiE,SAAW,IAAMtC,EACfA,CACX,EAEAw1H,EAKAk3B,iBAAA,WACI,IAAMc,EAAY,CACdjG,QAASlpJ,KAET2nJ,WAAYD,GACR1nJ,KAAK6kI,WAAWz0H,OAAO4kH,WACvBh1H,KAAK2nJ,aAGZwH,EAAUxH,WAAWxV,SAAiBnc,SAAW,CAAEmlB,KAAK,GACrDgU,EAAUxH,WAAWvwI,OACrB+3I,EAAUxH,WAAWvwI,MAAM85B,QAAQ,YAEvC+hF,GAAe,kBAAmBk8B,GAElC,IAAMxtJ,EAAQytJ,GACVpvJ,KAAK6kI,WAAWz0H,OAAO4kH,WACvBm6B,EAAUxH,YAId,OADA3nJ,KAAKquJ,iBAAmB,IAAM1sJ,EACvBA,CACX,EAEAw1H,EAIAk4B,sBAAA,SAAsB/lB,GAElB,OAAIA,EAAQtT,UAILh2H,KAAKywI,aAAanH,EAC7B,EAEAnS,EAIA3+G,OAAA,WACI,OAAOxY,KACFumB,OACA9e,MAAKqhI,GACE1pI,MAAMwB,QAAQkoI,GAEP/nI,QAAQoL,IAAI28H,EAAKvlI,KAAI+lE,GAAOA,EAAI9wD,YAE/BswH,EAAatwH,UAGrC,EAAC2+G,EACDyV,kBAAA,WACI,OAAOqc,GACHjpJ,KAAKsvJ,WACJhmF,GAAQA,EAAIsjE,qBAErB,EAUAzV,EAIAriH,OAAA,SAAO42H,GACH,MAAMlI,GAAc,SACxB,EAACrM,EAEDkV,MAAA,SAAMkjB,GACF,OAAOtG,GACHjpJ,KAAKsvJ,WACJhmF,GAAQA,EAAI+iE,MAAMkjB,IAE3B,EAACp4B,EACDmV,iBAAA,SAAiBD,GACb,OAAO4c,GACHjpJ,KAAKsvJ,WACJhmF,GAAQA,EAAIgjE,iBAAiBD,IAEtC,EAAClV,EACDpiH,OAAA,SAAOk3H,GACH,OAAOgd,GACHjpJ,KAAKsvJ,WACJhmF,GAAQA,EAAIv0D,OAAOk3H,IAE5B,EAAC9U,EACDgV,kBAAA,SAAkBF,GACd,OAAOgd,GACHjpJ,KAAKsvJ,WACJhmF,GAAQA,EAAI6iE,kBAAkBF,IAEvC,EAIA9U,EACAplH,MAAA,SAAMy9I,GACF,MAAMhsB,GAAc,gBACxB,EAACrM,EACDtkH,KAAA,SAAK48I,GACD,MAAMjsB,GAAc,gBACxB,EAACrM,EACDpa,KAAA,SAAK2yC,GACD,MAAMlsB,GAAc,gBACxB,EAACrM,EACDzjH,MAAA,SAAMg8I,GACF,MAAMlsB,GAAc,gBACxB,EAACzmE,GAAA2wF,EAAA,EAAAx7I,IAAA,IAAA1Q,IAnXD,WACI,IAAKxB,KAAK2vJ,GAAI,CAEV,IAAMC,EAAW5vJ,KAAK6kI,WAAWj+H,EAAE0tE,KAK/B9wE,IAAO+mI,IAAgBA,EAAYC,UAKnC7K,GAAU,MAEV5B,IAAS,IAAMgxB,GAAa/uJ,QAE5BuD,IAAI,IAAMvD,KAAKyxD,UAEf+vE,GAAYmB,IAEZ/C,IAAqB,CAACzpE,EAAMy0E,OACpBz0E,GAAQA,EAAK5pB,OAASm2F,GAAekI,GAAMr+F,QAMnD/oC,IAAOiW,KAAYA,IAKnBlW,IAAKkW,IACD,IAAMo2I,EAAYntB,GAAejpH,GACjC,MAAgB,UAAZzZ,KAAKs4D,GACEu3F,EAAUr8I,MACE,YAAZxT,KAAKs4D,GAE0B,IAA/Bu3F,EAAUrC,UAAU3tJ,OAAe,KAAOgwJ,EAAUrC,UAAU,GAClD,cAAZxtJ,KAAKs4D,GACLu3F,EAAUC,QAIVD,EAAUrC,UAAUttJ,MAAM,EACrC,KAIRF,KAAK2vJ,GE1EX,eAAgB,IAAAn1F,EAAA,GAAAC,EAAA,EAAAA,EAAA76D,UAAAC,OAAA46D,IAAAD,EAAAC,GAAA76D,UAAA66D,GACpB,IAAM9tD,EAAYoyH,GAAavkE,GACzByjE,EAAae,GAAUxkE,EAAMjR,KAC7BmW,EAAUlF,EAChB,OAAQkF,EAAQ7/D,OAGO,IAAnB6/D,EAAQ7/D,OAERu9H,GAAU19D,EAAQ,IAElBo/D,GAASb,EAATa,CAAqBj9H,GAAK69D,EAAS/yD,IALnC6sH,EAMN,CF8DsB/jD,CACNm6E,EAKA5vJ,KAAKgrJ,UAAU12E,KACX9wE,IAAO,KAAM,KAGzB,CACA,OAAOxD,KAAK2vJ,EAChB,GAAC,CAAAz9I,IAAA,KAAA1Q,IAED,WAEI,OADmBxB,KAAK6kI,WAAWe,SAASoE,uBAC1BC,eACdjqI,KAAK4G,OACLssD,EACAlzD,KAAK6kI,WAAWe,SAExB,GAUA,CAAA1zH,IAAA,eAAA1Q,IA2IA,WACmBxB,KAAK6kI,WAAWz0H,OAAO4kH,WAKtC,OAAO3F,GACHrvH,KACA,eACA8oJ,GACI14I,EARgBs3I,GACpB1nJ,KAAK6kI,WAAWz0H,OAAO4kH,WACvBh1H,KAAK2nJ,aAUb,GAAC,CAAAz1I,IAAA,YAAA1Q,IAsFD,WACI,OAAOxB,IACX,IAAC,CAnXmB,GAsbjB,SAAS+vJ,GACZz3F,EACAi2F,EACA1pB,EACAp3B,GAEAwlB,GAAe,mBAAoB,CAC/B36D,KACAi2F,WACA1pB,aACAp3B,UAGJ,IAlBAy7C,EAkBI7lF,EAAM,IAAIqqF,GAA4Bp1F,EAAIi2F,EAAU1pB,EAAYp3B,GAMpE,OAHApqC,GArBA6lF,EAqBuB7lF,GAnBRwhE,WAAWonB,YAAYvB,WAAWxB,GAoBjD0C,GAAwB/mB,GAEjBxhE,CACX,CAOA,SAAS2sF,GAAiB9G,GACtB,IAAM+G,EAA2B/G,EAAQoG,UAAUzqB,WAAWqrB,mBAAmBC,aACjF,OAAIjH,EAAQ0E,oBAAsBqC,CAKtC,CAQA,SAASlB,GAAa7F,GAElB,OACIA,EAAQrkB,WAAWe,SAASmmB,WAC5BiE,GAAiB9G,GAEVtmB,IAGXsmB,EAAQ6E,kBAAoB7E,EAAQ6E,kBAC/BtmJ,MAAK,IAQd,SAAkCyhJ,GAM9B,GALAA,EAAQsC,iBAAmBrlH,KAOvB+iH,EAAQrkB,WAAWe,SAASmmB,WAE5BiE,GAAiB9G,GAEjB,OAAOtmB,GAGX,IAAIv/D,GAAM,EACN+sF,GAAa,GACmB,IAAhClH,EAAQ0E,qBAERwC,GAAa,GAMjB,IAAKA,EAAY,CACb,IAAMC,EAAqBnH,EAAQoG,UAAUzqB,WAAWqrB,mBAAmBI,QAAQpH,EAAQ0E,mBAAqB,GAChH,GAA2B,OAAvByC,EAEAD,GAAa,MACV,CACHlH,EAAQ0E,mBAAqB1E,EAAQoG,UAAUzqB,WAAWqrB,mBAAmBC,aAE7E,IAAMI,EAA8CrH,EAAQoG,UAAUzqB,WACjEqrB,mBACAM,kBAAkBH,GAEvB,GAAmB,UAAfnH,EAAQ5wF,GAAgB,CAExB,IAAMm4F,EAAgB/tB,GAAewmB,EAAQz3F,SAASj+C,MAClDk9I,EAAWD,EACfF,EAAgBzvJ,SAAQopJ,IACpB,IAAMyG,EAAiBzG,EAAGvf,sBAAwBue,EAAQmG,sBAAsBnF,EAAGvf,sBAC7E+F,EAAewY,EAAQmG,sBAAsBnF,EAAGj1B,eAEjD07B,GAAkBjgB,GACnBggB,IAEAC,IAAmBjgB,GACnBggB,GACJ,IAEAA,IAAaD,IACbptF,GAAM,EACN6lF,EAAQ+E,eAAeyC,GAE/B,KAAO,CAEH,IAAME,EAAoBvH,GACtBH,EACAqH,GAEAK,EAAkB/hB,kBAElBuhB,GAAa,EACNQ,EAAkB5G,UAEzB3mF,GAAM,EACN6lF,EAAQ+E,eAAe2C,EAAkBrG,YAEjD,CACJ,CACJ,CAGA,GAAI6F,EACA,OAAOlH,EAAQkF,oBACV3mJ,MAAKymJ,IAOFhF,EAAQ0E,mBAAqB1E,EAAQrkB,WAAWqrB,mBAAmBC,aAGtC,kBAAlBjC,GAEFhF,EAAQz3F,SACTy8F,IAAkBhF,EAAQz3F,QAAQj+C,QAElC6vD,GAAM,EACN6lF,EAAQ+E,eAAeC,IAEpB7qF,IAGN6lF,EAAQz3F,SzJ3lBtB,SACHsjE,EACA87B,EACAC,GAEA,GAAID,EAAIhxJ,SAAWixJ,EAAIjxJ,OACnB,OAAO,EAIX,IAFA,IAAIC,EAAI,EACF68D,EAAMk0F,EAAIhxJ,OACTC,EAAI68D,GAAK,CACZ,IAAMo0F,EAAOF,EAAI/wJ,GACXkxJ,EAAOF,EAAIhxJ,GAGjB,GAFAA,IAGIixJ,EAAKl7B,OAASm7B,EAAKn7B,MACnBk7B,EAAKh8B,KAAiBi8B,EAAKj8B,GAE3B,OAAO,CAEf,CACA,OAAO,CACX,CyJqkBqBk8B,CACG/H,EAAQrkB,WAAWz0H,OAAO2kH,YAC1Bm5B,EACAhF,EAAQz3F,QAAQo4F,YAGpBxmF,GAAM,EACN6lF,EAAQ+E,eAAeC,IAEpB7qF,MAGnB,OAAOtiE,QAAQqH,QAAQi7D,EAC3B,CAxHoB6tF,CAAchI,KACvBA,EAAQ6E,kBACnB,CA4HO,SAASqB,GACZh/I,EACA+gJ,GAEA,IAAKA,EAAgBt+I,KACjB,MAAMy+G,GAAW,MAAO,CACpB35G,MAAOw5I,IAaf,MAAO,CACHx5I,MAAOw5I,EACPxd,UAPczB,GACd9hI,EACA+gJ,GAOR,CGjqBO,IAAMC,GAA8B,aAC9BC,GAAiC,gBAajCC,GAAiF/7B,GAAwB,CAClHnzG,QAAS,EACTmvI,MAJuC,qBAKvCr6I,WAAY,CACRhF,IAAK,KACLo1D,OAAQ,CACJ,UACA,OAEJ8U,UAAW,KAEfvtE,KAAM,SACN49D,WAAY,CACRpjE,GAAI,CACAwF,KAAM,SACN2iJ,UAAW,KAEft/I,IAAK,CACDrD,KAAM,UAEVopC,QAAS,CACLppC,KAAM,SACN4iJ,KAAM,CACFL,GACAC,GApCiC,sBAsCjC,UAGR/hI,KAAM,CACFzgB,KAAM,SACN4mH,sBAAsB,IAG9BjjH,QAAS,GACTmjH,SAAU,CACN,MACA,UACA,QAEJF,sBAAsB,EAQtBi8B,SAAU,CACNC,OAAQ,EACR1zI,KAAM,gBAKP,SAAS2zI,GACZ1/I,EACA+lC,GAEA,OAAOk9E,GACHm8B,GACA,CACIp/I,MACA+lC,WAGZ,CAMOvqB,eAAemkI,GAClBptB,GAEA,IAAMqtB,EAAsB1C,GACxB3qB,EAAgBr0H,OAChB,CACI+hI,SAAU,CACNl6F,QAASm5G,GACTp7B,SAAU,CACNmlB,KAAK,IAGbtoI,KAAM,CAAC,CAAExJ,GAAI,QACb0zG,KAAM,IAKd,aAF0B0nB,EAAgB9sH,MAAMm6I,IACpBtE,SAEhC,CAOO,IAAMuE,GAA6B,eAE7BC,GAA4BJ,GACrCG,GACAV,IAyPG,SAASY,GAAuB1sJ,EAAc6K,GACjD,OAAO7K,EAAO,IAAM6K,EAAOgS,OAC/B,CC3WO,SAAS8vI,GACZ9hJ,EACAkf,GAqBA,OAlBAA,E5J4SG,SAAgC6iI,EAAyBn9F,GAE5D,IADA,IAAMo9F,EAAcnzJ,OAAOyB,KAAKyxJ,EAASloF,eAChCnqE,EAAI,EAAGA,EAAIsyJ,EAAYvyJ,SAAUC,EAAG,CACzC,IAAMoS,EAAMkgJ,EAAYtyJ,GACnBb,OAAOK,UAAUC,eAAeC,KAAKw1D,EAAK9iD,IAA4B,qBAAb8iD,EAAI9iD,KAC9D8iD,EAAI9iD,GAAOigJ,EAASloF,cAAc/3D,GAE1C,CACA,OAAO8iD,CACX,C4JrTWq9F,CAAuBjiJ,EAD9Bkf,EAAOy/F,GAAUz/F,IAE2B,kBAAjClf,EAAO4kH,WAAW99G,aACzBoY,EAAOwlG,GACH1kH,EAAO2kH,YACP3kH,EAAO4kH,WACP1lG,IAGRA,EAAK2mG,MAAQxB,KACRx1H,OAAOK,UAAUC,eAAeC,KAAK8vB,EAAM,cAC5CA,EAAK0mG,UAAW,GAEf/2H,OAAOK,UAAUC,eAAeC,KAAK8vB,EAAM,kBAC5CA,EAAKymG,aAAe,CAAC,GAEpB92H,OAAOK,UAAUC,eAAeC,KAAK8vB,EAAM,UAC5CA,EAAKumG,K7JhBF,I6JkBAvmG,CACX,CAoBO5B,eAAe4kI,GAClBjpD,EACAkpD,EACAluB,EACA2B,EACAD,EACA55F,EAMA8qF,GAEA,IAGMu7B,SAH8BX,GAChCU,IAGC/uJ,QAAOivJ,GAAWA,EAAQnjI,KAAK/pB,OAASwgI,IAEzC2sB,EAIE,GACNF,EAA2B1xJ,SAAQ2xJ,IAC/BC,EAAe9vJ,KAAK,CAChBmjI,eAAgB0sB,EAAQnjI,KAAK/pB,KAC7B6K,OAAQqiJ,EAAQnjI,KAAKlf,OACrBuiJ,cAAc,IAElBF,EAAQnjI,KAAKsjI,kBAAkB9xJ,SAAQ+xJ,GAAOH,EAAe9vJ,KAAK,CAC9DmjI,eAAgB8sB,EAAI9sB,eACpB4sB,cAAc,EACdviJ,OAAQyiJ,EAAIziJ,UACb,IAIP,IAAM0iJ,EAAe,IAAIpvJ,IAqCzB,GApCAgvJ,EAAiBA,EAAelvJ,QAAOqvJ,IACnC,IAAM3gJ,EAAM2gJ,EAAI9sB,eAAiB,KAAO8sB,EAAIziJ,OAAOgS,QACnD,OAAI0wI,EAAahvJ,IAAIoO,KAGjB4gJ,EAAaz+I,IAAInC,IACV,EACX,UAIEnR,QAAQoL,IACVumJ,EACKnvJ,KAAImqB,UACD,IAAM+2G,QAAwBp7B,EAAQ0pD,sBAA2B,CAC7DhtB,eAAgB8sB,EAAI9sB,eACpB1B,wBACA2B,eACAgtB,eAAe,EACfh9H,QAAS,CAAC,EACV5lB,OAAQyiJ,EAAIziJ,OACZ+7B,WACA8mH,QAAS5iC,GAAaC,oBAEpBmU,EAAgBjsH,SAClBq6I,EAAIF,oBACEv/B,GAAoB,yBAA0B,CAChD/pB,UACA28B,aAAcA,EACdD,kBAER,KAKR9O,EAAc,CACd,IAAM0Q,EAAY6qB,EAA2BjvJ,KAAI+lE,IAC7C,IAAM4pF,EAAWztB,GAAqBn8D,GAOtC,OANA4pF,EAASl9B,UAAW,EACpBk9B,EAASj9B,MAAMvB,IAAMvuF,KACrB+sH,EAASr9B,KAAOuO,GACZC,EACA/6D,GAEG,CACHd,SAAUc,EACV14C,SAAUsiI,EACb,UAECX,EAAwBtsB,UAC1B0B,EACA,oCAER,CACJ,CAGO,SAASwrB,GACZtuB,GAEA,GAAIA,EAAWknB,UACX,MAAMz6B,GACF,QACA,CACIuT,WAAYA,EAAWt/H,KACvB6c,QAASyiH,EAAWz0H,OAAOgS,SAI3C,CCzKO,IAAMgxI,GAAiB,WAsB1B,SAAAA,EACWvuB,GACT,KAnBMwuB,KAAuB,GAAE,KACzBC,QAAkB,EAAC,KACnBC,gBAEJ,IAAI1vJ,QAAS,KAKT6L,OAAqC,GAAE,KAExCgE,MAAgB,IAAG,KAIlB44I,MAAQ,IAAI5oJ,IAAe,KAGxBmhI,WAAAA,EAEP7kI,KAAKqzJ,KAAKzwJ,KACN5C,KAAK6kI,WAAWe,SAAS4tB,YAAYl/E,KACjC9wE,IAAOiwJ,GAAmBA,EAAgB1tB,iBAAmB/lI,KAAK6kI,WAAWt/H,OAC7E/B,IAAOkwJ,IACWA,EAAKhH,OAAO,GACZliB,WAEpBn0H,WAAUs9I,IACR3zJ,KAAKssJ,MAAMj4I,KAAI,IAAMrU,KAAK4zJ,oBAAoBD,EAAUjH,UACpD1sJ,KAAKssJ,MAAMjiI,MAAQ,GACnB04G,KAA4Bt7H,MAAK,KAC7BzH,KAAK2sJ,cAAc,GAE3B,IAGZ,CAAC,IAAAx1B,EAAAi8B,EAAA9zJ,UA4GA,OA5GA63H,EAEOw1B,aAAR,WAC4B,IAApB3sJ,KAAKssJ,MAAMjiI,OAGDjrB,MAAMyC,KAAK7B,KAAKssJ,OACxBxrJ,SAAQ8rJ,GAAQA,MACtB5sJ,KAAKssJ,MAAMn3I,QACf,EAACgiH,EAEOy8B,oBAAR,SAA4BlH,GACxB,IAAMmH,EAAgB7zJ,KAAKszJ,QAC3BtzJ,KAAKszJ,QAAUtzJ,KAAKszJ,QAAU5G,EAAO7sJ,OACjC6sJ,EAAO7sJ,OAASG,KAAK0T,MACrB1T,KAAK0P,OAASg9I,EAAOxsJ,OAAuB,EAAjBwsJ,EAAO7sJ,SAElC+vH,GAAc5vH,KAAK0P,OAAQg9I,GAC3B1sJ,KAAK0P,OAAS1P,KAAK0P,OAAOxP,OAAoB,EAAdF,KAAK0T,QAIzC,IAFA,IAAMogJ,EAAcD,EAAgB,EAC9BN,EAAkBvzJ,KAAKuzJ,gBACpBn8I,EAAQ,EAAGA,EAAQs1I,EAAO7sJ,OAAQuX,IAAS,CAChD,IAAMs1B,EAAQggH,EAAOt1I,GACrBm8I,EAAgB9xJ,IAAIirC,EAAOonH,EAAc18I,EAC7C,CACJ,EAAC+/G,EAEDg5B,WAAA,WAEI,OADAnwJ,KAAK2sJ,eACE3sJ,KAAKszJ,OAChB,EAACn8B,EACD48B,UAAA,WAEI,OADA/zJ,KAAK2sJ,eACE3sJ,KAAK0P,MAChB,EAEAynH,EAIA68B,uBAAA,SAAuBC,GACnBj0J,KAAK2sJ,eACL,IAAMuH,EAAcl0J,KAAK0P,OAAO,GAC1BykJ,EAAgBn0J,KAAKuzJ,gBAAgB/xJ,IACvC0yJ,GAGJ,OAAID,EAAUE,EACH,KAEEF,EAAUE,CAE3B,EAEAh9B,EAIAm5B,QAAA,SAAQ2D,GACJj0J,KAAK2sJ,eACL,IAAMtpF,EAAM,GACR+wF,EAAep0J,KAAKg0J,uBAAuBC,GAC/C,GAAqB,OAAjBG,EACA,OAAO,KAEX,OAAa,CACT,IAAMC,EAAYr0J,KAAK0P,OAAO0kJ,GAE9B,GADAA,KACKC,EACD,OAAOhxF,EAEPA,EAAIzgE,KAAKyxJ,EAEjB,CACJ,EAACl9B,EAEDm9B,QAAA,SAAQL,EAAiBpxI,GACrB7iB,KAAK2sJ,eACL,IAAMtpF,EAAMrjE,KAAKswJ,QAAQ2D,GACzB,GAAY,OAAR5wF,EACA,MAAM,IAAI9gE,MAAM,iBAEhB8gE,EAAIviE,SAAQopJ,GAAMrnI,EAAGqnI,IAE7B,EAEA/yB,EAKAq5B,kBAAA,SAAkB+D,GAEd,OADAv0J,KAAK2sJ,eACE4H,EAAar0J,MAAM,EAS9B,EAACi3H,EAED75E,QAAA,WACIt9C,KAAKssJ,MAAMn3I,QACXnV,KAAKqzJ,KAAKvyJ,SAAQorF,GAAOA,EAAI33E,eACjC,EAAC6+I,CAAA,CArJyB,GCM9B,IAAMoB,GAA2B,IAAI3wJ,QAE9B,SAAS0zH,GACZs0B,GAEA,IAAM4I,EAAc5I,EAAaz7I,OAAOmnH,uBAClCm9B,EAoFH,SAAiC7I,GACpC,IAAMxyF,EAAa,CAAC,EAMpB,OALAp6D,OACKunB,QAAQqlI,EAAa8I,SACrB7zJ,SAAQ4rE,IAAY,IAAV/pE,EAAGH,GAAEkqE,EACZrT,EAAM12D,GAAKH,CAAC,IAEb62D,CACX,CA5FqBu7F,CAAwB/I,GAEnCxyF,EAAQ,CAAC,EAwCf,MAvCA,CACIo7F,EACAC,EAJchrB,IAMhB5oI,SAAQk0D,IACQ/1D,OAAOmV,oBAAoB4gD,GACnCl0D,SAAQoR,IACV,IAAM6H,EAAY9a,OAAOiD,yBAAyB8yD,EAAK9iD,GAKnDgC,GAAa,GAEbhC,EAAIyG,WAAW,MACfzG,EAAIsnE,SAAS,MACbtnE,EAAIyG,WAAW,MACfzG,EAAIsnE,SAAS,QACftlE,GAAa,GAEW,oBAAf6F,EAAKpY,MAEZ1C,OAAOsC,eAAe83D,EAAOnnD,EAAK,CAC9B1Q,GAAAA,GACI,OAAOuY,EAAKpY,MAAMK,KAAKhC,KAC3B,EACAkU,aACAxS,cAAc,KAIlBqY,EAAK7F,WAAaA,EAClB6F,EAAKrY,cAAe,EAChBqY,EAAKnY,WACLmY,EAAKnY,UAAW,GACpB3C,OAAOsC,eAAe83D,EAAOnnD,EAAK6H,GACtC,GACF,IAECs/C,CACX,CAoBO,SAASw7F,GACZhJ,EACAiJ,EACAxrB,GAEA,IAAMhgE,E7F+XH,SACHvlE,EACA8gI,EACAkwB,GAEA,IAAMzrF,EAAM,IAAIvlE,EAAY8gI,EAAYkwB,GAExC,OADA9hC,GAAe,mBAAoB3pD,GAC5BA,CACX,C6FvYgB0rF,CACRF,EACAjJ,EACAx7B,GAAaE,sBAAsB+Y,IAIvC,OAFAuiB,EAAaoJ,cAAc,OAAQ,SAAU3rB,EAAShgE,GACtD2pD,GAAe,uBAAwB3pD,GAChCA,CACX,CC3FO,IAAM4rF,GAAiD,SAC1Dp1J,EACAm0B,GAYA,OAAIs6F,GAVqB2W,GAAiCplI,EAAEq1J,kBACpCjwB,GAAiCplI,EAAEs1J,kBAahDr0J,QAAQqH,QAAQ,CACnBs/H,SAAS,IAQV3mI,QAAQqH,QAAQ,CACnBs/H,SAAS,EACTzS,aAAcn1H,EAAEs1J,iBAExB,EC2DA,IAAMC,GAAa,CAAC,MAAO,QAErBC,GAAa,CAAC,SAAU,OAAQ,SAAU,UAE5CC,IAAe,EAENC,GAAgB,WAgBzB,SAAAA,EACW5vB,EACArgI,EACA6K,EACAqlJ,GAST,IARSC,EAAgD91J,UAAAC,OAAA,QAAAqzD,IAAAtzD,UAAA,GAAAA,UAAA,GAAG,CAAC,EACpD+1J,EAAwC/1J,UAAAC,OAAA,QAAAqzD,IAAAtzD,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC5C+0J,EAAuB/0J,UAAAC,OAAA,QAAAqzD,IAAAtzD,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC3Bg2J,EAA2Bh2J,UAAAC,OAAA,QAAAqzD,IAAAtzD,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC/Bo2B,EAAYp2B,UAAAC,OAAA,QAAAqzD,IAAAtzD,UAAA,GAAAA,UAAA,GAAG,CAAC,EAChBosJ,EAAgDpsJ,UAAAC,OAAA,QAAAqzD,IAAAtzD,UAAA,GAAAA,UAAA,GAAGurJ,GACnD0K,EAAuBj2J,UAAAC,OAAA,SAAAqzD,IAAAtzD,UAAA,IAAAA,UAAA,IAAG,CAAC,EAC3Bk2J,EAAkDl2J,UAAAC,OAAA,SAAAqzD,IAAAtzD,UAAA,IAAAA,UAAA,IAAGs1J,GAC9D,KAjBKzwB,gBAA0F,CAAC,EAAC,KACnFsxB,SAA+C,IAAIryJ,IAAK,KACjE0oI,sBAA+D,CAAC,EAAC,KAmCjE4pB,yBAAsD,IAAI/qI,IAAK,KAE/DgrI,QAAkB,EAAK,KACvBC,MAOH,CAAC,EAAC,KACCC,MAAwB,GAAE,KAE1B/rB,UAAuD,CAAC,EAAC,KAEzD6hB,YX7IA,IAAIzB,GW6IwC,KAC5C5jJ,EAA+C,CAAC,EAAC,KACjDwvJ,YAA+B,CAAC,EAAC,KACjClG,mBAAwD,CAAC,EAAC,KAU1DmG,UAAyC,GAAE,KAC3CtK,WAAY,EAAK,KAEjBuK,SAAwC,GAAE,KA/DtC1wB,SAAAA,EAAqF,KACrFrgI,KAAAA,EAAY,KACZ6K,OAAAA,EAAgC,KAChCqlJ,wBAAAA,EAAwF,KACxFC,wBAAAA,EAAgD,KAChDC,oBAAAA,EAAwC,KACxChB,QAAAA,EAAuB,KACvBiB,YAAAA,EAA2B,KAC3B5/H,QAAAA,EAAY,KACZg2H,uBAAAA,EAAgD,KAChD6J,QAAAA,EAAuB,KACvBC,gBAAAA,EA6xBf,SACIjxB,GAEA,GAAI0wB,GAAc,OAClBA,IAAe,EACf,IAAMgB,EAAWt3J,OAAOgC,eAAe4jI,GACvCywB,GAAWx0J,SAAQoR,IACfmjJ,GAAW9xJ,KAAIizJ,IACX,IAAMC,EAASD,EAAOhjC,GAAQthH,GAC9BqkJ,EAASE,GAAU,SAAUtjC,EAAaujC,GACtC,OAAO12J,KAAK22J,QAAQH,EAAMtkJ,EAAKihH,EAAKujC,EACxC,CAAC,GACH,GAEV,CAzyBQE,CAAoB52J,KAAK62J,eAC7B,CAAC,IAAA1/B,EAAAq+B,EAAAl2J,UA+wBA,OA/wBA63H,EAmDY2/B,QAAb,iBACI92J,KAAKykI,gBAAkBkB,GACnB3lI,KAAK4lI,SACL5lI,KAAKy1J,wBACLz1J,KAAKoQ,OAAO4kH,YAEhBh1H,KAAKosI,sBAAwB,IAAInE,GAC7BjoI,KAAKykI,gBACLzkI,KAAKoQ,OAAO2kH,aACZ,CAAC9qB,EAAS4+B,IAAY0D,GAA0BvsI,KAAaiqG,EAAS4+B,KACtEpvH,GAAUzZ,KAAKysI,UAAU,OAAQ,OAAQhzH,KAG7C,IHnCJorH,EG8CQiwB,EAXEiC,EAAwB/2J,KAAK4lI,SAAS4tB,YAAYl/E,KACpD9wE,IAAOiwJ,GAAmBA,EAAgB1tB,iBAAmB/lI,KAAKuF,QAEtEvF,KAAK4G,EAAImwJ,EAAsBziF,KAC3BypD,IAAS01B,GAAmBA,EAAgB/G,UAEhD1sJ,KAAKo2J,YAAcW,EAAsBziF,KACrC/wE,IAAIkwJ,GAAmBA,EAAgBtsB,cAG3CnnI,KAAKkwJ,oBH7CTrrB,EG6CsE7kI,KAAK62J,eH3CpE,IAAIzD,GAA6BvuB,IG6CpC7kI,KAAKoqI,UAAY,IAAI8hB,GACjBlsJ,KAAKoQ,OAAO2kH,YACZ/0H,KAAK4lI,SAAS4tB,YAAYl/E,KACtB9wE,IAAOiwJ,GAAmBA,EAAgB1tB,iBAAmB/lI,KAAKuF,OAASkuJ,EAAgB/G,OAAO,GAAGliB,UACrGjnI,IAAInB,GAAKA,EAAEsqJ,WAEfpjB,IFrJL,IACHuiB,EEwJY,OAHKiJ,IFrJjBjJ,EEsJ+D7rJ,KAAK62J,eAApD/B,EFpJTzxB,GACHmxB,GACA3I,GACA,IAAM/e,GACFvV,GAAqBs0B,OEkJVgJ,GAAoB70J,KAAK62J,eAAgB/B,EAAqBxrB,EAAQ,IAKrF,IAAM0tB,EAAoBh3J,KAAK4lI,SAASqxB,cAAc3vB,eAAehzD,KACjE9wE,IAAOkwJ,IACH,IAAMxhJ,EAAMlS,KAAKuF,KAAO,IAAMvF,KAAKoQ,OAAOgS,QAQ1C,QAPcsxI,EAAKhH,OAAO3hI,MAAK2hB,GAEQ,eAA/BA,EAAMuoF,aAAah9E,SACnBvL,EAAMuoF,aAAa/iH,MAAQA,GACP,WAApBw6B,EAAMu0B,WAGA,KAEpB5qD,WAAUqX,gBACF1tB,KAAKs9C,gBACLv8C,QAAQoL,IAAInM,KAAKs2J,SAAS/yJ,KAAIsf,GAAMA,MAAM,IAEpD7iB,KAAKm2J,MAAMvzJ,KAAKo0J,GAQhB,IAAME,QAA6Bl3J,KAAK4lI,SAASuxB,aAC3CC,EAAUp3J,KAAKykI,gBAAgB6C,eAAejxH,WAAUs9I,IAK1D,IAJA,IAAMjH,EAAS,IAAIttJ,MAAMu0J,EAAUjH,OAAO7sJ,QACpCw3J,EAAY1D,EAAUjH,OACtB3mB,EAAiB/lI,KAAKuF,KACtBgrH,EAAwBF,GAAaE,sBAClCn5G,EAAQ,EAAGA,EAAQigJ,EAAUx3J,OAAQuX,IAAS,CACnD,IAAMs1B,EAAQ2qH,EAAUjgJ,GACxBs1I,EAAOt1I,GAAS,CACZstH,WAAYh4F,EAAMg4F,WAClBqB,iBACAyE,SAAS,EACTvpE,UAAWv0B,EAAMu0B,UACjBg0D,aAAc1E,EAAsB7jF,EAAMuoF,cAC1C0V,qBAAsBpa,EAAsB7jF,EAAMi+F,sBAE1D,CACA,IAAM8oB,EAA2E,CAC7EpqJ,GAAIsqJ,EAAUtqJ,GACdiuJ,UAAU,EACVvxB,eAAgB/lI,KAAKuF,KACrB4xJ,aAAcD,EACdxK,SACAvmB,cAAenmI,KAAK4lI,SAAS5kB,MAC7BmmB,WAAYwsB,EAAUxsB,WACtBlvF,QAAS07G,EAAU17G,QACnBs/G,QAAS5D,EAAU4D,QACnBhkG,UAAWogG,EAAUpgG,WAEzBvzD,KAAK4lI,SAAS4xB,MAAM/D,EAAgB,IAuBxC,OArBAzzJ,KAAKm2J,MAAMvzJ,KAAKw0J,GAMhBp3J,KAAKm2J,MAAMvzJ,KACP5C,KAAKykI,gBACA8C,yBACAlxH,WAAUu2I,IACP5sJ,KACK81J,gBAAgBlJ,EAAKtxH,MAAOsxH,EAAK30G,SACjCxwC,MAAK84G,IACFvgH,KAAKykI,gBAAgB+C,6BAA6B,CAC9Cn+H,GAAIujJ,EAAKvjJ,GACTk3G,UACF,GACJ,KAIXuiB,EACX,EAGA3L,EAIAj5D,QAAA,SAAQu5F,GAEJ,MADAtE,GAAiCnzJ,MAC3BwjI,GAAc,UACxB,EAEArM,EACAugC,gBAAA,WACI,MAAMl0B,GAAc,mBACxB,EAACrM,EACDwgC,kBAAA,WACI,MAAMn0B,GAAc,mBACxB,EAACrM,EACDygC,eAAA,WAAsD,IAAvCC,EAAiBj4J,UAAAC,OAAA,QAAAqzD,IAAAtzD,UAAA,GAAAA,UAAA,GAAG,GAE/B,OADAuzJ,GAAiCnzJ,MAC1BA,KAAK23J,oBAAoBC,eAAeC,EACnD,EAAC1gC,EACD2gC,eAAA,WAAqD,IAAtCD,EAAiBj4J,UAAAC,OAAA,QAAAqzD,IAAAtzD,UAAA,GAAAA,UAAA,GAAG,GAC/B,OAAOI,KAAK23J,oBAAoBG,eAAeD,EACnD,EAAC1gC,EAEK4gC,OAANrqI,eACIs/E,GAEAmmD,GAAiCnzJ,MACjC,IAAMsmI,QAAoBtmI,KAAKg4J,WAAW,CAAChrD,IAErCw/B,EAAUlG,EAAYrtH,MAAM,GAGlC,OAFA2rH,GAA2B5kI,KAAcgtG,EAAahtG,KAAKoQ,OAAO2kH,aAAqB/nB,EAAMw/B,GACxE9J,GAAe4D,EAAY2xB,QAAQ,GAE5D,EAAC9gC,EAEK6gC,WAANtqI,eACIm8H,GAUA,GALAsJ,GAAiCnzJ,MAKT,IAApB6pJ,EAAShqJ,OACT,MAAO,CACHo4J,QAAS,GACTh/I,MAAO,IAIf,IAQIi/I,EAREnjC,EAAc/0H,KAAKoQ,OAAO2kH,YAShC,GAAI/0H,KAAKm4J,SAAS,MAAO,UACrBD,QAAmBn3J,QAAQoL,IACvB09I,EAAStmJ,KAAI+lI,IACT,IAAM8uB,EAAalG,GAA2BlyJ,KAAKoQ,OAAQk5H,GAC3D,OAAOtpI,KAAKysI,UAAU,MAAO,SAAU2rB,GAClC3wJ,MAAK,KACK,CAAEmpB,SAAUwnI,KACrB,SAGX,CACHF,EAAa,IAAI94J,MAAMyqJ,EAAShqJ,QAEhC,IADA,IAAMkpJ,EAAS/oJ,KAAKoQ,OACXgH,EAAQ,EAAGA,EAAQyyI,EAAShqJ,OAAQuX,IAAS,CAClD,IACMghJ,EAAalG,GAA2BnJ,EAD9Bc,EAASzyI,IAEzB8gJ,EAAW9gJ,GAAS,CAAEwZ,SAAUwnI,EACpC,CACJ,CAEA,IAUIC,EAVE3iJ,QAAgB1V,KAAKykI,gBAAgBwB,UACvCiyB,EACA,6BASErzB,EAAa7kI,KACbqjE,EAAM,CACR,WAAI40F,GACA,IAAKI,EAAa,CACd,IAAMJ,EAAUxxB,GACZ5B,EAAWz0H,OAAO2kH,YAClBmjC,EACAxiJ,GAEJ2iJ,EAAcjL,GAAwDvoB,EAAWuF,UAAW6tB,EAChG,CACA,OAAOI,CACX,EACAp/I,MAAOvD,EAAQuD,OAGnB,GAAIjZ,KAAKm4J,SAAS,OAAQ,UAAW,CACjC,IAAMrI,EAAuC,IAAI7kI,IACjDitI,EAAWp3J,SAAQ+xJ,IACf,IAAMvpF,EAAMupF,EAAIjiI,SAChBk/H,EAAQruJ,IAAK6nE,EAAYyrD,GAAqBzrD,EAAI,UAEhDvoE,QAAQoL,IACVk3D,EAAI40F,QAAQ10J,KAAI+lE,GACLtpE,KAAKysI,UACR,OACA,SACAqjB,EAAQtuJ,IAAI8nE,EAAIsgE,SAChBtgE,KAIhB,CAEA,OAAOjG,CACX,EAAC8zD,EAEKmhC,WAAN5qI,eACI28E,GAKA8oD,GAAiCnzJ,MACjC,IAAM+0H,EAAc/0H,KAAKoQ,OAAO2kH,YAKhC,GAAmB,IAAf1qB,EAAIxqG,OACJ,MAAO,CACHo4J,QAAS,GACTh/I,MAAO,IAIf,IAAMs/I,QAAsBv4J,KAAKgrI,UAAU3gC,GAAK9jF,OAC1CsjI,EAA6C,GAC7CiG,EAAuD,IAAI7kI,IACjE7rB,MAAMyC,KAAK02J,EAAc5jJ,UAAU7T,SAAQ03J,IACvC,IAAMlpI,EAAuCkpI,EAAWhtB,eAAc,GACtEqe,EAASjnJ,KAAK0sB,GACdwgI,EAAQruJ,IAAI+2J,EAAW5uB,QAASt6G,EAAK,UAGnCvuB,QAAQoL,IACV09I,EAAStmJ,KAAI+lE,IACT,IAAMsgE,EAAWtgE,EAAYtpE,KAAKoQ,OAAO2kH,aACzC,OAAO/0H,KAAKysI,UAAU,MAAO,SAAUnjE,EAAKivF,EAAc/2J,IAAIooI,GAAS,KAG/E,IAAM6uB,EAA6C5O,EAAStmJ,KAAI+lE,IAC5D,IAAM4pF,EAAWnkC,GAAUzlD,GAE3B,OADA4pF,EAASl9B,UAAW,EACb,CACHxtD,SAAUc,EACV14C,SAAUsiI,EACb,IAECx9I,QAAgB1V,KAAKykI,gBAAgBwB,UACvCwyB,EACA,6BASEC,EALUjyB,GACZzmI,KAAKoQ,OAAO2kH,YACZ0jC,EACA/iJ,GAEiCnS,KAAIpB,GAAKA,EAAE4yH,KAgBhD,aAbMh0H,QAAQoL,IACVusJ,EAAWn1J,KAAI8F,GACJrJ,KAAKysI,UACR,OACA,SACAqjB,EAAQtuJ,IAAI6H,GACZkvJ,EAAc/2J,IAAI6H,OAOvB,CACH4uJ,QAHgBS,EAAWn1J,KAAI8F,GAAM+5H,GAAkBm1B,EAAelvJ,KAItE4P,MAAOvD,EAAQuD,MAEvB,EAEAk+G,EAGMwhC,WAANjrI,eAAiBm8H,GAIbsJ,GAAiCnzJ,MACjC,IAAM44J,EAA+B,GAC/BC,EAA8C,IAAI5tI,IACxD4+H,EAAS/oJ,SAAQwoI,IACb,IAAMwvB,EAAU5G,GAA2BlyJ,KAAKoQ,OAAQk5H,GAClDM,EAAkBkvB,EAAQ94J,KAAKoQ,OAAO2kH,aAC5C,IAAK6U,EACD,MAAMtY,GAAW,OAAQ,CACrByD,YAAa/0H,KAAKoQ,OAAO2kH,YACzBzlG,KAAMwpI,EACN1oJ,OAAQpQ,KAAKoQ,OAAO4kH,aAG5B6jC,EAAep3J,IAAImoI,EAASkvB,GAC5BF,EAAWh2J,KAAKk2J,EAAQ,IAG5B,IAAMC,QAAqB/4J,KAAKg4J,WAAWY,GACrCX,EAAUc,EAAad,QAAQ/3J,MAAM,GACrC+Y,EAA+C,GAiBrD,aAdMlY,QAAQoL,IACV4sJ,EAAa9/I,MAAM1V,KAAImqB,UACnB,GAAmB,MAAfsjC,EAAIjkD,OACJkM,EAAMrW,KAAKouD,OACR,CACH,IAAM3nD,EAAK2nD,EAAI0zE,WACTI,EAAY1B,GAAkBy1B,EAAgBxvJ,GAC9C2vJ,EAAct2B,GAAe1xE,EAAI21E,cACjCr9D,EAAMtpE,KAAKoqI,UAAUijB,qBAAqB,CAAC2L,IAAc,GACzDnsB,QAAevjE,EAAI6iE,mBAAkB,IAAMrH,IACjDmzB,EAAQr1J,KAAKiqI,EACjB,MAGD,CACH5zH,QACAg/I,UAER,EAEA9gC,EAGM8hC,OAANvrI,eAAas/E,GACTmmD,GAAiCnzJ,MACjC,IAAMk5J,QAAmBl5J,KAAK24J,WAAW,CAAC3rD,IAO1C,OANA43B,GACI5kI,KAAK62J,eACJ7pD,EAAahtG,KAAKoQ,OAAO2kH,aAC1B/nB,EACAksD,EAAWjgJ,MAAM,IAEdigJ,EAAWjB,QAAQ,EAC9B,EAEA9gC,EAGAgiC,kBAAA,SAAkBnsD,GACdmmD,GAAiCnzJ,MACjC,IAAM84J,EAAU5G,GAA2BlyJ,KAAKoQ,OAAQ48F,GAClD48B,EAAkBkvB,EAAQ94J,KAAKoQ,OAAO2kH,aAC5C,IAAK6U,EACD,MAAMtY,GAAW,OAAQ,CACrBhiG,KAAM09E,IAKd,IAAInxD,EAAQ77C,KAAKg2J,yBAAyBx0J,IAAIooI,GAc9C,OAbK/tF,IACDA,EAAQinF,IAEZjnF,EAAQA,EACHp0C,MAAK,IA2WlB,SACIokJ,EACAjiB,EACA58B,GAWA,IAAMosD,EAAmBvN,EAAazhB,UAAUyiB,8BAA8BjjB,GAC9E,GAAIwvB,EACA,OAAOr4J,QAAQqH,QAAQ,CACnBkhE,IAAKuiF,EAAazhB,UAAUijB,qBAAqB,CAAC+L,IAAmB,GACrEC,UAAU,IAGlB,OAAOxN,EAAa3gB,QAAQtB,GAASrjH,OAChC9e,MAAK6hE,GACGA,EAMM,CACHA,MACA+vF,UAAU,GAPPxN,EAAakM,OAAO/qD,GAAMvlG,MAAKolI,IAAU,CAC5CvjE,IAAKujE,EACLwsB,UAAU,OAS9B,CA9YwBC,CAAyCt5J,KAAa4pI,EAAgBkvB,KACjFrxJ,MAAM8xJ,GACEA,EAAYF,SAGNE,EAAYjwF,IAyVvC,SACIA,EACA0jC,GAEA,OAAO1jC,EAAI6iE,mBAAmBqtB,GACnBxsD,GAEf,CAlW2BysD,CAAyBF,EAAYjwF,IAAKwvF,KAK7D94J,KAAKg2J,yBAAyBv0J,IAAImoI,EAAS/tF,GACpCA,CACX,EAACs7E,EAEDpsG,KAAA,SAAKwjI,GAOD,GADA4E,GAAiCnzJ,MACT,kBAAbuuJ,EACP,MAAMj9B,GAAW,OAAQ,CACrBi9B,aASR,OALKA,IACDA,ER7ID,CACHpc,SAAU,CAAC,IQ+IG4d,GAAc,OAAQxB,EAAUvuJ,KAElD,EAACm3H,EAED+T,QAAA,SACIqjB,GAUA,GAHA4E,GAAiCnzJ,MAIT,kBAAbuuJ,GACPnvJ,MAAMwB,QAAQ2tJ,GAEd,MAAMh9B,GAAe,OAAQ,CACzBg9B,aAIR,IAAI52I,EAEJ,GAAwB,kBAAb42I,EACP52I,EAAQo4I,GAAc,UAAW,CAC7B5d,SAAU,CACN,CAACnyI,KAAKoQ,OAAO2kH,aAAcw5B,GAE/B76I,MAAO,GACR1T,UACA,CAOH,GANKuuJ,IACDA,ERnLL,CACHpc,SAAU,CAAC,IQuLFoc,EAAwB76I,MACzB,MAAM49G,GAAW,QAGrBi9B,EAAWx/B,GAAUw/B,IACH76I,MAAQ,EAC1BiE,EAAQo4I,GAA8B,UAAWxB,EAAUvuJ,KAC/D,CAGA,OAAO2X,CACX,EAACw/G,EAED3jH,MAAA,SAAM+6I,GAWF,OALA4E,GAAiCnzJ,MAC5BuuJ,IACDA,ER7MD,CACHpc,SAAU,CAAC,IQ8MG4d,GAAc,QAASxB,EAAUvuJ,KAEnD,EAEAm3H,EAIA6T,UAAA,SACI3gC,GAgBA,OATA8oD,GAAiCnzJ,MAQnB+vJ,GAAc,YAPmB,CAC3C5d,SAAU,CACN,CAACnyI,KAAKoQ,OAAO2kH,aAAc,CACvB6tB,IAAKv4C,EAAInqG,MAAM,MAI0BF,KAEzD,EAEAm3H,EAKAuiC,WAAA,WACI,MAAMl2B,GAAc,YACxB,EAEArM,EAIAwiC,WAAA,SAAWC,GACP,MAAMp2B,GAAc,YACxB,EAACrM,EAED0iC,WAAA,SAAWnuB,GACP,MAAMlI,GAAc,OACxB,EAEArM,EAGAw/B,QAAA,SAAQH,EAAoBtkJ,EAAkBihH,GAA4B,IAAlBujC,EAAQ92J,UAAAC,OAAA,QAAAqzD,IAAAtzD,UAAA,IAAAA,UAAA,GAC5D,GAAmB,oBAARuzH,EACP,MAAM5B,GAAe,OAAQ,CACzBr/G,MACAskJ,SAIR,IAAKnB,GAAW58I,SAAS+9I,GACrB,MAAMjlC,GAAe,OAAQ,CACzBr/G,MACAskJ,SAIR,IAAKlB,GAAW78I,SAASvG,GACrB,MAAMo/G,GAAW,OAAQ,CACrBp/G,QAIR,GAAa,SAATskJ,GAA2B,WAARtkJ,IAAiC,IAAbwkJ,EACvC,MAAMplC,GAAW,QAAS,CACtBklC,OACAtkJ,MACAwkJ,aAKR,IAAMoD,EAAW3mC,EAAInxH,KAAKhC,MAEpB+5J,EAAUrD,EAAW,WAAa,SAExC12J,KAAKk2J,MAAMhkJ,GAAOlS,KAAKk2J,MAAMhkJ,IAAQ,CAAC,EACtClS,KAAKk2J,MAAMhkJ,GAAKskJ,GAAQx2J,KAAKk2J,MAAMhkJ,GAAKskJ,IAAS,CAC7CwD,OAAQ,GACRtD,SAAU,IAEd12J,KAAKk2J,MAAMhkJ,GAAKskJ,GAAMuD,GAASn3J,KAAKk3J,EACxC,EAAC3iC,EAED8iC,SAAA,SAASzD,EAAoBtkJ,GACzB,OACKlS,KAAKk2J,MAAMhkJ,IACXlS,KAAKk2J,MAAMhkJ,GAAKskJ,GAOdx2J,KAAKk2J,MAAMhkJ,GAAKskJ,GALZ,CACHwD,OAAQ,GACRtD,SAAU,GAItB,EAACv/B,EAEDghC,SAAA,SAAS3B,EAAoBtkJ,GAKzB,IACKlS,KAAKk2J,MAAMhkJ,KACXlS,KAAKk2J,MAAMhkJ,GAAKskJ,GAEjB,OAAO,EAGX,IAAMN,EAAQl2J,KAAKi6J,SAASzD,EAAMtkJ,GAClC,QAAKgkJ,IAGEA,EAAM8D,OAAOn6J,OAAS,GAAKq2J,EAAMQ,SAAS72J,OAAS,EAC9D,EAACs3H,EAEDsV,UAAA,SAAU+pB,EAAoBtkJ,EAAkBod,EAAWwgB,GACvD,IAAMomH,EAAQl2J,KAAKi6J,SAASzD,EAAMtkJ,GAElC,OAAKgkJ,EtGjsBN,SACH5J,EACA4N,GAEA,OAAO5N,EACFpmJ,QACG,CAACw4B,EAASh6B,IAAUg6B,EAAgBj3B,KAAK/C,IACzC3D,QAAQqH,QAAQ8xJ,GAE5B,CsG8rBeC,CADOjE,EAAM8D,OAAOz2J,KAAK4O,GAAc,IAAMA,EAAKmd,EAAMwgB,MAG1DroC,MAAK,IAAM1G,QAAQoL,IAChB+pJ,EAAMQ,SACDnzJ,KAAK4O,GAAcA,EAAKmd,EAAMwgB,QAThCgzF,EAWf,EAEA3L,EAGA89B,cAAA,SAAcuB,EAAoBtkJ,EAAkBod,EAAWwgB,GAC3D,GAAK9vC,KAAKm4J,SAAS3B,EAAMtkJ,GAAzB,CAGA,IAAMgkJ,EAAQl2J,KAAKi6J,SAASzD,EAAMtkJ,GAC7BgkJ,GACLA,EAAM8D,OAAOl5J,SAASqR,GAAcA,EAAKmd,EAAMwgB,IAH/C,CAIJ,EAEAqnF,EAKA+L,YAAA,SAAY32F,GAQR,OAPY,IAAIxrC,SAAc4pB,IAC1B,IAAM5e,EAAUrJ,YAAW,KACvB1C,KAAK+1J,SAAS7gJ,OAAOnJ,GACrB4e,GAAK,GACN4hB,GACHvsC,KAAK+1J,SAAS1hJ,IAAItI,EAAQ,GAGlC,EAACorH,EAEK75E,QAAN5vB,iBACI,OAAI1tB,KAAK+rJ,UACEnpB,UAIL7hI,QAAQoL,IAAInM,KAAKq2J,UAAU9yJ,KAAIsf,GAAMA,OAQ3C7iB,KAAK+rJ,WAAY,EAGjB3sJ,MAAMyC,KAAK7B,KAAK+1J,UAAUj1J,SAAQiL,GAAWE,aAAaF,KACtD/L,KAAKkwJ,oBACLlwJ,KAAKkwJ,mBAAmB5yG,UAUrBt9C,KAAK4lI,SAASkmB,qBAChBrkJ,MAAK,IAAMzH,KAAKykI,gBAAgBpzH,UAChC5J,MAAK,KAOFzH,KAAKm2J,MAAMr1J,SAAQorF,GAAOA,EAAI33E,uBAEvBvU,KAAK4lI,SAASmF,YAAY/qI,KAAKuF,MAC/B6tH,GAAoB,0BAA2BpzH,MAAMyH,MAAK,KAAM,OAEnF,EAEA0vH,EAGM3+G,OAANkV,uBACU1tB,KAAKs9C,gBACLv8C,QAAQoL,IAAInM,KAAKs2J,SAAS/yJ,KAAIsf,GAAMA,aACpCyvI,GACFtyJ,KAAK4lI,SAASv8B,QACdrpG,KAAK4lI,SAASqxB,cACdj3J,KAAK4lI,SAAS5kB,MACdhhH,KAAK4lI,SAASrgI,KACdvF,KAAKuF,KACLvF,KAAK4lI,SAASz5F,SACdnsC,KAAK4lI,SAAS3O,aAEtB,EAACl6D,GAAAy4F,EAAA,EAAAtjJ,IAAA,UAAA1Q,IA7wBD,WACI,OAAOxB,KAAK4G,EAAE0tE,KACV9wE,IAAO0mJ,GAAuB,WAAjBA,EAAGjpF,YAExB,GAAC,CAAA/uD,IAAA,UAAA1Q,IACD,WACI,OAAOxB,KAAK4G,EAAE0tE,KACV9wE,IAAO0mJ,GAAuB,WAAjBA,EAAGjpF,YAExB,GAAC,CAAA/uD,IAAA,UAAA1Q,IACD,WACI,OAAOxB,KAAK4G,EAAE0tE,KACV9wE,IAAO0mJ,GAAuB,WAAjBA,EAAGjpF,YAExB,GAwBA,CAAA/uD,IAAA,iBAAA1Q,IAyuBA,WACI,OAAOxB,IACX,IAAC,CAlzBwB,GC3GtB,IAAIo6J,GAAY,WACrB,IAAIC,EAAYz6J,UAAUC,OAAS,QAAsBqzD,IAAjBtzD,UAAU,GAAmBA,UAAU,GAAK,EACpFI,KAAKs6J,WAAaD,GAAa,EAS/Br6J,KAAKu6J,IAAM,EAQXv6J,KAAKw6J,IAAM,IAAI92J,IAMf1D,KAAKy6J,KAAO,EAUZz6J,KAAK06J,KAAO,IAAIzvI,IAChBjrB,KAAK26J,KAAO,IAAI1vI,GAClB,EAuLA,SAAS2vI,GAAmBC,EAAWhwI,GACrC,GAAKA,EAAL,CAIA,GAFIA,EAAQiwI,aAAa7uJ,aAAa4e,EAAQiwI,aAE1CD,EAAUF,KAAK72J,IAAI+mB,GAAU,CAC/B,IAAImvG,EAAS6gC,EAAUF,KAAKn5J,IAAIqpB,GAEhCgwI,EAAUH,KAAa,OAAE1gC,GAEzB6gC,EAAUF,KAAa,OAAE9vI,EAC3B,CAGAgwI,EAAUL,IAAY,OAAE3vI,EAbJ,CActB,CAQA,SAASkwI,GAAaF,GAEhBA,EAAUG,QAAiC,IAAvBH,EAAUL,IAAInwI,OACtCwwI,EAAUG,QAAS,EAEnBt4J,YAAW,WAEJm4J,EAAUI,SAYfv4J,YAAW,WAEJm4J,EAAUI,WAjErB,SAA6BJ,GACA,IAAvBA,EAAUL,IAAInwI,OAEHwwI,EAAUL,IAAI7lJ,SAEAjQ,OAAO/C,MAEtBu5J,UAGdx4J,YAAW,WACT,OAAOq4J,GAAaF,EACtB,GAAG,GACL,CA0DMM,CAAoBN,GAEpBA,EAAUG,QAAS,GAPjBH,EAAUG,QAAS,CAQvB,GAAG,GAtBDH,EAAUG,QAAS,CAuBvB,GAAG,GACL,CA7OAZ,GAAU96J,UAAY,CACpB27J,OAAQ,WACN,OAAOj7J,KAAKu6J,IAAMv6J,KAAKs6J,UACzB,EAOAc,KAAM,WACJp7J,KAAKu6J,KACP,EACAc,OAAQ,WACNr7J,KAAKu6J,MAELQ,GAAa/6J,KACf,EAOAs7J,SAAU,SAAkBnoC,GAC1B,IAGIooC,EAHA/hG,EAAQx5D,KAEZA,KAAKo7J,OAGL,IACEG,EAAepoC,GACjB,CAAE,MAAOniE,GAEP,MADAhxD,KAAKq7J,SACCrqG,CACR,CAEA,OAAKuqG,EAAa9zJ,MAAqC,oBAAtB8zJ,EAAa9zJ,KAMrC8zJ,EAAa9zJ,MAAK,SAAU47D,GAIjC,OAFA7J,EAAM6hG,SAECh4F,CACT,IAAU,OAAE,SAAUrS,GAIpB,MAFAwI,EAAM6hG,SAEArqG,CACR,KAdAhxD,KAAKq7J,SACEE,EAeX,EAOAzP,mBAAoB,SAA4B91H,GAC9C,IAGI5tB,EAHA+2D,EAASn/D,KAEbg2B,EAAUA,GAAW,CAAC,EAEtB,IAAIwlI,EAAO,IAAIz6J,SAAQ,SAAU4pB,GAC/B,OAAOviB,EAAUuiB,CACnB,IAUA,GAFA6wI,EAAKN,QANoB,WACvBN,GAAmBz7F,EAAQq8F,GAE3BpzJ,GACF,EAII4tB,EAAQjqB,QAAS,CAEnB,IAAI0vJ,EAAa/4J,YAAW,WAC1B84J,EAAKN,SACP,GAAGllI,EAAQjqB,SACXyvJ,EAAKV,YAAcW,CACrB,CAMA,OAJAz7J,KAAKw6J,IAAInmJ,IAAImnJ,GAEbT,GAAa/6J,MAENw7J,CACT,EAOAE,kBAAmB,SAA2B7wI,GAC5C+vI,GAAmB56J,KAAM6qB,EAC3B,EASAm4G,oBAAqB,SAA6B1pF,EAAUtjB,GAC1D,IAAIgkG,EAASh6H,KAAKy6J,OACd5vI,EAAU7qB,KAAK8rJ,mBAAmB91H,GAStC,OAPAh2B,KAAK06J,KAAKj5J,IAAIu4H,EAAQnvG,GAEtB7qB,KAAK26J,KAAKl5J,IAAIopB,EAASmvG,GAEvBnvG,EAAQpjB,MAAK,WACX,OAAO6xC,GACT,IACO0gF,CACT,EAQA2hC,mBAAoB,SAA4B3hC,GAC9C,IAAInvG,EAAU7qB,KAAK06J,KAAKl5J,IAAIw4H,GAE5Bh6H,KAAK07J,kBAAkB7wI,EACzB,EAMA1V,MAAO,WACL,IAAIiqD,EAASp/D,KAGbA,KAAKw6J,IAAI15J,SAAQ,SAAU+pB,GACzB,OAAO+vI,GAAmBx7F,EAAQv0C,EACpC,IAEA7qB,KAAKu6J,IAAM,EAEXv6J,KAAKw6J,IAAIrlJ,QAETnV,KAAK06J,KAAO,IAAIzvI,IAChBjrB,KAAK26J,KAAO,IAAI1vI,GAClB,GClMK,IAAM2wI,GAAe,UCHX38J,OAAO8qB,OAAO,CAC7B8xI,eAAe,EACfC,aAAa,EACbC,sBAAsB,EACtBC,2BAA2B,EAC3BC,kBAAkB,EAClBC,iBAAiB,EACjBC,eAAe,EACfC,iBAAa,EACbC,mBAAe,EACfC,cAAU,IAYkBr9J,OAAO8qB,OAAO,CAC1C,YACA,YACA,gBAmSF,MAAMwyI,GAAa,kBACMA,GAAW18J,OAQpC,MAAM28J,GACJz4J,WAAAA,CAAY04J,EAAOC,GACjBD,EAAQz8J,KAAKy8J,MAAQA,GAAS,GAC9Bz8J,KAAK08J,cAAwB,IAAbA,EAAqC,EAAfD,EAAM58J,OAAa68J,CAC3D,CACAz4J,QAAAA,CAAS04J,GACP,OAAQA,GAAWC,IAAK5pJ,UAAUhT,KACpC,CACAG,MAAAA,CAAO08J,GAEL,GADA78J,KAAK88J,QACD98J,KAAK08J,SAAW,EAClB,IAAK,IAAI58J,EAAI,EAAGA,EAAI+8J,EAAUH,SAAU58J,IAAK,CAC3C,MAAMi9J,EAAWF,EAAUJ,MAAM38J,IAAM,KAAO,GAAKA,EAAI,EAAI,EAAI,IAC/DE,KAAKy8J,MAAMz8J,KAAK08J,SAAW58J,IAAM,IAAMi9J,GAAY,IAAM/8J,KAAK08J,SAAW58J,GAAK,EAAI,CACpF,MAEA,IAAK,IAAIkE,EAAI,EAAGA,EAAI64J,EAAUH,SAAU14J,GAAK,EAC3ChE,KAAKy8J,MAAMz8J,KAAK08J,SAAW14J,IAAM,GAAK64J,EAAUJ,MAAMz4J,IAAM,GAIhE,OADAhE,KAAK08J,UAAYG,EAAUH,SACpB18J,IACT,CACA88J,KAAAA,GACE98J,KAAKy8J,MAAMz8J,KAAK08J,WAAa,IAAM,YAAc,GAAK18J,KAAK08J,SAAW,EAAI,EAC1E18J,KAAKy8J,MAAM58J,OAASyZ,KAAKkK,KAAKxjB,KAAK08J,SAAW,EAChD,CACAtjJ,KAAAA,GACE,OAAO,IAAIojJ,GAAU,IAAIx8J,KAAKy8J,OAChC,EAEF,MAAMG,GAAM,CACV5pJ,SAAAA,CAAU6pJ,GACR,MAAMG,EAAW,GACjB,IAAK,IAAIl9J,EAAI,EAAGA,EAAI+8J,EAAUH,SAAU58J,IAAK,CAC3C,MAAMm9J,EAAOJ,EAAUJ,MAAM38J,IAAM,KAAO,GAAKA,EAAI,EAAI,EAAI,IAC3Dk9J,EAASp6J,MAAMq6J,IAAS,GAAGh5J,SAAS,KAAa,GAAPg5J,GAAWh5J,SAAS,IAChE,CACA,OAAO+4J,EAASt3J,KAAK,GACvB,GAkBIw3J,GAAS,CACbnmF,KAAAA,CAAMomF,GACJ,MAAMC,EAAkBD,EAAUt9J,OAC5B48J,EAAQ,GACd,IAAK,IAAI38J,EAAI,EAAGA,EAAIs9J,EAAiBt9J,IACnC28J,EAAM38J,IAAM,KAAiC,IAA1Bq9J,EAAUllF,WAAWn4E,KAAa,GAAKA,EAAI,EAAI,EAEpE,OAAO,IAAI08J,GAAUC,EAAOW,EAC9B,GAEIC,GAAO,CACXtmF,MAAMumF,GACGJ,GAAOnmF,MAAMwmF,SAASjtI,mBAAmBgtI,MAGpD,MAAME,GACJz5J,WAAAA,GACE/D,KAAK6pI,MAAQ,IAAI2yB,GACjBx8J,KAAKy9J,YAAc,EACnBz9J,KAAK09J,eAAiB,EACtB19J,KAAK29J,UAAY,EACnB,CACAv3F,KAAAA,GACEpmE,KAAK6pI,MAAQ,IAAI2yB,GACjBx8J,KAAKy9J,YAAc,CACrB,CACAG,OAAAA,CAAQtuI,GACc,kBAATA,IACTA,EAAO+tI,GAAKtmF,MAAMznD,IAEpBtvB,KAAK6pI,MAAM1pI,OAAOmvB,GAClBtvB,KAAKy9J,aAAenuI,EAAKotI,QAC3B,CAEAmB,eAAAA,CAAgBC,EAAYC,GAC5B,CACAC,QAAAA,CAASC,GACP,IAAIC,EACAC,EAAen+J,KAAK6pI,MAAM6yB,UAA6B,EAAjB18J,KAAK29J,WAE7CQ,EADEF,EACa3kJ,KAAKkK,KAAK26I,GAEV7kJ,KAAKsM,KAAoB,EAAfu4I,GAAoBn+J,KAAK09J,eAAgB,GAEpE,MAAMU,EAAcD,EAAen+J,KAAK29J,UAClCU,EAAc/kJ,KAAKC,IAAkB,EAAd6kJ,EAAiBp+J,KAAK6pI,MAAM6yB,UACzD,GAAI0B,EAAa,CACf,IAAK,IAAI3qJ,EAAS,EAAGA,EAAS2qJ,EAAa3qJ,GAAUzT,KAAK29J,UACxD39J,KAAK69J,gBAAgB79J,KAAK6pI,MAAM4yB,MAAOhpJ,GAEzCyqJ,EAAiBl+J,KAAK6pI,MAAM4yB,MAAMt5J,OAAO,EAAGi7J,GAC5Cp+J,KAAK6pI,MAAM6yB,UAAY2B,CACzB,CACA,OAAO,IAAI7B,GAAU0B,EAAgBG,EACvC,EAEF,MAAMC,WAAed,GACnB1oJ,MAAAA,CAAOypJ,GAGL,OAFAv+J,KAAK49J,QAAQW,GACbv+J,KAAKg+J,WACEh+J,IACT,CACA2J,QAAAA,CAAS40J,GACHA,GACFv+J,KAAK49J,QAAQW,EAEjB,EAGF,MAAMv3J,GAAI,CACR,YACC,WACD,YACC,WACD,YACC,WACD,UACA,YAEIrD,GAAI,CACR,WACA,YACC,YACA,UACD,UACA,YACC,YACA,YACA,UACD,UACA,UACA,WACA,YACC,YACA,YACA,YACA,WACA,UACD,UACA,UACA,UACA,WACA,WACA,YACC,YACA,YACA,YACA,YACA,WACA,UACD,UACA,UACA,UACA,UACA,WACA,WACA,WACA,YACC,YACA,YACA,YACA,YACA,YACA,WACA,WACA,WACA,UACD,UACA,UACA,UACA,UACA,UACA,UACA,WACA,WACA,WACA,WACA,YACC,YACA,YACA,YACA,YACA,YACA,WAEGwC,GAAI,GACV,MAAMq4J,WAAeF,GACnBv6J,WAAAA,GACEi8G,SAASpgH,WACTI,KAAKy+J,MAAQ,IAAIjC,GAAU,IAAIx1J,IACjC,CACAo/D,KAAAA,GACE45C,MAAM55C,QACNpmE,KAAKy+J,MAAQ,IAAIjC,GAAU,IAAIx1J,IACjC,CACA62J,eAAAA,CAAgB74J,EAAGyO,GACjB,MAAMirJ,EAAK1+J,KAAKy+J,MAAMhC,MACtB,IAAI57J,EAAI69J,EAAG,GACPt8J,EAAIs8J,EAAG,GACP19J,EAAI09J,EAAG,GACPv8J,EAAIu8J,EAAG,GACP3/J,EAAI2/J,EAAG,GACPt+J,EAAIs+J,EAAG,GACPt7J,EAAIs7J,EAAG,GACPz8J,EAAIy8J,EAAG,GACX,IAAK,IAAI5+J,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAC3B,GAAIA,EAAI,GACNqG,GAAErG,GAAqB,EAAhBkF,EAAEyO,EAAS3T,OACb,CACL,MAAM6+J,EAAUx4J,GAAErG,EAAI,IAChB8+J,GAAUD,GAAW,GAAKA,IAAY,IAAMA,GAAW,GAAKA,IAAY,IAAMA,IAAY,EAC1FE,EAAU14J,GAAErG,EAAI,GAChBg/J,GAAUD,GAAW,GAAKA,IAAY,KAAOA,GAAW,GAAKA,IAAY,IAAMA,IAAY,GACjG14J,GAAErG,GAAK8+J,EAASz4J,GAAErG,EAAI,GAAKg/J,EAAS34J,GAAErG,EAAI,GAC5C,CACA,MACMi/J,EAAMl+J,EAAIuB,EAAIvB,EAAIG,EAAIoB,EAAIpB,EAC1Bg+J,GAAUn+J,GAAK,GAAKA,IAAM,IAAMA,GAAK,GAAKA,IAAM,KAAOA,GAAK,GAAKA,IAAM,IAEvEo+J,EAAKh9J,IADKlD,GAAK,GAAKA,IAAM,IAAMA,GAAK,GAAKA,IAAM,KAAOA,GAAK,EAAIA,IAAM,MAHjEA,EAAIqB,GAAKrB,EAAIqE,GAIKO,GAAE7D,GAAKqG,GAAErG,GAEtCmC,EAAImB,EACJA,EAAIhD,EACJA,EAAIrB,EACJA,EAAIoD,EAAI88J,EAAK,EACb98J,EAAInB,EACJA,EAAIoB,EACJA,EAAIvB,EACJA,EAAIo+J,GAROD,EAASD,GAQN,CAChB,CACAL,EAAG,GAAKA,EAAG,GAAK79J,EAAI,EACpB69J,EAAG,GAAKA,EAAG,GAAKt8J,EAAI,EACpBs8J,EAAG,GAAKA,EAAG,GAAK19J,EAAI,EACpB09J,EAAG,GAAKA,EAAG,GAAKv8J,EAAI,EACpBu8J,EAAG,GAAKA,EAAG,GAAK3/J,EAAI,EACpB2/J,EAAG,GAAKA,EAAG,GAAKt+J,EAAI,EACpBs+J,EAAG,GAAKA,EAAG,GAAKt7J,EAAI,EACpBs7J,EAAG,GAAKA,EAAG,GAAKz8J,EAAI,CACtB,CACA0H,QAAAA,CAAS40J,GACPv+C,MAAMr2G,SAAS40J,GACf,MAAMW,EAAgC,EAAnBl/J,KAAKy9J,YAClB0B,EAAkC,EAAtBn/J,KAAK6pI,MAAM6yB,SAQ7B,OAPA18J,KAAK6pI,MAAM4yB,MAAM0C,IAAc,IAAM,KAAO,GAAKA,EAAY,GAC7Dn/J,KAAK6pI,MAAM4yB,MAAoC,IAA7B0C,EAAY,KAAO,GAAK,IAAW7lJ,KAAK46C,MACxDgrG,EAAa,YAEfl/J,KAAK6pI,MAAM4yB,MAAoC,IAA7B0C,EAAY,KAAO,GAAK,IAAWD,EACrDl/J,KAAK6pI,MAAM6yB,SAAqC,EAA1B18J,KAAK6pI,MAAM4yB,MAAM58J,OACvCG,KAAKg+J,WACEh+J,KAAKy+J,KACd,ECrjBK,IAYMW,GAZuC,qBAAX/2J,QACZ,qBAAlBA,OAAOC,QACkB,oBAAzBD,OAAOC,OAAOC,OAhBlBmlB,eAA4B4N,GAC/B,IAAMhM,GAAO,IAAI+vI,aAAcC,OAAOhkI,GAChCikI,QAAmBl3J,OAAOC,OAAOC,OAAO,UAAW+mB,GAQzD,OAJalwB,MAAME,UAAUiE,IAAI/D,KAC7B,IAAIgJ,WAAW+2J,IACf5+J,IAAO,KAAOA,EAAEsD,SAAS,KAAK/D,OAAO,KACvCwF,KAAK,GAEX,EAfO,SAAkB41B,GACrB,OAAOv6B,QAAQqH,SDwkBH5C,ECxkBkB81B,GDykBzB,IAAIkjI,IAAS70J,SAASnE,GAASvB,aADxC,IAAgBuB,CCvkBhB,ECXA,SAASg6J,GAAgBzgK,EAAGY,EAAGX,GAC7B,OAAQW,EAAI0uH,GAAc1uH,MAAOZ,EAAIE,OAAOsC,eAAexC,EAAGY,EAAG,CAC/DgC,MAAO3C,EACPkV,YAAY,EACZxS,cAAc,EACdE,UAAU,IACP7C,EAAEY,GAAKX,EAAGD,CACjB,CCFM,MAAO0gK,GAQT17J,WAAAA,CACoB27J,GAAWF,GAAA,mBAAAA,GAAA,WART,IAAIv0I,KAE1Bu0I,GAAA,YAIsB,GAEF,KAAAE,IAAAA,CAChB,CAEJ57J,GAAAA,CAAInC,GACA,OAAO3B,KAAKuD,IAAIO,IAAInC,EACxB,CAEA0S,GAAAA,CAAI1S,GACA3B,KAAKuD,IAAI9B,IAAIE,EAAOwkC,MAQfnmC,KAAK2/J,MACN3/J,KAAK2/J,KAAM,EACXj9J,YAAW,KACP1C,KAAK2/J,KAAM,EAgBrB,SACFC,GAEA,MAAMC,EAAY15H,KAAQy5H,EAAaF,IACjCr7J,EAAWu7J,EAAar8J,IAAIa,OAAOC,YAMzC,OAAa,CAET,MAAMK,EAAOL,EAASK,OAAO/C,MAE7B,IAAK+C,EACD,OAEJ,MAAM/C,EAAQ+C,EAAK,GAEnB,KADaA,EAAK,GACPm7J,GAIP,OAHAD,EAAar8J,IAAI2R,OAAOvT,GAMpC,CAzCgBm+J,CAAmB9/J,KAAK,GACzB,GAEX,CAEAmV,KAAAA,GACInV,KAAKuD,IAAI4R,OACb,EAoCE,SAAUgxB,KACZ,OAAOD,KAAKC,KAChB,CCUA,IAAM45H,GAAmC,IAAIr8J,IAIhCs8J,GAAc,WAiBvB,SAAAA,EACoBz6J,EAKAy7G,EACA3X,EACAqsD,EACAvpH,EACA6mH,GAWlB,IAVkBzJ,EAAoB3pJ,UAAAC,OAAA,QAAAqzD,IAAAtzD,UAAA,IAAAA,UAAA,GAC7Bo2B,EAAYp2B,UAAAC,OAAA,QAAAqzD,IAAAtzD,UAAA,GAAAA,UAAA,GAAG,CAAC,EAIPq3J,EAA0Fr3J,UAAAC,OAAA,EAAAD,UAAA,QAAAszD,EAC1F+jE,EAA0Br3H,UAAAC,OAAA,EAAAD,UAAA,QAAAszD,EAC1B+sG,EAAwCrgK,UAAAC,OAAA,GAAAD,UAAA,SAAAszD,EACxCo7F,EAAwB1uJ,UAAAC,OAAA,GAAAD,UAAA,SAAAszD,EACxBgtG,EAAqCtgK,UAAAC,OAAA,GAAAD,UAAA,SAAAszD,EACvD,KA/Bc2nG,UAAuB,IAAIT,GAAW,KACtC+F,YAAcvE,GAAY,KAO1Bv0B,iBAAmB,IAAI3jI,IAAwE,KA2ExGyyJ,MAAwB,GAAE,KAO1BiK,cAA2C,GAAE,KAQ7C/J,UAAyC,GAAE,KAC3CtK,WAAqB,EAAK,KAC1BhhB,YAA2B,CAAC,EAAC,KAC7Bs1B,OAAwD,CAAC,EAAC,KACjD7M,YAA+C,IAAIrzB,GAAS,KACpEmgC,YAA8CtgK,KAAKwzJ,YACtDl/E,KACGypD,IAAS01B,GAAmBA,EAAgB/G,UAC/C,KAWEyK,aAAgCv0B,GAAqB,KAKrD29B,qBAAkF39B,GAAqB,KAUvG49B,oBAA4C,IAAIf,GAAa,KAAU,KAzH1Dl6J,KAAAA,EAAY,KAKZy7G,MAAAA,EAAa,KACb3X,QAAAA,EAAsD,KACtDqsD,wBAAAA,EAAgD,KAChDvpH,SAAAA,EAAa,KACb6mH,cAAAA,EAAsB,KACtBzJ,YAAAA,EAAoB,KAC7BvzH,QAAAA,EAAY,KAIHihI,cAAAA,EAA0F,KAC1FhgC,aAAAA,EAA0B,KAC1BgpC,cAAAA,EAAwC,KACxC3R,eAAAA,EAAwB,KACxB4R,WAAAA,EAcE,mBAAdlgK,KAAKuF,OAMLvF,KAAKi3J,cAAgBtxB,GACjB3lI,KAAKygK,aACLxJ,EACA3F,IAWJtxJ,KAAKugK,qBZhBV7yI,eACHgzI,GAQA,IAAMvJ,EAAe5jC,GAAkB,IAEjCotC,EAAeD,EAAWv0H,eACtBu0H,EAAWzpC,aAAalkH,KAAKC,UAAU0tJ,EAAWv0H,gBACxD+mB,EAyBEy0E,EAAY,CAAC,CAAE/2G,SAvB6C,CAC9DvnB,GAAI2oJ,GACJ/5G,QAASo5G,GACTn/I,IAAK6/I,GACLziI,KAAM,CACF6wI,YAAaO,EAAWP,YACxBn/C,MAAOm2C,EAQPyJ,cAAeF,EAAW1/C,MAC1B2/C,gBAEJ3qC,UAAU,EACVC,MAAOxB,KACPoB,K5JhJG,G4JiJHE,aAAc,CAAC,KAIbuQ,QAAoBo6B,EAAWzJ,cAAchxB,UAC/C0B,EACA,8BAEJ,IAAKrB,EAAYrtH,MAAM,GACnB,OAAOwtH,GACH,KACAkB,EACArB,GACF,GAQN,IAAMrtH,EAAQypH,GAAe4D,EAAYrtH,MAAM,IAC/C,GACIA,EAAMuzH,SACNhb,GAAyBv4G,GAC3B,CACE,IAAM4nJ,EAAiB5nJ,EAEvB,GAiCJ6nJ,EA/BYD,EAAcl6B,aAAar3G,KAAK6wI,YAgC5CY,EA/BYL,EAAWP,aAiClBW,GAKDC,EAAYtoJ,SAAS,SACrBsoJ,IAAgBD,GAKDA,EAAqBx9J,MAAM,KAAK,KACjCy9J,EAAYz9J,MAAM,KAAK,GA1CjC,MAAMguH,GAAW,MAAO,CACpB92D,KAAM,CACForE,SAAU86B,EAAWn7J,KACrBu7J,qBAAsBD,EAAcl6B,aAAar3G,KAAK6wI,YACtDY,YAAaL,EAAWP,eAKpC,GACIQ,GACAA,IAAiBE,EAAcl6B,aAAar3G,KAAKqxI,aAEjD,MAAMrvC,GAAW,MAAO,CACpBqvC,eACAK,qBAAsBH,EAAcl6B,aAAar3G,KAAKqxI,eAK9D,OAAOj+B,GADqBm+B,EAAcl6B,aAE9C,CAKG,IACHm6B,EACAC,EANA,MAAM9nJ,CACV,CY5EwCgoJ,CAAiCjhK,KAAKygK,cAC7D50J,OAAMmlD,GAAOhxD,KAAKogK,cAAcx9J,KAAKouD,KAC1ChxD,KAAKm3J,aAAen3J,KAAKugK,qBACpB94J,MAAK6hE,GAAOA,EAAIh6C,KAAK0xF,QACrBn1G,OAAMmlD,GAAOhxD,KAAKogK,cAAcx9J,KAAKouD,KAElD,CAAC,IAAAmmE,EAAA6oC,EAAA1gK,UAwVA,OAxVA63H,EAMM6S,qBAAP,WACI,IAAKhqI,KAAKkgK,WACN,MAAM5uC,GAAW,OAAQ,CAAEsU,SAAU5lI,KAAKuF,OAE9C,OAAOvF,KAAKkgK,UAChB,EAqDA/oC,EAOAqgC,MAAA,SAAM/D,GACEzzJ,KAAKwgK,oBAAoB18J,IAAI2vJ,EAAgBpqJ,MAGjDrJ,KAAKwgK,oBAAoBnsJ,IAAIo/I,EAAgBpqJ,IAG7CrJ,KAAKwzJ,YAAY9uJ,KAAK+uJ,GAC1B,EAEAt8B,EAGM+pC,oBAANxzI,eAA0BnoB,EAAc6K,GACpC,IAAMk5D,QAAYk7D,GACdxkI,KAAKi3J,cACLrF,GACIK,GAAuB1sJ,EAAM6K,GAC7BghJ,KAGR,IAAK9nF,EACD,MAAMgoD,GAAW,MAAO,CAAE/rH,OAAM6K,WAEpC,IAAM8iJ,EAAWztB,GAAqBn8D,GACtC4pF,EAASl9B,UAAW,QAEdh2H,KAAKi3J,cAAchxB,UAAU,CAAC,CAChCr1G,SAAUsiI,EACV1qF,SAAUc,IACV,gCACR,EAEA6tD,EAMMgqC,eAANzzI,eAAgE0zI,GAG5D,IAAMC,EAAwE,CAAC,EACzEC,EAAgE,CAAC,EACjEC,EAA8D,GAC9DC,EAA+B,CAAC,QAEhCzgK,QAAQoL,IACVlN,OAAOunB,QAAQ46I,GAAoB79J,KAAImqB,UAAwB,IAAhBnoB,EAAMi1D,GAAKkS,EACtD,IAAMq5D,EAA2CxgI,EAC3CqvH,EAAgBp6D,EAAkCpqD,OACxDixJ,EAAYt7B,GAAkBnR,EAC9B,IAAMxkH,EAASgiH,GAAewC,EAAc50H,KAAKi3H,cAIjD,GAHAqqC,EAAQv7B,GAAkB31H,EAGrBpQ,KAAK+qI,YAAoBxlI,GAC1B,MAAM+rH,GAAW,MAAO,CACpB/rH,SAIR,IAAMk8J,EAA4BxP,GAAuB1sJ,EAAMqvH,GACzD8sC,EAAoE,CACtEr4J,GAAIuoJ,GACA6P,EACArQ,IAEJl/I,IAAKuvJ,EACLxpH,QAASm5G,GACT9hI,KAAM,CACF/pB,KAAMwgI,EACN47B,iBAAkBvxJ,EAAOqmI,KACzBrmI,OAAQA,EAAO4kH,WACf5yG,QAAShS,EAAOgS,QAChBwwI,kBAAmB,IAEvB58B,UAAU,EACVC,MAAOxB,KACPoB,KxK1RT,GwK2RSE,aAAc,CAAC,GAEnBwrC,EAAY3+J,KAAK,CACbguB,SAAU8wI,IAGd,IAAME,EAAe3iK,OAAOS,OACxB,CAAC,EACD86D,EACA,CACIj1D,KAAMwgI,EACN31H,SACAw1H,SAAU5lI,OAKZ6hK,EAAyD9yC,GAAUv0D,GACxEqnG,EAAiBj8B,SAAW5lI,KAC7B6hK,EAASt8J,KAAOA,EAChB0tH,GAAe,wBAAyB4uC,GACxCD,EAAQ9L,gBAAkB+L,EAAS/L,gBAEnC0L,EAAwBz7B,GAAkB67B,CAAO,KAKzD,IAAME,QAAsB9hK,KAAKi3J,cAAchxB,UAC3Cs7B,EACA,oCA2YL7zI,eACHgzI,GAGA,SADMA,EAAWvJ,aACbuJ,EAAWN,cAAc,GACzB,MAAMM,EAAWN,cAAc,EAEvC,CA/Yc2B,CAAsB/hK,YAEtBe,QAAQoL,IACV21J,EAAc7oJ,MAAM1V,KAAImqB,UACpB,GAAqB,MAAjBzU,EAAMlM,OACN,MAAMukH,GAAW,OAAQ,CACrBsU,SAAU5lI,KAAKuF,KACfw/H,WAAY9rH,IAGpB,IAAM+oJ,EAA0Dt/B,GAAezpH,EAAM0tH,cAC/EZ,EAAiBi8B,EAAQ1yI,KAAK/pB,KAC9B6K,EAAUkxJ,EAAgBv7B,GAEhC,GAAIi8B,EAAQ1yI,KAAKqyI,mBAAqBvxJ,EAAOqmI,KACzC,MAAMnlB,GAAW,MAAO,CACpBsU,SAAU5lI,KAAKuF,KACfs/H,WAAYkB,EACZk8B,mBAAoBD,EAAQ1yI,KAAKqyI,WACjCA,iBAAkBvxJ,EAAOqmI,KACzByrB,eAAgBF,EAAQ1yI,KAAKlf,OAC7BA,OAAQsyH,GAAgB2+B,EAAoBt7B,KAEpD,KAIR,IAAM1iE,EAAwF,CAAC,EAiB/F,aAhBMtiE,QAAQoL,IACVlN,OAAOyB,KAAK0gK,GAAoB79J,KAAImqB,UAChC,IAAMk0I,EAAUJ,EAAwBz7B,GAClClB,QP4mBf,SAA2Bn4D,GAgBT,IAfrB,SACIk5D,EAAQ,KACRrgI,EAAI,OACJ6K,EAAM,wBACNslJ,EAA0B,CAAC,EAAC,oBAC5BC,EAAsB,CAAC,EAAC,YACxBwM,GAAc,EAAI,QAClBtM,EAAU,CAAC,EAAC,QACZlB,EAAU,CAAC,EAAC,YACZiB,EAAc,CAAC,EAAC,QAChB5/H,EAAU,CAAC,EAAC,eACZosI,GAAiB,EAAK,uBACtBpW,EAAyBb,GAA6B,gBACtD2K,EAAkBZ,IAChBxoF,EAEN,IAAM21F,EAA2E,CAC7Eh+B,sBAAuBuB,EAAS5kB,MAChCglB,aAAcJ,EAASrgI,KACvBwgI,eAAgBxgI,EAChB6K,OAAQA,EAAO4kH,WACfh/F,QAAS0/H,EACT1C,cAAeptB,EAASotB,cACxB7mH,SAAUy5F,EAASz5F,SACnB8mH,QAAS5iC,GAAaC,aAQ1B,OALA2C,GACI,6BACAovC,GJ78BD30I,eACHgzI,EACA2B,GAMA,OAJAA,EAA8BrP,cAAgB0N,EAAW1N,oBAC3B0N,EAAWr3D,QAAQ0pD,sBAC7CsP,EAGR,CIu8BWC,CACH18B,EACAy8B,GACF56J,MAAKg9H,IACH,IAAMI,EAAa,IAAI2wB,GACnB5vB,EACArgI,EACA6K,EACAq0H,EACAixB,EACAC,EACAhB,EACAiB,EACA5/H,EACAg2H,EACA6J,EACAC,GAGJ,OAAOjxB,EACFiyB,UACArvJ,MAAK,KAEFxI,OACKunB,QAAQqvI,GACR/0J,SAAQy3E,IAAoB,IAAlBgqF,EAASpvC,GAAI56C,EACpBt5E,OAAOsC,eAAesjI,EAAY09B,EAAS,CACvC/gK,IAAKA,IAAO2xH,EAAYnxH,KAAK6iI,IAC/B,IAGV,IAAIxhE,EAAMy/D,GAIV,OAHIq/B,GAA6C,IAA9Bt9B,EAAWz0H,OAAOgS,UACjCihD,EAAMwhE,EAAWizB,kBAEdz0F,CAAG,IAEb57D,MAAK,KACFwrH,GAAe,qBAAsB,CACjC4R,aACAvB,QAAS,CACL/9H,OACA6K,SACAq0H,kBACAixB,0BACAC,sBACAhB,UACAiB,cACA5/H,UACAg2H,yBACAoW,iBACAvM,aAGDhxB,KAMVh5H,OAAMmlD,GACIyzE,EAAgBpzH,QAClB5J,MAAK,IAAM1G,QAAQoK,OAAO6lD,MACjC,GAEd,CO9sByC+gE,CAAmB6vC,GAC3Cv+F,EAAY0iE,GAAkBlB,EAG9B7kI,KAAK+qI,YAAoBhF,GAAkBlB,EACtC7kI,KAAa+lI,IACf9mI,OAAOsC,eAAevB,KAAM+lI,EAAgB,CACxCvkI,IAAKA,IAAOxB,KAAK+qI,YAAoBhF,IAE7C,KAID1iE,CACX,EAEA8zD,EAGAkP,UAAA,SAAaxjH,GACT,OAAO7iB,KAAK66J,UAAUS,SAASz4I,EACnC,EAACs0G,EAED20B,mBAAA,WACI,OAAO9rJ,KAAK66J,UAAU/O,oBAC1B,EAEA30B,EAKAuiC,WAAA,SAAW8I,GACP,MAAMh/B,GAAc,YACxB,EAACrM,EAEDsrC,SAAA,SAAkBC,GACd,MAAMl/B,GAAc,QACxB,EAEArM,EAMAwiC,WAAA,SAAWC,GACP,MAAMp2B,GAAc,YACxB,EAACrM,EAEDwrC,OAAA,SAAOjoJ,GACH,MAAM8oH,GAAc,SACxB,EAACrM,EAEMyrC,cAAP,WACI,MAAMp/B,GAAc,kBACxB,EAACrM,EAEM0rC,SAAP,WACI,MAAMr/B,GAAc,kBACxB,EACArM,EAGO2rC,kBAAP,WACI,MAAMt/B,GAAc,kBACxB,EAACrM,EAEM4rC,gBAAP,WACI,MAAMv/B,GAAc,mBACxB,EAEArM,EAGa75E,QAAb,iBACI,OAAIt9C,KAAK+rJ,UACEnpB,IAIX5iI,KAAK+rJ,WAAY,QAEX34B,GAAoB,uBAAwBpzH,MAKlDA,KAAKwzJ,YAAYpnI,WAGjBpsB,KAAKm2J,MAAM5yJ,KAAI2oF,GAAOA,EAAI33E,gBAQR,mBAAdvU,KAAKuF,KACEq9H,GAMJ5iI,KAAK8rJ,qBACPrkJ,MAAK,IAAM1G,QAAQoL,IAAInM,KAAKq2J,UAAU9yJ,KAAIsf,GAAMA,SAEhDpb,MAAK,IAAM1G,QAAQoL,IAChBlN,OAAOyB,KAAKV,KAAK+qI,aACZxnI,KAAI2O,GAAQlS,KAAK+qI,YAAoB74H,KACrC3O,KAAI23B,GAAOA,EAAIoiB,eAGvB71C,MAAK,IAAMzH,KAAKi3J,cAAc5lJ,UAE9B5J,MAAK,IAAMs4J,GAAoB7qJ,OAAOlV,KAAKqpG,QAAQ9jG,KAAO,IAAMvF,KAAKuF,QACrEkC,MAAK,KAAM,IACpB,EAEA0vH,EAIA3+G,OAAA,WACI,OAAOxY,KACFs9C,UACA71C,MAAK,IAoKXimB,eACHs4G,EACA38B,EACAl9D,GAEA,IAAMk4F,EAAwB9Q,GAAkB,IAC1CyvC,QAAmCC,GACrC5+B,EACAh7B,EACA28B,EACA,CAAC,GACD,EACA75F,GAEE+2H,QAAuBrR,GAA0BmR,GACjDG,EAAkB,IAAIz/J,IAC5Bw/J,EAAepiK,SAAQwoE,GAAO65F,EAAgB9uJ,IAAIi1D,EAAIh6C,KAAK/pB,QAC3D,IAAM69J,EAAmChkK,MAAMyC,KAAKshK,GAmBpD,aAjBMpiK,QAAQoL,IACVi3J,EAAuB7/J,KAAIwiI,GAAkBusB,GACzCjpD,EACA25D,EACA3+B,EACA2B,EACAD,EACA55F,YAIFinF,GAAoB,uBAAwB,CAC9C4S,eACA38B,kBAGE25D,EAA2BxqJ,SAC1B4qJ,CACX,CAzMwBC,CAAiBrjK,KAAKuF,KAAMvF,KAAKqpG,QAASrpG,KAAKmsC,WACnE,EAAC4wB,GAAAijG,EAAA,EAAA9tJ,IAAA,IAAA1Q,IAtVD,WACI,OAAOxB,KAAKsgK,WAChB,GAAC,CAAApuJ,IAAA,eAAA1Q,IAsVD,WAMI,OAAOxB,IACX,IAAC,CA9asB,GAycpB0tB,eAAeu1I,GAClB5+B,EACAh7B,EACA28B,EACAhwG,EACAg9H,EACA7mH,GAcA,aAZ4Bk9D,EAAQ0pD,sBAChC,CACI1uB,wBACA2B,eACAD,eAAgBxB,GAChBn0H,OAAQkhJ,GACRt7H,UACAg9H,gBACA7mH,WACA8mH,QAAS5iC,GAAaC,aAIlC,CAEO,SAASuB,GAAgBt5C,GAuB9B,IAjBE,QACI8wB,EAAO,wBACPqsD,EAAuB,KACvBnwJ,EAAI,SACJ4mC,EAAQ,cACR6mH,GAAgB,EAAI,YACpBzJ,GAAc,EAAI,gBAClB+Z,GAAkB,EAAK,QACvBttI,EAAU,CAAC,EAAC,cACZiqI,EAAa,eACb3R,GAAiB,EAAK,eACtB8T,GAAiB,EAAK,aACtBnrC,EAAemoC,GAAiB,WAChCc,GACgE3nF,EAIpE06C,GAAe,sBAAuB,CAClC5pB,UACAqsD,0BACAnwJ,OACA4mC,WACA6mH,gBACAzJ,cACA+Z,kBACAttI,UACAosI,mBAGCkB,GA/ET,SACI/9J,EACA8jG,GAEA,IAAMn3F,EAAMm3F,EAAQ9jG,KAAO,IAAMA,EACjC,GAAKw6J,GAAoBj8J,IAAIoO,GAGzB,MAAMo/G,GAAW,MAAO,CACpB/rH,OACA8jG,QAASA,EAAQ9jG,KACjBi2B,KAAM,sDAGlB,CAkEQ+nI,CAAwBh+J,EAAM8jG,GAElC02D,GAAoB1rJ,IAAIg1F,EAAQ9jG,KAAO,IAAMA,GAE7C,IAAM8+H,EAAwB9Q,GAAkB,IAEhD,OAAO0vC,GAIH5+B,EACAh7B,EACA9jG,EACAmwJ,EACA1C,EACA7mH,GAQCtgC,OAAMmlD,IAEH,MADA+uG,GAAoB7qJ,OAAOm0F,EAAQ9jG,KAAO,IAAMA,GAC1CyrD,CAAG,IAEZvpD,MAAKg9H,IACF,IAAMi8B,EAAsC,IAAIV,GAC5Cz6J,EACA8+H,EACAh7B,EACAqsD,EACAvpH,EACA6mH,EACAzJ,EACAvzH,EACAyuG,EACAxN,EACAgpC,EACA3R,EACA4R,GAGJ,OAAO9sC,GAAoB,mBAAoB,CAC3CwS,SAAU86B,EACVp9B,QAAS,CACLj6B,UACAqsD,0BACAnwJ,OACA4mC,WACA6mH,gBACAzJ,cACA+Z,kBACAttI,UACAosI,oBAEL36J,MAAK,IAAMi5J,GAAW,GAErC,CC5nBA,IAAM8C,GAAoC,CACtCxsC,SAAUA,GAAS13H,UACnBmkK,WAAYC,GACZC,QAASjW,GAAYpuJ,UACrBskK,aAAcpO,GAAiBl2J,UAC/BukK,WAAY7D,GAAe1gK,WAGzBwkK,GAAqC,IAAIpgK,IACzCqgK,GAAkC,IAAIrgK,ICpCrC,ICAHsgK,GAiBAC,GDjBSC,GAAiB,CAE1BC,IAAK,mCACLC,IAAK,iTAGLC,IAAK,0EACLC,IAAK,sCACLC,IAAK,oGACLC,IAAK,oFACLC,IAAK,kFAGLC,IAAK,mCAELC,IAAK,gGAILC,GAAI,mDAIJC,IAAK,4CAGLC,IAAK,gEACLC,IAAK,yEACLC,IAAK,kDAGLC,IAAK,qDACLC,KAAM,wCACNC,KAAM,uCACNC,KAAM,+BACNC,KAAM,+DACNC,KAAM,2LAENC,KAAM,2DACNC,KAAM,mLAENC,KAAM,kEAGNC,IAAK,kCACLC,IAAK,mBACLC,IAAK,8DACLC,IAAK,+DACLC,IAAK,qEACLC,IAAK,4HACLC,IAAK,qBACLC,IAAK,sDAGLC,IAAK,kFACLC,IAAK,+EACLC,IAAK,mGACLC,IAAK,iDACLC,IAAK,2DACLC,IAAK,uLAELC,IAAK,qSAKLC,KAAM,kFACNC,KAAM,iEACNC,KAAM,wFACNC,KAAM,0DAGNC,KAAM,6DACNC,KAAM,sEACNC,KAAM,sDACNC,KAAM,iEACNC,KAAM,sEACNC,KAAM,uDACNC,KAAM,0BACNC,KAAM,uBACNC,KAAM,6CACNC,MAAO,iDACPC,MAAO,wCACPC,MAAO,6CACPC,MAAO,uCACPC,MAAO,2CACPC,MAAO,qDACPC,MAAO,wCACPC,MAAO,6CACPC,MAAO,mEAEPC,MAAO,sBACPC,MAAO,0HACPC,SAAU,4FAGVC,KAAM,2FACNC,KAAM,8BACNC,KAAM,kCACNC,KAAM,qDACNC,KAAM,4DACNC,KAAM,gEACNC,KAAM,uDACNC,KAAM,mDACNC,KAAM,kCACNC,MAAO,oEACPC,MAAO,iDAEPC,MAAO,mDACPC,MAAO,sCACPC,MAAO,2BACPC,MAAO,mFACPC,MAAO,sFACPC,MAAO,wDACPC,MAAO,4CACPC,MAAO,qBACPC,MAAO,0FACPC,MAAO,0CACPC,MAAO,iDACPC,MAAO,sPAIPC,IAAK,sCACLC,IAAK,0EACLC,IAAK,4BACLC,IAAK,oBACLC,IAAK,mKAGLC,IAAK,wDAGLC,IAAK,wBACLC,IAAK,wDACLC,IAAK,gEACLC,IAAK,qBAGLC,IAAK,mEACLC,IAAK,4EACLC,IAAK,sEAKLC,IAAK,sEACLC,IAAK,6CACLC,IAAK,2FACLC,IAAK,8BACLC,IAAK,yCACLC,IAAK,2DACLC,IAAK,gCACLC,IAAK,+IAGLC,IAAK,6BACLC,IAAK,8DAELC,IAAK,uGACLC,IAAK,8JACLC,IAAK,0GACLC,IAAK,2HACLC,QAAS,2EACTC,UAAW,2EACXC,QAAS,2EACTC,cAAe,wEACfC,eAAgB,sCAChBC,aAAc,sFACdC,aAAc,yDACdC,YAAa,6DACbC,gBAAiB,oFACjBC,aAAc,mIAGdC,IAAK,oCACLC,IAAK,qDACLC,IAAK,sEACLC,IAAK,0FACLC,IAAK,wDACLC,IAAK,+DACLC,IAAK,iEACLC,KAAM,qEACNC,KAAM,oDAENC,KAAM,mEACNC,KAAM,oEACNC,KAAM,2CACNC,KAAM,8CACNC,KAAM,kDACNC,KAAM,wCACNC,KAAM,iEACNC,KAAM,kDACNC,KAAM,oDACNC,KAAM,iDACNC,KAAM,wCACNC,KAAM,oJACNC,KAAM,0EACNC,KAAM,wEACNC,KAAM,gFACNC,KAAM,6DACNC,KAAM,+CACNC,KAAM,sCACNC,KAAM,sEACNC,KAAM,gEACNC,KAAM,uGACNC,KAAM,gHACNC,KAAM,+CACNC,KAAM,iHACNC,KAAM,mFACNC,KAAM,wDACNC,KAAM,sOAENC,KAAM,oGAMNC,IAAK,mEACLC,IAAK,+BAOLC,GAAI,kEAGJC,KAAM,qDAENC,KAAM,kEAINC,MAAO,qFACPC,MAAO,0EACPC,MAAO,yGAUPC,IAAK,4BCnNT,IAEIC,GADEC,GAAmB,IADC/hC,GAA4BpD,KAG/C,SAASolC,KACZ,IAAKF,GAAuB,CACxB,IACMG,EAAgB9vK,OAAOmV,oBAAoBy6J,IAC3CG,EAAsB/vK,OAAOmV,oBAAoBs1H,IACvDklC,GAAwB,IAAIG,KAAkBC,EAH5B,UAAW,SAIjC,CACA,OAAOJ,EACX,CCKO,SAASK,GAAmBr6C,GAE/B,IAAMG,EAAcM,GAA4BT,EAAa19G,YAE7D,SAASg4J,EACLjnG,EACAutD,EACA1kD,GAUA,GAPyB,kBAAd7I,GACc,kBAAdutD,GACNp2H,MAAMwB,QAAQ40H,IACW,sBAA1B1kD,EAAKxtE,MAAM,KAAKyK,OA7CrB,SAA6Bk6D,GAChC,GAAkB,aAAdA,EAAJ,CAIA,GAAI,CAAC,cAAcxvD,SAASwvD,GACxB,MAAMqpD,GAAW,OAAQ,CACrBrpD,cAIR,IAAMknG,EAAW,6CACXnrB,EAAQ,IAAIjxC,OAAOo8D,GACzB,GAMkB,QAAdlnG,IACCA,EAAU3mD,MAAM0iI,GAEjB,MAAM1yB,GAAW,MAAO,CACpB0yB,MAAOmrB,EACPlnG,aArBR,CAwBJ,CAmBUmnG,CAAoBnnG,GAGlBhpE,OAAOK,UAAUC,eAAeC,KAAKg2H,EAAW,SAA8B,UAAnBA,EAAU3mH,KACrE,MAAMyiH,GAAW,MAAO,CACpBrpD,cAQR,GACIhpE,OAAOK,UAAUC,eAAeC,KAAKg2H,EAAW,aAClB,mBAAvBA,EAAUG,SAEjB,MAAMrE,GAAW,OAAQ,CACrBrpD,cAKR,GAAIhpE,OAAOK,UAAUC,eAAeC,KAAKg2H,EAAW,QAChD,MAAMlE,GAAW,OAAQ,CACrBrpD,cAMR,GAAIhpE,OAAOK,UAAUC,eAAeC,KAAKg2H,EAAW,OAChD,GAAIp2H,MAAMwB,QAAQ40H,EAAU3mH,OACxB,GAAI2mH,EAAU3mH,KAAKhP,OAAS,IAAM21H,EAAU3mH,KAAK4J,SAAS,YAAc+8G,EAAU3mH,KAAK4J,SAAS,QAC5F,MAAM64G,GAAW,MAAO,CACpBrpD,mBAIR,OAAQutD,EAAU3mH,MACd,IAAK,SACD,MACJ,IAAK,QACD,IACK2mH,EAAUh1D,QACTg1D,EAAUh1D,MAAc3xD,MACQ,WAAjC2mH,EAAUh1D,MAAc3xD,KAEzB,MAAMyiH,GAAW,MAAO,CACpBrpD,cAGR,MACJ,QACI,MAAMqpD,GAAW,MAAO,CACpBrpD,cAMpB,IAAMonG,EAAWv+F,EAAKxtE,MAAM,KAAKzD,QAAU,EAG3C,GAAIwvK,GACK75C,EAAkBzlG,QACnB,MAAMuhG,GAAW,MAAO,CACpBxgD,SAMZ,IAAKu+F,EAAU,CAGX,GACkB,QAAdpnG,GACgB,QAAhB8sD,EAEA,MAAMzD,GAAW,OAAQ,CACrBrpD,cAKR,GAA4B,MAAxBA,EAAUrtC,OAAO,GAAY,CAC7B,GAEkB,QAAdqtC,GACc,aAAdA,EAEA,OAEJ,MAAMqpD,GAAW,MAAO,CACpBrpD,aAER,CACJ,CACJ,CA0BA,OAxBA,SAASqnG,EAASC,EAAiBC,GAC1BD,GAAoC,kBAAfA,GAG1BtwK,OAAOyB,KAAK6uK,GAAYzuK,SAAQqwB,IAC5B,IAAMqkG,EAAY+5C,EAAWp+I,GAExBo+I,EAAW9iG,aACZ+oD,GACqB,kBAAdA,GACNp2H,MAAMwB,QAAQ2uK,IAEfL,EACI/9I,EACAqkG,EACAg6C,GAGR,IAAIC,EAAWD,EACO,eAAlBr+I,IAAgCs+I,EAAWA,EAAW,IAAMt+I,GAChEm+I,EAAS95C,EAAWi6C,EAAS,GAErC,CACAH,CAAS16C,EAAc,KAChB,CACX,CA6DA,SAAS86C,GAA0BC,GAG/B,IAFA,IAAMC,EAAYD,EAAUrsK,MAAM,KAC9BusK,EAAW,GACN/vK,EAAI,EAAGA,EAAI8vK,EAAU/vK,OAAQC,GAAK,EAEnC+vK,EADiB,OAAjBD,EAAU9vK,GACC+vK,EAAS1vK,OAAO,eAAeA,OAAOyvK,EAAU9vK,KAEhD+vK,EAAS1vK,OAAO,UAGnC,OAAOszH,GAASo8C,EACpB,CCrQO,SAASC,GAAgBja,GACvBA,GAGL52J,OACKunB,QAAQqvI,GACR/0J,SAAQ4rE,IAAY,IAAV/pE,EAAGH,GAAEkqE,EACZ,GAAiB,kBAAN/pE,EACP,MAAM4uH,GAAe,QAAS,CAC1BhsH,KAAM5C,IAId,GAAIA,EAAEgW,WAAW,KACb,MAAM44G,GAAe,QAAS,CAC1BhsH,KAAM5C,IAId,GAAiB,oBAANH,EACP,MAAM+uH,GAAe,QAAS,CAC1BhsH,KAAM5C,EACNkM,YAAalM,IAIrB,GF7BL,WACH,IAAKqhK,GAAyB,CAC1B,IAAM+L,EAAiB,IAAKva,GACtBuZ,EAAgB9vK,OAAOmV,oBAAoB27J,GAC3Cf,EAAsB/vK,OAAOmV,oBAC/BnV,OAAOgC,eAAe8uK,IAE1B/L,GAA0B,IAAI+K,KAAkBC,EACpD,CACA,OAAOhL,EACX,CEoBgBgM,GAAyBv3J,SAAS9V,IAClCmsK,KAAuBr2J,SAAS9V,GAEhC,MAAM2uH,GAAW,QAAS,CACtB/rH,KAAM5C,GAEd,GAEZ,CCrCO,SAASstK,GACZ7/J,EACAulJ,GAGA,GACmC,kBAAxBA,GACPv2J,MAAMwB,QAAQ+0J,GAEd,MAAMpkC,GAAe,QAAS,CAC1BnhH,WAIR,IAAM8/J,E5KsKH,SAA6B9/J,GAChC,IAAMgS,EAAUhS,EAAOgS,QAAUhS,EAAOgS,QAAU,EAC9CphB,EAAI,EACR,OAAO,IAAI5B,MAAMgjB,GACZ+tJ,KAAK,GACL5sK,KAAI,IAAMvC,KACnB,C4K5K6BovK,CAAoBhgK,GAG7C,GACI8/J,EAAiBrwK,SAAWZ,OACvByB,KAAKi1J,GAAqB91J,OAE/B,MAAMyxH,GAAW,QAAS,CACtB++C,KAAMpxK,OAAOyB,KAAKi1J,GAClB2a,OAAQJ,IAmBhB,OAdAA,EACK3sK,KAAIgtK,IAAO,CACR/tK,EAAG+tK,EACHzxK,EAAG62J,EAAqB4a,EAAM,OAEjC/sK,QAAOgtK,GAAkC,oBAAfA,EAAS1xK,IACnCgC,SAAQ0vK,IACL,MAAMj/C,GAAe,QAAS,CAC1BnvG,QAASouJ,EAAShuK,EAClBqM,YAAa2hK,EACbpgK,UACF,KAGH,CACX,CC1CO,SAASqgK,GACZj2G,GAEA,GJYG,WACH,IAAKypG,GAAuB,CACxB,IAAM8L,EAA2C,IAAK/P,GAClD,iBACA,UAEE+O,EAAgB9vK,OAAOmV,oBAAoB27J,GAC3Cf,EAAsB/vK,OAAOmV,oBAC/BnV,OAAOgC,eAAe8uK,IAE1B9L,GAAwB,IAAI8K,KAAkBC,GAC9Ce,EAAezyH,SACnB,CACA,OAAO2mH,EACX,CI1BQyM,GAAuBj4J,SAAS+hD,EAAKj1D,MACrC,MAAM+rH,GAAW,MAAO,CACpB/rH,KAAMi1D,EAAKj1D,OAGnBorK,GAAqBn2G,EAAKj1D,KAC9B,CA4BA,IAAMqrK,GAA6B,wBAC7BC,GAA0B,IAAI99D,OAAO69D,IAWpC,SAASD,GAAqBprK,GACjC,GACoB,kBAATA,GACS,IAAhBA,EAAK1F,OAEL,MAAM0xH,GAAe,MAAO,CACxBhsH,SAMR,GAAImuH,GAAanuH,GACb,OAAO,EAGX,IACKA,EAAK+b,MAAMuvJ,KAKH,aAATtrK,EAEA,MAAM+rH,GAAW,MAAO,CACpB0yB,MAAO4sB,GACPE,UAAWvrK,IAInB,OAAO,CACX,CCnBO,SAASwrK,GAAgBv2G,GAC5B,IAAMpqD,EAASoqD,EAAK0uF,QAAQrkB,WAAWz0H,OAAO4kH,WAMxCg8C,EAA4Cx2G,EAAKmtF,WAAWxV,SAC5D8+B,EAAuBhyK,OAAOyB,KAAK0P,EAAOq8D,YAChDxtE,OAAOyB,KAAKswK,GAEPxtK,QAAO0tK,IAAoBA,EAAgBv4J,WAAW,OAEtDnV,QAAOklE,IAAUA,EAAMjwD,SAAS,OAChC3X,SAAQ4nE,IACL,IAAKuoG,EAAqBx4J,SAASiwD,GAC/B,MAAM4oD,GAAW,OAAQ,CACrBlhH,SACAs4D,QACA/wD,MAAO6iD,EAAKmtF,YAEpB,IAOR,IAAMwpB,EAAgB/gK,EAAOoC,QAAUpC,EAAOoC,QAAU,GAClD4E,EAAQojD,EAAKmtF,WAAWvwI,MAC9B,GAAIA,IACmB+5J,EAAcpmJ,MAAKqmJ,GAAe7iD,GAAU6iD,EAAah6J,KAExE,MAAMk6G,GACF,OACA,CACIuT,WAAYrqE,EAAK0uF,QAAQrkB,WAAWt/H,KACpCoS,MAAO6iD,EAAKmtF,WACZv3I,WAWhB,GAAwB,UAApBoqD,EAAK0uF,QAAQ5wF,KAuCd,SACHloD,EACAuH,GAEA,IAAMovH,EAAoCqoB,GACtCh/I,EACAuH,GAEJ,OAAOovH,EAAc4M,UAAUE,wBACnC,CA9Caw9B,CACG72G,EAAK0uF,QAAQrkB,WAAWz0H,OAAO4kH,WAC/Bx6D,EAAKmtF,cAERntF,EAAK0uF,QAAQrkB,WAAWe,SAAS0oB,eAElC,MAAMh9B,GAAW,OAAQ,CACrBuT,WAAYrqE,EAAK0uF,QAAQrkB,WACzBltH,MAAO6iD,EAAKmtF,aASpBntF,EAAKmtF,WAAW90I,MAChB2nD,EAAKmtF,WAAW90I,KACXtP,KAAImlJ,GAAYzpJ,OAAOyB,KAAKgoJ,GAAU,KACtCllJ,QAAOklE,IAAUA,EAAMjwD,SAAS,OAChC3X,SAAQ4nE,IACL,IAAKuoG,EAAqBx4J,SAASiwD,GAC/B,MAAM4oD,GAAW,OAAQ,CACrBlhH,SACAs4D,QACA/wD,MAAO6iD,EAAKmtF,YAEpB,IAKZ2pB,GAAiC92G,EAAKmtF,WAC1C,CAkBO,SAAS2pB,GAAiCn/B,GACrB,kBAAbA,GAAsC,OAAbA,GAGvBlzI,OAAOyB,KAAKyxI,GACpBrxI,SAAQoR,IACT,IAAMvQ,EAAawwI,EAASjgI,GAC5B,GAAIvQ,aAAiBoxG,OACjB,MAAMue,GAAW,OAAQ,CACrB5oD,MAAOx2D,EACPyF,MAAOw6H,IAEJ/yI,MAAMwB,QAAQe,GACrBA,EAAMb,SAAQw/D,GAAQgxG,GAAiChxG,KAEvDgxG,GAAiC3vK,EACrC,GAER,CC3IO,SAAS4vK,GAAqBv8G,GACjC,GAAmB,kBAARA,GAA4B,OAARA,EAC3B,OAAO,EAEX,IAAK,IAAI9iD,KAAO8iD,EACZ,GAAIA,EAAIz1D,eAAe2S,GAAM,CACzB,GAAI8iD,EAAI9iD,aAAgBg0B,KACpB,OAAO,EAEX,GAAwB,kBAAb8uB,EAAI9iD,IAAqBq/J,GAAqBv8G,EAAI9iD,IACzD,OAAO,CAEf,CAEJ,OAAO,CACX,CAGO,SAASs/J,GACZ/sC,EACAyB,GAEA,IAAMnR,EAAcM,GAA4BoP,EAAgBr0H,OAAO8G,YAAYu6J,EAAA,SAAAxsC,GAG/EA,EAASr0G,SAAWkkG,GAChBC,EACA0P,EAAgBr0H,OAChB60H,EAASr0G,UAaTq0G,EAASz8D,UACTvpE,OAAOyB,KAAKukI,EAASz8D,SAASytD,OACzBn1H,SAAQ4wK,IACL,IAAKzyK,OAAOK,UAAUC,eAAeC,KAAKylI,EAASr0G,SAASqlG,MAAOy7C,GAC/D,MAAMpgD,GAAW,MAAO,CACpB+F,WAAY4N,EAASz8D,SACrB8uD,UAAW2N,EAASr0G,SACpB4pC,KAAM,CACFk3G,kBAGZ,IAOZ,IAMmC,oBAApBC,gBACPA,gBAAgB1sC,GAEhBlyH,KAAKgkE,MAAMhkE,KAAKC,UAAUiyH,GAElC,CAAE,MAAOj0E,GACL,MAAMsgE,GAAW,QAAS,CACtBuT,WAAYJ,EAAgBsB,eAC5Bn1G,SAAUq0G,EAASr0G,UAE3B,CAMA,GAAI2gJ,GAAqBtsC,EAASr0G,UAC9B,MAAM0gG,GAAW,QAAS,CACtBuT,WAAYJ,EAAgBsB,eAC5Bn1G,SAAUq0G,EAASr0G,UAG/B,EAhEA,IAAK,IAAMq0G,KAAYiB,EAAIurC,EAAAxsC,EAkE/B,CC1IO,IAAM2sC,GAAyB,CAAC,EAG1BC,GAAoB,mECG7BC,IAAc,EAMXpkJ,eAAeqkJ,GAAyBxhK,GAK3C,KACIuhK,IACkB,qBAAXvxK,QACa,qBAAbuH,UAkCe,cAAtBA,SAASkqK,UACa,cAAtBlqK,SAASkqK,UACa,YAAtBlqK,SAASkqK,UACa,UAAtBlqK,SAASkqK,cA5BTJ,GAAkBK,SACmB,kBAA9BL,GAAkBK,eAClB7S,GAAkBwS,GAAkBK,WAAaJ,WX0rBzDnkJ,eACHk4G,GAGA,aADuBA,EAAS26B,sBAChBjxI,KAAKsxI,gBAAkBh7B,EAAS5kB,KACpD,CWxrB8BkxD,CAAkC3hK,IAC5D,CAIAuhK,IAAc,EAEd,IAAMK,EAASvhJ,SAASC,cAAc,UACtCshJ,EAAOz3I,MAAM6tB,QAAU,OACvB4pH,EAAOzyJ,IAAM,uDAAyDk8I,GACtEhrI,SAASqE,KAAKmC,YAAY+6I,EAP1B,CAQJ,CClBA,IAAIC,IAAqB,EA8BlB,IACMC,GAA8B,CACvC9sK,KAFgC,WAGhC2rH,MAAM,EACNt2B,KAAMA,KACEw3E,IACAliK,QAAQkB,KACJ,CACI,uEACA,iHACA,+EACA,iEACA,qFACA,GACA,gFACA,+GACA,GACA,sFAGA,yEACF1L,KAAK,MAEf,EAEJ2qH,aAAc,CACVC,UAASA,KACE,EAEXC,sBA3CD,SAAkCv7D,GAErC,OACKA,GACc,kBAARA,GACQ,kBAARA,EAKJ+wC,GAAW/wC,GAHPA,CAIf,EAiCQw7D,kBAAAA,CAAmB1mF,GACf,IAAKo6H,GAAep6H,GAEhB,MADA55B,QAAQ+I,MAAM,+BAAiC6wB,GACzC,IAAIvnC,MAAM,cAAgBunC,EAAO,sCAE3C,OAAOo6H,GAAep6H,EAC1B,GAEJosH,MAAO,CACH/jC,kBAAmB,CACfmgD,MR6KL,SAAqBt9C,GAExB,IAAKA,EAAW99G,WACZ,MAAMo6G,GAAW,OAAQ,CACrBlhH,OAAQ4kH,IAIhB,IAAK/1H,OAAOK,UAAUC,eAAeC,KAAKw1H,EAAY,cAClD,MAAM1D,GAAW,OAAQ,CACrBlhH,OAAQ4kH,IAKhB,GAAIA,EAAWvoD,WAAWopD,KACtB,MAAMvE,GAAW,OAAQ,CACrBlhH,OAAQ4kH,IAKhB,IAAK/1H,OAAOK,UAAUC,eAAeC,KAAKw1H,EAAY,YACpB,kBAAvBA,EAAW5yG,SAClB4yG,EAAW5yG,QAAU,EAErB,MAAMkvG,GAAW,OAAQ,CACrBlvG,QAAS4yG,EAAW5yG,UA+C5B,GA3CA6sJ,GAAmBj6C,GA3GhB,SACHA,GAEA,IAAKA,EAAW99G,WACZ,MAAMo6G,GAAW,OAAQ,CAAElhH,OAAQ4kH,IAKvC,SAASu9C,EACLhgC,GAEA,IAAKA,EACD,MAAMjhB,GAAW,OAAQ,CAAElhH,OAAQ4kH,IAGvC,IAAMnmH,EAAe0jI,EAAW1jI,KAChC,IACKA,IACA,CAAC,SAAU,SAAU,WAAW4J,SAAS5J,GAE1C,MAAMyiH,GAAW,OAAQ,CAAElhH,OAAQ4kH,EAAYx6D,KAAM,CAAE+3E,eAE/D,CAEA,GAAqC,kBAA1Bvd,EAAW99G,WAAyB,CAC3C,IAAMhF,EAAM8iH,EAAW99G,WAEvBq7J,EADmBv9C,EAAWvoD,WAAWv6D,GAE7C,KAAO,CACH,IAAMsgK,EAAgDx9C,EAAW99G,WAGjEq7J,EADsB59C,GAAsBK,EAAYw9C,EAAoBtgK,MAG5EsgK,EAAoBlrG,OAAOxmE,SAAQ4nE,IAE/B6pG,EADmB59C,GAAsBK,EAAYtsD,GAChB,GAE7C,CAQA,IAAMqsD,EAAcM,GAA4BL,EAAW99G,YACrDu7J,EAAwBz9C,EAAWvoD,WAAWsoD,GACpD,IAAK09C,EAAsBjhB,UACvB,MAAMlgC,GAAW,OAAQ,CAAElhH,OAAQ4kH,EAAYx6D,KAAM,CAAEi4G,2BACpD,IAAKC,SAASD,EAAsBjhB,WACvC,MAAMlgC,GAAW,OAAQ,CAAElhH,OAAQ4kH,EAAYx6D,KAAM,CAAEi4G,0BAE/D,CAsDIE,CAAgB39C,GAEhB/1H,OAAOyB,KAAKs0H,EAAWvoD,YAAY3rE,SAAQoR,IACvC,IAAMvQ,EAAaqzH,EAAWvoD,WAAWv6D,GAEzC,GAAIA,IAAQ8iH,EAAW99G,WAAY,CAC/B,GAAI89G,EAAWxiH,SAAWwiH,EAAWxiH,QAAQiG,SAASvG,GAClD,MAAMo/G,GAAW,OAAQ,CACrB3vH,QACAyO,OAAQ4kH,IAGhB,GAAIrzH,EAAM+V,OACN,MAAM45G,GAAW,OAAQ,CACrB3vH,QACAyO,OAAQ4kH,IAGhB,GAAIA,EAAWY,WAAaZ,EAAWY,UAAUn9G,SAASvG,GACtD,MAAMo/G,GAAW,OAAQ,CACrB3vH,QACAyO,OAAQ4kH,IAGhB,GAAmB,WAAfrzH,EAAMkN,KACN,MAAMyiH,GAAW,OAAQ,CACrB3vH,QACAyO,OAAQ4kH,GAGpB,CAGA,GAAI85C,KAAuBr2J,SAASvG,GAChC,MAAMo/G,GAAW,OAAQ,CACrBp/G,MACA9B,OAAQ4kH,GAEhB,IAIAA,EAAWxiH,QAAS,CAEpB,IAAK+8G,GAAqByF,EAAWxiH,SACjC,MAAM8+G,GAAW,OAAQ,CACrB9+G,QAASwiH,EAAWxiH,QACpBpC,OAAQ4kH,IAIhBA,EAAWxiH,QAAQ1R,SAAQsW,IAEvB,GAAuB,kBAAVA,IAAsBhY,MAAMwB,QAAQwW,GAC7C,MAAMk6G,GAAW,OAAQ,CAAEl6G,QAAOhH,OAAQ4kH,IAG9C,GAAI51H,MAAMwB,QAAQwW,GACd,IAAK,IAAItX,EAAI,EAAGA,EAAIsX,EAAMvX,OAAQC,GAAK,EACnC,GAAwB,kBAAbsX,EAAMtX,GACb,MAAMwxH,GAAW,OAAQ,CAAEl6G,QAAOhH,OAAQ4kH,KAWjCzF,GAAqBn4G,GAASA,EAAQ,CAACA,IAC/CtW,SAAQmnE,IACjB,IAAMsqE,EAAa5d,GACfK,EACA/sD,GAKJ,OAD8BsqE,EAAW1jI,MAErC,IAAK,SAED,IADkB0jI,EAAWif,UAEzB,MAAMlgC,GAAW,OAAQ,CACrBl6G,QACAsxD,MAAOT,EACP73D,OAAQ4kH,IAGhB,MACJ,IAAK,SACL,IAAK,UAED,IADmBud,EAAWzb,WAE1B,MAAMxF,GAAW,OAAQ,CACrBl6G,QACAsxD,MAAOT,EACP73D,OAAQ4kH,IAGhB,IAAM6B,EAAU0b,EAAW1b,QACrBD,EAAU2b,EAAW3b,QAC3B,GACuB,qBAAZC,GACY,qBAAZD,EAEP,MAAMtF,GAAW,OAAQ,CACrBl6G,QACAsxD,MAAOT,EACP73D,OAAQ4kH,IAIhB,IACK09C,SAAS77C,KACT67C,SAAS97C,GAEV,MAAMtF,GAAW,OAAQ,CACrBl6G,QACAsxD,MAAOT,EACP73D,OAAQ4kH,IAIhB,MACJ,IAAK,UAKD,IAAI49C,EAAa,GACbC,EAAe5qG,EACnB,GAAIA,EAAUxvD,SAAS,KAAM,CACzB,IAAMq6J,EAAY7qG,EAAU3kE,MAAM,KAClCuvK,EAAeC,EAAU/kK,MACzB6kK,EAAaE,EAAUptK,KAAK,IAChC,CACA,IAAMqtK,EAAkC,KAAfH,EAAoB59C,EAAaL,GACtDK,EACA49C,GAGJ,IACKG,EAAiBp9C,WACjBo9C,EAAiBp9C,SAASl9G,SAASo6J,GAEpC,MAAMvhD,GAAW,OAAQ,CACrBl6G,QACAsxD,MAAOT,EACP73D,OAAQ4kH,IAGhB,MAEJ,QACI,MAAM1D,GAAW,OAAQ,CACrBrpD,YACAp5D,KAAM0jI,EAAW1jI,KACjBuB,OAAQ4kH,IAEpB,GACF,GAGV,CAGA/1H,OAAOyB,KAAKkuH,GAAcoG,IACrBzxH,KAAI2O,IAED,IAAM5O,EAAQ4O,EAAI5O,MAAM,KAExB,OADAA,EAAMyK,MACCzK,EAAMoC,KAAK,IAAI,IAEzBlC,QAAO0O,GAAe,KAARA,IACd1O,QAAO,CAAC6yH,EAAMjW,EAAK1jD,IAAQA,EAAI75D,QAAQwzH,KAAUjW,IACjD58G,QAAO0O,IACJ,IAAMvQ,EAAQ2yH,GAAYU,EAAY9iH,GACtC,OAAOvQ,KAAWA,EAAMyV,KAAK,IAEhCtW,SAAQoR,IAGL,MAAMo/G,GAAW,OAAQ,CACrBl6G,MAAOq8G,GAFXvhH,GADAA,EAAMA,EAAIgS,QAAQ,cAAe,KACvBA,QAAQ,kBAAmB,MAGjC9T,OAAQ4kH,GACV,KAITA,EAAWxiH,SAAW,IAClBtM,QAAO,CAAC8sK,EAAsB5e,KACvB7kC,GAAqB6kC,GACrBxkC,GAAcojD,EAAY5e,GAE1B4e,EAAWpwK,KAAKwxJ,GAEb4e,IACR,IACFxvK,QAAO,CAAC6yH,EAAMjW,EAAK1jD,IAAQA,EAAI75D,QAAQwzH,KAAUjW,IACjD78G,KAAI0vK,IACD,IAAMpD,EAAWH,GAA0BuD,GACrCz9C,EAAYlB,GAAYU,EAAY66C,GAC1C,IAAKr6C,GAAkC,kBAAdA,EACrB,MAAMlE,GAAW,OAAQ,CACrBl6G,MAAO67J,EACP7iK,OAAQ4kH,IAGhB,MAAO,CAAEi+C,YAAWz9C,YAAW,IAElChyH,QAAO4T,GACqB,WAAzBA,EAAMo+G,UAAU3mH,MACS,YAAzBuI,EAAMo+G,UAAU3mH,MACS,WAAzBuI,EAAMo+G,UAAU3mH,MACS,YAAzBuI,EAAMo+G,UAAU3mH,OAEnB/N,SAAQsW,IACL,MAAMk6G,GAAW,OAAQ,CACrBp/G,IAAKkF,EAAM67J,UACXpkK,KAAMuI,EAAMo+G,UAAU3mH,KACtBuB,OAAQ4kH,GACV,IAUV/1H,OAAOyB,KAAKkuH,GAAcoG,IACrBzxH,KAAI2O,IAED,IAAM5O,EAAQ4O,EAAI5O,MAAM,KAExB,OADAA,EAAMyK,MACCzK,EAAMoC,KAAK,IAAI,IAEzBlC,QAAO0O,GAAe,KAARA,GAAsB,gBAARA,IAC5B1O,QAAO,CAAC6yH,EAAMjW,EAAK1jD,IAAQA,EAAI75D,QAAQwzH,KAAUjW,IACjD58G,QAAO0O,IAEJ,IAAMvQ,EAAQ2yH,GAAYU,EAAY9iH,GACtC,OAAOvQ,KAAWA,EAAMi0H,SAAS,IAEpC90H,SAAQoR,IAGL,MAAMo/G,GAAW,OAAQ,CACrBl6G,MAAOq8G,GAFXvhH,GADAA,EAAMA,EAAIgS,QAAQ,cAAe,KACvBA,QAAQ,kBAAmB,MAGjC9T,OAAQ4kH,GACV,IAINA,EAAWY,WACXZ,EAAWY,UACN90H,SAAQoyK,IAEL,IAAMrD,EAAWH,GAA0BwD,GAErC19C,EAAYlB,GAAYU,EAAY66C,GAC1C,IAAKr6C,GAAkC,kBAAdA,EACrB,MAAMlE,GAAW,OAAQ,CACrB5oD,MAAOwqG,EACP9iK,OAAQ4kH,GAEhB,GAGhB,GQ3dQpD,oBAAqB,CACjB0gD,MAAO,SAAU93G,ILvFtB,SAAmCA,GAItC,GAFAm2G,GAAqBn2G,EAAKj1D,MAEvBi1D,EAAKj1D,KAAKkT,SAAS,KAClB,MAAM64G,GAAW,OAAQ,CACrB/rH,KAAMi1D,EAAKj1D,OASnB,GAAImuH,GAAal5D,EAAKj1D,QACdi1D,EAAKj1D,KAAKi0E,SAAS,MAAQhf,EAAKj1D,KAAKi0E,SAAS,OAC9C,MAAM83C,GAAW,OAAQ,CACrB/rH,KAAMi1D,EAAKj1D,MAI3B,CKkEgB4tK,CAA0B34G,EAC9B,GAEJq3D,iBAAkB,CACdygD,MAAO5kJ,eAAgB8sC,GACnBu3G,GAAyBv3G,EAAKorE,SAClC,GAEJ9T,sBAAuB,CACnBwgD,MAAO,SAAU93G,GAGb,GAFAi2G,GAA0Bj2G,GPtEnC,SACHpqD,EACAukJ,GAEA,IAAMye,EAAiBn0K,OAAOyB,KAAK0P,EAAOq8D,YACrCkoF,GAGL11J,OAAOyB,KAAKi0J,GACPnxJ,QAAO++J,GAAW6Q,EAAe36J,SAAS8pJ,KAC1CzhK,SAAQyhK,IACL,MAAMjxC,GAAW,QAAS,CACtBixC,WACF,GAEd,COwDgB8Q,CAAwB74G,EAAKpqD,OAAeoqD,EAAKm6F,SACrB,MAAxBn6F,EAAKj1D,KAAKq1B,OAAO,GACjB,MAAM02F,GAAW,MAAO,CACpB/rH,KAAMi1D,EAAKj1D,OAGnB,IAAKi1D,EAAKpqD,OACN,MAAMkhH,GAAW,MAAO,CACpB/rH,KAAMi1D,EAAKj1D,KACXi1D,QAGZ,GAEJ+3D,iBAAkB,CACd+gD,OAAQ,SAAUhqG,IHnIvB,SACHpyD,EACAoyH,GAEA,IAAKpyH,EACD,MAAMo6G,GAAW,QAAS,CACtBp6G,aACA0Z,SAAU04G,IAUlB,GACIpyH,IAAeA,EAAW+M,OAE1B,MAAMqtG,GAAW,QAAS,CACtBp6G,aACA0Z,SAAU04G,IAGlB,GACIpyH,EAAWuB,SAAS,OACpBvB,EAAWuB,SAAS,MAEpB,MAAM64G,GAAW,QAAS,CACtBp6G,aACA0Z,SAAU04G,IAGlB,GACIpyH,EAAWuB,SAAS,KAEpB,MAAM64G,GAAW,QAAS,CACtBp6G,aACA0Z,SAAU04G,GAGtB,CG0FgBiqC,CAAsBjqG,EAAIsgE,QAAStgE,EAAI2C,QAAO,GAClD,GAEJomD,iBAAkB,CACdigD,MAAO,SAAU93G,IJzHtB,SAAoBA,GAEvB,GADwE,oBAAlDv7D,OAAOK,UAAU2E,SAASzE,KAAKg7D,EAAK+zF,UAEtD,MAAMh9B,GAAe,OAAQ,CACzBj5D,GAAIkC,EAAKlC,GACTusE,WAAYrqE,EAAKqqE,WAAWt/H,KAC5BgpJ,SAAU/zF,EAAK+zF,WAIvB,IAAMilB,EAAkC,CACpC,WACA,QACA,OACA,OACA,SAiBJ,GAfAv0K,OAAOyB,KAAK85D,EAAK+zF,UAAUztJ,SAAQoR,IAC/B,IAAMshK,EAAuB/6J,SAASvG,GAClC,MAAMq/G,GAAe,OAAQ,CACzBj5D,GAAIkC,EAAKlC,GACTusE,WAAYrqE,EAAKqqE,WAAWt/H,KAC5BgpJ,SAAU/zF,EAAK+zF,SACfr8I,MACAsoD,KAAM,CACFg5G,cAGZ,IAKY,UAAZh5G,EAAKlC,KAEDkC,EAAK+zF,SAAS76I,OACd8mD,EAAK+zF,SAASxxC,MAGlB,MAAMuU,GACF,OACA,CACIuT,WAAYrqE,EAAKqqE,WAAWt/H,KAC5BoS,MAAO6iD,EAAK+zF,WAKxB+iB,GAAiC92G,EAAK+zF,SAC1C,CIyEgBklB,CAAWj5G,EACf,GAEJ83D,gBAAiB,CACbggD,MAAQ93G,IACJu2G,GAAgBv2G,EAAK,GAG7Bk4D,gBAAiB,CACb4gD,OAAS94G,IACLg3G,GAAeh3G,EAAKiqE,gBAAiBjqE,EAAK0rE,KAAK,GAGvDnU,mBAAoB,CAChBugD,MAAQ93G,IAEJs1G,GAAgBt1G,EAAK8oE,QAAQuyB,SAC7Bia,GAAgBt1G,EAAK8oE,QAAQqxB,SAC7Bmb,GAAgBt1G,EAAK8oE,QAAQsyB,aAGzBp7F,EAAK8oE,QAAQlzH,QAAUoqD,EAAK8oE,QAAQqyB,qBACpCsa,GACIz1G,EAAK8oE,QAAQlzH,OACboqD,EAAK8oE,QAAQqyB,oBAErB,eCnKhB,MAAM+d,GAActvK,OAAOkuB,IAAI,SACzB3C,GAAQtvB,WAAWqzK,MAAiBrzK,WAAWqzK,IAAeC,IACpE,GAAIA,GAAAA,SAAkBhkJ,GAAMd,OACxB,MAAM,IAAItsB,MAAM,2DAADpC,OAA4DwzK,GAAAA,OAAa,SAAAxzK,OAAQwvB,GAAMd,SAE1G,MAAM,UACFZ,GAAS,YAAEgC,GAAW,cAAEC,GAAa,SAAEF,GAAQ,IAAE5c,GAAG,OAAEwc,GAAM,cAC5DC,GAAa,iBAAEC,GAAgB,cAAEpX,GAAa,IAAErE,GAAG,OAAEmE,IAAWmX,GCE7D,IAAMikJ,GAAwB,OACxBC,GAA2B,UAC3BC,GAA+B,cAE/BC,GAAwB,QAE/BC,GAA6D,IAAI/oJ,IACjEgpJ,GAA6D,IAAIhpJ,IAiEhE,IAAMipJ,GAAwB,KAC9B,SAASC,GAA6Bn8F,GACzC,IAAM10E,EAAQ00E,EAAI10E,MAAM,KACxB,GAAIA,EAAMzD,OAAS,EACf,OAAOyD,EAAMC,KAAIqgI,GAAQuwC,GAA6BvwC,KAAOl+H,KAAK,KAGtE,GAAIsyE,EAAIr/D,WAAW,KAAM,CACrB,IAAMy7J,EAAep8F,EAAIp/D,UAAU,GACnC,OAAOs7J,GAAwBE,CACnC,CACI,OAAOp8F,CAEf,CAEO,SAASq8F,GAAmCr8F,GAC/C,IAAM10E,EAAQ00E,EAAI10E,MAAM,KACxB,OAAIA,EAAMzD,OAAS,EACRyD,EAAMC,KAAIqgI,GAAQywC,GAAmCzwC,KAAOl+H,KAAK,KAGxEsyE,EAAIr/D,WAAWu7J,IAER,IADcl8F,EAAIp/D,UAAUs7J,GAAsBr0K,QAGlDm4E,CAEf,CAQO,SAASs8F,GACZC,EACApyK,GAEA,OAAKA,GAILA,EAAIqyK,GADJryK,EAAI4sH,GAAU5sH,IAGdoyK,EAAezzK,SAAQ6uH,IACnB,IAAMxhC,EAAMmmC,GAAYnyH,EAAGwtH,GAE3Bh1F,GAAYx4B,EAAGwtH,EADAxhC,EAAM,IAAM,IACA,IAGxBhsF,GAXIA,CAYf,CACO,SAASsyK,GACZF,EACApyK,GAEA,OAAKA,GAKLA,EAAIuyK,GADJvyK,EAAI4sH,GAAU5sH,IAGdoyK,EAAezzK,SAAQ6uH,IACnB,IAAMxhC,EAAMmmC,GAAYnyH,EAAGwtH,GAE3Bh1F,GAAYx4B,EAAGwtH,EADQ,MAARxhC,EACY,IAGxBhsF,GAZIA,CAaf,CAKO,SAASqyK,GAAwBv/C,GACpC,IACKA,GACuB,kBAAjBA,GACiB,kBAAjBA,GACiB,mBAAjBA,EAEP,OAAOA,EACJ,GAAI71H,MAAMwB,QAAQq0H,GACrB,OAAOA,EAAa1xH,KAAIsvJ,GAAO2hB,GAAwB3hB,KACpD,GAA4B,kBAAjB59B,EAA2B,CACzC,IAAM5xD,EAAW,CAAC,EAOlB,OANApkE,OAAOunB,QAAQyuG,GAAcn0H,SAAQ4rE,IAAkB,IAAhBx6D,EAAKvQ,GAAM+qE,EACzB,kBAAV/qE,IACPA,EAAQ6yK,GAAwB7yK,IAEpC0hE,EAAI8wG,GAA6BjiK,IAAQvQ,CAAK,IAE3C0hE,CACX,CACJ,CAEO,SAASqxG,GAAwBz/C,GACpC,IAAKA,GAAwC,kBAAjBA,GAAqD,kBAAjBA,GAAqD,mBAAjBA,EAChG,OAAOA,EACJ,GAAI71H,MAAMwB,QAAQq0H,GACrB,OAAOA,EAAa1xH,KAAIsvJ,GAAO6hB,GAAwB7hB,KACpD,GAA4B,kBAAjB59B,EAA2B,CACzC,IAAM5xD,EAAW,CAAC,EAOlB,OANApkE,OAAOunB,QAAQyuG,GAAcn0H,SAAQy3E,IAAkB,IAAhBrmE,EAAKvQ,GAAM42E,GACzB,kBAAV52E,GAAsBvC,MAAMwB,QAAQq0H,MAC3CtzH,EAAQ+yK,GAAwB/yK,IAEpC0hE,EAAIgxG,GAAmCniK,IAAQvQ,CAAK,IAEjD0hE,CACX,CACJ,CAOO,SAASsxG,GACZ//C,GAEA,IAAId,EAAoB,GAMlB58G,EAAam+G,GAA4BT,EAAa19G,YAC5D48G,EAAMlxH,KAAK,CAACsU,IACZ48G,EAAMlxH,KAAK,CAAC,WAAYsU,IAGpB09G,EAAapiH,SACboiH,EAAapiH,QAAQ1R,SAAQsW,IACzB,IAAMm/G,EAAU3iH,GAAQwD,GACxB08G,EAAMlxH,KAAK2zH,EAAQ,IAK3BzC,EAAMlxH,KAAK,CAAC,YAAasU,IAGzB48G,EAAMlxH,KAAK,CAAC,cAWZ,IAAIgyK,GAJJ9gD,EAAQA,EAAMvwH,KAAIqgI,GACPA,EAAKrgI,KAAIy0E,GAAOm8F,GAA6Bn8F,QAG5Bz0E,KAAIqgI,GACR,IAAhBA,EAAK/jI,OACE+jI,EAAK,GAEL,IAAMA,EAAKl+H,KAAK,KAAO,MAMtC,OAHAkvK,EAAkBA,EAAgBpxK,QAAO,CAAC6yH,EAAWjW,EAAU1jD,IAAaA,EAAI75D,QAAQwzH,KAAUjW,KAC9D16G,KAAK,KAG7C,CAMOgoB,eAAemnJ,GAClB/uC,EACA4oB,GAEA,IAAM9tG,QAAcklF,EAEpB,aADuBllF,EAAMk0H,WAAWz/J,QAAQq5I,IAChCnrJ,KAAIpB,GAAKsyK,GAAmB7zH,EAAM2zH,eAAgBpyK,IACtE,CAGO,SAAS4yK,GAAmBrwC,EAAoBU,GACnD,OAAOV,EAAa,KAAOU,CAC/B,CAGO,SAAS4vC,GAAkB5kK,GAC9B,IAAM6kK,EAAgB,IAAIvxK,IACpB2/D,EAAgB,GACtB,OAAKjzD,EAAOoC,SAGZpC,EAAOoC,QAAQ1R,SAAQsW,IACJxD,GAAQwD,GAChBtW,SAAQ4nE,IACPusG,EAAcnxK,IAAI4kE,KAGtBusG,EAAc5gK,IAAIq0D,GAEK,YADLisD,GAAsBvkH,EAAQs4D,GAClC75D,MACVw0D,EAAIzgE,KAAK8lE,GACb,GACF,IAENrF,EAAIzgE,KAAK,YAEUygE,EpM5HL7/D,QAAO,SAAU6yH,EAAMjW,EAAK1jD,GACtC,OAAOA,EAAI75D,QAAQwzH,KAAUjW,CACjC,KoMyGW/8C,CAkBf,CCvRO,SAAS6xG,GAAkBvyK,GAC9B,OAAIA,IAAMqvI,IACEzoF,IAED5mD,CAEf,CAEA,SAASwyK,GACLZ,EACAtsG,EACAtmE,GAEA,OAAI4yK,EAAe97J,SAASwvD,GACPtmE,IAAUowI,KAAuB,IAAVpwI,EAAiB,IAAM,IAGxDA,CAEf,CAEO,SAASyzK,GACZb,EACA5gC,EACAhyH,GAEA,IAAKA,EAAa,CACd,GAAsB,qBAAXphB,OACP,MAAM,IAAIgC,MAAM,uBAEhBof,EAAcphB,OAAOohB,WAE7B,CAGA,IAAM6xH,EAAYG,EAAUH,UACvBjwI,KAAI,CAACf,EAAG1C,KACL,IAAMmoE,EAAY0rE,EAAUv8H,MAAMtX,GAClC,OAAOq1K,GAA8BZ,EAAgBtsG,EAAWzlE,EAAE,IAErEe,IAAI2xK,IACHxhC,EAAUC,EAAUD,QACrBnwI,KAAI,CAACf,EAAG1C,KACL,IAAMmoE,EAAY0rE,EAAUv8H,MAAMtX,GAClC,OAAOq1K,GAA8BZ,EAAgBtsG,EAAWzlE,EAAE,IAErEe,IAAI2xK,IAQT,OANiBvzJ,EAAYrB,MACzBkzH,EACAE,GACCC,EAAUf,gBACVe,EAAUhB,aAGnB,CAMOjlH,eAAe2nJ,GAClBvlI,EACAi3F,GAEA,IAAMnmF,QAAc9Q,EAASg2F,UACvBnuH,EAAQovH,EAAcpvH,MAEtBolG,EAAOplG,EAAMolG,KAAOplG,EAAMolG,KAAO,EAEjCu4D,EAAgBv4D,GADRplG,EAAMjE,MAAQiE,EAAMjE,MAAQ61C,KAEpCoqF,EAAY5M,EAAc4M,UAE5BlD,GAAgE,EAC/DkD,EAAUE,2BACXpD,EAAeqY,GACXh5G,EAAS1/B,OACT22H,EAAcpvH,QAGtB,IAAM49J,EAAWH,GACbx0H,EAAM2zH,eACN5gC,EACC/yF,EAAM40H,QAAgB96J,SAASiH,aAG9B8zJ,EAA4B9hC,EAAUv8H,MAExC8uH,EAAc,GAgElB,SA/DMtlF,EAAM40H,QAAQp3J,YAChB,IACAwiC,EAAMk0H,YACNpnJ,UAOI,IAOIgoJ,EAFEn1E,EALMo1E,EAAgBrlK,SAKX8O,YAAYw0J,IAG7B8B,EAAY,IACRD,EACKlyK,KAAImlE,GAASyrG,GAA6BzrG,KAC1ChjE,KAAK,KACR,IAIN,IAAMkwK,EAHEr1E,EAAMnpF,MAAMs+J,GAGIn+J,WAAWg+J,SAC7B,IAAIx0K,SAAc4pB,IACpBirJ,EAAUzuK,UAAY,SAAUpI,GAC5B,IAAM82K,EAAS92K,EAAEme,OAAOzD,OACxB,GAAIo8J,EAAQ,CAER,IAAMvsC,EAAUmrC,GAA8B7zH,EAAM2zH,eAAgBsB,EAAOl0K,OACtE8uI,IAAgBA,EAAanH,IAC9BpD,EAAKtjI,KAAK0mI,GAUVqK,EAAUC,sBACV1N,EAAKrmI,SAAWy1K,EAEhB3qJ,IAEAkrJ,EAAO19J,UAEf,MAEIwS,GAER,CAAC,GACH,KAOLgpH,EAAUC,qBAAsB,CACjC,IAAM7F,EAAiBsa,GAAkBv4G,EAAS1/B,OAAQ22H,EAAcpvH,OACxEuuH,EAAOA,EAAKrzH,KAAKk7H,EACrB,CAqBA,MAAO,CACHyf,UAnBJtnB,EAAOA,EAAKhmI,MAAM68G,EAAMu4D,GAqB5B,CCnMQ,IAAA10K,GAAYxB,MAAKwB,QCsBnB,SAAU60E,SAAS,IAAAjb,EAAA,GAAAC,EAAA,EAAAA,EAAA76D,UAAAC,OAAA46D,IAAAD,EAAAC,GAAA76D,UAAA66D,GACvB,IAAM9tD,EAAYoyH,GAAavkE,GACzByjE,EAAae,GAAUxkE,EAAMjR,KAGnC,OAFAiR,EDnBI,SAA4BA,GAChC,OAAuB,IAAhBA,EAAK36D,QAAgBe,GAAQ45D,EAAK,IAAMA,EAAK,GAAMA,CAC5D,CCiBSs7G,CAAet7G,GAEfy9D,IAAQ,SAACt8F,EAAQijC,GACtBkgE,GAASb,EAATa,CAAqBj9H,GAAI42D,EAAC,CAAC98B,GAAM68B,EAAMgC,IAAgC7tD,IAAY0J,UAAUuoD,EAC/F,GACF,CCxBoC79D,QAAQqH,SAAQ,GACjBrH,QAAQqH,SAAQ,GAD5C,IAEI2tK,GAAwBh1K,QAAQqH,UACpC,SAAS4tK,GAAMzpI,EAAM0pI,GAE1B,OADK1pI,IAAMA,EAAO,GACX,IAAIxrC,SAAQ,SAAU4pB,GAC3B,OAAOjoB,YAAW,WAChB,OAAOioB,EAAIsrJ,EACb,GAAG1pI,EACL,GACF,CAQO,SAAS2pI,KACd,OAAO58J,KAAK82B,SAASnsC,SAAS,IAAI2U,UAAU,EAC9C,CACA,IAAIu9J,GAAS,EASN,SAASC,KACd,IAAI/yG,EAAmB,IAAbn9B,KAAKC,MAKf,OAJIk9B,GAAO8yG,KACT9yG,EAAM8yG,GAAS,GAEjBA,GAAS9yG,EACFA,CACT,CCUO,IAAIgzG,GAAe,CACxBv0K,OAnDK,SAAgBw0K,GACrB,IAAI11H,EAAQ,CACVrU,KAAMgqI,KACNC,iBAAkB,KAClBz3I,GAAI,IAAI3P,iBAAiBknJ,GACzBG,OAAQ,IAQV,OALA71H,EAAM7hB,GAAG1P,UAAY,SAAUqnJ,GACzB91H,EAAM41H,kBACR51H,EAAM41H,iBAAiBE,EAASpnJ,KAEpC,EACOsxB,CACT,EAsCEvvC,MArCK,SAAeslK,GACpBA,EAAa53I,GAAG1tB,QAChBslK,EAAaF,OAAS,EACxB,EAmCEG,UA1BK,SAAmBD,EAAc9zJ,GACtC8zJ,EAAaH,iBAAmB3zJ,CAClC,EAyBE2M,YAnCK,SAAqBmnJ,EAAcE,GACxC,IAEE,OADAF,EAAa53I,GAAGvP,YAAYqnJ,GAAa,GAClCd,EACT,CAAE,MAAO/kH,GACP,OAAOjwD,QAAQoK,OAAO6lD,EACxB,CACF,EA6BE8lH,UAzBK,WAGL,GAA0B,qBAAfz2K,YAA8BA,WAAW02K,MAAQ12K,WAAW02K,KAAKv8G,KAC1E,OAAO,EAIT,GAAuB,qBAAXj6D,QAA0C,qBAATD,MAAqD,oBAArB8uB,iBAM3E,OAAO,EALP,GAAIA,iBAAiB4nJ,QACnB,MAAM,IAAIz0K,MAAM,uGAElB,OAAO,CAIX,EAUEsM,KAzDgB,SA0DhBooK,oBAVK,WACL,OAAO,GACT,EASEb,aA5DwBG,ICDnB,SAASW,KACd,IAAIC,EAAkBv3K,UAAUC,OAAS,QAAsBqzD,IAAjBtzD,UAAU,GAAmBA,UAAU,GAAK,CAAC,EACvFo2B,EAAUjjB,KAAKgkE,MAAMhkE,KAAKC,UAAUmkK,IA6BxC,MA1BwC,qBAA7BnhJ,EAAQohJ,mBAAkCphJ,EAAQohJ,kBAAmB,GAG3EphJ,EAAQqhJ,MAAKrhJ,EAAQqhJ,IAAM,CAAC,GAE5BrhJ,EAAQqhJ,IAAI3X,MAAK1pI,EAAQqhJ,IAAI3X,IAAM,MACnC1pI,EAAQqhJ,IAAIC,mBAAkBthJ,EAAQqhJ,IAAIC,iBAAmB,KAE9DH,EAAgBE,KAA8C,oBAAhCF,EAAgBE,IAAI3vJ,UAAwBsO,EAAQqhJ,IAAI3vJ,QAAUyvJ,EAAgBE,IAAI3vJ,SAGnHsO,EAAQuhJ,eAAcvhJ,EAAQuhJ,aAAe,CAAC,GAC9CvhJ,EAAQuhJ,aAAaC,gBAAexhJ,EAAQuhJ,aAAaC,cAAgB,KAG1EL,EAAgBxiB,UAAS3+H,EAAQ2+H,QAAUwiB,EAAgBxiB,SAG1D3+H,EAAQ+W,OAAM/W,EAAQ+W,KAAO,CAAC,GAC9B/W,EAAQ+W,KAAK2yH,MAAK1pI,EAAQ+W,KAAK2yH,IAAM,MAKrC1pI,EAAQ+W,KAAK0qI,oBAAmBzhJ,EAAQ+W,KAAK0qI,kBAAoB,MAC9B,qBAA7BzhJ,EAAQ+W,KAAK2qI,cAA6B1hJ,EAAQ+W,KAAK2qI,aAAc,GACzE1hJ,CACT,CCtBO,IAGH2hJ,GAAY,8BACZC,GAAkB,WAMXC,GAAuB,CAChCv5J,WAAY,WAGP,SAASw5J,KACd,GAAyB,qBAAd3kK,UAA2B,OAAOA,UAC7C,GAAsB,qBAAX5S,OAAwB,CACjC,GAAmC,qBAAxBA,OAAOqsB,aAA8B,OAAOrsB,OAAOqsB,aAC9D,GAAsC,qBAA3BrsB,OAAOssB,gBAAiC,OAAOtsB,OAAOssB,gBACjE,GAAkC,qBAAvBtsB,OAAOusB,YAA6B,OAAOvsB,OAAOusB,WAC/D,CACA,OAAO,CACT,CAOO,SAASirJ,GAA2BC,GACrCA,EAAGxmK,QACLwmK,EAAGxmK,QAEP,CAwEO,SAASymK,GAAsB1nK,EAAI2nK,GACxC,IAAIF,EAAKznK,EAAG6N,YAAYw5J,GAAiB,WAAYC,IACjDz4J,EAAc44J,EAAG54J,YAAYw4J,IAC7Bv0G,EAAM,GACN80G,EAAgBx2J,YAAYrB,MAAM43J,EAAe,EAAG3uH,KAOxD,GAAInqC,EAAYqB,OAAQ,CACtB,IAAI23J,EAAgBh5J,EAAYqB,OAAO03J,GACvC,OAAO,IAAIp3K,SAAQ,SAAU4pB,EAAK0tJ,GAChCD,EAAchxK,QAAU,SAAU4pD,GAChC,OAAOqnH,EAAIrnH,EACb,EACAonH,EAAcjxK,UAAY,SAAUpI,GAClC4rB,EAAI5rB,EAAEme,OAAOzD,OACf,CACF,GACF,CAYA,OAAO,IAAI1Y,SAAQ,SAAU4pB,EAAK0tJ,GAChC,IAAIC,EAZN,WAIE,IAEE,OADAH,EAAgBx2J,YAAYrB,MAAM43J,EAAe,EAAG3uH,KAC7CnqC,EAAY7H,WAAW4gK,EAChC,CAAE,MAAOp5K,IACP,OAAOqgB,EAAY7H,YACrB,CACF,CAE0BA,GACxB+gK,EAAkBlxK,QAAU,SAAU4pD,GACpC,OAAOqnH,EAAIrnH,EACb,EACAsnH,EAAkBnxK,UAAY,SAAUoxK,GACtC,IAAI1C,EAAS0C,EAAGr7J,OAAOzD,OACnBo8J,EACEA,EAAOl0K,MAAM0H,GAAK6uK,EAAe,EACnCrC,EAAiB,SAAEqC,EAAe,IAElC70G,EAAIzgE,KAAKizK,EAAOl0K,OAChBk0K,EAAiB,aAGnBkC,GAA2BC,GAC3BrtJ,EAAI04C,GAER,CACF,GACF,CAyCO,SAASm1G,GAAiB7B,GAC/B,OA1BK,SAAwBpmK,EAAImvJ,GACjC,IAAIG,EAAY35H,KAAKC,MAAQu5H,EACzBsY,EAAKznK,EAAG6N,YAAYw5J,GAAiB,WAAYC,IACjDz4J,EAAc44J,EAAG54J,YAAYw4J,IAC7Bv0G,EAAM,GACV,OAAO,IAAItiE,SAAQ,SAAU4pB,GAC3BvL,EAAY7H,aAAapQ,UAAY,SAAUoxK,GAC7C,IAAI1C,EAAS0C,EAAGr7J,OAAOzD,OACvB,GAAIo8J,EAAQ,CACV,IAAI4C,EAAS5C,EAAOl0K,MAChB82K,EAAOlsI,KAAOszH,GAChBx8F,EAAIzgE,KAAK61K,GAET5C,EAAiB,aAGjBkC,GAA2BC,GAC3BrtJ,EAAI04C,GAER,MACE14C,EAAI04C,EAER,CACF,GACF,CAESq1G,CAAe/B,EAAapmK,GAAIomK,EAAa3gJ,QAAQqhJ,IAAI3X,KAAKj4J,MAAK,SAAUkxK,GAClF,OA1CG,SAA4BhC,EAActsE,GAC/C,GAAIssE,EAAa3pJ,OACf,OAAOjsB,QAAQqH,QAAQ,IAEzB,IACIgX,EADKu3J,EAAapmK,GAAG6N,YAAYw5J,GAAiB,YAAaC,IAC9Cz4J,YAAYw4J,IACjC,OAAO72K,QAAQoL,IAAIk+F,EAAI9mG,KAAI,SAAU8F,GACnC,IAAIuvK,EAAgBx5J,EAAoB,OAAE/V,GAC1C,OAAO,IAAItI,SAAQ,SAAU4pB,GAC3BiuJ,EAAczxK,UAAY,WACxB,OAAOwjB,GACT,CACF,GACF,IACF,CA4BWkuJ,CAAmBlC,EAAcgC,EAAOp1K,KAAI,SAAUu1K,GAC3D,OAAOA,EAAIzvK,EACb,IACF,GACF,CA2CA,SAAS0vK,GAAUn4H,GACbA,EAAM5zB,QACVgsJ,GAAgBp4H,GAAOn5C,MAAK,WAC1B,OAAOuuK,GAAMp1H,EAAM5qB,QAAQqhJ,IAAIC,iBACjC,IAAG7vK,MAAK,WACN,OAAOsxK,GAAUn4H,EACnB,GACF,CAWA,SAASo4H,GAAgBp4H,GAEvB,OAAIA,EAAM5zB,OAAe+oJ,GAGpBn1H,EAAM41H,iBACJyB,GAAsBr3H,EAAMrwC,GAAIqwC,EAAMs3H,cAAczwK,MAAK,SAAUwxK,GACxE,IAAIC,EAAcD,EAKdz1K,QAAO,SAAU21K,GACnB,QAASA,CACX,IAAG51K,KAAI,SAAU41K,GAIf,OAHIA,EAAO9vK,GAAKu3C,EAAMs3H,eACpBt3H,EAAMs3H,aAAeiB,EAAO9vK,IAEvB8vK,CACT,IAAG31K,QAAO,SAAU21K,GAClB,OA9BN,SAAwBA,EAAQv4H,GAC9B,OAAIu4H,EAAOC,OAASx4H,EAAMw4H,OACtBx4H,EAAMy4H,KAAKv1K,IAAIq1K,EAAO9vK,OACtB8vK,EAAO7pJ,KAAKid,KAAOqU,EAAM04H,qBAE/B,CAyBaC,CAAeJ,EAAQv4H,EAChC,IAAG/tC,MAAK,SAAU2mK,EAASC,GACzB,OAAOD,EAAQjtI,KAAOktI,EAAQltI,IAChC,IAOA,OANA2sI,EAAYp4K,SAAQ,SAAUq4K,GACxBv4H,EAAM41H,mBACR51H,EAAMy4H,KAAKhlK,IAAI8kK,EAAO9vK,IACtBu3C,EAAM41H,iBAAiB2C,EAAO7pJ,MAElC,IACOymJ,EACT,IA1BoCA,EA2BtC,CA2BO,IAAI2D,GAAkB,CAC3B53K,OAxHK,SAAgBw0K,EAAatgJ,GAElC,OADAA,EAAUkhJ,GAAwBlhJ,GA7K7B,SAAwBsgJ,GAC7B,IAAIqD,EAAY7B,KAGZ8B,EAASjC,GAAYrB,EAOrBuD,EAAcF,EAAUpoK,KAAKqoK,GAQjC,OAPAC,EAAY3yJ,gBAAkB,SAAUqxJ,GAC7BA,EAAGr7J,OAAOzD,OAChBkK,kBAAkBi0J,GAAiB,CACpChlK,QAAS,KACToO,eAAe,GAEnB,EACO,IAAIjgB,SAAQ,SAAU4pB,EAAK0tJ,GAChCwB,EAAYzyK,QAAU,SAAUmxK,GAC9B,OAAOF,EAAIE,EACb,EACAsB,EAAY1yK,UAAY,WACtBwjB,EAAIkvJ,EAAYpgK,OAClB,CACF,GACF,CAmJSqgK,CAAexD,GAAa7uK,MAAK,SAAU8I,GAChD,IAAIqwC,EAAQ,CACV5zB,QAAQ,EACRkrJ,aAAc,EACd5B,YAAaA,EACbtgJ,QAASA,EACTojJ,KAAMlD,KAMNmD,KAAM,IAAI5Z,GAA+B,EAAlBzpI,EAAQqhJ,IAAI3X,KAEnCqa,kBAAmBhE,GACnBS,iBAAkB,KAClBwD,kBAAmB,GACnBzpK,GAAIA,GAoBN,OAXAA,EAAGmX,QAAU,WACXk5B,EAAM5zB,QAAS,EACXgJ,EAAQqhJ,IAAI3vJ,SAASsO,EAAQqhJ,IAAI3vJ,SACvC,EAOAqxJ,GAAUn4H,GACHA,CACT,GACF,EAgFEvvC,MA5BK,SAAeslK,GACpBA,EAAa3pJ,QAAS,EACtB2pJ,EAAapmK,GAAGc,OAClB,EA0BEulK,UAdK,SAAmBD,EAAc9zJ,EAAI0pB,GAC1CoqI,EAAa2C,qBAAuB/sI,EACpCoqI,EAAaH,iBAAmB3zJ,EAChCm2J,GAAgBrC,EAClB,EAWEnnJ,YA1BK,SAAqBmnJ,EAAcE,GASxC,OARAF,EAAaoD,kBAAoBpD,EAAaoD,kBAAkBtyK,MAAK,WACnE,OA9OG,SAAsB8I,EAAI0pK,EAAYpD,GAC3C,IACIqD,EAAc,CAChBd,KAAMa,EACN1tI,KAHSrG,KAAKC,MAId7W,KAAMunJ,GAEJmB,EAAKznK,EAAG6N,YAAY,CAACw5J,IAAkB,YAAaC,IACxD,OAAO,IAAI92K,SAAQ,SAAU4pB,EAAK0tJ,GAChCL,EAAGr5J,WAAa,WACd,OAAOgM,GACT,EACAqtJ,EAAG5wK,QAAU,SAAUmxK,GACrB,OAAOF,EAAIE,EACb,EACkBP,EAAG54J,YAAYw4J,IACrBvjK,IAAI6lK,GAChBnC,GAA2BC,EAC7B,GACF,CA2NWmC,CAAaxD,EAAapmK,GAAIomK,EAAayC,KAAMvC,EAC1D,IAAGpvK,MAAK,WH3SH,IAAmB8R,EAAKqM,EG4SF,KH5SHrM,EG4SR,EH5SaqM,EG4SV,GH3SZtM,KAAK46C,MAAM56C,KAAK82B,UAAYxqB,EAAMrM,EAAM,GAAKA,KG6ShDi/J,GAAiB7B,EAErB,IACOA,EAAaoD,iBACtB,EAiBEjD,UAXK,WACL,QAASgB,IACX,EAUEjpK,KA9TgB,MA+ThBooK,oBAVK,SAA6BjhJ,GAClC,OAAsC,EAA/BA,EAAQqhJ,IAAIC,gBACrB,EASElB,aA7UwBG,ICEtB6D,GAAa,2BAOV,SAASC,KACd,IAAIC,EACJ,GAAsB,qBAAX/5K,OAAwB,OAAO,KAC1C,IACE+5K,EAAe/5K,OAAO+5K,aACtBA,EAAe/5K,OAAO,8BAAgCA,OAAO+5K,YAC/D,CAAE,MAAOv7K,IAGP,CAEF,OAAOu7K,CACT,CACO,SAASC,GAAWjE,GACzB,OAAO8D,GAAa9D,CACtB,CAmFO,SAASQ,KACd,IAAI0D,EAAKH,KACT,IAAKG,EAAI,OAAO,EAChB,IACE,IAAItoK,EAAM,2BACVsoK,EAAGC,QAAQvoK,EAAK,SAChBsoK,EAAGE,WAAWxoK,EAChB,CAAE,MAAOnT,IAIP,OAAO,CACT,CACA,OAAO,CACT,CAUO,IAAI47K,GAAqB,CAC9B74K,OA9DK,SAAgBw0K,EAAatgJ,GAElC,GADAA,EAAUkhJ,GAAwBlhJ,IAC7B8gJ,KACH,MAAM,IAAIv0K,MAAM,iDAElB,IAAI62K,EAAOlD,KAOPmD,EAAO,IAAI5Z,GAAazpI,EAAQuhJ,aAAaC,eAC7C52H,EAAQ,CACV01H,YAAaA,EACb8C,KAAMA,EACNC,KAAMA,GAYR,OATAz4H,EAAM7Q,SAhCD,SAAiCumI,EAAazzJ,GACnD,IAAI3Q,EAAMqoK,GAAWjE,GACjBvmI,EAAW,SAAkBwoI,GAC3BA,EAAGrmK,MAAQA,GACb2Q,EAAG9P,KAAKgkE,MAAMwhG,EAAGliF,UAErB,EAEA,OADA91F,OAAO6pB,iBAAiB,UAAW2lB,GAC5BA,CACT,CAuBmB6qI,CAAwBtE,GAAa,SAAU6C,GACzDv4H,EAAM41H,kBACP2C,EAAOC,OAASA,GACfD,EAAOn4D,QAASq4D,EAAKv1K,IAAIq1K,EAAOn4D,SACjCm4D,EAAO7pJ,KAAKid,MAAQ4sI,EAAO7pJ,KAAKid,KAAOqU,EAAM04H,uBAEjDD,EAAKhlK,IAAI8kK,EAAOn4D,OAChBpgE,EAAM41H,iBAAiB2C,EAAO7pJ,OAChC,IACOsxB,CACT,EAkCEvvC,MAjCK,SAAeslK,GAjCf,IAAoC5mI,IAkCd4mI,EAAa5mI,SAjCxCxvC,OAAO+8B,oBAAoB,UAAWyS,EAkCxC,EAgCE6mI,UA/BK,SAAmBD,EAAc9zJ,EAAI0pB,GAC1CoqI,EAAa2C,qBAAuB/sI,EACpCoqI,EAAaH,iBAAmB3zJ,CAClC,EA6BE2M,YAzGK,SAAqBmnJ,EAAcE,GACxC,OAAO,IAAI91K,SAAQ,SAAU4pB,GAC3BqrJ,KAAQvuK,MAAK,WACX,IAAIyK,EAAMqoK,GAAW5D,EAAaL,aAC9BuE,EAAW,CACb75D,MAAOk1D,KACP3pI,KAAMrG,KAAKC,MACX7W,KAAMunJ,EACNuC,KAAMzC,EAAayC,MAEjBz3K,EAAQoR,KAAKC,UAAU6nK,GAC3BR,KAAkBI,QAAQvoK,EAAKvQ,GAO/B,IAAI42K,EAAK3nJ,SAASkqJ,YAAY,SAC9BvC,EAAGwC,UAAU,WAAW,GAAM,GAC9BxC,EAAGrmK,IAAMA,EACTqmK,EAAGliF,SAAW10F,EACdpB,OAAOwuB,cAAcwpJ,GACrB5tJ,GACF,GACF,GACF,EAgFEmsJ,UAAWA,GACXjoK,KAtIgB,eAuIhBooK,oBAhBK,WACL,IACI51J,EAAYD,UAAUC,UAAU7F,cACpC,OAAI6F,EAAU5I,SAAS,YAAc4I,EAAU5I,SAAS,UAE/CuiK,IAJS,GAOpB,EASE5E,aA1IwBG,ICVfH,GAAeG,GAEtB0E,GAAoB,IAAIv3K,IA2CrB,IAAIw3K,GAAiB,CAC1Bp5K,OA3CK,SAAgBw0K,GACrB,IAAI11H,EAAQ,CACVrU,KAAM6pI,KACN7wK,KAAM+wK,EACNE,iBAAkB,MAGpB,OADAyE,GAAkB5mK,IAAIusC,GACfA,CACT,EAoCEvvC,MAnCK,SAAeslK,GACpBsE,GAA0B,OAAEtE,EAC9B,EAkCEC,UAZK,SAAmBD,EAAc9zJ,GACtC8zJ,EAAaH,iBAAmB3zJ,CAClC,EAWE2M,YAjCK,SAAqBmnJ,EAAcE,GACxC,OAAO,IAAI91K,SAAQ,SAAU4pB,GAC3B,OAAOjoB,YAAW,WACGtD,MAAMyC,KAAKo5K,IACjBn6K,SAAQ,SAAUq6K,GACzBA,EAAQ51K,OAASoxK,EAAapxK,MAElC41K,IAAYxE,GAEVwE,EAAQ3E,kBAEV2E,EAAQ5uI,KAAOsqI,EAAYtqI,MAEzB4uI,EAAQ3E,iBAAiBK,EAE7B,IACAlsJ,GACF,GAlB6B,EAmB/B,GACF,EAeEmsJ,UAXK,WACL,OAAO,CACT,EAUEjoK,KAlDgB,WAmDhBooK,oBAVK,WACL,OA5B+B,CA6BjC,EASEb,aAAcA,IC/CZgF,GAAU,CAAC/E,GAEfqD,GAAiBiB,ICDV,IAiFHU,GAjFOC,GAA0B,IAAI53K,IACrC63K,GAAS,EACFnsJ,GAAmB,SAA0B7pB,EAAMywB,GAE5Dh2B,KAAKqJ,GAAKkyK,KACVD,GAAwBjnK,IAAIrU,MAC5BA,KAAKuF,KAAOA,EACR81K,KACFrlJ,EAAUqlJ,IAEZr7K,KAAKg2B,QAAUkhJ,GAAwBlhJ,GACvCh2B,KAAKkgE,ODTA,SAAsBlqC,GAC3B,IAAIwlJ,EAAgB,GAAGr7K,OAAO61B,EAAQ2+H,QAASymB,IAAS53K,OAAO65D,SAK/D,GAAIrnC,EAAQnnB,KAAM,CAChB,GAAqB,aAAjBmnB,EAAQnnB,KAEV,OAAOqsK,GAET,IAAI73G,EAAMm4G,EAAczwJ,MAAK,SAAU7pB,GACrC,OAAOA,EAAE2N,OAASmnB,EAAQnnB,IAC5B,IACA,GAAKw0D,EAAwE,OAAOA,EAA1E,MAAM,IAAI9gE,MAAM,eAAiByzB,EAAQnnB,KAAO,aAC5D,CAMKmnB,EAAQohJ,mBACXoE,EAAgBA,EAAch4K,QAAO,SAAUtC,GAC7C,MAAkB,QAAXA,EAAE2N,IACX,KAEF,IAAI4sK,EAAYD,EAAczwJ,MAAK,SAAUm1C,GAC3C,OAAOA,EAAO42G,WAChB,IACA,GAAK2E,EAKH,OAAOA,EAJP,MAAM,IAAIl5K,MAAM,6BAA+BwQ,KAAKC,UAAUooK,GAAQ73K,KAAI,SAAUrC,GAClF,OAAOA,EAAE2N,IACX,KAIJ,CC3BgB6sK,CAAa17K,KAAKg2B,SAGhCh2B,KAAK27K,KAAM,EAOX37K,KAAK47K,MAAQ,KAKb57K,KAAK67K,OAAS,CACZr2K,QAAS,GACT8xJ,SAAU,IAQZt3J,KAAK87K,KAAO,IAAIp4K,IAOhB1D,KAAK+7K,MAAQ,GAKb/7K,KAAKg8K,OAAS,KA4IhB,SAAyBb,GACvB,IAAI5f,EAAe4f,EAAQj7G,OAAOp+D,OAAOq5K,EAAQ51K,KAAM41K,EAAQnlJ,SPlMvCg/B,EOmMVumG,EPlMPvmG,GAA2B,oBAAbA,EAAIvtD,MOmMvB0zK,EAAQa,OAASzgB,EACjBA,EAAa9zJ,MAAK,SAAU3I,GAK1Bq8K,EAAQhxK,OAASrL,CACnB,KAEAq8K,EAAQhxK,OAASoxJ,EP7Md,IAAmBvmG,CO+M1B,CAzJEinH,CAAgBj8K,KAClB,EAuHA,SAASk8K,GAAMC,EAAkBttK,EAAMiqK,GACrC,IACIK,EAAS,CACX5sI,KAFS4vI,EAAiBj8G,OAAOk2G,eAGjCvnK,KAAMA,EACNygB,KAAMwpJ,GAGR,OADmBqD,EAAiBH,OAASG,EAAiBH,OAASjG,IACnDtuK,MAAK,WACvB,IAAI20K,EAAcD,EAAiBj8G,OAAO1wC,YAAY2sJ,EAAiBhyK,OAAQgvK,GAO/E,OAJAgD,EAAiBL,KAAKznK,IAAI+nK,GAC1BA,EAAmB,QAAI30K,MAAK,WAC1B,OAAO00K,EAAiBL,KAAa,OAAEM,EACzC,IACOA,CACT,GACF,CAgBA,SAASC,GAAqBlB,GAC5B,OAAIA,EAAQU,OAAOr2K,QAAQ3F,OAAS,GAChCs7K,EAAQU,OAAOvkB,SAASz3J,OAAS,CAEvC,CACA,SAASy8K,GAAmBnB,EAAStsK,EAAMmmD,GACzCmmH,EAAQU,OAAOhtK,GAAMjM,KAAKoyD,GAS5B,SAAyBmmH,GACvB,IAAKA,EAAQQ,KAAOU,GAAqBlB,GAAU,CAGjD,IAAIoB,EAAa,SAAoBpD,GACnCgC,EAAQU,OAAO1C,EAAOtqK,MAAM/N,SAAQ,SAAU07K,GACxCrD,EAAO5sI,MAAQiwI,EAAejwI,MAChCiwI,EAAe35J,GAAGs2J,EAAO7pJ,KAE7B,GACF,EACIid,EAAO4uI,EAAQj7G,OAAOk2G,eACtB+E,EAAQa,OACVb,EAAQa,OAAOv0K,MAAK,WAClB0zK,EAAQQ,KAAM,EACdR,EAAQj7G,OAAO02G,UAAUuE,EAAQhxK,OAAQoyK,EAAYhwI,EACvD,KAEA4uI,EAAQQ,KAAM,EACdR,EAAQj7G,OAAO02G,UAAUuE,EAAQhxK,OAAQoyK,EAAYhwI,GAEzD,CACF,CA9BEkwI,CAAgBtB,EAClB,CACA,SAASuB,GAAsBvB,EAAStsK,EAAMmmD,GAC5CmmH,EAAQU,OAAOhtK,GAAQssK,EAAQU,OAAOhtK,GAAMrL,QAAO,SAAUvD,GAC3D,OAAOA,IAAM+0D,CACf,IA0BF,SAAwBmmH,GACtB,GAAIA,EAAQQ,MAAQU,GAAqBlB,GAAU,CAEjDA,EAAQQ,KAAM,EACd,IAAIpvI,EAAO4uI,EAAQj7G,OAAOk2G,eAC1B+E,EAAQj7G,OAAO02G,UAAUuE,EAAQhxK,OAAQ,KAAMoiC,EACjD,CACF,CAhCEowI,CAAexB,EACjB,CA9JA/rJ,GAAiB4nJ,SAAU,EA4B3B5nJ,GAAiB9vB,UAAY,CAC3BkwB,YAAa,SAAqBspJ,GAChC,GAAI94K,KAAKgtB,OACP,MAAM,IAAIzqB,MAAM,gFAMhBwQ,KAAKC,UAAU8lK,IAEjB,OAAOoD,GAAMl8K,KAAM,UAAW84K,EAChC,EACA8D,aAAc,SAAsB9D,GAClC,OAAOoD,GAAMl8K,KAAM,WAAY84K,EACjC,EACA,aAAIzpJ,CAAUxM,GACZ,IACIg6J,EAAY,CACdtwI,KAFSvsC,KAAKkgE,OAAOk2G,eAGrBvzJ,GAAIA,GAEN65J,GAAsB18K,KAAM,UAAWA,KAAK47K,OACxC/4J,GAAoB,oBAAPA,GACf7iB,KAAK47K,MAAQiB,EACbP,GAAmBt8K,KAAM,UAAW68K,IAEpC78K,KAAK47K,MAAQ,IAEjB,EACAxxJ,iBAAkB,SAA0Bvb,EAAMgU,GAMhDy5J,GAAmBt8K,KAAM6O,EAJT,CACd09B,KAFSvsC,KAAKkgE,OAAOk2G,eAGrBvzJ,GAAIA,GAGR,EACAya,oBAAqB,SAA6BzuB,EAAMgU,GAItD65J,GAAsB18K,KAAM6O,EAHlB7O,KAAK67K,OAAOhtK,GAAMkc,MAAK,SAAUiqC,GACzC,OAAOA,EAAInyC,KAAOA,CACpB,IAEF,EACAxR,MAAO,WACL,IAAImoD,EAAQx5D,KACZ,IAAIA,KAAKgtB,OAAT,CAGAsuJ,GAAgC,OAAEt7K,MAClCA,KAAKgtB,QAAS,EACd,IAAI8vJ,EAAe98K,KAAKg8K,OAASh8K,KAAKg8K,OAASjG,GAG/C,OAFA/1K,KAAK47K,MAAQ,KACb57K,KAAK67K,OAAOr2K,QAAU,GACfs3K,EAENr1K,MAAK,WACJ,OAAO1G,QAAQoL,IAAI/M,MAAMyC,KAAK23D,EAAMsiH,MACtC,IAECr0K,MAAK,WACJ,OAAO1G,QAAQoL,IAAIqtD,EAAMuiH,MAAMx4K,KAAI,SAAUsf,GAC3C,OAAOA,GACT,IACF,IAECpb,MAAK,WACJ,OAAO+xD,EAAM0G,OAAO7uD,MAAMmoD,EAAMrvD,OAClC,GApBA,CAqBF,EACA,QAAI0E,GACF,OAAO7O,KAAKkgE,OAAOrxD,IACrB,EACA,YAAIkuK,GACF,OAAO/8K,KAAKgtB,MACd,GCjIK,IAAMgwJ,GAOR,IAAI/xJ,IAqCF,SAASgyJ,GACZ54C,EACA64C,GAEA,IAAMt8H,EAAQo8H,GAA2Bx7K,IAAI6iI,GAC7C,GAAKzjF,EAIL,OADAA,EAAMrK,KAAKrhC,OAAOgoK,GACM,IAApBt8H,EAAMrK,KAAKlsB,MACX2yJ,GAA2B9nK,OAAOmvH,GAC3BzjF,EAAM7hB,GAAG1tB,cAFpB,CAIJ,CAGO,SAAS8rK,GACZC,EACAC,EACAvtI,EAKAwtI,GAEA,GAAKD,EAAuBrqB,cAA5B,CAMA,IAAMmpB,EAAmBmB,GAvDtB,SACHF,EACA/4C,EACA2B,EACAk3C,GAEA,IAAIt8H,EAAQo8H,GAA2Bx7K,IAAI6iI,GAc3C,OAbKzjF,IACDA,EAAQ,CAMJ7hB,GAAI,IAAI3P,GAAiB,CAAC,QAASguJ,EAAap3C,GAActgI,KAAK,MACnE6wC,KAAM,IAAI7yC,KAEds5K,GAA2Bv7K,IAAI4iI,EAAuBzjF,IAE1DA,EAAMrK,KAAKliC,IAAI6oK,GACRt8H,EAAM7hB,EACjB,CAoCQw+I,CACIH,EACAC,EAAuBh5C,sBACvBv0F,EAASk2F,aACTl2F,GAGF0tI,EAA4C,IAAIr9C,GAGhDs9C,EAAiB3E,IAEfA,EAAIsE,cAAgBA,GACpBtE,EAAI9yC,eAAiBq3C,EAAuBr3C,cAC5C8yC,EAAI/yC,iBAAmBs3C,EAAuBt3C,gBAC9C+yC,EAAI12J,UAAYi7J,EAAuBjtK,OAAOgS,SAE9Co7J,EAA2B94K,KAAKo0K,EAAInlB,UACxC,EAGJwoB,EAAiB/xJ,iBAAiB,UAAWqzJ,GAE7C,IAAMC,EAAmB5tI,EAASw3F,eAE9Bt6G,GAAS,EACPk/D,EAAMwxF,EAAiBrnK,WAAUs9I,IAC/B3mI,GAGJmvJ,EAAiB3sJ,YAAY,CACzB4tJ,YAAaA,EACbp3C,aAAcq3C,EAAuBr3C,aACrCD,eAAgBs3C,EAAuBt3C,eACvC3jH,QAASi7J,EAAuBjtK,OAAOgS,QACvCuxI,aACF,IAGN7jH,EAASw3F,aAAe,WACpB,OAAOk2C,EAA2B58C,eAAetsD,KCnHnD,eACJ,IAAAqpG,EAAA,GAAAljH,EAAA,EAAAA,EAAA76D,UAAAC,OAAA46D,IAAAkjH,EAAAljH,GAAA76D,UAAA66D,GAEA,OAAOgb,GAAK11E,WAAC,EAAD04D,EAAC,GAADD,EAAImlH,IAClB,CDgHYC,CAAUF,GAElB,EAEA,IAAMG,EAAW/tI,EAASz+B,MAAMrP,KAAK8tC,GACrCA,EAASz+B,MAAQqc,iBAUb,OATAV,GAAS,EACTk/D,EAAI33E,cACJ4nK,EAAiB7+I,oBAAoB,UAAWmgJ,GAC3CH,SACKL,GACFI,EAAuBh5C,sBACvBv0F,GAGD+tI,GACX,EAEA,IAAMC,EAAYhuI,EAASt3B,OAAOxW,KAAK8tC,GACvCA,EAASt3B,OAASkV,iBAUd,OATAV,GAAS,EACTk/D,EAAI33E,cACJ4nK,EAAiB7+I,oBAAoB,UAAWmgJ,GAC3CH,SACKL,GACFI,EAAuBh5C,sBACvBv0F,GAGDguI,GACX,CA7EA,CA8EJ,CE/IA,IAAIC,GAAa53I,KAEb63I,IAAqB,EAGZC,GAAsB,WAW/B,SAAAA,EACoB50E,EACA28B,EACAD,EACA31H,EACA01H,EACA9vG,EACAkoJ,EACAjrB,GAClB,KAbM9G,SAA4G,IAAIhsB,GAAS,KACjH49C,WAAaA,KAAY,KAIrB10E,QAAAA,EAAuB,KACvB28B,aAAAA,EAAoB,KACpBD,eAAAA,EAAsB,KACtB31H,OAAAA,EAAyD,KACzD01H,UAAAA,EAAgC,KAChC9vG,QAAAA,EAAgC,KAChCkoJ,SAAAA,EAAuB,KACvBjrB,QAAAA,EAEhBjzJ,KAAK+0H,YAAcM,GAA4Br1H,KAAKoQ,OAAO8G,WAC/D,CAAC,IAAAigH,EAAA8mD,EAAA3+K,UAuR+G,OAvR/G63H,EAEK8O,UAANv4G,eACIywJ,EACAlmI,GAEAmmI,GAAgBp+K,MAIXg+K,IAEIpM,GAAkBK,SACkB,kBAA9BL,GAAkBK,eAClB7S,GAAkBwS,GAAkBK,WAAaJ,IAG5D3hK,QAAQkB,KACJ,CACI,0EACA,kIACA,kIACA,oJACA,4CACA,8IACA,yEACF1L,KAAK,OAIXs4K,IAAqB,EAQzBG,EAAer9K,SAAQ+xJ,IAEnB,IACKA,EAAIjiI,SAASilG,MAEVg9B,EAAIrqF,WACHqqF,EAAIrqF,SAASqtD,KAGlB,MAAMvE,GAAW,MAAO,CAAE92D,KAAM,CAAEq4F,QACtC,IAGJ,IAAMjyG,QAAc5gD,KAAK8lI,UACnBziE,EAA6C,CAC/CpqD,MAAO,IASPjZ,KAAKizJ,UACLkrB,EAAiBA,EAAe56K,KAAIsvJ,IAChC,IAAMvpF,EAAMm8D,GAAqBotB,EAAIjiI,UACrC,MAAO,CACH43C,SAAUqqF,EAAIrqF,SACd53C,SAAU04C,EACb,KAKT,IACI+0G,EADEC,EAAyBH,EAAe56K,KAAI0hI,GAAYA,EAASr0G,SAAS5wB,KAAK+0H,eAgErF,SA9DMn0E,EAAM40H,QAAQp3J,YAChB,KACAwiC,EAAMk0H,WACNl0H,EAAM29H,uBACN7wJ,UACI,IAAM8wJ,EAAc,IAAIvzJ,WACY4pJ,GAAuB70K,KAAK8lI,UAAWw4C,IACrDx9K,SAAQ29K,IAC1B,IAAMn1G,EAAMm1G,EAIZ,OAHIn1G,GACAk1G,EAAY/8K,IAAK6nE,EAAYtpE,KAAK+0H,aAAczrD,GAE7CA,CAAG,IAGd+0G,EpICT,SACH55C,EACA1P,EAOA2pD,EAKAC,EACA1mI,EAKA2mI,EACAC,GA0CA,IAxCA,IAkCIC,EAlCEC,IAAmBt6C,EAAgBr0H,OAAOwlJ,YAC1CopB,EAAqD,GACrDC,EAAqD,GACrD/pG,EAA2C,GAE3Cy+E,EAA6E,CAC/EtqJ,GAFgBkqH,GAAkB,IAGlCm5B,OAAQ,GACRvlB,WAAY,KACZlvF,UACAsb,UAAWptB,KACXoxH,QAAS,GAEP2nB,EAAkBvrB,EAAUjH,OAE5ByyB,EAKA,GACAC,EAIA,GACAC,EAKA,GAEAC,EAAcZ,EAASr0J,KAAO,EAM9Bk1J,EAAYZ,EAAc9+K,OAAO4xK,EAAA,WAEnC,IAaI+N,EAbEv6C,EAAW05C,EAAcc,GAGzB7uJ,EAAWq0G,EAASr0G,SACpB43C,EAAWy8D,EAASz8D,SACpBigE,EAAQ73G,EAASmkG,GACjB2qD,EAAkB9uJ,EAASolG,SAC3B2pD,EAAkBn3G,GAAYA,EAASwtD,SAEzC2Q,OAAsDzzE,EAM1D,GALIosH,IACA34C,EAAe+3C,EAASl9K,IAAIinI,IAI3B9B,EAwDE,CAEH,IAAMi5C,EAAkBj5C,EAAa9Q,KAKrC,IAESrtD,GAGCA,GACFo3G,IAAYp3G,EAASqtD,KAE3B,CAEE,IAAM7kE,EAAsC,CACxCw7E,SAAS,EACTz/H,OAAQ,IACR23H,WAAY+D,EACZxD,SAAUA,EACV0B,gBAEa,OAAjBzxD,EAAOtyE,KAAKouD,GAAK,CAErB,CAIA,IAAM6uH,EAA+Cd,EAAiB/5C,GAA4BC,GAAYA,EAC1G85C,IACIW,EAIIl3G,GACAvpE,OACKyB,KAAK8nE,EAASutD,cACdj1H,SAAQskI,IACLg6C,EAAkBx8K,KAAK,CACnB8hI,WAAY+D,EACZrD,eACA78H,OAAQm6H,GAAel6D,GAAUutD,aAAaqP,GAAc78H,QAC9D,KAKdtJ,OACKunB,QAAQoK,EAASmlG,cACjBhrG,MAAKwtD,IAAoC,IAAlC6sD,EAAcC,GAAe9sD,EAejC,OAd+B/P,EAAWA,EAASutD,aAAaqP,QAAgBlyE,IAG1EmyE,EAAyC/1G,OAE3CkwJ,EAAkB,CACd96C,WAAY+D,EACZ9B,aAAcA,EACd6F,SAAS,EACTz/H,OAAQ,IACRk4H,WACAG,kBAGD,CAAI,IAEdo6C,GACDvgL,OACKunB,QAAQoK,EAASmlG,cACjBj1H,SAAQ23E,IAAoC,IAAlC2sD,EAAcC,GAAe5sD,EACpC,IAAMqnG,EAAyBt3G,EAAWA,EAASutD,aAAaqP,QAAgBlyE,EAChF,GAAK4sH,EAOE,CACH,IAAMC,EAAYF,EAAWjvJ,SAASmlG,aAAaqP,GAAc78H,OAE5D88H,EAAyC/1G,MAK1CwwJ,EAAuBv3K,SAAWw3K,GAElCV,EAAkBz8K,KAAK,CACnB8hI,WAAY+D,EACZrD,eACAC,eAAgBA,EAChB98H,OAAQ88H,EAAe98H,QAGnC,MAvBI42K,EAAev8K,KAAK,CAChB8hI,WAAY+D,EACZrD,eACAC,eAAgBA,EAChB98H,OAAQ88H,EAAe98H,QAmB/B,MAMhBi3K,EACAtqG,EAAOtyE,KAAK48K,IAERT,GACAE,EAAer8K,KAAKoiI,GAA4B66C,IAC5ChB,GACAA,EAASjuJ,KAGbquJ,EAAer8K,KAAKi9K,GAChBhB,GACAA,EAASjuJ,IAGjBkuJ,EAAYe,GAGhB,IAAIG,EAA2D,KAC3DC,EAAmE,KACnEh/G,EAA4C,KAEhD,GAAI0+G,IAAoBD,EACpBz+G,EAAY,SACZ++G,EAAoBjB,EAAiB75C,GAAiCt0G,GAAYA,OAC/E,IAAI43C,GAAam3G,GAAoBD,EAIrC,KAAIA,EAKP,MAAMpuD,GAAW,MAAO,CAAE92D,KAAM,CAAEyqE,cAJlChkE,EAAY,SACZ++G,EAAoBt9C,GAAe9xG,GACnCqvJ,EAA4Bz3G,CAGhC,MATIvH,EAAY,SACZ++G,EAAoBjB,EAAiB75C,GAAiCt0G,GAAYA,EAClFqvJ,EAA4Bz3G,EAShC,IAAM03G,EAAQ,CACVx7C,WAAY+D,EACZxT,aAAc+qD,EACdr1C,qBAAsBs1C,EACtBh/G,UAAWA,GAEfi+G,EAAgBt8K,KAAKs9K,EACzB,KA1MmB,CAKf,IAAMC,IAAoBT,EA0C1B,GAzCIX,GACA9/K,OACKunB,QAAQoK,EAASmlG,cACjBj1H,SAAQ4rE,IAAoC,IAAlC04D,EAAcC,GAAe34D,EAE9B24D,EAAyC/1G,KAW3C6vJ,EAAev8K,KAAK,CAChB8hI,WAAY+D,EACZrD,eACAC,eAAgBA,EAChB98H,OAAQ88H,EAAe98H,UAb3Bi3K,EAAkB,CACd96C,WAAY+D,EACZ+D,SAAS,EACTz/H,OAAQ,IACRk4H,WACAG,gBAEJlwD,EAAOtyE,KAAK48K,GAQhB,IAGPA,IACGT,GACAC,EAAep8K,KAAKoiI,GAA4BC,IAC5C25C,GACAA,EAAShuJ,KAGbouJ,EAAep8K,KAAKqiI,GAChB25C,GACAA,EAAShuJ,IAIjBkuJ,EAAY75C,IAGXk7C,EAAmB,CACpB,IAAMzzI,EAAQ,CACVg4F,WAAY+D,EACZxnE,UAAW,SACXg0D,aAAc8pD,EAAiB75C,GAAiCt0G,GAAYA,EAC5E+5G,qBAAsBo0C,GAAkBv2G,EAAW08D,GAAiC18D,GAAYA,GAEpG02G,EAAgBt8K,KAAK8pC,EACzB,CACJ,CAmJJ,EA3NS+yI,EAAQ,EAAGA,EAAQF,EAAWE,IAAOhO,IA6N9C,MAAO,CACHuN,iBACAC,iBACAH,YACA5pG,SACAy+E,YACAwrB,iBACAC,oBACAC,oBAER,CoIvS8Be,CACVpgL,KACAA,KAAK+0H,YACLypD,EACAL,EACAlmI,GAEJorB,EAAIpqD,MAAQolK,EAAYnpG,OAMxB,IAAIqsF,EAAqB,GACzB8c,EAAYW,eAAel+K,SAAQ+xJ,IAC/B0O,EAAY3+J,KAAKiwJ,EAAIjiI,SAAS,IAElCytJ,EAAYY,eAAen+K,SAAQ+xJ,IAC/B0O,EAAY3+J,KAAKiwJ,EAAIjiI,SAAS,KAElC2wI,EAAcA,EAAYh+J,KAAIpB,GAAKmyK,GAAmB1zH,EAAM2zH,eAAgBpyK,MAC5DtC,OAAS,SACf+gD,EAAMk0H,WAAWn/J,QAAQ4rJ,GAInC,IAAM8e,EAAiD,GACvDhC,EAAYc,eAAer+K,SAAQw/K,IAC/BD,EAAez9K,KAAK,CAChByG,GAAI0rK,GAAmBuL,EAAW57C,WAAY47C,EAAWl7C,cACzD91G,KAAMgxJ,EAAWj7C,eAAe/1G,MAClC,IAEN+uJ,EAAYgB,kBAAkBv+K,SAAQw/K,IAClCD,EAAez9K,KAAK,CAChByG,GAAI0rK,GAAmBuL,EAAW57C,WAAY47C,EAAWl7C,cACzD91G,KAAMgxJ,EAAWj7C,eAAe/1G,MAClC,UAEAsxB,EAAM29H,sBAAsB5oK,QAAQ0qK,SACpCz/H,EAAM29H,sBAAsBpoK,WAC9BkoK,EAAYe,kBAAkB77K,KAAI+8K,GAAcvL,GAAmBuL,EAAW57C,WAAY47C,EAAWl7C,gBACxG,KAITi5C,EAAc37C,GAAe27C,IACb1qB,UAAUjH,OAAO7sJ,OAAS,EAAG,CACzC,IAAM0gL,EAAY79C,GAAe27C,EAAYS,WAAWluJ,SACxDytJ,EAAY1qB,UAAUxsB,WAAa,CAC/B99H,GAAIk3K,EAAUvgL,KAAK+0H,aACnBL,IAAK6rD,EAAUtqD,MAAMvB,KAEzB2pD,EAAY1qB,UAAU4D,QAAUpxH,KAChCnmC,KAAKmsJ,SAASznJ,KAAK25K,EAAY1qB,UACnC,CAEA,OAAOtwF,CACX,EAAC8zD,EAEKwN,kBAANj3G,eACI28E,EACA28B,GAEAo3C,GAAgBp+K,MAChB,IAAM4gD,QAAc5gD,KAAK8lI,UACnBziE,EAAmC,GAgBzC,aAdMziB,EAAM40H,QAAQp3J,YAChB,IACAwiC,EAAMk0H,YACNpnJ,iBAC2BmnJ,GAAuB70K,KAAK8lI,UAAWz7B,IACrDvpG,SAAQ6lI,KAETA,GACEA,EAAa3Q,WAAYgR,GAE3B3jE,EAAIzgE,KAAK+jI,EACb,GACF,IAEHtjE,CACX,EAAC8zD,EAEDx/G,MAAA,SAAMovH,GAEF,OADAq3C,GAAgBp+K,MACTq1K,GACHr1K,KACA+mI,EAER,EAAC5P,EACK3jH,MAANka,eACIq5G,GAEA,GAAIA,EAAc4M,UAAUE,yBAA0B,CAClD,IAAMp6H,Qb/DXiU,eACHoiB,EACAi3F,GAEA,IAAMnmF,QAAc9Q,EAASg2F,UACvB6N,EAAY5M,EAAc4M,UAC1B8hC,EAA4B9hC,EAAUv8H,MAEtCm+J,EAAWH,GACbx0H,EAAM2zH,eACN5gC,EACC/yF,EAAM40H,QAAgB96J,SAASiH,aAEhCnO,GAAiB,EAwBrB,aAvBMotC,EAAM40H,QAAQp3J,YAChB,IACAwiC,EAAMk0H,YACNpnJ,UACI,IAGIgoJ,EAFEn1E,EADMo1E,EAAgBrlK,SACX8O,YAAYw0J,IAG7B8B,EAAY,IACRD,EACKlyK,KAAImlE,GAASyrG,GAA6BzrG,KAC1ChjE,KAAK,KACR,IAEN,IAAMixD,EADE4pC,EAAMnpF,MAAMs+J,GACEliK,MAAM+hK,GAC5B/hK,QAAc,IAAIzS,SAAgB,CAAC4pB,EAAK0tJ,KACpC1hH,EAAQxvD,UAAY,WAChBwjB,EAAIgsC,EAAQl9C,OAChB,EACAk9C,EAAQvvD,QAAW4pD,GAAaqnH,EAAIrnH,EAAI,GAC1C,IAGHx9C,CACX,CayBiCgtK,CAAWxgL,KAAM+mI,GACtC,MAAO,CACHvzH,MAAOiG,EACPwE,KAAM,OAEd,CAEI,MAAO,CACHzK,aAFiB6hK,GAAWr1K,KAAM+mI,IAEpBymB,UAAU3tJ,OACxBoe,KAAM,OAGlB,EAACk5G,EAEDmQ,aAAA,WAEI,OADA82C,GAAgBp+K,MACTA,KAAKmsJ,SAASvrB,cACzB,EAACzJ,EAEKj5D,QAANxwC,eAAc+yJ,GACVrC,GAAgBp+K,MAChB,IAAM4gD,QAAc5gD,KAAK8lI,UA6BzB,aA5BMllF,EAAM40H,QAAQp3J,YAChB,KACAwiC,EAAMk0H,YACNpnJ,UACI,IAAMgzJ,EAAkBv6I,KAAQs6I,EAI1BE,QAAiB//H,EAAMk0H,WACxB/iK,MAAM,aACNgK,MAAM2kK,GACN9sK,UACCgtK,EAAsB,GAC5BD,EAAS7/K,SAAQwoE,IACQ,MAAjBA,EAAI0sD,UACJ4qD,EAAUh+K,KAAK0mE,EAAItpE,KAAK+0H,aAC5B,UAEEn0E,EAAMk0H,WAAW3+J,WAAWyqK,EAAU,KAU7C,CACX,EAACzpD,EAEK8P,kBAANv5G,eAAwBg3G,EAAoBU,EAAsBy7C,GAC9DzC,GAAgBp+K,MAChB,IAAM4gD,QAAc5gD,KAAK8lI,UACnBz8H,EAAK0rK,GAAmBrwC,EAAYU,GAC1C,aAAaxkF,EAAM40H,QAAQp3J,YACvB,IACAwiC,EAAM29H,uBACN7wJ,UAEI,IAAM4yJ,QAAmB1/H,EAAM29H,sBAAsB/8K,IAAI6H,GACzD,GAAIi3K,EACA,OAAOA,EAAWhxJ,KAElB,MAAM,IAAI/sB,MAAM,kCAAoCmiI,EAAa,kBAAoBU,EACzF,GAEZ,EAACjO,EAEK3+G,OAANkV,iBACI0wJ,GAAgBp+K,MAChB,IAAM4gD,QAAc5gD,KAAK8lI,UAEzB,aADMllF,EAAMk0H,WAAW3/J,QAChBnV,KAAKqR,OAChB,EAAC8lH,EAGD9lH,MAAA,WACI,OAAIrR,KAAKgtB,SAGThtB,KAAKgtB,OAAS,WACVhtB,KAAKmsJ,SAAS//H,iBdvRnBsB,eAA4BozJ,GAC/B,IAAMlgI,QAAckgI,EAEdpwB,EADYujB,GAAuBzyK,IAAIs/K,GACP,EACrB,IAAbpwB,GACA9vG,EAAM40H,QAAQnkK,QACd4iK,GAAuB/+J,OAAO4rK,IAE9B7M,GAAuBxyK,IAAIq/K,EAAcpwB,EAEjD,Cc8QkBqwB,CAAa/gL,KAAK8lI,UAC3B,EAHa,IAFH9lI,KAAKgtB,MAOpB,EAACmqG,EAEDoQ,uBAAA,WACI,OAAO,IAAIpH,EACf,EAAChJ,EACKqQ,6BAAN95G,eAAmCszJ,GAA4E,EAAC/C,CAAA,CA7SjF,GAkT5BvwJ,eAAeuzJ,GAClB53E,EACA63E,EACAhD,GAEA,IAAMp4C,EdvVH,SACHE,EACAD,EACAm4C,EACA9tK,GAEA,IAAM+wK,EAAc,cAAgBn7C,EAAe,KAAO51H,EAAOgS,QAAU,KAAO2jH,EAE5EnlF,EAAQyiF,GACV2wC,GACAmN,GACA,KACI,IAAMx/K,EAAQ,WAMV,IAAMy/K,EAAcryD,GAAUmvD,GAC9BkD,EAAYxvK,UAAW,EACvB,IAAM4jK,EAAU,IAAI7lJ,GAAMwxJ,EAAaC,GACjCC,EAAsB,CACxB,CAACzN,IAAwBe,GAAoBvkK,GAC7C,CAACyjK,IAA2B,iBAC5B,CAACC,IAA+B,MAMpC,OAHA0B,EAAQpzJ,QAAQ,GAAGkC,OAAO+8J,SACpB7L,EAAQjkK,OAEP,CACHikK,UACAV,WAAaU,EAAgB5B,IAC7B2K,sBAAwB/I,EAAgB1B,IACxCS,eAAgBS,GAAkB5kK,GAEzC,EAxBa,GA2Bd,OAFA4jK,GAAuBvyK,IAAI0/K,EAAavgI,GACxCqzH,GAAuBxyK,IAAIm/C,EAAO,GAC3Bj/C,CAAK,IAGpB,OAAOi/C,CACX,Cc4SsB0gI,CACdJ,EAAOl7C,aACPk7C,EAAOn7C,eACPm4C,EACAgD,EAAO9wK,QAGL0/B,EAAW,IAAImuI,GACjB50E,EACA63E,EAAOl7C,aACPk7C,EAAOn7C,eACPm7C,EAAO9wK,OACP01H,EACAo7C,EAAOlrJ,QACPkoJ,EACAgD,EAAOjuB,SASX,aANMkqB,GACFpJ,GACAmN,EACApxI,GAGG/uC,QAAQqH,QAAQ0nC,EAC3B,CAIA,SAASsuI,GACLtuI,GAEA,GAAIA,EAAS9iB,OACT,MAAM,IAAIzqB,MAAM,oCAAsCutC,EAASk2F,aAAe,IAAMl2F,EAASi2F,eAErG,CC3XO,IAAMw7C,GAAc,WAGvB,SAAAA,EACWrD,GACT,KAJK34K,KAAOwuK,GAAqB,KACnB5T,YAAcvE,GAAY,KAE/BsiB,SAAAA,CACP,CAOH,OAPIqD,EAAAjiL,UAEEyzJ,sBAAP,SACImuB,GAGA,OrI0uBD,SACHA,GAEA,GAAIA,EAAO9wK,OAAOslH,eACd,MAAMpE,GAAW,MAAO,CAAE92D,KAAM,CAAE0mH,YAEtC,IAW0BlsD,EAXRksD,EAAO9wK,QAaPwlH,WAAaZ,EAAWY,UAAU/1H,OAAS,GACxDm1H,EAAW4gC,aAAe5gC,EAAW4gC,YAAYhgC,UAblD,MAAMtE,GAAW,MAAO,CAAE92D,KAAM,CAAE0mH,YAUnC,IAAuBlsD,EAR1B,GACIksD,EAAO9wK,OAAOwlJ,aACdsrB,EAAO9wK,OAAOwlJ,YAAY4rB,YAE1B,MAAMlwD,GAAW,MAAO,CAAE92D,KAAM,CAAE0mH,WAE1C,CqI1vBQO,CAAwCP,GACjCD,GAA2BjhL,KAAMkhL,EAAQlhL,KAAKk+K,SACzD,EAACqD,CAAA,CAZsB,GAgBpB,SAASG,KAIZ,OADgB,IAAIH,GAFG3hL,UAAAC,OAAA,QAAAqzD,IAAAtzD,UAAA,GAAAA,UAAA,GAAG,CAAC,EAI/B,E5BQO,SAAqB+hL,GAIxB,GAHA1uD,GAAe,iBAAkB,CAAE0uD,SAAQC,QAAS9d,MAGhDA,GAAchgK,IAAI69K,GAAtB,CAKI,GAAI5d,GAAmBjgK,IAAI69K,EAAOp8K,MAC9B,MAAM+rH,GAAW,MAAO,CACpB/rH,KAAMo8K,EAAOp8K,KACbo8K,WAYZ,GARI7d,GAAczvJ,IAAIstK,GAClB5d,GAAmB1vJ,IAAIstK,EAAOp8K,OAO7Bo8K,EAAOzwD,KACR,MAAMK,GAAe,MAAO,CACxBowD,WAIJA,EAAO/mF,MACP+mF,EAAO/mF,OAIP+mF,EAAOE,YACP5iL,OACKunB,QAAQm7J,EAAOE,YACf/gL,SAAQ4rE,IAAiB,IAAfnnE,EAAM4tH,GAAIzmD,EACjB,OAAQymD,EAAYqwC,GAAWj+J,GAAM,IAI7Co8K,EAAOtxD,cACPpxH,OAAOS,OACH2wH,GACAsxD,EAAOtxD,cAIXsxD,EAAOzrB,OACPj3J,OACKunB,QAAQm7J,EAAOzrB,OACfp1J,SAAQy3E,IAAsB,IAApBhzE,EAAMu8K,GAASvpG,EAClBupG,EAASxP,OACT5gD,GAAMnsH,GAAM3C,KAAKk/K,EAASxP,OAE1BwP,EAASxO,QACT5hD,GAAMnsH,GAAM2rC,QAAQ4wI,EAASxO,OACjC,GAzCZ,CA4CJ,C6B3GAyO,CAAY1P,IAEZ,MAAM2P,GAAa,CACf5/J,QAAS,EACTlL,WAAY,KACZrI,KAAM,SACN49D,WAAY,CACRpjE,GAAI,CACAwF,KAAM,SACN2iJ,UAAW,KAEfjsJ,KAAM,CACFsJ,KAAM,UAEVlK,KAAM,CACFkK,KAAM,WAEV8sI,UAAW,CACP9sI,KAAM,SACNw0I,OAAQ,cAGhB1tB,SAAU,CAAC,KAAM,OAAQ,OAAQ,cCyErC,GA/FiBssD,KACf,MAAOC,EAAOC,IAAY9iI,EAAAA,EAAAA,UAAS,KAC5B95C,EAAM68K,IAAW/iI,EAAAA,EAAAA,UAAS,KAC1B9uC,EAAI8xK,IAAShjI,EAAAA,EAAAA,UAAS,OAE7BP,EAAAA,EAAAA,YAAU,KACmBpxB,WACzB,MAAMk4G,ODkBWl4G,WACnB,MAAMnd,QAAWshH,GAAiB,CAC9BtsH,KAAM,aACN8jG,QAASq4E,KACTpe,iBAAiB,IASrB,aANM/yJ,EAAG4wJ,eAAe,CACpB+gB,MAAO,CACH9xK,OAAQ4xK,MAITzxK,CAAE,EC/BgBupK,GACvBuI,EAAMz8C,GACN,MAAM08C,QAAkB18C,EAASs8C,MAAMn3J,OAAOxE,OAC9C47J,EAASG,EAAU,EAErBC,EAAoB,GACnB,IAEH,MA4BMC,EAAa90J,UACjB,GAAInd,EAAI,CACN,MAAMkyK,QAAalyK,EAAG2xK,MAAMh3C,QAAQ7hI,GAAIkd,aAClCk8J,EAAKp2C,MAAM,CACf1nI,MAAO89K,EAAK99K,OAEd,MAAM+9K,QAAqBnyK,EAAG2xK,MAAMn3J,OAAOxE,OAC3Cm8J,EAAa7vK,MAAK,CAAChS,EAAGuB,IAChBvB,EAAE8D,OAASvC,EAAEuC,KAAa,GACzB9D,EAAE8D,MAAQvC,EAAEuC,MAAc,EACxB,IAETw9K,EAASO,EACX,GAGF,OACE30D,EAAAA,GAAAA,MAAA,OAAKvJ,UAAU,YAAWluF,SAAA,EACxBw3F,EAAAA,GAAAA,KAAA,MAAAx3F,SAAI,8BACJy3F,EAAAA,GAAAA,MAAA,OAAKvJ,UAAU,WAAUluF,SAAA,EACvBw3F,EAAAA,GAAAA,KAAA,SACEj/G,KAAK,OACL8zK,YAAY,aACZhhL,MAAO4D,EACPq9K,SAAW7jL,GAAMqjL,EAAQrjL,EAAEme,OAAOvb,UACpCmsH,EAAAA,GAAAA,KAAA,UAAQ5nE,QArDEx4B,UACd,GAAKnoB,EAAK0e,QAIV,GAAI1T,EAAI,CACR,MAAMlH,EAAK64K,EAAMriL,OAAS,QAClB0Q,EAAG2xK,MAAMnqB,OAAO,CACpB1uJ,GAAIA,EAAGpF,WACPsB,OACAZ,MAAM,EACNg3I,WAAW,IAAIz1G,MAAO2wG,gBAExB,MAAMgsC,QAAiBtyK,EAAG2xK,MAAMn3J,OAAOxE,OACvC47J,EAASU,GACTT,EAAQ,GACV,OAdEU,MAAM,kCAcR,EAqC6BxsJ,SAAC,iBAE5Bw3F,EAAAA,GAAAA,KAAA,OAAAx3F,SACG4rJ,EAAM3+K,KAAKk/K,IACV10D,EAAAA,GAAAA,MAAA,MAAkBvJ,UAAU,YAAWluF,SAAA,EACrCw3F,EAAAA,GAAAA,KAAA,QACEtJ,UAAWi+D,EAAK99K,KAAO,iBAAmB,YAC1CuhD,QAASA,IAAMs8H,EAAWC,EAAKp5K,IAAIitB,SAClCmsJ,EAAKl9K,QAERwoH,EAAAA,GAAAA,MAAA,OAAKvJ,UAAU,eAAcluF,SAAA,EAC3Bw3F,EAAAA,GAAAA,KAAA,UACEtJ,UAAU,aACVt+D,QAASA,IA/CJx4B,WACjB,GAAInd,EAAI,CACN,MAAMkyK,QAAalyK,EAAG2xK,MAAMh3C,QAAQ7hI,GAAIkd,aAClCk8J,EAAKjqK,SACX,MAAMqqK,QAAiBtyK,EAAG2xK,MAAMn3J,OAAOxE,OACvC47J,EAASU,EACX,GAyC2BE,CAAWN,EAAKp5K,IAAIitB,SAAC,YAGtCw3F,EAAAA,GAAAA,KAAA,UAAQtJ,UAAU,WAAWt+D,QAASA,IAAMs8H,EAAWC,EAAKp5K,IAAIitB,SAC7DmsJ,EAAK99K,KAAO,OAAS,cAbnB89K,EAAKp5K,UAmBd,ECvDV,GAjCY25K,KACV,MAAOC,EAAWC,IAAgB7jI,EAAAA,EAAAA,UAAS,QAa3C,OACEyuE,EAAAA,GAAAA,KAAC7xD,EAAc,CAACC,OAAQA,GAAO5lC,UAC/By3F,EAAAA,GAAAA,MAAA,OAAKvJ,UAAU,MAAKluF,SAAA,EAClBy3F,EAAAA,GAAAA,MAAA,OAAKvJ,UAAU,OAAMluF,SAAA,EACnBw3F,EAAAA,GAAAA,KAAA,OAAKtJ,UAAS,OAAArkH,OAAuB,SAAd8iL,EAAuB,SAAW,IAAM/8H,QAASA,IAAMg9H,EAAa,QAAQ5sJ,SAAC,WAGpGw3F,EAAAA,GAAAA,KAAA,OAAKtJ,UAAS,OAAArkH,OAAuB,SAAd8iL,EAAuB,SAAW,IAAM/8H,QAASA,IAAMg9H,EAAa,QAAQ5sJ,SAAC,cAItGw3F,EAAAA,GAAAA,KAAA,OAAKtJ,UAAU,cAAaluF,SAtBP6sJ,MACvB,OAAQF,GACN,IAAK,OAIL,QACE,OAAOn1D,EAAAA,GAAAA,KAACs1D,GAAS,IAHnB,IAAK,OACH,OAAOt1D,EAAAA,GAAAA,KAACm0D,GAAQ,IAGpB,EAeKkB,SAGY,ECxBrB,GAZwBE,IAClBA,GAAeA,aAAuB9tH,UACxC,6BAAqB9tD,MAAKilE,IAAkD,IAAjD,OAAE42G,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAASh3G,EACpE42G,EAAOD,GACPE,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAQL,EAAY,GAExB,ECHWM,EAAAA,WAAoB/yJ,SAASgzJ,eAAe,SACpD9vJ,QACHg6F,EAAAA,GAAAA,KAAC9xD,EAAAA,WAAgB,CAAA1lC,UACfw3F,EAAAA,GAAAA,KAACk1D,GAAG,OAORa","sources":["../node_modules/dexie/dist/dexie.js","../node_modules/react-dom/cjs/react-dom.production.min.js","../node_modules/react-dom/client.js","../node_modules/react-dom/index.js","../node_modules/react/cjs/react-jsx-runtime.production.min.js","../node_modules/react/cjs/react.production.min.js","../node_modules/react/index.js","../node_modules/react/jsx-runtime.js","../node_modules/rehackt/index.js","../node_modules/scheduler/cjs/scheduler.production.min.js","../node_modules/scheduler/index.js","../webpack/bootstrap","../webpack/runtime/create fake namespace object","../webpack/runtime/define property getters","../webpack/runtime/ensure chunk","../webpack/runtime/get javascript chunk filename","../webpack/runtime/get mini-css chunk filename","../webpack/runtime/global","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/load script","../webpack/runtime/make namespace object","../webpack/runtime/publicPath","../webpack/runtime/jsonp chunk loading","../node_modules/tslib/tslib.es6.mjs","../node_modules/ts-invariant/src/invariant.ts","../node_modules/@apollo/src/version.ts","../node_modules/@apollo/src/utilities/globals/maybe.ts","../node_modules/@apollo/src/utilities/globals/global.ts","../node_modules/@apollo/src/utilities/common/makeUniqueId.ts","../node_modules/@apollo/src/utilities/common/stringifyForDisplay.ts","../node_modules/@apollo/src/utilities/globals/invariantWrappers.ts","../node_modules/@apollo/src/utilities/globals/index.ts","../node_modules/@apollo/src/utilities/common/canUse.ts","../node_modules/@apollo/src/react/context/ApolloContext.ts","../node_modules/@apollo/src/react/context/ApolloProvider.tsx","../node_modules/zen-observable-ts/module.js","../node_modules/@apollo/src/utilities/common/objects.ts","../node_modules/@apollo/src/utilities/graphql/fragments.ts","../node_modules/@wry/caches/src/weak.ts","../node_modules/@wry/caches/src/strong.ts","../node_modules/@apollo/src/utilities/caching/caches.ts","../node_modules/@apollo/src/utilities/caching/sizes.ts","../node_modules/@apollo/src/utilities/caching/getMemoryInternals.ts","../node_modules/@apollo/src/utilities/common/canonicalStringify.ts","../node_modules/@apollo/src/utilities/graphql/storeUtils.ts","../node_modules/@apollo/src/utilities/graphql/getFromAST.ts","../node_modules/@apollo/src/link/core/ApolloLink.ts","../node_modules/@apollo/src/link/utils/createOperation.ts","../node_modules/@apollo/src/link/utils/transformOperation.ts","../node_modules/@apollo/src/link/utils/validateOperation.ts","../node_modules/@apollo/src/link/core/execute.ts","../node_modules/graphql/jsutils/devAssert.mjs","../node_modules/graphql/jsutils/inspect.mjs","../node_modules/graphql/language/ast.mjs","../node_modules/graphql/language/kinds.mjs","../node_modules/graphql/language/visitor.mjs","../node_modules/@apollo/src/utilities/graphql/directives.ts","../node_modules/@apollo/src/link/http/serializeFetchParameter.ts","../node_modules/@apollo/src/link/http/iterators/nodeStream.ts","../node_modules/@apollo/src/link/http/iterators/reader.ts","../node_modules/@apollo/src/link/http/responseIterator.ts","../node_modules/@apollo/src/link/http/iterators/async.ts","../node_modules/@apollo/src/link/http/iterators/promise.ts","../node_modules/@apollo/src/link/utils/throwServerError.ts","../node_modules/@apollo/src/errors/index.ts","../node_modules/@apollo/src/utilities/common/arrays.ts","../node_modules/@apollo/src/utilities/common/mergeDeep.ts","../node_modules/@apollo/src/utilities/common/incrementalResult.ts","../node_modules/@apollo/src/link/http/parseAndCheckHttpResponse.ts","../node_modules/graphql/language/characterClasses.mjs","../node_modules/graphql/language/blockString.mjs","../node_modules/graphql/language/printString.mjs","../node_modules/graphql/language/printer.mjs","../node_modules/@apollo/src/utilities/graphql/print.ts","../node_modules/@apollo/src/link/http/selectHttpOptionsAndBody.ts","../node_modules/@apollo/src/link/utils/fromError.ts","../node_modules/@apollo/src/utilities/graphql/transform.ts","../node_modules/@apollo/src/link/http/createHttpLink.ts","../node_modules/@apollo/src/link/http/checkFetcher.ts","../node_modules/@apollo/src/link/http/selectURI.ts","../node_modules/@apollo/src/link/utils/filterOperationVariables.ts","../node_modules/@apollo/src/link/http/rewriteURIForGET.ts","../node_modules/@apollo/src/link/http/HttpLink.ts","../node_modules/@wry/equality/src/index.ts","../node_modules/@wry/trie/src/index.ts","../node_modules/optimism/node_modules/@wry/trie/src/index.ts","../node_modules/@wry/context/src/slot.ts","../node_modules/@wry/context/src/index.ts","../node_modules/optimism/src/context.ts","../node_modules/optimism/src/helpers.ts","../node_modules/optimism/src/entry.ts","../node_modules/optimism/src/dep.ts","../node_modules/optimism/src/index.ts","../node_modules/@apollo/src/utilities/graphql/DocumentTransform.ts","../node_modules/@apollo/src/utilities/observables/asyncMap.ts","../node_modules/@apollo/src/utilities/common/errorHandling.ts","../node_modules/@apollo/src/utilities/observables/iteration.ts","../node_modules/@apollo/src/utilities/observables/subclassing.ts","../node_modules/@apollo/src/utilities/observables/Concast.ts","../node_modules/@apollo/src/core/networkStatus.ts","../node_modules/@apollo/src/utilities/common/compact.ts","../node_modules/@apollo/src/utilities/common/cloneDeep.ts","../node_modules/@apollo/src/core/equalByQuery.ts","../node_modules/@apollo/src/core/ObservableQuery.ts","../node_modules/graphql/language/predicates.mjs","../node_modules/@apollo/src/cache/inmemory/reactiveVars.ts","../node_modules/@apollo/src/core/LocalState.ts","../node_modules/@apollo/src/core/QueryInfo.ts","../node_modules/@apollo/src/core/QueryManager.ts","../node_modules/@apollo/src/utilities/common/mergeOptions.ts","../node_modules/@apollo/src/core/ApolloClient.ts","../node_modules/@apollo/src/cache/core/cache.ts","../node_modules/@apollo/src/cache/core/types/common.ts","../node_modules/@apollo/src/utilities/common/maybeDeepFreeze.ts","../node_modules/@apollo/src/cache/inmemory/helpers.ts","../node_modules/@apollo/src/cache/inmemory/entityStore.ts","../node_modules/@apollo/src/cache/inmemory/object-canon.ts","../node_modules/@apollo/src/cache/inmemory/readFromStore.ts","../node_modules/@apollo/src/cache/inmemory/key-extractor.ts","../node_modules/@apollo/src/cache/inmemory/policies.ts","../node_modules/@apollo/src/cache/inmemory/writeToStore.ts","../node_modules/@apollo/src/cache/inmemory/inMemoryCache.ts","graphql/apolloClient.js","../node_modules/@apollo/src/react/hooks/useSyncExternalStore.ts","../node_modules/@apollo/src/react/parser/index.ts","../node_modules/@apollo/src/react/hooks/useApolloClient.ts","../node_modules/@apollo/src/react/hooks/internal/wrapHook.ts","../node_modules/@apollo/src/react/hooks/useQuery.ts","../node_modules/graphql/jsutils/invariant.mjs","../node_modules/graphql/language/location.mjs","../node_modules/graphql/language/printLocation.mjs","../node_modules/graphql/error/GraphQLError.mjs","../node_modules/graphql/jsutils/isObjectLike.mjs","../node_modules/graphql/error/syntaxError.mjs","../node_modules/graphql/language/directiveLocation.mjs","../node_modules/graphql/language/tokenKind.mjs","../node_modules/graphql/language/lexer.mjs","../node_modules/graphql/jsutils/instanceOf.mjs","../node_modules/graphql/language/source.mjs","../node_modules/graphql/language/parser.mjs","../node_modules/graphql-tag/src/index.ts","graphql/queries.js","../node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js","graphql/Countries.jsx","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/rxdb/src/plugins/utils/utils-object-deep-equal.ts","../node_modules/rxdb/src/plugins/utils/utils-object.ts","../node_modules/rxdb/src/plugins/utils/utils-array.ts","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","../node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","../node_modules/@babel/runtime/helpers/esm/construct.js","../node_modules/rxdb/src/overwritable.ts","../node_modules/rxdb/src/rx-error.ts","../node_modules/rxdb/src/hooks.ts","../node_modules/rxdb/src/plugins/utils/utils-regex.ts","../node_modules/rxdb/src/plugins/utils/utils-string.ts","../node_modules/rxdb/src/plugins/utils/utils-object-dot-prop.ts","../node_modules/rxdb/src/plugins/utils/utils-document.ts","../node_modules/rxdb/src/rx-schema-helper.ts","../node_modules/rxdb/src/rx-schema.ts","../node_modules/rxjs/src/internal/util/isFunction.ts","../node_modules/rxjs/src/internal/util/lift.ts","../node_modules/rxjs/src/internal/util/createErrorClass.ts","../node_modules/rxjs/src/internal/util/UnsubscriptionError.ts","../node_modules/rxjs/src/internal/util/arrRemove.ts","../node_modules/rxjs/src/internal/Subscription.ts","../node_modules/rxjs/src/internal/config.ts","../node_modules/rxjs/src/internal/scheduler/timeoutProvider.ts","../node_modules/rxjs/src/internal/util/reportUnhandledError.ts","../node_modules/rxjs/src/internal/util/noop.ts","../node_modules/rxjs/src/internal/NotificationFactories.ts","../node_modules/rxjs/src/internal/util/errorContext.ts","../node_modules/rxjs/src/internal/Subscriber.ts","../node_modules/rxjs/src/internal/operators/OperatorSubscriber.ts","../node_modules/rxjs/src/internal/operators/map.ts","../node_modules/rxjs/src/internal/operators/filter.ts","../node_modules/rxjs/src/internal/util/isArrayLike.ts","../node_modules/rxjs/src/internal/util/isPromise.ts","../node_modules/rxjs/src/internal/symbol/observable.ts","../node_modules/rxjs/src/internal/util/identity.ts","../node_modules/rxjs/src/internal/util/pipe.ts","../node_modules/rxjs/src/internal/Observable.ts","../node_modules/rxjs/src/internal/util/isInteropObservable.ts","../node_modules/rxjs/src/internal/util/isAsyncIterable.ts","../node_modules/rxjs/src/internal/util/throwUnobservableError.ts","../node_modules/rxjs/src/internal/symbol/iterator.ts","../node_modules/rxjs/src/internal/util/isIterable.ts","../node_modules/rxjs/src/internal/util/isReadableStreamLike.ts","../node_modules/rxjs/src/internal/observable/innerFrom.ts","../node_modules/rxjs/src/internal/util/executeSchedule.ts","../node_modules/rxjs/src/internal/operators/mergeMap.ts","../node_modules/rxjs/src/internal/operators/mergeInternals.ts","../node_modules/rxjs/src/internal/operators/mergeAll.ts","../node_modules/rxjs/src/internal/util/args.ts","../node_modules/rxjs/src/internal/util/isScheduler.ts","../node_modules/rxjs/src/internal/operators/observeOn.ts","../node_modules/rxjs/src/internal/operators/subscribeOn.ts","../node_modules/rxjs/src/internal/scheduled/scheduleAsyncIterable.ts","../node_modules/rxjs/src/internal/scheduled/scheduled.ts","../node_modules/rxjs/src/internal/scheduled/scheduleObservable.ts","../node_modules/rxjs/src/internal/scheduled/scheduleArray.ts","../node_modules/rxjs/src/internal/scheduled/schedulePromise.ts","../node_modules/rxjs/src/internal/scheduled/scheduleIterable.ts","../node_modules/rxjs/src/internal/scheduled/scheduleReadableStreamLike.ts","../node_modules/rxjs/src/internal/observable/from.ts","../node_modules/rxjs/src/internal/observable/concat.ts","../node_modules/rxjs/src/internal/operators/concatAll.ts","../node_modules/rxjs/src/internal/operators/startWith.ts","../node_modules/rxjs/src/internal/operators/distinctUntilChanged.ts","../node_modules/rxjs/src/internal/util/ObjectUnsubscribedError.ts","../node_modules/rxjs/src/internal/Subject.ts","../node_modules/rxjs/src/internal/scheduler/dateTimestampProvider.ts","../node_modules/rxjs/src/internal/ReplaySubject.ts","../node_modules/rxjs/src/internal/operators/share.ts","../node_modules/rxjs/src/internal/operators/shareReplay.ts","../node_modules/rxdb/src/plugins/utils/utils-other.ts","../node_modules/rxdb/src/plugins/utils/utils-promise.ts","../node_modules/rxdb/src/plugins/utils/utils-map.ts","../node_modules/rxdb/src/plugins/utils/utils-error.ts","../node_modules/rxdb/src/plugins/utils/utils-time.ts","../node_modules/rxdb/src/plugins/utils/utils-revision.ts","../node_modules/rxdb/src/rx-storage-helper.ts","../node_modules/rxdb/src/incremental-write.ts","../node_modules/rxdb/src/rx-document.ts","../node_modules/rxdb/src/rx-change-event.ts","../node_modules/rxjs/src/internal/BehaviorSubject.ts","../node_modules/rxjs/src/internal/util/EmptyError.ts","../node_modules/rxjs/src/internal/observable/empty.ts","../node_modules/event-reduce-js/src/actions/action-functions.ts","../node_modules/array-push-at-sort-position/dist/esm/index.js","../node_modules/event-reduce-js/src/actions/index.ts","../node_modules/binary-decision-diagram/src/util.ts","../node_modules/binary-decision-diagram/src/minimal-string/string-format.ts","../node_modules/event-reduce-js/src/util.ts","../node_modules/event-reduce-js/src/states/state-resolver.ts","../node_modules/event-reduce-js/src/states/index.ts","../node_modules/event-reduce-js/src/bdd/bdd.generated.ts","../node_modules/binary-decision-diagram/src/minimal-string/minimal-string-to-simple-bdd.ts","../node_modules/binary-decision-diagram/src/minimal-string/resolve-with-simple-bdd.ts","../node_modules/event-reduce-js/src/index.ts","../node_modules/rxdb/src/query-planner.ts","../node_modules/mingo/dist/esm/types.js","../node_modules/mingo/dist/esm/util.js","../node_modules/mingo/dist/esm/core.js","../node_modules/mingo/dist/esm/lazy.js","../node_modules/mingo/dist/esm/aggregator.js","../node_modules/mingo/dist/esm/cursor.js","../node_modules/mingo/dist/esm/query.js","../node_modules/mingo/dist/esm/operators/window/_internal.js","../node_modules/mingo/dist/esm/operators/pipeline/group.js","../node_modules/mingo/dist/esm/operators/pipeline/sort.js","../node_modules/mingo/dist/esm/operators/pipeline/setWindowFields.js","../node_modules/mingo/dist/esm/operators/_predicates.js","../node_modules/mingo/dist/esm/operators/expression/array/nin.js","../node_modules/mingo/dist/esm/operators/expression/bitwise/_internal.js","../node_modules/mingo/dist/esm/operators/expression/bitwise/bitAnd.js","../node_modules/mingo/dist/esm/operators/expression/bitwise/bitOr.js","../node_modules/mingo/dist/esm/operators/expression/bitwise/bitXor.js","../node_modules/mingo/dist/esm/operators/expression/comparison/eq.js","../node_modules/mingo/dist/esm/operators/expression/comparison/gt.js","../node_modules/mingo/dist/esm/operators/expression/comparison/gte.js","../node_modules/mingo/dist/esm/operators/expression/comparison/lt.js","../node_modules/mingo/dist/esm/operators/expression/comparison/lte.js","../node_modules/mingo/dist/esm/operators/expression/comparison/ne.js","../node_modules/mingo/dist/esm/operators/expression/date/dateFromParts.js","../node_modules/mingo/dist/esm/operators/expression/date/dateFromString.js","../node_modules/mingo/dist/esm/operators/expression/string/substrBytes.js","../node_modules/mingo/dist/esm/operators/expression/trignometry/_internal.js","../node_modules/mingo/dist/esm/operators/expression/trignometry/acos.js","../node_modules/mingo/dist/esm/operators/expression/trignometry/acosh.js","../node_modules/mingo/dist/esm/operators/expression/trignometry/asin.js","../node_modules/mingo/dist/esm/operators/expression/trignometry/asinh.js","../node_modules/mingo/dist/esm/operators/expression/trignometry/atan.js","../node_modules/mingo/dist/esm/operators/expression/trignometry/atanh.js","../node_modules/mingo/dist/esm/operators/expression/trignometry/cos.js","../node_modules/mingo/dist/esm/operators/expression/trignometry/cosh.js","../node_modules/mingo/dist/esm/operators/expression/trignometry/degreesToRadians.js","../node_modules/mingo/dist/esm/operators/expression/trignometry/radiansToDegrees.js","../node_modules/mingo/dist/esm/operators/expression/trignometry/sin.js","../node_modules/mingo/dist/esm/operators/expression/trignometry/sinh.js","../node_modules/mingo/dist/esm/operators/expression/trignometry/tan.js","../node_modules/mingo/dist/esm/operators/expression/type/_internal.js","../node_modules/mingo/dist/esm/operators/expression/type/toBool.js","../node_modules/mingo/dist/esm/operators/pipeline/project.js","../node_modules/mingo/dist/esm/operators/pipeline/redact.js","../node_modules/mingo/dist/esm/operators/query/logical/and.js","../node_modules/mingo/dist/esm/operators/query/logical/or.js","../node_modules/mingo/dist/esm/operators/query/logical/nor.js","../node_modules/mingo/dist/esm/operators/query/logical/not.js","../node_modules/mingo/dist/esm/operators/query/comparison/eq.js","../node_modules/mingo/dist/esm/operators/query/comparison/gt.js","../node_modules/mingo/dist/esm/operators/query/comparison/gte.js","../node_modules/mingo/dist/esm/operators/query/comparison/in.js","../node_modules/mingo/dist/esm/operators/query/comparison/lt.js","../node_modules/mingo/dist/esm/operators/query/comparison/lte.js","../node_modules/mingo/dist/esm/operators/query/comparison/ne.js","../node_modules/mingo/dist/esm/operators/query/comparison/nin.js","../node_modules/mingo/dist/esm/operators/query/evaluation/mod.js","../node_modules/mingo/dist/esm/operators/query/evaluation/regex.js","../node_modules/mingo/dist/esm/operators/query/array/all.js","../node_modules/mingo/dist/esm/operators/query/array/elemMatch.js","../node_modules/mingo/dist/esm/operators/query/array/size.js","../node_modules/mingo/dist/esm/operators/query/element/exists.js","../node_modules/mingo/dist/esm/operators/query/element/type.js","../node_modules/rxdb/src/rx-query-mingo.ts","../node_modules/rxdb/src/rx-query-helper.ts","../node_modules/rxdb/src/event-reduce.ts","../node_modules/rxdb/src/query-cache.ts","../node_modules/rxdb/src/doc-cache.ts","../node_modules/rxdb/src/rx-query-single-result.ts","../node_modules/rxdb/src/rx-query.ts","../node_modules/rxjs/src/internal/firstValueFrom.ts","../node_modules/rxjs/src/internal/observable/merge.ts","../node_modules/rxdb/src/rx-database-internal-store.ts","../node_modules/rxdb/src/rx-collection-helper.ts","../node_modules/rxdb/src/change-event-buffer.ts","../node_modules/rxdb/src/rx-document-prototype-merge.ts","../node_modules/rxdb/src/replication-protocol/conflicts.ts","../node_modules/rxdb/src/rx-collection.ts","../node_modules/custom-idle-queue/dist/es/index.js","../node_modules/rxdb/src/plugins/utils/utils-rxdb-version.ts","../node_modules/ohash/dist/index.mjs","../node_modules/rxdb/src/plugins/utils/utils-hash.ts","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/oblivious-set/src/index.ts","../node_modules/rxdb/src/rx-database.ts","../node_modules/rxdb/src/plugin.ts","../node_modules/rxdb/src/plugins/dev-mode/error-messages.ts","../node_modules/rxdb/src/plugins/dev-mode/entity-properties.ts","../node_modules/rxdb/src/plugins/dev-mode/check-schema.ts","../node_modules/rxdb/src/plugins/dev-mode/check-orm.ts","../node_modules/rxdb/src/plugins/dev-mode/check-migration-strategies.ts","../node_modules/rxdb/src/plugins/dev-mode/unallowed-properties.ts","../node_modules/rxdb/src/plugins/dev-mode/check-query.ts","../node_modules/rxdb/src/plugins/dev-mode/check-document.ts","../node_modules/rxdb/src/plugins/utils/utils-global.ts","../node_modules/rxdb/src/plugins/dev-mode/dev-mode-tracking.ts","../node_modules/rxdb/src/plugins/dev-mode/index.ts","../node_modules/dexie/import-wrapper-prod.mjs","../node_modules/rxdb/src/plugins/storage-dexie/dexie-helper.ts","../node_modules/rxdb/src/plugins/storage-dexie/dexie-query.ts","../node_modules/rxjs/src/internal/util/argsOrArgArray.ts","../node_modules/rxjs/src/internal/operators/merge.ts","../node_modules/broadcast-channel/dist/esbrowser/util.js","../node_modules/broadcast-channel/dist/esbrowser/methods/native.js","../node_modules/broadcast-channel/dist/esbrowser/options.js","../node_modules/broadcast-channel/dist/esbrowser/methods/indexed-db.js","../node_modules/broadcast-channel/dist/esbrowser/methods/localstorage.js","../node_modules/broadcast-channel/dist/esbrowser/methods/simulate.js","../node_modules/broadcast-channel/dist/esbrowser/method-chooser.js","../node_modules/broadcast-channel/dist/esbrowser/broadcast-channel.js","../node_modules/rxdb/src/rx-storage-multiinstance.ts","../node_modules/rxjs/src/internal/operators/mergeWith.ts","../node_modules/rxdb/src/plugins/storage-dexie/rx-storage-instance-dexie.ts","../node_modules/rxdb/src/plugins/storage-dexie/rx-storage-dexie.ts","rxdb/dexie.js","rxdb/TodoList.jsx","App.jsx","reportWebVitals.js","index.js"],"sourcesContent":["/*\n * Dexie.js - a minimalistic wrapper for IndexedDB\n * ===============================================\n *\n * By David Fahlander, david.fahlander@gmail.com\n *\n * Version 4.0.7, Sun May 26 2024\n *\n * https://dexie.org\n *\n * Apache License Version 2.0, January 2004, http://www.apache.org/licenses/\n */\n \n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Dexie = factory());\n})(this, (function () { 'use strict';\n\n    /*! *****************************************************************************\n    Copyright (c) Microsoft Corporation.\n    Permission to use, copy, modify, and/or distribute this software for any\n    purpose with or without fee is hereby granted.\n    THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n    PERFORMANCE OF THIS SOFTWARE.\n    ***************************************************************************** */\n    var extendStatics = function(d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    function __extends(d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    }\n    var __assign = function() {\n        __assign = Object.assign || function __assign(t) {\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\n                s = arguments[i];\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n            }\n            return t;\n        };\n        return __assign.apply(this, arguments);\n    };\n    function __spreadArray(to, from, pack) {\n        if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n            if (ar || !(i in from)) {\n                if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n                ar[i] = from[i];\n            }\n        }\n        return to.concat(ar || Array.prototype.slice.call(from));\n    }\n\n    var _global = typeof globalThis !== 'undefined' ? globalThis :\n        typeof self !== 'undefined' ? self :\n            typeof window !== 'undefined' ? window :\n                global;\n\n    var keys = Object.keys;\n    var isArray = Array.isArray;\n    if (typeof Promise !== 'undefined' && !_global.Promise) {\n        _global.Promise = Promise;\n    }\n    function extend(obj, extension) {\n        if (typeof extension !== 'object')\n            return obj;\n        keys(extension).forEach(function (key) {\n            obj[key] = extension[key];\n        });\n        return obj;\n    }\n    var getProto = Object.getPrototypeOf;\n    var _hasOwn = {}.hasOwnProperty;\n    function hasOwn(obj, prop) {\n        return _hasOwn.call(obj, prop);\n    }\n    function props(proto, extension) {\n        if (typeof extension === 'function')\n            extension = extension(getProto(proto));\n        (typeof Reflect === \"undefined\" ? keys : Reflect.ownKeys)(extension).forEach(function (key) {\n            setProp(proto, key, extension[key]);\n        });\n    }\n    var defineProperty = Object.defineProperty;\n    function setProp(obj, prop, functionOrGetSet, options) {\n        defineProperty(obj, prop, extend(functionOrGetSet && hasOwn(functionOrGetSet, \"get\") && typeof functionOrGetSet.get === 'function' ?\n            { get: functionOrGetSet.get, set: functionOrGetSet.set, configurable: true } :\n            { value: functionOrGetSet, configurable: true, writable: true }, options));\n    }\n    function derive(Child) {\n        return {\n            from: function (Parent) {\n                Child.prototype = Object.create(Parent.prototype);\n                setProp(Child.prototype, \"constructor\", Child);\n                return {\n                    extend: props.bind(null, Child.prototype)\n                };\n            }\n        };\n    }\n    var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n    function getPropertyDescriptor(obj, prop) {\n        var pd = getOwnPropertyDescriptor(obj, prop);\n        var proto;\n        return pd || (proto = getProto(obj)) && getPropertyDescriptor(proto, prop);\n    }\n    var _slice = [].slice;\n    function slice(args, start, end) {\n        return _slice.call(args, start, end);\n    }\n    function override(origFunc, overridedFactory) {\n        return overridedFactory(origFunc);\n    }\n    function assert(b) {\n        if (!b)\n            throw new Error(\"Assertion Failed\");\n    }\n    function asap$1(fn) {\n        if (_global.setImmediate)\n            setImmediate(fn);\n        else\n            setTimeout(fn, 0);\n    }\n    function arrayToObject(array, extractor) {\n        return array.reduce(function (result, item, i) {\n            var nameAndValue = extractor(item, i);\n            if (nameAndValue)\n                result[nameAndValue[0]] = nameAndValue[1];\n            return result;\n        }, {});\n    }\n    function getByKeyPath(obj, keyPath) {\n        if (typeof keyPath === 'string' && hasOwn(obj, keyPath))\n            return obj[keyPath];\n        if (!keyPath)\n            return obj;\n        if (typeof keyPath !== 'string') {\n            var rv = [];\n            for (var i = 0, l = keyPath.length; i < l; ++i) {\n                var val = getByKeyPath(obj, keyPath[i]);\n                rv.push(val);\n            }\n            return rv;\n        }\n        var period = keyPath.indexOf('.');\n        if (period !== -1) {\n            var innerObj = obj[keyPath.substr(0, period)];\n            return innerObj == null ? undefined : getByKeyPath(innerObj, keyPath.substr(period + 1));\n        }\n        return undefined;\n    }\n    function setByKeyPath(obj, keyPath, value) {\n        if (!obj || keyPath === undefined)\n            return;\n        if ('isFrozen' in Object && Object.isFrozen(obj))\n            return;\n        if (typeof keyPath !== 'string' && 'length' in keyPath) {\n            assert(typeof value !== 'string' && 'length' in value);\n            for (var i = 0, l = keyPath.length; i < l; ++i) {\n                setByKeyPath(obj, keyPath[i], value[i]);\n            }\n        }\n        else {\n            var period = keyPath.indexOf('.');\n            if (period !== -1) {\n                var currentKeyPath = keyPath.substr(0, period);\n                var remainingKeyPath = keyPath.substr(period + 1);\n                if (remainingKeyPath === \"\")\n                    if (value === undefined) {\n                        if (isArray(obj) && !isNaN(parseInt(currentKeyPath)))\n                            obj.splice(currentKeyPath, 1);\n                        else\n                            delete obj[currentKeyPath];\n                    }\n                    else\n                        obj[currentKeyPath] = value;\n                else {\n                    var innerObj = obj[currentKeyPath];\n                    if (!innerObj || !hasOwn(obj, currentKeyPath))\n                        innerObj = (obj[currentKeyPath] = {});\n                    setByKeyPath(innerObj, remainingKeyPath, value);\n                }\n            }\n            else {\n                if (value === undefined) {\n                    if (isArray(obj) && !isNaN(parseInt(keyPath)))\n                        obj.splice(keyPath, 1);\n                    else\n                        delete obj[keyPath];\n                }\n                else\n                    obj[keyPath] = value;\n            }\n        }\n    }\n    function delByKeyPath(obj, keyPath) {\n        if (typeof keyPath === 'string')\n            setByKeyPath(obj, keyPath, undefined);\n        else if ('length' in keyPath)\n            [].map.call(keyPath, function (kp) {\n                setByKeyPath(obj, kp, undefined);\n            });\n    }\n    function shallowClone(obj) {\n        var rv = {};\n        for (var m in obj) {\n            if (hasOwn(obj, m))\n                rv[m] = obj[m];\n        }\n        return rv;\n    }\n    var concat = [].concat;\n    function flatten(a) {\n        return concat.apply([], a);\n    }\n    var intrinsicTypeNames = \"BigUint64Array,BigInt64Array,Array,Boolean,String,Date,RegExp,Blob,File,FileList,FileSystemFileHandle,FileSystemDirectoryHandle,ArrayBuffer,DataView,Uint8ClampedArray,ImageBitmap,ImageData,Map,Set,CryptoKey\"\n        .split(',').concat(flatten([8, 16, 32, 64].map(function (num) { return [\"Int\", \"Uint\", \"Float\"].map(function (t) { return t + num + \"Array\"; }); }))).filter(function (t) { return _global[t]; });\n    var intrinsicTypes = new Set(intrinsicTypeNames.map(function (t) { return _global[t]; }));\n    function cloneSimpleObjectTree(o) {\n        var rv = {};\n        for (var k in o)\n            if (hasOwn(o, k)) {\n                var v = o[k];\n                rv[k] = !v || typeof v !== 'object' || intrinsicTypes.has(v.constructor) ? v : cloneSimpleObjectTree(v);\n            }\n        return rv;\n    }\n    function objectIsEmpty(o) {\n        for (var k in o)\n            if (hasOwn(o, k))\n                return false;\n        return true;\n    }\n    var circularRefs = null;\n    function deepClone(any) {\n        circularRefs = new WeakMap();\n        var rv = innerDeepClone(any);\n        circularRefs = null;\n        return rv;\n    }\n    function innerDeepClone(x) {\n        if (!x || typeof x !== 'object')\n            return x;\n        var rv = circularRefs.get(x);\n        if (rv)\n            return rv;\n        if (isArray(x)) {\n            rv = [];\n            circularRefs.set(x, rv);\n            for (var i = 0, l = x.length; i < l; ++i) {\n                rv.push(innerDeepClone(x[i]));\n            }\n        }\n        else if (intrinsicTypes.has(x.constructor)) {\n            rv = x;\n        }\n        else {\n            var proto = getProto(x);\n            rv = proto === Object.prototype ? {} : Object.create(proto);\n            circularRefs.set(x, rv);\n            for (var prop in x) {\n                if (hasOwn(x, prop)) {\n                    rv[prop] = innerDeepClone(x[prop]);\n                }\n            }\n        }\n        return rv;\n    }\n    var toString = {}.toString;\n    function toStringTag(o) {\n        return toString.call(o).slice(8, -1);\n    }\n    var iteratorSymbol = typeof Symbol !== 'undefined' ?\n        Symbol.iterator :\n        '@@iterator';\n    var getIteratorOf = typeof iteratorSymbol === \"symbol\" ? function (x) {\n        var i;\n        return x != null && (i = x[iteratorSymbol]) && i.apply(x);\n    } : function () { return null; };\n    function delArrayItem(a, x) {\n        var i = a.indexOf(x);\n        if (i >= 0)\n            a.splice(i, 1);\n        return i >= 0;\n    }\n    var NO_CHAR_ARRAY = {};\n    function getArrayOf(arrayLike) {\n        var i, a, x, it;\n        if (arguments.length === 1) {\n            if (isArray(arrayLike))\n                return arrayLike.slice();\n            if (this === NO_CHAR_ARRAY && typeof arrayLike === 'string')\n                return [arrayLike];\n            if ((it = getIteratorOf(arrayLike))) {\n                a = [];\n                while ((x = it.next()), !x.done)\n                    a.push(x.value);\n                return a;\n            }\n            if (arrayLike == null)\n                return [arrayLike];\n            i = arrayLike.length;\n            if (typeof i === 'number') {\n                a = new Array(i);\n                while (i--)\n                    a[i] = arrayLike[i];\n                return a;\n            }\n            return [arrayLike];\n        }\n        i = arguments.length;\n        a = new Array(i);\n        while (i--)\n            a[i] = arguments[i];\n        return a;\n    }\n    var isAsyncFunction = typeof Symbol !== 'undefined'\n        ? function (fn) { return fn[Symbol.toStringTag] === 'AsyncFunction'; }\n        : function () { return false; };\n\n    var dexieErrorNames = [\n        'Modify',\n        'Bulk',\n        'OpenFailed',\n        'VersionChange',\n        'Schema',\n        'Upgrade',\n        'InvalidTable',\n        'MissingAPI',\n        'NoSuchDatabase',\n        'InvalidArgument',\n        'SubTransaction',\n        'Unsupported',\n        'Internal',\n        'DatabaseClosed',\n        'PrematureCommit',\n        'ForeignAwait'\n    ];\n    var idbDomErrorNames = [\n        'Unknown',\n        'Constraint',\n        'Data',\n        'TransactionInactive',\n        'ReadOnly',\n        'Version',\n        'NotFound',\n        'InvalidState',\n        'InvalidAccess',\n        'Abort',\n        'Timeout',\n        'QuotaExceeded',\n        'Syntax',\n        'DataClone'\n    ];\n    var errorList = dexieErrorNames.concat(idbDomErrorNames);\n    var defaultTexts = {\n        VersionChanged: \"Database version changed by other database connection\",\n        DatabaseClosed: \"Database has been closed\",\n        Abort: \"Transaction aborted\",\n        TransactionInactive: \"Transaction has already completed or failed\",\n        MissingAPI: \"IndexedDB API missing. Please visit https://tinyurl.com/y2uuvskb\"\n    };\n    function DexieError(name, msg) {\n        this.name = name;\n        this.message = msg;\n    }\n    derive(DexieError).from(Error).extend({\n        toString: function () { return this.name + \": \" + this.message; }\n    });\n    function getMultiErrorMessage(msg, failures) {\n        return msg + \". Errors: \" + Object.keys(failures)\n            .map(function (key) { return failures[key].toString(); })\n            .filter(function (v, i, s) { return s.indexOf(v) === i; })\n            .join('\\n');\n    }\n    function ModifyError(msg, failures, successCount, failedKeys) {\n        this.failures = failures;\n        this.failedKeys = failedKeys;\n        this.successCount = successCount;\n        this.message = getMultiErrorMessage(msg, failures);\n    }\n    derive(ModifyError).from(DexieError);\n    function BulkError(msg, failures) {\n        this.name = \"BulkError\";\n        this.failures = Object.keys(failures).map(function (pos) { return failures[pos]; });\n        this.failuresByPos = failures;\n        this.message = getMultiErrorMessage(msg, this.failures);\n    }\n    derive(BulkError).from(DexieError);\n    var errnames = errorList.reduce(function (obj, name) { return (obj[name] = name + \"Error\", obj); }, {});\n    var BaseException = DexieError;\n    var exceptions = errorList.reduce(function (obj, name) {\n        var fullName = name + \"Error\";\n        function DexieError(msgOrInner, inner) {\n            this.name = fullName;\n            if (!msgOrInner) {\n                this.message = defaultTexts[name] || fullName;\n                this.inner = null;\n            }\n            else if (typeof msgOrInner === 'string') {\n                this.message = \"\".concat(msgOrInner).concat(!inner ? '' : '\\n ' + inner);\n                this.inner = inner || null;\n            }\n            else if (typeof msgOrInner === 'object') {\n                this.message = \"\".concat(msgOrInner.name, \" \").concat(msgOrInner.message);\n                this.inner = msgOrInner;\n            }\n        }\n        derive(DexieError).from(BaseException);\n        obj[name] = DexieError;\n        return obj;\n    }, {});\n    exceptions.Syntax = SyntaxError;\n    exceptions.Type = TypeError;\n    exceptions.Range = RangeError;\n    var exceptionMap = idbDomErrorNames.reduce(function (obj, name) {\n        obj[name + \"Error\"] = exceptions[name];\n        return obj;\n    }, {});\n    function mapError(domError, message) {\n        if (!domError || domError instanceof DexieError || domError instanceof TypeError || domError instanceof SyntaxError || !domError.name || !exceptionMap[domError.name])\n            return domError;\n        var rv = new exceptionMap[domError.name](message || domError.message, domError);\n        if (\"stack\" in domError) {\n            setProp(rv, \"stack\", { get: function () {\n                    return this.inner.stack;\n                } });\n        }\n        return rv;\n    }\n    var fullNameExceptions = errorList.reduce(function (obj, name) {\n        if ([\"Syntax\", \"Type\", \"Range\"].indexOf(name) === -1)\n            obj[name + \"Error\"] = exceptions[name];\n        return obj;\n    }, {});\n    fullNameExceptions.ModifyError = ModifyError;\n    fullNameExceptions.DexieError = DexieError;\n    fullNameExceptions.BulkError = BulkError;\n\n    function nop() { }\n    function mirror(val) { return val; }\n    function pureFunctionChain(f1, f2) {\n        if (f1 == null || f1 === mirror)\n            return f2;\n        return function (val) {\n            return f2(f1(val));\n        };\n    }\n    function callBoth(on1, on2) {\n        return function () {\n            on1.apply(this, arguments);\n            on2.apply(this, arguments);\n        };\n    }\n    function hookCreatingChain(f1, f2) {\n        if (f1 === nop)\n            return f2;\n        return function () {\n            var res = f1.apply(this, arguments);\n            if (res !== undefined)\n                arguments[0] = res;\n            var onsuccess = this.onsuccess,\n            onerror = this.onerror;\n            this.onsuccess = null;\n            this.onerror = null;\n            var res2 = f2.apply(this, arguments);\n            if (onsuccess)\n                this.onsuccess = this.onsuccess ? callBoth(onsuccess, this.onsuccess) : onsuccess;\n            if (onerror)\n                this.onerror = this.onerror ? callBoth(onerror, this.onerror) : onerror;\n            return res2 !== undefined ? res2 : res;\n        };\n    }\n    function hookDeletingChain(f1, f2) {\n        if (f1 === nop)\n            return f2;\n        return function () {\n            f1.apply(this, arguments);\n            var onsuccess = this.onsuccess,\n            onerror = this.onerror;\n            this.onsuccess = this.onerror = null;\n            f2.apply(this, arguments);\n            if (onsuccess)\n                this.onsuccess = this.onsuccess ? callBoth(onsuccess, this.onsuccess) : onsuccess;\n            if (onerror)\n                this.onerror = this.onerror ? callBoth(onerror, this.onerror) : onerror;\n        };\n    }\n    function hookUpdatingChain(f1, f2) {\n        if (f1 === nop)\n            return f2;\n        return function (modifications) {\n            var res = f1.apply(this, arguments);\n            extend(modifications, res);\n            var onsuccess = this.onsuccess,\n            onerror = this.onerror;\n            this.onsuccess = null;\n            this.onerror = null;\n            var res2 = f2.apply(this, arguments);\n            if (onsuccess)\n                this.onsuccess = this.onsuccess ? callBoth(onsuccess, this.onsuccess) : onsuccess;\n            if (onerror)\n                this.onerror = this.onerror ? callBoth(onerror, this.onerror) : onerror;\n            return res === undefined ?\n                (res2 === undefined ? undefined : res2) :\n                (extend(res, res2));\n        };\n    }\n    function reverseStoppableEventChain(f1, f2) {\n        if (f1 === nop)\n            return f2;\n        return function () {\n            if (f2.apply(this, arguments) === false)\n                return false;\n            return f1.apply(this, arguments);\n        };\n    }\n    function promisableChain(f1, f2) {\n        if (f1 === nop)\n            return f2;\n        return function () {\n            var res = f1.apply(this, arguments);\n            if (res && typeof res.then === 'function') {\n                var thiz = this, i = arguments.length, args = new Array(i);\n                while (i--)\n                    args[i] = arguments[i];\n                return res.then(function () {\n                    return f2.apply(thiz, args);\n                });\n            }\n            return f2.apply(this, arguments);\n        };\n    }\n\n    var debug = typeof location !== 'undefined' &&\n        /^(http|https):\\/\\/(localhost|127\\.0\\.0\\.1)/.test(location.href);\n    function setDebug(value, filter) {\n        debug = value;\n    }\n\n    var INTERNAL = {};\n    var ZONE_ECHO_LIMIT = 100, _a$1 = typeof Promise === 'undefined' ?\n        [] :\n        (function () {\n            var globalP = Promise.resolve();\n            if (typeof crypto === 'undefined' || !crypto.subtle)\n                return [globalP, getProto(globalP), globalP];\n            var nativeP = crypto.subtle.digest(\"SHA-512\", new Uint8Array([0]));\n            return [\n                nativeP,\n                getProto(nativeP),\n                globalP\n            ];\n        })(), resolvedNativePromise = _a$1[0], nativePromiseProto = _a$1[1], resolvedGlobalPromise = _a$1[2], nativePromiseThen = nativePromiseProto && nativePromiseProto.then;\n    var NativePromise = resolvedNativePromise && resolvedNativePromise.constructor;\n    var patchGlobalPromise = !!resolvedGlobalPromise;\n    function schedulePhysicalTick() {\n        queueMicrotask(physicalTick);\n    }\n    var asap = function (callback, args) {\n        microtickQueue.push([callback, args]);\n        if (needsNewPhysicalTick) {\n            schedulePhysicalTick();\n            needsNewPhysicalTick = false;\n        }\n    };\n    var isOutsideMicroTick = true,\n    needsNewPhysicalTick = true,\n    unhandledErrors = [],\n    rejectingErrors = [],\n    rejectionMapper = mirror;\n    var globalPSD = {\n        id: 'global',\n        global: true,\n        ref: 0,\n        unhandleds: [],\n        onunhandled: nop,\n        pgp: false,\n        env: {},\n        finalize: nop\n    };\n    var PSD = globalPSD;\n    var microtickQueue = [];\n    var numScheduledCalls = 0;\n    var tickFinalizers = [];\n    function DexiePromise(fn) {\n        if (typeof this !== 'object')\n            throw new TypeError('Promises must be constructed via new');\n        this._listeners = [];\n        this._lib = false;\n        var psd = (this._PSD = PSD);\n        if (typeof fn !== 'function') {\n            if (fn !== INTERNAL)\n                throw new TypeError('Not a function');\n            this._state = arguments[1];\n            this._value = arguments[2];\n            if (this._state === false)\n                handleRejection(this, this._value);\n            return;\n        }\n        this._state = null;\n        this._value = null;\n        ++psd.ref;\n        executePromiseTask(this, fn);\n    }\n    var thenProp = {\n        get: function () {\n            var psd = PSD, microTaskId = totalEchoes;\n            function then(onFulfilled, onRejected) {\n                var _this = this;\n                var possibleAwait = !psd.global && (psd !== PSD || microTaskId !== totalEchoes);\n                var cleanup = possibleAwait && !decrementExpectedAwaits();\n                var rv = new DexiePromise(function (resolve, reject) {\n                    propagateToListener(_this, new Listener(nativeAwaitCompatibleWrap(onFulfilled, psd, possibleAwait, cleanup), nativeAwaitCompatibleWrap(onRejected, psd, possibleAwait, cleanup), resolve, reject, psd));\n                });\n                if (this._consoleTask)\n                    rv._consoleTask = this._consoleTask;\n                return rv;\n            }\n            then.prototype = INTERNAL;\n            return then;\n        },\n        set: function (value) {\n            setProp(this, 'then', value && value.prototype === INTERNAL ?\n                thenProp :\n                {\n                    get: function () {\n                        return value;\n                    },\n                    set: thenProp.set\n                });\n        }\n    };\n    props(DexiePromise.prototype, {\n        then: thenProp,\n        _then: function (onFulfilled, onRejected) {\n            propagateToListener(this, new Listener(null, null, onFulfilled, onRejected, PSD));\n        },\n        catch: function (onRejected) {\n            if (arguments.length === 1)\n                return this.then(null, onRejected);\n            var type = arguments[0], handler = arguments[1];\n            return typeof type === 'function' ? this.then(null, function (err) {\n                return err instanceof type ? handler(err) : PromiseReject(err);\n            })\n                : this.then(null, function (err) {\n                    return err && err.name === type ? handler(err) : PromiseReject(err);\n                });\n        },\n        finally: function (onFinally) {\n            return this.then(function (value) {\n                return DexiePromise.resolve(onFinally()).then(function () { return value; });\n            }, function (err) {\n                return DexiePromise.resolve(onFinally()).then(function () { return PromiseReject(err); });\n            });\n        },\n        timeout: function (ms, msg) {\n            var _this = this;\n            return ms < Infinity ?\n                new DexiePromise(function (resolve, reject) {\n                    var handle = setTimeout(function () { return reject(new exceptions.Timeout(msg)); }, ms);\n                    _this.then(resolve, reject).finally(clearTimeout.bind(null, handle));\n                }) : this;\n        }\n    });\n    if (typeof Symbol !== 'undefined' && Symbol.toStringTag)\n        setProp(DexiePromise.prototype, Symbol.toStringTag, 'Dexie.Promise');\n    globalPSD.env = snapShot();\n    function Listener(onFulfilled, onRejected, resolve, reject, zone) {\n        this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n        this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n        this.resolve = resolve;\n        this.reject = reject;\n        this.psd = zone;\n    }\n    props(DexiePromise, {\n        all: function () {\n            var values = getArrayOf.apply(null, arguments)\n                .map(onPossibleParallellAsync);\n            return new DexiePromise(function (resolve, reject) {\n                if (values.length === 0)\n                    resolve([]);\n                var remaining = values.length;\n                values.forEach(function (a, i) { return DexiePromise.resolve(a).then(function (x) {\n                    values[i] = x;\n                    if (!--remaining)\n                        resolve(values);\n                }, reject); });\n            });\n        },\n        resolve: function (value) {\n            if (value instanceof DexiePromise)\n                return value;\n            if (value && typeof value.then === 'function')\n                return new DexiePromise(function (resolve, reject) {\n                    value.then(resolve, reject);\n                });\n            var rv = new DexiePromise(INTERNAL, true, value);\n            return rv;\n        },\n        reject: PromiseReject,\n        race: function () {\n            var values = getArrayOf.apply(null, arguments).map(onPossibleParallellAsync);\n            return new DexiePromise(function (resolve, reject) {\n                values.map(function (value) { return DexiePromise.resolve(value).then(resolve, reject); });\n            });\n        },\n        PSD: {\n            get: function () { return PSD; },\n            set: function (value) { return PSD = value; }\n        },\n        totalEchoes: { get: function () { return totalEchoes; } },\n        newPSD: newScope,\n        usePSD: usePSD,\n        scheduler: {\n            get: function () { return asap; },\n            set: function (value) { asap = value; }\n        },\n        rejectionMapper: {\n            get: function () { return rejectionMapper; },\n            set: function (value) { rejectionMapper = value; }\n        },\n        follow: function (fn, zoneProps) {\n            return new DexiePromise(function (resolve, reject) {\n                return newScope(function (resolve, reject) {\n                    var psd = PSD;\n                    psd.unhandleds = [];\n                    psd.onunhandled = reject;\n                    psd.finalize = callBoth(function () {\n                        var _this = this;\n                        run_at_end_of_this_or_next_physical_tick(function () {\n                            _this.unhandleds.length === 0 ? resolve() : reject(_this.unhandleds[0]);\n                        });\n                    }, psd.finalize);\n                    fn();\n                }, zoneProps, resolve, reject);\n            });\n        }\n    });\n    if (NativePromise) {\n        if (NativePromise.allSettled)\n            setProp(DexiePromise, \"allSettled\", function () {\n                var possiblePromises = getArrayOf.apply(null, arguments).map(onPossibleParallellAsync);\n                return new DexiePromise(function (resolve) {\n                    if (possiblePromises.length === 0)\n                        resolve([]);\n                    var remaining = possiblePromises.length;\n                    var results = new Array(remaining);\n                    possiblePromises.forEach(function (p, i) { return DexiePromise.resolve(p).then(function (value) { return results[i] = { status: \"fulfilled\", value: value }; }, function (reason) { return results[i] = { status: \"rejected\", reason: reason }; })\n                        .then(function () { return --remaining || resolve(results); }); });\n                });\n            });\n        if (NativePromise.any && typeof AggregateError !== 'undefined')\n            setProp(DexiePromise, \"any\", function () {\n                var possiblePromises = getArrayOf.apply(null, arguments).map(onPossibleParallellAsync);\n                return new DexiePromise(function (resolve, reject) {\n                    if (possiblePromises.length === 0)\n                        reject(new AggregateError([]));\n                    var remaining = possiblePromises.length;\n                    var failures = new Array(remaining);\n                    possiblePromises.forEach(function (p, i) { return DexiePromise.resolve(p).then(function (value) { return resolve(value); }, function (failure) {\n                        failures[i] = failure;\n                        if (!--remaining)\n                            reject(new AggregateError(failures));\n                    }); });\n                });\n            });\n    }\n    function executePromiseTask(promise, fn) {\n        try {\n            fn(function (value) {\n                if (promise._state !== null)\n                    return;\n                if (value === promise)\n                    throw new TypeError('A promise cannot be resolved with itself.');\n                var shouldExecuteTick = promise._lib && beginMicroTickScope();\n                if (value && typeof value.then === 'function') {\n                    executePromiseTask(promise, function (resolve, reject) {\n                        value instanceof DexiePromise ?\n                            value._then(resolve, reject) :\n                            value.then(resolve, reject);\n                    });\n                }\n                else {\n                    promise._state = true;\n                    promise._value = value;\n                    propagateAllListeners(promise);\n                }\n                if (shouldExecuteTick)\n                    endMicroTickScope();\n            }, handleRejection.bind(null, promise));\n        }\n        catch (ex) {\n            handleRejection(promise, ex);\n        }\n    }\n    function handleRejection(promise, reason) {\n        rejectingErrors.push(reason);\n        if (promise._state !== null)\n            return;\n        var shouldExecuteTick = promise._lib && beginMicroTickScope();\n        reason = rejectionMapper(reason);\n        promise._state = false;\n        promise._value = reason;\n        addPossiblyUnhandledError(promise);\n        propagateAllListeners(promise);\n        if (shouldExecuteTick)\n            endMicroTickScope();\n    }\n    function propagateAllListeners(promise) {\n        var listeners = promise._listeners;\n        promise._listeners = [];\n        for (var i = 0, len = listeners.length; i < len; ++i) {\n            propagateToListener(promise, listeners[i]);\n        }\n        var psd = promise._PSD;\n        --psd.ref || psd.finalize();\n        if (numScheduledCalls === 0) {\n            ++numScheduledCalls;\n            asap(function () {\n                if (--numScheduledCalls === 0)\n                    finalizePhysicalTick();\n            }, []);\n        }\n    }\n    function propagateToListener(promise, listener) {\n        if (promise._state === null) {\n            promise._listeners.push(listener);\n            return;\n        }\n        var cb = promise._state ? listener.onFulfilled : listener.onRejected;\n        if (cb === null) {\n            return (promise._state ? listener.resolve : listener.reject)(promise._value);\n        }\n        ++listener.psd.ref;\n        ++numScheduledCalls;\n        asap(callListener, [cb, promise, listener]);\n    }\n    function callListener(cb, promise, listener) {\n        try {\n            var ret, value = promise._value;\n            if (!promise._state && rejectingErrors.length)\n                rejectingErrors = [];\n            ret = debug && promise._consoleTask ? promise._consoleTask.run(function () { return cb(value); }) : cb(value);\n            if (!promise._state && rejectingErrors.indexOf(value) === -1) {\n                markErrorAsHandled(promise);\n            }\n            listener.resolve(ret);\n        }\n        catch (e) {\n            listener.reject(e);\n        }\n        finally {\n            if (--numScheduledCalls === 0)\n                finalizePhysicalTick();\n            --listener.psd.ref || listener.psd.finalize();\n        }\n    }\n    function physicalTick() {\n        usePSD(globalPSD, function () {\n            beginMicroTickScope() && endMicroTickScope();\n        });\n    }\n    function beginMicroTickScope() {\n        var wasRootExec = isOutsideMicroTick;\n        isOutsideMicroTick = false;\n        needsNewPhysicalTick = false;\n        return wasRootExec;\n    }\n    function endMicroTickScope() {\n        var callbacks, i, l;\n        do {\n            while (microtickQueue.length > 0) {\n                callbacks = microtickQueue;\n                microtickQueue = [];\n                l = callbacks.length;\n                for (i = 0; i < l; ++i) {\n                    var item = callbacks[i];\n                    item[0].apply(null, item[1]);\n                }\n            }\n        } while (microtickQueue.length > 0);\n        isOutsideMicroTick = true;\n        needsNewPhysicalTick = true;\n    }\n    function finalizePhysicalTick() {\n        var unhandledErrs = unhandledErrors;\n        unhandledErrors = [];\n        unhandledErrs.forEach(function (p) {\n            p._PSD.onunhandled.call(null, p._value, p);\n        });\n        var finalizers = tickFinalizers.slice(0);\n        var i = finalizers.length;\n        while (i)\n            finalizers[--i]();\n    }\n    function run_at_end_of_this_or_next_physical_tick(fn) {\n        function finalizer() {\n            fn();\n            tickFinalizers.splice(tickFinalizers.indexOf(finalizer), 1);\n        }\n        tickFinalizers.push(finalizer);\n        ++numScheduledCalls;\n        asap(function () {\n            if (--numScheduledCalls === 0)\n                finalizePhysicalTick();\n        }, []);\n    }\n    function addPossiblyUnhandledError(promise) {\n        if (!unhandledErrors.some(function (p) { return p._value === promise._value; }))\n            unhandledErrors.push(promise);\n    }\n    function markErrorAsHandled(promise) {\n        var i = unhandledErrors.length;\n        while (i)\n            if (unhandledErrors[--i]._value === promise._value) {\n                unhandledErrors.splice(i, 1);\n                return;\n            }\n    }\n    function PromiseReject(reason) {\n        return new DexiePromise(INTERNAL, false, reason);\n    }\n    function wrap(fn, errorCatcher) {\n        var psd = PSD;\n        return function () {\n            var wasRootExec = beginMicroTickScope(), outerScope = PSD;\n            try {\n                switchToZone(psd, true);\n                return fn.apply(this, arguments);\n            }\n            catch (e) {\n                errorCatcher && errorCatcher(e);\n            }\n            finally {\n                switchToZone(outerScope, false);\n                if (wasRootExec)\n                    endMicroTickScope();\n            }\n        };\n    }\n    var task = { awaits: 0, echoes: 0, id: 0 };\n    var taskCounter = 0;\n    var zoneStack = [];\n    var zoneEchoes = 0;\n    var totalEchoes = 0;\n    var zone_id_counter = 0;\n    function newScope(fn, props, a1, a2) {\n        var parent = PSD, psd = Object.create(parent);\n        psd.parent = parent;\n        psd.ref = 0;\n        psd.global = false;\n        psd.id = ++zone_id_counter;\n        globalPSD.env;\n        psd.env = patchGlobalPromise ? {\n            Promise: DexiePromise,\n            PromiseProp: { value: DexiePromise, configurable: true, writable: true },\n            all: DexiePromise.all,\n            race: DexiePromise.race,\n            allSettled: DexiePromise.allSettled,\n            any: DexiePromise.any,\n            resolve: DexiePromise.resolve,\n            reject: DexiePromise.reject,\n        } : {};\n        if (props)\n            extend(psd, props);\n        ++parent.ref;\n        psd.finalize = function () {\n            --this.parent.ref || this.parent.finalize();\n        };\n        var rv = usePSD(psd, fn, a1, a2);\n        if (psd.ref === 0)\n            psd.finalize();\n        return rv;\n    }\n    function incrementExpectedAwaits() {\n        if (!task.id)\n            task.id = ++taskCounter;\n        ++task.awaits;\n        task.echoes += ZONE_ECHO_LIMIT;\n        return task.id;\n    }\n    function decrementExpectedAwaits() {\n        if (!task.awaits)\n            return false;\n        if (--task.awaits === 0)\n            task.id = 0;\n        task.echoes = task.awaits * ZONE_ECHO_LIMIT;\n        return true;\n    }\n    if (('' + nativePromiseThen).indexOf('[native code]') === -1) {\n        incrementExpectedAwaits = decrementExpectedAwaits = nop;\n    }\n    function onPossibleParallellAsync(possiblePromise) {\n        if (task.echoes && possiblePromise && possiblePromise.constructor === NativePromise) {\n            incrementExpectedAwaits();\n            return possiblePromise.then(function (x) {\n                decrementExpectedAwaits();\n                return x;\n            }, function (e) {\n                decrementExpectedAwaits();\n                return rejection(e);\n            });\n        }\n        return possiblePromise;\n    }\n    function zoneEnterEcho(targetZone) {\n        ++totalEchoes;\n        if (!task.echoes || --task.echoes === 0) {\n            task.echoes = task.awaits = task.id = 0;\n        }\n        zoneStack.push(PSD);\n        switchToZone(targetZone, true);\n    }\n    function zoneLeaveEcho() {\n        var zone = zoneStack[zoneStack.length - 1];\n        zoneStack.pop();\n        switchToZone(zone, false);\n    }\n    function switchToZone(targetZone, bEnteringZone) {\n        var currentZone = PSD;\n        if (bEnteringZone ? task.echoes && (!zoneEchoes++ || targetZone !== PSD) : zoneEchoes && (!--zoneEchoes || targetZone !== PSD)) {\n            queueMicrotask(bEnteringZone ? zoneEnterEcho.bind(null, targetZone) : zoneLeaveEcho);\n        }\n        if (targetZone === PSD)\n            return;\n        PSD = targetZone;\n        if (currentZone === globalPSD)\n            globalPSD.env = snapShot();\n        if (patchGlobalPromise) {\n            var GlobalPromise = globalPSD.env.Promise;\n            var targetEnv = targetZone.env;\n            if (currentZone.global || targetZone.global) {\n                Object.defineProperty(_global, 'Promise', targetEnv.PromiseProp);\n                GlobalPromise.all = targetEnv.all;\n                GlobalPromise.race = targetEnv.race;\n                GlobalPromise.resolve = targetEnv.resolve;\n                GlobalPromise.reject = targetEnv.reject;\n                if (targetEnv.allSettled)\n                    GlobalPromise.allSettled = targetEnv.allSettled;\n                if (targetEnv.any)\n                    GlobalPromise.any = targetEnv.any;\n            }\n        }\n    }\n    function snapShot() {\n        var GlobalPromise = _global.Promise;\n        return patchGlobalPromise ? {\n            Promise: GlobalPromise,\n            PromiseProp: Object.getOwnPropertyDescriptor(_global, \"Promise\"),\n            all: GlobalPromise.all,\n            race: GlobalPromise.race,\n            allSettled: GlobalPromise.allSettled,\n            any: GlobalPromise.any,\n            resolve: GlobalPromise.resolve,\n            reject: GlobalPromise.reject,\n        } : {};\n    }\n    function usePSD(psd, fn, a1, a2, a3) {\n        var outerScope = PSD;\n        try {\n            switchToZone(psd, true);\n            return fn(a1, a2, a3);\n        }\n        finally {\n            switchToZone(outerScope, false);\n        }\n    }\n    function nativeAwaitCompatibleWrap(fn, zone, possibleAwait, cleanup) {\n        return typeof fn !== 'function' ? fn : function () {\n            var outerZone = PSD;\n            if (possibleAwait)\n                incrementExpectedAwaits();\n            switchToZone(zone, true);\n            try {\n                return fn.apply(this, arguments);\n            }\n            finally {\n                switchToZone(outerZone, false);\n                if (cleanup)\n                    queueMicrotask(decrementExpectedAwaits);\n            }\n        };\n    }\n    function execInGlobalContext(cb) {\n        if (Promise === NativePromise && task.echoes === 0) {\n            if (zoneEchoes === 0) {\n                cb();\n            }\n            else {\n                enqueueNativeMicroTask(cb);\n            }\n        }\n        else {\n            setTimeout(cb, 0);\n        }\n    }\n    var rejection = DexiePromise.reject;\n\n    function tempTransaction(db, mode, storeNames, fn) {\n        if (!db.idbdb || (!db._state.openComplete && (!PSD.letThrough && !db._vip))) {\n            if (db._state.openComplete) {\n                return rejection(new exceptions.DatabaseClosed(db._state.dbOpenError));\n            }\n            if (!db._state.isBeingOpened) {\n                if (!db._state.autoOpen)\n                    return rejection(new exceptions.DatabaseClosed());\n                db.open().catch(nop);\n            }\n            return db._state.dbReadyPromise.then(function () { return tempTransaction(db, mode, storeNames, fn); });\n        }\n        else {\n            var trans = db._createTransaction(mode, storeNames, db._dbSchema);\n            try {\n                trans.create();\n                db._state.PR1398_maxLoop = 3;\n            }\n            catch (ex) {\n                if (ex.name === errnames.InvalidState && db.isOpen() && --db._state.PR1398_maxLoop > 0) {\n                    console.warn('Dexie: Need to reopen db');\n                    db.close({ disableAutoOpen: false });\n                    return db.open().then(function () { return tempTransaction(db, mode, storeNames, fn); });\n                }\n                return rejection(ex);\n            }\n            return trans._promise(mode, function (resolve, reject) {\n                return newScope(function () {\n                    PSD.trans = trans;\n                    return fn(resolve, reject, trans);\n                });\n            }).then(function (result) {\n                if (mode === 'readwrite')\n                    try {\n                        trans.idbtrans.commit();\n                    }\n                    catch (_a) { }\n                return mode === 'readonly' ? result : trans._completion.then(function () { return result; });\n            });\n        }\n    }\n\n    var DEXIE_VERSION = '4.0.7';\n    var maxString = String.fromCharCode(65535);\n    var minKey = -Infinity;\n    var INVALID_KEY_ARGUMENT = \"Invalid key provided. Keys must be of type string, number, Date or Array<string | number | Date>.\";\n    var STRING_EXPECTED = \"String expected.\";\n    var connections = [];\n    var DBNAMES_DB = '__dbnames';\n    var READONLY = 'readonly';\n    var READWRITE = 'readwrite';\n\n    function combine(filter1, filter2) {\n        return filter1 ?\n            filter2 ?\n                function () { return filter1.apply(this, arguments) && filter2.apply(this, arguments); } :\n                filter1 :\n            filter2;\n    }\n\n    var AnyRange = {\n        type: 3 ,\n        lower: -Infinity,\n        lowerOpen: false,\n        upper: [[]],\n        upperOpen: false\n    };\n\n    function workaroundForUndefinedPrimKey(keyPath) {\n        return typeof keyPath === \"string\" && !/\\./.test(keyPath)\n            ? function (obj) {\n                if (obj[keyPath] === undefined && (keyPath in obj)) {\n                    obj = deepClone(obj);\n                    delete obj[keyPath];\n                }\n                return obj;\n            }\n            : function (obj) { return obj; };\n    }\n\n    function Entity() {\n        throw exceptions.Type();\n    }\n\n    function cmp(a, b) {\n        try {\n            var ta = type(a);\n            var tb = type(b);\n            if (ta !== tb) {\n                if (ta === 'Array')\n                    return 1;\n                if (tb === 'Array')\n                    return -1;\n                if (ta === 'binary')\n                    return 1;\n                if (tb === 'binary')\n                    return -1;\n                if (ta === 'string')\n                    return 1;\n                if (tb === 'string')\n                    return -1;\n                if (ta === 'Date')\n                    return 1;\n                if (tb !== 'Date')\n                    return NaN;\n                return -1;\n            }\n            switch (ta) {\n                case 'number':\n                case 'Date':\n                case 'string':\n                    return a > b ? 1 : a < b ? -1 : 0;\n                case 'binary': {\n                    return compareUint8Arrays(getUint8Array(a), getUint8Array(b));\n                }\n                case 'Array':\n                    return compareArrays(a, b);\n            }\n        }\n        catch (_a) { }\n        return NaN;\n    }\n    function compareArrays(a, b) {\n        var al = a.length;\n        var bl = b.length;\n        var l = al < bl ? al : bl;\n        for (var i = 0; i < l; ++i) {\n            var res = cmp(a[i], b[i]);\n            if (res !== 0)\n                return res;\n        }\n        return al === bl ? 0 : al < bl ? -1 : 1;\n    }\n    function compareUint8Arrays(a, b) {\n        var al = a.length;\n        var bl = b.length;\n        var l = al < bl ? al : bl;\n        for (var i = 0; i < l; ++i) {\n            if (a[i] !== b[i])\n                return a[i] < b[i] ? -1 : 1;\n        }\n        return al === bl ? 0 : al < bl ? -1 : 1;\n    }\n    function type(x) {\n        var t = typeof x;\n        if (t !== 'object')\n            return t;\n        if (ArrayBuffer.isView(x))\n            return 'binary';\n        var tsTag = toStringTag(x);\n        return tsTag === 'ArrayBuffer' ? 'binary' : tsTag;\n    }\n    function getUint8Array(a) {\n        if (a instanceof Uint8Array)\n            return a;\n        if (ArrayBuffer.isView(a))\n            return new Uint8Array(a.buffer, a.byteOffset, a.byteLength);\n        return new Uint8Array(a);\n    }\n\n    var Table =  (function () {\n        function Table() {\n        }\n        Table.prototype._trans = function (mode, fn, writeLocked) {\n            var trans = this._tx || PSD.trans;\n            var tableName = this.name;\n            var task = debug && typeof console !== 'undefined' && console.createTask && console.createTask(\"Dexie: \".concat(mode === 'readonly' ? 'read' : 'write', \" \").concat(this.name));\n            function checkTableInTransaction(resolve, reject, trans) {\n                if (!trans.schema[tableName])\n                    throw new exceptions.NotFound(\"Table \" + tableName + \" not part of transaction\");\n                return fn(trans.idbtrans, trans);\n            }\n            var wasRootExec = beginMicroTickScope();\n            try {\n                var p = trans && trans.db._novip === this.db._novip ?\n                    trans === PSD.trans ?\n                        trans._promise(mode, checkTableInTransaction, writeLocked) :\n                        newScope(function () { return trans._promise(mode, checkTableInTransaction, writeLocked); }, { trans: trans, transless: PSD.transless || PSD }) :\n                    tempTransaction(this.db, mode, [this.name], checkTableInTransaction);\n                if (task) {\n                    p._consoleTask = task;\n                    p = p.catch(function (err) {\n                        console.trace(err);\n                        return rejection(err);\n                    });\n                }\n                return p;\n            }\n            finally {\n                if (wasRootExec)\n                    endMicroTickScope();\n            }\n        };\n        Table.prototype.get = function (keyOrCrit, cb) {\n            var _this = this;\n            if (keyOrCrit && keyOrCrit.constructor === Object)\n                return this.where(keyOrCrit).first(cb);\n            if (keyOrCrit == null)\n                return rejection(new exceptions.Type(\"Invalid argument to Table.get()\"));\n            return this._trans('readonly', function (trans) {\n                return _this.core.get({ trans: trans, key: keyOrCrit })\n                    .then(function (res) { return _this.hook.reading.fire(res); });\n            }).then(cb);\n        };\n        Table.prototype.where = function (indexOrCrit) {\n            if (typeof indexOrCrit === 'string')\n                return new this.db.WhereClause(this, indexOrCrit);\n            if (isArray(indexOrCrit))\n                return new this.db.WhereClause(this, \"[\".concat(indexOrCrit.join('+'), \"]\"));\n            var keyPaths = keys(indexOrCrit);\n            if (keyPaths.length === 1)\n                return this\n                    .where(keyPaths[0])\n                    .equals(indexOrCrit[keyPaths[0]]);\n            var compoundIndex = this.schema.indexes.concat(this.schema.primKey).filter(function (ix) {\n                if (ix.compound &&\n                    keyPaths.every(function (keyPath) { return ix.keyPath.indexOf(keyPath) >= 0; })) {\n                    for (var i = 0; i < keyPaths.length; ++i) {\n                        if (keyPaths.indexOf(ix.keyPath[i]) === -1)\n                            return false;\n                    }\n                    return true;\n                }\n                return false;\n            }).sort(function (a, b) { return a.keyPath.length - b.keyPath.length; })[0];\n            if (compoundIndex && this.db._maxKey !== maxString) {\n                var keyPathsInValidOrder = compoundIndex.keyPath.slice(0, keyPaths.length);\n                return this\n                    .where(keyPathsInValidOrder)\n                    .equals(keyPathsInValidOrder.map(function (kp) { return indexOrCrit[kp]; }));\n            }\n            if (!compoundIndex && debug)\n                console.warn(\"The query \".concat(JSON.stringify(indexOrCrit), \" on \").concat(this.name, \" would benefit from a \") +\n                    \"compound index [\".concat(keyPaths.join('+'), \"]\"));\n            var idxByName = this.schema.idxByName;\n            var idb = this.db._deps.indexedDB;\n            function equals(a, b) {\n                return idb.cmp(a, b) === 0;\n            }\n            var _a = keyPaths.reduce(function (_a, keyPath) {\n                var prevIndex = _a[0], prevFilterFn = _a[1];\n                var index = idxByName[keyPath];\n                var value = indexOrCrit[keyPath];\n                return [\n                    prevIndex || index,\n                    prevIndex || !index ?\n                        combine(prevFilterFn, index && index.multi ?\n                            function (x) {\n                                var prop = getByKeyPath(x, keyPath);\n                                return isArray(prop) && prop.some(function (item) { return equals(value, item); });\n                            } : function (x) { return equals(value, getByKeyPath(x, keyPath)); })\n                        : prevFilterFn\n                ];\n            }, [null, null]), idx = _a[0], filterFunction = _a[1];\n            return idx ?\n                this.where(idx.name).equals(indexOrCrit[idx.keyPath])\n                    .filter(filterFunction) :\n                compoundIndex ?\n                    this.filter(filterFunction) :\n                    this.where(keyPaths).equals('');\n        };\n        Table.prototype.filter = function (filterFunction) {\n            return this.toCollection().and(filterFunction);\n        };\n        Table.prototype.count = function (thenShortcut) {\n            return this.toCollection().count(thenShortcut);\n        };\n        Table.prototype.offset = function (offset) {\n            return this.toCollection().offset(offset);\n        };\n        Table.prototype.limit = function (numRows) {\n            return this.toCollection().limit(numRows);\n        };\n        Table.prototype.each = function (callback) {\n            return this.toCollection().each(callback);\n        };\n        Table.prototype.toArray = function (thenShortcut) {\n            return this.toCollection().toArray(thenShortcut);\n        };\n        Table.prototype.toCollection = function () {\n            return new this.db.Collection(new this.db.WhereClause(this));\n        };\n        Table.prototype.orderBy = function (index) {\n            return new this.db.Collection(new this.db.WhereClause(this, isArray(index) ?\n                \"[\".concat(index.join('+'), \"]\") :\n                index));\n        };\n        Table.prototype.reverse = function () {\n            return this.toCollection().reverse();\n        };\n        Table.prototype.mapToClass = function (constructor) {\n            var _a = this, db = _a.db, tableName = _a.name;\n            this.schema.mappedClass = constructor;\n            if (constructor.prototype instanceof Entity) {\n                constructor =  (function (_super) {\n                    __extends(class_1, _super);\n                    function class_1() {\n                        return _super !== null && _super.apply(this, arguments) || this;\n                    }\n                    Object.defineProperty(class_1.prototype, \"db\", {\n                        get: function () { return db; },\n                        enumerable: false,\n                        configurable: true\n                    });\n                    class_1.prototype.table = function () { return tableName; };\n                    return class_1;\n                }(constructor));\n            }\n            var inheritedProps = new Set();\n            for (var proto = constructor.prototype; proto; proto = getProto(proto)) {\n                Object.getOwnPropertyNames(proto).forEach(function (propName) { return inheritedProps.add(propName); });\n            }\n            var readHook = function (obj) {\n                if (!obj)\n                    return obj;\n                var res = Object.create(constructor.prototype);\n                for (var m in obj)\n                    if (!inheritedProps.has(m))\n                        try {\n                            res[m] = obj[m];\n                        }\n                        catch (_) { }\n                return res;\n            };\n            if (this.schema.readHook) {\n                this.hook.reading.unsubscribe(this.schema.readHook);\n            }\n            this.schema.readHook = readHook;\n            this.hook(\"reading\", readHook);\n            return constructor;\n        };\n        Table.prototype.defineClass = function () {\n            function Class(content) {\n                extend(this, content);\n            }\n            return this.mapToClass(Class);\n        };\n        Table.prototype.add = function (obj, key) {\n            var _this = this;\n            var _a = this.schema.primKey, auto = _a.auto, keyPath = _a.keyPath;\n            var objToAdd = obj;\n            if (keyPath && auto) {\n                objToAdd = workaroundForUndefinedPrimKey(keyPath)(obj);\n            }\n            return this._trans('readwrite', function (trans) {\n                return _this.core.mutate({ trans: trans, type: 'add', keys: key != null ? [key] : null, values: [objToAdd] });\n            }).then(function (res) { return res.numFailures ? DexiePromise.reject(res.failures[0]) : res.lastResult; })\n                .then(function (lastResult) {\n                if (keyPath) {\n                    try {\n                        setByKeyPath(obj, keyPath, lastResult);\n                    }\n                    catch (_) { }\n                }\n                return lastResult;\n            });\n        };\n        Table.prototype.update = function (keyOrObject, modifications) {\n            if (typeof keyOrObject === 'object' && !isArray(keyOrObject)) {\n                var key = getByKeyPath(keyOrObject, this.schema.primKey.keyPath);\n                if (key === undefined)\n                    return rejection(new exceptions.InvalidArgument(\"Given object does not contain its primary key\"));\n                return this.where(\":id\").equals(key).modify(modifications);\n            }\n            else {\n                return this.where(\":id\").equals(keyOrObject).modify(modifications);\n            }\n        };\n        Table.prototype.put = function (obj, key) {\n            var _this = this;\n            var _a = this.schema.primKey, auto = _a.auto, keyPath = _a.keyPath;\n            var objToAdd = obj;\n            if (keyPath && auto) {\n                objToAdd = workaroundForUndefinedPrimKey(keyPath)(obj);\n            }\n            return this._trans('readwrite', function (trans) { return _this.core.mutate({ trans: trans, type: 'put', values: [objToAdd], keys: key != null ? [key] : null }); })\n                .then(function (res) { return res.numFailures ? DexiePromise.reject(res.failures[0]) : res.lastResult; })\n                .then(function (lastResult) {\n                if (keyPath) {\n                    try {\n                        setByKeyPath(obj, keyPath, lastResult);\n                    }\n                    catch (_) { }\n                }\n                return lastResult;\n            });\n        };\n        Table.prototype.delete = function (key) {\n            var _this = this;\n            return this._trans('readwrite', function (trans) { return _this.core.mutate({ trans: trans, type: 'delete', keys: [key] }); })\n                .then(function (res) { return res.numFailures ? DexiePromise.reject(res.failures[0]) : undefined; });\n        };\n        Table.prototype.clear = function () {\n            var _this = this;\n            return this._trans('readwrite', function (trans) { return _this.core.mutate({ trans: trans, type: 'deleteRange', range: AnyRange }); })\n                .then(function (res) { return res.numFailures ? DexiePromise.reject(res.failures[0]) : undefined; });\n        };\n        Table.prototype.bulkGet = function (keys) {\n            var _this = this;\n            return this._trans('readonly', function (trans) {\n                return _this.core.getMany({\n                    keys: keys,\n                    trans: trans\n                }).then(function (result) { return result.map(function (res) { return _this.hook.reading.fire(res); }); });\n            });\n        };\n        Table.prototype.bulkAdd = function (objects, keysOrOptions, options) {\n            var _this = this;\n            var keys = Array.isArray(keysOrOptions) ? keysOrOptions : undefined;\n            options = options || (keys ? undefined : keysOrOptions);\n            var wantResults = options ? options.allKeys : undefined;\n            return this._trans('readwrite', function (trans) {\n                var _a = _this.schema.primKey, auto = _a.auto, keyPath = _a.keyPath;\n                if (keyPath && keys)\n                    throw new exceptions.InvalidArgument(\"bulkAdd(): keys argument invalid on tables with inbound keys\");\n                if (keys && keys.length !== objects.length)\n                    throw new exceptions.InvalidArgument(\"Arguments objects and keys must have the same length\");\n                var numObjects = objects.length;\n                var objectsToAdd = keyPath && auto ?\n                    objects.map(workaroundForUndefinedPrimKey(keyPath)) :\n                    objects;\n                return _this.core.mutate({ trans: trans, type: 'add', keys: keys, values: objectsToAdd, wantResults: wantResults })\n                    .then(function (_a) {\n                    var numFailures = _a.numFailures, results = _a.results, lastResult = _a.lastResult, failures = _a.failures;\n                    var result = wantResults ? results : lastResult;\n                    if (numFailures === 0)\n                        return result;\n                    throw new BulkError(\"\".concat(_this.name, \".bulkAdd(): \").concat(numFailures, \" of \").concat(numObjects, \" operations failed\"), failures);\n                });\n            });\n        };\n        Table.prototype.bulkPut = function (objects, keysOrOptions, options) {\n            var _this = this;\n            var keys = Array.isArray(keysOrOptions) ? keysOrOptions : undefined;\n            options = options || (keys ? undefined : keysOrOptions);\n            var wantResults = options ? options.allKeys : undefined;\n            return this._trans('readwrite', function (trans) {\n                var _a = _this.schema.primKey, auto = _a.auto, keyPath = _a.keyPath;\n                if (keyPath && keys)\n                    throw new exceptions.InvalidArgument(\"bulkPut(): keys argument invalid on tables with inbound keys\");\n                if (keys && keys.length !== objects.length)\n                    throw new exceptions.InvalidArgument(\"Arguments objects and keys must have the same length\");\n                var numObjects = objects.length;\n                var objectsToPut = keyPath && auto ?\n                    objects.map(workaroundForUndefinedPrimKey(keyPath)) :\n                    objects;\n                return _this.core.mutate({ trans: trans, type: 'put', keys: keys, values: objectsToPut, wantResults: wantResults })\n                    .then(function (_a) {\n                    var numFailures = _a.numFailures, results = _a.results, lastResult = _a.lastResult, failures = _a.failures;\n                    var result = wantResults ? results : lastResult;\n                    if (numFailures === 0)\n                        return result;\n                    throw new BulkError(\"\".concat(_this.name, \".bulkPut(): \").concat(numFailures, \" of \").concat(numObjects, \" operations failed\"), failures);\n                });\n            });\n        };\n        Table.prototype.bulkUpdate = function (keysAndChanges) {\n            var _this = this;\n            var coreTable = this.core;\n            var keys = keysAndChanges.map(function (entry) { return entry.key; });\n            var changeSpecs = keysAndChanges.map(function (entry) { return entry.changes; });\n            var offsetMap = [];\n            return this._trans('readwrite', function (trans) {\n                return coreTable.getMany({ trans: trans, keys: keys, cache: 'clone' }).then(function (objs) {\n                    var resultKeys = [];\n                    var resultObjs = [];\n                    keysAndChanges.forEach(function (_a, idx) {\n                        var key = _a.key, changes = _a.changes;\n                        var obj = objs[idx];\n                        if (obj) {\n                            for (var _i = 0, _b = Object.keys(changes); _i < _b.length; _i++) {\n                                var keyPath = _b[_i];\n                                var value = changes[keyPath];\n                                if (keyPath === _this.schema.primKey.keyPath) {\n                                    if (cmp(value, key) !== 0) {\n                                        throw new exceptions.Constraint(\"Cannot update primary key in bulkUpdate()\");\n                                    }\n                                }\n                                else {\n                                    setByKeyPath(obj, keyPath, value);\n                                }\n                            }\n                            offsetMap.push(idx);\n                            resultKeys.push(key);\n                            resultObjs.push(obj);\n                        }\n                    });\n                    var numEntries = resultKeys.length;\n                    return coreTable\n                        .mutate({\n                        trans: trans,\n                        type: 'put',\n                        keys: resultKeys,\n                        values: resultObjs,\n                        updates: {\n                            keys: keys,\n                            changeSpecs: changeSpecs\n                        }\n                    })\n                        .then(function (_a) {\n                        var numFailures = _a.numFailures, failures = _a.failures;\n                        if (numFailures === 0)\n                            return numEntries;\n                        for (var _i = 0, _b = Object.keys(failures); _i < _b.length; _i++) {\n                            var offset = _b[_i];\n                            var mappedOffset = offsetMap[Number(offset)];\n                            if (mappedOffset != null) {\n                                var failure = failures[offset];\n                                delete failures[offset];\n                                failures[mappedOffset] = failure;\n                            }\n                        }\n                        throw new BulkError(\"\".concat(_this.name, \".bulkUpdate(): \").concat(numFailures, \" of \").concat(numEntries, \" operations failed\"), failures);\n                    });\n                });\n            });\n        };\n        Table.prototype.bulkDelete = function (keys) {\n            var _this = this;\n            var numKeys = keys.length;\n            return this._trans('readwrite', function (trans) {\n                return _this.core.mutate({ trans: trans, type: 'delete', keys: keys });\n            }).then(function (_a) {\n                var numFailures = _a.numFailures, lastResult = _a.lastResult, failures = _a.failures;\n                if (numFailures === 0)\n                    return lastResult;\n                throw new BulkError(\"\".concat(_this.name, \".bulkDelete(): \").concat(numFailures, \" of \").concat(numKeys, \" operations failed\"), failures);\n            });\n        };\n        return Table;\n    }());\n\n    function Events(ctx) {\n        var evs = {};\n        var rv = function (eventName, subscriber) {\n            if (subscriber) {\n                var i = arguments.length, args = new Array(i - 1);\n                while (--i)\n                    args[i - 1] = arguments[i];\n                evs[eventName].subscribe.apply(null, args);\n                return ctx;\n            }\n            else if (typeof (eventName) === 'string') {\n                return evs[eventName];\n            }\n        };\n        rv.addEventType = add;\n        for (var i = 1, l = arguments.length; i < l; ++i) {\n            add(arguments[i]);\n        }\n        return rv;\n        function add(eventName, chainFunction, defaultFunction) {\n            if (typeof eventName === 'object')\n                return addConfiguredEvents(eventName);\n            if (!chainFunction)\n                chainFunction = reverseStoppableEventChain;\n            if (!defaultFunction)\n                defaultFunction = nop;\n            var context = {\n                subscribers: [],\n                fire: defaultFunction,\n                subscribe: function (cb) {\n                    if (context.subscribers.indexOf(cb) === -1) {\n                        context.subscribers.push(cb);\n                        context.fire = chainFunction(context.fire, cb);\n                    }\n                },\n                unsubscribe: function (cb) {\n                    context.subscribers = context.subscribers.filter(function (fn) { return fn !== cb; });\n                    context.fire = context.subscribers.reduce(chainFunction, defaultFunction);\n                }\n            };\n            evs[eventName] = rv[eventName] = context;\n            return context;\n        }\n        function addConfiguredEvents(cfg) {\n            keys(cfg).forEach(function (eventName) {\n                var args = cfg[eventName];\n                if (isArray(args)) {\n                    add(eventName, cfg[eventName][0], cfg[eventName][1]);\n                }\n                else if (args === 'asap') {\n                    var context = add(eventName, mirror, function fire() {\n                        var i = arguments.length, args = new Array(i);\n                        while (i--)\n                            args[i] = arguments[i];\n                        context.subscribers.forEach(function (fn) {\n                            asap$1(function fireEvent() {\n                                fn.apply(null, args);\n                            });\n                        });\n                    });\n                }\n                else\n                    throw new exceptions.InvalidArgument(\"Invalid event config\");\n            });\n        }\n    }\n\n    function makeClassConstructor(prototype, constructor) {\n        derive(constructor).from({ prototype: prototype });\n        return constructor;\n    }\n\n    function createTableConstructor(db) {\n        return makeClassConstructor(Table.prototype, function Table(name, tableSchema, trans) {\n            this.db = db;\n            this._tx = trans;\n            this.name = name;\n            this.schema = tableSchema;\n            this.hook = db._allTables[name] ? db._allTables[name].hook : Events(null, {\n                \"creating\": [hookCreatingChain, nop],\n                \"reading\": [pureFunctionChain, mirror],\n                \"updating\": [hookUpdatingChain, nop],\n                \"deleting\": [hookDeletingChain, nop]\n            });\n        });\n    }\n\n    function isPlainKeyRange(ctx, ignoreLimitFilter) {\n        return !(ctx.filter || ctx.algorithm || ctx.or) &&\n            (ignoreLimitFilter ? ctx.justLimit : !ctx.replayFilter);\n    }\n    function addFilter(ctx, fn) {\n        ctx.filter = combine(ctx.filter, fn);\n    }\n    function addReplayFilter(ctx, factory, isLimitFilter) {\n        var curr = ctx.replayFilter;\n        ctx.replayFilter = curr ? function () { return combine(curr(), factory()); } : factory;\n        ctx.justLimit = isLimitFilter && !curr;\n    }\n    function addMatchFilter(ctx, fn) {\n        ctx.isMatch = combine(ctx.isMatch, fn);\n    }\n    function getIndexOrStore(ctx, coreSchema) {\n        if (ctx.isPrimKey)\n            return coreSchema.primaryKey;\n        var index = coreSchema.getIndexByKeyPath(ctx.index);\n        if (!index)\n            throw new exceptions.Schema(\"KeyPath \" + ctx.index + \" on object store \" + coreSchema.name + \" is not indexed\");\n        return index;\n    }\n    function openCursor(ctx, coreTable, trans) {\n        var index = getIndexOrStore(ctx, coreTable.schema);\n        return coreTable.openCursor({\n            trans: trans,\n            values: !ctx.keysOnly,\n            reverse: ctx.dir === 'prev',\n            unique: !!ctx.unique,\n            query: {\n                index: index,\n                range: ctx.range\n            }\n        });\n    }\n    function iter(ctx, fn, coreTrans, coreTable) {\n        var filter = ctx.replayFilter ? combine(ctx.filter, ctx.replayFilter()) : ctx.filter;\n        if (!ctx.or) {\n            return iterate(openCursor(ctx, coreTable, coreTrans), combine(ctx.algorithm, filter), fn, !ctx.keysOnly && ctx.valueMapper);\n        }\n        else {\n            var set_1 = {};\n            var union = function (item, cursor, advance) {\n                if (!filter || filter(cursor, advance, function (result) { return cursor.stop(result); }, function (err) { return cursor.fail(err); })) {\n                    var primaryKey = cursor.primaryKey;\n                    var key = '' + primaryKey;\n                    if (key === '[object ArrayBuffer]')\n                        key = '' + new Uint8Array(primaryKey);\n                    if (!hasOwn(set_1, key)) {\n                        set_1[key] = true;\n                        fn(item, cursor, advance);\n                    }\n                }\n            };\n            return Promise.all([\n                ctx.or._iterate(union, coreTrans),\n                iterate(openCursor(ctx, coreTable, coreTrans), ctx.algorithm, union, !ctx.keysOnly && ctx.valueMapper)\n            ]);\n        }\n    }\n    function iterate(cursorPromise, filter, fn, valueMapper) {\n        var mappedFn = valueMapper ? function (x, c, a) { return fn(valueMapper(x), c, a); } : fn;\n        var wrappedFn = wrap(mappedFn);\n        return cursorPromise.then(function (cursor) {\n            if (cursor) {\n                return cursor.start(function () {\n                    var c = function () { return cursor.continue(); };\n                    if (!filter || filter(cursor, function (advancer) { return c = advancer; }, function (val) { cursor.stop(val); c = nop; }, function (e) { cursor.fail(e); c = nop; }))\n                        wrappedFn(cursor.value, cursor, function (advancer) { return c = advancer; });\n                    c();\n                });\n            }\n        });\n    }\n\n    var PropModSymbol = Symbol();\n    var PropModification =  (function () {\n        function PropModification(spec) {\n            Object.assign(this, spec);\n        }\n        PropModification.prototype.execute = function (value) {\n            var _a;\n            if (this.add !== undefined) {\n                var term = this.add;\n                if (isArray(term)) {\n                    return __spreadArray(__spreadArray([], (isArray(value) ? value : []), true), term, true).sort();\n                }\n                if (typeof term === 'number')\n                    return (Number(value) || 0) + term;\n                if (typeof term === 'bigint') {\n                    try {\n                        return BigInt(value) + term;\n                    }\n                    catch (_b) {\n                        return BigInt(0) + term;\n                    }\n                }\n                throw new TypeError(\"Invalid term \".concat(term));\n            }\n            if (this.remove !== undefined) {\n                var subtrahend_1 = this.remove;\n                if (isArray(subtrahend_1)) {\n                    return isArray(value) ? value.filter(function (item) { return !subtrahend_1.includes(item); }).sort() : [];\n                }\n                if (typeof subtrahend_1 === 'number')\n                    return Number(value) - subtrahend_1;\n                if (typeof subtrahend_1 === 'bigint') {\n                    try {\n                        return BigInt(value) - subtrahend_1;\n                    }\n                    catch (_c) {\n                        return BigInt(0) - subtrahend_1;\n                    }\n                }\n                throw new TypeError(\"Invalid subtrahend \".concat(subtrahend_1));\n            }\n            var prefixToReplace = (_a = this.replacePrefix) === null || _a === void 0 ? void 0 : _a[0];\n            if (prefixToReplace && typeof value === 'string' && value.startsWith(prefixToReplace)) {\n                return this.replacePrefix[1] + value.substring(prefixToReplace.length);\n            }\n            return value;\n        };\n        return PropModification;\n    }());\n\n    var Collection =  (function () {\n        function Collection() {\n        }\n        Collection.prototype._read = function (fn, cb) {\n            var ctx = this._ctx;\n            return ctx.error ?\n                ctx.table._trans(null, rejection.bind(null, ctx.error)) :\n                ctx.table._trans('readonly', fn).then(cb);\n        };\n        Collection.prototype._write = function (fn) {\n            var ctx = this._ctx;\n            return ctx.error ?\n                ctx.table._trans(null, rejection.bind(null, ctx.error)) :\n                ctx.table._trans('readwrite', fn, \"locked\");\n        };\n        Collection.prototype._addAlgorithm = function (fn) {\n            var ctx = this._ctx;\n            ctx.algorithm = combine(ctx.algorithm, fn);\n        };\n        Collection.prototype._iterate = function (fn, coreTrans) {\n            return iter(this._ctx, fn, coreTrans, this._ctx.table.core);\n        };\n        Collection.prototype.clone = function (props) {\n            var rv = Object.create(this.constructor.prototype), ctx = Object.create(this._ctx);\n            if (props)\n                extend(ctx, props);\n            rv._ctx = ctx;\n            return rv;\n        };\n        Collection.prototype.raw = function () {\n            this._ctx.valueMapper = null;\n            return this;\n        };\n        Collection.prototype.each = function (fn) {\n            var ctx = this._ctx;\n            return this._read(function (trans) { return iter(ctx, fn, trans, ctx.table.core); });\n        };\n        Collection.prototype.count = function (cb) {\n            var _this = this;\n            return this._read(function (trans) {\n                var ctx = _this._ctx;\n                var coreTable = ctx.table.core;\n                if (isPlainKeyRange(ctx, true)) {\n                    return coreTable.count({\n                        trans: trans,\n                        query: {\n                            index: getIndexOrStore(ctx, coreTable.schema),\n                            range: ctx.range\n                        }\n                    }).then(function (count) { return Math.min(count, ctx.limit); });\n                }\n                else {\n                    var count = 0;\n                    return iter(ctx, function () { ++count; return false; }, trans, coreTable)\n                        .then(function () { return count; });\n                }\n            }).then(cb);\n        };\n        Collection.prototype.sortBy = function (keyPath, cb) {\n            var parts = keyPath.split('.').reverse(), lastPart = parts[0], lastIndex = parts.length - 1;\n            function getval(obj, i) {\n                if (i)\n                    return getval(obj[parts[i]], i - 1);\n                return obj[lastPart];\n            }\n            var order = this._ctx.dir === \"next\" ? 1 : -1;\n            function sorter(a, b) {\n                var aVal = getval(a, lastIndex), bVal = getval(b, lastIndex);\n                return aVal < bVal ? -order : aVal > bVal ? order : 0;\n            }\n            return this.toArray(function (a) {\n                return a.sort(sorter);\n            }).then(cb);\n        };\n        Collection.prototype.toArray = function (cb) {\n            var _this = this;\n            return this._read(function (trans) {\n                var ctx = _this._ctx;\n                if (ctx.dir === 'next' && isPlainKeyRange(ctx, true) && ctx.limit > 0) {\n                    var valueMapper_1 = ctx.valueMapper;\n                    var index = getIndexOrStore(ctx, ctx.table.core.schema);\n                    return ctx.table.core.query({\n                        trans: trans,\n                        limit: ctx.limit,\n                        values: true,\n                        query: {\n                            index: index,\n                            range: ctx.range\n                        }\n                    }).then(function (_a) {\n                        var result = _a.result;\n                        return valueMapper_1 ? result.map(valueMapper_1) : result;\n                    });\n                }\n                else {\n                    var a_1 = [];\n                    return iter(ctx, function (item) { return a_1.push(item); }, trans, ctx.table.core).then(function () { return a_1; });\n                }\n            }, cb);\n        };\n        Collection.prototype.offset = function (offset) {\n            var ctx = this._ctx;\n            if (offset <= 0)\n                return this;\n            ctx.offset += offset;\n            if (isPlainKeyRange(ctx)) {\n                addReplayFilter(ctx, function () {\n                    var offsetLeft = offset;\n                    return function (cursor, advance) {\n                        if (offsetLeft === 0)\n                            return true;\n                        if (offsetLeft === 1) {\n                            --offsetLeft;\n                            return false;\n                        }\n                        advance(function () {\n                            cursor.advance(offsetLeft);\n                            offsetLeft = 0;\n                        });\n                        return false;\n                    };\n                });\n            }\n            else {\n                addReplayFilter(ctx, function () {\n                    var offsetLeft = offset;\n                    return function () { return (--offsetLeft < 0); };\n                });\n            }\n            return this;\n        };\n        Collection.prototype.limit = function (numRows) {\n            this._ctx.limit = Math.min(this._ctx.limit, numRows);\n            addReplayFilter(this._ctx, function () {\n                var rowsLeft = numRows;\n                return function (cursor, advance, resolve) {\n                    if (--rowsLeft <= 0)\n                        advance(resolve);\n                    return rowsLeft >= 0;\n                };\n            }, true);\n            return this;\n        };\n        Collection.prototype.until = function (filterFunction, bIncludeStopEntry) {\n            addFilter(this._ctx, function (cursor, advance, resolve) {\n                if (filterFunction(cursor.value)) {\n                    advance(resolve);\n                    return bIncludeStopEntry;\n                }\n                else {\n                    return true;\n                }\n            });\n            return this;\n        };\n        Collection.prototype.first = function (cb) {\n            return this.limit(1).toArray(function (a) { return a[0]; }).then(cb);\n        };\n        Collection.prototype.last = function (cb) {\n            return this.reverse().first(cb);\n        };\n        Collection.prototype.filter = function (filterFunction) {\n            addFilter(this._ctx, function (cursor) {\n                return filterFunction(cursor.value);\n            });\n            addMatchFilter(this._ctx, filterFunction);\n            return this;\n        };\n        Collection.prototype.and = function (filter) {\n            return this.filter(filter);\n        };\n        Collection.prototype.or = function (indexName) {\n            return new this.db.WhereClause(this._ctx.table, indexName, this);\n        };\n        Collection.prototype.reverse = function () {\n            this._ctx.dir = (this._ctx.dir === \"prev\" ? \"next\" : \"prev\");\n            if (this._ondirectionchange)\n                this._ondirectionchange(this._ctx.dir);\n            return this;\n        };\n        Collection.prototype.desc = function () {\n            return this.reverse();\n        };\n        Collection.prototype.eachKey = function (cb) {\n            var ctx = this._ctx;\n            ctx.keysOnly = !ctx.isMatch;\n            return this.each(function (val, cursor) { cb(cursor.key, cursor); });\n        };\n        Collection.prototype.eachUniqueKey = function (cb) {\n            this._ctx.unique = \"unique\";\n            return this.eachKey(cb);\n        };\n        Collection.prototype.eachPrimaryKey = function (cb) {\n            var ctx = this._ctx;\n            ctx.keysOnly = !ctx.isMatch;\n            return this.each(function (val, cursor) { cb(cursor.primaryKey, cursor); });\n        };\n        Collection.prototype.keys = function (cb) {\n            var ctx = this._ctx;\n            ctx.keysOnly = !ctx.isMatch;\n            var a = [];\n            return this.each(function (item, cursor) {\n                a.push(cursor.key);\n            }).then(function () {\n                return a;\n            }).then(cb);\n        };\n        Collection.prototype.primaryKeys = function (cb) {\n            var ctx = this._ctx;\n            if (ctx.dir === 'next' && isPlainKeyRange(ctx, true) && ctx.limit > 0) {\n                return this._read(function (trans) {\n                    var index = getIndexOrStore(ctx, ctx.table.core.schema);\n                    return ctx.table.core.query({\n                        trans: trans,\n                        values: false,\n                        limit: ctx.limit,\n                        query: {\n                            index: index,\n                            range: ctx.range\n                        }\n                    });\n                }).then(function (_a) {\n                    var result = _a.result;\n                    return result;\n                }).then(cb);\n            }\n            ctx.keysOnly = !ctx.isMatch;\n            var a = [];\n            return this.each(function (item, cursor) {\n                a.push(cursor.primaryKey);\n            }).then(function () {\n                return a;\n            }).then(cb);\n        };\n        Collection.prototype.uniqueKeys = function (cb) {\n            this._ctx.unique = \"unique\";\n            return this.keys(cb);\n        };\n        Collection.prototype.firstKey = function (cb) {\n            return this.limit(1).keys(function (a) { return a[0]; }).then(cb);\n        };\n        Collection.prototype.lastKey = function (cb) {\n            return this.reverse().firstKey(cb);\n        };\n        Collection.prototype.distinct = function () {\n            var ctx = this._ctx, idx = ctx.index && ctx.table.schema.idxByName[ctx.index];\n            if (!idx || !idx.multi)\n                return this;\n            var set = {};\n            addFilter(this._ctx, function (cursor) {\n                var strKey = cursor.primaryKey.toString();\n                var found = hasOwn(set, strKey);\n                set[strKey] = true;\n                return !found;\n            });\n            return this;\n        };\n        Collection.prototype.modify = function (changes) {\n            var _this = this;\n            var ctx = this._ctx;\n            return this._write(function (trans) {\n                var modifyer;\n                if (typeof changes === 'function') {\n                    modifyer = changes;\n                }\n                else {\n                    var keyPaths = keys(changes);\n                    var numKeys = keyPaths.length;\n                    modifyer = function (item) {\n                        var anythingModified = false;\n                        for (var i = 0; i < numKeys; ++i) {\n                            var keyPath = keyPaths[i];\n                            var val = changes[keyPath];\n                            var origVal = getByKeyPath(item, keyPath);\n                            if (val instanceof PropModification) {\n                                setByKeyPath(item, keyPath, val.execute(origVal));\n                                anythingModified = true;\n                            }\n                            else if (origVal !== val) {\n                                setByKeyPath(item, keyPath, val);\n                                anythingModified = true;\n                            }\n                        }\n                        return anythingModified;\n                    };\n                }\n                var coreTable = ctx.table.core;\n                var _a = coreTable.schema.primaryKey, outbound = _a.outbound, extractKey = _a.extractKey;\n                var limit = _this.db._options.modifyChunkSize || 200;\n                var totalFailures = [];\n                var successCount = 0;\n                var failedKeys = [];\n                var applyMutateResult = function (expectedCount, res) {\n                    var failures = res.failures, numFailures = res.numFailures;\n                    successCount += expectedCount - numFailures;\n                    for (var _i = 0, _a = keys(failures); _i < _a.length; _i++) {\n                        var pos = _a[_i];\n                        totalFailures.push(failures[pos]);\n                    }\n                };\n                return _this.clone().primaryKeys().then(function (keys) {\n                    var criteria = isPlainKeyRange(ctx) &&\n                        ctx.limit === Infinity &&\n                        (typeof changes !== 'function' || changes === deleteCallback) && {\n                        index: ctx.index,\n                        range: ctx.range\n                    };\n                    var nextChunk = function (offset) {\n                        var count = Math.min(limit, keys.length - offset);\n                        return coreTable.getMany({\n                            trans: trans,\n                            keys: keys.slice(offset, offset + count),\n                            cache: \"immutable\"\n                        }).then(function (values) {\n                            var addValues = [];\n                            var putValues = [];\n                            var putKeys = outbound ? [] : null;\n                            var deleteKeys = [];\n                            for (var i = 0; i < count; ++i) {\n                                var origValue = values[i];\n                                var ctx_1 = {\n                                    value: deepClone(origValue),\n                                    primKey: keys[offset + i]\n                                };\n                                if (modifyer.call(ctx_1, ctx_1.value, ctx_1) !== false) {\n                                    if (ctx_1.value == null) {\n                                        deleteKeys.push(keys[offset + i]);\n                                    }\n                                    else if (!outbound && cmp(extractKey(origValue), extractKey(ctx_1.value)) !== 0) {\n                                        deleteKeys.push(keys[offset + i]);\n                                        addValues.push(ctx_1.value);\n                                    }\n                                    else {\n                                        putValues.push(ctx_1.value);\n                                        if (outbound)\n                                            putKeys.push(keys[offset + i]);\n                                    }\n                                }\n                            }\n                            return Promise.resolve(addValues.length > 0 &&\n                                coreTable.mutate({ trans: trans, type: 'add', values: addValues })\n                                    .then(function (res) {\n                                    for (var pos in res.failures) {\n                                        deleteKeys.splice(parseInt(pos), 1);\n                                    }\n                                    applyMutateResult(addValues.length, res);\n                                })).then(function () { return (putValues.length > 0 || (criteria && typeof changes === 'object')) &&\n                                coreTable.mutate({\n                                    trans: trans,\n                                    type: 'put',\n                                    keys: putKeys,\n                                    values: putValues,\n                                    criteria: criteria,\n                                    changeSpec: typeof changes !== 'function'\n                                        && changes,\n                                    isAdditionalChunk: offset > 0\n                                }).then(function (res) { return applyMutateResult(putValues.length, res); }); }).then(function () { return (deleteKeys.length > 0 || (criteria && changes === deleteCallback)) &&\n                                coreTable.mutate({\n                                    trans: trans,\n                                    type: 'delete',\n                                    keys: deleteKeys,\n                                    criteria: criteria,\n                                    isAdditionalChunk: offset > 0\n                                }).then(function (res) { return applyMutateResult(deleteKeys.length, res); }); }).then(function () {\n                                return keys.length > offset + count && nextChunk(offset + limit);\n                            });\n                        });\n                    };\n                    return nextChunk(0).then(function () {\n                        if (totalFailures.length > 0)\n                            throw new ModifyError(\"Error modifying one or more objects\", totalFailures, successCount, failedKeys);\n                        return keys.length;\n                    });\n                });\n            });\n        };\n        Collection.prototype.delete = function () {\n            var ctx = this._ctx, range = ctx.range;\n            if (isPlainKeyRange(ctx) &&\n                (ctx.isPrimKey || range.type === 3 ))\n             {\n                return this._write(function (trans) {\n                    var primaryKey = ctx.table.core.schema.primaryKey;\n                    var coreRange = range;\n                    return ctx.table.core.count({ trans: trans, query: { index: primaryKey, range: coreRange } }).then(function (count) {\n                        return ctx.table.core.mutate({ trans: trans, type: 'deleteRange', range: coreRange })\n                            .then(function (_a) {\n                            var failures = _a.failures; _a.lastResult; _a.results; var numFailures = _a.numFailures;\n                            if (numFailures)\n                                throw new ModifyError(\"Could not delete some values\", Object.keys(failures).map(function (pos) { return failures[pos]; }), count - numFailures);\n                            return count - numFailures;\n                        });\n                    });\n                });\n            }\n            return this.modify(deleteCallback);\n        };\n        return Collection;\n    }());\n    var deleteCallback = function (value, ctx) { return ctx.value = null; };\n\n    function createCollectionConstructor(db) {\n        return makeClassConstructor(Collection.prototype, function Collection(whereClause, keyRangeGenerator) {\n            this.db = db;\n            var keyRange = AnyRange, error = null;\n            if (keyRangeGenerator)\n                try {\n                    keyRange = keyRangeGenerator();\n                }\n                catch (ex) {\n                    error = ex;\n                }\n            var whereCtx = whereClause._ctx;\n            var table = whereCtx.table;\n            var readingHook = table.hook.reading.fire;\n            this._ctx = {\n                table: table,\n                index: whereCtx.index,\n                isPrimKey: (!whereCtx.index || (table.schema.primKey.keyPath && whereCtx.index === table.schema.primKey.name)),\n                range: keyRange,\n                keysOnly: false,\n                dir: \"next\",\n                unique: \"\",\n                algorithm: null,\n                filter: null,\n                replayFilter: null,\n                justLimit: true,\n                isMatch: null,\n                offset: 0,\n                limit: Infinity,\n                error: error,\n                or: whereCtx.or,\n                valueMapper: readingHook !== mirror ? readingHook : null\n            };\n        });\n    }\n\n    function simpleCompare(a, b) {\n        return a < b ? -1 : a === b ? 0 : 1;\n    }\n    function simpleCompareReverse(a, b) {\n        return a > b ? -1 : a === b ? 0 : 1;\n    }\n\n    function fail(collectionOrWhereClause, err, T) {\n        var collection = collectionOrWhereClause instanceof WhereClause ?\n            new collectionOrWhereClause.Collection(collectionOrWhereClause) :\n            collectionOrWhereClause;\n        collection._ctx.error = T ? new T(err) : new TypeError(err);\n        return collection;\n    }\n    function emptyCollection(whereClause) {\n        return new whereClause.Collection(whereClause, function () { return rangeEqual(\"\"); }).limit(0);\n    }\n    function upperFactory(dir) {\n        return dir === \"next\" ?\n            function (s) { return s.toUpperCase(); } :\n            function (s) { return s.toLowerCase(); };\n    }\n    function lowerFactory(dir) {\n        return dir === \"next\" ?\n            function (s) { return s.toLowerCase(); } :\n            function (s) { return s.toUpperCase(); };\n    }\n    function nextCasing(key, lowerKey, upperNeedle, lowerNeedle, cmp, dir) {\n        var length = Math.min(key.length, lowerNeedle.length);\n        var llp = -1;\n        for (var i = 0; i < length; ++i) {\n            var lwrKeyChar = lowerKey[i];\n            if (lwrKeyChar !== lowerNeedle[i]) {\n                if (cmp(key[i], upperNeedle[i]) < 0)\n                    return key.substr(0, i) + upperNeedle[i] + upperNeedle.substr(i + 1);\n                if (cmp(key[i], lowerNeedle[i]) < 0)\n                    return key.substr(0, i) + lowerNeedle[i] + upperNeedle.substr(i + 1);\n                if (llp >= 0)\n                    return key.substr(0, llp) + lowerKey[llp] + upperNeedle.substr(llp + 1);\n                return null;\n            }\n            if (cmp(key[i], lwrKeyChar) < 0)\n                llp = i;\n        }\n        if (length < lowerNeedle.length && dir === \"next\")\n            return key + upperNeedle.substr(key.length);\n        if (length < key.length && dir === \"prev\")\n            return key.substr(0, upperNeedle.length);\n        return (llp < 0 ? null : key.substr(0, llp) + lowerNeedle[llp] + upperNeedle.substr(llp + 1));\n    }\n    function addIgnoreCaseAlgorithm(whereClause, match, needles, suffix) {\n        var upper, lower, compare, upperNeedles, lowerNeedles, direction, nextKeySuffix, needlesLen = needles.length;\n        if (!needles.every(function (s) { return typeof s === 'string'; })) {\n            return fail(whereClause, STRING_EXPECTED);\n        }\n        function initDirection(dir) {\n            upper = upperFactory(dir);\n            lower = lowerFactory(dir);\n            compare = (dir === \"next\" ? simpleCompare : simpleCompareReverse);\n            var needleBounds = needles.map(function (needle) {\n                return { lower: lower(needle), upper: upper(needle) };\n            }).sort(function (a, b) {\n                return compare(a.lower, b.lower);\n            });\n            upperNeedles = needleBounds.map(function (nb) { return nb.upper; });\n            lowerNeedles = needleBounds.map(function (nb) { return nb.lower; });\n            direction = dir;\n            nextKeySuffix = (dir === \"next\" ? \"\" : suffix);\n        }\n        initDirection(\"next\");\n        var c = new whereClause.Collection(whereClause, function () { return createRange(upperNeedles[0], lowerNeedles[needlesLen - 1] + suffix); });\n        c._ondirectionchange = function (direction) {\n            initDirection(direction);\n        };\n        var firstPossibleNeedle = 0;\n        c._addAlgorithm(function (cursor, advance, resolve) {\n            var key = cursor.key;\n            if (typeof key !== 'string')\n                return false;\n            var lowerKey = lower(key);\n            if (match(lowerKey, lowerNeedles, firstPossibleNeedle)) {\n                return true;\n            }\n            else {\n                var lowestPossibleCasing = null;\n                for (var i = firstPossibleNeedle; i < needlesLen; ++i) {\n                    var casing = nextCasing(key, lowerKey, upperNeedles[i], lowerNeedles[i], compare, direction);\n                    if (casing === null && lowestPossibleCasing === null)\n                        firstPossibleNeedle = i + 1;\n                    else if (lowestPossibleCasing === null || compare(lowestPossibleCasing, casing) > 0) {\n                        lowestPossibleCasing = casing;\n                    }\n                }\n                if (lowestPossibleCasing !== null) {\n                    advance(function () { cursor.continue(lowestPossibleCasing + nextKeySuffix); });\n                }\n                else {\n                    advance(resolve);\n                }\n                return false;\n            }\n        });\n        return c;\n    }\n    function createRange(lower, upper, lowerOpen, upperOpen) {\n        return {\n            type: 2 ,\n            lower: lower,\n            upper: upper,\n            lowerOpen: lowerOpen,\n            upperOpen: upperOpen\n        };\n    }\n    function rangeEqual(value) {\n        return {\n            type: 1 ,\n            lower: value,\n            upper: value\n        };\n    }\n\n    var WhereClause =  (function () {\n        function WhereClause() {\n        }\n        Object.defineProperty(WhereClause.prototype, \"Collection\", {\n            get: function () {\n                return this._ctx.table.db.Collection;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        WhereClause.prototype.between = function (lower, upper, includeLower, includeUpper) {\n            includeLower = includeLower !== false;\n            includeUpper = includeUpper === true;\n            try {\n                if ((this._cmp(lower, upper) > 0) ||\n                    (this._cmp(lower, upper) === 0 && (includeLower || includeUpper) && !(includeLower && includeUpper)))\n                    return emptyCollection(this);\n                return new this.Collection(this, function () { return createRange(lower, upper, !includeLower, !includeUpper); });\n            }\n            catch (e) {\n                return fail(this, INVALID_KEY_ARGUMENT);\n            }\n        };\n        WhereClause.prototype.equals = function (value) {\n            if (value == null)\n                return fail(this, INVALID_KEY_ARGUMENT);\n            return new this.Collection(this, function () { return rangeEqual(value); });\n        };\n        WhereClause.prototype.above = function (value) {\n            if (value == null)\n                return fail(this, INVALID_KEY_ARGUMENT);\n            return new this.Collection(this, function () { return createRange(value, undefined, true); });\n        };\n        WhereClause.prototype.aboveOrEqual = function (value) {\n            if (value == null)\n                return fail(this, INVALID_KEY_ARGUMENT);\n            return new this.Collection(this, function () { return createRange(value, undefined, false); });\n        };\n        WhereClause.prototype.below = function (value) {\n            if (value == null)\n                return fail(this, INVALID_KEY_ARGUMENT);\n            return new this.Collection(this, function () { return createRange(undefined, value, false, true); });\n        };\n        WhereClause.prototype.belowOrEqual = function (value) {\n            if (value == null)\n                return fail(this, INVALID_KEY_ARGUMENT);\n            return new this.Collection(this, function () { return createRange(undefined, value); });\n        };\n        WhereClause.prototype.startsWith = function (str) {\n            if (typeof str !== 'string')\n                return fail(this, STRING_EXPECTED);\n            return this.between(str, str + maxString, true, true);\n        };\n        WhereClause.prototype.startsWithIgnoreCase = function (str) {\n            if (str === \"\")\n                return this.startsWith(str);\n            return addIgnoreCaseAlgorithm(this, function (x, a) { return x.indexOf(a[0]) === 0; }, [str], maxString);\n        };\n        WhereClause.prototype.equalsIgnoreCase = function (str) {\n            return addIgnoreCaseAlgorithm(this, function (x, a) { return x === a[0]; }, [str], \"\");\n        };\n        WhereClause.prototype.anyOfIgnoreCase = function () {\n            var set = getArrayOf.apply(NO_CHAR_ARRAY, arguments);\n            if (set.length === 0)\n                return emptyCollection(this);\n            return addIgnoreCaseAlgorithm(this, function (x, a) { return a.indexOf(x) !== -1; }, set, \"\");\n        };\n        WhereClause.prototype.startsWithAnyOfIgnoreCase = function () {\n            var set = getArrayOf.apply(NO_CHAR_ARRAY, arguments);\n            if (set.length === 0)\n                return emptyCollection(this);\n            return addIgnoreCaseAlgorithm(this, function (x, a) { return a.some(function (n) { return x.indexOf(n) === 0; }); }, set, maxString);\n        };\n        WhereClause.prototype.anyOf = function () {\n            var _this = this;\n            var set = getArrayOf.apply(NO_CHAR_ARRAY, arguments);\n            var compare = this._cmp;\n            try {\n                set.sort(compare);\n            }\n            catch (e) {\n                return fail(this, INVALID_KEY_ARGUMENT);\n            }\n            if (set.length === 0)\n                return emptyCollection(this);\n            var c = new this.Collection(this, function () { return createRange(set[0], set[set.length - 1]); });\n            c._ondirectionchange = function (direction) {\n                compare = (direction === \"next\" ?\n                    _this._ascending :\n                    _this._descending);\n                set.sort(compare);\n            };\n            var i = 0;\n            c._addAlgorithm(function (cursor, advance, resolve) {\n                var key = cursor.key;\n                while (compare(key, set[i]) > 0) {\n                    ++i;\n                    if (i === set.length) {\n                        advance(resolve);\n                        return false;\n                    }\n                }\n                if (compare(key, set[i]) === 0) {\n                    return true;\n                }\n                else {\n                    advance(function () { cursor.continue(set[i]); });\n                    return false;\n                }\n            });\n            return c;\n        };\n        WhereClause.prototype.notEqual = function (value) {\n            return this.inAnyRange([[minKey, value], [value, this.db._maxKey]], { includeLowers: false, includeUppers: false });\n        };\n        WhereClause.prototype.noneOf = function () {\n            var set = getArrayOf.apply(NO_CHAR_ARRAY, arguments);\n            if (set.length === 0)\n                return new this.Collection(this);\n            try {\n                set.sort(this._ascending);\n            }\n            catch (e) {\n                return fail(this, INVALID_KEY_ARGUMENT);\n            }\n            var ranges = set.reduce(function (res, val) { return res ?\n                res.concat([[res[res.length - 1][1], val]]) :\n                [[minKey, val]]; }, null);\n            ranges.push([set[set.length - 1], this.db._maxKey]);\n            return this.inAnyRange(ranges, { includeLowers: false, includeUppers: false });\n        };\n        WhereClause.prototype.inAnyRange = function (ranges, options) {\n            var _this = this;\n            var cmp = this._cmp, ascending = this._ascending, descending = this._descending, min = this._min, max = this._max;\n            if (ranges.length === 0)\n                return emptyCollection(this);\n            if (!ranges.every(function (range) {\n                return range[0] !== undefined &&\n                    range[1] !== undefined &&\n                    ascending(range[0], range[1]) <= 0;\n            })) {\n                return fail(this, \"First argument to inAnyRange() must be an Array of two-value Arrays [lower,upper] where upper must not be lower than lower\", exceptions.InvalidArgument);\n            }\n            var includeLowers = !options || options.includeLowers !== false;\n            var includeUppers = options && options.includeUppers === true;\n            function addRange(ranges, newRange) {\n                var i = 0, l = ranges.length;\n                for (; i < l; ++i) {\n                    var range = ranges[i];\n                    if (cmp(newRange[0], range[1]) < 0 && cmp(newRange[1], range[0]) > 0) {\n                        range[0] = min(range[0], newRange[0]);\n                        range[1] = max(range[1], newRange[1]);\n                        break;\n                    }\n                }\n                if (i === l)\n                    ranges.push(newRange);\n                return ranges;\n            }\n            var sortDirection = ascending;\n            function rangeSorter(a, b) { return sortDirection(a[0], b[0]); }\n            var set;\n            try {\n                set = ranges.reduce(addRange, []);\n                set.sort(rangeSorter);\n            }\n            catch (ex) {\n                return fail(this, INVALID_KEY_ARGUMENT);\n            }\n            var rangePos = 0;\n            var keyIsBeyondCurrentEntry = includeUppers ?\n                function (key) { return ascending(key, set[rangePos][1]) > 0; } :\n                function (key) { return ascending(key, set[rangePos][1]) >= 0; };\n            var keyIsBeforeCurrentEntry = includeLowers ?\n                function (key) { return descending(key, set[rangePos][0]) > 0; } :\n                function (key) { return descending(key, set[rangePos][0]) >= 0; };\n            function keyWithinCurrentRange(key) {\n                return !keyIsBeyondCurrentEntry(key) && !keyIsBeforeCurrentEntry(key);\n            }\n            var checkKey = keyIsBeyondCurrentEntry;\n            var c = new this.Collection(this, function () { return createRange(set[0][0], set[set.length - 1][1], !includeLowers, !includeUppers); });\n            c._ondirectionchange = function (direction) {\n                if (direction === \"next\") {\n                    checkKey = keyIsBeyondCurrentEntry;\n                    sortDirection = ascending;\n                }\n                else {\n                    checkKey = keyIsBeforeCurrentEntry;\n                    sortDirection = descending;\n                }\n                set.sort(rangeSorter);\n            };\n            c._addAlgorithm(function (cursor, advance, resolve) {\n                var key = cursor.key;\n                while (checkKey(key)) {\n                    ++rangePos;\n                    if (rangePos === set.length) {\n                        advance(resolve);\n                        return false;\n                    }\n                }\n                if (keyWithinCurrentRange(key)) {\n                    return true;\n                }\n                else if (_this._cmp(key, set[rangePos][1]) === 0 || _this._cmp(key, set[rangePos][0]) === 0) {\n                    return false;\n                }\n                else {\n                    advance(function () {\n                        if (sortDirection === ascending)\n                            cursor.continue(set[rangePos][0]);\n                        else\n                            cursor.continue(set[rangePos][1]);\n                    });\n                    return false;\n                }\n            });\n            return c;\n        };\n        WhereClause.prototype.startsWithAnyOf = function () {\n            var set = getArrayOf.apply(NO_CHAR_ARRAY, arguments);\n            if (!set.every(function (s) { return typeof s === 'string'; })) {\n                return fail(this, \"startsWithAnyOf() only works with strings\");\n            }\n            if (set.length === 0)\n                return emptyCollection(this);\n            return this.inAnyRange(set.map(function (str) { return [str, str + maxString]; }));\n        };\n        return WhereClause;\n    }());\n\n    function createWhereClauseConstructor(db) {\n        return makeClassConstructor(WhereClause.prototype, function WhereClause(table, index, orCollection) {\n            this.db = db;\n            this._ctx = {\n                table: table,\n                index: index === \":id\" ? null : index,\n                or: orCollection\n            };\n            this._cmp = this._ascending = cmp;\n            this._descending = function (a, b) { return cmp(b, a); };\n            this._max = function (a, b) { return cmp(a, b) > 0 ? a : b; };\n            this._min = function (a, b) { return cmp(a, b) < 0 ? a : b; };\n            this._IDBKeyRange = db._deps.IDBKeyRange;\n            if (!this._IDBKeyRange)\n                throw new exceptions.MissingAPI();\n        });\n    }\n\n    function eventRejectHandler(reject) {\n        return wrap(function (event) {\n            preventDefault(event);\n            reject(event.target.error);\n            return false;\n        });\n    }\n    function preventDefault(event) {\n        if (event.stopPropagation)\n            event.stopPropagation();\n        if (event.preventDefault)\n            event.preventDefault();\n    }\n\n    var DEXIE_STORAGE_MUTATED_EVENT_NAME = 'storagemutated';\n    var STORAGE_MUTATED_DOM_EVENT_NAME = 'x-storagemutated-1';\n    var globalEvents = Events(null, DEXIE_STORAGE_MUTATED_EVENT_NAME);\n\n    var Transaction =  (function () {\n        function Transaction() {\n        }\n        Transaction.prototype._lock = function () {\n            assert(!PSD.global);\n            ++this._reculock;\n            if (this._reculock === 1 && !PSD.global)\n                PSD.lockOwnerFor = this;\n            return this;\n        };\n        Transaction.prototype._unlock = function () {\n            assert(!PSD.global);\n            if (--this._reculock === 0) {\n                if (!PSD.global)\n                    PSD.lockOwnerFor = null;\n                while (this._blockedFuncs.length > 0 && !this._locked()) {\n                    var fnAndPSD = this._blockedFuncs.shift();\n                    try {\n                        usePSD(fnAndPSD[1], fnAndPSD[0]);\n                    }\n                    catch (e) { }\n                }\n            }\n            return this;\n        };\n        Transaction.prototype._locked = function () {\n            return this._reculock && PSD.lockOwnerFor !== this;\n        };\n        Transaction.prototype.create = function (idbtrans) {\n            var _this = this;\n            if (!this.mode)\n                return this;\n            var idbdb = this.db.idbdb;\n            var dbOpenError = this.db._state.dbOpenError;\n            assert(!this.idbtrans);\n            if (!idbtrans && !idbdb) {\n                switch (dbOpenError && dbOpenError.name) {\n                    case \"DatabaseClosedError\":\n                        throw new exceptions.DatabaseClosed(dbOpenError);\n                    case \"MissingAPIError\":\n                        throw new exceptions.MissingAPI(dbOpenError.message, dbOpenError);\n                    default:\n                        throw new exceptions.OpenFailed(dbOpenError);\n                }\n            }\n            if (!this.active)\n                throw new exceptions.TransactionInactive();\n            assert(this._completion._state === null);\n            idbtrans = this.idbtrans = idbtrans ||\n                (this.db.core\n                    ? this.db.core.transaction(this.storeNames, this.mode, { durability: this.chromeTransactionDurability })\n                    : idbdb.transaction(this.storeNames, this.mode, { durability: this.chromeTransactionDurability }));\n            idbtrans.onerror = wrap(function (ev) {\n                preventDefault(ev);\n                _this._reject(idbtrans.error);\n            });\n            idbtrans.onabort = wrap(function (ev) {\n                preventDefault(ev);\n                _this.active && _this._reject(new exceptions.Abort(idbtrans.error));\n                _this.active = false;\n                _this.on(\"abort\").fire(ev);\n            });\n            idbtrans.oncomplete = wrap(function () {\n                _this.active = false;\n                _this._resolve();\n                if ('mutatedParts' in idbtrans) {\n                    globalEvents.storagemutated.fire(idbtrans[\"mutatedParts\"]);\n                }\n            });\n            return this;\n        };\n        Transaction.prototype._promise = function (mode, fn, bWriteLock) {\n            var _this = this;\n            if (mode === 'readwrite' && this.mode !== 'readwrite')\n                return rejection(new exceptions.ReadOnly(\"Transaction is readonly\"));\n            if (!this.active)\n                return rejection(new exceptions.TransactionInactive());\n            if (this._locked()) {\n                return new DexiePromise(function (resolve, reject) {\n                    _this._blockedFuncs.push([function () {\n                            _this._promise(mode, fn, bWriteLock).then(resolve, reject);\n                        }, PSD]);\n                });\n            }\n            else if (bWriteLock) {\n                return newScope(function () {\n                    var p = new DexiePromise(function (resolve, reject) {\n                        _this._lock();\n                        var rv = fn(resolve, reject, _this);\n                        if (rv && rv.then)\n                            rv.then(resolve, reject);\n                    });\n                    p.finally(function () { return _this._unlock(); });\n                    p._lib = true;\n                    return p;\n                });\n            }\n            else {\n                var p = new DexiePromise(function (resolve, reject) {\n                    var rv = fn(resolve, reject, _this);\n                    if (rv && rv.then)\n                        rv.then(resolve, reject);\n                });\n                p._lib = true;\n                return p;\n            }\n        };\n        Transaction.prototype._root = function () {\n            return this.parent ? this.parent._root() : this;\n        };\n        Transaction.prototype.waitFor = function (promiseLike) {\n            var root = this._root();\n            var promise = DexiePromise.resolve(promiseLike);\n            if (root._waitingFor) {\n                root._waitingFor = root._waitingFor.then(function () { return promise; });\n            }\n            else {\n                root._waitingFor = promise;\n                root._waitingQueue = [];\n                var store = root.idbtrans.objectStore(root.storeNames[0]);\n                (function spin() {\n                    ++root._spinCount;\n                    while (root._waitingQueue.length)\n                        (root._waitingQueue.shift())();\n                    if (root._waitingFor)\n                        store.get(-Infinity).onsuccess = spin;\n                }());\n            }\n            var currentWaitPromise = root._waitingFor;\n            return new DexiePromise(function (resolve, reject) {\n                promise.then(function (res) { return root._waitingQueue.push(wrap(resolve.bind(null, res))); }, function (err) { return root._waitingQueue.push(wrap(reject.bind(null, err))); }).finally(function () {\n                    if (root._waitingFor === currentWaitPromise) {\n                        root._waitingFor = null;\n                    }\n                });\n            });\n        };\n        Transaction.prototype.abort = function () {\n            if (this.active) {\n                this.active = false;\n                if (this.idbtrans)\n                    this.idbtrans.abort();\n                this._reject(new exceptions.Abort());\n            }\n        };\n        Transaction.prototype.table = function (tableName) {\n            var memoizedTables = (this._memoizedTables || (this._memoizedTables = {}));\n            if (hasOwn(memoizedTables, tableName))\n                return memoizedTables[tableName];\n            var tableSchema = this.schema[tableName];\n            if (!tableSchema) {\n                throw new exceptions.NotFound(\"Table \" + tableName + \" not part of transaction\");\n            }\n            var transactionBoundTable = new this.db.Table(tableName, tableSchema, this);\n            transactionBoundTable.core = this.db.core.table(tableName);\n            memoizedTables[tableName] = transactionBoundTable;\n            return transactionBoundTable;\n        };\n        return Transaction;\n    }());\n\n    function createTransactionConstructor(db) {\n        return makeClassConstructor(Transaction.prototype, function Transaction(mode, storeNames, dbschema, chromeTransactionDurability, parent) {\n            var _this = this;\n            this.db = db;\n            this.mode = mode;\n            this.storeNames = storeNames;\n            this.schema = dbschema;\n            this.chromeTransactionDurability = chromeTransactionDurability;\n            this.idbtrans = null;\n            this.on = Events(this, \"complete\", \"error\", \"abort\");\n            this.parent = parent || null;\n            this.active = true;\n            this._reculock = 0;\n            this._blockedFuncs = [];\n            this._resolve = null;\n            this._reject = null;\n            this._waitingFor = null;\n            this._waitingQueue = null;\n            this._spinCount = 0;\n            this._completion = new DexiePromise(function (resolve, reject) {\n                _this._resolve = resolve;\n                _this._reject = reject;\n            });\n            this._completion.then(function () {\n                _this.active = false;\n                _this.on.complete.fire();\n            }, function (e) {\n                var wasActive = _this.active;\n                _this.active = false;\n                _this.on.error.fire(e);\n                _this.parent ?\n                    _this.parent._reject(e) :\n                    wasActive && _this.idbtrans && _this.idbtrans.abort();\n                return rejection(e);\n            });\n        });\n    }\n\n    function createIndexSpec(name, keyPath, unique, multi, auto, compound, isPrimKey) {\n        return {\n            name: name,\n            keyPath: keyPath,\n            unique: unique,\n            multi: multi,\n            auto: auto,\n            compound: compound,\n            src: (unique && !isPrimKey ? '&' : '') + (multi ? '*' : '') + (auto ? \"++\" : \"\") + nameFromKeyPath(keyPath)\n        };\n    }\n    function nameFromKeyPath(keyPath) {\n        return typeof keyPath === 'string' ?\n            keyPath :\n            keyPath ? ('[' + [].join.call(keyPath, '+') + ']') : \"\";\n    }\n\n    function createTableSchema(name, primKey, indexes) {\n        return {\n            name: name,\n            primKey: primKey,\n            indexes: indexes,\n            mappedClass: null,\n            idxByName: arrayToObject(indexes, function (index) { return [index.name, index]; })\n        };\n    }\n\n    function safariMultiStoreFix(storeNames) {\n        return storeNames.length === 1 ? storeNames[0] : storeNames;\n    }\n    var getMaxKey = function (IdbKeyRange) {\n        try {\n            IdbKeyRange.only([[]]);\n            getMaxKey = function () { return [[]]; };\n            return [[]];\n        }\n        catch (e) {\n            getMaxKey = function () { return maxString; };\n            return maxString;\n        }\n    };\n\n    function getKeyExtractor(keyPath) {\n        if (keyPath == null) {\n            return function () { return undefined; };\n        }\n        else if (typeof keyPath === 'string') {\n            return getSinglePathKeyExtractor(keyPath);\n        }\n        else {\n            return function (obj) { return getByKeyPath(obj, keyPath); };\n        }\n    }\n    function getSinglePathKeyExtractor(keyPath) {\n        var split = keyPath.split('.');\n        if (split.length === 1) {\n            return function (obj) { return obj[keyPath]; };\n        }\n        else {\n            return function (obj) { return getByKeyPath(obj, keyPath); };\n        }\n    }\n\n    function arrayify(arrayLike) {\n        return [].slice.call(arrayLike);\n    }\n    var _id_counter = 0;\n    function getKeyPathAlias(keyPath) {\n        return keyPath == null ?\n            \":id\" :\n            typeof keyPath === 'string' ?\n                keyPath :\n                \"[\".concat(keyPath.join('+'), \"]\");\n    }\n    function createDBCore(db, IdbKeyRange, tmpTrans) {\n        function extractSchema(db, trans) {\n            var tables = arrayify(db.objectStoreNames);\n            return {\n                schema: {\n                    name: db.name,\n                    tables: tables.map(function (table) { return trans.objectStore(table); }).map(function (store) {\n                        var keyPath = store.keyPath, autoIncrement = store.autoIncrement;\n                        var compound = isArray(keyPath);\n                        var outbound = keyPath == null;\n                        var indexByKeyPath = {};\n                        var result = {\n                            name: store.name,\n                            primaryKey: {\n                                name: null,\n                                isPrimaryKey: true,\n                                outbound: outbound,\n                                compound: compound,\n                                keyPath: keyPath,\n                                autoIncrement: autoIncrement,\n                                unique: true,\n                                extractKey: getKeyExtractor(keyPath)\n                            },\n                            indexes: arrayify(store.indexNames).map(function (indexName) { return store.index(indexName); })\n                                .map(function (index) {\n                                var name = index.name, unique = index.unique, multiEntry = index.multiEntry, keyPath = index.keyPath;\n                                var compound = isArray(keyPath);\n                                var result = {\n                                    name: name,\n                                    compound: compound,\n                                    keyPath: keyPath,\n                                    unique: unique,\n                                    multiEntry: multiEntry,\n                                    extractKey: getKeyExtractor(keyPath)\n                                };\n                                indexByKeyPath[getKeyPathAlias(keyPath)] = result;\n                                return result;\n                            }),\n                            getIndexByKeyPath: function (keyPath) { return indexByKeyPath[getKeyPathAlias(keyPath)]; }\n                        };\n                        indexByKeyPath[\":id\"] = result.primaryKey;\n                        if (keyPath != null) {\n                            indexByKeyPath[getKeyPathAlias(keyPath)] = result.primaryKey;\n                        }\n                        return result;\n                    })\n                },\n                hasGetAll: tables.length > 0 && ('getAll' in trans.objectStore(tables[0])) &&\n                    !(typeof navigator !== 'undefined' && /Safari/.test(navigator.userAgent) &&\n                        !/(Chrome\\/|Edge\\/)/.test(navigator.userAgent) &&\n                        [].concat(navigator.userAgent.match(/Safari\\/(\\d*)/))[1] < 604)\n            };\n        }\n        function makeIDBKeyRange(range) {\n            if (range.type === 3 )\n                return null;\n            if (range.type === 4 )\n                throw new Error(\"Cannot convert never type to IDBKeyRange\");\n            var lower = range.lower, upper = range.upper, lowerOpen = range.lowerOpen, upperOpen = range.upperOpen;\n            var idbRange = lower === undefined ?\n                upper === undefined ?\n                    null :\n                    IdbKeyRange.upperBound(upper, !!upperOpen) :\n                upper === undefined ?\n                    IdbKeyRange.lowerBound(lower, !!lowerOpen) :\n                    IdbKeyRange.bound(lower, upper, !!lowerOpen, !!upperOpen);\n            return idbRange;\n        }\n        function createDbCoreTable(tableSchema) {\n            var tableName = tableSchema.name;\n            function mutate(_a) {\n                var trans = _a.trans, type = _a.type, keys = _a.keys, values = _a.values, range = _a.range;\n                return new Promise(function (resolve, reject) {\n                    resolve = wrap(resolve);\n                    var store = trans.objectStore(tableName);\n                    var outbound = store.keyPath == null;\n                    var isAddOrPut = type === \"put\" || type === \"add\";\n                    if (!isAddOrPut && type !== 'delete' && type !== 'deleteRange')\n                        throw new Error(\"Invalid operation type: \" + type);\n                    var length = (keys || values || { length: 1 }).length;\n                    if (keys && values && keys.length !== values.length) {\n                        throw new Error(\"Given keys array must have same length as given values array.\");\n                    }\n                    if (length === 0)\n                        return resolve({ numFailures: 0, failures: {}, results: [], lastResult: undefined });\n                    var req;\n                    var reqs = [];\n                    var failures = [];\n                    var numFailures = 0;\n                    var errorHandler = function (event) {\n                        ++numFailures;\n                        preventDefault(event);\n                    };\n                    if (type === 'deleteRange') {\n                        if (range.type === 4 )\n                            return resolve({ numFailures: numFailures, failures: failures, results: [], lastResult: undefined });\n                        if (range.type === 3 )\n                            reqs.push(req = store.clear());\n                        else\n                            reqs.push(req = store.delete(makeIDBKeyRange(range)));\n                    }\n                    else {\n                        var _a = isAddOrPut ?\n                            outbound ?\n                                [values, keys] :\n                                [values, null] :\n                            [keys, null], args1 = _a[0], args2 = _a[1];\n                        if (isAddOrPut) {\n                            for (var i = 0; i < length; ++i) {\n                                reqs.push(req = (args2 && args2[i] !== undefined ?\n                                    store[type](args1[i], args2[i]) :\n                                    store[type](args1[i])));\n                                req.onerror = errorHandler;\n                            }\n                        }\n                        else {\n                            for (var i = 0; i < length; ++i) {\n                                reqs.push(req = store[type](args1[i]));\n                                req.onerror = errorHandler;\n                            }\n                        }\n                    }\n                    var done = function (event) {\n                        var lastResult = event.target.result;\n                        reqs.forEach(function (req, i) { return req.error != null && (failures[i] = req.error); });\n                        resolve({\n                            numFailures: numFailures,\n                            failures: failures,\n                            results: type === \"delete\" ? keys : reqs.map(function (req) { return req.result; }),\n                            lastResult: lastResult\n                        });\n                    };\n                    req.onerror = function (event) {\n                        errorHandler(event);\n                        done(event);\n                    };\n                    req.onsuccess = done;\n                });\n            }\n            function openCursor(_a) {\n                var trans = _a.trans, values = _a.values, query = _a.query, reverse = _a.reverse, unique = _a.unique;\n                return new Promise(function (resolve, reject) {\n                    resolve = wrap(resolve);\n                    var index = query.index, range = query.range;\n                    var store = trans.objectStore(tableName);\n                    var source = index.isPrimaryKey ?\n                        store :\n                        store.index(index.name);\n                    var direction = reverse ?\n                        unique ?\n                            \"prevunique\" :\n                            \"prev\" :\n                        unique ?\n                            \"nextunique\" :\n                            \"next\";\n                    var req = values || !('openKeyCursor' in source) ?\n                        source.openCursor(makeIDBKeyRange(range), direction) :\n                        source.openKeyCursor(makeIDBKeyRange(range), direction);\n                    req.onerror = eventRejectHandler(reject);\n                    req.onsuccess = wrap(function (ev) {\n                        var cursor = req.result;\n                        if (!cursor) {\n                            resolve(null);\n                            return;\n                        }\n                        cursor.___id = ++_id_counter;\n                        cursor.done = false;\n                        var _cursorContinue = cursor.continue.bind(cursor);\n                        var _cursorContinuePrimaryKey = cursor.continuePrimaryKey;\n                        if (_cursorContinuePrimaryKey)\n                            _cursorContinuePrimaryKey = _cursorContinuePrimaryKey.bind(cursor);\n                        var _cursorAdvance = cursor.advance.bind(cursor);\n                        var doThrowCursorIsNotStarted = function () { throw new Error(\"Cursor not started\"); };\n                        var doThrowCursorIsStopped = function () { throw new Error(\"Cursor not stopped\"); };\n                        cursor.trans = trans;\n                        cursor.stop = cursor.continue = cursor.continuePrimaryKey = cursor.advance = doThrowCursorIsNotStarted;\n                        cursor.fail = wrap(reject);\n                        cursor.next = function () {\n                            var _this = this;\n                            var gotOne = 1;\n                            return this.start(function () { return gotOne-- ? _this.continue() : _this.stop(); }).then(function () { return _this; });\n                        };\n                        cursor.start = function (callback) {\n                            var iterationPromise = new Promise(function (resolveIteration, rejectIteration) {\n                                resolveIteration = wrap(resolveIteration);\n                                req.onerror = eventRejectHandler(rejectIteration);\n                                cursor.fail = rejectIteration;\n                                cursor.stop = function (value) {\n                                    cursor.stop = cursor.continue = cursor.continuePrimaryKey = cursor.advance = doThrowCursorIsStopped;\n                                    resolveIteration(value);\n                                };\n                            });\n                            var guardedCallback = function () {\n                                if (req.result) {\n                                    try {\n                                        callback();\n                                    }\n                                    catch (err) {\n                                        cursor.fail(err);\n                                    }\n                                }\n                                else {\n                                    cursor.done = true;\n                                    cursor.start = function () { throw new Error(\"Cursor behind last entry\"); };\n                                    cursor.stop();\n                                }\n                            };\n                            req.onsuccess = wrap(function (ev) {\n                                req.onsuccess = guardedCallback;\n                                guardedCallback();\n                            });\n                            cursor.continue = _cursorContinue;\n                            cursor.continuePrimaryKey = _cursorContinuePrimaryKey;\n                            cursor.advance = _cursorAdvance;\n                            guardedCallback();\n                            return iterationPromise;\n                        };\n                        resolve(cursor);\n                    }, reject);\n                });\n            }\n            function query(hasGetAll) {\n                return function (request) {\n                    return new Promise(function (resolve, reject) {\n                        resolve = wrap(resolve);\n                        var trans = request.trans, values = request.values, limit = request.limit, query = request.query;\n                        var nonInfinitLimit = limit === Infinity ? undefined : limit;\n                        var index = query.index, range = query.range;\n                        var store = trans.objectStore(tableName);\n                        var source = index.isPrimaryKey ? store : store.index(index.name);\n                        var idbKeyRange = makeIDBKeyRange(range);\n                        if (limit === 0)\n                            return resolve({ result: [] });\n                        if (hasGetAll) {\n                            var req = values ?\n                                source.getAll(idbKeyRange, nonInfinitLimit) :\n                                source.getAllKeys(idbKeyRange, nonInfinitLimit);\n                            req.onsuccess = function (event) { return resolve({ result: event.target.result }); };\n                            req.onerror = eventRejectHandler(reject);\n                        }\n                        else {\n                            var count_1 = 0;\n                            var req_1 = values || !('openKeyCursor' in source) ?\n                                source.openCursor(idbKeyRange) :\n                                source.openKeyCursor(idbKeyRange);\n                            var result_1 = [];\n                            req_1.onsuccess = function (event) {\n                                var cursor = req_1.result;\n                                if (!cursor)\n                                    return resolve({ result: result_1 });\n                                result_1.push(values ? cursor.value : cursor.primaryKey);\n                                if (++count_1 === limit)\n                                    return resolve({ result: result_1 });\n                                cursor.continue();\n                            };\n                            req_1.onerror = eventRejectHandler(reject);\n                        }\n                    });\n                };\n            }\n            return {\n                name: tableName,\n                schema: tableSchema,\n                mutate: mutate,\n                getMany: function (_a) {\n                    var trans = _a.trans, keys = _a.keys;\n                    return new Promise(function (resolve, reject) {\n                        resolve = wrap(resolve);\n                        var store = trans.objectStore(tableName);\n                        var length = keys.length;\n                        var result = new Array(length);\n                        var keyCount = 0;\n                        var callbackCount = 0;\n                        var req;\n                        var successHandler = function (event) {\n                            var req = event.target;\n                            if ((result[req._pos] = req.result) != null)\n                                ;\n                            if (++callbackCount === keyCount)\n                                resolve(result);\n                        };\n                        var errorHandler = eventRejectHandler(reject);\n                        for (var i = 0; i < length; ++i) {\n                            var key = keys[i];\n                            if (key != null) {\n                                req = store.get(keys[i]);\n                                req._pos = i;\n                                req.onsuccess = successHandler;\n                                req.onerror = errorHandler;\n                                ++keyCount;\n                            }\n                        }\n                        if (keyCount === 0)\n                            resolve(result);\n                    });\n                },\n                get: function (_a) {\n                    var trans = _a.trans, key = _a.key;\n                    return new Promise(function (resolve, reject) {\n                        resolve = wrap(resolve);\n                        var store = trans.objectStore(tableName);\n                        var req = store.get(key);\n                        req.onsuccess = function (event) { return resolve(event.target.result); };\n                        req.onerror = eventRejectHandler(reject);\n                    });\n                },\n                query: query(hasGetAll),\n                openCursor: openCursor,\n                count: function (_a) {\n                    var query = _a.query, trans = _a.trans;\n                    var index = query.index, range = query.range;\n                    return new Promise(function (resolve, reject) {\n                        var store = trans.objectStore(tableName);\n                        var source = index.isPrimaryKey ? store : store.index(index.name);\n                        var idbKeyRange = makeIDBKeyRange(range);\n                        var req = idbKeyRange ? source.count(idbKeyRange) : source.count();\n                        req.onsuccess = wrap(function (ev) { return resolve(ev.target.result); });\n                        req.onerror = eventRejectHandler(reject);\n                    });\n                }\n            };\n        }\n        var _a = extractSchema(db, tmpTrans), schema = _a.schema, hasGetAll = _a.hasGetAll;\n        var tables = schema.tables.map(function (tableSchema) { return createDbCoreTable(tableSchema); });\n        var tableMap = {};\n        tables.forEach(function (table) { return tableMap[table.name] = table; });\n        return {\n            stack: \"dbcore\",\n            transaction: db.transaction.bind(db),\n            table: function (name) {\n                var result = tableMap[name];\n                if (!result)\n                    throw new Error(\"Table '\".concat(name, \"' not found\"));\n                return tableMap[name];\n            },\n            MIN_KEY: -Infinity,\n            MAX_KEY: getMaxKey(IdbKeyRange),\n            schema: schema\n        };\n    }\n\n    function createMiddlewareStack(stackImpl, middlewares) {\n        return middlewares.reduce(function (down, _a) {\n            var create = _a.create;\n            return (__assign(__assign({}, down), create(down)));\n        }, stackImpl);\n    }\n    function createMiddlewareStacks(middlewares, idbdb, _a, tmpTrans) {\n        var IDBKeyRange = _a.IDBKeyRange; _a.indexedDB;\n        var dbcore = createMiddlewareStack(createDBCore(idbdb, IDBKeyRange, tmpTrans), middlewares.dbcore);\n        return {\n            dbcore: dbcore\n        };\n    }\n    function generateMiddlewareStacks(db, tmpTrans) {\n        var idbdb = tmpTrans.db;\n        var stacks = createMiddlewareStacks(db._middlewares, idbdb, db._deps, tmpTrans);\n        db.core = stacks.dbcore;\n        db.tables.forEach(function (table) {\n            var tableName = table.name;\n            if (db.core.schema.tables.some(function (tbl) { return tbl.name === tableName; })) {\n                table.core = db.core.table(tableName);\n                if (db[tableName] instanceof db.Table) {\n                    db[tableName].core = table.core;\n                }\n            }\n        });\n    }\n\n    function setApiOnPlace(db, objs, tableNames, dbschema) {\n        tableNames.forEach(function (tableName) {\n            var schema = dbschema[tableName];\n            objs.forEach(function (obj) {\n                var propDesc = getPropertyDescriptor(obj, tableName);\n                if (!propDesc || (\"value\" in propDesc && propDesc.value === undefined)) {\n                    if (obj === db.Transaction.prototype || obj instanceof db.Transaction) {\n                        setProp(obj, tableName, {\n                            get: function () { return this.table(tableName); },\n                            set: function (value) {\n                                defineProperty(this, tableName, { value: value, writable: true, configurable: true, enumerable: true });\n                            }\n                        });\n                    }\n                    else {\n                        obj[tableName] = new db.Table(tableName, schema);\n                    }\n                }\n            });\n        });\n    }\n    function removeTablesApi(db, objs) {\n        objs.forEach(function (obj) {\n            for (var key in obj) {\n                if (obj[key] instanceof db.Table)\n                    delete obj[key];\n            }\n        });\n    }\n    function lowerVersionFirst(a, b) {\n        return a._cfg.version - b._cfg.version;\n    }\n    function runUpgraders(db, oldVersion, idbUpgradeTrans, reject) {\n        var globalSchema = db._dbSchema;\n        if (idbUpgradeTrans.objectStoreNames.contains('$meta') && !globalSchema.$meta) {\n            globalSchema.$meta = createTableSchema(\"$meta\", parseIndexSyntax(\"\")[0], []);\n            db._storeNames.push('$meta');\n        }\n        var trans = db._createTransaction('readwrite', db._storeNames, globalSchema);\n        trans.create(idbUpgradeTrans);\n        trans._completion.catch(reject);\n        var rejectTransaction = trans._reject.bind(trans);\n        var transless = PSD.transless || PSD;\n        newScope(function () {\n            PSD.trans = trans;\n            PSD.transless = transless;\n            if (oldVersion === 0) {\n                keys(globalSchema).forEach(function (tableName) {\n                    createTable(idbUpgradeTrans, tableName, globalSchema[tableName].primKey, globalSchema[tableName].indexes);\n                });\n                generateMiddlewareStacks(db, idbUpgradeTrans);\n                DexiePromise.follow(function () { return db.on.populate.fire(trans); }).catch(rejectTransaction);\n            }\n            else {\n                generateMiddlewareStacks(db, idbUpgradeTrans);\n                return getExistingVersion(db, trans, oldVersion)\n                    .then(function (oldVersion) { return updateTablesAndIndexes(db, oldVersion, trans, idbUpgradeTrans); })\n                    .catch(rejectTransaction);\n            }\n        });\n    }\n    function patchCurrentVersion(db, idbUpgradeTrans) {\n        createMissingTables(db._dbSchema, idbUpgradeTrans);\n        if (idbUpgradeTrans.db.version % 10 === 0 && !idbUpgradeTrans.objectStoreNames.contains('$meta')) {\n            idbUpgradeTrans.db.createObjectStore('$meta').add(Math.ceil((idbUpgradeTrans.db.version / 10) - 1), 'version');\n        }\n        var globalSchema = buildGlobalSchema(db, db.idbdb, idbUpgradeTrans);\n        adjustToExistingIndexNames(db, db._dbSchema, idbUpgradeTrans);\n        var diff = getSchemaDiff(globalSchema, db._dbSchema);\n        var _loop_1 = function (tableChange) {\n            if (tableChange.change.length || tableChange.recreate) {\n                console.warn(\"Unable to patch indexes of table \".concat(tableChange.name, \" because it has changes on the type of index or primary key.\"));\n                return { value: void 0 };\n            }\n            var store = idbUpgradeTrans.objectStore(tableChange.name);\n            tableChange.add.forEach(function (idx) {\n                if (debug)\n                    console.debug(\"Dexie upgrade patch: Creating missing index \".concat(tableChange.name, \".\").concat(idx.src));\n                addIndex(store, idx);\n            });\n        };\n        for (var _i = 0, _a = diff.change; _i < _a.length; _i++) {\n            var tableChange = _a[_i];\n            var state_1 = _loop_1(tableChange);\n            if (typeof state_1 === \"object\")\n                return state_1.value;\n        }\n    }\n    function getExistingVersion(db, trans, oldVersion) {\n        if (trans.storeNames.includes('$meta')) {\n            return trans.table('$meta').get('version').then(function (metaVersion) {\n                return metaVersion != null ? metaVersion : oldVersion;\n            });\n        }\n        else {\n            return DexiePromise.resolve(oldVersion);\n        }\n    }\n    function updateTablesAndIndexes(db, oldVersion, trans, idbUpgradeTrans) {\n        var queue = [];\n        var versions = db._versions;\n        var globalSchema = db._dbSchema = buildGlobalSchema(db, db.idbdb, idbUpgradeTrans);\n        var versToRun = versions.filter(function (v) { return v._cfg.version >= oldVersion; });\n        if (versToRun.length === 0) {\n            return DexiePromise.resolve();\n        }\n        versToRun.forEach(function (version) {\n            queue.push(function () {\n                var oldSchema = globalSchema;\n                var newSchema = version._cfg.dbschema;\n                adjustToExistingIndexNames(db, oldSchema, idbUpgradeTrans);\n                adjustToExistingIndexNames(db, newSchema, idbUpgradeTrans);\n                globalSchema = db._dbSchema = newSchema;\n                var diff = getSchemaDiff(oldSchema, newSchema);\n                diff.add.forEach(function (tuple) {\n                    createTable(idbUpgradeTrans, tuple[0], tuple[1].primKey, tuple[1].indexes);\n                });\n                diff.change.forEach(function (change) {\n                    if (change.recreate) {\n                        throw new exceptions.Upgrade(\"Not yet support for changing primary key\");\n                    }\n                    else {\n                        var store_1 = idbUpgradeTrans.objectStore(change.name);\n                        change.add.forEach(function (idx) { return addIndex(store_1, idx); });\n                        change.change.forEach(function (idx) {\n                            store_1.deleteIndex(idx.name);\n                            addIndex(store_1, idx);\n                        });\n                        change.del.forEach(function (idxName) { return store_1.deleteIndex(idxName); });\n                    }\n                });\n                var contentUpgrade = version._cfg.contentUpgrade;\n                if (contentUpgrade && version._cfg.version > oldVersion) {\n                    generateMiddlewareStacks(db, idbUpgradeTrans);\n                    trans._memoizedTables = {};\n                    var upgradeSchema_1 = shallowClone(newSchema);\n                    diff.del.forEach(function (table) {\n                        upgradeSchema_1[table] = oldSchema[table];\n                    });\n                    removeTablesApi(db, [db.Transaction.prototype]);\n                    setApiOnPlace(db, [db.Transaction.prototype], keys(upgradeSchema_1), upgradeSchema_1);\n                    trans.schema = upgradeSchema_1;\n                    var contentUpgradeIsAsync_1 = isAsyncFunction(contentUpgrade);\n                    if (contentUpgradeIsAsync_1) {\n                        incrementExpectedAwaits();\n                    }\n                    var returnValue_1;\n                    var promiseFollowed = DexiePromise.follow(function () {\n                        returnValue_1 = contentUpgrade(trans);\n                        if (returnValue_1) {\n                            if (contentUpgradeIsAsync_1) {\n                                var decrementor = decrementExpectedAwaits.bind(null, null);\n                                returnValue_1.then(decrementor, decrementor);\n                            }\n                        }\n                    });\n                    return (returnValue_1 && typeof returnValue_1.then === 'function' ?\n                        DexiePromise.resolve(returnValue_1) : promiseFollowed.then(function () { return returnValue_1; }));\n                }\n            });\n            queue.push(function (idbtrans) {\n                var newSchema = version._cfg.dbschema;\n                deleteRemovedTables(newSchema, idbtrans);\n                removeTablesApi(db, [db.Transaction.prototype]);\n                setApiOnPlace(db, [db.Transaction.prototype], db._storeNames, db._dbSchema);\n                trans.schema = db._dbSchema;\n            });\n            queue.push(function (idbtrans) {\n                if (db.idbdb.objectStoreNames.contains('$meta')) {\n                    if (Math.ceil(db.idbdb.version / 10) === version._cfg.version) {\n                        db.idbdb.deleteObjectStore('$meta');\n                        delete db._dbSchema.$meta;\n                        db._storeNames = db._storeNames.filter(function (name) { return name !== '$meta'; });\n                    }\n                    else {\n                        idbtrans.objectStore('$meta').put(version._cfg.version, 'version');\n                    }\n                }\n            });\n        });\n        function runQueue() {\n            return queue.length ? DexiePromise.resolve(queue.shift()(trans.idbtrans)).then(runQueue) :\n                DexiePromise.resolve();\n        }\n        return runQueue().then(function () {\n            createMissingTables(globalSchema, idbUpgradeTrans);\n        });\n    }\n    function getSchemaDiff(oldSchema, newSchema) {\n        var diff = {\n            del: [],\n            add: [],\n            change: []\n        };\n        var table;\n        for (table in oldSchema) {\n            if (!newSchema[table])\n                diff.del.push(table);\n        }\n        for (table in newSchema) {\n            var oldDef = oldSchema[table], newDef = newSchema[table];\n            if (!oldDef) {\n                diff.add.push([table, newDef]);\n            }\n            else {\n                var change = {\n                    name: table,\n                    def: newDef,\n                    recreate: false,\n                    del: [],\n                    add: [],\n                    change: []\n                };\n                if ((\n                '' + (oldDef.primKey.keyPath || '')) !== ('' + (newDef.primKey.keyPath || '')) ||\n                    (oldDef.primKey.auto !== newDef.primKey.auto)) {\n                    change.recreate = true;\n                    diff.change.push(change);\n                }\n                else {\n                    var oldIndexes = oldDef.idxByName;\n                    var newIndexes = newDef.idxByName;\n                    var idxName = void 0;\n                    for (idxName in oldIndexes) {\n                        if (!newIndexes[idxName])\n                            change.del.push(idxName);\n                    }\n                    for (idxName in newIndexes) {\n                        var oldIdx = oldIndexes[idxName], newIdx = newIndexes[idxName];\n                        if (!oldIdx)\n                            change.add.push(newIdx);\n                        else if (oldIdx.src !== newIdx.src)\n                            change.change.push(newIdx);\n                    }\n                    if (change.del.length > 0 || change.add.length > 0 || change.change.length > 0) {\n                        diff.change.push(change);\n                    }\n                }\n            }\n        }\n        return diff;\n    }\n    function createTable(idbtrans, tableName, primKey, indexes) {\n        var store = idbtrans.db.createObjectStore(tableName, primKey.keyPath ?\n            { keyPath: primKey.keyPath, autoIncrement: primKey.auto } :\n            { autoIncrement: primKey.auto });\n        indexes.forEach(function (idx) { return addIndex(store, idx); });\n        return store;\n    }\n    function createMissingTables(newSchema, idbtrans) {\n        keys(newSchema).forEach(function (tableName) {\n            if (!idbtrans.db.objectStoreNames.contains(tableName)) {\n                if (debug)\n                    console.debug('Dexie: Creating missing table', tableName);\n                createTable(idbtrans, tableName, newSchema[tableName].primKey, newSchema[tableName].indexes);\n            }\n        });\n    }\n    function deleteRemovedTables(newSchema, idbtrans) {\n        [].slice.call(idbtrans.db.objectStoreNames).forEach(function (storeName) {\n            return newSchema[storeName] == null && idbtrans.db.deleteObjectStore(storeName);\n        });\n    }\n    function addIndex(store, idx) {\n        store.createIndex(idx.name, idx.keyPath, { unique: idx.unique, multiEntry: idx.multi });\n    }\n    function buildGlobalSchema(db, idbdb, tmpTrans) {\n        var globalSchema = {};\n        var dbStoreNames = slice(idbdb.objectStoreNames, 0);\n        dbStoreNames.forEach(function (storeName) {\n            var store = tmpTrans.objectStore(storeName);\n            var keyPath = store.keyPath;\n            var primKey = createIndexSpec(nameFromKeyPath(keyPath), keyPath || \"\", true, false, !!store.autoIncrement, keyPath && typeof keyPath !== \"string\", true);\n            var indexes = [];\n            for (var j = 0; j < store.indexNames.length; ++j) {\n                var idbindex = store.index(store.indexNames[j]);\n                keyPath = idbindex.keyPath;\n                var index = createIndexSpec(idbindex.name, keyPath, !!idbindex.unique, !!idbindex.multiEntry, false, keyPath && typeof keyPath !== \"string\", false);\n                indexes.push(index);\n            }\n            globalSchema[storeName] = createTableSchema(storeName, primKey, indexes);\n        });\n        return globalSchema;\n    }\n    function readGlobalSchema(db, idbdb, tmpTrans) {\n        db.verno = idbdb.version / 10;\n        var globalSchema = db._dbSchema = buildGlobalSchema(db, idbdb, tmpTrans);\n        db._storeNames = slice(idbdb.objectStoreNames, 0);\n        setApiOnPlace(db, [db._allTables], keys(globalSchema), globalSchema);\n    }\n    function verifyInstalledSchema(db, tmpTrans) {\n        var installedSchema = buildGlobalSchema(db, db.idbdb, tmpTrans);\n        var diff = getSchemaDiff(installedSchema, db._dbSchema);\n        return !(diff.add.length || diff.change.some(function (ch) { return ch.add.length || ch.change.length; }));\n    }\n    function adjustToExistingIndexNames(db, schema, idbtrans) {\n        var storeNames = idbtrans.db.objectStoreNames;\n        for (var i = 0; i < storeNames.length; ++i) {\n            var storeName = storeNames[i];\n            var store = idbtrans.objectStore(storeName);\n            db._hasGetAll = 'getAll' in store;\n            for (var j = 0; j < store.indexNames.length; ++j) {\n                var indexName = store.indexNames[j];\n                var keyPath = store.index(indexName).keyPath;\n                var dexieName = typeof keyPath === 'string' ? keyPath : \"[\" + slice(keyPath).join('+') + \"]\";\n                if (schema[storeName]) {\n                    var indexSpec = schema[storeName].idxByName[dexieName];\n                    if (indexSpec) {\n                        indexSpec.name = indexName;\n                        delete schema[storeName].idxByName[dexieName];\n                        schema[storeName].idxByName[indexName] = indexSpec;\n                    }\n                }\n            }\n        }\n        if (typeof navigator !== 'undefined' && /Safari/.test(navigator.userAgent) &&\n            !/(Chrome\\/|Edge\\/)/.test(navigator.userAgent) &&\n            _global.WorkerGlobalScope && _global instanceof _global.WorkerGlobalScope &&\n            [].concat(navigator.userAgent.match(/Safari\\/(\\d*)/))[1] < 604) {\n            db._hasGetAll = false;\n        }\n    }\n    function parseIndexSyntax(primKeyAndIndexes) {\n        return primKeyAndIndexes.split(',').map(function (index, indexNum) {\n            index = index.trim();\n            var name = index.replace(/([&*]|\\+\\+)/g, \"\");\n            var keyPath = /^\\[/.test(name) ? name.match(/^\\[(.*)\\]$/)[1].split('+') : name;\n            return createIndexSpec(name, keyPath || null, /\\&/.test(index), /\\*/.test(index), /\\+\\+/.test(index), isArray(keyPath), indexNum === 0);\n        });\n    }\n\n    var Version =  (function () {\n        function Version() {\n        }\n        Version.prototype._parseStoresSpec = function (stores, outSchema) {\n            keys(stores).forEach(function (tableName) {\n                if (stores[tableName] !== null) {\n                    var indexes = parseIndexSyntax(stores[tableName]);\n                    var primKey = indexes.shift();\n                    primKey.unique = true;\n                    if (primKey.multi)\n                        throw new exceptions.Schema(\"Primary key cannot be multi-valued\");\n                    indexes.forEach(function (idx) {\n                        if (idx.auto)\n                            throw new exceptions.Schema(\"Only primary key can be marked as autoIncrement (++)\");\n                        if (!idx.keyPath)\n                            throw new exceptions.Schema(\"Index must have a name and cannot be an empty string\");\n                    });\n                    outSchema[tableName] = createTableSchema(tableName, primKey, indexes);\n                }\n            });\n        };\n        Version.prototype.stores = function (stores) {\n            var db = this.db;\n            this._cfg.storesSource = this._cfg.storesSource ?\n                extend(this._cfg.storesSource, stores) :\n                stores;\n            var versions = db._versions;\n            var storesSpec = {};\n            var dbschema = {};\n            versions.forEach(function (version) {\n                extend(storesSpec, version._cfg.storesSource);\n                dbschema = (version._cfg.dbschema = {});\n                version._parseStoresSpec(storesSpec, dbschema);\n            });\n            db._dbSchema = dbschema;\n            removeTablesApi(db, [db._allTables, db, db.Transaction.prototype]);\n            setApiOnPlace(db, [db._allTables, db, db.Transaction.prototype, this._cfg.tables], keys(dbschema), dbschema);\n            db._storeNames = keys(dbschema);\n            return this;\n        };\n        Version.prototype.upgrade = function (upgradeFunction) {\n            this._cfg.contentUpgrade = promisableChain(this._cfg.contentUpgrade || nop, upgradeFunction);\n            return this;\n        };\n        return Version;\n    }());\n\n    function createVersionConstructor(db) {\n        return makeClassConstructor(Version.prototype, function Version(versionNumber) {\n            this.db = db;\n            this._cfg = {\n                version: versionNumber,\n                storesSource: null,\n                dbschema: {},\n                tables: {},\n                contentUpgrade: null\n            };\n        });\n    }\n\n    function getDbNamesTable(indexedDB, IDBKeyRange) {\n        var dbNamesDB = indexedDB[\"_dbNamesDB\"];\n        if (!dbNamesDB) {\n            dbNamesDB = indexedDB[\"_dbNamesDB\"] = new Dexie$1(DBNAMES_DB, {\n                addons: [],\n                indexedDB: indexedDB,\n                IDBKeyRange: IDBKeyRange,\n            });\n            dbNamesDB.version(1).stores({ dbnames: \"name\" });\n        }\n        return dbNamesDB.table(\"dbnames\");\n    }\n    function hasDatabasesNative(indexedDB) {\n        return indexedDB && typeof indexedDB.databases === \"function\";\n    }\n    function getDatabaseNames(_a) {\n        var indexedDB = _a.indexedDB, IDBKeyRange = _a.IDBKeyRange;\n        return hasDatabasesNative(indexedDB)\n            ? Promise.resolve(indexedDB.databases()).then(function (infos) {\n                return infos\n                    .map(function (info) { return info.name; })\n                    .filter(function (name) { return name !== DBNAMES_DB; });\n            })\n            : getDbNamesTable(indexedDB, IDBKeyRange).toCollection().primaryKeys();\n    }\n    function _onDatabaseCreated(_a, name) {\n        var indexedDB = _a.indexedDB, IDBKeyRange = _a.IDBKeyRange;\n        !hasDatabasesNative(indexedDB) &&\n            name !== DBNAMES_DB &&\n            getDbNamesTable(indexedDB, IDBKeyRange).put({ name: name }).catch(nop);\n    }\n    function _onDatabaseDeleted(_a, name) {\n        var indexedDB = _a.indexedDB, IDBKeyRange = _a.IDBKeyRange;\n        !hasDatabasesNative(indexedDB) &&\n            name !== DBNAMES_DB &&\n            getDbNamesTable(indexedDB, IDBKeyRange).delete(name).catch(nop);\n    }\n\n    function vip(fn) {\n        return newScope(function () {\n            PSD.letThrough = true;\n            return fn();\n        });\n    }\n\n    function idbReady() {\n        var isSafari = !navigator.userAgentData &&\n            /Safari\\//.test(navigator.userAgent) &&\n            !/Chrom(e|ium)\\//.test(navigator.userAgent);\n        if (!isSafari || !indexedDB.databases)\n            return Promise.resolve();\n        var intervalId;\n        return new Promise(function (resolve) {\n            var tryIdb = function () { return indexedDB.databases().finally(resolve); };\n            intervalId = setInterval(tryIdb, 100);\n            tryIdb();\n        }).finally(function () { return clearInterval(intervalId); });\n    }\n\n    var _a;\n    function isEmptyRange(node) {\n        return !(\"from\" in node);\n    }\n    var RangeSet = function (fromOrTree, to) {\n        if (this) {\n            extend(this, arguments.length ? { d: 1, from: fromOrTree, to: arguments.length > 1 ? to : fromOrTree } : { d: 0 });\n        }\n        else {\n            var rv = new RangeSet();\n            if (fromOrTree && (\"d\" in fromOrTree)) {\n                extend(rv, fromOrTree);\n            }\n            return rv;\n        }\n    };\n    props(RangeSet.prototype, (_a = {\n            add: function (rangeSet) {\n                mergeRanges(this, rangeSet);\n                return this;\n            },\n            addKey: function (key) {\n                addRange(this, key, key);\n                return this;\n            },\n            addKeys: function (keys) {\n                var _this = this;\n                keys.forEach(function (key) { return addRange(_this, key, key); });\n                return this;\n            }\n        },\n        _a[iteratorSymbol] = function () {\n            return getRangeSetIterator(this);\n        },\n        _a));\n    function addRange(target, from, to) {\n        var diff = cmp(from, to);\n        if (isNaN(diff))\n            return;\n        if (diff > 0)\n            throw RangeError();\n        if (isEmptyRange(target))\n            return extend(target, { from: from, to: to, d: 1 });\n        var left = target.l;\n        var right = target.r;\n        if (cmp(to, target.from) < 0) {\n            left\n                ? addRange(left, from, to)\n                : (target.l = { from: from, to: to, d: 1, l: null, r: null });\n            return rebalance(target);\n        }\n        if (cmp(from, target.to) > 0) {\n            right\n                ? addRange(right, from, to)\n                : (target.r = { from: from, to: to, d: 1, l: null, r: null });\n            return rebalance(target);\n        }\n        if (cmp(from, target.from) < 0) {\n            target.from = from;\n            target.l = null;\n            target.d = right ? right.d + 1 : 1;\n        }\n        if (cmp(to, target.to) > 0) {\n            target.to = to;\n            target.r = null;\n            target.d = target.l ? target.l.d + 1 : 1;\n        }\n        var rightWasCutOff = !target.r;\n        if (left && !target.l) {\n            mergeRanges(target, left);\n        }\n        if (right && rightWasCutOff) {\n            mergeRanges(target, right);\n        }\n    }\n    function mergeRanges(target, newSet) {\n        function _addRangeSet(target, _a) {\n            var from = _a.from, to = _a.to, l = _a.l, r = _a.r;\n            addRange(target, from, to);\n            if (l)\n                _addRangeSet(target, l);\n            if (r)\n                _addRangeSet(target, r);\n        }\n        if (!isEmptyRange(newSet))\n            _addRangeSet(target, newSet);\n    }\n    function rangesOverlap(rangeSet1, rangeSet2) {\n        var i1 = getRangeSetIterator(rangeSet2);\n        var nextResult1 = i1.next();\n        if (nextResult1.done)\n            return false;\n        var a = nextResult1.value;\n        var i2 = getRangeSetIterator(rangeSet1);\n        var nextResult2 = i2.next(a.from);\n        var b = nextResult2.value;\n        while (!nextResult1.done && !nextResult2.done) {\n            if (cmp(b.from, a.to) <= 0 && cmp(b.to, a.from) >= 0)\n                return true;\n            cmp(a.from, b.from) < 0\n                ? (a = (nextResult1 = i1.next(b.from)).value)\n                : (b = (nextResult2 = i2.next(a.from)).value);\n        }\n        return false;\n    }\n    function getRangeSetIterator(node) {\n        var state = isEmptyRange(node) ? null : { s: 0, n: node };\n        return {\n            next: function (key) {\n                var keyProvided = arguments.length > 0;\n                while (state) {\n                    switch (state.s) {\n                        case 0:\n                            state.s = 1;\n                            if (keyProvided) {\n                                while (state.n.l && cmp(key, state.n.from) < 0)\n                                    state = { up: state, n: state.n.l, s: 1 };\n                            }\n                            else {\n                                while (state.n.l)\n                                    state = { up: state, n: state.n.l, s: 1 };\n                            }\n                        case 1:\n                            state.s = 2;\n                            if (!keyProvided || cmp(key, state.n.to) <= 0)\n                                return { value: state.n, done: false };\n                        case 2:\n                            if (state.n.r) {\n                                state.s = 3;\n                                state = { up: state, n: state.n.r, s: 0 };\n                                continue;\n                            }\n                        case 3:\n                            state = state.up;\n                    }\n                }\n                return { done: true };\n            },\n        };\n    }\n    function rebalance(target) {\n        var _a, _b;\n        var diff = (((_a = target.r) === null || _a === void 0 ? void 0 : _a.d) || 0) - (((_b = target.l) === null || _b === void 0 ? void 0 : _b.d) || 0);\n        var r = diff > 1 ? \"r\" : diff < -1 ? \"l\" : \"\";\n        if (r) {\n            var l = r === \"r\" ? \"l\" : \"r\";\n            var rootClone = __assign({}, target);\n            var oldRootRight = target[r];\n            target.from = oldRootRight.from;\n            target.to = oldRootRight.to;\n            target[r] = oldRootRight[r];\n            rootClone[r] = oldRootRight[l];\n            target[l] = rootClone;\n            rootClone.d = computeDepth(rootClone);\n        }\n        target.d = computeDepth(target);\n    }\n    function computeDepth(_a) {\n        var r = _a.r, l = _a.l;\n        return (r ? (l ? Math.max(r.d, l.d) : r.d) : l ? l.d : 0) + 1;\n    }\n\n    function extendObservabilitySet(target, newSet) {\n        keys(newSet).forEach(function (part) {\n            if (target[part])\n                mergeRanges(target[part], newSet[part]);\n            else\n                target[part] = cloneSimpleObjectTree(newSet[part]);\n        });\n        return target;\n    }\n\n    function obsSetsOverlap(os1, os2) {\n        return os1.all || os2.all || Object.keys(os1).some(function (key) { return os2[key] && rangesOverlap(os2[key], os1[key]); });\n    }\n\n    var cache = {};\n\n    var unsignaledParts = {};\n    var isTaskEnqueued = false;\n    function signalSubscribersLazily(part, optimistic) {\n        extendObservabilitySet(unsignaledParts, part);\n        if (!isTaskEnqueued) {\n            isTaskEnqueued = true;\n            setTimeout(function () {\n                isTaskEnqueued = false;\n                var parts = unsignaledParts;\n                unsignaledParts = {};\n                signalSubscribersNow(parts, false);\n            }, 0);\n        }\n    }\n    function signalSubscribersNow(updatedParts, deleteAffectedCacheEntries) {\n        if (deleteAffectedCacheEntries === void 0) { deleteAffectedCacheEntries = false; }\n        var queriesToSignal = new Set();\n        if (updatedParts.all) {\n            for (var _i = 0, _a = Object.values(cache); _i < _a.length; _i++) {\n                var tblCache = _a[_i];\n                collectTableSubscribers(tblCache, updatedParts, queriesToSignal, deleteAffectedCacheEntries);\n            }\n        }\n        else {\n            for (var key in updatedParts) {\n                var parts = /^idb\\:\\/\\/(.*)\\/(.*)\\//.exec(key);\n                if (parts) {\n                    var dbName = parts[1], tableName = parts[2];\n                    var tblCache = cache[\"idb://\".concat(dbName, \"/\").concat(tableName)];\n                    if (tblCache)\n                        collectTableSubscribers(tblCache, updatedParts, queriesToSignal, deleteAffectedCacheEntries);\n                }\n            }\n        }\n        queriesToSignal.forEach(function (requery) { return requery(); });\n    }\n    function collectTableSubscribers(tblCache, updatedParts, outQueriesToSignal, deleteAffectedCacheEntries) {\n        var updatedEntryLists = [];\n        for (var _i = 0, _a = Object.entries(tblCache.queries.query); _i < _a.length; _i++) {\n            var _b = _a[_i], indexName = _b[0], entries = _b[1];\n            var filteredEntries = [];\n            for (var _c = 0, entries_1 = entries; _c < entries_1.length; _c++) {\n                var entry = entries_1[_c];\n                if (obsSetsOverlap(updatedParts, entry.obsSet)) {\n                    entry.subscribers.forEach(function (requery) { return outQueriesToSignal.add(requery); });\n                }\n                else if (deleteAffectedCacheEntries) {\n                    filteredEntries.push(entry);\n                }\n            }\n            if (deleteAffectedCacheEntries)\n                updatedEntryLists.push([indexName, filteredEntries]);\n        }\n        if (deleteAffectedCacheEntries) {\n            for (var _d = 0, updatedEntryLists_1 = updatedEntryLists; _d < updatedEntryLists_1.length; _d++) {\n                var _e = updatedEntryLists_1[_d], indexName = _e[0], filteredEntries = _e[1];\n                tblCache.queries.query[indexName] = filteredEntries;\n            }\n        }\n    }\n\n    function dexieOpen(db) {\n        var state = db._state;\n        var indexedDB = db._deps.indexedDB;\n        if (state.isBeingOpened || db.idbdb)\n            return state.dbReadyPromise.then(function () { return state.dbOpenError ?\n                rejection(state.dbOpenError) :\n                db; });\n        state.isBeingOpened = true;\n        state.dbOpenError = null;\n        state.openComplete = false;\n        var openCanceller = state.openCanceller;\n        var nativeVerToOpen = Math.round(db.verno * 10);\n        var schemaPatchMode = false;\n        function throwIfCancelled() {\n            if (state.openCanceller !== openCanceller)\n                throw new exceptions.DatabaseClosed('db.open() was cancelled');\n        }\n        var resolveDbReady = state.dbReadyResolve,\n        upgradeTransaction = null, wasCreated = false;\n        var tryOpenDB = function () { return new DexiePromise(function (resolve, reject) {\n            throwIfCancelled();\n            if (!indexedDB)\n                throw new exceptions.MissingAPI();\n            var dbName = db.name;\n            var req = state.autoSchema || !nativeVerToOpen ?\n                indexedDB.open(dbName) :\n                indexedDB.open(dbName, nativeVerToOpen);\n            if (!req)\n                throw new exceptions.MissingAPI();\n            req.onerror = eventRejectHandler(reject);\n            req.onblocked = wrap(db._fireOnBlocked);\n            req.onupgradeneeded = wrap(function (e) {\n                upgradeTransaction = req.transaction;\n                if (state.autoSchema && !db._options.allowEmptyDB) {\n                    req.onerror = preventDefault;\n                    upgradeTransaction.abort();\n                    req.result.close();\n                    var delreq = indexedDB.deleteDatabase(dbName);\n                    delreq.onsuccess = delreq.onerror = wrap(function () {\n                        reject(new exceptions.NoSuchDatabase(\"Database \".concat(dbName, \" doesnt exist\")));\n                    });\n                }\n                else {\n                    upgradeTransaction.onerror = eventRejectHandler(reject);\n                    var oldVer = e.oldVersion > Math.pow(2, 62) ? 0 : e.oldVersion;\n                    wasCreated = oldVer < 1;\n                    db.idbdb = req.result;\n                    if (schemaPatchMode) {\n                        patchCurrentVersion(db, upgradeTransaction);\n                    }\n                    runUpgraders(db, oldVer / 10, upgradeTransaction, reject);\n                }\n            }, reject);\n            req.onsuccess = wrap(function () {\n                upgradeTransaction = null;\n                var idbdb = db.idbdb = req.result;\n                var objectStoreNames = slice(idbdb.objectStoreNames);\n                if (objectStoreNames.length > 0)\n                    try {\n                        var tmpTrans = idbdb.transaction(safariMultiStoreFix(objectStoreNames), 'readonly');\n                        if (state.autoSchema)\n                            readGlobalSchema(db, idbdb, tmpTrans);\n                        else {\n                            adjustToExistingIndexNames(db, db._dbSchema, tmpTrans);\n                            if (!verifyInstalledSchema(db, tmpTrans) && !schemaPatchMode) {\n                                console.warn(\"Dexie SchemaDiff: Schema was extended without increasing the number passed to db.version(). Dexie will add missing parts and increment native version number to workaround this.\");\n                                idbdb.close();\n                                nativeVerToOpen = idbdb.version + 1;\n                                schemaPatchMode = true;\n                                return resolve(tryOpenDB());\n                            }\n                        }\n                        generateMiddlewareStacks(db, tmpTrans);\n                    }\n                    catch (e) {\n                    }\n                connections.push(db);\n                idbdb.onversionchange = wrap(function (ev) {\n                    state.vcFired = true;\n                    db.on(\"versionchange\").fire(ev);\n                });\n                idbdb.onclose = wrap(function (ev) {\n                    db.on(\"close\").fire(ev);\n                });\n                if (wasCreated)\n                    _onDatabaseCreated(db._deps, dbName);\n                resolve();\n            }, reject);\n        }).catch(function (err) {\n            switch (err === null || err === void 0 ? void 0 : err.name) {\n                case \"UnknownError\":\n                    if (state.PR1398_maxLoop > 0) {\n                        state.PR1398_maxLoop--;\n                        console.warn('Dexie: Workaround for Chrome UnknownError on open()');\n                        return tryOpenDB();\n                    }\n                    break;\n                case \"VersionError\":\n                    if (nativeVerToOpen > 0) {\n                        nativeVerToOpen = 0;\n                        return tryOpenDB();\n                    }\n                    break;\n            }\n            return DexiePromise.reject(err);\n        }); };\n        return DexiePromise.race([\n            openCanceller,\n            (typeof navigator === 'undefined' ? DexiePromise.resolve() : idbReady()).then(tryOpenDB)\n        ]).then(function () {\n            throwIfCancelled();\n            state.onReadyBeingFired = [];\n            return DexiePromise.resolve(vip(function () { return db.on.ready.fire(db.vip); })).then(function fireRemainders() {\n                if (state.onReadyBeingFired.length > 0) {\n                    var remainders_1 = state.onReadyBeingFired.reduce(promisableChain, nop);\n                    state.onReadyBeingFired = [];\n                    return DexiePromise.resolve(vip(function () { return remainders_1(db.vip); })).then(fireRemainders);\n                }\n            });\n        }).finally(function () {\n            if (state.openCanceller === openCanceller) {\n                state.onReadyBeingFired = null;\n                state.isBeingOpened = false;\n            }\n        }).catch(function (err) {\n            state.dbOpenError = err;\n            try {\n                upgradeTransaction && upgradeTransaction.abort();\n            }\n            catch (_a) { }\n            if (openCanceller === state.openCanceller) {\n                db._close();\n            }\n            return rejection(err);\n        }).finally(function () {\n            state.openComplete = true;\n            resolveDbReady();\n        }).then(function () {\n            if (wasCreated) {\n                var everything_1 = {};\n                db.tables.forEach(function (table) {\n                    table.schema.indexes.forEach(function (idx) {\n                        if (idx.name)\n                            everything_1[\"idb://\".concat(db.name, \"/\").concat(table.name, \"/\").concat(idx.name)] = new RangeSet(-Infinity, [[[]]]);\n                    });\n                    everything_1[\"idb://\".concat(db.name, \"/\").concat(table.name, \"/\")] = everything_1[\"idb://\".concat(db.name, \"/\").concat(table.name, \"/:dels\")] = new RangeSet(-Infinity, [[[]]]);\n                });\n                globalEvents(DEXIE_STORAGE_MUTATED_EVENT_NAME).fire(everything_1);\n                signalSubscribersNow(everything_1, true);\n            }\n            return db;\n        });\n    }\n\n    function awaitIterator(iterator) {\n        var callNext = function (result) { return iterator.next(result); }, doThrow = function (error) { return iterator.throw(error); }, onSuccess = step(callNext), onError = step(doThrow);\n        function step(getNext) {\n            return function (val) {\n                var next = getNext(val), value = next.value;\n                return next.done ? value :\n                    (!value || typeof value.then !== 'function' ?\n                        isArray(value) ? Promise.all(value).then(onSuccess, onError) : onSuccess(value) :\n                        value.then(onSuccess, onError));\n            };\n        }\n        return step(callNext)();\n    }\n\n    function extractTransactionArgs(mode, _tableArgs_, scopeFunc) {\n        var i = arguments.length;\n        if (i < 2)\n            throw new exceptions.InvalidArgument(\"Too few arguments\");\n        var args = new Array(i - 1);\n        while (--i)\n            args[i - 1] = arguments[i];\n        scopeFunc = args.pop();\n        var tables = flatten(args);\n        return [mode, tables, scopeFunc];\n    }\n    function enterTransactionScope(db, mode, storeNames, parentTransaction, scopeFunc) {\n        return DexiePromise.resolve().then(function () {\n            var transless = PSD.transless || PSD;\n            var trans = db._createTransaction(mode, storeNames, db._dbSchema, parentTransaction);\n            trans.explicit = true;\n            var zoneProps = {\n                trans: trans,\n                transless: transless\n            };\n            if (parentTransaction) {\n                trans.idbtrans = parentTransaction.idbtrans;\n            }\n            else {\n                try {\n                    trans.create();\n                    trans.idbtrans._explicit = true;\n                    db._state.PR1398_maxLoop = 3;\n                }\n                catch (ex) {\n                    if (ex.name === errnames.InvalidState && db.isOpen() && --db._state.PR1398_maxLoop > 0) {\n                        console.warn('Dexie: Need to reopen db');\n                        db.close({ disableAutoOpen: false });\n                        return db.open().then(function () { return enterTransactionScope(db, mode, storeNames, null, scopeFunc); });\n                    }\n                    return rejection(ex);\n                }\n            }\n            var scopeFuncIsAsync = isAsyncFunction(scopeFunc);\n            if (scopeFuncIsAsync) {\n                incrementExpectedAwaits();\n            }\n            var returnValue;\n            var promiseFollowed = DexiePromise.follow(function () {\n                returnValue = scopeFunc.call(trans, trans);\n                if (returnValue) {\n                    if (scopeFuncIsAsync) {\n                        var decrementor = decrementExpectedAwaits.bind(null, null);\n                        returnValue.then(decrementor, decrementor);\n                    }\n                    else if (typeof returnValue.next === 'function' && typeof returnValue.throw === 'function') {\n                        returnValue = awaitIterator(returnValue);\n                    }\n                }\n            }, zoneProps);\n            return (returnValue && typeof returnValue.then === 'function' ?\n                DexiePromise.resolve(returnValue).then(function (x) { return trans.active ?\n                    x\n                    : rejection(new exceptions.PrematureCommit(\"Transaction committed too early. See http://bit.ly/2kdckMn\")); })\n                : promiseFollowed.then(function () { return returnValue; })).then(function (x) {\n                if (parentTransaction)\n                    trans._resolve();\n                return trans._completion.then(function () { return x; });\n            }).catch(function (e) {\n                trans._reject(e);\n                return rejection(e);\n            });\n        });\n    }\n\n    function pad(a, value, count) {\n        var result = isArray(a) ? a.slice() : [a];\n        for (var i = 0; i < count; ++i)\n            result.push(value);\n        return result;\n    }\n    function createVirtualIndexMiddleware(down) {\n        return __assign(__assign({}, down), { table: function (tableName) {\n                var table = down.table(tableName);\n                var schema = table.schema;\n                var indexLookup = {};\n                var allVirtualIndexes = [];\n                function addVirtualIndexes(keyPath, keyTail, lowLevelIndex) {\n                    var keyPathAlias = getKeyPathAlias(keyPath);\n                    var indexList = (indexLookup[keyPathAlias] = indexLookup[keyPathAlias] || []);\n                    var keyLength = keyPath == null ? 0 : typeof keyPath === 'string' ? 1 : keyPath.length;\n                    var isVirtual = keyTail > 0;\n                    var virtualIndex = __assign(__assign({}, lowLevelIndex), { name: isVirtual\n                            ? \"\".concat(keyPathAlias, \"(virtual-from:\").concat(lowLevelIndex.name, \")\")\n                            : lowLevelIndex.name, lowLevelIndex: lowLevelIndex, isVirtual: isVirtual, keyTail: keyTail, keyLength: keyLength, extractKey: getKeyExtractor(keyPath), unique: !isVirtual && lowLevelIndex.unique });\n                    indexList.push(virtualIndex);\n                    if (!virtualIndex.isPrimaryKey) {\n                        allVirtualIndexes.push(virtualIndex);\n                    }\n                    if (keyLength > 1) {\n                        var virtualKeyPath = keyLength === 2 ?\n                            keyPath[0] :\n                            keyPath.slice(0, keyLength - 1);\n                        addVirtualIndexes(virtualKeyPath, keyTail + 1, lowLevelIndex);\n                    }\n                    indexList.sort(function (a, b) { return a.keyTail - b.keyTail; });\n                    return virtualIndex;\n                }\n                var primaryKey = addVirtualIndexes(schema.primaryKey.keyPath, 0, schema.primaryKey);\n                indexLookup[\":id\"] = [primaryKey];\n                for (var _i = 0, _a = schema.indexes; _i < _a.length; _i++) {\n                    var index = _a[_i];\n                    addVirtualIndexes(index.keyPath, 0, index);\n                }\n                function findBestIndex(keyPath) {\n                    var result = indexLookup[getKeyPathAlias(keyPath)];\n                    return result && result[0];\n                }\n                function translateRange(range, keyTail) {\n                    return {\n                        type: range.type === 1  ?\n                            2  :\n                            range.type,\n                        lower: pad(range.lower, range.lowerOpen ? down.MAX_KEY : down.MIN_KEY, keyTail),\n                        lowerOpen: true,\n                        upper: pad(range.upper, range.upperOpen ? down.MIN_KEY : down.MAX_KEY, keyTail),\n                        upperOpen: true\n                    };\n                }\n                function translateRequest(req) {\n                    var index = req.query.index;\n                    return index.isVirtual ? __assign(__assign({}, req), { query: {\n                            index: index.lowLevelIndex,\n                            range: translateRange(req.query.range, index.keyTail)\n                        } }) : req;\n                }\n                var result = __assign(__assign({}, table), { schema: __assign(__assign({}, schema), { primaryKey: primaryKey, indexes: allVirtualIndexes, getIndexByKeyPath: findBestIndex }), count: function (req) {\n                        return table.count(translateRequest(req));\n                    }, query: function (req) {\n                        return table.query(translateRequest(req));\n                    }, openCursor: function (req) {\n                        var _a = req.query.index, keyTail = _a.keyTail, isVirtual = _a.isVirtual, keyLength = _a.keyLength;\n                        if (!isVirtual)\n                            return table.openCursor(req);\n                        function createVirtualCursor(cursor) {\n                            function _continue(key) {\n                                key != null ?\n                                    cursor.continue(pad(key, req.reverse ? down.MAX_KEY : down.MIN_KEY, keyTail)) :\n                                    req.unique ?\n                                        cursor.continue(cursor.key.slice(0, keyLength)\n                                            .concat(req.reverse\n                                            ? down.MIN_KEY\n                                            : down.MAX_KEY, keyTail)) :\n                                        cursor.continue();\n                            }\n                            var virtualCursor = Object.create(cursor, {\n                                continue: { value: _continue },\n                                continuePrimaryKey: {\n                                    value: function (key, primaryKey) {\n                                        cursor.continuePrimaryKey(pad(key, down.MAX_KEY, keyTail), primaryKey);\n                                    }\n                                },\n                                primaryKey: {\n                                    get: function () {\n                                        return cursor.primaryKey;\n                                    }\n                                },\n                                key: {\n                                    get: function () {\n                                        var key = cursor.key;\n                                        return keyLength === 1 ?\n                                            key[0] :\n                                            key.slice(0, keyLength);\n                                    }\n                                },\n                                value: {\n                                    get: function () {\n                                        return cursor.value;\n                                    }\n                                }\n                            });\n                            return virtualCursor;\n                        }\n                        return table.openCursor(translateRequest(req))\n                            .then(function (cursor) { return cursor && createVirtualCursor(cursor); });\n                    } });\n                return result;\n            } });\n    }\n    var virtualIndexMiddleware = {\n        stack: \"dbcore\",\n        name: \"VirtualIndexMiddleware\",\n        level: 1,\n        create: createVirtualIndexMiddleware\n    };\n\n    function getObjectDiff(a, b, rv, prfx) {\n        rv = rv || {};\n        prfx = prfx || '';\n        keys(a).forEach(function (prop) {\n            if (!hasOwn(b, prop)) {\n                rv[prfx + prop] = undefined;\n            }\n            else {\n                var ap = a[prop], bp = b[prop];\n                if (typeof ap === 'object' && typeof bp === 'object' && ap && bp) {\n                    var apTypeName = toStringTag(ap);\n                    var bpTypeName = toStringTag(bp);\n                    if (apTypeName !== bpTypeName) {\n                        rv[prfx + prop] = b[prop];\n                    }\n                    else if (apTypeName === 'Object') {\n                        getObjectDiff(ap, bp, rv, prfx + prop + '.');\n                    }\n                    else if (ap !== bp) {\n                        rv[prfx + prop] = b[prop];\n                    }\n                }\n                else if (ap !== bp)\n                    rv[prfx + prop] = b[prop];\n            }\n        });\n        keys(b).forEach(function (prop) {\n            if (!hasOwn(a, prop)) {\n                rv[prfx + prop] = b[prop];\n            }\n        });\n        return rv;\n    }\n\n    function getEffectiveKeys(primaryKey, req) {\n        if (req.type === 'delete')\n            return req.keys;\n        return req.keys || req.values.map(primaryKey.extractKey);\n    }\n\n    var hooksMiddleware = {\n        stack: \"dbcore\",\n        name: \"HooksMiddleware\",\n        level: 2,\n        create: function (downCore) { return (__assign(__assign({}, downCore), { table: function (tableName) {\n                var downTable = downCore.table(tableName);\n                var primaryKey = downTable.schema.primaryKey;\n                var tableMiddleware = __assign(__assign({}, downTable), { mutate: function (req) {\n                        var dxTrans = PSD.trans;\n                        var _a = dxTrans.table(tableName).hook, deleting = _a.deleting, creating = _a.creating, updating = _a.updating;\n                        switch (req.type) {\n                            case 'add':\n                                if (creating.fire === nop)\n                                    break;\n                                return dxTrans._promise('readwrite', function () { return addPutOrDelete(req); }, true);\n                            case 'put':\n                                if (creating.fire === nop && updating.fire === nop)\n                                    break;\n                                return dxTrans._promise('readwrite', function () { return addPutOrDelete(req); }, true);\n                            case 'delete':\n                                if (deleting.fire === nop)\n                                    break;\n                                return dxTrans._promise('readwrite', function () { return addPutOrDelete(req); }, true);\n                            case 'deleteRange':\n                                if (deleting.fire === nop)\n                                    break;\n                                return dxTrans._promise('readwrite', function () { return deleteRange(req); }, true);\n                        }\n                        return downTable.mutate(req);\n                        function addPutOrDelete(req) {\n                            var dxTrans = PSD.trans;\n                            var keys = req.keys || getEffectiveKeys(primaryKey, req);\n                            if (!keys)\n                                throw new Error(\"Keys missing\");\n                            req = req.type === 'add' || req.type === 'put' ? __assign(__assign({}, req), { keys: keys }) : __assign({}, req);\n                            if (req.type !== 'delete')\n                                req.values = __spreadArray([], req.values, true);\n                            if (req.keys)\n                                req.keys = __spreadArray([], req.keys, true);\n                            return getExistingValues(downTable, req, keys).then(function (existingValues) {\n                                var contexts = keys.map(function (key, i) {\n                                    var existingValue = existingValues[i];\n                                    var ctx = { onerror: null, onsuccess: null };\n                                    if (req.type === 'delete') {\n                                        deleting.fire.call(ctx, key, existingValue, dxTrans);\n                                    }\n                                    else if (req.type === 'add' || existingValue === undefined) {\n                                        var generatedPrimaryKey = creating.fire.call(ctx, key, req.values[i], dxTrans);\n                                        if (key == null && generatedPrimaryKey != null) {\n                                            key = generatedPrimaryKey;\n                                            req.keys[i] = key;\n                                            if (!primaryKey.outbound) {\n                                                setByKeyPath(req.values[i], primaryKey.keyPath, key);\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        var objectDiff = getObjectDiff(existingValue, req.values[i]);\n                                        var additionalChanges_1 = updating.fire.call(ctx, objectDiff, key, existingValue, dxTrans);\n                                        if (additionalChanges_1) {\n                                            var requestedValue_1 = req.values[i];\n                                            Object.keys(additionalChanges_1).forEach(function (keyPath) {\n                                                if (hasOwn(requestedValue_1, keyPath)) {\n                                                    requestedValue_1[keyPath] = additionalChanges_1[keyPath];\n                                                }\n                                                else {\n                                                    setByKeyPath(requestedValue_1, keyPath, additionalChanges_1[keyPath]);\n                                                }\n                                            });\n                                        }\n                                    }\n                                    return ctx;\n                                });\n                                return downTable.mutate(req).then(function (_a) {\n                                    var failures = _a.failures, results = _a.results, numFailures = _a.numFailures, lastResult = _a.lastResult;\n                                    for (var i = 0; i < keys.length; ++i) {\n                                        var primKey = results ? results[i] : keys[i];\n                                        var ctx = contexts[i];\n                                        if (primKey == null) {\n                                            ctx.onerror && ctx.onerror(failures[i]);\n                                        }\n                                        else {\n                                            ctx.onsuccess && ctx.onsuccess(req.type === 'put' && existingValues[i] ?\n                                                req.values[i] :\n                                                primKey\n                                            );\n                                        }\n                                    }\n                                    return { failures: failures, results: results, numFailures: numFailures, lastResult: lastResult };\n                                }).catch(function (error) {\n                                    contexts.forEach(function (ctx) { return ctx.onerror && ctx.onerror(error); });\n                                    return Promise.reject(error);\n                                });\n                            });\n                        }\n                        function deleteRange(req) {\n                            return deleteNextChunk(req.trans, req.range, 10000);\n                        }\n                        function deleteNextChunk(trans, range, limit) {\n                            return downTable.query({ trans: trans, values: false, query: { index: primaryKey, range: range }, limit: limit })\n                                .then(function (_a) {\n                                var result = _a.result;\n                                return addPutOrDelete({ type: 'delete', keys: result, trans: trans }).then(function (res) {\n                                    if (res.numFailures > 0)\n                                        return Promise.reject(res.failures[0]);\n                                    if (result.length < limit) {\n                                        return { failures: [], numFailures: 0, lastResult: undefined };\n                                    }\n                                    else {\n                                        return deleteNextChunk(trans, __assign(__assign({}, range), { lower: result[result.length - 1], lowerOpen: true }), limit);\n                                    }\n                                });\n                            });\n                        }\n                    } });\n                return tableMiddleware;\n            } })); }\n    };\n    function getExistingValues(table, req, effectiveKeys) {\n        return req.type === \"add\"\n            ? Promise.resolve([])\n            : table.getMany({ trans: req.trans, keys: effectiveKeys, cache: \"immutable\" });\n    }\n\n    function getFromTransactionCache(keys, cache, clone) {\n        try {\n            if (!cache)\n                return null;\n            if (cache.keys.length < keys.length)\n                return null;\n            var result = [];\n            for (var i = 0, j = 0; i < cache.keys.length && j < keys.length; ++i) {\n                if (cmp(cache.keys[i], keys[j]) !== 0)\n                    continue;\n                result.push(clone ? deepClone(cache.values[i]) : cache.values[i]);\n                ++j;\n            }\n            return result.length === keys.length ? result : null;\n        }\n        catch (_a) {\n            return null;\n        }\n    }\n    var cacheExistingValuesMiddleware = {\n        stack: \"dbcore\",\n        level: -1,\n        create: function (core) {\n            return {\n                table: function (tableName) {\n                    var table = core.table(tableName);\n                    return __assign(__assign({}, table), { getMany: function (req) {\n                            if (!req.cache) {\n                                return table.getMany(req);\n                            }\n                            var cachedResult = getFromTransactionCache(req.keys, req.trans[\"_cache\"], req.cache === \"clone\");\n                            if (cachedResult) {\n                                return DexiePromise.resolve(cachedResult);\n                            }\n                            return table.getMany(req).then(function (res) {\n                                req.trans[\"_cache\"] = {\n                                    keys: req.keys,\n                                    values: req.cache === \"clone\" ? deepClone(res) : res,\n                                };\n                                return res;\n                            });\n                        }, mutate: function (req) {\n                            if (req.type !== \"add\")\n                                req.trans[\"_cache\"] = null;\n                            return table.mutate(req);\n                        } });\n                },\n            };\n        },\n    };\n\n    function isCachableContext(ctx, table) {\n        return (ctx.trans.mode === 'readonly' &&\n            !!ctx.subscr &&\n            !ctx.trans.explicit &&\n            ctx.trans.db._options.cache !== 'disabled' &&\n            !table.schema.primaryKey.outbound);\n    }\n\n    function isCachableRequest(type, req) {\n        switch (type) {\n            case 'query':\n                return req.values && !req.unique;\n            case 'get':\n                return false;\n            case 'getMany':\n                return false;\n            case 'count':\n                return false;\n            case 'openCursor':\n                return false;\n        }\n    }\n\n    var observabilityMiddleware = {\n        stack: \"dbcore\",\n        level: 0,\n        name: \"Observability\",\n        create: function (core) {\n            var dbName = core.schema.name;\n            var FULL_RANGE = new RangeSet(core.MIN_KEY, core.MAX_KEY);\n            return __assign(__assign({}, core), { transaction: function (stores, mode, options) {\n                    if (PSD.subscr && mode !== 'readonly') {\n                        throw new exceptions.ReadOnly(\"Readwrite transaction in liveQuery context. Querier source: \".concat(PSD.querier));\n                    }\n                    return core.transaction(stores, mode, options);\n                }, table: function (tableName) {\n                    var table = core.table(tableName);\n                    var schema = table.schema;\n                    var primaryKey = schema.primaryKey, indexes = schema.indexes;\n                    var extractKey = primaryKey.extractKey, outbound = primaryKey.outbound;\n                    var indexesWithAutoIncPK = primaryKey.autoIncrement && indexes.filter(function (index) { return index.compound && index.keyPath.includes(primaryKey.keyPath); });\n                    var tableClone = __assign(__assign({}, table), { mutate: function (req) {\n                            var trans = req.trans;\n                            var mutatedParts = req.mutatedParts || (req.mutatedParts = {});\n                            var getRangeSet = function (indexName) {\n                                var part = \"idb://\".concat(dbName, \"/\").concat(tableName, \"/\").concat(indexName);\n                                return (mutatedParts[part] ||\n                                    (mutatedParts[part] = new RangeSet()));\n                            };\n                            var pkRangeSet = getRangeSet(\"\");\n                            var delsRangeSet = getRangeSet(\":dels\");\n                            var type = req.type;\n                            var _a = req.type === \"deleteRange\"\n                                ? [req.range]\n                                : req.type === \"delete\"\n                                    ? [req.keys]\n                                    : req.values.length < 50\n                                        ? [getEffectiveKeys(primaryKey, req).filter(function (id) { return id; }), req.values]\n                                        : [], keys = _a[0], newObjs = _a[1];\n                            var oldCache = req.trans[\"_cache\"];\n                            if (isArray(keys)) {\n                                pkRangeSet.addKeys(keys);\n                                var oldObjs = type === 'delete' || keys.length === newObjs.length ? getFromTransactionCache(keys, oldCache) : null;\n                                if (!oldObjs) {\n                                    delsRangeSet.addKeys(keys);\n                                }\n                                if (oldObjs || newObjs) {\n                                    trackAffectedIndexes(getRangeSet, schema, oldObjs, newObjs);\n                                }\n                            }\n                            else if (keys) {\n                                var range = { from: keys.lower, to: keys.upper };\n                                delsRangeSet.add(range);\n                                pkRangeSet.add(range);\n                            }\n                            else {\n                                pkRangeSet.add(FULL_RANGE);\n                                delsRangeSet.add(FULL_RANGE);\n                                schema.indexes.forEach(function (idx) { return getRangeSet(idx.name).add(FULL_RANGE); });\n                            }\n                            return table.mutate(req).then(function (res) {\n                                if (keys && (req.type === 'add' || req.type === 'put')) {\n                                    pkRangeSet.addKeys(res.results);\n                                    if (indexesWithAutoIncPK) {\n                                        indexesWithAutoIncPK.forEach(function (idx) {\n                                            var idxVals = req.values.map(function (v) { return idx.extractKey(v); });\n                                            var pkPos = idx.keyPath.findIndex(function (prop) { return prop === primaryKey.keyPath; });\n                                            res.results.forEach(function (pk) { return idxVals[pkPos] = pk; });\n                                            getRangeSet(idx.name).addKeys(idxVals);\n                                        });\n                                    }\n                                }\n                                trans.mutatedParts = extendObservabilitySet(trans.mutatedParts || {}, mutatedParts);\n                                return res;\n                            });\n                        } });\n                    var getRange = function (_a) {\n                        var _b, _c;\n                        var _d = _a.query, index = _d.index, range = _d.range;\n                        return [\n                            index,\n                            new RangeSet((_b = range.lower) !== null && _b !== void 0 ? _b : core.MIN_KEY, (_c = range.upper) !== null && _c !== void 0 ? _c : core.MAX_KEY),\n                        ];\n                    };\n                    var readSubscribers = {\n                        get: function (req) { return [primaryKey, new RangeSet(req.key)]; },\n                        getMany: function (req) { return [primaryKey, new RangeSet().addKeys(req.keys)]; },\n                        count: getRange,\n                        query: getRange,\n                        openCursor: getRange,\n                    };\n                    keys(readSubscribers).forEach(function (method) {\n                        tableClone[method] = function (req) {\n                            var subscr = PSD.subscr;\n                            var isLiveQuery = !!subscr;\n                            var cachable = isCachableContext(PSD, table) && isCachableRequest(method, req);\n                            var obsSet = cachable\n                                ? req.obsSet = {}\n                                : subscr;\n                            if (isLiveQuery) {\n                                var getRangeSet = function (indexName) {\n                                    var part = \"idb://\".concat(dbName, \"/\").concat(tableName, \"/\").concat(indexName);\n                                    return (obsSet[part] ||\n                                        (obsSet[part] = new RangeSet()));\n                                };\n                                var pkRangeSet_1 = getRangeSet(\"\");\n                                var delsRangeSet_1 = getRangeSet(\":dels\");\n                                var _a = readSubscribers[method](req), queriedIndex = _a[0], queriedRanges = _a[1];\n                                if (method === 'query' && queriedIndex.isPrimaryKey && !req.values) {\n                                    delsRangeSet_1.add(queriedRanges);\n                                }\n                                else {\n                                    getRangeSet(queriedIndex.name || \"\").add(queriedRanges);\n                                }\n                                if (!queriedIndex.isPrimaryKey) {\n                                    if (method === \"count\") {\n                                        delsRangeSet_1.add(FULL_RANGE);\n                                    }\n                                    else {\n                                        var keysPromise_1 = method === \"query\" &&\n                                            outbound &&\n                                            req.values &&\n                                            table.query(__assign(__assign({}, req), { values: false }));\n                                        return table[method].apply(this, arguments).then(function (res) {\n                                            if (method === \"query\") {\n                                                if (outbound && req.values) {\n                                                    return keysPromise_1.then(function (_a) {\n                                                        var resultingKeys = _a.result;\n                                                        pkRangeSet_1.addKeys(resultingKeys);\n                                                        return res;\n                                                    });\n                                                }\n                                                var pKeys = req.values\n                                                    ? res.result.map(extractKey)\n                                                    : res.result;\n                                                if (req.values) {\n                                                    pkRangeSet_1.addKeys(pKeys);\n                                                }\n                                                else {\n                                                    delsRangeSet_1.addKeys(pKeys);\n                                                }\n                                            }\n                                            else if (method === \"openCursor\") {\n                                                var cursor_1 = res;\n                                                var wantValues_1 = req.values;\n                                                return (cursor_1 &&\n                                                    Object.create(cursor_1, {\n                                                        key: {\n                                                            get: function () {\n                                                                delsRangeSet_1.addKey(cursor_1.primaryKey);\n                                                                return cursor_1.key;\n                                                            },\n                                                        },\n                                                        primaryKey: {\n                                                            get: function () {\n                                                                var pkey = cursor_1.primaryKey;\n                                                                delsRangeSet_1.addKey(pkey);\n                                                                return pkey;\n                                                            },\n                                                        },\n                                                        value: {\n                                                            get: function () {\n                                                                wantValues_1 && pkRangeSet_1.addKey(cursor_1.primaryKey);\n                                                                return cursor_1.value;\n                                                            },\n                                                        },\n                                                    }));\n                                            }\n                                            return res;\n                                        });\n                                    }\n                                }\n                            }\n                            return table[method].apply(this, arguments);\n                        };\n                    });\n                    return tableClone;\n                } });\n        },\n    };\n    function trackAffectedIndexes(getRangeSet, schema, oldObjs, newObjs) {\n        function addAffectedIndex(ix) {\n            var rangeSet = getRangeSet(ix.name || \"\");\n            function extractKey(obj) {\n                return obj != null ? ix.extractKey(obj) : null;\n            }\n            var addKeyOrKeys = function (key) { return ix.multiEntry && isArray(key)\n                ? key.forEach(function (key) { return rangeSet.addKey(key); })\n                : rangeSet.addKey(key); };\n            (oldObjs || newObjs).forEach(function (_, i) {\n                var oldKey = oldObjs && extractKey(oldObjs[i]);\n                var newKey = newObjs && extractKey(newObjs[i]);\n                if (cmp(oldKey, newKey) !== 0) {\n                    if (oldKey != null)\n                        addKeyOrKeys(oldKey);\n                    if (newKey != null)\n                        addKeyOrKeys(newKey);\n                }\n            });\n        }\n        schema.indexes.forEach(addAffectedIndex);\n    }\n\n    function adjustOptimisticFromFailures(tblCache, req, res) {\n        if (res.numFailures === 0)\n            return req;\n        if (req.type === 'deleteRange') {\n            return null;\n        }\n        var numBulkOps = req.keys\n            ? req.keys.length\n            : 'values' in req && req.values\n                ? req.values.length\n                : 1;\n        if (res.numFailures === numBulkOps) {\n            return null;\n        }\n        var clone = __assign({}, req);\n        if (isArray(clone.keys)) {\n            clone.keys = clone.keys.filter(function (_, i) { return !(i in res.failures); });\n        }\n        if ('values' in clone && isArray(clone.values)) {\n            clone.values = clone.values.filter(function (_, i) { return !(i in res.failures); });\n        }\n        return clone;\n    }\n\n    function isAboveLower(key, range) {\n        return range.lower === undefined\n            ? true\n            : range.lowerOpen\n                ? cmp(key, range.lower) > 0\n                : cmp(key, range.lower) >= 0;\n    }\n    function isBelowUpper(key, range) {\n        return range.upper === undefined\n            ? true\n            : range.upperOpen\n                ? cmp(key, range.upper) < 0\n                : cmp(key, range.upper) <= 0;\n    }\n    function isWithinRange(key, range) {\n        return isAboveLower(key, range) && isBelowUpper(key, range);\n    }\n\n    function applyOptimisticOps(result, req, ops, table, cacheEntry, immutable) {\n        if (!ops || ops.length === 0)\n            return result;\n        var index = req.query.index;\n        var multiEntry = index.multiEntry;\n        var queryRange = req.query.range;\n        var primaryKey = table.schema.primaryKey;\n        var extractPrimKey = primaryKey.extractKey;\n        var extractIndex = index.extractKey;\n        var extractLowLevelIndex = (index.lowLevelIndex || index).extractKey;\n        var finalResult = ops.reduce(function (result, op) {\n            var modifedResult = result;\n            var includedValues = op.type === 'add' || op.type === 'put'\n                ? op.values.filter(function (v) {\n                    var key = extractIndex(v);\n                    return multiEntry && isArray(key)\n                        ? key.some(function (k) { return isWithinRange(k, queryRange); })\n                        : isWithinRange(key, queryRange);\n                }).map(function (v) {\n                    v = deepClone(v);\n                    if (immutable)\n                        Object.freeze(v);\n                    return v;\n                })\n                : [];\n            switch (op.type) {\n                case 'add':\n                    modifedResult = result.concat(req.values\n                        ? includedValues\n                        : includedValues.map(function (v) { return extractPrimKey(v); }));\n                    break;\n                case 'put':\n                    var keySet_1 = new RangeSet().addKeys(op.values.map(function (v) { return extractPrimKey(v); }));\n                    modifedResult = result\n                        .filter(function (item) {\n                        var key = req.values ? extractPrimKey(item) : item;\n                        return !rangesOverlap(new RangeSet(key), keySet_1);\n                    })\n                        .concat(req.values\n                        ? includedValues\n                        : includedValues.map(function (v) { return extractPrimKey(v); }));\n                    break;\n                case 'delete':\n                    var keysToDelete_1 = new RangeSet().addKeys(op.keys);\n                    modifedResult = result.filter(function (item) {\n                        var key = req.values ? extractPrimKey(item) : item;\n                        return !rangesOverlap(new RangeSet(key), keysToDelete_1);\n                    });\n                    break;\n                case 'deleteRange':\n                    var range_1 = op.range;\n                    modifedResult = result.filter(function (item) { return !isWithinRange(extractPrimKey(item), range_1); });\n                    break;\n            }\n            return modifedResult;\n        }, result);\n        if (finalResult === result)\n            return result;\n        finalResult.sort(function (a, b) {\n            return cmp(extractLowLevelIndex(a), extractLowLevelIndex(b)) ||\n                cmp(extractPrimKey(a), extractPrimKey(b));\n        });\n        if (req.limit && req.limit < Infinity) {\n            if (finalResult.length > req.limit) {\n                finalResult.length = req.limit;\n            }\n            else if (result.length === req.limit && finalResult.length < req.limit) {\n                cacheEntry.dirty = true;\n            }\n        }\n        return immutable ? Object.freeze(finalResult) : finalResult;\n    }\n\n    function areRangesEqual(r1, r2) {\n        return (cmp(r1.lower, r2.lower) === 0 &&\n            cmp(r1.upper, r2.upper) === 0 &&\n            !!r1.lowerOpen === !!r2.lowerOpen &&\n            !!r1.upperOpen === !!r2.upperOpen);\n    }\n\n    function compareLowers(lower1, lower2, lowerOpen1, lowerOpen2) {\n        if (lower1 === undefined)\n            return lower2 !== undefined ? -1 : 0;\n        if (lower2 === undefined)\n            return 1;\n        var c = cmp(lower1, lower2);\n        if (c === 0) {\n            if (lowerOpen1 && lowerOpen2)\n                return 0;\n            if (lowerOpen1)\n                return 1;\n            if (lowerOpen2)\n                return -1;\n        }\n        return c;\n    }\n    function compareUppers(upper1, upper2, upperOpen1, upperOpen2) {\n        if (upper1 === undefined)\n            return upper2 !== undefined ? 1 : 0;\n        if (upper2 === undefined)\n            return -1;\n        var c = cmp(upper1, upper2);\n        if (c === 0) {\n            if (upperOpen1 && upperOpen2)\n                return 0;\n            if (upperOpen1)\n                return -1;\n            if (upperOpen2)\n                return 1;\n        }\n        return c;\n    }\n    function isSuperRange(r1, r2) {\n        return (compareLowers(r1.lower, r2.lower, r1.lowerOpen, r2.lowerOpen) <= 0 &&\n            compareUppers(r1.upper, r2.upper, r1.upperOpen, r2.upperOpen) >= 0);\n    }\n\n    function findCompatibleQuery(dbName, tableName, type, req) {\n        var tblCache = cache[\"idb://\".concat(dbName, \"/\").concat(tableName)];\n        if (!tblCache)\n            return [];\n        var queries = tblCache.queries[type];\n        if (!queries)\n            return [null, false, tblCache, null];\n        var indexName = req.query ? req.query.index.name : null;\n        var entries = queries[indexName || ''];\n        if (!entries)\n            return [null, false, tblCache, null];\n        switch (type) {\n            case 'query':\n                var equalEntry = entries.find(function (entry) {\n                    return entry.req.limit === req.limit &&\n                        entry.req.values === req.values &&\n                        areRangesEqual(entry.req.query.range, req.query.range);\n                });\n                if (equalEntry)\n                    return [\n                        equalEntry,\n                        true,\n                        tblCache,\n                        entries,\n                    ];\n                var superEntry = entries.find(function (entry) {\n                    var limit = 'limit' in entry.req ? entry.req.limit : Infinity;\n                    return (limit >= req.limit &&\n                        (req.values ? entry.req.values : true) &&\n                        isSuperRange(entry.req.query.range, req.query.range));\n                });\n                return [superEntry, false, tblCache, entries];\n            case 'count':\n                var countQuery = entries.find(function (entry) {\n                    return areRangesEqual(entry.req.query.range, req.query.range);\n                });\n                return [countQuery, !!countQuery, tblCache, entries];\n        }\n    }\n\n    function subscribeToCacheEntry(cacheEntry, container, requery, signal) {\n        cacheEntry.subscribers.add(requery);\n        signal.addEventListener(\"abort\", function () {\n            cacheEntry.subscribers.delete(requery);\n            if (cacheEntry.subscribers.size === 0) {\n                enqueForDeletion(cacheEntry, container);\n            }\n        });\n    }\n    function enqueForDeletion(cacheEntry, container) {\n        setTimeout(function () {\n            if (cacheEntry.subscribers.size === 0) {\n                delArrayItem(container, cacheEntry);\n            }\n        }, 3000);\n    }\n\n    var cacheMiddleware = {\n        stack: 'dbcore',\n        level: 0,\n        name: 'Cache',\n        create: function (core) {\n            var dbName = core.schema.name;\n            var coreMW = __assign(__assign({}, core), { transaction: function (stores, mode, options) {\n                    var idbtrans = core.transaction(stores, mode, options);\n                    if (mode === 'readwrite') {\n                        var ac_1 = new AbortController();\n                        var signal = ac_1.signal;\n                        var endTransaction = function (wasCommitted) { return function () {\n                            ac_1.abort();\n                            if (mode === 'readwrite') {\n                                var affectedSubscribers_1 = new Set();\n                                for (var _i = 0, stores_1 = stores; _i < stores_1.length; _i++) {\n                                    var storeName = stores_1[_i];\n                                    var tblCache = cache[\"idb://\".concat(dbName, \"/\").concat(storeName)];\n                                    if (tblCache) {\n                                        var table = core.table(storeName);\n                                        var ops = tblCache.optimisticOps.filter(function (op) { return op.trans === idbtrans; });\n                                        if (idbtrans._explicit && wasCommitted && idbtrans.mutatedParts) {\n                                            for (var _a = 0, _b = Object.values(tblCache.queries.query); _a < _b.length; _a++) {\n                                                var entries = _b[_a];\n                                                for (var _c = 0, _d = entries.slice(); _c < _d.length; _c++) {\n                                                    var entry = _d[_c];\n                                                    if (obsSetsOverlap(entry.obsSet, idbtrans.mutatedParts)) {\n                                                        delArrayItem(entries, entry);\n                                                        entry.subscribers.forEach(function (requery) { return affectedSubscribers_1.add(requery); });\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else if (ops.length > 0) {\n                                            tblCache.optimisticOps = tblCache.optimisticOps.filter(function (op) { return op.trans !== idbtrans; });\n                                            for (var _e = 0, _f = Object.values(tblCache.queries.query); _e < _f.length; _e++) {\n                                                var entries = _f[_e];\n                                                for (var _g = 0, _h = entries.slice(); _g < _h.length; _g++) {\n                                                    var entry = _h[_g];\n                                                    if (entry.res != null &&\n                                                        idbtrans.mutatedParts\n    ) {\n                                                        if (wasCommitted && !entry.dirty) {\n                                                            var freezeResults = Object.isFrozen(entry.res);\n                                                            var modRes = applyOptimisticOps(entry.res, entry.req, ops, table, entry, freezeResults);\n                                                            if (entry.dirty) {\n                                                                delArrayItem(entries, entry);\n                                                                entry.subscribers.forEach(function (requery) { return affectedSubscribers_1.add(requery); });\n                                                            }\n                                                            else if (modRes !== entry.res) {\n                                                                entry.res = modRes;\n                                                                entry.promise = DexiePromise.resolve({ result: modRes });\n                                                            }\n                                                        }\n                                                        else {\n                                                            if (entry.dirty) {\n                                                                delArrayItem(entries, entry);\n                                                            }\n                                                            entry.subscribers.forEach(function (requery) { return affectedSubscribers_1.add(requery); });\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                affectedSubscribers_1.forEach(function (requery) { return requery(); });\n                            }\n                        }; };\n                        idbtrans.addEventListener('abort', endTransaction(false), {\n                            signal: signal,\n                        });\n                        idbtrans.addEventListener('error', endTransaction(false), {\n                            signal: signal,\n                        });\n                        idbtrans.addEventListener('complete', endTransaction(true), {\n                            signal: signal,\n                        });\n                    }\n                    return idbtrans;\n                }, table: function (tableName) {\n                    var downTable = core.table(tableName);\n                    var primKey = downTable.schema.primaryKey;\n                    var tableMW = __assign(__assign({}, downTable), { mutate: function (req) {\n                            var trans = PSD.trans;\n                            if (primKey.outbound ||\n                                trans.db._options.cache === 'disabled' ||\n                                trans.explicit\n                            ) {\n                                return downTable.mutate(req);\n                            }\n                            var tblCache = cache[\"idb://\".concat(dbName, \"/\").concat(tableName)];\n                            if (!tblCache)\n                                return downTable.mutate(req);\n                            var promise = downTable.mutate(req);\n                            if ((req.type === 'add' || req.type === 'put') && (req.values.length >= 50 || getEffectiveKeys(primKey, req).some(function (key) { return key == null; }))) {\n                                promise.then(function (res) {\n                                    var reqWithResolvedKeys = __assign(__assign({}, req), { values: req.values.map(function (value, i) {\n                                            var _a;\n                                            var valueWithKey = ((_a = primKey.keyPath) === null || _a === void 0 ? void 0 : _a.includes('.'))\n                                                ? deepClone(value)\n                                                : __assign({}, value);\n                                            setByKeyPath(valueWithKey, primKey.keyPath, res.results[i]);\n                                            return valueWithKey;\n                                        }) });\n                                    var adjustedReq = adjustOptimisticFromFailures(tblCache, reqWithResolvedKeys, res);\n                                    tblCache.optimisticOps.push(adjustedReq);\n                                    queueMicrotask(function () { return req.mutatedParts && signalSubscribersLazily(req.mutatedParts); });\n                                });\n                            }\n                            else {\n                                tblCache.optimisticOps.push(req);\n                                req.mutatedParts && signalSubscribersLazily(req.mutatedParts);\n                                promise.then(function (res) {\n                                    if (res.numFailures > 0) {\n                                        delArrayItem(tblCache.optimisticOps, req);\n                                        var adjustedReq = adjustOptimisticFromFailures(tblCache, req, res);\n                                        if (adjustedReq) {\n                                            tblCache.optimisticOps.push(adjustedReq);\n                                        }\n                                        req.mutatedParts && signalSubscribersLazily(req.mutatedParts);\n                                    }\n                                });\n                                promise.catch(function () {\n                                    delArrayItem(tblCache.optimisticOps, req);\n                                    req.mutatedParts && signalSubscribersLazily(req.mutatedParts);\n                                });\n                            }\n                            return promise;\n                        }, query: function (req) {\n                            var _a;\n                            if (!isCachableContext(PSD, downTable) || !isCachableRequest(\"query\", req))\n                                return downTable.query(req);\n                            var freezeResults = ((_a = PSD.trans) === null || _a === void 0 ? void 0 : _a.db._options.cache) === 'immutable';\n                            var _b = PSD, requery = _b.requery, signal = _b.signal;\n                            var _c = findCompatibleQuery(dbName, tableName, 'query', req), cacheEntry = _c[0], exactMatch = _c[1], tblCache = _c[2], container = _c[3];\n                            if (cacheEntry && exactMatch) {\n                                cacheEntry.obsSet = req.obsSet;\n                            }\n                            else {\n                                var promise = downTable.query(req).then(function (res) {\n                                    var result = res.result;\n                                    if (cacheEntry)\n                                        cacheEntry.res = result;\n                                    if (freezeResults) {\n                                        for (var i = 0, l = result.length; i < l; ++i) {\n                                            Object.freeze(result[i]);\n                                        }\n                                        Object.freeze(result);\n                                    }\n                                    else {\n                                        res.result = deepClone(result);\n                                    }\n                                    return res;\n                                }).catch(function (error) {\n                                    if (container && cacheEntry)\n                                        delArrayItem(container, cacheEntry);\n                                    return Promise.reject(error);\n                                });\n                                cacheEntry = {\n                                    obsSet: req.obsSet,\n                                    promise: promise,\n                                    subscribers: new Set(),\n                                    type: 'query',\n                                    req: req,\n                                    dirty: false,\n                                };\n                                if (container) {\n                                    container.push(cacheEntry);\n                                }\n                                else {\n                                    container = [cacheEntry];\n                                    if (!tblCache) {\n                                        tblCache = cache[\"idb://\".concat(dbName, \"/\").concat(tableName)] = {\n                                            queries: {\n                                                query: {},\n                                                count: {},\n                                            },\n                                            objs: new Map(),\n                                            optimisticOps: [],\n                                            unsignaledParts: {}\n                                        };\n                                    }\n                                    tblCache.queries.query[req.query.index.name || ''] = container;\n                                }\n                            }\n                            subscribeToCacheEntry(cacheEntry, container, requery, signal);\n                            return cacheEntry.promise.then(function (res) {\n                                return {\n                                    result: applyOptimisticOps(res.result, req, tblCache === null || tblCache === void 0 ? void 0 : tblCache.optimisticOps, downTable, cacheEntry, freezeResults),\n                                };\n                            });\n                        } });\n                    return tableMW;\n                } });\n            return coreMW;\n        },\n    };\n\n    function vipify(target, vipDb) {\n        return new Proxy(target, {\n            get: function (target, prop, receiver) {\n                if (prop === 'db')\n                    return vipDb;\n                return Reflect.get(target, prop, receiver);\n            }\n        });\n    }\n\n    var Dexie$1 =  (function () {\n        function Dexie(name, options) {\n            var _this = this;\n            this._middlewares = {};\n            this.verno = 0;\n            var deps = Dexie.dependencies;\n            this._options = options = __assign({\n                addons: Dexie.addons, autoOpen: true,\n                indexedDB: deps.indexedDB, IDBKeyRange: deps.IDBKeyRange, cache: 'cloned' }, options);\n            this._deps = {\n                indexedDB: options.indexedDB,\n                IDBKeyRange: options.IDBKeyRange\n            };\n            var addons = options.addons;\n            this._dbSchema = {};\n            this._versions = [];\n            this._storeNames = [];\n            this._allTables = {};\n            this.idbdb = null;\n            this._novip = this;\n            var state = {\n                dbOpenError: null,\n                isBeingOpened: false,\n                onReadyBeingFired: null,\n                openComplete: false,\n                dbReadyResolve: nop,\n                dbReadyPromise: null,\n                cancelOpen: nop,\n                openCanceller: null,\n                autoSchema: true,\n                PR1398_maxLoop: 3,\n                autoOpen: options.autoOpen,\n            };\n            state.dbReadyPromise = new DexiePromise(function (resolve) {\n                state.dbReadyResolve = resolve;\n            });\n            state.openCanceller = new DexiePromise(function (_, reject) {\n                state.cancelOpen = reject;\n            });\n            this._state = state;\n            this.name = name;\n            this.on = Events(this, \"populate\", \"blocked\", \"versionchange\", \"close\", { ready: [promisableChain, nop] });\n            this.on.ready.subscribe = override(this.on.ready.subscribe, function (subscribe) {\n                return function (subscriber, bSticky) {\n                    Dexie.vip(function () {\n                        var state = _this._state;\n                        if (state.openComplete) {\n                            if (!state.dbOpenError)\n                                DexiePromise.resolve().then(subscriber);\n                            if (bSticky)\n                                subscribe(subscriber);\n                        }\n                        else if (state.onReadyBeingFired) {\n                            state.onReadyBeingFired.push(subscriber);\n                            if (bSticky)\n                                subscribe(subscriber);\n                        }\n                        else {\n                            subscribe(subscriber);\n                            var db_1 = _this;\n                            if (!bSticky)\n                                subscribe(function unsubscribe() {\n                                    db_1.on.ready.unsubscribe(subscriber);\n                                    db_1.on.ready.unsubscribe(unsubscribe);\n                                });\n                        }\n                    });\n                };\n            });\n            this.Collection = createCollectionConstructor(this);\n            this.Table = createTableConstructor(this);\n            this.Transaction = createTransactionConstructor(this);\n            this.Version = createVersionConstructor(this);\n            this.WhereClause = createWhereClauseConstructor(this);\n            this.on(\"versionchange\", function (ev) {\n                if (ev.newVersion > 0)\n                    console.warn(\"Another connection wants to upgrade database '\".concat(_this.name, \"'. Closing db now to resume the upgrade.\"));\n                else\n                    console.warn(\"Another connection wants to delete database '\".concat(_this.name, \"'. Closing db now to resume the delete request.\"));\n                _this.close({ disableAutoOpen: false });\n            });\n            this.on(\"blocked\", function (ev) {\n                if (!ev.newVersion || ev.newVersion < ev.oldVersion)\n                    console.warn(\"Dexie.delete('\".concat(_this.name, \"') was blocked\"));\n                else\n                    console.warn(\"Upgrade '\".concat(_this.name, \"' blocked by other connection holding version \").concat(ev.oldVersion / 10));\n            });\n            this._maxKey = getMaxKey(options.IDBKeyRange);\n            this._createTransaction = function (mode, storeNames, dbschema, parentTransaction) { return new _this.Transaction(mode, storeNames, dbschema, _this._options.chromeTransactionDurability, parentTransaction); };\n            this._fireOnBlocked = function (ev) {\n                _this.on(\"blocked\").fire(ev);\n                connections\n                    .filter(function (c) { return c.name === _this.name && c !== _this && !c._state.vcFired; })\n                    .map(function (c) { return c.on(\"versionchange\").fire(ev); });\n            };\n            this.use(cacheExistingValuesMiddleware);\n            this.use(cacheMiddleware);\n            this.use(observabilityMiddleware);\n            this.use(virtualIndexMiddleware);\n            this.use(hooksMiddleware);\n            var vipDB = new Proxy(this, {\n                get: function (_, prop, receiver) {\n                    if (prop === '_vip')\n                        return true;\n                    if (prop === 'table')\n                        return function (tableName) { return vipify(_this.table(tableName), vipDB); };\n                    var rv = Reflect.get(_, prop, receiver);\n                    if (rv instanceof Table)\n                        return vipify(rv, vipDB);\n                    if (prop === 'tables')\n                        return rv.map(function (t) { return vipify(t, vipDB); });\n                    if (prop === '_createTransaction')\n                        return function () {\n                            var tx = rv.apply(this, arguments);\n                            return vipify(tx, vipDB);\n                        };\n                    return rv;\n                }\n            });\n            this.vip = vipDB;\n            addons.forEach(function (addon) { return addon(_this); });\n        }\n        Dexie.prototype.version = function (versionNumber) {\n            if (isNaN(versionNumber) || versionNumber < 0.1)\n                throw new exceptions.Type(\"Given version is not a positive number\");\n            versionNumber = Math.round(versionNumber * 10) / 10;\n            if (this.idbdb || this._state.isBeingOpened)\n                throw new exceptions.Schema(\"Cannot add version when database is open\");\n            this.verno = Math.max(this.verno, versionNumber);\n            var versions = this._versions;\n            var versionInstance = versions.filter(function (v) { return v._cfg.version === versionNumber; })[0];\n            if (versionInstance)\n                return versionInstance;\n            versionInstance = new this.Version(versionNumber);\n            versions.push(versionInstance);\n            versions.sort(lowerVersionFirst);\n            versionInstance.stores({});\n            this._state.autoSchema = false;\n            return versionInstance;\n        };\n        Dexie.prototype._whenReady = function (fn) {\n            var _this = this;\n            return (this.idbdb && (this._state.openComplete || PSD.letThrough || this._vip)) ? fn() : new DexiePromise(function (resolve, reject) {\n                if (_this._state.openComplete) {\n                    return reject(new exceptions.DatabaseClosed(_this._state.dbOpenError));\n                }\n                if (!_this._state.isBeingOpened) {\n                    if (!_this._state.autoOpen) {\n                        reject(new exceptions.DatabaseClosed());\n                        return;\n                    }\n                    _this.open().catch(nop);\n                }\n                _this._state.dbReadyPromise.then(resolve, reject);\n            }).then(fn);\n        };\n        Dexie.prototype.use = function (_a) {\n            var stack = _a.stack, create = _a.create, level = _a.level, name = _a.name;\n            if (name)\n                this.unuse({ stack: stack, name: name });\n            var middlewares = this._middlewares[stack] || (this._middlewares[stack] = []);\n            middlewares.push({ stack: stack, create: create, level: level == null ? 10 : level, name: name });\n            middlewares.sort(function (a, b) { return a.level - b.level; });\n            return this;\n        };\n        Dexie.prototype.unuse = function (_a) {\n            var stack = _a.stack, name = _a.name, create = _a.create;\n            if (stack && this._middlewares[stack]) {\n                this._middlewares[stack] = this._middlewares[stack].filter(function (mw) {\n                    return create ? mw.create !== create :\n                        name ? mw.name !== name :\n                            false;\n                });\n            }\n            return this;\n        };\n        Dexie.prototype.open = function () {\n            var _this = this;\n            return usePSD(globalPSD,\n            function () { return dexieOpen(_this); });\n        };\n        Dexie.prototype._close = function () {\n            var state = this._state;\n            var idx = connections.indexOf(this);\n            if (idx >= 0)\n                connections.splice(idx, 1);\n            if (this.idbdb) {\n                try {\n                    this.idbdb.close();\n                }\n                catch (e) { }\n                this.idbdb = null;\n            }\n            if (!state.isBeingOpened) {\n                state.dbReadyPromise = new DexiePromise(function (resolve) {\n                    state.dbReadyResolve = resolve;\n                });\n                state.openCanceller = new DexiePromise(function (_, reject) {\n                    state.cancelOpen = reject;\n                });\n            }\n        };\n        Dexie.prototype.close = function (_a) {\n            var _b = _a === void 0 ? { disableAutoOpen: true } : _a, disableAutoOpen = _b.disableAutoOpen;\n            var state = this._state;\n            if (disableAutoOpen) {\n                if (state.isBeingOpened) {\n                    state.cancelOpen(new exceptions.DatabaseClosed());\n                }\n                this._close();\n                state.autoOpen = false;\n                state.dbOpenError = new exceptions.DatabaseClosed();\n            }\n            else {\n                this._close();\n                state.autoOpen = this._options.autoOpen ||\n                    state.isBeingOpened;\n                state.openComplete = false;\n                state.dbOpenError = null;\n            }\n        };\n        Dexie.prototype.delete = function (closeOptions) {\n            var _this = this;\n            if (closeOptions === void 0) { closeOptions = { disableAutoOpen: true }; }\n            var hasInvalidArguments = arguments.length > 0 && typeof arguments[0] !== 'object';\n            var state = this._state;\n            return new DexiePromise(function (resolve, reject) {\n                var doDelete = function () {\n                    _this.close(closeOptions);\n                    var req = _this._deps.indexedDB.deleteDatabase(_this.name);\n                    req.onsuccess = wrap(function () {\n                        _onDatabaseDeleted(_this._deps, _this.name);\n                        resolve();\n                    });\n                    req.onerror = eventRejectHandler(reject);\n                    req.onblocked = _this._fireOnBlocked;\n                };\n                if (hasInvalidArguments)\n                    throw new exceptions.InvalidArgument(\"Invalid closeOptions argument to db.delete()\");\n                if (state.isBeingOpened) {\n                    state.dbReadyPromise.then(doDelete);\n                }\n                else {\n                    doDelete();\n                }\n            });\n        };\n        Dexie.prototype.backendDB = function () {\n            return this.idbdb;\n        };\n        Dexie.prototype.isOpen = function () {\n            return this.idbdb !== null;\n        };\n        Dexie.prototype.hasBeenClosed = function () {\n            var dbOpenError = this._state.dbOpenError;\n            return dbOpenError && (dbOpenError.name === 'DatabaseClosed');\n        };\n        Dexie.prototype.hasFailed = function () {\n            return this._state.dbOpenError !== null;\n        };\n        Dexie.prototype.dynamicallyOpened = function () {\n            return this._state.autoSchema;\n        };\n        Object.defineProperty(Dexie.prototype, \"tables\", {\n            get: function () {\n                var _this = this;\n                return keys(this._allTables).map(function (name) { return _this._allTables[name]; });\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Dexie.prototype.transaction = function () {\n            var args = extractTransactionArgs.apply(this, arguments);\n            return this._transaction.apply(this, args);\n        };\n        Dexie.prototype._transaction = function (mode, tables, scopeFunc) {\n            var _this = this;\n            var parentTransaction = PSD.trans;\n            if (!parentTransaction || parentTransaction.db !== this || mode.indexOf('!') !== -1)\n                parentTransaction = null;\n            var onlyIfCompatible = mode.indexOf('?') !== -1;\n            mode = mode.replace('!', '').replace('?', '');\n            var idbMode, storeNames;\n            try {\n                storeNames = tables.map(function (table) {\n                    var storeName = table instanceof _this.Table ? table.name : table;\n                    if (typeof storeName !== 'string')\n                        throw new TypeError(\"Invalid table argument to Dexie.transaction(). Only Table or String are allowed\");\n                    return storeName;\n                });\n                if (mode == \"r\" || mode === READONLY)\n                    idbMode = READONLY;\n                else if (mode == \"rw\" || mode == READWRITE)\n                    idbMode = READWRITE;\n                else\n                    throw new exceptions.InvalidArgument(\"Invalid transaction mode: \" + mode);\n                if (parentTransaction) {\n                    if (parentTransaction.mode === READONLY && idbMode === READWRITE) {\n                        if (onlyIfCompatible) {\n                            parentTransaction = null;\n                        }\n                        else\n                            throw new exceptions.SubTransaction(\"Cannot enter a sub-transaction with READWRITE mode when parent transaction is READONLY\");\n                    }\n                    if (parentTransaction) {\n                        storeNames.forEach(function (storeName) {\n                            if (parentTransaction && parentTransaction.storeNames.indexOf(storeName) === -1) {\n                                if (onlyIfCompatible) {\n                                    parentTransaction = null;\n                                }\n                                else\n                                    throw new exceptions.SubTransaction(\"Table \" + storeName +\n                                        \" not included in parent transaction.\");\n                            }\n                        });\n                    }\n                    if (onlyIfCompatible && parentTransaction && !parentTransaction.active) {\n                        parentTransaction = null;\n                    }\n                }\n            }\n            catch (e) {\n                return parentTransaction ?\n                    parentTransaction._promise(null, function (_, reject) { reject(e); }) :\n                    rejection(e);\n            }\n            var enterTransaction = enterTransactionScope.bind(null, this, idbMode, storeNames, parentTransaction, scopeFunc);\n            return (parentTransaction ?\n                parentTransaction._promise(idbMode, enterTransaction, \"lock\") :\n                PSD.trans ?\n                    usePSD(PSD.transless, function () { return _this._whenReady(enterTransaction); }) :\n                    this._whenReady(enterTransaction));\n        };\n        Dexie.prototype.table = function (tableName) {\n            if (!hasOwn(this._allTables, tableName)) {\n                throw new exceptions.InvalidTable(\"Table \".concat(tableName, \" does not exist\"));\n            }\n            return this._allTables[tableName];\n        };\n        return Dexie;\n    }());\n\n    var symbolObservable = typeof Symbol !== \"undefined\" && \"observable\" in Symbol\n        ? Symbol.observable\n        : \"@@observable\";\n    var Observable =  (function () {\n        function Observable(subscribe) {\n            this._subscribe = subscribe;\n        }\n        Observable.prototype.subscribe = function (x, error, complete) {\n            return this._subscribe(!x || typeof x === \"function\" ? { next: x, error: error, complete: complete } : x);\n        };\n        Observable.prototype[symbolObservable] = function () {\n            return this;\n        };\n        return Observable;\n    }());\n\n    var domDeps;\n    try {\n        domDeps = {\n            indexedDB: _global.indexedDB || _global.mozIndexedDB || _global.webkitIndexedDB || _global.msIndexedDB,\n            IDBKeyRange: _global.IDBKeyRange || _global.webkitIDBKeyRange\n        };\n    }\n    catch (e) {\n        domDeps = { indexedDB: null, IDBKeyRange: null };\n    }\n\n    function liveQuery(querier) {\n        var hasValue = false;\n        var currentValue;\n        var observable = new Observable(function (observer) {\n            var scopeFuncIsAsync = isAsyncFunction(querier);\n            function execute(ctx) {\n                var wasRootExec = beginMicroTickScope();\n                try {\n                    if (scopeFuncIsAsync) {\n                        incrementExpectedAwaits();\n                    }\n                    var rv = newScope(querier, ctx);\n                    if (scopeFuncIsAsync) {\n                        rv = rv.finally(decrementExpectedAwaits);\n                    }\n                    return rv;\n                }\n                finally {\n                    wasRootExec && endMicroTickScope();\n                }\n            }\n            var closed = false;\n            var abortController;\n            var accumMuts = {};\n            var currentObs = {};\n            var subscription = {\n                get closed() {\n                    return closed;\n                },\n                unsubscribe: function () {\n                    if (closed)\n                        return;\n                    closed = true;\n                    if (abortController)\n                        abortController.abort();\n                    if (startedListening)\n                        globalEvents.storagemutated.unsubscribe(mutationListener);\n                },\n            };\n            observer.start && observer.start(subscription);\n            var startedListening = false;\n            var doQuery = function () { return execInGlobalContext(_doQuery); };\n            function shouldNotify() {\n                return obsSetsOverlap(currentObs, accumMuts);\n            }\n            var mutationListener = function (parts) {\n                extendObservabilitySet(accumMuts, parts);\n                if (shouldNotify()) {\n                    doQuery();\n                }\n            };\n            var _doQuery = function () {\n                if (closed ||\n                    !domDeps.indexedDB)\n                 {\n                    return;\n                }\n                accumMuts = {};\n                var subscr = {};\n                if (abortController)\n                    abortController.abort();\n                abortController = new AbortController();\n                var ctx = {\n                    subscr: subscr,\n                    signal: abortController.signal,\n                    requery: doQuery,\n                    querier: querier,\n                    trans: null\n                };\n                var ret = execute(ctx);\n                Promise.resolve(ret).then(function (result) {\n                    hasValue = true;\n                    currentValue = result;\n                    if (closed || ctx.signal.aborted) {\n                        return;\n                    }\n                    accumMuts = {};\n                    currentObs = subscr;\n                    if (!objectIsEmpty(currentObs) && !startedListening) {\n                        globalEvents(DEXIE_STORAGE_MUTATED_EVENT_NAME, mutationListener);\n                        startedListening = true;\n                    }\n                    execInGlobalContext(function () { return !closed && observer.next && observer.next(result); });\n                }, function (err) {\n                    hasValue = false;\n                    if (!['DatabaseClosedError', 'AbortError'].includes(err === null || err === void 0 ? void 0 : err.name)) {\n                        if (!closed)\n                            execInGlobalContext(function () {\n                                if (closed)\n                                    return;\n                                observer.error && observer.error(err);\n                            });\n                    }\n                });\n            };\n            setTimeout(doQuery, 0);\n            return subscription;\n        });\n        observable.hasValue = function () { return hasValue; };\n        observable.getValue = function () { return currentValue; };\n        return observable;\n    }\n\n    var Dexie = Dexie$1;\n    props(Dexie, __assign(__assign({}, fullNameExceptions), {\n        delete: function (databaseName) {\n            var db = new Dexie(databaseName, { addons: [] });\n            return db.delete();\n        },\n        exists: function (name) {\n            return new Dexie(name, { addons: [] }).open().then(function (db) {\n                db.close();\n                return true;\n            }).catch('NoSuchDatabaseError', function () { return false; });\n        },\n        getDatabaseNames: function (cb) {\n            try {\n                return getDatabaseNames(Dexie.dependencies).then(cb);\n            }\n            catch (_a) {\n                return rejection(new exceptions.MissingAPI());\n            }\n        },\n        defineClass: function () {\n            function Class(content) {\n                extend(this, content);\n            }\n            return Class;\n        }, ignoreTransaction: function (scopeFunc) {\n            return PSD.trans ?\n                usePSD(PSD.transless, scopeFunc) :\n                scopeFunc();\n        }, vip: vip, async: function (generatorFn) {\n            return function () {\n                try {\n                    var rv = awaitIterator(generatorFn.apply(this, arguments));\n                    if (!rv || typeof rv.then !== 'function')\n                        return DexiePromise.resolve(rv);\n                    return rv;\n                }\n                catch (e) {\n                    return rejection(e);\n                }\n            };\n        }, spawn: function (generatorFn, args, thiz) {\n            try {\n                var rv = awaitIterator(generatorFn.apply(thiz, args || []));\n                if (!rv || typeof rv.then !== 'function')\n                    return DexiePromise.resolve(rv);\n                return rv;\n            }\n            catch (e) {\n                return rejection(e);\n            }\n        },\n        currentTransaction: {\n            get: function () { return PSD.trans || null; }\n        }, waitFor: function (promiseOrFunction, optionalTimeout) {\n            var promise = DexiePromise.resolve(typeof promiseOrFunction === 'function' ?\n                Dexie.ignoreTransaction(promiseOrFunction) :\n                promiseOrFunction)\n                .timeout(optionalTimeout || 60000);\n            return PSD.trans ?\n                PSD.trans.waitFor(promise) :\n                promise;\n        },\n        Promise: DexiePromise,\n        debug: {\n            get: function () { return debug; },\n            set: function (value) {\n                setDebug(value);\n            }\n        },\n        derive: derive, extend: extend, props: props, override: override,\n        Events: Events, on: globalEvents, liveQuery: liveQuery, extendObservabilitySet: extendObservabilitySet,\n        getByKeyPath: getByKeyPath, setByKeyPath: setByKeyPath, delByKeyPath: delByKeyPath, shallowClone: shallowClone, deepClone: deepClone, getObjectDiff: getObjectDiff, cmp: cmp, asap: asap$1,\n        minKey: minKey,\n        addons: [],\n        connections: connections,\n        errnames: errnames,\n        dependencies: domDeps, cache: cache,\n        semVer: DEXIE_VERSION, version: DEXIE_VERSION.split('.')\n            .map(function (n) { return parseInt(n); })\n            .reduce(function (p, c, i) { return p + (c / Math.pow(10, i * 2)); }) }));\n    Dexie.maxKey = getMaxKey(Dexie.dependencies.IDBKeyRange);\n\n    if (typeof dispatchEvent !== 'undefined' && typeof addEventListener !== 'undefined') {\n        globalEvents(DEXIE_STORAGE_MUTATED_EVENT_NAME, function (updatedParts) {\n            if (!propagatingLocally) {\n                var event_1;\n                event_1 = new CustomEvent(STORAGE_MUTATED_DOM_EVENT_NAME, {\n                    detail: updatedParts\n                });\n                propagatingLocally = true;\n                dispatchEvent(event_1);\n                propagatingLocally = false;\n            }\n        });\n        addEventListener(STORAGE_MUTATED_DOM_EVENT_NAME, function (_a) {\n            var detail = _a.detail;\n            if (!propagatingLocally) {\n                propagateLocally(detail);\n            }\n        });\n    }\n    function propagateLocally(updateParts) {\n        var wasMe = propagatingLocally;\n        try {\n            propagatingLocally = true;\n            globalEvents.storagemutated.fire(updateParts);\n            signalSubscribersNow(updateParts, true);\n        }\n        finally {\n            propagatingLocally = wasMe;\n        }\n    }\n    var propagatingLocally = false;\n\n    var bc;\n    var createBC = function () { };\n    if (typeof BroadcastChannel !== 'undefined') {\n        createBC = function () {\n            bc = new BroadcastChannel(STORAGE_MUTATED_DOM_EVENT_NAME);\n            bc.onmessage = function (ev) { return ev.data && propagateLocally(ev.data); };\n        };\n        createBC();\n        if (typeof bc.unref === 'function') {\n            bc.unref();\n        }\n        globalEvents(DEXIE_STORAGE_MUTATED_EVENT_NAME, function (changedParts) {\n            if (!propagatingLocally) {\n                bc.postMessage(changedParts);\n            }\n        });\n    }\n\n    if (typeof addEventListener !== 'undefined') {\n        addEventListener('pagehide', function (event) {\n            if (!Dexie$1.disableBfCache && event.persisted) {\n                if (debug)\n                    console.debug('Dexie: handling persisted pagehide');\n                bc === null || bc === void 0 ? void 0 : bc.close();\n                for (var _i = 0, connections_1 = connections; _i < connections_1.length; _i++) {\n                    var db = connections_1[_i];\n                    db.close({ disableAutoOpen: false });\n                }\n            }\n        });\n        addEventListener('pageshow', function (event) {\n            if (!Dexie$1.disableBfCache && event.persisted) {\n                if (debug)\n                    console.debug('Dexie: handling persisted pageshow');\n                createBC();\n                propagateLocally({ all: new RangeSet(-Infinity, [[]]) });\n            }\n        });\n    }\n\n    function add(value) {\n        return new PropModification({ add: value });\n    }\n\n    function remove(value) {\n        return new PropModification({ remove: value });\n    }\n\n    function replacePrefix(a, b) {\n        return new PropModification({ replacePrefix: [a, b] });\n    }\n\n    DexiePromise.rejectionMapper = mapError;\n    setDebug(debug);\n\n    var namedExports = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        Dexie: Dexie$1,\n        liveQuery: liveQuery,\n        Entity: Entity,\n        cmp: cmp,\n        PropModSymbol: PropModSymbol,\n        PropModification: PropModification,\n        replacePrefix: replacePrefix,\n        add: add,\n        remove: remove,\n        'default': Dexie$1,\n        RangeSet: RangeSet,\n        mergeRanges: mergeRanges,\n        rangesOverlap: rangesOverlap\n    });\n\n    __assign(Dexie$1, namedExports, { default: Dexie$1 });\n\n    return Dexie$1;\n\n}));\n//# sourceMappingURL=dexie.js.map\n","/**\n * @license React\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';var aa=require(\"react\"),ca=require(\"scheduler\");function p(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}var da=new Set,ea={};function fa(a,b){ha(a,b);ha(a+\"Capture\",b)}\nfunction ha(a,b){ea[a]=b;for(a=0;a<b.length;a++)da.add(b[a])}\nvar ia=!(\"undefined\"===typeof window||\"undefined\"===typeof window.document||\"undefined\"===typeof window.document.createElement),ja=Object.prototype.hasOwnProperty,ka=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,la=\n{},ma={};function oa(a){if(ja.call(ma,a))return!0;if(ja.call(la,a))return!1;if(ka.test(a))return ma[a]=!0;la[a]=!0;return!1}function pa(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}\nfunction qa(a,b,c,d){if(null===b||\"undefined\"===typeof b||pa(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function v(a,b,c,d,e,f,g){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b;this.sanitizeURL=f;this.removeEmptyString=g}var z={};\n\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){z[a]=new v(a,0,!1,a,null,!1,!1)});[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];z[b]=new v(b,1,!1,a[1],null,!1,!1)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){z[a]=new v(a,2,!1,a.toLowerCase(),null,!1,!1)});\n[\"autoReverse\",\"externalResourcesRequired\",\"focusable\",\"preserveAlpha\"].forEach(function(a){z[a]=new v(a,2,!1,a,null,!1,!1)});\"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){z[a]=new v(a,3,!1,a.toLowerCase(),null,!1,!1)});\n[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){z[a]=new v(a,3,!0,a,null,!1,!1)});[\"capture\",\"download\"].forEach(function(a){z[a]=new v(a,4,!1,a,null,!1,!1)});[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){z[a]=new v(a,6,!1,a,null,!1,!1)});[\"rowSpan\",\"start\"].forEach(function(a){z[a]=new v(a,5,!1,a.toLowerCase(),null,!1,!1)});var ra=/[\\-:]([a-z])/g;function sa(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(ra,\nsa);z[b]=new v(b,1,!1,a,null,!1,!1)});\"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,\"http://www.w3.org/1999/xlink\",!1,!1)});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\",!1,!1)});[\"tabIndex\",\"crossOrigin\"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!1,!1)});\nz.xlinkHref=new v(\"xlinkHref\",1,!1,\"xlink:href\",\"http://www.w3.org/1999/xlink\",!0,!1);[\"src\",\"href\",\"action\",\"formAction\"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!0,!0)});\nfunction ta(a,b,c,d){var e=z.hasOwnProperty(b)?z[b]:null;if(null!==e?0!==e.type:d||!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1])qa(b,c,e,d)&&(c=null),d||null===e?oa(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c)))}\nvar ua=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,va=Symbol.for(\"react.element\"),wa=Symbol.for(\"react.portal\"),ya=Symbol.for(\"react.fragment\"),za=Symbol.for(\"react.strict_mode\"),Aa=Symbol.for(\"react.profiler\"),Ba=Symbol.for(\"react.provider\"),Ca=Symbol.for(\"react.context\"),Da=Symbol.for(\"react.forward_ref\"),Ea=Symbol.for(\"react.suspense\"),Fa=Symbol.for(\"react.suspense_list\"),Ga=Symbol.for(\"react.memo\"),Ha=Symbol.for(\"react.lazy\");Symbol.for(\"react.scope\");Symbol.for(\"react.debug_trace_mode\");\nvar Ia=Symbol.for(\"react.offscreen\");Symbol.for(\"react.legacy_hidden\");Symbol.for(\"react.cache\");Symbol.for(\"react.tracing_marker\");var Ja=Symbol.iterator;function Ka(a){if(null===a||\"object\"!==typeof a)return null;a=Ja&&a[Ja]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}var A=Object.assign,La;function Ma(a){if(void 0===La)try{throw Error();}catch(c){var b=c.stack.trim().match(/\\n( *(at )?)/);La=b&&b[1]||\"\"}return\"\\n\"+La+a}var Na=!1;\nfunction Oa(a,b){if(!a||Na)return\"\";Na=!0;var c=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(b)if(b=function(){throw Error();},Object.defineProperty(b.prototype,\"props\",{set:function(){throw Error();}}),\"object\"===typeof Reflect&&Reflect.construct){try{Reflect.construct(b,[])}catch(l){var d=l}Reflect.construct(a,[],b)}else{try{b.call()}catch(l){d=l}a.call(b.prototype)}else{try{throw Error();}catch(l){d=l}a()}}catch(l){if(l&&d&&\"string\"===typeof l.stack){for(var e=l.stack.split(\"\\n\"),\nf=d.stack.split(\"\\n\"),g=e.length-1,h=f.length-1;1<=g&&0<=h&&e[g]!==f[h];)h--;for(;1<=g&&0<=h;g--,h--)if(e[g]!==f[h]){if(1!==g||1!==h){do if(g--,h--,0>h||e[g]!==f[h]){var k=\"\\n\"+e[g].replace(\" at new \",\" at \");a.displayName&&k.includes(\"<anonymous>\")&&(k=k.replace(\"<anonymous>\",a.displayName));return k}while(1<=g&&0<=h)}break}}}finally{Na=!1,Error.prepareStackTrace=c}return(a=a?a.displayName||a.name:\"\")?Ma(a):\"\"}\nfunction Pa(a){switch(a.tag){case 5:return Ma(a.type);case 16:return Ma(\"Lazy\");case 13:return Ma(\"Suspense\");case 19:return Ma(\"SuspenseList\");case 0:case 2:case 15:return a=Oa(a.type,!1),a;case 11:return a=Oa(a.type.render,!1),a;case 1:return a=Oa(a.type,!0),a;default:return\"\"}}\nfunction Qa(a){if(null==a)return null;if(\"function\"===typeof a)return a.displayName||a.name||null;if(\"string\"===typeof a)return a;switch(a){case ya:return\"Fragment\";case wa:return\"Portal\";case Aa:return\"Profiler\";case za:return\"StrictMode\";case Ea:return\"Suspense\";case Fa:return\"SuspenseList\"}if(\"object\"===typeof a)switch(a.$$typeof){case Ca:return(a.displayName||\"Context\")+\".Consumer\";case Ba:return(a._context.displayName||\"Context\")+\".Provider\";case Da:var b=a.render;a=a.displayName;a||(a=b.displayName||\nb.name||\"\",a=\"\"!==a?\"ForwardRef(\"+a+\")\":\"ForwardRef\");return a;case Ga:return b=a.displayName||null,null!==b?b:Qa(a.type)||\"Memo\";case Ha:b=a._payload;a=a._init;try{return Qa(a(b))}catch(c){}}return null}\nfunction Ra(a){var b=a.type;switch(a.tag){case 24:return\"Cache\";case 9:return(b.displayName||\"Context\")+\".Consumer\";case 10:return(b._context.displayName||\"Context\")+\".Provider\";case 18:return\"DehydratedFragment\";case 11:return a=b.render,a=a.displayName||a.name||\"\",b.displayName||(\"\"!==a?\"ForwardRef(\"+a+\")\":\"ForwardRef\");case 7:return\"Fragment\";case 5:return b;case 4:return\"Portal\";case 3:return\"Root\";case 6:return\"Text\";case 16:return Qa(b);case 8:return b===za?\"StrictMode\":\"Mode\";case 22:return\"Offscreen\";\ncase 12:return\"Profiler\";case 21:return\"Scope\";case 13:return\"Suspense\";case 19:return\"SuspenseList\";case 25:return\"TracingMarker\";case 1:case 0:case 17:case 2:case 14:case 15:if(\"function\"===typeof b)return b.displayName||b.name||null;if(\"string\"===typeof b)return b}return null}function Sa(a){switch(typeof a){case \"boolean\":case \"number\":case \"string\":case \"undefined\":return a;case \"object\":return a;default:return\"\"}}\nfunction Ta(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction Ua(a){var b=Ta(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\nnull;delete a[b]}}}}function Va(a){a._valueTracker||(a._valueTracker=Ua(a))}function Wa(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=Ta(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}function Xa(a){a=a||(\"undefined\"!==typeof document?document:void 0);if(\"undefined\"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}\nfunction Ya(a,b){var c=b.checked;return A({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}function Za(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=Sa(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function ab(a,b){b=b.checked;null!=b&&ta(a,\"checked\",b,!1)}\nfunction bb(a,b){ab(a,b);var c=Sa(b.value),d=b.type;if(null!=c)if(\"number\"===d){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else if(\"submit\"===d||\"reset\"===d){a.removeAttribute(\"value\");return}b.hasOwnProperty(\"value\")?cb(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&cb(a,b.type,Sa(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction db(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){var d=b.type;if(!(\"submit\"!==d&&\"reset\"!==d||void 0!==b.value&&null!==b.value))return;b=\"\"+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!!a._wrapperState.initialChecked;\"\"!==c&&(a.name=c)}\nfunction cb(a,b,c){if(\"number\"!==b||Xa(a.ownerDocument)!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}var eb=Array.isArray;\nfunction fb(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+Sa(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction gb(a,b){if(null!=b.dangerouslySetInnerHTML)throw Error(p(91));return A({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function hb(a,b){var c=b.value;if(null==c){c=b.children;b=b.defaultValue;if(null!=c){if(null!=b)throw Error(p(92));if(eb(c)){if(1<c.length)throw Error(p(93));c=c[0]}b=c}null==b&&(b=\"\");c=b}a._wrapperState={initialValue:Sa(c)}}\nfunction ib(a,b){var c=Sa(b.value),d=Sa(b.defaultValue);null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=\"\"+d)}function jb(a){var b=a.textContent;b===a._wrapperState.initialValue&&\"\"!==b&&null!==b&&(a.value=b)}function kb(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}\nfunction lb(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?kb(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar mb,nb=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(\"http://www.w3.org/2000/svg\"!==a.namespaceURI||\"innerHTML\"in a)a.innerHTML=b;else{mb=mb||document.createElement(\"div\");mb.innerHTML=\"<svg>\"+b.valueOf().toString()+\"</svg>\";for(b=mb.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction ob(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\nvar pb={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,\nzoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},qb=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(pb).forEach(function(a){qb.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);pb[b]=pb[a]})});function rb(a,b,c){return null==b||\"boolean\"===typeof b||\"\"===b?\"\":c||\"number\"!==typeof b||0===b||pb.hasOwnProperty(a)&&pb[a]?(\"\"+b).trim():b+\"px\"}\nfunction sb(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\"),e=rb(c,b[c],d);\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var tb=A({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction ub(a,b){if(b){if(tb[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML))throw Error(p(137,a));if(null!=b.dangerouslySetInnerHTML){if(null!=b.children)throw Error(p(60));if(\"object\"!==typeof b.dangerouslySetInnerHTML||!(\"__html\"in b.dangerouslySetInnerHTML))throw Error(p(61));}if(null!=b.style&&\"object\"!==typeof b.style)throw Error(p(62));}}\nfunction vb(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}var wb=null;function xb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}var yb=null,zb=null,Ab=null;\nfunction Bb(a){if(a=Cb(a)){if(\"function\"!==typeof yb)throw Error(p(280));var b=a.stateNode;b&&(b=Db(b),yb(a.stateNode,a.type,b))}}function Eb(a){zb?Ab?Ab.push(a):Ab=[a]:zb=a}function Fb(){if(zb){var a=zb,b=Ab;Ab=zb=null;Bb(a);if(b)for(a=0;a<b.length;a++)Bb(b[a])}}function Gb(a,b){return a(b)}function Hb(){}var Ib=!1;function Jb(a,b,c){if(Ib)return a(b,c);Ib=!0;try{return Gb(a,b,c)}finally{if(Ib=!1,null!==zb||null!==Ab)Hb(),Fb()}}\nfunction Kb(a,b){var c=a.stateNode;if(null===c)return null;var d=Db(c);if(null===d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":case \"onMouseEnter\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;if(c&&\"function\"!==\ntypeof c)throw Error(p(231,b,typeof c));return c}var Lb=!1;if(ia)try{var Mb={};Object.defineProperty(Mb,\"passive\",{get:function(){Lb=!0}});window.addEventListener(\"test\",Mb,Mb);window.removeEventListener(\"test\",Mb,Mb)}catch(a){Lb=!1}function Nb(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(m){this.onError(m)}}var Ob=!1,Pb=null,Qb=!1,Rb=null,Sb={onError:function(a){Ob=!0;Pb=a}};function Tb(a,b,c,d,e,f,g,h,k){Ob=!1;Pb=null;Nb.apply(Sb,arguments)}\nfunction Ub(a,b,c,d,e,f,g,h,k){Tb.apply(this,arguments);if(Ob){if(Ob){var l=Pb;Ob=!1;Pb=null}else throw Error(p(198));Qb||(Qb=!0,Rb=l)}}function Vb(a){var b=a,c=a;if(a.alternate)for(;b.return;)b=b.return;else{a=b;do b=a,0!==(b.flags&4098)&&(c=b.return),a=b.return;while(a)}return 3===b.tag?c:null}function Wb(a){if(13===a.tag){var b=a.memoizedState;null===b&&(a=a.alternate,null!==a&&(b=a.memoizedState));if(null!==b)return b.dehydrated}return null}function Xb(a){if(Vb(a)!==a)throw Error(p(188));}\nfunction Yb(a){var b=a.alternate;if(!b){b=Vb(a);if(null===b)throw Error(p(188));return b!==a?null:a}for(var c=a,d=b;;){var e=c.return;if(null===e)break;var f=e.alternate;if(null===f){d=e.return;if(null!==d){c=d;continue}break}if(e.child===f.child){for(f=e.child;f;){if(f===c)return Xb(e),a;if(f===d)return Xb(e),b;f=f.sibling}throw Error(p(188));}if(c.return!==d.return)c=e,d=f;else{for(var g=!1,h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===\nc){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}if(!g)throw Error(p(189));}}if(c.alternate!==d)throw Error(p(190));}if(3!==c.tag)throw Error(p(188));return c.stateNode.current===c?a:b}function Zb(a){a=Yb(a);return null!==a?$b(a):null}function $b(a){if(5===a.tag||6===a.tag)return a;for(a=a.child;null!==a;){var b=$b(a);if(null!==b)return b;a=a.sibling}return null}\nvar ac=ca.unstable_scheduleCallback,bc=ca.unstable_cancelCallback,cc=ca.unstable_shouldYield,dc=ca.unstable_requestPaint,B=ca.unstable_now,ec=ca.unstable_getCurrentPriorityLevel,fc=ca.unstable_ImmediatePriority,gc=ca.unstable_UserBlockingPriority,hc=ca.unstable_NormalPriority,ic=ca.unstable_LowPriority,jc=ca.unstable_IdlePriority,kc=null,lc=null;function mc(a){if(lc&&\"function\"===typeof lc.onCommitFiberRoot)try{lc.onCommitFiberRoot(kc,a,void 0,128===(a.current.flags&128))}catch(b){}}\nvar oc=Math.clz32?Math.clz32:nc,pc=Math.log,qc=Math.LN2;function nc(a){a>>>=0;return 0===a?32:31-(pc(a)/qc|0)|0}var rc=64,sc=4194304;\nfunction tc(a){switch(a&-a){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return a&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return a&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;\ndefault:return a}}function uc(a,b){var c=a.pendingLanes;if(0===c)return 0;var d=0,e=a.suspendedLanes,f=a.pingedLanes,g=c&268435455;if(0!==g){var h=g&~e;0!==h?d=tc(h):(f&=g,0!==f&&(d=tc(f)))}else g=c&~e,0!==g?d=tc(g):0!==f&&(d=tc(f));if(0===d)return 0;if(0!==b&&b!==d&&0===(b&e)&&(e=d&-d,f=b&-b,e>=f||16===e&&0!==(f&4194240)))return b;0!==(d&4)&&(d|=c&16);b=a.entangledLanes;if(0!==b)for(a=a.entanglements,b&=d;0<b;)c=31-oc(b),e=1<<c,d|=a[c],b&=~e;return d}\nfunction vc(a,b){switch(a){case 1:case 2:case 4:return b+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return b+5E3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}\nfunction wc(a,b){for(var c=a.suspendedLanes,d=a.pingedLanes,e=a.expirationTimes,f=a.pendingLanes;0<f;){var g=31-oc(f),h=1<<g,k=e[g];if(-1===k){if(0===(h&c)||0!==(h&d))e[g]=vc(h,b)}else k<=b&&(a.expiredLanes|=h);f&=~h}}function xc(a){a=a.pendingLanes&-1073741825;return 0!==a?a:a&1073741824?1073741824:0}function yc(){var a=rc;rc<<=1;0===(rc&4194240)&&(rc=64);return a}function zc(a){for(var b=[],c=0;31>c;c++)b.push(a);return b}\nfunction Ac(a,b,c){a.pendingLanes|=b;536870912!==b&&(a.suspendedLanes=0,a.pingedLanes=0);a=a.eventTimes;b=31-oc(b);a[b]=c}function Bc(a,b){var c=a.pendingLanes&~b;a.pendingLanes=b;a.suspendedLanes=0;a.pingedLanes=0;a.expiredLanes&=b;a.mutableReadLanes&=b;a.entangledLanes&=b;b=a.entanglements;var d=a.eventTimes;for(a=a.expirationTimes;0<c;){var e=31-oc(c),f=1<<e;b[e]=0;d[e]=-1;a[e]=-1;c&=~f}}\nfunction Cc(a,b){var c=a.entangledLanes|=b;for(a=a.entanglements;c;){var d=31-oc(c),e=1<<d;e&b|a[d]&b&&(a[d]|=b);c&=~e}}var C=0;function Dc(a){a&=-a;return 1<a?4<a?0!==(a&268435455)?16:536870912:4:1}var Ec,Fc,Gc,Hc,Ic,Jc=!1,Kc=[],Lc=null,Mc=null,Nc=null,Oc=new Map,Pc=new Map,Qc=[],Rc=\"mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit\".split(\" \");\nfunction Sc(a,b){switch(a){case \"focusin\":case \"focusout\":Lc=null;break;case \"dragenter\":case \"dragleave\":Mc=null;break;case \"mouseover\":case \"mouseout\":Nc=null;break;case \"pointerover\":case \"pointerout\":Oc.delete(b.pointerId);break;case \"gotpointercapture\":case \"lostpointercapture\":Pc.delete(b.pointerId)}}\nfunction Tc(a,b,c,d,e,f){if(null===a||a.nativeEvent!==f)return a={blockedOn:b,domEventName:c,eventSystemFlags:d,nativeEvent:f,targetContainers:[e]},null!==b&&(b=Cb(b),null!==b&&Fc(b)),a;a.eventSystemFlags|=d;b=a.targetContainers;null!==e&&-1===b.indexOf(e)&&b.push(e);return a}\nfunction Uc(a,b,c,d,e){switch(b){case \"focusin\":return Lc=Tc(Lc,a,b,c,d,e),!0;case \"dragenter\":return Mc=Tc(Mc,a,b,c,d,e),!0;case \"mouseover\":return Nc=Tc(Nc,a,b,c,d,e),!0;case \"pointerover\":var f=e.pointerId;Oc.set(f,Tc(Oc.get(f)||null,a,b,c,d,e));return!0;case \"gotpointercapture\":return f=e.pointerId,Pc.set(f,Tc(Pc.get(f)||null,a,b,c,d,e)),!0}return!1}\nfunction Vc(a){var b=Wc(a.target);if(null!==b){var c=Vb(b);if(null!==c)if(b=c.tag,13===b){if(b=Wb(c),null!==b){a.blockedOn=b;Ic(a.priority,function(){Gc(c)});return}}else if(3===b&&c.stateNode.current.memoizedState.isDehydrated){a.blockedOn=3===c.tag?c.stateNode.containerInfo:null;return}}a.blockedOn=null}\nfunction Xc(a){if(null!==a.blockedOn)return!1;for(var b=a.targetContainers;0<b.length;){var c=Yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null===c){c=a.nativeEvent;var d=new c.constructor(c.type,c);wb=d;c.target.dispatchEvent(d);wb=null}else return b=Cb(c),null!==b&&Fc(b),a.blockedOn=c,!1;b.shift()}return!0}function Zc(a,b,c){Xc(a)&&c.delete(b)}function $c(){Jc=!1;null!==Lc&&Xc(Lc)&&(Lc=null);null!==Mc&&Xc(Mc)&&(Mc=null);null!==Nc&&Xc(Nc)&&(Nc=null);Oc.forEach(Zc);Pc.forEach(Zc)}\nfunction ad(a,b){a.blockedOn===b&&(a.blockedOn=null,Jc||(Jc=!0,ca.unstable_scheduleCallback(ca.unstable_NormalPriority,$c)))}\nfunction bd(a){function b(b){return ad(b,a)}if(0<Kc.length){ad(Kc[0],a);for(var c=1;c<Kc.length;c++){var d=Kc[c];d.blockedOn===a&&(d.blockedOn=null)}}null!==Lc&&ad(Lc,a);null!==Mc&&ad(Mc,a);null!==Nc&&ad(Nc,a);Oc.forEach(b);Pc.forEach(b);for(c=0;c<Qc.length;c++)d=Qc[c],d.blockedOn===a&&(d.blockedOn=null);for(;0<Qc.length&&(c=Qc[0],null===c.blockedOn);)Vc(c),null===c.blockedOn&&Qc.shift()}var cd=ua.ReactCurrentBatchConfig,dd=!0;\nfunction ed(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=1,fd(a,b,c,d)}finally{C=e,cd.transition=f}}function gd(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=4,fd(a,b,c,d)}finally{C=e,cd.transition=f}}\nfunction fd(a,b,c,d){if(dd){var e=Yc(a,b,c,d);if(null===e)hd(a,b,d,id,c),Sc(a,d);else if(Uc(e,a,b,c,d))d.stopPropagation();else if(Sc(a,d),b&4&&-1<Rc.indexOf(a)){for(;null!==e;){var f=Cb(e);null!==f&&Ec(f);f=Yc(a,b,c,d);null===f&&hd(a,b,d,id,c);if(f===e)break;e=f}null!==e&&d.stopPropagation()}else hd(a,b,d,null,c)}}var id=null;\nfunction Yc(a,b,c,d){id=null;a=xb(d);a=Wc(a);if(null!==a)if(b=Vb(a),null===b)a=null;else if(c=b.tag,13===c){a=Wb(b);if(null!==a)return a;a=null}else if(3===c){if(b.stateNode.current.memoizedState.isDehydrated)return 3===b.tag?b.stateNode.containerInfo:null;a=null}else b!==a&&(a=null);id=a;return null}\nfunction jd(a){switch(a){case \"cancel\":case \"click\":case \"close\":case \"contextmenu\":case \"copy\":case \"cut\":case \"auxclick\":case \"dblclick\":case \"dragend\":case \"dragstart\":case \"drop\":case \"focusin\":case \"focusout\":case \"input\":case \"invalid\":case \"keydown\":case \"keypress\":case \"keyup\":case \"mousedown\":case \"mouseup\":case \"paste\":case \"pause\":case \"play\":case \"pointercancel\":case \"pointerdown\":case \"pointerup\":case \"ratechange\":case \"reset\":case \"resize\":case \"seeked\":case \"submit\":case \"touchcancel\":case \"touchend\":case \"touchstart\":case \"volumechange\":case \"change\":case \"selectionchange\":case \"textInput\":case \"compositionstart\":case \"compositionend\":case \"compositionupdate\":case \"beforeblur\":case \"afterblur\":case \"beforeinput\":case \"blur\":case \"fullscreenchange\":case \"focus\":case \"hashchange\":case \"popstate\":case \"select\":case \"selectstart\":return 1;case \"drag\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"mousemove\":case \"mouseout\":case \"mouseover\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"scroll\":case \"toggle\":case \"touchmove\":case \"wheel\":case \"mouseenter\":case \"mouseleave\":case \"pointerenter\":case \"pointerleave\":return 4;\ncase \"message\":switch(ec()){case fc:return 1;case gc:return 4;case hc:case ic:return 16;case jc:return 536870912;default:return 16}default:return 16}}var kd=null,ld=null,md=null;function nd(){if(md)return md;var a,b=ld,c=b.length,d,e=\"value\"in kd?kd.value:kd.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return md=e.slice(a,1<d?1-d:void 0)}\nfunction od(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}function pd(){return!0}function qd(){return!1}\nfunction rd(a){function b(b,d,e,f,g){this._reactName=b;this._targetInst=e;this.type=d;this.nativeEvent=f;this.target=g;this.currentTarget=null;for(var c in a)a.hasOwnProperty(c)&&(b=a[c],this[c]=b?b(f):f[c]);this.isDefaultPrevented=(null!=f.defaultPrevented?f.defaultPrevented:!1===f.returnValue)?pd:qd;this.isPropagationStopped=qd;return this}A(b.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&\n(a.returnValue=!1),this.isDefaultPrevented=pd)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=pd)},persist:function(){},isPersistent:pd});return b}\nvar sd={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},td=rd(sd),ud=A({},sd,{view:0,detail:0}),vd=rd(ud),wd,xd,yd,Ad=A({},ud,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:zd,button:0,buttons:0,relatedTarget:function(a){return void 0===a.relatedTarget?a.fromElement===a.srcElement?a.toElement:a.fromElement:a.relatedTarget},movementX:function(a){if(\"movementX\"in\na)return a.movementX;a!==yd&&(yd&&\"mousemove\"===a.type?(wd=a.screenX-yd.screenX,xd=a.screenY-yd.screenY):xd=wd=0,yd=a);return wd},movementY:function(a){return\"movementY\"in a?a.movementY:xd}}),Bd=rd(Ad),Cd=A({},Ad,{dataTransfer:0}),Dd=rd(Cd),Ed=A({},ud,{relatedTarget:0}),Fd=rd(Ed),Gd=A({},sd,{animationName:0,elapsedTime:0,pseudoElement:0}),Hd=rd(Gd),Id=A({},sd,{clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),Jd=rd(Id),Kd=A({},sd,{data:0}),Ld=rd(Kd),Md={Esc:\"Escape\",\nSpacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},Nd={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",116:\"F5\",117:\"F6\",118:\"F7\",\n119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},Od={Alt:\"altKey\",Control:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function Pd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Od[a])?!!b[a]:!1}function zd(){return Pd}\nvar Qd=A({},ud,{key:function(a){if(a.key){var b=Md[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=od(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?Nd[a.keyCode]||\"Unidentified\":\"\"},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:zd,charCode:function(a){return\"keypress\"===a.type?od(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===\na.type?od(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),Rd=rd(Qd),Sd=A({},Ad,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Td=rd(Sd),Ud=A({},ud,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:zd}),Vd=rd(Ud),Wd=A({},sd,{propertyName:0,elapsedTime:0,pseudoElement:0}),Xd=rd(Wd),Yd=A({},Ad,{deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in a?-a.wheelDeltaX:0},\ndeltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:0,deltaMode:0}),Zd=rd(Yd),$d=[9,13,27,32],ae=ia&&\"CompositionEvent\"in window,be=null;ia&&\"documentMode\"in document&&(be=document.documentMode);var ce=ia&&\"TextEvent\"in window&&!be,de=ia&&(!ae||be&&8<be&&11>=be),ee=String.fromCharCode(32),fe=!1;\nfunction ge(a,b){switch(a){case \"keyup\":return-1!==$d.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"focusout\":return!0;default:return!1}}function he(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var ie=!1;function je(a,b){switch(a){case \"compositionend\":return he(b);case \"keypress\":if(32!==b.which)return null;fe=!0;return ee;case \"textInput\":return a=b.data,a===ee&&fe?null:a;default:return null}}\nfunction ke(a,b){if(ie)return\"compositionend\"===a||!ae&&ge(a,b)?(a=nd(),md=ld=kd=null,ie=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return de&&\"ko\"!==b.locale?null:b.data;default:return null}}\nvar le={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function me(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!le[a.type]:\"textarea\"===b?!0:!1}function ne(a,b,c,d){Eb(d);b=oe(b,\"onChange\");0<b.length&&(c=new td(\"onChange\",\"change\",null,c,d),a.push({event:c,listeners:b}))}var pe=null,qe=null;function re(a){se(a,0)}function te(a){var b=ue(a);if(Wa(b))return a}\nfunction ve(a,b){if(\"change\"===a)return b}var we=!1;if(ia){var xe;if(ia){var ye=\"oninput\"in document;if(!ye){var ze=document.createElement(\"div\");ze.setAttribute(\"oninput\",\"return;\");ye=\"function\"===typeof ze.oninput}xe=ye}else xe=!1;we=xe&&(!document.documentMode||9<document.documentMode)}function Ae(){pe&&(pe.detachEvent(\"onpropertychange\",Be),qe=pe=null)}function Be(a){if(\"value\"===a.propertyName&&te(qe)){var b=[];ne(b,qe,a,xb(a));Jb(re,b)}}\nfunction Ce(a,b,c){\"focusin\"===a?(Ae(),pe=b,qe=c,pe.attachEvent(\"onpropertychange\",Be)):\"focusout\"===a&&Ae()}function De(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return te(qe)}function Ee(a,b){if(\"click\"===a)return te(b)}function Fe(a,b){if(\"input\"===a||\"change\"===a)return te(b)}function Ge(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var He=\"function\"===typeof Object.is?Object.is:Ge;\nfunction Ie(a,b){if(He(a,b))return!0;if(\"object\"!==typeof a||null===a||\"object\"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++){var e=c[d];if(!ja.call(b,e)||!He(a[e],b[e]))return!1}return!0}function Je(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\nfunction Ke(a,b){var c=Je(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Je(c)}}function Le(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?Le(a,b.parentNode):\"contains\"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}\nfunction Me(){for(var a=window,b=Xa();b instanceof a.HTMLIFrameElement;){try{var c=\"string\"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=Xa(a.document)}return b}function Ne(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}\nfunction Oe(a){var b=Me(),c=a.focusedElem,d=a.selectionRange;if(b!==c&&c&&c.ownerDocument&&Le(c.ownerDocument.documentElement,c)){if(null!==d&&Ne(c))if(b=d.start,a=d.end,void 0===a&&(a=b),\"selectionStart\"in c)c.selectionStart=b,c.selectionEnd=Math.min(a,c.value.length);else if(a=(b=c.ownerDocument||document)&&b.defaultView||window,a.getSelection){a=a.getSelection();var e=c.textContent.length,f=Math.min(d.start,e);d=void 0===d.end?f:Math.min(d.end,e);!a.extend&&f>d&&(e=d,d=f,f=e);e=Ke(c,f);var g=Ke(c,\nd);e&&g&&(1!==a.rangeCount||a.anchorNode!==e.node||a.anchorOffset!==e.offset||a.focusNode!==g.node||a.focusOffset!==g.offset)&&(b=b.createRange(),b.setStart(e.node,e.offset),a.removeAllRanges(),f>d?(a.addRange(b),a.extend(g.node,g.offset)):(b.setEnd(g.node,g.offset),a.addRange(b)))}b=[];for(a=c;a=a.parentNode;)1===a.nodeType&&b.push({element:a,left:a.scrollLeft,top:a.scrollTop});\"function\"===typeof c.focus&&c.focus();for(c=0;c<b.length;c++)a=b[c],a.element.scrollLeft=a.left,a.element.scrollTop=a.top}}\nvar Pe=ia&&\"documentMode\"in document&&11>=document.documentMode,Qe=null,Re=null,Se=null,Te=!1;\nfunction Ue(a,b,c){var d=c.window===c?c.document:9===c.nodeType?c:c.ownerDocument;Te||null==Qe||Qe!==Xa(d)||(d=Qe,\"selectionStart\"in d&&Ne(d)?d={start:d.selectionStart,end:d.selectionEnd}:(d=(d.ownerDocument&&d.ownerDocument.defaultView||window).getSelection(),d={anchorNode:d.anchorNode,anchorOffset:d.anchorOffset,focusNode:d.focusNode,focusOffset:d.focusOffset}),Se&&Ie(Se,d)||(Se=d,d=oe(Re,\"onSelect\"),0<d.length&&(b=new td(\"onSelect\",\"select\",null,b,c),a.push({event:b,listeners:d}),b.target=Qe)))}\nfunction Ve(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;return c}var We={animationend:Ve(\"Animation\",\"AnimationEnd\"),animationiteration:Ve(\"Animation\",\"AnimationIteration\"),animationstart:Ve(\"Animation\",\"AnimationStart\"),transitionend:Ve(\"Transition\",\"TransitionEnd\")},Xe={},Ye={};\nia&&(Ye=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete We.animationend.animation,delete We.animationiteration.animation,delete We.animationstart.animation),\"TransitionEvent\"in window||delete We.transitionend.transition);function Ze(a){if(Xe[a])return Xe[a];if(!We[a])return a;var b=We[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Ye)return Xe[a]=b[c];return a}var $e=Ze(\"animationend\"),af=Ze(\"animationiteration\"),bf=Ze(\"animationstart\"),cf=Ze(\"transitionend\"),df=new Map,ef=\"abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel\".split(\" \");\nfunction ff(a,b){df.set(a,b);fa(b,[a])}for(var gf=0;gf<ef.length;gf++){var hf=ef[gf],jf=hf.toLowerCase(),kf=hf[0].toUpperCase()+hf.slice(1);ff(jf,\"on\"+kf)}ff($e,\"onAnimationEnd\");ff(af,\"onAnimationIteration\");ff(bf,\"onAnimationStart\");ff(\"dblclick\",\"onDoubleClick\");ff(\"focusin\",\"onFocus\");ff(\"focusout\",\"onBlur\");ff(cf,\"onTransitionEnd\");ha(\"onMouseEnter\",[\"mouseout\",\"mouseover\"]);ha(\"onMouseLeave\",[\"mouseout\",\"mouseover\"]);ha(\"onPointerEnter\",[\"pointerout\",\"pointerover\"]);\nha(\"onPointerLeave\",[\"pointerout\",\"pointerover\"]);fa(\"onChange\",\"change click focusin focusout input keydown keyup selectionchange\".split(\" \"));fa(\"onSelect\",\"focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange\".split(\" \"));fa(\"onBeforeInput\",[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]);fa(\"onCompositionEnd\",\"compositionend focusout keydown keypress keyup mousedown\".split(\" \"));fa(\"onCompositionStart\",\"compositionstart focusout keydown keypress keyup mousedown\".split(\" \"));\nfa(\"onCompositionUpdate\",\"compositionupdate focusout keydown keypress keyup mousedown\".split(\" \"));var lf=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),mf=new Set(\"cancel close invalid load scroll toggle\".split(\" \").concat(lf));\nfunction nf(a,b,c){var d=a.type||\"unknown-event\";a.currentTarget=c;Ub(d,b,void 0,a);a.currentTarget=null}\nfunction se(a,b){b=0!==(b&4);for(var c=0;c<a.length;c++){var d=a[c],e=d.event;d=d.listeners;a:{var f=void 0;if(b)for(var g=d.length-1;0<=g;g--){var h=d[g],k=h.instance,l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;nf(e,h,l);f=k}else for(g=0;g<d.length;g++){h=d[g];k=h.instance;l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;nf(e,h,l);f=k}}}if(Qb)throw a=Rb,Qb=!1,Rb=null,a;}\nfunction D(a,b){var c=b[of];void 0===c&&(c=b[of]=new Set);var d=a+\"__bubble\";c.has(d)||(pf(b,a,2,!1),c.add(d))}function qf(a,b,c){var d=0;b&&(d|=4);pf(c,a,d,b)}var rf=\"_reactListening\"+Math.random().toString(36).slice(2);function sf(a){if(!a[rf]){a[rf]=!0;da.forEach(function(b){\"selectionchange\"!==b&&(mf.has(b)||qf(b,!1,a),qf(b,!0,a))});var b=9===a.nodeType?a:a.ownerDocument;null===b||b[rf]||(b[rf]=!0,qf(\"selectionchange\",!1,b))}}\nfunction pf(a,b,c,d){switch(jd(b)){case 1:var e=ed;break;case 4:e=gd;break;default:e=fd}c=e.bind(null,b,c,a);e=void 0;!Lb||\"touchstart\"!==b&&\"touchmove\"!==b&&\"wheel\"!==b||(e=!0);d?void 0!==e?a.addEventListener(b,c,{capture:!0,passive:e}):a.addEventListener(b,c,!0):void 0!==e?a.addEventListener(b,c,{passive:e}):a.addEventListener(b,c,!1)}\nfunction hd(a,b,c,d,e){var f=d;if(0===(b&1)&&0===(b&2)&&null!==d)a:for(;;){if(null===d)return;var g=d.tag;if(3===g||4===g){var h=d.stateNode.containerInfo;if(h===e||8===h.nodeType&&h.parentNode===e)break;if(4===g)for(g=d.return;null!==g;){var k=g.tag;if(3===k||4===k)if(k=g.stateNode.containerInfo,k===e||8===k.nodeType&&k.parentNode===e)return;g=g.return}for(;null!==h;){g=Wc(h);if(null===g)return;k=g.tag;if(5===k||6===k){d=f=g;continue a}h=h.parentNode}}d=d.return}Jb(function(){var d=f,e=xb(c),g=[];\na:{var h=df.get(a);if(void 0!==h){var k=td,n=a;switch(a){case \"keypress\":if(0===od(c))break a;case \"keydown\":case \"keyup\":k=Rd;break;case \"focusin\":n=\"focus\";k=Fd;break;case \"focusout\":n=\"blur\";k=Fd;break;case \"beforeblur\":case \"afterblur\":k=Fd;break;case \"click\":if(2===c.button)break a;case \"auxclick\":case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":k=Bd;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":k=\nDd;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":k=Vd;break;case $e:case af:case bf:k=Hd;break;case cf:k=Xd;break;case \"scroll\":k=vd;break;case \"wheel\":k=Zd;break;case \"copy\":case \"cut\":case \"paste\":k=Jd;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":k=Td}var t=0!==(b&4),J=!t&&\"scroll\"===a,x=t?null!==h?h+\"Capture\":null:h;t=[];for(var w=d,u;null!==\nw;){u=w;var F=u.stateNode;5===u.tag&&null!==F&&(u=F,null!==x&&(F=Kb(w,x),null!=F&&t.push(tf(w,F,u))));if(J)break;w=w.return}0<t.length&&(h=new k(h,n,null,c,e),g.push({event:h,listeners:t}))}}if(0===(b&7)){a:{h=\"mouseover\"===a||\"pointerover\"===a;k=\"mouseout\"===a||\"pointerout\"===a;if(h&&c!==wb&&(n=c.relatedTarget||c.fromElement)&&(Wc(n)||n[uf]))break a;if(k||h){h=e.window===e?e:(h=e.ownerDocument)?h.defaultView||h.parentWindow:window;if(k){if(n=c.relatedTarget||c.toElement,k=d,n=n?Wc(n):null,null!==\nn&&(J=Vb(n),n!==J||5!==n.tag&&6!==n.tag))n=null}else k=null,n=d;if(k!==n){t=Bd;F=\"onMouseLeave\";x=\"onMouseEnter\";w=\"mouse\";if(\"pointerout\"===a||\"pointerover\"===a)t=Td,F=\"onPointerLeave\",x=\"onPointerEnter\",w=\"pointer\";J=null==k?h:ue(k);u=null==n?h:ue(n);h=new t(F,w+\"leave\",k,c,e);h.target=J;h.relatedTarget=u;F=null;Wc(e)===d&&(t=new t(x,w+\"enter\",n,c,e),t.target=u,t.relatedTarget=J,F=t);J=F;if(k&&n)b:{t=k;x=n;w=0;for(u=t;u;u=vf(u))w++;u=0;for(F=x;F;F=vf(F))u++;for(;0<w-u;)t=vf(t),w--;for(;0<u-w;)x=\nvf(x),u--;for(;w--;){if(t===x||null!==x&&t===x.alternate)break b;t=vf(t);x=vf(x)}t=null}else t=null;null!==k&&wf(g,h,k,t,!1);null!==n&&null!==J&&wf(g,J,n,t,!0)}}}a:{h=d?ue(d):window;k=h.nodeName&&h.nodeName.toLowerCase();if(\"select\"===k||\"input\"===k&&\"file\"===h.type)var na=ve;else if(me(h))if(we)na=Fe;else{na=De;var xa=Ce}else(k=h.nodeName)&&\"input\"===k.toLowerCase()&&(\"checkbox\"===h.type||\"radio\"===h.type)&&(na=Ee);if(na&&(na=na(a,d))){ne(g,na,c,e);break a}xa&&xa(a,h,d);\"focusout\"===a&&(xa=h._wrapperState)&&\nxa.controlled&&\"number\"===h.type&&cb(h,\"number\",h.value)}xa=d?ue(d):window;switch(a){case \"focusin\":if(me(xa)||\"true\"===xa.contentEditable)Qe=xa,Re=d,Se=null;break;case \"focusout\":Se=Re=Qe=null;break;case \"mousedown\":Te=!0;break;case \"contextmenu\":case \"mouseup\":case \"dragend\":Te=!1;Ue(g,c,e);break;case \"selectionchange\":if(Pe)break;case \"keydown\":case \"keyup\":Ue(g,c,e)}var $a;if(ae)b:{switch(a){case \"compositionstart\":var ba=\"onCompositionStart\";break b;case \"compositionend\":ba=\"onCompositionEnd\";\nbreak b;case \"compositionupdate\":ba=\"onCompositionUpdate\";break b}ba=void 0}else ie?ge(a,c)&&(ba=\"onCompositionEnd\"):\"keydown\"===a&&229===c.keyCode&&(ba=\"onCompositionStart\");ba&&(de&&\"ko\"!==c.locale&&(ie||\"onCompositionStart\"!==ba?\"onCompositionEnd\"===ba&&ie&&($a=nd()):(kd=e,ld=\"value\"in kd?kd.value:kd.textContent,ie=!0)),xa=oe(d,ba),0<xa.length&&(ba=new Ld(ba,a,null,c,e),g.push({event:ba,listeners:xa}),$a?ba.data=$a:($a=he(c),null!==$a&&(ba.data=$a))));if($a=ce?je(a,c):ke(a,c))d=oe(d,\"onBeforeInput\"),\n0<d.length&&(e=new Ld(\"onBeforeInput\",\"beforeinput\",null,c,e),g.push({event:e,listeners:d}),e.data=$a)}se(g,b)})}function tf(a,b,c){return{instance:a,listener:b,currentTarget:c}}function oe(a,b){for(var c=b+\"Capture\",d=[];null!==a;){var e=a,f=e.stateNode;5===e.tag&&null!==f&&(e=f,f=Kb(a,c),null!=f&&d.unshift(tf(a,f,e)),f=Kb(a,b),null!=f&&d.push(tf(a,f,e)));a=a.return}return d}function vf(a){if(null===a)return null;do a=a.return;while(a&&5!==a.tag);return a?a:null}\nfunction wf(a,b,c,d,e){for(var f=b._reactName,g=[];null!==c&&c!==d;){var h=c,k=h.alternate,l=h.stateNode;if(null!==k&&k===d)break;5===h.tag&&null!==l&&(h=l,e?(k=Kb(c,f),null!=k&&g.unshift(tf(c,k,h))):e||(k=Kb(c,f),null!=k&&g.push(tf(c,k,h))));c=c.return}0!==g.length&&a.push({event:b,listeners:g})}var xf=/\\r\\n?/g,yf=/\\u0000|\\uFFFD/g;function zf(a){return(\"string\"===typeof a?a:\"\"+a).replace(xf,\"\\n\").replace(yf,\"\")}function Af(a,b,c){b=zf(b);if(zf(a)!==b&&c)throw Error(p(425));}function Bf(){}\nvar Cf=null,Df=null;function Ef(a,b){return\"textarea\"===a||\"noscript\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}\nvar Ff=\"function\"===typeof setTimeout?setTimeout:void 0,Gf=\"function\"===typeof clearTimeout?clearTimeout:void 0,Hf=\"function\"===typeof Promise?Promise:void 0,Jf=\"function\"===typeof queueMicrotask?queueMicrotask:\"undefined\"!==typeof Hf?function(a){return Hf.resolve(null).then(a).catch(If)}:Ff;function If(a){setTimeout(function(){throw a;})}\nfunction Kf(a,b){var c=b,d=0;do{var e=c.nextSibling;a.removeChild(c);if(e&&8===e.nodeType)if(c=e.data,\"/$\"===c){if(0===d){a.removeChild(e);bd(b);return}d--}else\"$\"!==c&&\"$?\"!==c&&\"$!\"!==c||d++;c=e}while(c);bd(b)}function Lf(a){for(;null!=a;a=a.nextSibling){var b=a.nodeType;if(1===b||3===b)break;if(8===b){b=a.data;if(\"$\"===b||\"$!\"===b||\"$?\"===b)break;if(\"/$\"===b)return null}}return a}\nfunction Mf(a){a=a.previousSibling;for(var b=0;a;){if(8===a.nodeType){var c=a.data;if(\"$\"===c||\"$!\"===c||\"$?\"===c){if(0===b)return a;b--}else\"/$\"===c&&b++}a=a.previousSibling}return null}var Nf=Math.random().toString(36).slice(2),Of=\"__reactFiber$\"+Nf,Pf=\"__reactProps$\"+Nf,uf=\"__reactContainer$\"+Nf,of=\"__reactEvents$\"+Nf,Qf=\"__reactListeners$\"+Nf,Rf=\"__reactHandles$\"+Nf;\nfunction Wc(a){var b=a[Of];if(b)return b;for(var c=a.parentNode;c;){if(b=c[uf]||c[Of]){c=b.alternate;if(null!==b.child||null!==c&&null!==c.child)for(a=Mf(a);null!==a;){if(c=a[Of])return c;a=Mf(a)}return b}a=c;c=a.parentNode}return null}function Cb(a){a=a[Of]||a[uf];return!a||5!==a.tag&&6!==a.tag&&13!==a.tag&&3!==a.tag?null:a}function ue(a){if(5===a.tag||6===a.tag)return a.stateNode;throw Error(p(33));}function Db(a){return a[Pf]||null}var Sf=[],Tf=-1;function Uf(a){return{current:a}}\nfunction E(a){0>Tf||(a.current=Sf[Tf],Sf[Tf]=null,Tf--)}function G(a,b){Tf++;Sf[Tf]=a.current;a.current=b}var Vf={},H=Uf(Vf),Wf=Uf(!1),Xf=Vf;function Yf(a,b){var c=a.type.contextTypes;if(!c)return Vf;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}\nfunction Zf(a){a=a.childContextTypes;return null!==a&&void 0!==a}function $f(){E(Wf);E(H)}function ag(a,b,c){if(H.current!==Vf)throw Error(p(168));G(H,b);G(Wf,c)}function bg(a,b,c){var d=a.stateNode;b=b.childContextTypes;if(\"function\"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)if(!(e in b))throw Error(p(108,Ra(a)||\"Unknown\",e));return A({},c,d)}\nfunction cg(a){a=(a=a.stateNode)&&a.__reactInternalMemoizedMergedChildContext||Vf;Xf=H.current;G(H,a);G(Wf,Wf.current);return!0}function dg(a,b,c){var d=a.stateNode;if(!d)throw Error(p(169));c?(a=bg(a,b,Xf),d.__reactInternalMemoizedMergedChildContext=a,E(Wf),E(H),G(H,a)):E(Wf);G(Wf,c)}var eg=null,fg=!1,gg=!1;function hg(a){null===eg?eg=[a]:eg.push(a)}function ig(a){fg=!0;hg(a)}\nfunction jg(){if(!gg&&null!==eg){gg=!0;var a=0,b=C;try{var c=eg;for(C=1;a<c.length;a++){var d=c[a];do d=d(!0);while(null!==d)}eg=null;fg=!1}catch(e){throw null!==eg&&(eg=eg.slice(a+1)),ac(fc,jg),e;}finally{C=b,gg=!1}}return null}var kg=[],lg=0,mg=null,ng=0,og=[],pg=0,qg=null,rg=1,sg=\"\";function tg(a,b){kg[lg++]=ng;kg[lg++]=mg;mg=a;ng=b}\nfunction ug(a,b,c){og[pg++]=rg;og[pg++]=sg;og[pg++]=qg;qg=a;var d=rg;a=sg;var e=32-oc(d)-1;d&=~(1<<e);c+=1;var f=32-oc(b)+e;if(30<f){var g=e-e%5;f=(d&(1<<g)-1).toString(32);d>>=g;e-=g;rg=1<<32-oc(b)+e|c<<e|d;sg=f+a}else rg=1<<f|c<<e|d,sg=a}function vg(a){null!==a.return&&(tg(a,1),ug(a,1,0))}function wg(a){for(;a===mg;)mg=kg[--lg],kg[lg]=null,ng=kg[--lg],kg[lg]=null;for(;a===qg;)qg=og[--pg],og[pg]=null,sg=og[--pg],og[pg]=null,rg=og[--pg],og[pg]=null}var xg=null,yg=null,I=!1,zg=null;\nfunction Ag(a,b){var c=Bg(5,null,null,0);c.elementType=\"DELETED\";c.stateNode=b;c.return=a;b=a.deletions;null===b?(a.deletions=[c],a.flags|=16):b.push(c)}\nfunction Cg(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,xg=a,yg=Lf(b.firstChild),!0):!1;case 6:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,xg=a,yg=null,!0):!1;case 13:return b=8!==b.nodeType?null:b,null!==b?(c=null!==qg?{id:rg,overflow:sg}:null,a.memoizedState={dehydrated:b,treeContext:c,retryLane:1073741824},c=Bg(18,null,null,0),c.stateNode=b,c.return=a,a.child=c,xg=a,yg=\nnull,!0):!1;default:return!1}}function Dg(a){return 0!==(a.mode&1)&&0===(a.flags&128)}function Eg(a){if(I){var b=yg;if(b){var c=b;if(!Cg(a,b)){if(Dg(a))throw Error(p(418));b=Lf(c.nextSibling);var d=xg;b&&Cg(a,b)?Ag(d,c):(a.flags=a.flags&-4097|2,I=!1,xg=a)}}else{if(Dg(a))throw Error(p(418));a.flags=a.flags&-4097|2;I=!1;xg=a}}}function Fg(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&13!==a.tag;)a=a.return;xg=a}\nfunction Gg(a){if(a!==xg)return!1;if(!I)return Fg(a),I=!0,!1;var b;(b=3!==a.tag)&&!(b=5!==a.tag)&&(b=a.type,b=\"head\"!==b&&\"body\"!==b&&!Ef(a.type,a.memoizedProps));if(b&&(b=yg)){if(Dg(a))throw Hg(),Error(p(418));for(;b;)Ag(a,b),b=Lf(b.nextSibling)}Fg(a);if(13===a.tag){a=a.memoizedState;a=null!==a?a.dehydrated:null;if(!a)throw Error(p(317));a:{a=a.nextSibling;for(b=0;a;){if(8===a.nodeType){var c=a.data;if(\"/$\"===c){if(0===b){yg=Lf(a.nextSibling);break a}b--}else\"$\"!==c&&\"$!\"!==c&&\"$?\"!==c||b++}a=a.nextSibling}yg=\nnull}}else yg=xg?Lf(a.stateNode.nextSibling):null;return!0}function Hg(){for(var a=yg;a;)a=Lf(a.nextSibling)}function Ig(){yg=xg=null;I=!1}function Jg(a){null===zg?zg=[a]:zg.push(a)}var Kg=ua.ReactCurrentBatchConfig;\nfunction Lg(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;if(c){if(1!==c.tag)throw Error(p(309));var d=c.stateNode}if(!d)throw Error(p(147,a));var e=d,f=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===f)return b.ref;b=function(a){var b=e.refs;null===a?delete b[f]:b[f]=a};b._stringRef=f;return b}if(\"string\"!==typeof a)throw Error(p(284));if(!c._owner)throw Error(p(290,a));}return a}\nfunction Mg(a,b){a=Object.prototype.toString.call(b);throw Error(p(31,\"[object Object]\"===a?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":a));}function Ng(a){var b=a._init;return b(a._payload)}\nfunction Og(a){function b(b,c){if(a){var d=b.deletions;null===d?(b.deletions=[c],b.flags|=16):d.push(c)}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b){a=Pg(a,b);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return b.flags|=1048576,c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.flags|=2,c):d;b.flags|=2;return c}function g(b){a&&\nnull===b.alternate&&(b.flags|=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=Qg(c,a.mode,d),b.return=a,b;b=e(b,c);b.return=a;return b}function k(a,b,c,d){var f=c.type;if(f===ya)return m(a,b,c.props.children,d,c.key);if(null!==b&&(b.elementType===f||\"object\"===typeof f&&null!==f&&f.$$typeof===Ha&&Ng(f)===b.type))return d=e(b,c.props),d.ref=Lg(a,b,c),d.return=a,d;d=Rg(c.type,c.key,c.props,null,a.mode,d);d.ref=Lg(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||4!==b.tag||\nb.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=Sg(c,a.mode,d),b.return=a,b;b=e(b,c.children||[]);b.return=a;return b}function m(a,b,c,d,f){if(null===b||7!==b.tag)return b=Tg(c,a.mode,d,f),b.return=a,b;b=e(b,c);b.return=a;return b}function q(a,b,c){if(\"string\"===typeof b&&\"\"!==b||\"number\"===typeof b)return b=Qg(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case va:return c=Rg(b.type,b.key,b.props,null,a.mode,c),\nc.ref=Lg(a,null,b),c.return=a,c;case wa:return b=Sg(b,a.mode,c),b.return=a,b;case Ha:var d=b._init;return q(a,d(b._payload),c)}if(eb(b)||Ka(b))return b=Tg(b,a.mode,c,null),b.return=a,b;Mg(a,b)}return null}function r(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c&&\"\"!==c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case va:return c.key===e?k(a,b,c,d):null;case wa:return c.key===e?l(a,b,c,d):null;case Ha:return e=c._init,r(a,\nb,e(c._payload),d)}if(eb(c)||Ka(c))return null!==e?null:m(a,b,c,d,null);Mg(a,c)}return null}function y(a,b,c,d,e){if(\"string\"===typeof d&&\"\"!==d||\"number\"===typeof d)return a=a.get(c)||null,h(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case va:return a=a.get(null===d.key?c:d.key)||null,k(b,a,d,e);case wa:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e);case Ha:var f=d._init;return y(a,b,c,f(d._payload),e)}if(eb(d)||Ka(d))return a=a.get(c)||null,m(b,a,d,e,null);Mg(b,d)}return null}\nfunction n(e,g,h,k){for(var l=null,m=null,u=g,w=g=0,x=null;null!==u&&w<h.length;w++){u.index>w?(x=u,u=null):x=u.sibling;var n=r(e,u,h[w],k);if(null===n){null===u&&(u=x);break}a&&u&&null===n.alternate&&b(e,u);g=f(n,g,w);null===m?l=n:m.sibling=n;m=n;u=x}if(w===h.length)return c(e,u),I&&tg(e,w),l;if(null===u){for(;w<h.length;w++)u=q(e,h[w],k),null!==u&&(g=f(u,g,w),null===m?l=u:m.sibling=u,m=u);I&&tg(e,w);return l}for(u=d(e,u);w<h.length;w++)x=y(u,e,w,h[w],k),null!==x&&(a&&null!==x.alternate&&u.delete(null===\nx.key?w:x.key),g=f(x,g,w),null===m?l=x:m.sibling=x,m=x);a&&u.forEach(function(a){return b(e,a)});I&&tg(e,w);return l}function t(e,g,h,k){var l=Ka(h);if(\"function\"!==typeof l)throw Error(p(150));h=l.call(h);if(null==h)throw Error(p(151));for(var u=l=null,m=g,w=g=0,x=null,n=h.next();null!==m&&!n.done;w++,n=h.next()){m.index>w?(x=m,m=null):x=m.sibling;var t=r(e,m,n.value,k);if(null===t){null===m&&(m=x);break}a&&m&&null===t.alternate&&b(e,m);g=f(t,g,w);null===u?l=t:u.sibling=t;u=t;m=x}if(n.done)return c(e,\nm),I&&tg(e,w),l;if(null===m){for(;!n.done;w++,n=h.next())n=q(e,n.value,k),null!==n&&(g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);I&&tg(e,w);return l}for(m=d(e,m);!n.done;w++,n=h.next())n=y(m,e,w,n.value,k),null!==n&&(a&&null!==n.alternate&&m.delete(null===n.key?w:n.key),g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);a&&m.forEach(function(a){return b(e,a)});I&&tg(e,w);return l}function J(a,d,f,h){\"object\"===typeof f&&null!==f&&f.type===ya&&null===f.key&&(f=f.props.children);if(\"object\"===typeof f&&null!==f){switch(f.$$typeof){case va:a:{for(var k=\nf.key,l=d;null!==l;){if(l.key===k){k=f.type;if(k===ya){if(7===l.tag){c(a,l.sibling);d=e(l,f.props.children);d.return=a;a=d;break a}}else if(l.elementType===k||\"object\"===typeof k&&null!==k&&k.$$typeof===Ha&&Ng(k)===l.type){c(a,l.sibling);d=e(l,f.props);d.ref=Lg(a,l,f);d.return=a;a=d;break a}c(a,l);break}else b(a,l);l=l.sibling}f.type===ya?(d=Tg(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=Rg(f.type,f.key,f.props,null,a.mode,h),h.ref=Lg(a,d,f),h.return=a,a=h)}return g(a);case wa:a:{for(l=f.key;null!==\nd;){if(d.key===l)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[]);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=Sg(f,a.mode,h);d.return=a;a=d}return g(a);case Ha:return l=f._init,J(a,d,l(f._payload),h)}if(eb(f))return n(a,d,f,h);if(Ka(f))return t(a,d,f,h);Mg(a,f)}return\"string\"===typeof f&&\"\"!==f||\"number\"===typeof f?(f=\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f),d.return=a,a=d):\n(c(a,d),d=Qg(f,a.mode,h),d.return=a,a=d),g(a)):c(a,d)}return J}var Ug=Og(!0),Vg=Og(!1),Wg=Uf(null),Xg=null,Yg=null,Zg=null;function $g(){Zg=Yg=Xg=null}function ah(a){var b=Wg.current;E(Wg);a._currentValue=b}function bh(a,b,c){for(;null!==a;){var d=a.alternate;(a.childLanes&b)!==b?(a.childLanes|=b,null!==d&&(d.childLanes|=b)):null!==d&&(d.childLanes&b)!==b&&(d.childLanes|=b);if(a===c)break;a=a.return}}\nfunction ch(a,b){Xg=a;Zg=Yg=null;a=a.dependencies;null!==a&&null!==a.firstContext&&(0!==(a.lanes&b)&&(dh=!0),a.firstContext=null)}function eh(a){var b=a._currentValue;if(Zg!==a)if(a={context:a,memoizedValue:b,next:null},null===Yg){if(null===Xg)throw Error(p(308));Yg=a;Xg.dependencies={lanes:0,firstContext:a}}else Yg=Yg.next=a;return b}var fh=null;function gh(a){null===fh?fh=[a]:fh.push(a)}\nfunction hh(a,b,c,d){var e=b.interleaved;null===e?(c.next=c,gh(b)):(c.next=e.next,e.next=c);b.interleaved=c;return ih(a,d)}function ih(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);c=a;for(a=a.return;null!==a;)a.childLanes|=b,c=a.alternate,null!==c&&(c.childLanes|=b),c=a,a=a.return;return 3===c.tag?c.stateNode:null}var jh=!1;function kh(a){a.updateQueue={baseState:a.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}\nfunction lh(a,b){a=a.updateQueue;b.updateQueue===a&&(b.updateQueue={baseState:a.baseState,firstBaseUpdate:a.firstBaseUpdate,lastBaseUpdate:a.lastBaseUpdate,shared:a.shared,effects:a.effects})}function mh(a,b){return{eventTime:a,lane:b,tag:0,payload:null,callback:null,next:null}}\nfunction nh(a,b,c){var d=a.updateQueue;if(null===d)return null;d=d.shared;if(0!==(K&2)){var e=d.pending;null===e?b.next=b:(b.next=e.next,e.next=b);d.pending=b;return ih(a,c)}e=d.interleaved;null===e?(b.next=b,gh(d)):(b.next=e.next,e.next=b);d.interleaved=b;return ih(a,c)}function oh(a,b,c){b=b.updateQueue;if(null!==b&&(b=b.shared,0!==(c&4194240))){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Cc(a,c)}}\nfunction ph(a,b){var c=a.updateQueue,d=a.alternate;if(null!==d&&(d=d.updateQueue,c===d)){var e=null,f=null;c=c.firstBaseUpdate;if(null!==c){do{var g={eventTime:c.eventTime,lane:c.lane,tag:c.tag,payload:c.payload,callback:c.callback,next:null};null===f?e=f=g:f=f.next=g;c=c.next}while(null!==c);null===f?e=f=b:f=f.next=b}else e=f=b;c={baseState:d.baseState,firstBaseUpdate:e,lastBaseUpdate:f,shared:d.shared,effects:d.effects};a.updateQueue=c;return}a=c.lastBaseUpdate;null===a?c.firstBaseUpdate=b:a.next=\nb;c.lastBaseUpdate=b}\nfunction qh(a,b,c,d){var e=a.updateQueue;jh=!1;var f=e.firstBaseUpdate,g=e.lastBaseUpdate,h=e.shared.pending;if(null!==h){e.shared.pending=null;var k=h,l=k.next;k.next=null;null===g?f=l:g.next=l;g=k;var m=a.alternate;null!==m&&(m=m.updateQueue,h=m.lastBaseUpdate,h!==g&&(null===h?m.firstBaseUpdate=l:h.next=l,m.lastBaseUpdate=k))}if(null!==f){var q=e.baseState;g=0;m=l=k=null;h=f;do{var r=h.lane,y=h.eventTime;if((d&r)===r){null!==m&&(m=m.next={eventTime:y,lane:0,tag:h.tag,payload:h.payload,callback:h.callback,\nnext:null});a:{var n=a,t=h;r=b;y=c;switch(t.tag){case 1:n=t.payload;if(\"function\"===typeof n){q=n.call(y,q,r);break a}q=n;break a;case 3:n.flags=n.flags&-65537|128;case 0:n=t.payload;r=\"function\"===typeof n?n.call(y,q,r):n;if(null===r||void 0===r)break a;q=A({},q,r);break a;case 2:jh=!0}}null!==h.callback&&0!==h.lane&&(a.flags|=64,r=e.effects,null===r?e.effects=[h]:r.push(h))}else y={eventTime:y,lane:r,tag:h.tag,payload:h.payload,callback:h.callback,next:null},null===m?(l=m=y,k=q):m=m.next=y,g|=r;\nh=h.next;if(null===h)if(h=e.shared.pending,null===h)break;else r=h,h=r.next,r.next=null,e.lastBaseUpdate=r,e.shared.pending=null}while(1);null===m&&(k=q);e.baseState=k;e.firstBaseUpdate=l;e.lastBaseUpdate=m;b=e.shared.interleaved;if(null!==b){e=b;do g|=e.lane,e=e.next;while(e!==b)}else null===f&&(e.shared.lanes=0);rh|=g;a.lanes=g;a.memoizedState=q}}\nfunction sh(a,b,c){a=b.effects;b.effects=null;if(null!==a)for(b=0;b<a.length;b++){var d=a[b],e=d.callback;if(null!==e){d.callback=null;d=c;if(\"function\"!==typeof e)throw Error(p(191,e));e.call(d)}}}var th={},uh=Uf(th),vh=Uf(th),wh=Uf(th);function xh(a){if(a===th)throw Error(p(174));return a}\nfunction yh(a,b){G(wh,b);G(vh,a);G(uh,th);a=b.nodeType;switch(a){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:lb(null,\"\");break;default:a=8===a?b.parentNode:b,b=a.namespaceURI||null,a=a.tagName,b=lb(b,a)}E(uh);G(uh,b)}function zh(){E(uh);E(vh);E(wh)}function Ah(a){xh(wh.current);var b=xh(uh.current);var c=lb(b,a.type);b!==c&&(G(vh,a),G(uh,c))}function Bh(a){vh.current===a&&(E(uh),E(vh))}var L=Uf(0);\nfunction Ch(a){for(var b=a;null!==b;){if(13===b.tag){var c=b.memoizedState;if(null!==c&&(c=c.dehydrated,null===c||\"$?\"===c.data||\"$!\"===c.data))return b}else if(19===b.tag&&void 0!==b.memoizedProps.revealOrder){if(0!==(b.flags&128))return b}else if(null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}return null}var Dh=[];\nfunction Eh(){for(var a=0;a<Dh.length;a++)Dh[a]._workInProgressVersionPrimary=null;Dh.length=0}var Fh=ua.ReactCurrentDispatcher,Gh=ua.ReactCurrentBatchConfig,Hh=0,M=null,N=null,O=null,Ih=!1,Jh=!1,Kh=0,Lh=0;function P(){throw Error(p(321));}function Mh(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!He(a[c],b[c]))return!1;return!0}\nfunction Nh(a,b,c,d,e,f){Hh=f;M=b;b.memoizedState=null;b.updateQueue=null;b.lanes=0;Fh.current=null===a||null===a.memoizedState?Oh:Ph;a=c(d,e);if(Jh){f=0;do{Jh=!1;Kh=0;if(25<=f)throw Error(p(301));f+=1;O=N=null;b.updateQueue=null;Fh.current=Qh;a=c(d,e)}while(Jh)}Fh.current=Rh;b=null!==N&&null!==N.next;Hh=0;O=N=M=null;Ih=!1;if(b)throw Error(p(300));return a}function Sh(){var a=0!==Kh;Kh=0;return a}\nfunction Th(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};null===O?M.memoizedState=O=a:O=O.next=a;return O}function Uh(){if(null===N){var a=M.alternate;a=null!==a?a.memoizedState:null}else a=N.next;var b=null===O?M.memoizedState:O.next;if(null!==b)O=b,N=a;else{if(null===a)throw Error(p(310));N=a;a={memoizedState:N.memoizedState,baseState:N.baseState,baseQueue:N.baseQueue,queue:N.queue,next:null};null===O?M.memoizedState=O=a:O=O.next=a}return O}\nfunction Vh(a,b){return\"function\"===typeof b?b(a):b}\nfunction Wh(a){var b=Uh(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=N,e=d.baseQueue,f=c.pending;if(null!==f){if(null!==e){var g=e.next;e.next=f.next;f.next=g}d.baseQueue=e=f;c.pending=null}if(null!==e){f=e.next;d=d.baseState;var h=g=null,k=null,l=f;do{var m=l.lane;if((Hh&m)===m)null!==k&&(k=k.next={lane:0,action:l.action,hasEagerState:l.hasEagerState,eagerState:l.eagerState,next:null}),d=l.hasEagerState?l.eagerState:a(d,l.action);else{var q={lane:m,action:l.action,hasEagerState:l.hasEagerState,\neagerState:l.eagerState,next:null};null===k?(h=k=q,g=d):k=k.next=q;M.lanes|=m;rh|=m}l=l.next}while(null!==l&&l!==f);null===k?g=d:k.next=h;He(d,b.memoizedState)||(dh=!0);b.memoizedState=d;b.baseState=g;b.baseQueue=k;c.lastRenderedState=d}a=c.interleaved;if(null!==a){e=a;do f=e.lane,M.lanes|=f,rh|=f,e=e.next;while(e!==a)}else null===e&&(c.lanes=0);return[b.memoizedState,c.dispatch]}\nfunction Xh(a){var b=Uh(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=c.dispatch,e=c.pending,f=b.memoizedState;if(null!==e){c.pending=null;var g=e=e.next;do f=a(f,g.action),g=g.next;while(g!==e);He(f,b.memoizedState)||(dh=!0);b.memoizedState=f;null===b.baseQueue&&(b.baseState=f);c.lastRenderedState=f}return[f,d]}function Yh(){}\nfunction Zh(a,b){var c=M,d=Uh(),e=b(),f=!He(d.memoizedState,e);f&&(d.memoizedState=e,dh=!0);d=d.queue;$h(ai.bind(null,c,d,a),[a]);if(d.getSnapshot!==b||f||null!==O&&O.memoizedState.tag&1){c.flags|=2048;bi(9,ci.bind(null,c,d,e,b),void 0,null);if(null===Q)throw Error(p(349));0!==(Hh&30)||di(c,b,e)}return e}function di(a,b,c){a.flags|=16384;a={getSnapshot:b,value:c};b=M.updateQueue;null===b?(b={lastEffect:null,stores:null},M.updateQueue=b,b.stores=[a]):(c=b.stores,null===c?b.stores=[a]:c.push(a))}\nfunction ci(a,b,c,d){b.value=c;b.getSnapshot=d;ei(b)&&fi(a)}function ai(a,b,c){return c(function(){ei(b)&&fi(a)})}function ei(a){var b=a.getSnapshot;a=a.value;try{var c=b();return!He(a,c)}catch(d){return!0}}function fi(a){var b=ih(a,1);null!==b&&gi(b,a,1,-1)}\nfunction hi(a){var b=Th();\"function\"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Vh,lastRenderedState:a};b.queue=a;a=a.dispatch=ii.bind(null,M,a);return[b.memoizedState,a]}\nfunction bi(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};b=M.updateQueue;null===b?(b={lastEffect:null,stores:null},M.updateQueue=b,b.lastEffect=a.next=a):(c=b.lastEffect,null===c?b.lastEffect=a.next=a:(d=c.next,c.next=a,a.next=d,b.lastEffect=a));return a}function ji(){return Uh().memoizedState}function ki(a,b,c,d){var e=Th();M.flags|=a;e.memoizedState=bi(1|b,c,void 0,void 0===d?null:d)}\nfunction li(a,b,c,d){var e=Uh();d=void 0===d?null:d;var f=void 0;if(null!==N){var g=N.memoizedState;f=g.destroy;if(null!==d&&Mh(d,g.deps)){e.memoizedState=bi(b,c,f,d);return}}M.flags|=a;e.memoizedState=bi(1|b,c,f,d)}function mi(a,b){return ki(8390656,8,a,b)}function $h(a,b){return li(2048,8,a,b)}function ni(a,b){return li(4,2,a,b)}function oi(a,b){return li(4,4,a,b)}\nfunction pi(a,b){if(\"function\"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}function qi(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return li(4,4,pi.bind(null,b,a),c)}function ri(){}function si(a,b){var c=Uh();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Mh(b,d[1]))return d[0];c.memoizedState=[a,b];return a}\nfunction ti(a,b){var c=Uh();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Mh(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a}function ui(a,b,c){if(0===(Hh&21))return a.baseState&&(a.baseState=!1,dh=!0),a.memoizedState=c;He(c,b)||(c=yc(),M.lanes|=c,rh|=c,a.baseState=!0);return b}function vi(a,b){var c=C;C=0!==c&&4>c?c:4;a(!0);var d=Gh.transition;Gh.transition={};try{a(!1),b()}finally{C=c,Gh.transition=d}}function wi(){return Uh().memoizedState}\nfunction xi(a,b,c){var d=yi(a);c={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(zi(a))Ai(b,c);else if(c=hh(a,b,c,d),null!==c){var e=R();gi(c,a,d,e);Bi(c,b,d)}}\nfunction ii(a,b,c){var d=yi(a),e={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(zi(a))Ai(b,e);else{var f=a.alternate;if(0===a.lanes&&(null===f||0===f.lanes)&&(f=b.lastRenderedReducer,null!==f))try{var g=b.lastRenderedState,h=f(g,c);e.hasEagerState=!0;e.eagerState=h;if(He(h,g)){var k=b.interleaved;null===k?(e.next=e,gh(b)):(e.next=k.next,k.next=e);b.interleaved=e;return}}catch(l){}finally{}c=hh(a,b,e,d);null!==c&&(e=R(),gi(c,a,d,e),Bi(c,b,d))}}\nfunction zi(a){var b=a.alternate;return a===M||null!==b&&b===M}function Ai(a,b){Jh=Ih=!0;var c=a.pending;null===c?b.next=b:(b.next=c.next,c.next=b);a.pending=b}function Bi(a,b,c){if(0!==(c&4194240)){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Cc(a,c)}}\nvar Rh={readContext:eh,useCallback:P,useContext:P,useEffect:P,useImperativeHandle:P,useInsertionEffect:P,useLayoutEffect:P,useMemo:P,useReducer:P,useRef:P,useState:P,useDebugValue:P,useDeferredValue:P,useTransition:P,useMutableSource:P,useSyncExternalStore:P,useId:P,unstable_isNewReconciler:!1},Oh={readContext:eh,useCallback:function(a,b){Th().memoizedState=[a,void 0===b?null:b];return a},useContext:eh,useEffect:mi,useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return ki(4194308,\n4,pi.bind(null,b,a),c)},useLayoutEffect:function(a,b){return ki(4194308,4,a,b)},useInsertionEffect:function(a,b){return ki(4,2,a,b)},useMemo:function(a,b){var c=Th();b=void 0===b?null:b;a=a();c.memoizedState=[a,b];return a},useReducer:function(a,b,c){var d=Th();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};d.queue=a;a=a.dispatch=xi.bind(null,M,a);return[d.memoizedState,a]},useRef:function(a){var b=\nTh();a={current:a};return b.memoizedState=a},useState:hi,useDebugValue:ri,useDeferredValue:function(a){return Th().memoizedState=a},useTransition:function(){var a=hi(!1),b=a[0];a=vi.bind(null,a[1]);Th().memoizedState=a;return[b,a]},useMutableSource:function(){},useSyncExternalStore:function(a,b,c){var d=M,e=Th();if(I){if(void 0===c)throw Error(p(407));c=c()}else{c=b();if(null===Q)throw Error(p(349));0!==(Hh&30)||di(d,b,c)}e.memoizedState=c;var f={value:c,getSnapshot:b};e.queue=f;mi(ai.bind(null,d,\nf,a),[a]);d.flags|=2048;bi(9,ci.bind(null,d,f,c,b),void 0,null);return c},useId:function(){var a=Th(),b=Q.identifierPrefix;if(I){var c=sg;var d=rg;c=(d&~(1<<32-oc(d)-1)).toString(32)+c;b=\":\"+b+\"R\"+c;c=Kh++;0<c&&(b+=\"H\"+c.toString(32));b+=\":\"}else c=Lh++,b=\":\"+b+\"r\"+c.toString(32)+\":\";return a.memoizedState=b},unstable_isNewReconciler:!1},Ph={readContext:eh,useCallback:si,useContext:eh,useEffect:$h,useImperativeHandle:qi,useInsertionEffect:ni,useLayoutEffect:oi,useMemo:ti,useReducer:Wh,useRef:ji,useState:function(){return Wh(Vh)},\nuseDebugValue:ri,useDeferredValue:function(a){var b=Uh();return ui(b,N.memoizedState,a)},useTransition:function(){var a=Wh(Vh)[0],b=Uh().memoizedState;return[a,b]},useMutableSource:Yh,useSyncExternalStore:Zh,useId:wi,unstable_isNewReconciler:!1},Qh={readContext:eh,useCallback:si,useContext:eh,useEffect:$h,useImperativeHandle:qi,useInsertionEffect:ni,useLayoutEffect:oi,useMemo:ti,useReducer:Xh,useRef:ji,useState:function(){return Xh(Vh)},useDebugValue:ri,useDeferredValue:function(a){var b=Uh();return null===\nN?b.memoizedState=a:ui(b,N.memoizedState,a)},useTransition:function(){var a=Xh(Vh)[0],b=Uh().memoizedState;return[a,b]},useMutableSource:Yh,useSyncExternalStore:Zh,useId:wi,unstable_isNewReconciler:!1};function Ci(a,b){if(a&&a.defaultProps){b=A({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c]);return b}return b}function Di(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:A({},b,c);a.memoizedState=c;0===a.lanes&&(a.updateQueue.baseState=c)}\nvar Ei={isMounted:function(a){return(a=a._reactInternals)?Vb(a)===a:!1},enqueueSetState:function(a,b,c){a=a._reactInternals;var d=R(),e=yi(a),f=mh(d,e);f.payload=b;void 0!==c&&null!==c&&(f.callback=c);b=nh(a,f,e);null!==b&&(gi(b,a,e,d),oh(b,a,e))},enqueueReplaceState:function(a,b,c){a=a._reactInternals;var d=R(),e=yi(a),f=mh(d,e);f.tag=1;f.payload=b;void 0!==c&&null!==c&&(f.callback=c);b=nh(a,f,e);null!==b&&(gi(b,a,e,d),oh(b,a,e))},enqueueForceUpdate:function(a,b){a=a._reactInternals;var c=R(),d=\nyi(a),e=mh(c,d);e.tag=2;void 0!==b&&null!==b&&(e.callback=b);b=nh(a,e,d);null!==b&&(gi(b,a,d,c),oh(b,a,d))}};function Fi(a,b,c,d,e,f,g){a=a.stateNode;return\"function\"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!Ie(c,d)||!Ie(e,f):!0}\nfunction Gi(a,b,c){var d=!1,e=Vf;var f=b.contextType;\"object\"===typeof f&&null!==f?f=eh(f):(e=Zf(b)?Xf:H.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Yf(a,e):Vf);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=Ei;a.stateNode=b;b._reactInternals=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}\nfunction Hi(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&Ei.enqueueReplaceState(b,b.state,null)}\nfunction Ii(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs={};kh(a);var f=b.contextType;\"object\"===typeof f&&null!==f?e.context=eh(f):(f=Zf(b)?Xf:H.current,e.context=Yf(a,f));e.state=a.memoizedState;f=b.getDerivedStateFromProps;\"function\"===typeof f&&(Di(a,b,f,c),e.state=a.memoizedState);\"function\"===typeof b.getDerivedStateFromProps||\"function\"===typeof e.getSnapshotBeforeUpdate||\"function\"!==typeof e.UNSAFE_componentWillMount&&\"function\"!==typeof e.componentWillMount||(b=e.state,\n\"function\"===typeof e.componentWillMount&&e.componentWillMount(),\"function\"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&Ei.enqueueReplaceState(e,e.state,null),qh(a,c,e,d),e.state=a.memoizedState);\"function\"===typeof e.componentDidMount&&(a.flags|=4194308)}function Ji(a,b){try{var c=\"\",d=b;do c+=Pa(d),d=d.return;while(d);var e=c}catch(f){e=\"\\nError generating stack: \"+f.message+\"\\n\"+f.stack}return{value:a,source:b,stack:e,digest:null}}\nfunction Ki(a,b,c){return{value:a,source:null,stack:null!=c?c:null,digest:null!=b?b:null}}function Li(a,b){try{console.error(b.value)}catch(c){setTimeout(function(){throw c;})}}var Mi=\"function\"===typeof WeakMap?WeakMap:Map;function Ni(a,b,c){c=mh(-1,c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){Oi||(Oi=!0,Pi=d);Li(a,b)};return c}\nfunction Qi(a,b,c){c=mh(-1,c);c.tag=3;var d=a.type.getDerivedStateFromError;if(\"function\"===typeof d){var e=b.value;c.payload=function(){return d(e)};c.callback=function(){Li(a,b)}}var f=a.stateNode;null!==f&&\"function\"===typeof f.componentDidCatch&&(c.callback=function(){Li(a,b);\"function\"!==typeof d&&(null===Ri?Ri=new Set([this]):Ri.add(this));var c=b.stack;this.componentDidCatch(b.value,{componentStack:null!==c?c:\"\"})});return c}\nfunction Si(a,b,c){var d=a.pingCache;if(null===d){d=a.pingCache=new Mi;var e=new Set;d.set(b,e)}else e=d.get(b),void 0===e&&(e=new Set,d.set(b,e));e.has(c)||(e.add(c),a=Ti.bind(null,a,b,c),b.then(a,a))}function Ui(a){do{var b;if(b=13===a.tag)b=a.memoizedState,b=null!==b?null!==b.dehydrated?!0:!1:!0;if(b)return a;a=a.return}while(null!==a);return null}\nfunction Vi(a,b,c,d,e){if(0===(a.mode&1))return a===b?a.flags|=65536:(a.flags|=128,c.flags|=131072,c.flags&=-52805,1===c.tag&&(null===c.alternate?c.tag=17:(b=mh(-1,1),b.tag=2,nh(c,b,1))),c.lanes|=1),a;a.flags|=65536;a.lanes=e;return a}var Wi=ua.ReactCurrentOwner,dh=!1;function Xi(a,b,c,d){b.child=null===a?Vg(b,null,c,d):Ug(b,a.child,c,d)}\nfunction Yi(a,b,c,d,e){c=c.render;var f=b.ref;ch(b,e);d=Nh(a,b,c,d,f,e);c=Sh();if(null!==a&&!dh)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,Zi(a,b,e);I&&c&&vg(b);b.flags|=1;Xi(a,b,d,e);return b.child}\nfunction $i(a,b,c,d,e){if(null===a){var f=c.type;if(\"function\"===typeof f&&!aj(f)&&void 0===f.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=f,bj(a,b,f,d,e);a=Rg(c.type,null,d,b,b.mode,e);a.ref=b.ref;a.return=b;return b.child=a}f=a.child;if(0===(a.lanes&e)){var g=f.memoizedProps;c=c.compare;c=null!==c?c:Ie;if(c(g,d)&&a.ref===b.ref)return Zi(a,b,e)}b.flags|=1;a=Pg(f,d);a.ref=b.ref;a.return=b;return b.child=a}\nfunction bj(a,b,c,d,e){if(null!==a){var f=a.memoizedProps;if(Ie(f,d)&&a.ref===b.ref)if(dh=!1,b.pendingProps=d=f,0!==(a.lanes&e))0!==(a.flags&131072)&&(dh=!0);else return b.lanes=a.lanes,Zi(a,b,e)}return cj(a,b,c,d,e)}\nfunction dj(a,b,c){var d=b.pendingProps,e=d.children,f=null!==a?a.memoizedState:null;if(\"hidden\"===d.mode)if(0===(b.mode&1))b.memoizedState={baseLanes:0,cachePool:null,transitions:null},G(ej,fj),fj|=c;else{if(0===(c&1073741824))return a=null!==f?f.baseLanes|c:c,b.lanes=b.childLanes=1073741824,b.memoizedState={baseLanes:a,cachePool:null,transitions:null},b.updateQueue=null,G(ej,fj),fj|=a,null;b.memoizedState={baseLanes:0,cachePool:null,transitions:null};d=null!==f?f.baseLanes:c;G(ej,fj);fj|=d}else null!==\nf?(d=f.baseLanes|c,b.memoizedState=null):d=c,G(ej,fj),fj|=d;Xi(a,b,e,c);return b.child}function gj(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.flags|=512,b.flags|=2097152}function cj(a,b,c,d,e){var f=Zf(c)?Xf:H.current;f=Yf(b,f);ch(b,e);c=Nh(a,b,c,d,f,e);d=Sh();if(null!==a&&!dh)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,Zi(a,b,e);I&&d&&vg(b);b.flags|=1;Xi(a,b,c,e);return b.child}\nfunction hj(a,b,c,d,e){if(Zf(c)){var f=!0;cg(b)}else f=!1;ch(b,e);if(null===b.stateNode)ij(a,b),Gi(b,c,d),Ii(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;\"object\"===typeof l&&null!==l?l=eh(l):(l=Zf(c)?Xf:H.current,l=Yf(b,l));var m=c.getDerivedStateFromProps,q=\"function\"===typeof m||\"function\"===typeof g.getSnapshotBeforeUpdate;q||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||\n(h!==d||k!==l)&&Hi(b,g,d,l);jh=!1;var r=b.memoizedState;g.state=r;qh(b,d,g,e);k=b.memoizedState;h!==d||r!==k||Wf.current||jh?(\"function\"===typeof m&&(Di(b,c,m,d),k=b.memoizedState),(h=jh||Fi(b,c,h,d,r,k,l))?(q||\"function\"!==typeof g.UNSAFE_componentWillMount&&\"function\"!==typeof g.componentWillMount||(\"function\"===typeof g.componentWillMount&&g.componentWillMount(),\"function\"===typeof g.UNSAFE_componentWillMount&&g.UNSAFE_componentWillMount()),\"function\"===typeof g.componentDidMount&&(b.flags|=4194308)):\n(\"function\"===typeof g.componentDidMount&&(b.flags|=4194308),b.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):(\"function\"===typeof g.componentDidMount&&(b.flags|=4194308),d=!1)}else{g=b.stateNode;lh(a,b);h=b.memoizedProps;l=b.type===b.elementType?h:Ci(b.type,h);g.props=l;q=b.pendingProps;r=g.context;k=c.contextType;\"object\"===typeof k&&null!==k?k=eh(k):(k=Zf(c)?Xf:H.current,k=Yf(b,k));var y=c.getDerivedStateFromProps;(m=\"function\"===typeof y||\"function\"===typeof g.getSnapshotBeforeUpdate)||\n\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||(h!==q||r!==k)&&Hi(b,g,d,k);jh=!1;r=b.memoizedState;g.state=r;qh(b,d,g,e);var n=b.memoizedState;h!==q||r!==n||Wf.current||jh?(\"function\"===typeof y&&(Di(b,c,y,d),n=b.memoizedState),(l=jh||Fi(b,c,l,d,r,n,k)||!1)?(m||\"function\"!==typeof g.UNSAFE_componentWillUpdate&&\"function\"!==typeof g.componentWillUpdate||(\"function\"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,n,k),\"function\"===typeof g.UNSAFE_componentWillUpdate&&\ng.UNSAFE_componentWillUpdate(d,n,k)),\"function\"===typeof g.componentDidUpdate&&(b.flags|=4),\"function\"===typeof g.getSnapshotBeforeUpdate&&(b.flags|=1024)):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),b.memoizedProps=d,b.memoizedState=n),g.props=d,g.state=n,g.context=k,d=l):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===\na.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),d=!1)}return jj(a,b,c,d,f,e)}\nfunction jj(a,b,c,d,e,f){gj(a,b);var g=0!==(b.flags&128);if(!d&&!g)return e&&dg(b,c,!1),Zi(a,b,f);d=b.stateNode;Wi.current=b;var h=g&&\"function\"!==typeof c.getDerivedStateFromError?null:d.render();b.flags|=1;null!==a&&g?(b.child=Ug(b,a.child,null,f),b.child=Ug(b,null,h,f)):Xi(a,b,h,f);b.memoizedState=d.state;e&&dg(b,c,!0);return b.child}function kj(a){var b=a.stateNode;b.pendingContext?ag(a,b.pendingContext,b.pendingContext!==b.context):b.context&&ag(a,b.context,!1);yh(a,b.containerInfo)}\nfunction lj(a,b,c,d,e){Ig();Jg(e);b.flags|=256;Xi(a,b,c,d);return b.child}var mj={dehydrated:null,treeContext:null,retryLane:0};function nj(a){return{baseLanes:a,cachePool:null,transitions:null}}\nfunction oj(a,b,c){var d=b.pendingProps,e=L.current,f=!1,g=0!==(b.flags&128),h;(h=g)||(h=null!==a&&null===a.memoizedState?!1:0!==(e&2));if(h)f=!0,b.flags&=-129;else if(null===a||null!==a.memoizedState)e|=1;G(L,e&1);if(null===a){Eg(b);a=b.memoizedState;if(null!==a&&(a=a.dehydrated,null!==a))return 0===(b.mode&1)?b.lanes=1:\"$!\"===a.data?b.lanes=8:b.lanes=1073741824,null;g=d.children;a=d.fallback;return f?(d=b.mode,f=b.child,g={mode:\"hidden\",children:g},0===(d&1)&&null!==f?(f.childLanes=0,f.pendingProps=\ng):f=pj(g,d,0,null),a=Tg(a,d,c,null),f.return=b,a.return=b,f.sibling=a,b.child=f,b.child.memoizedState=nj(c),b.memoizedState=mj,a):qj(b,g)}e=a.memoizedState;if(null!==e&&(h=e.dehydrated,null!==h))return rj(a,b,g,d,h,e,c);if(f){f=d.fallback;g=b.mode;e=a.child;h=e.sibling;var k={mode:\"hidden\",children:d.children};0===(g&1)&&b.child!==e?(d=b.child,d.childLanes=0,d.pendingProps=k,b.deletions=null):(d=Pg(e,k),d.subtreeFlags=e.subtreeFlags&14680064);null!==h?f=Pg(h,f):(f=Tg(f,g,c,null),f.flags|=2);f.return=\nb;d.return=b;d.sibling=f;b.child=d;d=f;f=b.child;g=a.child.memoizedState;g=null===g?nj(c):{baseLanes:g.baseLanes|c,cachePool:null,transitions:g.transitions};f.memoizedState=g;f.childLanes=a.childLanes&~c;b.memoizedState=mj;return d}f=a.child;a=f.sibling;d=Pg(f,{mode:\"visible\",children:d.children});0===(b.mode&1)&&(d.lanes=c);d.return=b;d.sibling=null;null!==a&&(c=b.deletions,null===c?(b.deletions=[a],b.flags|=16):c.push(a));b.child=d;b.memoizedState=null;return d}\nfunction qj(a,b){b=pj({mode:\"visible\",children:b},a.mode,0,null);b.return=a;return a.child=b}function sj(a,b,c,d){null!==d&&Jg(d);Ug(b,a.child,null,c);a=qj(b,b.pendingProps.children);a.flags|=2;b.memoizedState=null;return a}\nfunction rj(a,b,c,d,e,f,g){if(c){if(b.flags&256)return b.flags&=-257,d=Ki(Error(p(422))),sj(a,b,g,d);if(null!==b.memoizedState)return b.child=a.child,b.flags|=128,null;f=d.fallback;e=b.mode;d=pj({mode:\"visible\",children:d.children},e,0,null);f=Tg(f,e,g,null);f.flags|=2;d.return=b;f.return=b;d.sibling=f;b.child=d;0!==(b.mode&1)&&Ug(b,a.child,null,g);b.child.memoizedState=nj(g);b.memoizedState=mj;return f}if(0===(b.mode&1))return sj(a,b,g,null);if(\"$!\"===e.data){d=e.nextSibling&&e.nextSibling.dataset;\nif(d)var h=d.dgst;d=h;f=Error(p(419));d=Ki(f,d,void 0);return sj(a,b,g,d)}h=0!==(g&a.childLanes);if(dh||h){d=Q;if(null!==d){switch(g&-g){case 4:e=2;break;case 16:e=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:e=32;break;case 536870912:e=268435456;break;default:e=0}e=0!==(e&(d.suspendedLanes|g))?0:e;\n0!==e&&e!==f.retryLane&&(f.retryLane=e,ih(a,e),gi(d,a,e,-1))}tj();d=Ki(Error(p(421)));return sj(a,b,g,d)}if(\"$?\"===e.data)return b.flags|=128,b.child=a.child,b=uj.bind(null,a),e._reactRetry=b,null;a=f.treeContext;yg=Lf(e.nextSibling);xg=b;I=!0;zg=null;null!==a&&(og[pg++]=rg,og[pg++]=sg,og[pg++]=qg,rg=a.id,sg=a.overflow,qg=b);b=qj(b,d.children);b.flags|=4096;return b}function vj(a,b,c){a.lanes|=b;var d=a.alternate;null!==d&&(d.lanes|=b);bh(a.return,b,c)}\nfunction wj(a,b,c,d,e){var f=a.memoizedState;null===f?a.memoizedState={isBackwards:b,rendering:null,renderingStartTime:0,last:d,tail:c,tailMode:e}:(f.isBackwards=b,f.rendering=null,f.renderingStartTime=0,f.last=d,f.tail=c,f.tailMode=e)}\nfunction xj(a,b,c){var d=b.pendingProps,e=d.revealOrder,f=d.tail;Xi(a,b,d.children,c);d=L.current;if(0!==(d&2))d=d&1|2,b.flags|=128;else{if(null!==a&&0!==(a.flags&128))a:for(a=b.child;null!==a;){if(13===a.tag)null!==a.memoizedState&&vj(a,c,b);else if(19===a.tag)vj(a,c,b);else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===b)break a;for(;null===a.sibling;){if(null===a.return||a.return===b)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}d&=1}G(L,d);if(0===(b.mode&1))b.memoizedState=\nnull;else switch(e){case \"forwards\":c=b.child;for(e=null;null!==c;)a=c.alternate,null!==a&&null===Ch(a)&&(e=c),c=c.sibling;c=e;null===c?(e=b.child,b.child=null):(e=c.sibling,c.sibling=null);wj(b,!1,e,c,f);break;case \"backwards\":c=null;e=b.child;for(b.child=null;null!==e;){a=e.alternate;if(null!==a&&null===Ch(a)){b.child=e;break}a=e.sibling;e.sibling=c;c=e;e=a}wj(b,!0,c,null,f);break;case \"together\":wj(b,!1,null,null,void 0);break;default:b.memoizedState=null}return b.child}\nfunction ij(a,b){0===(b.mode&1)&&null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2)}function Zi(a,b,c){null!==a&&(b.dependencies=a.dependencies);rh|=b.lanes;if(0===(c&b.childLanes))return null;if(null!==a&&b.child!==a.child)throw Error(p(153));if(null!==b.child){a=b.child;c=Pg(a,a.pendingProps);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=Pg(a,a.pendingProps),c.return=b;c.sibling=null}return b.child}\nfunction yj(a,b,c){switch(b.tag){case 3:kj(b);Ig();break;case 5:Ah(b);break;case 1:Zf(b.type)&&cg(b);break;case 4:yh(b,b.stateNode.containerInfo);break;case 10:var d=b.type._context,e=b.memoizedProps.value;G(Wg,d._currentValue);d._currentValue=e;break;case 13:d=b.memoizedState;if(null!==d){if(null!==d.dehydrated)return G(L,L.current&1),b.flags|=128,null;if(0!==(c&b.child.childLanes))return oj(a,b,c);G(L,L.current&1);a=Zi(a,b,c);return null!==a?a.sibling:null}G(L,L.current&1);break;case 19:d=0!==(c&\nb.childLanes);if(0!==(a.flags&128)){if(d)return xj(a,b,c);b.flags|=128}e=b.memoizedState;null!==e&&(e.rendering=null,e.tail=null,e.lastEffect=null);G(L,L.current);if(d)break;else return null;case 22:case 23:return b.lanes=0,dj(a,b,c)}return Zi(a,b,c)}var zj,Aj,Bj,Cj;\nzj=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};Aj=function(){};\nBj=function(a,b,c,d){var e=a.memoizedProps;if(e!==d){a=b.stateNode;xh(uh.current);var f=null;switch(c){case \"input\":e=Ya(a,e);d=Ya(a,d);f=[];break;case \"select\":e=A({},e,{value:void 0});d=A({},d,{value:void 0});f=[];break;case \"textarea\":e=gb(a,e);d=gb(a,d);f=[];break;default:\"function\"!==typeof e.onClick&&\"function\"===typeof d.onClick&&(a.onclick=Bf)}ub(c,d);var g;c=null;for(l in e)if(!d.hasOwnProperty(l)&&e.hasOwnProperty(l)&&null!=e[l])if(\"style\"===l){var h=e[l];for(g in h)h.hasOwnProperty(g)&&\n(c||(c={}),c[g]=\"\")}else\"dangerouslySetInnerHTML\"!==l&&\"children\"!==l&&\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&\"autoFocus\"!==l&&(ea.hasOwnProperty(l)?f||(f=[]):(f=f||[]).push(l,null));for(l in d){var k=d[l];h=null!=e?e[l]:void 0;if(d.hasOwnProperty(l)&&k!==h&&(null!=k||null!=h))if(\"style\"===l)if(h){for(g in h)!h.hasOwnProperty(g)||k&&k.hasOwnProperty(g)||(c||(c={}),c[g]=\"\");for(g in k)k.hasOwnProperty(g)&&h[g]!==k[g]&&(c||(c={}),c[g]=k[g])}else c||(f||(f=[]),f.push(l,\nc)),c=k;else\"dangerouslySetInnerHTML\"===l?(k=k?k.__html:void 0,h=h?h.__html:void 0,null!=k&&h!==k&&(f=f||[]).push(l,k)):\"children\"===l?\"string\"!==typeof k&&\"number\"!==typeof k||(f=f||[]).push(l,\"\"+k):\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&(ea.hasOwnProperty(l)?(null!=k&&\"onScroll\"===l&&D(\"scroll\",a),f||h===k||(f=[])):(f=f||[]).push(l,k))}c&&(f=f||[]).push(\"style\",c);var l=f;if(b.updateQueue=l)b.flags|=4}};Cj=function(a,b,c,d){c!==d&&(b.flags|=4)};\nfunction Dj(a,b){if(!I)switch(a.tailMode){case \"hidden\":b=a.tail;for(var c=null;null!==b;)null!==b.alternate&&(c=b),b=b.sibling;null===c?a.tail=null:c.sibling=null;break;case \"collapsed\":c=a.tail;for(var d=null;null!==c;)null!==c.alternate&&(d=c),c=c.sibling;null===d?b||null===a.tail?a.tail=null:a.tail.sibling=null:d.sibling=null}}\nfunction S(a){var b=null!==a.alternate&&a.alternate.child===a.child,c=0,d=0;if(b)for(var e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags&14680064,d|=e.flags&14680064,e.return=a,e=e.sibling;else for(e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags,d|=e.flags,e.return=a,e=e.sibling;a.subtreeFlags|=d;a.childLanes=c;return b}\nfunction Ej(a,b,c){var d=b.pendingProps;wg(b);switch(b.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return S(b),null;case 1:return Zf(b.type)&&$f(),S(b),null;case 3:d=b.stateNode;zh();E(Wf);E(H);Eh();d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null);if(null===a||null===a.child)Gg(b)?b.flags|=4:null===a||a.memoizedState.isDehydrated&&0===(b.flags&256)||(b.flags|=1024,null!==zg&&(Fj(zg),zg=null));Aj(a,b);S(b);return null;case 5:Bh(b);var e=xh(wh.current);\nc=b.type;if(null!==a&&null!=b.stateNode)Bj(a,b,c,d,e),a.ref!==b.ref&&(b.flags|=512,b.flags|=2097152);else{if(!d){if(null===b.stateNode)throw Error(p(166));S(b);return null}a=xh(uh.current);if(Gg(b)){d=b.stateNode;c=b.type;var f=b.memoizedProps;d[Of]=b;d[Pf]=f;a=0!==(b.mode&1);switch(c){case \"dialog\":D(\"cancel\",d);D(\"close\",d);break;case \"iframe\":case \"object\":case \"embed\":D(\"load\",d);break;case \"video\":case \"audio\":for(e=0;e<lf.length;e++)D(lf[e],d);break;case \"source\":D(\"error\",d);break;case \"img\":case \"image\":case \"link\":D(\"error\",\nd);D(\"load\",d);break;case \"details\":D(\"toggle\",d);break;case \"input\":Za(d,f);D(\"invalid\",d);break;case \"select\":d._wrapperState={wasMultiple:!!f.multiple};D(\"invalid\",d);break;case \"textarea\":hb(d,f),D(\"invalid\",d)}ub(c,f);e=null;for(var g in f)if(f.hasOwnProperty(g)){var h=f[g];\"children\"===g?\"string\"===typeof h?d.textContent!==h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,h,a),e=[\"children\",h]):\"number\"===typeof h&&d.textContent!==\"\"+h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,\nh,a),e=[\"children\",\"\"+h]):ea.hasOwnProperty(g)&&null!=h&&\"onScroll\"===g&&D(\"scroll\",d)}switch(c){case \"input\":Va(d);db(d,f,!0);break;case \"textarea\":Va(d);jb(d);break;case \"select\":case \"option\":break;default:\"function\"===typeof f.onClick&&(d.onclick=Bf)}d=e;b.updateQueue=d;null!==d&&(b.flags|=4)}else{g=9===e.nodeType?e:e.ownerDocument;\"http://www.w3.org/1999/xhtml\"===a&&(a=kb(c));\"http://www.w3.org/1999/xhtml\"===a?\"script\"===c?(a=g.createElement(\"div\"),a.innerHTML=\"<script>\\x3c/script>\",a=a.removeChild(a.firstChild)):\n\"string\"===typeof d.is?a=g.createElement(c,{is:d.is}):(a=g.createElement(c),\"select\"===c&&(g=a,d.multiple?g.multiple=!0:d.size&&(g.size=d.size))):a=g.createElementNS(a,c);a[Of]=b;a[Pf]=d;zj(a,b,!1,!1);b.stateNode=a;a:{g=vb(c,d);switch(c){case \"dialog\":D(\"cancel\",a);D(\"close\",a);e=d;break;case \"iframe\":case \"object\":case \"embed\":D(\"load\",a);e=d;break;case \"video\":case \"audio\":for(e=0;e<lf.length;e++)D(lf[e],a);e=d;break;case \"source\":D(\"error\",a);e=d;break;case \"img\":case \"image\":case \"link\":D(\"error\",\na);D(\"load\",a);e=d;break;case \"details\":D(\"toggle\",a);e=d;break;case \"input\":Za(a,d);e=Ya(a,d);D(\"invalid\",a);break;case \"option\":e=d;break;case \"select\":a._wrapperState={wasMultiple:!!d.multiple};e=A({},d,{value:void 0});D(\"invalid\",a);break;case \"textarea\":hb(a,d);e=gb(a,d);D(\"invalid\",a);break;default:e=d}ub(c,e);h=e;for(f in h)if(h.hasOwnProperty(f)){var k=h[f];\"style\"===f?sb(a,k):\"dangerouslySetInnerHTML\"===f?(k=k?k.__html:void 0,null!=k&&nb(a,k)):\"children\"===f?\"string\"===typeof k?(\"textarea\"!==\nc||\"\"!==k)&&ob(a,k):\"number\"===typeof k&&ob(a,\"\"+k):\"suppressContentEditableWarning\"!==f&&\"suppressHydrationWarning\"!==f&&\"autoFocus\"!==f&&(ea.hasOwnProperty(f)?null!=k&&\"onScroll\"===f&&D(\"scroll\",a):null!=k&&ta(a,f,k,g))}switch(c){case \"input\":Va(a);db(a,d,!1);break;case \"textarea\":Va(a);jb(a);break;case \"option\":null!=d.value&&a.setAttribute(\"value\",\"\"+Sa(d.value));break;case \"select\":a.multiple=!!d.multiple;f=d.value;null!=f?fb(a,!!d.multiple,f,!1):null!=d.defaultValue&&fb(a,!!d.multiple,d.defaultValue,\n!0);break;default:\"function\"===typeof e.onClick&&(a.onclick=Bf)}switch(c){case \"button\":case \"input\":case \"select\":case \"textarea\":d=!!d.autoFocus;break a;case \"img\":d=!0;break a;default:d=!1}}d&&(b.flags|=4)}null!==b.ref&&(b.flags|=512,b.flags|=2097152)}S(b);return null;case 6:if(a&&null!=b.stateNode)Cj(a,b,a.memoizedProps,d);else{if(\"string\"!==typeof d&&null===b.stateNode)throw Error(p(166));c=xh(wh.current);xh(uh.current);if(Gg(b)){d=b.stateNode;c=b.memoizedProps;d[Of]=b;if(f=d.nodeValue!==c)if(a=\nxg,null!==a)switch(a.tag){case 3:Af(d.nodeValue,c,0!==(a.mode&1));break;case 5:!0!==a.memoizedProps.suppressHydrationWarning&&Af(d.nodeValue,c,0!==(a.mode&1))}f&&(b.flags|=4)}else d=(9===c.nodeType?c:c.ownerDocument).createTextNode(d),d[Of]=b,b.stateNode=d}S(b);return null;case 13:E(L);d=b.memoizedState;if(null===a||null!==a.memoizedState&&null!==a.memoizedState.dehydrated){if(I&&null!==yg&&0!==(b.mode&1)&&0===(b.flags&128))Hg(),Ig(),b.flags|=98560,f=!1;else if(f=Gg(b),null!==d&&null!==d.dehydrated){if(null===\na){if(!f)throw Error(p(318));f=b.memoizedState;f=null!==f?f.dehydrated:null;if(!f)throw Error(p(317));f[Of]=b}else Ig(),0===(b.flags&128)&&(b.memoizedState=null),b.flags|=4;S(b);f=!1}else null!==zg&&(Fj(zg),zg=null),f=!0;if(!f)return b.flags&65536?b:null}if(0!==(b.flags&128))return b.lanes=c,b;d=null!==d;d!==(null!==a&&null!==a.memoizedState)&&d&&(b.child.flags|=8192,0!==(b.mode&1)&&(null===a||0!==(L.current&1)?0===T&&(T=3):tj()));null!==b.updateQueue&&(b.flags|=4);S(b);return null;case 4:return zh(),\nAj(a,b),null===a&&sf(b.stateNode.containerInfo),S(b),null;case 10:return ah(b.type._context),S(b),null;case 17:return Zf(b.type)&&$f(),S(b),null;case 19:E(L);f=b.memoizedState;if(null===f)return S(b),null;d=0!==(b.flags&128);g=f.rendering;if(null===g)if(d)Dj(f,!1);else{if(0!==T||null!==a&&0!==(a.flags&128))for(a=b.child;null!==a;){g=Ch(a);if(null!==g){b.flags|=128;Dj(f,!1);d=g.updateQueue;null!==d&&(b.updateQueue=d,b.flags|=4);b.subtreeFlags=0;d=c;for(c=b.child;null!==c;)f=c,a=d,f.flags&=14680066,\ng=f.alternate,null===g?(f.childLanes=0,f.lanes=a,f.child=null,f.subtreeFlags=0,f.memoizedProps=null,f.memoizedState=null,f.updateQueue=null,f.dependencies=null,f.stateNode=null):(f.childLanes=g.childLanes,f.lanes=g.lanes,f.child=g.child,f.subtreeFlags=0,f.deletions=null,f.memoizedProps=g.memoizedProps,f.memoizedState=g.memoizedState,f.updateQueue=g.updateQueue,f.type=g.type,a=g.dependencies,f.dependencies=null===a?null:{lanes:a.lanes,firstContext:a.firstContext}),c=c.sibling;G(L,L.current&1|2);return b.child}a=\na.sibling}null!==f.tail&&B()>Gj&&(b.flags|=128,d=!0,Dj(f,!1),b.lanes=4194304)}else{if(!d)if(a=Ch(g),null!==a){if(b.flags|=128,d=!0,c=a.updateQueue,null!==c&&(b.updateQueue=c,b.flags|=4),Dj(f,!0),null===f.tail&&\"hidden\"===f.tailMode&&!g.alternate&&!I)return S(b),null}else 2*B()-f.renderingStartTime>Gj&&1073741824!==c&&(b.flags|=128,d=!0,Dj(f,!1),b.lanes=4194304);f.isBackwards?(g.sibling=b.child,b.child=g):(c=f.last,null!==c?c.sibling=g:b.child=g,f.last=g)}if(null!==f.tail)return b=f.tail,f.rendering=\nb,f.tail=b.sibling,f.renderingStartTime=B(),b.sibling=null,c=L.current,G(L,d?c&1|2:c&1),b;S(b);return null;case 22:case 23:return Hj(),d=null!==b.memoizedState,null!==a&&null!==a.memoizedState!==d&&(b.flags|=8192),d&&0!==(b.mode&1)?0!==(fj&1073741824)&&(S(b),b.subtreeFlags&6&&(b.flags|=8192)):S(b),null;case 24:return null;case 25:return null}throw Error(p(156,b.tag));}\nfunction Ij(a,b){wg(b);switch(b.tag){case 1:return Zf(b.type)&&$f(),a=b.flags,a&65536?(b.flags=a&-65537|128,b):null;case 3:return zh(),E(Wf),E(H),Eh(),a=b.flags,0!==(a&65536)&&0===(a&128)?(b.flags=a&-65537|128,b):null;case 5:return Bh(b),null;case 13:E(L);a=b.memoizedState;if(null!==a&&null!==a.dehydrated){if(null===b.alternate)throw Error(p(340));Ig()}a=b.flags;return a&65536?(b.flags=a&-65537|128,b):null;case 19:return E(L),null;case 4:return zh(),null;case 10:return ah(b.type._context),null;case 22:case 23:return Hj(),\nnull;case 24:return null;default:return null}}var Jj=!1,U=!1,Kj=\"function\"===typeof WeakSet?WeakSet:Set,V=null;function Lj(a,b){var c=a.ref;if(null!==c)if(\"function\"===typeof c)try{c(null)}catch(d){W(a,b,d)}else c.current=null}function Mj(a,b,c){try{c()}catch(d){W(a,b,d)}}var Nj=!1;\nfunction Oj(a,b){Cf=dd;a=Me();if(Ne(a)){if(\"selectionStart\"in a)var c={start:a.selectionStart,end:a.selectionEnd};else a:{c=(c=a.ownerDocument)&&c.defaultView||window;var d=c.getSelection&&c.getSelection();if(d&&0!==d.rangeCount){c=d.anchorNode;var e=d.anchorOffset,f=d.focusNode;d=d.focusOffset;try{c.nodeType,f.nodeType}catch(F){c=null;break a}var g=0,h=-1,k=-1,l=0,m=0,q=a,r=null;b:for(;;){for(var y;;){q!==c||0!==e&&3!==q.nodeType||(h=g+e);q!==f||0!==d&&3!==q.nodeType||(k=g+d);3===q.nodeType&&(g+=\nq.nodeValue.length);if(null===(y=q.firstChild))break;r=q;q=y}for(;;){if(q===a)break b;r===c&&++l===e&&(h=g);r===f&&++m===d&&(k=g);if(null!==(y=q.nextSibling))break;q=r;r=q.parentNode}q=y}c=-1===h||-1===k?null:{start:h,end:k}}else c=null}c=c||{start:0,end:0}}else c=null;Df={focusedElem:a,selectionRange:c};dd=!1;for(V=b;null!==V;)if(b=V,a=b.child,0!==(b.subtreeFlags&1028)&&null!==a)a.return=b,V=a;else for(;null!==V;){b=V;try{var n=b.alternate;if(0!==(b.flags&1024))switch(b.tag){case 0:case 11:case 15:break;\ncase 1:if(null!==n){var t=n.memoizedProps,J=n.memoizedState,x=b.stateNode,w=x.getSnapshotBeforeUpdate(b.elementType===b.type?t:Ci(b.type,t),J);x.__reactInternalSnapshotBeforeUpdate=w}break;case 3:var u=b.stateNode.containerInfo;1===u.nodeType?u.textContent=\"\":9===u.nodeType&&u.documentElement&&u.removeChild(u.documentElement);break;case 5:case 6:case 4:case 17:break;default:throw Error(p(163));}}catch(F){W(b,b.return,F)}a=b.sibling;if(null!==a){a.return=b.return;V=a;break}V=b.return}n=Nj;Nj=!1;return n}\nfunction Pj(a,b,c){var d=b.updateQueue;d=null!==d?d.lastEffect:null;if(null!==d){var e=d=d.next;do{if((e.tag&a)===a){var f=e.destroy;e.destroy=void 0;void 0!==f&&Mj(b,c,f)}e=e.next}while(e!==d)}}function Qj(a,b){b=b.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){var c=b=b.next;do{if((c.tag&a)===a){var d=c.create;c.destroy=d()}c=c.next}while(c!==b)}}function Rj(a){var b=a.ref;if(null!==b){var c=a.stateNode;switch(a.tag){case 5:a=c;break;default:a=c}\"function\"===typeof b?b(a):b.current=a}}\nfunction Sj(a){var b=a.alternate;null!==b&&(a.alternate=null,Sj(b));a.child=null;a.deletions=null;a.sibling=null;5===a.tag&&(b=a.stateNode,null!==b&&(delete b[Of],delete b[Pf],delete b[of],delete b[Qf],delete b[Rf]));a.stateNode=null;a.return=null;a.dependencies=null;a.memoizedProps=null;a.memoizedState=null;a.pendingProps=null;a.stateNode=null;a.updateQueue=null}function Tj(a){return 5===a.tag||3===a.tag||4===a.tag}\nfunction Uj(a){a:for(;;){for(;null===a.sibling;){if(null===a.return||Tj(a.return))return null;a=a.return}a.sibling.return=a.return;for(a=a.sibling;5!==a.tag&&6!==a.tag&&18!==a.tag;){if(a.flags&2)continue a;if(null===a.child||4===a.tag)continue a;else a.child.return=a,a=a.child}if(!(a.flags&2))return a.stateNode}}\nfunction Vj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?8===c.nodeType?c.parentNode.insertBefore(a,b):c.insertBefore(a,b):(8===c.nodeType?(b=c.parentNode,b.insertBefore(a,c)):(b=c,b.appendChild(a)),c=c._reactRootContainer,null!==c&&void 0!==c||null!==b.onclick||(b.onclick=Bf));else if(4!==d&&(a=a.child,null!==a))for(Vj(a,b,c),a=a.sibling;null!==a;)Vj(a,b,c),a=a.sibling}\nfunction Wj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?c.insertBefore(a,b):c.appendChild(a);else if(4!==d&&(a=a.child,null!==a))for(Wj(a,b,c),a=a.sibling;null!==a;)Wj(a,b,c),a=a.sibling}var X=null,Xj=!1;function Yj(a,b,c){for(c=c.child;null!==c;)Zj(a,b,c),c=c.sibling}\nfunction Zj(a,b,c){if(lc&&\"function\"===typeof lc.onCommitFiberUnmount)try{lc.onCommitFiberUnmount(kc,c)}catch(h){}switch(c.tag){case 5:U||Lj(c,b);case 6:var d=X,e=Xj;X=null;Yj(a,b,c);X=d;Xj=e;null!==X&&(Xj?(a=X,c=c.stateNode,8===a.nodeType?a.parentNode.removeChild(c):a.removeChild(c)):X.removeChild(c.stateNode));break;case 18:null!==X&&(Xj?(a=X,c=c.stateNode,8===a.nodeType?Kf(a.parentNode,c):1===a.nodeType&&Kf(a,c),bd(a)):Kf(X,c.stateNode));break;case 4:d=X;e=Xj;X=c.stateNode.containerInfo;Xj=!0;\nYj(a,b,c);X=d;Xj=e;break;case 0:case 11:case 14:case 15:if(!U&&(d=c.updateQueue,null!==d&&(d=d.lastEffect,null!==d))){e=d=d.next;do{var f=e,g=f.destroy;f=f.tag;void 0!==g&&(0!==(f&2)?Mj(c,b,g):0!==(f&4)&&Mj(c,b,g));e=e.next}while(e!==d)}Yj(a,b,c);break;case 1:if(!U&&(Lj(c,b),d=c.stateNode,\"function\"===typeof d.componentWillUnmount))try{d.props=c.memoizedProps,d.state=c.memoizedState,d.componentWillUnmount()}catch(h){W(c,b,h)}Yj(a,b,c);break;case 21:Yj(a,b,c);break;case 22:c.mode&1?(U=(d=U)||null!==\nc.memoizedState,Yj(a,b,c),U=d):Yj(a,b,c);break;default:Yj(a,b,c)}}function ak(a){var b=a.updateQueue;if(null!==b){a.updateQueue=null;var c=a.stateNode;null===c&&(c=a.stateNode=new Kj);b.forEach(function(b){var d=bk.bind(null,a,b);c.has(b)||(c.add(b),b.then(d,d))})}}\nfunction ck(a,b){var c=b.deletions;if(null!==c)for(var d=0;d<c.length;d++){var e=c[d];try{var f=a,g=b,h=g;a:for(;null!==h;){switch(h.tag){case 5:X=h.stateNode;Xj=!1;break a;case 3:X=h.stateNode.containerInfo;Xj=!0;break a;case 4:X=h.stateNode.containerInfo;Xj=!0;break a}h=h.return}if(null===X)throw Error(p(160));Zj(f,g,e);X=null;Xj=!1;var k=e.alternate;null!==k&&(k.return=null);e.return=null}catch(l){W(e,b,l)}}if(b.subtreeFlags&12854)for(b=b.child;null!==b;)dk(b,a),b=b.sibling}\nfunction dk(a,b){var c=a.alternate,d=a.flags;switch(a.tag){case 0:case 11:case 14:case 15:ck(b,a);ek(a);if(d&4){try{Pj(3,a,a.return),Qj(3,a)}catch(t){W(a,a.return,t)}try{Pj(5,a,a.return)}catch(t){W(a,a.return,t)}}break;case 1:ck(b,a);ek(a);d&512&&null!==c&&Lj(c,c.return);break;case 5:ck(b,a);ek(a);d&512&&null!==c&&Lj(c,c.return);if(a.flags&32){var e=a.stateNode;try{ob(e,\"\")}catch(t){W(a,a.return,t)}}if(d&4&&(e=a.stateNode,null!=e)){var f=a.memoizedProps,g=null!==c?c.memoizedProps:f,h=a.type,k=a.updateQueue;\na.updateQueue=null;if(null!==k)try{\"input\"===h&&\"radio\"===f.type&&null!=f.name&&ab(e,f);vb(h,g);var l=vb(h,f);for(g=0;g<k.length;g+=2){var m=k[g],q=k[g+1];\"style\"===m?sb(e,q):\"dangerouslySetInnerHTML\"===m?nb(e,q):\"children\"===m?ob(e,q):ta(e,m,q,l)}switch(h){case \"input\":bb(e,f);break;case \"textarea\":ib(e,f);break;case \"select\":var r=e._wrapperState.wasMultiple;e._wrapperState.wasMultiple=!!f.multiple;var y=f.value;null!=y?fb(e,!!f.multiple,y,!1):r!==!!f.multiple&&(null!=f.defaultValue?fb(e,!!f.multiple,\nf.defaultValue,!0):fb(e,!!f.multiple,f.multiple?[]:\"\",!1))}e[Pf]=f}catch(t){W(a,a.return,t)}}break;case 6:ck(b,a);ek(a);if(d&4){if(null===a.stateNode)throw Error(p(162));e=a.stateNode;f=a.memoizedProps;try{e.nodeValue=f}catch(t){W(a,a.return,t)}}break;case 3:ck(b,a);ek(a);if(d&4&&null!==c&&c.memoizedState.isDehydrated)try{bd(b.containerInfo)}catch(t){W(a,a.return,t)}break;case 4:ck(b,a);ek(a);break;case 13:ck(b,a);ek(a);e=a.child;e.flags&8192&&(f=null!==e.memoizedState,e.stateNode.isHidden=f,!f||\nnull!==e.alternate&&null!==e.alternate.memoizedState||(fk=B()));d&4&&ak(a);break;case 22:m=null!==c&&null!==c.memoizedState;a.mode&1?(U=(l=U)||m,ck(b,a),U=l):ck(b,a);ek(a);if(d&8192){l=null!==a.memoizedState;if((a.stateNode.isHidden=l)&&!m&&0!==(a.mode&1))for(V=a,m=a.child;null!==m;){for(q=V=m;null!==V;){r=V;y=r.child;switch(r.tag){case 0:case 11:case 14:case 15:Pj(4,r,r.return);break;case 1:Lj(r,r.return);var n=r.stateNode;if(\"function\"===typeof n.componentWillUnmount){d=r;c=r.return;try{b=d,n.props=\nb.memoizedProps,n.state=b.memoizedState,n.componentWillUnmount()}catch(t){W(d,c,t)}}break;case 5:Lj(r,r.return);break;case 22:if(null!==r.memoizedState){gk(q);continue}}null!==y?(y.return=r,V=y):gk(q)}m=m.sibling}a:for(m=null,q=a;;){if(5===q.tag){if(null===m){m=q;try{e=q.stateNode,l?(f=e.style,\"function\"===typeof f.setProperty?f.setProperty(\"display\",\"none\",\"important\"):f.display=\"none\"):(h=q.stateNode,k=q.memoizedProps.style,g=void 0!==k&&null!==k&&k.hasOwnProperty(\"display\")?k.display:null,h.style.display=\nrb(\"display\",g))}catch(t){W(a,a.return,t)}}}else if(6===q.tag){if(null===m)try{q.stateNode.nodeValue=l?\"\":q.memoizedProps}catch(t){W(a,a.return,t)}}else if((22!==q.tag&&23!==q.tag||null===q.memoizedState||q===a)&&null!==q.child){q.child.return=q;q=q.child;continue}if(q===a)break a;for(;null===q.sibling;){if(null===q.return||q.return===a)break a;m===q&&(m=null);q=q.return}m===q&&(m=null);q.sibling.return=q.return;q=q.sibling}}break;case 19:ck(b,a);ek(a);d&4&&ak(a);break;case 21:break;default:ck(b,\na),ek(a)}}function ek(a){var b=a.flags;if(b&2){try{a:{for(var c=a.return;null!==c;){if(Tj(c)){var d=c;break a}c=c.return}throw Error(p(160));}switch(d.tag){case 5:var e=d.stateNode;d.flags&32&&(ob(e,\"\"),d.flags&=-33);var f=Uj(a);Wj(a,f,e);break;case 3:case 4:var g=d.stateNode.containerInfo,h=Uj(a);Vj(a,h,g);break;default:throw Error(p(161));}}catch(k){W(a,a.return,k)}a.flags&=-3}b&4096&&(a.flags&=-4097)}function hk(a,b,c){V=a;ik(a,b,c)}\nfunction ik(a,b,c){for(var d=0!==(a.mode&1);null!==V;){var e=V,f=e.child;if(22===e.tag&&d){var g=null!==e.memoizedState||Jj;if(!g){var h=e.alternate,k=null!==h&&null!==h.memoizedState||U;h=Jj;var l=U;Jj=g;if((U=k)&&!l)for(V=e;null!==V;)g=V,k=g.child,22===g.tag&&null!==g.memoizedState?jk(e):null!==k?(k.return=g,V=k):jk(e);for(;null!==f;)V=f,ik(f,b,c),f=f.sibling;V=e;Jj=h;U=l}kk(a,b,c)}else 0!==(e.subtreeFlags&8772)&&null!==f?(f.return=e,V=f):kk(a,b,c)}}\nfunction kk(a){for(;null!==V;){var b=V;if(0!==(b.flags&8772)){var c=b.alternate;try{if(0!==(b.flags&8772))switch(b.tag){case 0:case 11:case 15:U||Qj(5,b);break;case 1:var d=b.stateNode;if(b.flags&4&&!U)if(null===c)d.componentDidMount();else{var e=b.elementType===b.type?c.memoizedProps:Ci(b.type,c.memoizedProps);d.componentDidUpdate(e,c.memoizedState,d.__reactInternalSnapshotBeforeUpdate)}var f=b.updateQueue;null!==f&&sh(b,f,d);break;case 3:var g=b.updateQueue;if(null!==g){c=null;if(null!==b.child)switch(b.child.tag){case 5:c=\nb.child.stateNode;break;case 1:c=b.child.stateNode}sh(b,g,c)}break;case 5:var h=b.stateNode;if(null===c&&b.flags&4){c=h;var k=b.memoizedProps;switch(b.type){case \"button\":case \"input\":case \"select\":case \"textarea\":k.autoFocus&&c.focus();break;case \"img\":k.src&&(c.src=k.src)}}break;case 6:break;case 4:break;case 12:break;case 13:if(null===b.memoizedState){var l=b.alternate;if(null!==l){var m=l.memoizedState;if(null!==m){var q=m.dehydrated;null!==q&&bd(q)}}}break;case 19:case 17:case 21:case 22:case 23:case 25:break;\ndefault:throw Error(p(163));}U||b.flags&512&&Rj(b)}catch(r){W(b,b.return,r)}}if(b===a){V=null;break}c=b.sibling;if(null!==c){c.return=b.return;V=c;break}V=b.return}}function gk(a){for(;null!==V;){var b=V;if(b===a){V=null;break}var c=b.sibling;if(null!==c){c.return=b.return;V=c;break}V=b.return}}\nfunction jk(a){for(;null!==V;){var b=V;try{switch(b.tag){case 0:case 11:case 15:var c=b.return;try{Qj(4,b)}catch(k){W(b,c,k)}break;case 1:var d=b.stateNode;if(\"function\"===typeof d.componentDidMount){var e=b.return;try{d.componentDidMount()}catch(k){W(b,e,k)}}var f=b.return;try{Rj(b)}catch(k){W(b,f,k)}break;case 5:var g=b.return;try{Rj(b)}catch(k){W(b,g,k)}}}catch(k){W(b,b.return,k)}if(b===a){V=null;break}var h=b.sibling;if(null!==h){h.return=b.return;V=h;break}V=b.return}}\nvar lk=Math.ceil,mk=ua.ReactCurrentDispatcher,nk=ua.ReactCurrentOwner,ok=ua.ReactCurrentBatchConfig,K=0,Q=null,Y=null,Z=0,fj=0,ej=Uf(0),T=0,pk=null,rh=0,qk=0,rk=0,sk=null,tk=null,fk=0,Gj=Infinity,uk=null,Oi=!1,Pi=null,Ri=null,vk=!1,wk=null,xk=0,yk=0,zk=null,Ak=-1,Bk=0;function R(){return 0!==(K&6)?B():-1!==Ak?Ak:Ak=B()}\nfunction yi(a){if(0===(a.mode&1))return 1;if(0!==(K&2)&&0!==Z)return Z&-Z;if(null!==Kg.transition)return 0===Bk&&(Bk=yc()),Bk;a=C;if(0!==a)return a;a=window.event;a=void 0===a?16:jd(a.type);return a}function gi(a,b,c,d){if(50<yk)throw yk=0,zk=null,Error(p(185));Ac(a,c,d);if(0===(K&2)||a!==Q)a===Q&&(0===(K&2)&&(qk|=c),4===T&&Ck(a,Z)),Dk(a,d),1===c&&0===K&&0===(b.mode&1)&&(Gj=B()+500,fg&&jg())}\nfunction Dk(a,b){var c=a.callbackNode;wc(a,b);var d=uc(a,a===Q?Z:0);if(0===d)null!==c&&bc(c),a.callbackNode=null,a.callbackPriority=0;else if(b=d&-d,a.callbackPriority!==b){null!=c&&bc(c);if(1===b)0===a.tag?ig(Ek.bind(null,a)):hg(Ek.bind(null,a)),Jf(function(){0===(K&6)&&jg()}),c=null;else{switch(Dc(d)){case 1:c=fc;break;case 4:c=gc;break;case 16:c=hc;break;case 536870912:c=jc;break;default:c=hc}c=Fk(c,Gk.bind(null,a))}a.callbackPriority=b;a.callbackNode=c}}\nfunction Gk(a,b){Ak=-1;Bk=0;if(0!==(K&6))throw Error(p(327));var c=a.callbackNode;if(Hk()&&a.callbackNode!==c)return null;var d=uc(a,a===Q?Z:0);if(0===d)return null;if(0!==(d&30)||0!==(d&a.expiredLanes)||b)b=Ik(a,d);else{b=d;var e=K;K|=2;var f=Jk();if(Q!==a||Z!==b)uk=null,Gj=B()+500,Kk(a,b);do try{Lk();break}catch(h){Mk(a,h)}while(1);$g();mk.current=f;K=e;null!==Y?b=0:(Q=null,Z=0,b=T)}if(0!==b){2===b&&(e=xc(a),0!==e&&(d=e,b=Nk(a,e)));if(1===b)throw c=pk,Kk(a,0),Ck(a,d),Dk(a,B()),c;if(6===b)Ck(a,d);\nelse{e=a.current.alternate;if(0===(d&30)&&!Ok(e)&&(b=Ik(a,d),2===b&&(f=xc(a),0!==f&&(d=f,b=Nk(a,f))),1===b))throw c=pk,Kk(a,0),Ck(a,d),Dk(a,B()),c;a.finishedWork=e;a.finishedLanes=d;switch(b){case 0:case 1:throw Error(p(345));case 2:Pk(a,tk,uk);break;case 3:Ck(a,d);if((d&130023424)===d&&(b=fk+500-B(),10<b)){if(0!==uc(a,0))break;e=a.suspendedLanes;if((e&d)!==d){R();a.pingedLanes|=a.suspendedLanes&e;break}a.timeoutHandle=Ff(Pk.bind(null,a,tk,uk),b);break}Pk(a,tk,uk);break;case 4:Ck(a,d);if((d&4194240)===\nd)break;b=a.eventTimes;for(e=-1;0<d;){var g=31-oc(d);f=1<<g;g=b[g];g>e&&(e=g);d&=~f}d=e;d=B()-d;d=(120>d?120:480>d?480:1080>d?1080:1920>d?1920:3E3>d?3E3:4320>d?4320:1960*lk(d/1960))-d;if(10<d){a.timeoutHandle=Ff(Pk.bind(null,a,tk,uk),d);break}Pk(a,tk,uk);break;case 5:Pk(a,tk,uk);break;default:throw Error(p(329));}}}Dk(a,B());return a.callbackNode===c?Gk.bind(null,a):null}\nfunction Nk(a,b){var c=sk;a.current.memoizedState.isDehydrated&&(Kk(a,b).flags|=256);a=Ik(a,b);2!==a&&(b=tk,tk=c,null!==b&&Fj(b));return a}function Fj(a){null===tk?tk=a:tk.push.apply(tk,a)}\nfunction Ok(a){for(var b=a;;){if(b.flags&16384){var c=b.updateQueue;if(null!==c&&(c=c.stores,null!==c))for(var d=0;d<c.length;d++){var e=c[d],f=e.getSnapshot;e=e.value;try{if(!He(f(),e))return!1}catch(g){return!1}}}c=b.child;if(b.subtreeFlags&16384&&null!==c)c.return=b,b=c;else{if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return!0;b=b.return}b.sibling.return=b.return;b=b.sibling}}return!0}\nfunction Ck(a,b){b&=~rk;b&=~qk;a.suspendedLanes|=b;a.pingedLanes&=~b;for(a=a.expirationTimes;0<b;){var c=31-oc(b),d=1<<c;a[c]=-1;b&=~d}}function Ek(a){if(0!==(K&6))throw Error(p(327));Hk();var b=uc(a,0);if(0===(b&1))return Dk(a,B()),null;var c=Ik(a,b);if(0!==a.tag&&2===c){var d=xc(a);0!==d&&(b=d,c=Nk(a,d))}if(1===c)throw c=pk,Kk(a,0),Ck(a,b),Dk(a,B()),c;if(6===c)throw Error(p(345));a.finishedWork=a.current.alternate;a.finishedLanes=b;Pk(a,tk,uk);Dk(a,B());return null}\nfunction Qk(a,b){var c=K;K|=1;try{return a(b)}finally{K=c,0===K&&(Gj=B()+500,fg&&jg())}}function Rk(a){null!==wk&&0===wk.tag&&0===(K&6)&&Hk();var b=K;K|=1;var c=ok.transition,d=C;try{if(ok.transition=null,C=1,a)return a()}finally{C=d,ok.transition=c,K=b,0===(K&6)&&jg()}}function Hj(){fj=ej.current;E(ej)}\nfunction Kk(a,b){a.finishedWork=null;a.finishedLanes=0;var c=a.timeoutHandle;-1!==c&&(a.timeoutHandle=-1,Gf(c));if(null!==Y)for(c=Y.return;null!==c;){var d=c;wg(d);switch(d.tag){case 1:d=d.type.childContextTypes;null!==d&&void 0!==d&&$f();break;case 3:zh();E(Wf);E(H);Eh();break;case 5:Bh(d);break;case 4:zh();break;case 13:E(L);break;case 19:E(L);break;case 10:ah(d.type._context);break;case 22:case 23:Hj()}c=c.return}Q=a;Y=a=Pg(a.current,null);Z=fj=b;T=0;pk=null;rk=qk=rh=0;tk=sk=null;if(null!==fh){for(b=\n0;b<fh.length;b++)if(c=fh[b],d=c.interleaved,null!==d){c.interleaved=null;var e=d.next,f=c.pending;if(null!==f){var g=f.next;f.next=e;d.next=g}c.pending=d}fh=null}return a}\nfunction Mk(a,b){do{var c=Y;try{$g();Fh.current=Rh;if(Ih){for(var d=M.memoizedState;null!==d;){var e=d.queue;null!==e&&(e.pending=null);d=d.next}Ih=!1}Hh=0;O=N=M=null;Jh=!1;Kh=0;nk.current=null;if(null===c||null===c.return){T=1;pk=b;Y=null;break}a:{var f=a,g=c.return,h=c,k=b;b=Z;h.flags|=32768;if(null!==k&&\"object\"===typeof k&&\"function\"===typeof k.then){var l=k,m=h,q=m.tag;if(0===(m.mode&1)&&(0===q||11===q||15===q)){var r=m.alternate;r?(m.updateQueue=r.updateQueue,m.memoizedState=r.memoizedState,\nm.lanes=r.lanes):(m.updateQueue=null,m.memoizedState=null)}var y=Ui(g);if(null!==y){y.flags&=-257;Vi(y,g,h,f,b);y.mode&1&&Si(f,l,b);b=y;k=l;var n=b.updateQueue;if(null===n){var t=new Set;t.add(k);b.updateQueue=t}else n.add(k);break a}else{if(0===(b&1)){Si(f,l,b);tj();break a}k=Error(p(426))}}else if(I&&h.mode&1){var J=Ui(g);if(null!==J){0===(J.flags&65536)&&(J.flags|=256);Vi(J,g,h,f,b);Jg(Ji(k,h));break a}}f=k=Ji(k,h);4!==T&&(T=2);null===sk?sk=[f]:sk.push(f);f=g;do{switch(f.tag){case 3:f.flags|=65536;\nb&=-b;f.lanes|=b;var x=Ni(f,k,b);ph(f,x);break a;case 1:h=k;var w=f.type,u=f.stateNode;if(0===(f.flags&128)&&(\"function\"===typeof w.getDerivedStateFromError||null!==u&&\"function\"===typeof u.componentDidCatch&&(null===Ri||!Ri.has(u)))){f.flags|=65536;b&=-b;f.lanes|=b;var F=Qi(f,h,b);ph(f,F);break a}}f=f.return}while(null!==f)}Sk(c)}catch(na){b=na;Y===c&&null!==c&&(Y=c=c.return);continue}break}while(1)}function Jk(){var a=mk.current;mk.current=Rh;return null===a?Rh:a}\nfunction tj(){if(0===T||3===T||2===T)T=4;null===Q||0===(rh&268435455)&&0===(qk&268435455)||Ck(Q,Z)}function Ik(a,b){var c=K;K|=2;var d=Jk();if(Q!==a||Z!==b)uk=null,Kk(a,b);do try{Tk();break}catch(e){Mk(a,e)}while(1);$g();K=c;mk.current=d;if(null!==Y)throw Error(p(261));Q=null;Z=0;return T}function Tk(){for(;null!==Y;)Uk(Y)}function Lk(){for(;null!==Y&&!cc();)Uk(Y)}function Uk(a){var b=Vk(a.alternate,a,fj);a.memoizedProps=a.pendingProps;null===b?Sk(a):Y=b;nk.current=null}\nfunction Sk(a){var b=a;do{var c=b.alternate;a=b.return;if(0===(b.flags&32768)){if(c=Ej(c,b,fj),null!==c){Y=c;return}}else{c=Ij(c,b);if(null!==c){c.flags&=32767;Y=c;return}if(null!==a)a.flags|=32768,a.subtreeFlags=0,a.deletions=null;else{T=6;Y=null;return}}b=b.sibling;if(null!==b){Y=b;return}Y=b=a}while(null!==b);0===T&&(T=5)}function Pk(a,b,c){var d=C,e=ok.transition;try{ok.transition=null,C=1,Wk(a,b,c,d)}finally{ok.transition=e,C=d}return null}\nfunction Wk(a,b,c,d){do Hk();while(null!==wk);if(0!==(K&6))throw Error(p(327));c=a.finishedWork;var e=a.finishedLanes;if(null===c)return null;a.finishedWork=null;a.finishedLanes=0;if(c===a.current)throw Error(p(177));a.callbackNode=null;a.callbackPriority=0;var f=c.lanes|c.childLanes;Bc(a,f);a===Q&&(Y=Q=null,Z=0);0===(c.subtreeFlags&2064)&&0===(c.flags&2064)||vk||(vk=!0,Fk(hc,function(){Hk();return null}));f=0!==(c.flags&15990);if(0!==(c.subtreeFlags&15990)||f){f=ok.transition;ok.transition=null;\nvar g=C;C=1;var h=K;K|=4;nk.current=null;Oj(a,c);dk(c,a);Oe(Df);dd=!!Cf;Df=Cf=null;a.current=c;hk(c,a,e);dc();K=h;C=g;ok.transition=f}else a.current=c;vk&&(vk=!1,wk=a,xk=e);f=a.pendingLanes;0===f&&(Ri=null);mc(c.stateNode,d);Dk(a,B());if(null!==b)for(d=a.onRecoverableError,c=0;c<b.length;c++)e=b[c],d(e.value,{componentStack:e.stack,digest:e.digest});if(Oi)throw Oi=!1,a=Pi,Pi=null,a;0!==(xk&1)&&0!==a.tag&&Hk();f=a.pendingLanes;0!==(f&1)?a===zk?yk++:(yk=0,zk=a):yk=0;jg();return null}\nfunction Hk(){if(null!==wk){var a=Dc(xk),b=ok.transition,c=C;try{ok.transition=null;C=16>a?16:a;if(null===wk)var d=!1;else{a=wk;wk=null;xk=0;if(0!==(K&6))throw Error(p(331));var e=K;K|=4;for(V=a.current;null!==V;){var f=V,g=f.child;if(0!==(V.flags&16)){var h=f.deletions;if(null!==h){for(var k=0;k<h.length;k++){var l=h[k];for(V=l;null!==V;){var m=V;switch(m.tag){case 0:case 11:case 15:Pj(8,m,f)}var q=m.child;if(null!==q)q.return=m,V=q;else for(;null!==V;){m=V;var r=m.sibling,y=m.return;Sj(m);if(m===\nl){V=null;break}if(null!==r){r.return=y;V=r;break}V=y}}}var n=f.alternate;if(null!==n){var t=n.child;if(null!==t){n.child=null;do{var J=t.sibling;t.sibling=null;t=J}while(null!==t)}}V=f}}if(0!==(f.subtreeFlags&2064)&&null!==g)g.return=f,V=g;else b:for(;null!==V;){f=V;if(0!==(f.flags&2048))switch(f.tag){case 0:case 11:case 15:Pj(9,f,f.return)}var x=f.sibling;if(null!==x){x.return=f.return;V=x;break b}V=f.return}}var w=a.current;for(V=w;null!==V;){g=V;var u=g.child;if(0!==(g.subtreeFlags&2064)&&null!==\nu)u.return=g,V=u;else b:for(g=w;null!==V;){h=V;if(0!==(h.flags&2048))try{switch(h.tag){case 0:case 11:case 15:Qj(9,h)}}catch(na){W(h,h.return,na)}if(h===g){V=null;break b}var F=h.sibling;if(null!==F){F.return=h.return;V=F;break b}V=h.return}}K=e;jg();if(lc&&\"function\"===typeof lc.onPostCommitFiberRoot)try{lc.onPostCommitFiberRoot(kc,a)}catch(na){}d=!0}return d}finally{C=c,ok.transition=b}}return!1}function Xk(a,b,c){b=Ji(c,b);b=Ni(a,b,1);a=nh(a,b,1);b=R();null!==a&&(Ac(a,1,b),Dk(a,b))}\nfunction W(a,b,c){if(3===a.tag)Xk(a,a,c);else for(;null!==b;){if(3===b.tag){Xk(b,a,c);break}else if(1===b.tag){var d=b.stateNode;if(\"function\"===typeof b.type.getDerivedStateFromError||\"function\"===typeof d.componentDidCatch&&(null===Ri||!Ri.has(d))){a=Ji(c,a);a=Qi(b,a,1);b=nh(b,a,1);a=R();null!==b&&(Ac(b,1,a),Dk(b,a));break}}b=b.return}}\nfunction Ti(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);b=R();a.pingedLanes|=a.suspendedLanes&c;Q===a&&(Z&c)===c&&(4===T||3===T&&(Z&130023424)===Z&&500>B()-fk?Kk(a,0):rk|=c);Dk(a,b)}function Yk(a,b){0===b&&(0===(a.mode&1)?b=1:(b=sc,sc<<=1,0===(sc&130023424)&&(sc=4194304)));var c=R();a=ih(a,b);null!==a&&(Ac(a,b,c),Dk(a,c))}function uj(a){var b=a.memoizedState,c=0;null!==b&&(c=b.retryLane);Yk(a,c)}\nfunction bk(a,b){var c=0;switch(a.tag){case 13:var d=a.stateNode;var e=a.memoizedState;null!==e&&(c=e.retryLane);break;case 19:d=a.stateNode;break;default:throw Error(p(314));}null!==d&&d.delete(b);Yk(a,c)}var Vk;\nVk=function(a,b,c){if(null!==a)if(a.memoizedProps!==b.pendingProps||Wf.current)dh=!0;else{if(0===(a.lanes&c)&&0===(b.flags&128))return dh=!1,yj(a,b,c);dh=0!==(a.flags&131072)?!0:!1}else dh=!1,I&&0!==(b.flags&1048576)&&ug(b,ng,b.index);b.lanes=0;switch(b.tag){case 2:var d=b.type;ij(a,b);a=b.pendingProps;var e=Yf(b,H.current);ch(b,c);e=Nh(null,b,d,a,e,c);var f=Sh();b.flags|=1;\"object\"===typeof e&&null!==e&&\"function\"===typeof e.render&&void 0===e.$$typeof?(b.tag=1,b.memoizedState=null,b.updateQueue=\nnull,Zf(d)?(f=!0,cg(b)):f=!1,b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null,kh(b),e.updater=Ei,b.stateNode=e,e._reactInternals=b,Ii(b,d,a,c),b=jj(null,b,d,!0,f,c)):(b.tag=0,I&&f&&vg(b),Xi(null,b,e,c),b=b.child);return b;case 16:d=b.elementType;a:{ij(a,b);a=b.pendingProps;e=d._init;d=e(d._payload);b.type=d;e=b.tag=Zk(d);a=Ci(d,a);switch(e){case 0:b=cj(null,b,d,a,c);break a;case 1:b=hj(null,b,d,a,c);break a;case 11:b=Yi(null,b,d,a,c);break a;case 14:b=$i(null,b,d,Ci(d.type,a),c);break a}throw Error(p(306,\nd,\"\"));}return b;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),cj(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),hj(a,b,d,e,c);case 3:a:{kj(b);if(null===a)throw Error(p(387));d=b.pendingProps;f=b.memoizedState;e=f.element;lh(a,b);qh(b,d,null,c);var g=b.memoizedState;d=g.element;if(f.isDehydrated)if(f={element:d,isDehydrated:!1,cache:g.cache,pendingSuspenseBoundaries:g.pendingSuspenseBoundaries,transitions:g.transitions},b.updateQueue.baseState=\nf,b.memoizedState=f,b.flags&256){e=Ji(Error(p(423)),b);b=lj(a,b,d,c,e);break a}else if(d!==e){e=Ji(Error(p(424)),b);b=lj(a,b,d,c,e);break a}else for(yg=Lf(b.stateNode.containerInfo.firstChild),xg=b,I=!0,zg=null,c=Vg(b,null,d,c),b.child=c;c;)c.flags=c.flags&-3|4096,c=c.sibling;else{Ig();if(d===e){b=Zi(a,b,c);break a}Xi(a,b,d,c)}b=b.child}return b;case 5:return Ah(b),null===a&&Eg(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,g=e.children,Ef(d,e)?g=null:null!==f&&Ef(d,f)&&(b.flags|=32),\ngj(a,b),Xi(a,b,g,c),b.child;case 6:return null===a&&Eg(b),null;case 13:return oj(a,b,c);case 4:return yh(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Ug(b,null,d,c):Xi(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),Yi(a,b,d,e,c);case 7:return Xi(a,b,b.pendingProps,c),b.child;case 8:return Xi(a,b,b.pendingProps.children,c),b.child;case 12:return Xi(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;f=b.memoizedProps;\ng=e.value;G(Wg,d._currentValue);d._currentValue=g;if(null!==f)if(He(f.value,g)){if(f.children===e.children&&!Wf.current){b=Zi(a,b,c);break a}}else for(f=b.child,null!==f&&(f.return=b);null!==f;){var h=f.dependencies;if(null!==h){g=f.child;for(var k=h.firstContext;null!==k;){if(k.context===d){if(1===f.tag){k=mh(-1,c&-c);k.tag=2;var l=f.updateQueue;if(null!==l){l=l.shared;var m=l.pending;null===m?k.next=k:(k.next=m.next,m.next=k);l.pending=k}}f.lanes|=c;k=f.alternate;null!==k&&(k.lanes|=c);bh(f.return,\nc,b);h.lanes|=c;break}k=k.next}}else if(10===f.tag)g=f.type===b.type?null:f.child;else if(18===f.tag){g=f.return;if(null===g)throw Error(p(341));g.lanes|=c;h=g.alternate;null!==h&&(h.lanes|=c);bh(g,c,b);g=f.sibling}else g=f.child;if(null!==g)g.return=f;else for(g=f;null!==g;){if(g===b){g=null;break}f=g.sibling;if(null!==f){f.return=g.return;g=f;break}g=g.return}f=g}Xi(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,d=b.pendingProps.children,ch(b,c),e=eh(e),d=d(e),b.flags|=1,Xi(a,b,d,c),\nb.child;case 14:return d=b.type,e=Ci(d,b.pendingProps),e=Ci(d.type,e),$i(a,b,d,e,c);case 15:return bj(a,b,b.type,b.pendingProps,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),ij(a,b),b.tag=1,Zf(d)?(a=!0,cg(b)):a=!1,ch(b,c),Gi(b,d,e),Ii(b,d,e,c),jj(null,b,d,!0,a,c);case 19:return xj(a,b,c);case 22:return dj(a,b,c)}throw Error(p(156,b.tag));};function Fk(a,b){return ac(a,b)}\nfunction $k(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.subtreeFlags=this.flags=0;this.deletions=null;this.childLanes=this.lanes=0;this.alternate=null}function Bg(a,b,c,d){return new $k(a,b,c,d)}function aj(a){a=a.prototype;return!(!a||!a.isReactComponent)}\nfunction Zk(a){if(\"function\"===typeof a)return aj(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===Da)return 11;if(a===Ga)return 14}return 2}\nfunction Pg(a,b){var c=a.alternate;null===c?(c=Bg(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.type=a.type,c.flags=0,c.subtreeFlags=0,c.deletions=null);c.flags=a.flags&14680064;c.childLanes=a.childLanes;c.lanes=a.lanes;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;b=a.dependencies;c.dependencies=null===b?null:{lanes:b.lanes,firstContext:b.firstContext};\nc.sibling=a.sibling;c.index=a.index;c.ref=a.ref;return c}\nfunction Rg(a,b,c,d,e,f){var g=2;d=a;if(\"function\"===typeof a)aj(a)&&(g=1);else if(\"string\"===typeof a)g=5;else a:switch(a){case ya:return Tg(c.children,e,f,b);case za:g=8;e|=8;break;case Aa:return a=Bg(12,c,b,e|2),a.elementType=Aa,a.lanes=f,a;case Ea:return a=Bg(13,c,b,e),a.elementType=Ea,a.lanes=f,a;case Fa:return a=Bg(19,c,b,e),a.elementType=Fa,a.lanes=f,a;case Ia:return pj(c,e,f,b);default:if(\"object\"===typeof a&&null!==a)switch(a.$$typeof){case Ba:g=10;break a;case Ca:g=9;break a;case Da:g=11;\nbreak a;case Ga:g=14;break a;case Ha:g=16;d=null;break a}throw Error(p(130,null==a?a:typeof a,\"\"));}b=Bg(g,c,b,e);b.elementType=a;b.type=d;b.lanes=f;return b}function Tg(a,b,c,d){a=Bg(7,a,d,b);a.lanes=c;return a}function pj(a,b,c,d){a=Bg(22,a,d,b);a.elementType=Ia;a.lanes=c;a.stateNode={isHidden:!1};return a}function Qg(a,b,c){a=Bg(6,a,null,b);a.lanes=c;return a}\nfunction Sg(a,b,c){b=Bg(4,null!==a.children?a.children:[],a.key,b);b.lanes=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}\nfunction al(a,b,c,d,e){this.tag=b;this.containerInfo=a;this.finishedWork=this.pingCache=this.current=this.pendingChildren=null;this.timeoutHandle=-1;this.callbackNode=this.pendingContext=this.context=null;this.callbackPriority=0;this.eventTimes=zc(0);this.expirationTimes=zc(-1);this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0;this.entanglements=zc(0);this.identifierPrefix=d;this.onRecoverableError=e;this.mutableSourceEagerHydrationData=\nnull}function bl(a,b,c,d,e,f,g,h,k){a=new al(a,b,c,h,k);1===b?(b=1,!0===f&&(b|=8)):b=0;f=Bg(3,null,null,b);a.current=f;f.stateNode=a;f.memoizedState={element:d,isDehydrated:c,cache:null,transitions:null,pendingSuspenseBoundaries:null};kh(f);return a}function cl(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:wa,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}\nfunction dl(a){if(!a)return Vf;a=a._reactInternals;a:{if(Vb(a)!==a||1!==a.tag)throw Error(p(170));var b=a;do{switch(b.tag){case 3:b=b.stateNode.context;break a;case 1:if(Zf(b.type)){b=b.stateNode.__reactInternalMemoizedMergedChildContext;break a}}b=b.return}while(null!==b);throw Error(p(171));}if(1===a.tag){var c=a.type;if(Zf(c))return bg(a,c,b)}return b}\nfunction el(a,b,c,d,e,f,g,h,k){a=bl(c,d,!0,a,e,f,g,h,k);a.context=dl(null);c=a.current;d=R();e=yi(c);f=mh(d,e);f.callback=void 0!==b&&null!==b?b:null;nh(c,f,e);a.current.lanes=e;Ac(a,e,d);Dk(a,d);return a}function fl(a,b,c,d){var e=b.current,f=R(),g=yi(e);c=dl(c);null===b.context?b.context=c:b.pendingContext=c;b=mh(f,g);b.payload={element:a};d=void 0===d?null:d;null!==d&&(b.callback=d);a=nh(e,b,g);null!==a&&(gi(a,e,g,f),oh(a,e,g));return g}\nfunction gl(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function hl(a,b){a=a.memoizedState;if(null!==a&&null!==a.dehydrated){var c=a.retryLane;a.retryLane=0!==c&&c<b?c:b}}function il(a,b){hl(a,b);(a=a.alternate)&&hl(a,b)}function jl(){return null}var kl=\"function\"===typeof reportError?reportError:function(a){console.error(a)};function ll(a){this._internalRoot=a}\nml.prototype.render=ll.prototype.render=function(a){var b=this._internalRoot;if(null===b)throw Error(p(409));fl(a,b,null,null)};ml.prototype.unmount=ll.prototype.unmount=function(){var a=this._internalRoot;if(null!==a){this._internalRoot=null;var b=a.containerInfo;Rk(function(){fl(null,a,null,null)});b[uf]=null}};function ml(a){this._internalRoot=a}\nml.prototype.unstable_scheduleHydration=function(a){if(a){var b=Hc();a={blockedOn:null,target:a,priority:b};for(var c=0;c<Qc.length&&0!==b&&b<Qc[c].priority;c++);Qc.splice(c,0,a);0===c&&Vc(a)}};function nl(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType)}function ol(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}function pl(){}\nfunction ql(a,b,c,d,e){if(e){if(\"function\"===typeof d){var f=d;d=function(){var a=gl(g);f.call(a)}}var g=el(b,d,a,0,null,!1,!1,\"\",pl);a._reactRootContainer=g;a[uf]=g.current;sf(8===a.nodeType?a.parentNode:a);Rk();return g}for(;e=a.lastChild;)a.removeChild(e);if(\"function\"===typeof d){var h=d;d=function(){var a=gl(k);h.call(a)}}var k=bl(a,0,!1,null,null,!1,!1,\"\",pl);a._reactRootContainer=k;a[uf]=k.current;sf(8===a.nodeType?a.parentNode:a);Rk(function(){fl(b,k,c,d)});return k}\nfunction rl(a,b,c,d,e){var f=c._reactRootContainer;if(f){var g=f;if(\"function\"===typeof e){var h=e;e=function(){var a=gl(g);h.call(a)}}fl(b,g,a,e)}else g=ql(c,b,a,e,d);return gl(g)}Ec=function(a){switch(a.tag){case 3:var b=a.stateNode;if(b.current.memoizedState.isDehydrated){var c=tc(b.pendingLanes);0!==c&&(Cc(b,c|1),Dk(b,B()),0===(K&6)&&(Gj=B()+500,jg()))}break;case 13:Rk(function(){var b=ih(a,1);if(null!==b){var c=R();gi(b,a,1,c)}}),il(a,1)}};\nFc=function(a){if(13===a.tag){var b=ih(a,134217728);if(null!==b){var c=R();gi(b,a,134217728,c)}il(a,134217728)}};Gc=function(a){if(13===a.tag){var b=yi(a),c=ih(a,b);if(null!==c){var d=R();gi(c,a,b,d)}il(a,b)}};Hc=function(){return C};Ic=function(a,b){var c=C;try{return C=a,b()}finally{C=c}};\nyb=function(a,b,c){switch(b){case \"input\":bb(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Db(d);if(!e)throw Error(p(90));Wa(d);bb(d,e)}}}break;case \"textarea\":ib(a,c);break;case \"select\":b=c.value,null!=b&&fb(a,!!c.multiple,b,!1)}};Gb=Qk;Hb=Rk;\nvar sl={usingClientEntryPoint:!1,Events:[Cb,ue,Db,Eb,Fb,Qk]},tl={findFiberByHostInstance:Wc,bundleType:0,version:\"18.3.1\",rendererPackageName:\"react-dom\"};\nvar ul={bundleType:tl.bundleType,version:tl.version,rendererPackageName:tl.rendererPackageName,rendererConfig:tl.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:ua.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=Zb(a);return null===a?null:a.stateNode},findFiberByHostInstance:tl.findFiberByHostInstance||\njl,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:\"18.3.1-next-f1338f8080-20240426\"};if(\"undefined\"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var vl=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!vl.isDisabled&&vl.supportsFiber)try{kc=vl.inject(ul),lc=vl}catch(a){}}exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=sl;\nexports.createPortal=function(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!nl(b))throw Error(p(200));return cl(a,b,null,c)};exports.createRoot=function(a,b){if(!nl(a))throw Error(p(299));var c=!1,d=\"\",e=kl;null!==b&&void 0!==b&&(!0===b.unstable_strictMode&&(c=!0),void 0!==b.identifierPrefix&&(d=b.identifierPrefix),void 0!==b.onRecoverableError&&(e=b.onRecoverableError));b=bl(a,1,!1,null,null,c,!1,d,e);a[uf]=b.current;sf(8===a.nodeType?a.parentNode:a);return new ll(b)};\nexports.findDOMNode=function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternals;if(void 0===b){if(\"function\"===typeof a.render)throw Error(p(188));a=Object.keys(a).join(\",\");throw Error(p(268,a));}a=Zb(b);a=null===a?null:a.stateNode;return a};exports.flushSync=function(a){return Rk(a)};exports.hydrate=function(a,b,c){if(!ol(b))throw Error(p(200));return rl(null,a,b,!0,c)};\nexports.hydrateRoot=function(a,b,c){if(!nl(a))throw Error(p(405));var d=null!=c&&c.hydratedSources||null,e=!1,f=\"\",g=kl;null!==c&&void 0!==c&&(!0===c.unstable_strictMode&&(e=!0),void 0!==c.identifierPrefix&&(f=c.identifierPrefix),void 0!==c.onRecoverableError&&(g=c.onRecoverableError));b=el(b,null,a,1,null!=c?c:null,e,!1,f,g);a[uf]=b.current;sf(a);if(d)for(a=0;a<d.length;a++)c=d[a],e=c._getVersion,e=e(c._source),null==b.mutableSourceEagerHydrationData?b.mutableSourceEagerHydrationData=[c,e]:b.mutableSourceEagerHydrationData.push(c,\ne);return new ml(b)};exports.render=function(a,b,c){if(!ol(b))throw Error(p(200));return rl(null,a,b,!1,c)};exports.unmountComponentAtNode=function(a){if(!ol(a))throw Error(p(40));return a._reactRootContainer?(Rk(function(){rl(null,null,a,!1,function(){a._reactRootContainer=null;a[uf]=null})}),!0):!1};exports.unstable_batchedUpdates=Qk;\nexports.unstable_renderSubtreeIntoContainer=function(a,b,c,d){if(!ol(c))throw Error(p(200));if(null==a||void 0===a._reactInternals)throw Error(p(38));return rl(a,b,c,!1,d)};exports.version=\"18.3.1-next-f1338f8080-20240426\";\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","/**\n * @license React\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var l=Symbol.for(\"react.element\"),n=Symbol.for(\"react.portal\"),p=Symbol.for(\"react.fragment\"),q=Symbol.for(\"react.strict_mode\"),r=Symbol.for(\"react.profiler\"),t=Symbol.for(\"react.provider\"),u=Symbol.for(\"react.context\"),v=Symbol.for(\"react.forward_ref\"),w=Symbol.for(\"react.suspense\"),x=Symbol.for(\"react.memo\"),y=Symbol.for(\"react.lazy\"),z=Symbol.iterator;function A(a){if(null===a||\"object\"!==typeof a)return null;a=z&&a[z]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\nvar B={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},C=Object.assign,D={};function E(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}E.prototype.isReactComponent={};\nE.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(\"setState(...): takes an object of state variables to update or a function which returns an object of state variables.\");this.updater.enqueueSetState(this,a,b,\"setState\")};E.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function F(){}F.prototype=E.prototype;function G(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}var H=G.prototype=new F;\nH.constructor=G;C(H,E.prototype);H.isPureReactComponent=!0;var I=Array.isArray,J=Object.prototype.hasOwnProperty,K={current:null},L={key:!0,ref:!0,__self:!0,__source:!0};\nfunction M(a,b,e){var d,c={},k=null,h=null;if(null!=b)for(d in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(k=\"\"+b.key),b)J.call(b,d)&&!L.hasOwnProperty(d)&&(c[d]=b[d]);var g=arguments.length-2;if(1===g)c.children=e;else if(1<g){for(var f=Array(g),m=0;m<g;m++)f[m]=arguments[m+2];c.children=f}if(a&&a.defaultProps)for(d in g=a.defaultProps,g)void 0===c[d]&&(c[d]=g[d]);return{$$typeof:l,type:a,key:k,ref:h,props:c,_owner:K.current}}\nfunction N(a,b){return{$$typeof:l,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function O(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===l}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+a.replace(/[=:]/g,function(a){return b[a]})}var P=/\\/+/g;function Q(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(\"\"+a.key):b.toString(36)}\nfunction R(a,b,e,d,c){var k=typeof a;if(\"undefined\"===k||\"boolean\"===k)a=null;var h=!1;if(null===a)h=!0;else switch(k){case \"string\":case \"number\":h=!0;break;case \"object\":switch(a.$$typeof){case l:case n:h=!0}}if(h)return h=a,c=c(h),a=\"\"===d?\".\"+Q(h,0):d,I(c)?(e=\"\",null!=a&&(e=a.replace(P,\"$&/\")+\"/\"),R(c,b,e,\"\",function(a){return a})):null!=c&&(O(c)&&(c=N(c,e+(!c.key||h&&h.key===c.key?\"\":(\"\"+c.key).replace(P,\"$&/\")+\"/\")+a)),b.push(c)),1;h=0;d=\"\"===d?\".\":d+\":\";if(I(a))for(var g=0;g<a.length;g++){k=\na[g];var f=d+Q(k,g);h+=R(k,b,e,f,c)}else if(f=A(a),\"function\"===typeof f)for(a=f.call(a),g=0;!(k=a.next()).done;)k=k.value,f=d+Q(k,g++),h+=R(k,b,e,f,c);else if(\"object\"===k)throw b=String(a),Error(\"Objects are not valid as a React child (found: \"+(\"[object Object]\"===b?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":b)+\"). If you meant to render a collection of children, use an array instead.\");return h}\nfunction S(a,b,e){if(null==a)return a;var d=[],c=0;R(a,d,\"\",\"\",function(a){return b.call(e,a,c++)});return d}function T(a){if(-1===a._status){var b=a._result;b=b();b.then(function(b){if(0===a._status||-1===a._status)a._status=1,a._result=b},function(b){if(0===a._status||-1===a._status)a._status=2,a._result=b});-1===a._status&&(a._status=0,a._result=b)}if(1===a._status)return a._result.default;throw a._result;}\nvar U={current:null},V={transition:null},W={ReactCurrentDispatcher:U,ReactCurrentBatchConfig:V,ReactCurrentOwner:K};function X(){throw Error(\"act(...) is not supported in production builds of React.\");}\nexports.Children={map:S,forEach:function(a,b,e){S(a,function(){b.apply(this,arguments)},e)},count:function(a){var b=0;S(a,function(){b++});return b},toArray:function(a){return S(a,function(a){return a})||[]},only:function(a){if(!O(a))throw Error(\"React.Children.only expected to receive a single React element child.\");return a}};exports.Component=E;exports.Fragment=p;exports.Profiler=r;exports.PureComponent=G;exports.StrictMode=q;exports.Suspense=w;\nexports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=W;exports.act=X;\nexports.cloneElement=function(a,b,e){if(null===a||void 0===a)throw Error(\"React.cloneElement(...): The argument must be a React element, but you passed \"+a+\".\");var d=C({},a.props),c=a.key,k=a.ref,h=a._owner;if(null!=b){void 0!==b.ref&&(k=b.ref,h=K.current);void 0!==b.key&&(c=\"\"+b.key);if(a.type&&a.type.defaultProps)var g=a.type.defaultProps;for(f in b)J.call(b,f)&&!L.hasOwnProperty(f)&&(d[f]=void 0===b[f]&&void 0!==g?g[f]:b[f])}var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){g=Array(f);\nfor(var m=0;m<f;m++)g[m]=arguments[m+2];d.children=g}return{$$typeof:l,type:a.type,key:c,ref:k,props:d,_owner:h}};exports.createContext=function(a){a={$$typeof:u,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null};a.Provider={$$typeof:t,_context:a};return a.Consumer=a};exports.createElement=M;exports.createFactory=function(a){var b=M.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};\nexports.forwardRef=function(a){return{$$typeof:v,render:a}};exports.isValidElement=O;exports.lazy=function(a){return{$$typeof:y,_payload:{_status:-1,_result:a},_init:T}};exports.memo=function(a,b){return{$$typeof:x,type:a,compare:void 0===b?null:b}};exports.startTransition=function(a){var b=V.transition;V.transition={};try{a()}finally{V.transition=b}};exports.unstable_act=X;exports.useCallback=function(a,b){return U.current.useCallback(a,b)};exports.useContext=function(a){return U.current.useContext(a)};\nexports.useDebugValue=function(){};exports.useDeferredValue=function(a){return U.current.useDeferredValue(a)};exports.useEffect=function(a,b){return U.current.useEffect(a,b)};exports.useId=function(){return U.current.useId()};exports.useImperativeHandle=function(a,b,e){return U.current.useImperativeHandle(a,b,e)};exports.useInsertionEffect=function(a,b){return U.current.useInsertionEffect(a,b)};exports.useLayoutEffect=function(a,b){return U.current.useLayoutEffect(a,b)};\nexports.useMemo=function(a,b){return U.current.useMemo(a,b)};exports.useReducer=function(a,b,e){return U.current.useReducer(a,b,e)};exports.useRef=function(a){return U.current.useRef(a)};exports.useState=function(a){return U.current.useState(a)};exports.useSyncExternalStore=function(a,b,e){return U.current.useSyncExternalStore(a,b,e)};exports.useTransition=function(){return U.current.useTransition()};exports.version=\"18.3.1\";\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","\"use strict\";\nif (0) {\n  // Trick cjs-module-lexer into adding named exports for all React exports.\n  // (if imported with `import()`, they will appear in `.default` as well.)\n  // This way, cjs-module-lexer will let all of react's (named) exports through unchanged.\n  module.exports = require(\"react\");\n}\n// We don't want bundlers to error when they encounter usage of any of these exports.\n// It's up to the package author to ensure that if they access React internals,\n// they do so in a safe way that won't break if React changes how they use these internals.\n// (e.g. only access them in development, and only in an optional way that won't\n// break if internals are not there or do not have the expected structure)\n// @ts-ignore\nmodule.exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = undefined;\n// @ts-ignore\nmodule.exports.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE = undefined;\n// @ts-ignore\nmodule.exports.__SERVER_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE = undefined;\n// Here we actually pull in the React library and add everything\n// it exports to our own `module.exports`.\n// If React suddenly were to add one of the above \"polyfilled\" exports,\n// the React version would overwrite our version, so this should be\n// future-proof.\nObject.assign(module.exports, require(\"react\"));\n","/**\n * @license React\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';function f(a,b){var c=a.length;a.push(b);a:for(;0<c;){var d=c-1>>>1,e=a[d];if(0<g(e,b))a[d]=b,a[c]=e,c=d;else break a}}function h(a){return 0===a.length?null:a[0]}function k(a){if(0===a.length)return null;var b=a[0],c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length,w=e>>>1;d<w;){var m=2*(d+1)-1,C=a[m],n=m+1,x=a[n];if(0>g(C,c))n<e&&0>g(x,C)?(a[d]=x,a[n]=c,d=n):(a[d]=C,a[m]=c,d=m);else if(n<e&&0>g(x,c))a[d]=x,a[n]=c,d=n;else break a}}return b}\nfunction g(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}if(\"object\"===typeof performance&&\"function\"===typeof performance.now){var l=performance;exports.unstable_now=function(){return l.now()}}else{var p=Date,q=p.now();exports.unstable_now=function(){return p.now()-q}}var r=[],t=[],u=1,v=null,y=3,z=!1,A=!1,B=!1,D=\"function\"===typeof setTimeout?setTimeout:null,E=\"function\"===typeof clearTimeout?clearTimeout:null,F=\"undefined\"!==typeof setImmediate?setImmediate:null;\n\"undefined\"!==typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function G(a){for(var b=h(t);null!==b;){if(null===b.callback)k(t);else if(b.startTime<=a)k(t),b.sortIndex=b.expirationTime,f(r,b);else break;b=h(t)}}function H(a){B=!1;G(a);if(!A)if(null!==h(r))A=!0,I(J);else{var b=h(t);null!==b&&K(H,b.startTime-a)}}\nfunction J(a,b){A=!1;B&&(B=!1,E(L),L=-1);z=!0;var c=y;try{G(b);for(v=h(r);null!==v&&(!(v.expirationTime>b)||a&&!M());){var d=v.callback;if(\"function\"===typeof d){v.callback=null;y=v.priorityLevel;var e=d(v.expirationTime<=b);b=exports.unstable_now();\"function\"===typeof e?v.callback=e:v===h(r)&&k(r);G(b)}else k(r);v=h(r)}if(null!==v)var w=!0;else{var m=h(t);null!==m&&K(H,m.startTime-b);w=!1}return w}finally{v=null,y=c,z=!1}}var N=!1,O=null,L=-1,P=5,Q=-1;\nfunction M(){return exports.unstable_now()-Q<P?!1:!0}function R(){if(null!==O){var a=exports.unstable_now();Q=a;var b=!0;try{b=O(!0,a)}finally{b?S():(N=!1,O=null)}}else N=!1}var S;if(\"function\"===typeof F)S=function(){F(R)};else if(\"undefined\"!==typeof MessageChannel){var T=new MessageChannel,U=T.port2;T.port1.onmessage=R;S=function(){U.postMessage(null)}}else S=function(){D(R,0)};function I(a){O=a;N||(N=!0,S())}function K(a,b){L=D(function(){a(exports.unstable_now())},b)}\nexports.unstable_IdlePriority=5;exports.unstable_ImmediatePriority=1;exports.unstable_LowPriority=4;exports.unstable_NormalPriority=3;exports.unstable_Profiling=null;exports.unstable_UserBlockingPriority=2;exports.unstable_cancelCallback=function(a){a.callback=null};exports.unstable_continueExecution=function(){A||z||(A=!0,I(J))};\nexports.unstable_forceFrameRate=function(a){0>a||125<a?console.error(\"forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported\"):P=0<a?Math.floor(1E3/a):5};exports.unstable_getCurrentPriorityLevel=function(){return y};exports.unstable_getFirstCallbackNode=function(){return h(r)};exports.unstable_next=function(a){switch(y){case 1:case 2:case 3:var b=3;break;default:b=y}var c=y;y=b;try{return a()}finally{y=c}};exports.unstable_pauseExecution=function(){};\nexports.unstable_requestPaint=function(){};exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=y;y=a;try{return b()}finally{y=c}};\nexports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();\"object\"===typeof c&&null!==c?(c=c.delay,c=\"number\"===typeof c&&0<c?d+c:d):c=d;switch(a){case 1:var e=-1;break;case 2:e=250;break;case 5:e=1073741823;break;case 4:e=1E4;break;default:e=5E3}e=c+e;a={id:u++,callback:b,priorityLevel:a,startTime:c,expirationTime:e,sortIndex:-1};c>d?(a.sortIndex=c,f(t,a),null===h(r)&&a===h(t)&&(B?(E(L),L=-1):B=!0,K(H,c-d))):(a.sortIndex=e,f(r,a),A||z||(A=!0,I(J)));return a};\nexports.unstable_shouldYield=M;exports.unstable_wrapCallback=function(a){var b=y;return function(){var c=y;y=b;try{return a.apply(this,arguments)}finally{y=c}}};\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + \"4cd1a15c\" + \".chunk.js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var inProgress = {};\nvar dataWebpackPrefix = \"sample-app:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/sample-app/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunksample_app\"] = self[\"webpackChunksample_app\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n  return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n  function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose, inner;\n    if (async) {\n      if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n      dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n      if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n      dispose = value[Symbol.dispose];\n      if (async) inner = dispose;\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  function next() {\n    while (env.stack.length) {\n      var rec = env.stack.pop();\n      try {\n        var result = rec.dispose && rec.dispose.call(rec.value);\n        if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n      }\n      catch (e) {\n          fail(e);\n      }\n    }\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n};\n","const genericMessage = \"Invariant Violation\";\nconst {\n  setPrototypeOf = function (obj: any, proto: any) {\n    obj.__proto__ = proto;\n    return obj;\n  },\n} = Object as any;\n\nexport class InvariantError extends Error {\n  framesToPop = 1;\n  name = genericMessage;\n  constructor(message: string | number = genericMessage) {\n    super(\n      typeof message === \"number\"\n        ? `${genericMessage}: ${message} (see https://github.com/apollographql/invariant-packages)`\n        : message\n    );\n    setPrototypeOf(this, InvariantError.prototype);\n  }\n}\n\nexport function invariant(\n  condition: any,\n  message?: string | number,\n): asserts condition {\n  if (!condition) {\n    throw new InvariantError(message);\n  }\n}\n\nconst verbosityLevels = [\"debug\", \"log\", \"warn\", \"error\", \"silent\"] as const;\nexport type VerbosityLevel = (typeof verbosityLevels)[number];\nexport type ConsoleMethodName = Exclude<VerbosityLevel, \"silent\">;\nlet verbosityLevel = verbosityLevels.indexOf(\"log\");\n\nfunction wrapConsoleMethod<M extends ConsoleMethodName>(name: M) {\n  return function () {\n    if (verbosityLevels.indexOf(name) >= verbosityLevel) {\n      // Default to console.log if this host environment happens not to provide\n      // all the console.* methods we need.\n      const method = console[name] || console.log;\n      return method.apply(console, arguments as any);\n    }\n  } as (typeof console)[M];\n}\n\nexport namespace invariant {\n  export const debug = wrapConsoleMethod(\"debug\");\n  export const log = wrapConsoleMethod(\"log\");\n  export const warn = wrapConsoleMethod(\"warn\");\n  export const error = wrapConsoleMethod(\"error\");\n}\n\nexport function setVerbosity(level: VerbosityLevel): VerbosityLevel {\n  const old = verbosityLevels[verbosityLevel];\n  verbosityLevel = Math.max(0, verbosityLevels.indexOf(level));\n  return old;\n}\n\nexport default invariant;\n","export const version = \"local\";\n","export function maybe<T>(thunk: () => T): T | undefined {\n  try {\n    return thunk();\n  } catch {}\n}\n","import { maybe } from \"./maybe.js\";\n\ndeclare global {\n  const __DEV__: boolean; // will be removed in `dist` by the `postprocessDist` script\n  interface Window {\n    __DEV__?: boolean;\n  }\n}\n\nexport default (maybe(() => globalThis) ||\n  maybe(() => window) ||\n  maybe(() => self) ||\n  maybe(() => global) ||\n  // We don't expect the Function constructor ever to be invoked at runtime, as\n  // long as at least one of globalThis, window, self, or global is defined, so\n  // we are under no obligation to make it easy for static analysis tools to\n  // detect syntactic usage of the Function constructor. If you think you can\n  // improve your static analysis to detect this obfuscation, think again. This\n  // is an arms race you cannot win, at least not in JavaScript.\n  maybe(function () {\n    return maybe.constructor(\"return this\")();\n  })) as typeof globalThis & Window;\n","const prefixCounts = new Map<string, number>();\n\n// These IDs won't be globally unique, but they will be unique within this\n// process, thanks to the counter, and unguessable thanks to the random suffix.\nexport function makeUniqueId(prefix: string) {\n  const count = prefixCounts.get(prefix) || 1;\n  prefixCounts.set(prefix, count + 1);\n  return `${prefix}:${count}:${Math.random().toString(36).slice(2)}`;\n}\n","import { makeUniqueId } from \"./makeUniqueId.js\";\n\nexport function stringifyForDisplay(value: any, space = 0): string {\n  const undefId = makeUniqueId(\"stringifyForDisplay\");\n  return JSON.stringify(\n    value,\n    (key, value) => {\n      return value === void 0 ? undefId : value;\n    },\n    space\n  )\n    .split(JSON.stringify(undefId))\n    .join(\"<undefined>\");\n}\n","import { invariant as originalInvariant, InvariantError } from \"ts-invariant\";\nimport { version } from \"../../version.js\";\nimport global from \"./global.js\";\nimport type { ErrorCodes } from \"../../invariantErrorCodes.js\";\nimport { stringifyForDisplay } from \"../common/stringifyForDisplay.js\";\n\nfunction wrap(fn: (msg?: string, ...args: any[]) => void) {\n  return function (message?: string | number, ...args: any[]) {\n    if (typeof message === \"number\") {\n      const arg0 = message;\n      message = getHandledErrorMsg(arg0);\n      if (!message) {\n        message = getFallbackErrorMsg(arg0, args);\n        args = [];\n      }\n    }\n    fn(...[message].concat(args));\n  };\n}\n\ntype LogFunction = {\n  /**\n   * Logs a `$level` message if the user used `ts-invariant`'s `setVerbosity` to set\n   * a verbosity level of `$level` or lower. (defaults to `\"log\"`).\n   *\n   * The user will either be presented with a link to the documentation for the message,\n   * or they can use the `loadDevMessages` to add the message strings to the bundle.\n   * The documentation will display the message without argument substitution.\n   * Instead, the arguments will be printed on the console after the link.\n   *\n   * `message` can only be a string, a concatenation of strings, or a ternary statement\n   * that results in a string. This will be enforced on build, where the message will\n   * be replaced with a message number.\n   *\n   * String substitutions like %s, %o, %d or %f are supported.\n   */\n  (message?: any, ...optionalParams: unknown[]): void;\n};\n\ntype WrappedInvariant = {\n  /**\n   * Throws and InvariantError with the given message if the condition is false.\n   *\n   * `message` can only be a string, a concatenation of strings, or a ternary statement\n   * that results in a string. This will be enforced on build, where the message will\n   * be replaced with a message number.\n   *\n   * The user will either be presented with a link to the documentation for the message,\n   * or they can use the `loadErrorMessages` to add the message strings to the bundle.\n   * The documentation will display the message with the arguments substituted.\n   *\n   * String substitutions with %s are supported and will also return\n   * pretty-stringified objects.\n   * Excess `optionalParams` will be swallowed.\n   */\n  (\n    condition: any,\n    message?: string | number,\n    ...optionalParams: unknown[]\n  ): asserts condition;\n\n  debug: LogFunction;\n  log: LogFunction;\n  warn: LogFunction;\n  error: LogFunction;\n};\nconst invariant: WrappedInvariant = Object.assign(\n  function invariant(\n    condition: any,\n    message?: string | number,\n    ...args: unknown[]\n  ): asserts condition {\n    if (!condition) {\n      originalInvariant(\n        condition,\n        getHandledErrorMsg(message, args) || getFallbackErrorMsg(message, args)\n      );\n    }\n  },\n  {\n    debug: wrap(originalInvariant.debug),\n    log: wrap(originalInvariant.log),\n    warn: wrap(originalInvariant.warn),\n    error: wrap(originalInvariant.error),\n  }\n);\n\n/**\n * Returns an InvariantError.\n *\n * `message` can only be a string, a concatenation of strings, or a ternary statement\n * that results in a string. This will be enforced on build, where the message will\n * be replaced with a message number.\n * String substitutions with %s are supported and will also return\n * pretty-stringified objects.\n * Excess `optionalParams` will be swallowed.\n */\nfunction newInvariantError(\n  message?: string | number,\n  ...optionalParams: unknown[]\n) {\n  return new InvariantError(\n    getHandledErrorMsg(message, optionalParams) ||\n      getFallbackErrorMsg(message, optionalParams)\n  );\n}\n\nconst ApolloErrorMessageHandler = Symbol.for(\n  \"ApolloErrorMessageHandler_\" + version\n);\ndeclare global {\n  interface Window {\n    [ApolloErrorMessageHandler]?: {\n      (message: string | number, args: string[]): string | undefined;\n    } & ErrorCodes;\n  }\n}\n\nfunction stringify(arg: any) {\n  if (typeof arg == \"string\") {\n    return arg;\n  }\n\n  try {\n    return stringifyForDisplay(arg, 2).slice(0, 1000);\n  } catch {\n    return \"<non-serializable>\";\n  }\n}\n\nfunction getHandledErrorMsg(\n  message?: string | number,\n  messageArgs: unknown[] = []\n) {\n  if (!message) return;\n  return (\n    global[ApolloErrorMessageHandler] &&\n    global[ApolloErrorMessageHandler](message, messageArgs.map(stringify))\n  );\n}\n\nfunction getFallbackErrorMsg(\n  message?: string | number,\n  messageArgs: unknown[] = []\n) {\n  if (!message) return;\n  return `An error occurred! For more details, see the full error text at https://go.apollo.dev/c/err#${encodeURIComponent(\n    JSON.stringify({\n      version,\n      message,\n      args: messageArgs.map(stringify),\n    })\n  )}`;\n}\n\nexport {\n  invariant,\n  InvariantError,\n  newInvariantError,\n  ApolloErrorMessageHandler,\n};\n","import {\n  invariant,\n  newInvariantError,\n  InvariantError,\n} from \"./invariantWrappers.js\";\n\nexport { maybe } from \"./maybe.js\";\nexport { default as global } from \"./global.js\";\nexport { invariant, newInvariantError, InvariantError };\n\n/**\n * @deprecated we do not use this internally anymore,\n * it is just exported for backwards compatibility\n */\n// this file is extempt from automatic `__DEV__` replacement\n// so we have to write it out here\n// @ts-ignore\nexport const DEV = globalThis.__DEV__ !== false;\nexport { DEV as __DEV__ };\n","import { maybe } from \"../globals/index.js\";\n\nconst isReactNative = maybe(() => navigator.product) == \"ReactNative\";\n\nexport const canUseWeakMap =\n  typeof WeakMap === \"function\" &&\n  !(isReactNative && !(global as any).HermesInternal);\n\nexport const canUseWeakSet = typeof WeakSet === \"function\";\n\nexport const canUseSymbol =\n  typeof Symbol === \"function\" && typeof Symbol.for === \"function\";\n\nexport const canUseAsyncIteratorSymbol = canUseSymbol && Symbol.asyncIterator;\n\nexport const canUseDOM =\n  typeof maybe(() => window.document.createElement) === \"function\";\n\nconst usingJSDOM: boolean =\n  // Following advice found in this comment from @domenic (maintainer of jsdom):\n  // https://github.com/jsdom/jsdom/issues/1537#issuecomment-229405327\n  //\n  // Since we control the version of Jest and jsdom used when running Apollo\n  // Client tests, and that version is recent enought to include \" jsdom/x.y.z\"\n  // at the end of the user agent string, I believe this case is all we need to\n  // check. Testing for \"Node.js\" was recommended for backwards compatibility\n  // with older version of jsdom, but we don't have that problem.\n  maybe(() => navigator.userAgent.indexOf(\"jsdom\") >= 0) || false;\n\n// Our tests should all continue to pass if we remove this !usingJSDOM\n// condition, thereby allowing useLayoutEffect when using jsdom. Unfortunately,\n// if we allow useLayoutEffect, then useSyncExternalStore generates many\n// warnings about useLayoutEffect doing nothing on the server. While these\n// warnings are harmless, this !usingJSDOM condition seems to be the best way to\n// prevent them (i.e. skipping useLayoutEffect when using jsdom).\nexport const canUseLayoutEffect = (canUseDOM || isReactNative) && !usingJSDOM;\n","import * as React from \"rehackt\";\nimport type * as ReactTypes from \"react\";\nimport type { ApolloClient } from \"../../core/index.js\";\nimport { canUseSymbol } from \"../../utilities/index.js\";\nimport type { RenderPromises } from \"../ssr/index.js\";\nimport { invariant } from \"../../utilities/globals/index.js\";\n\nexport interface ApolloContextValue {\n  client?: ApolloClient<object>;\n  renderPromises?: RenderPromises;\n}\n\n// To make sure Apollo Client doesn't create more than one React context\n// (which can lead to problems like having an Apollo Client instance added\n// in one context, then attempting to retrieve it from another different\n// context), a single Apollo context is created and tracked in global state.\nconst contextKey =\n  canUseSymbol ? Symbol.for(\"__APOLLO_CONTEXT__\") : \"__APOLLO_CONTEXT__\";\n\nexport function getApolloContext(): ReactTypes.Context<ApolloContextValue> {\n  invariant(\n    \"createContext\" in React,\n    \"Invoking `getApolloContext` in an environment where `React.createContext` is not available.\\n\" +\n      \"The Apollo Client functionality you are trying to use is only available in React Client Components.\\n\" +\n      'Please make sure to add \"use client\" at the top of your file.\\n' +\n      // TODO: change to React documentation once React documentation contains information about Client Components\n      \"For more information, see https://nextjs.org/docs/getting-started/react-essentials#client-components\"\n  );\n\n  let context = (React.createContext as any)[\n    contextKey\n  ] as React.Context<ApolloContextValue>;\n  if (!context) {\n    Object.defineProperty(React.createContext, contextKey, {\n      value: (context = React.createContext<ApolloContextValue>({})),\n      enumerable: false,\n      writable: false,\n      configurable: true,\n    });\n    context.displayName = \"ApolloContext\";\n  }\n  return context;\n}\n\n/**\n * @deprecated This function has no \"resetting\" effect since Apollo Client 3.4.12,\n * and will be removed in the next major version of Apollo Client.\n * If you want to get the Apollo Context, use `getApolloContext` instead.\n */\nexport const resetApolloContext = getApolloContext;\n","import { invariant } from \"../../utilities/globals/index.js\";\n\nimport * as React from \"rehackt\";\nimport type * as ReactTypes from \"react\";\n\nimport type { ApolloClient } from \"../../core/index.js\";\nimport { getApolloContext } from \"./ApolloContext.js\";\n\nexport interface ApolloProviderProps<TCache> {\n  client: ApolloClient<TCache>;\n  children: ReactTypes.ReactNode | ReactTypes.ReactNode[] | null;\n}\n\nexport const ApolloProvider: ReactTypes.FC<ApolloProviderProps<any>> = ({\n  client,\n  children,\n}) => {\n  const ApolloContext = getApolloContext();\n  const parentContext = React.useContext(ApolloContext);\n\n  const context = React.useMemo(() => {\n    return {\n      ...parentContext,\n      client: client || parentContext.client,\n    };\n  }, [parentContext, client]);\n\n  invariant(\n    context.client,\n    \"ApolloProvider was not passed a client instance. Make \" +\n      'sure you pass in your client via the \"client\" prop.'\n  );\n\n  return (\n    <ApolloContext.Provider value={context}>{children}</ApolloContext.Provider>\n  );\n};\n","function _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\n// === Symbol Support ===\nvar hasSymbols = function () {\n  return typeof Symbol === 'function';\n};\n\nvar hasSymbol = function (name) {\n  return hasSymbols() && Boolean(Symbol[name]);\n};\n\nvar getSymbol = function (name) {\n  return hasSymbol(name) ? Symbol[name] : '@@' + name;\n};\n\nif (hasSymbols() && !hasSymbol('observable')) {\n  Symbol.observable = Symbol('observable');\n}\n\nvar SymbolIterator = getSymbol('iterator');\nvar SymbolObservable = getSymbol('observable');\nvar SymbolSpecies = getSymbol('species'); // === Abstract Operations ===\n\nfunction getMethod(obj, key) {\n  var value = obj[key];\n  if (value == null) return undefined;\n  if (typeof value !== 'function') throw new TypeError(value + ' is not a function');\n  return value;\n}\n\nfunction getSpecies(obj) {\n  var ctor = obj.constructor;\n\n  if (ctor !== undefined) {\n    ctor = ctor[SymbolSpecies];\n\n    if (ctor === null) {\n      ctor = undefined;\n    }\n  }\n\n  return ctor !== undefined ? ctor : Observable;\n}\n\nfunction isObservable(x) {\n  return x instanceof Observable; // SPEC: Brand check\n}\n\nfunction hostReportError(e) {\n  if (hostReportError.log) {\n    hostReportError.log(e);\n  } else {\n    setTimeout(function () {\n      throw e;\n    });\n  }\n}\n\nfunction enqueue(fn) {\n  Promise.resolve().then(function () {\n    try {\n      fn();\n    } catch (e) {\n      hostReportError(e);\n    }\n  });\n}\n\nfunction cleanupSubscription(subscription) {\n  var cleanup = subscription._cleanup;\n  if (cleanup === undefined) return;\n  subscription._cleanup = undefined;\n\n  if (!cleanup) {\n    return;\n  }\n\n  try {\n    if (typeof cleanup === 'function') {\n      cleanup();\n    } else {\n      var unsubscribe = getMethod(cleanup, 'unsubscribe');\n\n      if (unsubscribe) {\n        unsubscribe.call(cleanup);\n      }\n    }\n  } catch (e) {\n    hostReportError(e);\n  }\n}\n\nfunction closeSubscription(subscription) {\n  subscription._observer = undefined;\n  subscription._queue = undefined;\n  subscription._state = 'closed';\n}\n\nfunction flushSubscription(subscription) {\n  var queue = subscription._queue;\n\n  if (!queue) {\n    return;\n  }\n\n  subscription._queue = undefined;\n  subscription._state = 'ready';\n\n  for (var i = 0; i < queue.length; ++i) {\n    notifySubscription(subscription, queue[i].type, queue[i].value);\n    if (subscription._state === 'closed') break;\n  }\n}\n\nfunction notifySubscription(subscription, type, value) {\n  subscription._state = 'running';\n  var observer = subscription._observer;\n\n  try {\n    var m = getMethod(observer, type);\n\n    switch (type) {\n      case 'next':\n        if (m) m.call(observer, value);\n        break;\n\n      case 'error':\n        closeSubscription(subscription);\n        if (m) m.call(observer, value);else throw value;\n        break;\n\n      case 'complete':\n        closeSubscription(subscription);\n        if (m) m.call(observer);\n        break;\n    }\n  } catch (e) {\n    hostReportError(e);\n  }\n\n  if (subscription._state === 'closed') cleanupSubscription(subscription);else if (subscription._state === 'running') subscription._state = 'ready';\n}\n\nfunction onNotify(subscription, type, value) {\n  if (subscription._state === 'closed') return;\n\n  if (subscription._state === 'buffering') {\n    subscription._queue.push({\n      type: type,\n      value: value\n    });\n\n    return;\n  }\n\n  if (subscription._state !== 'ready') {\n    subscription._state = 'buffering';\n    subscription._queue = [{\n      type: type,\n      value: value\n    }];\n    enqueue(function () {\n      return flushSubscription(subscription);\n    });\n    return;\n  }\n\n  notifySubscription(subscription, type, value);\n}\n\nvar Subscription = /*#__PURE__*/function () {\n  function Subscription(observer, subscriber) {\n    // ASSERT: observer is an object\n    // ASSERT: subscriber is callable\n    this._cleanup = undefined;\n    this._observer = observer;\n    this._queue = undefined;\n    this._state = 'initializing';\n    var subscriptionObserver = new SubscriptionObserver(this);\n\n    try {\n      this._cleanup = subscriber.call(undefined, subscriptionObserver);\n    } catch (e) {\n      subscriptionObserver.error(e);\n    }\n\n    if (this._state === 'initializing') this._state = 'ready';\n  }\n\n  var _proto = Subscription.prototype;\n\n  _proto.unsubscribe = function unsubscribe() {\n    if (this._state !== 'closed') {\n      closeSubscription(this);\n      cleanupSubscription(this);\n    }\n  };\n\n  _createClass(Subscription, [{\n    key: \"closed\",\n    get: function () {\n      return this._state === 'closed';\n    }\n  }]);\n\n  return Subscription;\n}();\n\nvar SubscriptionObserver = /*#__PURE__*/function () {\n  function SubscriptionObserver(subscription) {\n    this._subscription = subscription;\n  }\n\n  var _proto2 = SubscriptionObserver.prototype;\n\n  _proto2.next = function next(value) {\n    onNotify(this._subscription, 'next', value);\n  };\n\n  _proto2.error = function error(value) {\n    onNotify(this._subscription, 'error', value);\n  };\n\n  _proto2.complete = function complete() {\n    onNotify(this._subscription, 'complete');\n  };\n\n  _createClass(SubscriptionObserver, [{\n    key: \"closed\",\n    get: function () {\n      return this._subscription._state === 'closed';\n    }\n  }]);\n\n  return SubscriptionObserver;\n}();\n\nvar Observable = /*#__PURE__*/function () {\n  function Observable(subscriber) {\n    if (!(this instanceof Observable)) throw new TypeError('Observable cannot be called as a function');\n    if (typeof subscriber !== 'function') throw new TypeError('Observable initializer must be a function');\n    this._subscriber = subscriber;\n  }\n\n  var _proto3 = Observable.prototype;\n\n  _proto3.subscribe = function subscribe(observer) {\n    if (typeof observer !== 'object' || observer === null) {\n      observer = {\n        next: observer,\n        error: arguments[1],\n        complete: arguments[2]\n      };\n    }\n\n    return new Subscription(observer, this._subscriber);\n  };\n\n  _proto3.forEach = function forEach(fn) {\n    var _this = this;\n\n    return new Promise(function (resolve, reject) {\n      if (typeof fn !== 'function') {\n        reject(new TypeError(fn + ' is not a function'));\n        return;\n      }\n\n      function done() {\n        subscription.unsubscribe();\n        resolve();\n      }\n\n      var subscription = _this.subscribe({\n        next: function (value) {\n          try {\n            fn(value, done);\n          } catch (e) {\n            reject(e);\n            subscription.unsubscribe();\n          }\n        },\n        error: reject,\n        complete: resolve\n      });\n    });\n  };\n\n  _proto3.map = function map(fn) {\n    var _this2 = this;\n\n    if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n    var C = getSpecies(this);\n    return new C(function (observer) {\n      return _this2.subscribe({\n        next: function (value) {\n          try {\n            value = fn(value);\n          } catch (e) {\n            return observer.error(e);\n          }\n\n          observer.next(value);\n        },\n        error: function (e) {\n          observer.error(e);\n        },\n        complete: function () {\n          observer.complete();\n        }\n      });\n    });\n  };\n\n  _proto3.filter = function filter(fn) {\n    var _this3 = this;\n\n    if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n    var C = getSpecies(this);\n    return new C(function (observer) {\n      return _this3.subscribe({\n        next: function (value) {\n          try {\n            if (!fn(value)) return;\n          } catch (e) {\n            return observer.error(e);\n          }\n\n          observer.next(value);\n        },\n        error: function (e) {\n          observer.error(e);\n        },\n        complete: function () {\n          observer.complete();\n        }\n      });\n    });\n  };\n\n  _proto3.reduce = function reduce(fn) {\n    var _this4 = this;\n\n    if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n    var C = getSpecies(this);\n    var hasSeed = arguments.length > 1;\n    var hasValue = false;\n    var seed = arguments[1];\n    var acc = seed;\n    return new C(function (observer) {\n      return _this4.subscribe({\n        next: function (value) {\n          var first = !hasValue;\n          hasValue = true;\n\n          if (!first || hasSeed) {\n            try {\n              acc = fn(acc, value);\n            } catch (e) {\n              return observer.error(e);\n            }\n          } else {\n            acc = value;\n          }\n        },\n        error: function (e) {\n          observer.error(e);\n        },\n        complete: function () {\n          if (!hasValue && !hasSeed) return observer.error(new TypeError('Cannot reduce an empty sequence'));\n          observer.next(acc);\n          observer.complete();\n        }\n      });\n    });\n  };\n\n  _proto3.concat = function concat() {\n    var _this5 = this;\n\n    for (var _len = arguments.length, sources = new Array(_len), _key = 0; _key < _len; _key++) {\n      sources[_key] = arguments[_key];\n    }\n\n    var C = getSpecies(this);\n    return new C(function (observer) {\n      var subscription;\n      var index = 0;\n\n      function startNext(next) {\n        subscription = next.subscribe({\n          next: function (v) {\n            observer.next(v);\n          },\n          error: function (e) {\n            observer.error(e);\n          },\n          complete: function () {\n            if (index === sources.length) {\n              subscription = undefined;\n              observer.complete();\n            } else {\n              startNext(C.from(sources[index++]));\n            }\n          }\n        });\n      }\n\n      startNext(_this5);\n      return function () {\n        if (subscription) {\n          subscription.unsubscribe();\n          subscription = undefined;\n        }\n      };\n    });\n  };\n\n  _proto3.flatMap = function flatMap(fn) {\n    var _this6 = this;\n\n    if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n    var C = getSpecies(this);\n    return new C(function (observer) {\n      var subscriptions = [];\n\n      var outer = _this6.subscribe({\n        next: function (value) {\n          if (fn) {\n            try {\n              value = fn(value);\n            } catch (e) {\n              return observer.error(e);\n            }\n          }\n\n          var inner = C.from(value).subscribe({\n            next: function (value) {\n              observer.next(value);\n            },\n            error: function (e) {\n              observer.error(e);\n            },\n            complete: function () {\n              var i = subscriptions.indexOf(inner);\n              if (i >= 0) subscriptions.splice(i, 1);\n              completeIfDone();\n            }\n          });\n          subscriptions.push(inner);\n        },\n        error: function (e) {\n          observer.error(e);\n        },\n        complete: function () {\n          completeIfDone();\n        }\n      });\n\n      function completeIfDone() {\n        if (outer.closed && subscriptions.length === 0) observer.complete();\n      }\n\n      return function () {\n        subscriptions.forEach(function (s) {\n          return s.unsubscribe();\n        });\n        outer.unsubscribe();\n      };\n    });\n  };\n\n  _proto3[SymbolObservable] = function () {\n    return this;\n  };\n\n  Observable.from = function from(x) {\n    var C = typeof this === 'function' ? this : Observable;\n    if (x == null) throw new TypeError(x + ' is not an object');\n    var method = getMethod(x, SymbolObservable);\n\n    if (method) {\n      var observable = method.call(x);\n      if (Object(observable) !== observable) throw new TypeError(observable + ' is not an object');\n      if (isObservable(observable) && observable.constructor === C) return observable;\n      return new C(function (observer) {\n        return observable.subscribe(observer);\n      });\n    }\n\n    if (hasSymbol('iterator')) {\n      method = getMethod(x, SymbolIterator);\n\n      if (method) {\n        return new C(function (observer) {\n          enqueue(function () {\n            if (observer.closed) return;\n\n            for (var _iterator = _createForOfIteratorHelperLoose(method.call(x)), _step; !(_step = _iterator()).done;) {\n              var item = _step.value;\n              observer.next(item);\n              if (observer.closed) return;\n            }\n\n            observer.complete();\n          });\n        });\n      }\n    }\n\n    if (Array.isArray(x)) {\n      return new C(function (observer) {\n        enqueue(function () {\n          if (observer.closed) return;\n\n          for (var i = 0; i < x.length; ++i) {\n            observer.next(x[i]);\n            if (observer.closed) return;\n          }\n\n          observer.complete();\n        });\n      });\n    }\n\n    throw new TypeError(x + ' is not observable');\n  };\n\n  Observable.of = function of() {\n    for (var _len2 = arguments.length, items = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      items[_key2] = arguments[_key2];\n    }\n\n    var C = typeof this === 'function' ? this : Observable;\n    return new C(function (observer) {\n      enqueue(function () {\n        if (observer.closed) return;\n\n        for (var i = 0; i < items.length; ++i) {\n          observer.next(items[i]);\n          if (observer.closed) return;\n        }\n\n        observer.complete();\n      });\n    });\n  };\n\n  _createClass(Observable, null, [{\n    key: SymbolSpecies,\n    get: function () {\n      return this;\n    }\n  }]);\n\n  return Observable;\n}();\n\nif (hasSymbols()) {\n  Object.defineProperty(Observable, Symbol('extensions'), {\n    value: {\n      symbol: SymbolObservable,\n      hostReportError: hostReportError\n    },\n    configurable: true\n  });\n}\n\nexport { Observable };\n","export function isNonNullObject(obj: any): obj is Record<string | number, any> {\n  return obj !== null && typeof obj === \"object\";\n}\n\nexport function isPlainObject(obj: any): obj is Record<string | number, any> {\n  return (\n    obj !== null &&\n    typeof obj === \"object\" &&\n    (Object.getPrototypeOf(obj) === Object.prototype ||\n      Object.getPrototypeOf(obj) === null)\n  );\n}\n","import { invariant, newInvariantError } from \"../globals/index.js\";\n\nimport type {\n  DocumentNode,\n  FragmentDefinitionNode,\n  InlineFragmentNode,\n  SelectionNode,\n} from \"graphql\";\n\n// TODO(brian): A hack until this issue is resolved (https://github.com/graphql/graphql-js/issues/3356)\ntype Kind = any;\ntype OperationTypeNode = any;\n/**\n * Returns a query document which adds a single query operation that only\n * spreads the target fragment inside of it.\n *\n * So for example a document of:\n *\n * ```graphql\n * fragment foo on Foo { a b c }\n * ```\n *\n * Turns into:\n *\n * ```graphql\n * { ...foo }\n *\n * fragment foo on Foo { a b c }\n * ```\n *\n * The target fragment will either be the only fragment in the document, or a\n * fragment specified by the provided `fragmentName`. If there is more than one\n * fragment, but a `fragmentName` was not defined then an error will be thrown.\n */\nexport function getFragmentQueryDocument(\n  document: DocumentNode,\n  fragmentName?: string\n): DocumentNode {\n  let actualFragmentName = fragmentName;\n\n  // Build an array of all our fragment definitions that will be used for\n  // validations. We also do some validations on the other definitions in the\n  // document while building this list.\n  const fragments: Array<FragmentDefinitionNode> = [];\n  document.definitions.forEach((definition) => {\n    // Throw an error if we encounter an operation definition because we will\n    // define our own operation definition later on.\n    if (definition.kind === \"OperationDefinition\") {\n      throw newInvariantError(\n        `Found a %s operation%s. ` +\n          \"No operations are allowed when using a fragment as a query. Only fragments are allowed.\",\n        definition.operation,\n        definition.name ? ` named '${definition.name.value}'` : \"\"\n      );\n    }\n    // Add our definition to the fragments array if it is a fragment\n    // definition.\n    if (definition.kind === \"FragmentDefinition\") {\n      fragments.push(definition);\n    }\n  });\n\n  // If the user did not give us a fragment name then let us try to get a\n  // name from a single fragment in the definition.\n  if (typeof actualFragmentName === \"undefined\") {\n    invariant(\n      fragments.length === 1,\n      `Found %s fragments. \\`fragmentName\\` must be provided when there is not exactly 1 fragment.`,\n      fragments.length\n    );\n    actualFragmentName = fragments[0].name.value;\n  }\n\n  // Generate a query document with an operation that simply spreads the\n  // fragment inside of it.\n  const query: DocumentNode = {\n    ...document,\n    definitions: [\n      {\n        kind: \"OperationDefinition\" as Kind,\n        // OperationTypeNode is an enum\n        operation: \"query\" as OperationTypeNode,\n        selectionSet: {\n          kind: \"SelectionSet\" as Kind,\n          selections: [\n            {\n              kind: \"FragmentSpread\" as Kind,\n              name: {\n                kind: \"Name\" as Kind,\n                value: actualFragmentName,\n              },\n            },\n          ],\n        },\n      },\n      ...document.definitions,\n    ],\n  };\n\n  return query;\n}\n\n/**\n * This is an interface that describes a map from fragment names to fragment definitions.\n */\nexport interface FragmentMap {\n  [fragmentName: string]: FragmentDefinitionNode;\n}\n\nexport type FragmentMapFunction = (\n  fragmentName: string\n) => FragmentDefinitionNode | null;\n\n// Utility function that takes a list of fragment definitions and makes a hash out of them\n// that maps the name of the fragment to the fragment definition.\nexport function createFragmentMap(\n  fragments: FragmentDefinitionNode[] = []\n): FragmentMap {\n  const symTable: FragmentMap = {};\n  fragments.forEach((fragment) => {\n    symTable[fragment.name.value] = fragment;\n  });\n  return symTable;\n}\n\nexport function getFragmentFromSelection(\n  selection: SelectionNode,\n  fragmentMap?: FragmentMap | FragmentMapFunction\n): InlineFragmentNode | FragmentDefinitionNode | null {\n  switch (selection.kind) {\n    case \"InlineFragment\":\n      return selection;\n    case \"FragmentSpread\": {\n      const fragmentName = selection.name.value;\n      if (typeof fragmentMap === \"function\") {\n        return fragmentMap(fragmentName);\n      }\n      const fragment = fragmentMap && fragmentMap[fragmentName];\n      invariant(fragment, `No fragment named %s`, fragmentName);\n      return fragment || null;\n    }\n    default:\n      return null;\n  }\n}\n","import type { CommonCache } from \"./common\";\n\ninterface PartialNode<K extends object, V> {\n  value: V;\n  newer: Node<K, V> | null;\n  older: Node<K, V> | null;\n}\n\ninterface UnfinalizedNode<K extends object, V> extends PartialNode<K, V> {\n  keyRef?: undefined;\n  key: K;\n}\n\ninterface FullNode<K extends object, V> extends PartialNode<K, V> {\n  keyRef: WeakRef<K>;\n  key?: undefined;\n}\n\ntype Node<K extends object, V> = FullNode<K, V> | UnfinalizedNode<K, V>;\n\nfunction noop() {}\nconst defaultDispose = noop;\n\nconst _WeakRef =\n  typeof WeakRef !== \"undefined\"\n    ? WeakRef\n    : (function <T>(value: T) {\n        return { deref: () => value } satisfies Omit<\n          WeakRef<any>,\n          typeof Symbol.toStringTag\n        >;\n      } as any as typeof WeakRef);\nconst _WeakMap = typeof WeakMap !== \"undefined\" ? WeakMap : Map;\nconst _FinalizationRegistry =\n  typeof FinalizationRegistry !== \"undefined\"\n    ? FinalizationRegistry\n    : (function <T>() {\n        return {\n          register: noop,\n          unregister: noop,\n        } satisfies Omit<FinalizationRegistry<T>, typeof Symbol.toStringTag>;\n      } as any as typeof FinalizationRegistry);\n\nconst finalizationBatchSize = 10024;\n\nexport class WeakCache<K extends object = any, V = any>\n  implements CommonCache<K, V>\n{\n  private map = new _WeakMap<K, Node<K, V>>();\n  private registry: FinalizationRegistry<Node<K, V>>;\n  private newest: Node<K, V> | null = null;\n  private oldest: Node<K, V> | null = null;\n  private unfinalizedNodes: Set<UnfinalizedNode<K, V>> = new Set();\n  private finalizationScheduled = false;\n  public size = 0;\n\n  constructor(\n    private max = Infinity,\n    public dispose: (value: V, key?: K) => void = defaultDispose\n  ) {\n    this.registry = new _FinalizationRegistry<Node<K, V>>(\n      this.deleteNode.bind(this)\n    );\n  }\n\n  public has(key: K): boolean {\n    return this.map.has(key);\n  }\n\n  public get(key: K): V | undefined {\n    const node = this.getNode(key);\n    return node && node.value;\n  }\n\n  private getNode(key: K): Node<K, V> | undefined {\n    const node = this.map.get(key);\n\n    if (node && node !== this.newest) {\n      const { older, newer } = node;\n\n      if (newer) {\n        newer.older = older;\n      }\n\n      if (older) {\n        older.newer = newer;\n      }\n\n      node.older = this.newest;\n      node.older!.newer = node;\n\n      node.newer = null;\n      this.newest = node;\n\n      if (node === this.oldest) {\n        this.oldest = newer;\n      }\n    }\n\n    return node;\n  }\n\n  public set(key: K, value: V): V {\n    let node = this.getNode(key);\n    if (node) {\n      return (node.value = value);\n    }\n\n    node = {\n      key,\n      value,\n      newer: null,\n      older: this.newest,\n    };\n\n    if (this.newest) {\n      this.newest.newer = node;\n    }\n\n    this.newest = node;\n    this.oldest = this.oldest || node;\n\n    this.scheduleFinalization(node);\n    this.map.set(key, node);\n    this.size++;\n\n    return node.value;\n  }\n\n  public clean() {\n    while (this.oldest && this.size > this.max) {\n      this.deleteNode(this.oldest);\n    }\n  }\n\n  private deleteNode(node: Node<K, V>) {\n    if (node === this.newest) {\n      this.newest = node.older;\n    }\n\n    if (node === this.oldest) {\n      this.oldest = node.newer;\n    }\n\n    if (node.newer) {\n      node.newer.older = node.older;\n    }\n\n    if (node.older) {\n      node.older.newer = node.newer;\n    }\n\n    this.size--;\n    const key = node.key || (node.keyRef && node.keyRef.deref());\n    this.dispose(node.value, key);\n    if (!node.keyRef) {\n      this.unfinalizedNodes.delete(node);\n    } else {\n      this.registry.unregister(node);\n    }\n    if (key) this.map.delete(key);\n  }\n\n  public delete(key: K): boolean {\n    const node = this.map.get(key);\n    if (node) {\n      this.deleteNode(node);\n\n      return true;\n    }\n\n    return false;\n  }\n\n  private scheduleFinalization(node: UnfinalizedNode<K, V>) {\n    this.unfinalizedNodes.add(node);\n    if (!this.finalizationScheduled) {\n      this.finalizationScheduled = true;\n      queueMicrotask(this.finalize);\n    }\n  }\n\n  private finalize = () => {\n    const iterator = this.unfinalizedNodes.values();\n    for (let i = 0; i < finalizationBatchSize; i++) {\n      const node = iterator.next().value;\n      if (!node) break;\n      this.unfinalizedNodes.delete(node);\n      const key = node.key;\n      delete (node as unknown as FullNode<K, V>).key;\n      (node as unknown as FullNode<K, V>).keyRef = new _WeakRef(key);\n      this.registry.register(key, node, node);\n    }\n    if (this.unfinalizedNodes.size > 0) {\n      queueMicrotask(this.finalize);\n    } else {\n      this.finalizationScheduled = false;\n    }\n  };\n}\n","import type { CommonCache } from \"./common\";\n\ninterface Node<K, V> {\n  key: K;\n  value: V;\n  newer: Node<K, V> | null;\n  older: Node<K, V> | null;\n}\n\nfunction defaultDispose() {}\n\nexport class StrongCache<K = any, V = any> implements CommonCache<K, V> {\n  private map = new Map<K, Node<K, V>>();\n  private newest: Node<K, V> | null = null;\n  private oldest: Node<K, V> | null = null;\n\n  constructor(\n    private max = Infinity,\n    public dispose: (value: V, key: K) => void = defaultDispose,\n  ) {}\n\n  public has(key: K): boolean {\n    return this.map.has(key);\n  }\n\n  public get(key: K): V | undefined {\n    const node = this.getNode(key);\n    return node && node.value;\n  }\n\n  public get size() {\n    return this.map.size;\n  }\n\n  private getNode(key: K): Node<K, V> | undefined {\n    const node = this.map.get(key);\n\n    if (node && node !== this.newest) {\n      const { older, newer } = node;\n\n      if (newer) {\n        newer.older = older;\n      }\n\n      if (older) {\n        older.newer = newer;\n      }\n\n      node.older = this.newest;\n      node.older!.newer = node;\n\n      node.newer = null;\n      this.newest = node;\n\n      if (node === this.oldest) {\n        this.oldest = newer;\n      }\n    }\n\n    return node;\n  }\n\n  public set(key: K, value: V): V {\n    let node = this.getNode(key);\n    if (node) {\n      return node.value = value;\n    }\n\n    node = {\n      key,\n      value,\n      newer: null,\n      older: this.newest\n    };\n\n    if (this.newest) {\n      this.newest.newer = node;\n    }\n\n    this.newest = node;\n    this.oldest = this.oldest || node;\n\n    this.map.set(key, node);\n\n    return node.value;\n  }\n\n  public clean() {\n    while (this.oldest && this.map.size > this.max) {\n      this.delete(this.oldest.key);\n    }\n  }\n\n  public delete(key: K): boolean {\n    const node = this.map.get(key);\n    if (node) {\n      if (node === this.newest) {\n        this.newest = node.older;\n      }\n\n      if (node === this.oldest) {\n        this.oldest = node.newer;\n      }\n\n      if (node.newer) {\n        node.newer.older = node.older;\n      }\n\n      if (node.older) {\n        node.older.newer = node.newer;\n      }\n\n      this.map.delete(key);\n      this.dispose(node.value, key);\n\n      return true;\n    }\n\n    return false;\n  }\n}\n","import { WeakCache, StrongCache } from \"@wry/caches\";\n\ninterface CleanableCache {\n  size: number;\n  max?: number;\n  clean: () => void;\n}\nconst scheduledCleanup = new WeakSet<CleanableCache>();\nfunction schedule(cache: CleanableCache) {\n  if (cache.size <= (cache.max || -1)) {\n    return;\n  }\n  if (!scheduledCleanup.has(cache)) {\n    scheduledCleanup.add(cache);\n    setTimeout(() => {\n      cache.clean();\n      scheduledCleanup.delete(cache);\n    }, 100);\n  }\n}\n/**\n * @internal\n * A version of WeakCache that will auto-schedule a cleanup of the cache when\n * a new item is added and the cache reached maximum size.\n * Throttled to once per 100ms.\n *\n * @privateRemarks\n * Should be used throughout the rest of the codebase instead of WeakCache,\n * with the notable exception of usage in `wrap` from `optimism` - that one\n * already handles cleanup and should remain a `WeakCache`.\n */\nexport const AutoCleanedWeakCache = function (\n  max?: number | undefined,\n  dispose?: ((value: any, key: any) => void) | undefined\n) {\n  /*\n  Some builds of `WeakCache` are function prototypes, some are classes.\n  This library still builds with an ES5 target, so we can't extend the\n  real classes.\n  Instead, we have to use this workaround until we switch to a newer build\n  target.\n  */\n  const cache = new WeakCache(max, dispose);\n  cache.set = function (key: any, value: any) {\n    const ret = WeakCache.prototype.set.call(this, key, value);\n    schedule(this as any as CleanableCache);\n    return ret;\n  };\n  return cache;\n} as any as typeof WeakCache;\n/**\n * @internal\n */\nexport type AutoCleanedWeakCache<K extends object, V> = WeakCache<K, V>;\n\n/**\n * @internal\n * A version of StrongCache that will auto-schedule a cleanup of the cache when\n * a new item is added and the cache reached maximum size.\n * Throttled to once per 100ms.\n *\n * @privateRemarks\n * Should be used throughout the rest of the codebase instead of StrongCache,\n * with the notable exception of usage in `wrap` from `optimism` - that one\n * already handles cleanup and should remain a `StrongCache`.\n */\nexport const AutoCleanedStrongCache = function (\n  max?: number | undefined,\n  dispose?: ((value: any, key: any) => void) | undefined\n) {\n  /*\n  Some builds of `StrongCache` are function prototypes, some are classes.\n  This library still builds with an ES5 target, so we can't extend the\n  real classes.\n  Instead, we have to use this workaround until we switch to a newer build\n  target.\n  */\n  const cache = new StrongCache(max, dispose);\n  cache.set = function (key: any, value: any) {\n    const ret = StrongCache.prototype.set.call(this, key, value);\n    schedule(this as any as CleanableCache);\n    return ret;\n  };\n  return cache;\n} as any as typeof StrongCache;\n/**\n * @internal\n */\nexport type AutoCleanedStrongCache<K, V> = StrongCache<K, V>;\n","import { global } from \"../globals/index.js\";\n\ndeclare global {\n  interface Window {\n    [cacheSizeSymbol]?: Partial<CacheSizes>;\n  }\n}\n\n/**\n * The cache sizes used by various Apollo Client caches.\n *\n * @remarks\n * All configurable caches hold memoized values. If an item is\n * cache-collected, it incurs only a small performance impact and\n * doesn't cause data loss. A smaller cache size might save you memory.\n *\n * You should choose cache sizes appropriate for storing a reasonable\n * number of values rather than every value. To prevent too much recalculation,\n * choose cache sizes that are at least large enough to hold memoized values for\n * all hooks/queries on the screen at any given time.\n */\n/*\n * We assume a \"base value\" of 1000 here, which is already very generous.\n * In most applications, it will be very unlikely that 1000 different queries\n * are on screen at the same time.\n */\nexport interface CacheSizes {\n  /**\n   * Cache size for the [`print`](https://github.com/apollographql/apollo-client/blob/main/src/utilities/graphql/print.ts) function.\n   *\n   * It is called with transformed `DocumentNode`s.\n   *\n   * @defaultValue\n   * Defaults to `2000`.\n   *\n   * @remarks\n   * This method is called to transform a GraphQL query AST parsed by `gql`\n   * back into a GraphQL string.\n   *\n   * @privateRemarks\n   * This method is called from the `QueryManager` and various `ApolloLink`s,\n   * always with the \"serverQuery\", so the server-facing part of a transformed\n   * `DocumentNode`.\n   */\n  print: number;\n  /**\n   * Cache size for the [`parser`](https://github.com/apollographql/apollo-client/blob/main/src/react/parser/index.ts) function.\n   *\n   * It is called with user-provided `DocumentNode`s.\n   *\n   * @defaultValue\n   * Defaults to `1000`.\n   *\n   * @remarks\n   * This method is called by HOCs and hooks.\n   *\n   * @privateRemarks\n   * This function is used directly in HOCs, and nowadays mainly accessed by\n   * calling `verifyDocumentType` from various hooks.\n   * It is called with a user-provided DocumentNode.\n   */\n  parser: number;\n  /**\n   * Cache size for the cache of [`DocumentTransform`](https://github.com/apollographql/apollo-client/blob/main/src/utilities/graphql/DocumentTransform.ts)\n   * instances with the `cache` option set to `true`.\n   *\n   * Can be called with user-defined or already-transformed `DocumentNode`s.\n   *\n   * @defaultValue\n   * Defaults to `2000`.\n   *\n   * @remarks\n   * The cache size here should be chosen with other `DocumentTransform`s in mind.\n   * For example, if there was a `DocumentTransform` that would take `x` `DocumentNode`s,\n   * and returned a differently-transformed `DocumentNode` depending if the app is\n   * online or offline, then we assume that the cache returns `2*x` documents.\n   * If that were concatenated with another `DocumentTransform` that would\n   * also duplicate the cache size, you'd need to account for `4*x` documents\n   * returned by the second transform.\n   *\n   * Due to an implementation detail of Apollo Client, if you use custom document\n   * transforms you should always add `n` (the \"base\" number of user-provided\n   * Documents) to the resulting cache size.\n   *\n   * If we assume that the user-provided transforms receive `n` documents and\n   * return `n` documents, the cache size should be `2*n`.\n   *\n   * If we assume that the chain of user-provided transforms receive `n` documents and\n   * return `4*n` documents, the cache size should be `5*n`.\n   *\n   * This size should also then be used in every other cache that mentions that\n   * it operates on a \"transformed\" `DocumentNode`.\n   *\n   * @privateRemarks\n   * Cache size for the `performWork` method of each [`DocumentTransform`](https://github.com/apollographql/apollo-client/blob/main/src/utilities/graphql/DocumentTransform.ts).\n   *\n   * No user-provided DocumentNode will actually be \"the last one\", as we run the\n   * `defaultDocumentTransform` before *and* after the user-provided transforms.\n   * For that reason, we need the extra `n` here - `n` for \"before transformation\"\n   * plus the actual maximum cache size of the user-provided transform chain.\n   *\n   * This method is called from `transformDocument`, which is called from\n   * `QueryManager` with a user-provided DocumentNode.\n   * It is also called with already-transformed DocumentNodes, assuming the\n   * user provided additional transforms.\n   *\n   */\n  \"documentTransform.cache\": number;\n  /**\n   * A cache inside of [`QueryManager`](https://github.com/apollographql/apollo-client/blob/main/src/core/QueryManager.ts).\n   *\n   * It is called with transformed `DocumentNode`s.\n   *\n   * @defaultValue\n   * Defaults to `2000`.\n   *\n   * @privateRemarks\n   * Cache size for the `transformCache` used in the `getDocumentInfo` method of `QueryManager`.\n   * Called throughout the `QueryManager` with transformed DocumentNodes.\n   */\n  \"queryManager.getDocumentInfo\": number;\n  /**\n   * A cache inside of [`PersistedQueryLink`](https://github.com/apollographql/apollo-client/blob/main/src/link/persisted-queries/index.ts).\n   *\n   * It is called with transformed `DocumentNode`s.\n   *\n   * @defaultValue\n   * Defaults to `2000`.\n   *\n   * @remarks\n   * This cache is used to cache the hashes of persisted queries.\n   *\n   * @privateRemarks\n   * Cache size for the `hashesByQuery` cache in the `PersistedQueryLink`.\n   */\n  \"PersistedQueryLink.persistedQueryHashes\": number;\n  /**\n   * Cache used by [`canonicalStringify`](https://github.com/apollographql/apollo-client/blob/main/src/utilities/common/canonicalStringify.ts).\n   *\n   * @defaultValue\n   * Defaults to `1000`.\n   *\n   * @remarks\n   * This cache contains the sorted keys of objects that are stringified by\n   * `canonicalStringify`.\n   * It uses the stringified unsorted keys of objects as keys.\n   * The cache will not grow beyond the size of different object **shapes**\n   * encountered in an application, no matter how much actual data gets stringified.\n   *\n   * @privateRemarks\n   * Cache size for the `sortingMap` in `canonicalStringify`.\n   */\n  canonicalStringify: number;\n  /**\n   * A cache inside of [`FragmentRegistry`](https://github.com/apollographql/apollo-client/blob/main/src/cache/inmemory/fragmentRegistry.ts).\n   *\n   * Can be called with user-defined or already-transformed `DocumentNode`s.\n   *\n   * @defaultValue\n   * Defaults to `2000`.\n   *\n   * @privateRemarks\n   *\n   * Cache size for the `transform` method of FragmentRegistry.\n   * This function is called as part of the `defaultDocumentTransform` which will be called with\n   * user-provided and already-transformed DocumentNodes.\n   *\n   */\n  \"fragmentRegistry.transform\": number;\n  /**\n   * A cache inside of [`FragmentRegistry`](https://github.com/apollographql/apollo-client/blob/main/src/cache/inmemory/fragmentRegistry.ts).\n   *\n   * This function is called with fragment names in the form of a string.\n   *\n   * @defaultValue\n   * Defaults to `1000`.\n   *\n   * @remarks\n   * The size of this case should be chosen with the number of fragments in\n   * your application in mind.\n   *\n   * Note:\n   * This function is a dependency of `fragmentRegistry.transform`, so having too small of a cache size here\n   * might involuntarily invalidate values in the `transform` cache.\n   *\n   * @privateRemarks\n   * Cache size for the `lookup` method of FragmentRegistry.\n   */\n  \"fragmentRegistry.lookup\": number;\n  /**\n   * Cache size for the `findFragmentSpreads` method of [`FragmentRegistry`](https://github.com/apollographql/apollo-client/blob/main/src/cache/inmemory/fragmentRegistry.ts).\n   *\n   * This function is called with transformed `DocumentNode`s, as well as recursively\n   * with every fragment spread referenced within that, or a fragment referenced by a\n   * fragment spread.\n   *\n   * @defaultValue\n   * Defaults to `4000`.\n   *\n   * @remarks\n   *\n   * Note: This function is a dependency of `fragmentRegistry.transform`, so having too small of cache size here\n   * might involuntarily invalidate values in the `transform` cache.\n   */\n  \"fragmentRegistry.findFragmentSpreads\": number;\n  /**\n   * Cache size for the `getFragmentDoc` method of [`ApolloCache`](https://github.com/apollographql/apollo-client/blob/main/src/cache/core/cache.ts).\n   *\n   * This function is called with user-provided fragment definitions.\n   *\n   * @defaultValue\n   * Defaults to `1000`.\n   *\n   * @remarks\n   * This function is called from `readFragment` with user-provided fragment definitions.\n   */\n  \"cache.fragmentQueryDocuments\": number;\n  /**\n   * Cache used in [`removeTypenameFromVariables`](https://github.com/apollographql/apollo-client/blob/main/src/link/remove-typename/removeTypenameFromVariables.ts).\n   *\n   * This function is called transformed `DocumentNode`s.\n   *\n   * @defaultValue\n   * Defaults to `2000`.\n   *\n   * @privateRemarks\n   * Cache size for the `getVariableDefinitions` function of `removeTypenameFromVariables`.\n   */\n  \"removeTypenameFromVariables.getVariableDefinitions\": number;\n  /**\n   * Cache size for the `maybeBroadcastWatch` method on [`InMemoryCache`](https://github.com/apollographql/apollo-client/blob/main/src/cache/inmemory/inMemoryCache.ts).\n   *\n   * Note: `maybeBroadcastWatch` will be set to the `resultCacheMaxSize` option and\n   * will fall back to this configuration value if the option is not set.\n   *\n   * @defaultValue\n   * Defaults to `5000`.\n   *\n   * @remarks\n   * This method is used for dependency tracking in the `InMemoryCache` and\n   * prevents from unnecessary re-renders.\n   * It is recommended to keep this value significantly higher than the number of\n   * possible subscribers you will have active at the same time in your application\n   * at any time.\n   */\n  \"inMemoryCache.maybeBroadcastWatch\": number;\n  /**\n   * Cache size for the `executeSelectionSet` method on [`StoreReader`](https://github.com/apollographql/apollo-client/blob/main/src/cache/inmemory/readFromStore.ts).\n   *\n   * Note:\n   * `executeSelectionSet` will be set to the `resultCacheMaxSize` option and\n   * will fall back to this configuration value if the option is not set.\n   *\n   * @defaultValue\n   * Defaults to `10000`.\n   *\n   * @remarks\n   * Every object that is read from the cache will be cached here, so it is\n   * recommended to set this to a high value.\n   */\n  \"inMemoryCache.executeSelectionSet\": number;\n  /**\n   * Cache size for the `executeSubSelectedArray` method on [`StoreReader`](https://github.com/apollographql/apollo-client/blob/main/src/cache/inmemory/readFromStore.ts).\n   *\n   * Note:\n   * `executeSubSelectedArray` will be set to the `resultCacheMaxSize` option and\n   * will fall back to this configuration value if the option is not set.\n   *\n   * @defaultValue\n   * Defaults to `5000`.\n   *\n   * @remarks\n   * Every array that is read from the cache will be cached here, so it is\n   * recommended to set this to a high value.\n   */\n  \"inMemoryCache.executeSubSelectedArray\": number;\n}\n\nconst cacheSizeSymbol = Symbol.for(\"apollo.cacheSize\");\n/**\n *\n * The global cache size configuration for Apollo Client.\n *\n * @remarks\n *\n * You can directly modify this object, but any modification will\n * only have an effect on caches that are created after the modification.\n *\n * So for global caches, such as `parser`, `canonicalStringify` and `print`,\n * you might need to call `.reset` on them, which will essentially re-create them.\n *\n * Alternatively, you can set `globalThis[Symbol.for(\"apollo.cacheSize\")]` before\n * you load the Apollo Client package:\n *\n * @example\n * ```ts\n * globalThis[Symbol.for(\"apollo.cacheSize\")] = {\n *   parser: 100\n * } satisfies Partial<CacheSizes> // the `satisfies` is optional if using TypeScript\n * ```\n */\nexport const cacheSizes: Partial<CacheSizes> = { ...global[cacheSizeSymbol] };\n\nexport const enum defaultCacheSizes {\n  parser = 1000,\n  canonicalStringify = 1000,\n  print = 2000,\n  \"documentTransform.cache\" = 2000,\n  \"queryManager.getDocumentInfo\" = 2000,\n  \"PersistedQueryLink.persistedQueryHashes\" = 2000,\n  \"fragmentRegistry.transform\" = 2000,\n  \"fragmentRegistry.lookup\" = 1000,\n  \"fragmentRegistry.findFragmentSpreads\" = 4000,\n  \"cache.fragmentQueryDocuments\" = 1000,\n  \"removeTypenameFromVariables.getVariableDefinitions\" = 2000,\n  \"inMemoryCache.maybeBroadcastWatch\" = 5000,\n  \"inMemoryCache.executeSelectionSet\" = 50000,\n  \"inMemoryCache.executeSubSelectedArray\" = 10000,\n}\n","import type { OptimisticWrapperFunction } from \"optimism\";\nimport type {\n  InMemoryCache,\n  DocumentTransform,\n  ApolloLink,\n  ApolloCache,\n} from \"../../core/index.js\";\nimport type { ApolloClient } from \"../../core/index.js\";\nimport type { CacheSizes } from \"./sizes.js\";\nimport { cacheSizes, defaultCacheSizes } from \"./sizes.js\";\n\nconst globalCaches: {\n  print?: () => number;\n  parser?: () => number;\n  canonicalStringify?: () => number;\n} = {};\n\nexport function registerGlobalCache(\n  name: keyof typeof globalCaches,\n  getSize: () => number\n) {\n  globalCaches[name] = getSize;\n}\n\n/**\n * Transformative helper type to turn a function of the form\n * ```ts\n * (this: any) => R\n * ```\n * into a function of the form\n * ```ts\n * () => R\n * ```\n * preserving the return type, but removing the `this` parameter.\n *\n * @remarks\n *\n * Further down in the definitions of `_getApolloClientMemoryInternals`,\n * `_getApolloCacheMemoryInternals` and `_getInMemoryCacheMemoryInternals`,\n * having the `this` parameter annotation is extremely useful for type checking\n * inside the function.\n *\n * If this is preserved in the exported types, though, it leads to a situation\n * where `ApolloCache.getMemoryInternals` is a function that requires a `this`\n * of the type `ApolloCache`, while the extending class `InMemoryCache` has a\n * `getMemoryInternals` function that requires a `this` of the type\n * `InMemoryCache`.\n * This is not compatible with TypeScript's inheritence system (although it is\n * perfectly correct), and so TypeScript will complain loudly.\n *\n * We still want to define our functions with the `this` annotation, though,\n * and have the return type inferred.\n * (This requirement for return type inference here makes it impossible to use\n * a function overload that is more explicit on the inner overload than it is\n * on the external overload.)\n *\n * So in the end, we use this helper to remove the `this` annotation from the\n * exported function types, while keeping it in the internal implementation.\n *\n */\ntype RemoveThis<T> = T extends (this: any) => infer R ? () => R : never;\n\n/**\n * For internal purposes only - please call `ApolloClient.getMemoryInternals` instead\n * @internal\n */\nexport const getApolloClientMemoryInternals =\n  __DEV__ ?\n    (_getApolloClientMemoryInternals as RemoveThis<\n      typeof _getApolloClientMemoryInternals\n    >)\n  : undefined;\n\n/**\n * For internal purposes only - please call `ApolloClient.getMemoryInternals` instead\n * @internal\n */\nexport const getInMemoryCacheMemoryInternals =\n  __DEV__ ?\n    (_getInMemoryCacheMemoryInternals as RemoveThis<\n      typeof _getInMemoryCacheMemoryInternals\n    >)\n  : undefined;\n\n/**\n * For internal purposes only - please call `ApolloClient.getMemoryInternals` instead\n * @internal\n */\nexport const getApolloCacheMemoryInternals =\n  __DEV__ ?\n    (_getApolloCacheMemoryInternals as RemoveThis<\n      typeof _getApolloCacheMemoryInternals\n    >)\n  : undefined;\n\nfunction getCurrentCacheSizes() {\n  // `defaultCacheSizes` is a `const enum` that will be inlined during build, so we have to reconstruct it's shape here\n  const defaults: Record<keyof CacheSizes, number> = {\n    parser: defaultCacheSizes[\"parser\"],\n    canonicalStringify: defaultCacheSizes[\"canonicalStringify\"],\n    print: defaultCacheSizes[\"print\"],\n    \"documentTransform.cache\": defaultCacheSizes[\"documentTransform.cache\"],\n    \"queryManager.getDocumentInfo\":\n      defaultCacheSizes[\"queryManager.getDocumentInfo\"],\n    \"PersistedQueryLink.persistedQueryHashes\":\n      defaultCacheSizes[\"PersistedQueryLink.persistedQueryHashes\"],\n    \"fragmentRegistry.transform\":\n      defaultCacheSizes[\"fragmentRegistry.transform\"],\n    \"fragmentRegistry.lookup\": defaultCacheSizes[\"fragmentRegistry.lookup\"],\n    \"fragmentRegistry.findFragmentSpreads\":\n      defaultCacheSizes[\"fragmentRegistry.findFragmentSpreads\"],\n    \"cache.fragmentQueryDocuments\":\n      defaultCacheSizes[\"cache.fragmentQueryDocuments\"],\n    \"removeTypenameFromVariables.getVariableDefinitions\":\n      defaultCacheSizes[\"removeTypenameFromVariables.getVariableDefinitions\"],\n    \"inMemoryCache.maybeBroadcastWatch\":\n      defaultCacheSizes[\"inMemoryCache.maybeBroadcastWatch\"],\n    \"inMemoryCache.executeSelectionSet\":\n      defaultCacheSizes[\"inMemoryCache.executeSelectionSet\"],\n    \"inMemoryCache.executeSubSelectedArray\":\n      defaultCacheSizes[\"inMemoryCache.executeSubSelectedArray\"],\n  };\n  return Object.fromEntries(\n    Object.entries(defaults).map(([k, v]) => [\n      k,\n      cacheSizes[k as keyof CacheSizes] || v,\n    ])\n  );\n}\n\nfunction _getApolloClientMemoryInternals(this: ApolloClient<any>) {\n  if (!__DEV__) throw new Error(\"only supported in development mode\");\n\n  return {\n    limits: getCurrentCacheSizes(),\n    sizes: {\n      print: globalCaches.print?.(),\n      parser: globalCaches.parser?.(),\n      canonicalStringify: globalCaches.canonicalStringify?.(),\n      links: linkInfo(this.link),\n      queryManager: {\n        getDocumentInfo: this[\"queryManager\"][\"transformCache\"].size,\n        documentTransforms: transformInfo(\n          this[\"queryManager\"].documentTransform\n        ),\n      },\n      ...(this.cache.getMemoryInternals?.() as Partial<\n        ReturnType<typeof _getApolloCacheMemoryInternals>\n      > &\n        Partial<ReturnType<typeof _getInMemoryCacheMemoryInternals>>),\n    },\n  };\n}\n\nfunction _getApolloCacheMemoryInternals(this: ApolloCache<any>) {\n  return {\n    cache: {\n      fragmentQueryDocuments: getWrapperInformation(this[\"getFragmentDoc\"]),\n    },\n  };\n}\n\nfunction _getInMemoryCacheMemoryInternals(this: InMemoryCache) {\n  const fragments = this.config.fragments as\n    | undefined\n    | {\n        findFragmentSpreads?: Function;\n        transform?: Function;\n        lookup?: Function;\n      };\n\n  return {\n    ..._getApolloCacheMemoryInternals.apply(this as any),\n    addTypenameDocumentTransform: transformInfo(this[\"addTypenameTransform\"]),\n    inMemoryCache: {\n      executeSelectionSet: getWrapperInformation(\n        this[\"storeReader\"][\"executeSelectionSet\"]\n      ),\n      executeSubSelectedArray: getWrapperInformation(\n        this[\"storeReader\"][\"executeSubSelectedArray\"]\n      ),\n      maybeBroadcastWatch: getWrapperInformation(this[\"maybeBroadcastWatch\"]),\n    },\n    fragmentRegistry: {\n      findFragmentSpreads: getWrapperInformation(\n        fragments?.findFragmentSpreads\n      ),\n      lookup: getWrapperInformation(fragments?.lookup),\n      transform: getWrapperInformation(fragments?.transform),\n    },\n  };\n}\n\nfunction isWrapper(f?: Function): f is OptimisticWrapperFunction<any, any> {\n  return !!f && \"dirtyKey\" in f;\n}\n\nfunction getWrapperInformation(f?: Function) {\n  return isWrapper(f) ? f.size : undefined;\n}\n\nfunction isDefined<T>(value: T | undefined | null): value is T {\n  return value != null;\n}\n\nfunction transformInfo(transform?: DocumentTransform) {\n  return recurseTransformInfo(transform).map((cache) => ({ cache }));\n}\n\nfunction recurseTransformInfo(transform?: DocumentTransform): number[] {\n  return transform ?\n      [\n        getWrapperInformation(transform?.[\"performWork\"]),\n        ...recurseTransformInfo(transform?.[\"left\"]),\n        ...recurseTransformInfo(transform?.[\"right\"]),\n      ].filter(isDefined)\n    : [];\n}\n\nfunction linkInfo(link?: ApolloLink): unknown[] {\n  return link ?\n      [\n        link?.getMemoryInternals?.(),\n        ...linkInfo(link?.left),\n        ...linkInfo(link?.right),\n      ].filter(isDefined)\n    : [];\n}\n","import {\n  AutoCleanedStrongCache,\n  cacheSizes,\n  defaultCacheSizes,\n} from \"../../utilities/caching/index.js\";\nimport { registerGlobalCache } from \"../caching/getMemoryInternals.js\";\n\n/**\n * Like JSON.stringify, but with object keys always sorted in the same order.\n *\n * To achieve performant sorting, this function uses a Map from JSON-serialized\n * arrays of keys (in any order) to sorted arrays of the same keys, with a\n * single sorted array reference shared by all permutations of the keys.\n *\n * As a drawback, this function will add a little bit more memory for every\n * object encountered that has different (more, less, a different order of) keys\n * than in the past.\n *\n * In a typical application, this extra memory usage should not play a\n * significant role, as `canonicalStringify` will be called for only a limited\n * number of object shapes, and the cache will not grow beyond a certain point.\n * But in some edge cases, this could be a problem, so we provide\n * canonicalStringify.reset() as a way of clearing the cache.\n * */\nexport const canonicalStringify = Object.assign(\n  function canonicalStringify(value: any): string {\n    return JSON.stringify(value, stableObjectReplacer);\n  },\n  {\n    reset() {\n      // Clearing the sortingMap will reclaim all cached memory, without\n      // affecting the logical results of canonicalStringify, but potentially\n      // sacrificing performance until the cache is refilled.\n      sortingMap = new AutoCleanedStrongCache<string, readonly string[]>(\n        cacheSizes.canonicalStringify || defaultCacheSizes.canonicalStringify\n      );\n    },\n  }\n);\n\nif (__DEV__) {\n  registerGlobalCache(\"canonicalStringify\", () => sortingMap.size);\n}\n\n// Values are JSON-serialized arrays of object keys (in any order), and values\n// are sorted arrays of the same keys.\nlet sortingMap!: AutoCleanedStrongCache<string, readonly string[]>;\ncanonicalStringify.reset();\n\n// The JSON.stringify function takes an optional second argument called a\n// replacer function. This function is called for each key-value pair in the\n// object being stringified, and its return value is used instead of the\n// original value. If the replacer function returns a new value, that value is\n// stringified as JSON instead of the original value of the property.\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify#the_replacer_parameter\nfunction stableObjectReplacer(key: string, value: any) {\n  if (value && typeof value === \"object\") {\n    const proto = Object.getPrototypeOf(value);\n    // We don't want to mess with objects that are not \"plain\" objects, which\n    // means their prototype is either Object.prototype or null. This check also\n    // prevents needlessly rearranging the indices of arrays.\n    if (proto === Object.prototype || proto === null) {\n      const keys = Object.keys(value);\n      // If keys is already sorted, let JSON.stringify serialize the original\n      // value instead of creating a new object with keys in the same order.\n      if (keys.every(everyKeyInOrder)) return value;\n      const unsortedKey = JSON.stringify(keys);\n      let sortedKeys = sortingMap.get(unsortedKey);\n      if (!sortedKeys) {\n        keys.sort();\n        const sortedKey = JSON.stringify(keys);\n        // Checking for sortedKey in the sortingMap allows us to share the same\n        // sorted array reference for all permutations of the same set of keys.\n        sortedKeys = sortingMap.get(sortedKey) || keys;\n        sortingMap.set(unsortedKey, sortedKeys);\n        sortingMap.set(sortedKey, sortedKeys);\n      }\n      const sortedObject = Object.create(proto);\n      // Reassigning the keys in sorted order will cause JSON.stringify to\n      // serialize them in sorted order.\n      sortedKeys.forEach((key) => {\n        sortedObject[key] = value[key];\n      });\n      return sortedObject;\n    }\n  }\n  return value;\n}\n\n// Since everything that happens in stableObjectReplacer benefits from being as\n// efficient as possible, we use a static function as the callback for\n// keys.every in order to test if the provided keys are already sorted without\n// allocating extra memory for a callback.\nfunction everyKeyInOrder(\n  key: string,\n  i: number,\n  keys: readonly string[]\n): boolean {\n  return i === 0 || keys[i - 1] <= key;\n}\n","import { newInvariantError } from \"../globals/index.js\";\n\nimport type {\n  DirectiveNode,\n  FieldNode,\n  IntValueNode,\n  FloatValueNode,\n  StringValueNode,\n  BooleanValueNode,\n  ObjectValueNode,\n  ListValueNode,\n  EnumValueNode,\n  NullValueNode,\n  VariableNode,\n  InlineFragmentNode,\n  ValueNode,\n  SelectionNode,\n  NameNode,\n  SelectionSetNode,\n  DocumentNode,\n  FragmentSpreadNode,\n} from \"graphql\";\n\nimport { isNonNullObject } from \"../common/objects.js\";\nimport type { FragmentMap } from \"./fragments.js\";\nimport { getFragmentFromSelection } from \"./fragments.js\";\nimport { canonicalStringify } from \"../common/canonicalStringify.js\";\n\nexport interface Reference {\n  readonly __ref: string;\n}\n\nexport function makeReference(id: string): Reference {\n  return { __ref: String(id) };\n}\n\nexport function isReference(obj: any): obj is Reference {\n  return Boolean(\n    obj && typeof obj === \"object\" && typeof obj.__ref === \"string\"\n  );\n}\n\nexport type StoreValue =\n  | number\n  | string\n  | string[]\n  | Reference\n  | Reference[]\n  | null\n  | undefined\n  | void\n  | Object;\n\nexport interface StoreObject {\n  __typename?: string;\n  [storeFieldName: string]: StoreValue;\n}\n\n/**\n * Workaround for a TypeScript quirk:\n * types per default have an implicit index signature that makes them\n * assignable to `StoreObject`.\n * interfaces do not have that implicit index signature, so they cannot\n * be assigned to `StoreObject`.\n * This type just maps over a type or interface that is passed in,\n * implicitly adding the index signature.\n * That way, the result can be assigned to `StoreObject`.\n *\n * This is important if some user-defined interface is used e.g.\n * in cache.modify, where the `toReference` method expects a\n * `StoreObject` as input.\n */\nexport type AsStoreObject<T extends { __typename?: string }> = {\n  [K in keyof T]: T[K];\n};\n\nexport function isDocumentNode(value: any): value is DocumentNode {\n  return (\n    isNonNullObject(value) &&\n    (value as DocumentNode).kind === \"Document\" &&\n    Array.isArray((value as DocumentNode).definitions)\n  );\n}\n\nfunction isStringValue(value: ValueNode): value is StringValueNode {\n  return value.kind === \"StringValue\";\n}\n\nfunction isBooleanValue(value: ValueNode): value is BooleanValueNode {\n  return value.kind === \"BooleanValue\";\n}\n\nfunction isIntValue(value: ValueNode): value is IntValueNode {\n  return value.kind === \"IntValue\";\n}\n\nfunction isFloatValue(value: ValueNode): value is FloatValueNode {\n  return value.kind === \"FloatValue\";\n}\n\nfunction isVariable(value: ValueNode): value is VariableNode {\n  return value.kind === \"Variable\";\n}\n\nfunction isObjectValue(value: ValueNode): value is ObjectValueNode {\n  return value.kind === \"ObjectValue\";\n}\n\nfunction isListValue(value: ValueNode): value is ListValueNode {\n  return value.kind === \"ListValue\";\n}\n\nfunction isEnumValue(value: ValueNode): value is EnumValueNode {\n  return value.kind === \"EnumValue\";\n}\n\nfunction isNullValue(value: ValueNode): value is NullValueNode {\n  return value.kind === \"NullValue\";\n}\n\nexport function valueToObjectRepresentation(\n  argObj: any,\n  name: NameNode,\n  value: ValueNode,\n  variables?: Object\n) {\n  if (isIntValue(value) || isFloatValue(value)) {\n    argObj[name.value] = Number(value.value);\n  } else if (isBooleanValue(value) || isStringValue(value)) {\n    argObj[name.value] = value.value;\n  } else if (isObjectValue(value)) {\n    const nestedArgObj = {};\n    value.fields.map((obj) =>\n      valueToObjectRepresentation(nestedArgObj, obj.name, obj.value, variables)\n    );\n    argObj[name.value] = nestedArgObj;\n  } else if (isVariable(value)) {\n    const variableValue = (variables || ({} as any))[value.name.value];\n    argObj[name.value] = variableValue;\n  } else if (isListValue(value)) {\n    argObj[name.value] = value.values.map((listValue) => {\n      const nestedArgArrayObj = {};\n      valueToObjectRepresentation(\n        nestedArgArrayObj,\n        name,\n        listValue,\n        variables\n      );\n      return (nestedArgArrayObj as any)[name.value];\n    });\n  } else if (isEnumValue(value)) {\n    argObj[name.value] = (value as EnumValueNode).value;\n  } else if (isNullValue(value)) {\n    argObj[name.value] = null;\n  } else {\n    throw newInvariantError(\n      `The inline argument \"%s\" of kind \"%s\"` +\n        \"is not supported. Use variables instead of inline arguments to \" +\n        \"overcome this limitation.\",\n      name.value,\n      (value as any).kind\n    );\n  }\n}\n\nexport function storeKeyNameFromField(\n  field: FieldNode,\n  variables?: Object\n): string {\n  let directivesObj: any = null;\n  if (field.directives) {\n    directivesObj = {};\n    field.directives.forEach((directive) => {\n      directivesObj[directive.name.value] = {};\n\n      if (directive.arguments) {\n        directive.arguments.forEach(({ name, value }) =>\n          valueToObjectRepresentation(\n            directivesObj[directive.name.value],\n            name,\n            value,\n            variables\n          )\n        );\n      }\n    });\n  }\n\n  let argObj: any = null;\n  if (field.arguments && field.arguments.length) {\n    argObj = {};\n    field.arguments.forEach(({ name, value }) =>\n      valueToObjectRepresentation(argObj, name, value, variables)\n    );\n  }\n\n  return getStoreKeyName(field.name.value, argObj, directivesObj);\n}\n\nexport type Directives = {\n  [directiveName: string]: {\n    [argName: string]: any;\n  };\n};\n\nconst KNOWN_DIRECTIVES: string[] = [\n  \"connection\",\n  \"include\",\n  \"skip\",\n  \"client\",\n  \"rest\",\n  \"export\",\n  \"nonreactive\",\n];\n\n// Default stable JSON.stringify implementation used by getStoreKeyName. Can be\n// updated/replaced with something better by calling\n// getStoreKeyName.setStringify(newStringifyFunction).\nlet storeKeyNameStringify: (value: any) => string = canonicalStringify;\n\nexport const getStoreKeyName = Object.assign(\n  function (\n    fieldName: string,\n    args?: Record<string, any> | null,\n    directives?: Directives\n  ): string {\n    if (\n      args &&\n      directives &&\n      directives[\"connection\"] &&\n      directives[\"connection\"][\"key\"]\n    ) {\n      if (\n        directives[\"connection\"][\"filter\"] &&\n        (directives[\"connection\"][\"filter\"] as string[]).length > 0\n      ) {\n        const filterKeys =\n          directives[\"connection\"][\"filter\"] ?\n            (directives[\"connection\"][\"filter\"] as string[])\n          : [];\n        filterKeys.sort();\n\n        const filteredArgs = {} as { [key: string]: any };\n        filterKeys.forEach((key) => {\n          filteredArgs[key] = args[key];\n        });\n\n        return `${directives[\"connection\"][\"key\"]}(${storeKeyNameStringify(\n          filteredArgs\n        )})`;\n      } else {\n        return directives[\"connection\"][\"key\"];\n      }\n    }\n\n    let completeFieldName: string = fieldName;\n\n    if (args) {\n      // We can't use `JSON.stringify` here since it's non-deterministic,\n      // and can lead to different store key names being created even though\n      // the `args` object used during creation has the same properties/values.\n      const stringifiedArgs: string = storeKeyNameStringify(args);\n      completeFieldName += `(${stringifiedArgs})`;\n    }\n\n    if (directives) {\n      Object.keys(directives).forEach((key) => {\n        if (KNOWN_DIRECTIVES.indexOf(key) !== -1) return;\n        if (directives[key] && Object.keys(directives[key]).length) {\n          completeFieldName += `@${key}(${storeKeyNameStringify(\n            directives[key]\n          )})`;\n        } else {\n          completeFieldName += `@${key}`;\n        }\n      });\n    }\n\n    return completeFieldName;\n  },\n  {\n    setStringify(s: typeof storeKeyNameStringify) {\n      const previous = storeKeyNameStringify;\n      storeKeyNameStringify = s;\n      return previous;\n    },\n  }\n);\n\nexport function argumentsObjectFromField(\n  field: FieldNode | DirectiveNode,\n  variables?: Record<string, any>\n): Object | null {\n  if (field.arguments && field.arguments.length) {\n    const argObj: Object = {};\n    field.arguments.forEach(({ name, value }) =>\n      valueToObjectRepresentation(argObj, name, value, variables)\n    );\n    return argObj;\n  }\n  return null;\n}\n\nexport function resultKeyNameFromField(field: FieldNode): string {\n  return field.alias ? field.alias.value : field.name.value;\n}\n\nexport function getTypenameFromResult(\n  result: Record<string, any>,\n  selectionSet: SelectionSetNode,\n  fragmentMap?: FragmentMap\n): string | undefined {\n  let fragments: undefined | Array<InlineFragmentNode | FragmentSpreadNode>;\n  for (const selection of selectionSet.selections) {\n    if (isField(selection)) {\n      if (selection.name.value === \"__typename\") {\n        return result[resultKeyNameFromField(selection)];\n      }\n    } else if (fragments) {\n      fragments.push(selection);\n    } else {\n      fragments = [selection];\n    }\n  }\n  if (typeof result.__typename === \"string\") {\n    return result.__typename;\n  }\n  if (fragments) {\n    for (const selection of fragments) {\n      const typename = getTypenameFromResult(\n        result,\n        getFragmentFromSelection(selection, fragmentMap)!.selectionSet,\n        fragmentMap\n      );\n      if (typeof typename === \"string\") {\n        return typename;\n      }\n    }\n  }\n}\n\nexport function isField(selection: SelectionNode): selection is FieldNode {\n  return selection.kind === \"Field\";\n}\n\nexport function isInlineFragment(\n  selection: SelectionNode\n): selection is InlineFragmentNode {\n  return selection.kind === \"InlineFragment\";\n}\n\nexport type VariableValue = (node: VariableNode) => any;\n","import { invariant, newInvariantError } from \"../globals/index.js\";\n\nimport type {\n  DocumentNode,\n  OperationDefinitionNode,\n  FragmentDefinitionNode,\n  ValueNode,\n} from \"graphql\";\n\nimport { valueToObjectRepresentation } from \"./storeUtils.js\";\n\ntype OperationDefinitionWithName = OperationDefinitionNode & {\n  name: NonNullable<OperationDefinitionNode[\"name\"]>;\n};\n\n// Checks the document for errors and throws an exception if there is an error.\nexport function checkDocument(doc: DocumentNode) {\n  invariant(\n    doc && doc.kind === \"Document\",\n    `Expecting a parsed GraphQL document. Perhaps you need to wrap the query \\\nstring in a \"gql\" tag? http://docs.apollostack.com/apollo-client/core.html#gql`\n  );\n\n  const operations = doc.definitions\n    .filter((d) => d.kind !== \"FragmentDefinition\")\n    .map((definition) => {\n      if (definition.kind !== \"OperationDefinition\") {\n        throw newInvariantError(\n          `Schema type definitions not allowed in queries. Found: \"%s\"`,\n          definition.kind\n        );\n      }\n      return definition;\n    });\n\n  invariant(\n    operations.length <= 1,\n    `Ambiguous GraphQL document: contains %s operations`,\n    operations.length\n  );\n\n  return doc;\n}\n\nexport function getOperationDefinition(\n  doc: DocumentNode\n): OperationDefinitionNode | undefined {\n  checkDocument(doc);\n  return doc.definitions.filter(\n    (definition): definition is OperationDefinitionNode =>\n      definition.kind === \"OperationDefinition\"\n  )[0];\n}\n\nexport function getOperationName(doc: DocumentNode): string | null {\n  return (\n    doc.definitions\n      .filter(\n        (definition): definition is OperationDefinitionWithName =>\n          definition.kind === \"OperationDefinition\" && !!definition.name\n      )\n      .map((x) => x.name.value)[0] || null\n  );\n}\n\n// Returns the FragmentDefinitions from a particular document as an array\nexport function getFragmentDefinitions(\n  doc: DocumentNode\n): FragmentDefinitionNode[] {\n  return doc.definitions.filter(\n    (definition): definition is FragmentDefinitionNode =>\n      definition.kind === \"FragmentDefinition\"\n  );\n}\n\nexport function getQueryDefinition(doc: DocumentNode): OperationDefinitionNode {\n  const queryDef = getOperationDefinition(doc)!;\n\n  invariant(\n    queryDef && queryDef.operation === \"query\",\n    \"Must contain a query definition.\"\n  );\n\n  return queryDef;\n}\n\nexport function getFragmentDefinition(\n  doc: DocumentNode\n): FragmentDefinitionNode {\n  invariant(\n    doc.kind === \"Document\",\n    `Expecting a parsed GraphQL document. Perhaps you need to wrap the query \\\nstring in a \"gql\" tag? http://docs.apollostack.com/apollo-client/core.html#gql`\n  );\n\n  invariant(\n    doc.definitions.length <= 1,\n    \"Fragment must have exactly one definition.\"\n  );\n\n  const fragmentDef = doc.definitions[0] as FragmentDefinitionNode;\n\n  invariant(\n    fragmentDef.kind === \"FragmentDefinition\",\n    \"Must be a fragment definition.\"\n  );\n\n  return fragmentDef as FragmentDefinitionNode;\n}\n\n/**\n * Returns the first operation definition found in this document.\n * If no operation definition is found, the first fragment definition will be returned.\n * If no definitions are found, an error will be thrown.\n */\nexport function getMainDefinition(\n  queryDoc: DocumentNode\n): OperationDefinitionNode | FragmentDefinitionNode {\n  checkDocument(queryDoc);\n\n  let fragmentDefinition;\n\n  for (let definition of queryDoc.definitions) {\n    if (definition.kind === \"OperationDefinition\") {\n      const operation = (definition as OperationDefinitionNode).operation;\n      if (\n        operation === \"query\" ||\n        operation === \"mutation\" ||\n        operation === \"subscription\"\n      ) {\n        return definition as OperationDefinitionNode;\n      }\n    }\n    if (definition.kind === \"FragmentDefinition\" && !fragmentDefinition) {\n      // we do this because we want to allow multiple fragment definitions\n      // to precede an operation definition.\n      fragmentDefinition = definition as FragmentDefinitionNode;\n    }\n  }\n\n  if (fragmentDefinition) {\n    return fragmentDefinition;\n  }\n\n  throw newInvariantError(\n    \"Expected a parsed GraphQL query with a query, mutation, subscription, or a fragment.\"\n  );\n}\n\nexport function getDefaultValues(\n  definition: OperationDefinitionNode | undefined\n): Record<string, any> {\n  const defaultValues = Object.create(null);\n  const defs = definition && definition.variableDefinitions;\n  if (defs && defs.length) {\n    defs.forEach((def) => {\n      if (def.defaultValue) {\n        valueToObjectRepresentation(\n          defaultValues,\n          def.variable.name,\n          def.defaultValue as ValueNode\n        );\n      }\n    });\n  }\n  return defaultValues;\n}\n","import { newInvariantError, invariant } from \"../../utilities/globals/index.js\";\n\nimport type { Observer } from \"../../utilities/index.js\";\nimport { Observable } from \"../../utilities/index.js\";\nimport type {\n  NextLink,\n  Operation,\n  RequestHandler,\n  FetchResult,\n  GraphQLRequest,\n} from \"./types.js\";\nimport {\n  validateOperation,\n  createOperation,\n  transformOperation,\n} from \"../utils/index.js\";\n\nfunction passthrough(op: Operation, forward: NextLink) {\n  return (forward ? forward(op) : Observable.of()) as Observable<FetchResult>;\n}\n\nfunction toLink(handler: RequestHandler | ApolloLink) {\n  return typeof handler === \"function\" ? new ApolloLink(handler) : handler;\n}\n\nfunction isTerminating(link: ApolloLink): boolean {\n  return link.request.length <= 1;\n}\n\nexport class ApolloLink {\n  public static empty(): ApolloLink {\n    return new ApolloLink(() => Observable.of());\n  }\n\n  public static from(links: (ApolloLink | RequestHandler)[]): ApolloLink {\n    if (links.length === 0) return ApolloLink.empty();\n    return links.map(toLink).reduce((x, y) => x.concat(y)) as ApolloLink;\n  }\n\n  public static split(\n    test: (op: Operation) => boolean,\n    left: ApolloLink | RequestHandler,\n    right?: ApolloLink | RequestHandler\n  ): ApolloLink {\n    const leftLink = toLink(left);\n    const rightLink = toLink(right || new ApolloLink(passthrough));\n\n    let ret: ApolloLink;\n    if (isTerminating(leftLink) && isTerminating(rightLink)) {\n      ret = new ApolloLink((operation) => {\n        return test(operation) ?\n            leftLink.request(operation) || Observable.of()\n          : rightLink.request(operation) || Observable.of();\n      });\n    } else {\n      ret = new ApolloLink((operation, forward) => {\n        return test(operation) ?\n            leftLink.request(operation, forward) || Observable.of()\n          : rightLink.request(operation, forward) || Observable.of();\n      });\n    }\n    return Object.assign(ret, { left: leftLink, right: rightLink });\n  }\n\n  public static execute(\n    link: ApolloLink,\n    operation: GraphQLRequest\n  ): Observable<FetchResult> {\n    return (\n      link.request(\n        createOperation(\n          operation.context,\n          transformOperation(validateOperation(operation))\n        )\n      ) || Observable.of()\n    );\n  }\n\n  public static concat(\n    first: ApolloLink | RequestHandler,\n    second: ApolloLink | RequestHandler\n  ) {\n    const firstLink = toLink(first);\n    if (isTerminating(firstLink)) {\n      invariant.warn(\n        `You are calling concat on a terminating link, which will have no effect %o`,\n        firstLink\n      );\n      return firstLink;\n    }\n    const nextLink = toLink(second);\n\n    let ret: ApolloLink;\n    if (isTerminating(nextLink)) {\n      ret = new ApolloLink(\n        (operation) =>\n          firstLink.request(\n            operation,\n            (op) => nextLink.request(op) || Observable.of()\n          ) || Observable.of()\n      );\n    } else {\n      ret = new ApolloLink((operation, forward) => {\n        return (\n          firstLink.request(operation, (op) => {\n            return nextLink.request(op, forward) || Observable.of();\n          }) || Observable.of()\n        );\n      });\n    }\n    return Object.assign(ret, { left: firstLink, right: nextLink });\n  }\n\n  constructor(request?: RequestHandler) {\n    if (request) this.request = request;\n  }\n\n  public split(\n    test: (op: Operation) => boolean,\n    left: ApolloLink | RequestHandler,\n    right?: ApolloLink | RequestHandler\n  ): ApolloLink {\n    return this.concat(\n      ApolloLink.split(test, left, right || new ApolloLink(passthrough))\n    );\n  }\n\n  public concat(next: ApolloLink | RequestHandler): ApolloLink {\n    return ApolloLink.concat(this, next);\n  }\n\n  public request(\n    operation: Operation,\n    forward?: NextLink\n  ): Observable<FetchResult> | null {\n    throw newInvariantError(\"request is not implemented\");\n  }\n\n  protected onError(\n    error: any,\n    observer?: Observer<FetchResult>\n  ): false | void {\n    if (observer && observer.error) {\n      observer.error(error);\n      // Returning false indicates that observer.error does not need to be\n      // called again, since it was already called (on the previous line).\n      // Calling observer.error again would not cause any real problems,\n      // since only the first call matters, but custom onError functions\n      // might have other reasons for wanting to prevent the default\n      // behavior by returning false.\n      return false;\n    }\n    // Throw errors will be passed to observer.error.\n    throw error;\n  }\n\n  public setOnError(fn: ApolloLink[\"onError\"]): this {\n    this.onError = fn;\n    return this;\n  }\n\n  /**\n   * @internal\n   * Used to iterate through all links that are concatenations or `split` links.\n   */\n  readonly left?: ApolloLink;\n  /**\n   * @internal\n   * Used to iterate through all links that are concatenations or `split` links.\n   */\n  readonly right?: ApolloLink;\n\n  /**\n   * @internal\n   * Can be provided by a link that has an internal cache to report it's memory details.\n   */\n  getMemoryInternals?: () => unknown;\n}\n","import type { GraphQLRequest, Operation } from \"../core/index.js\";\n\nexport function createOperation(\n  starting: any,\n  operation: GraphQLRequest\n): Operation {\n  let context = { ...starting };\n  const setContext: Operation[\"setContext\"] = (next) => {\n    if (typeof next === \"function\") {\n      context = { ...context, ...next(context) };\n    } else {\n      context = { ...context, ...next };\n    }\n  };\n  const getContext: Operation[\"getContext\"] = () => ({ ...context });\n\n  Object.defineProperty(operation, \"setContext\", {\n    enumerable: false,\n    value: setContext,\n  });\n\n  Object.defineProperty(operation, \"getContext\", {\n    enumerable: false,\n    value: getContext,\n  });\n\n  return operation as Operation;\n}\n","import type { GraphQLRequest, Operation } from \"../core/index.js\";\nimport { getOperationName } from \"../../utilities/index.js\";\n\nexport function transformOperation(operation: GraphQLRequest): GraphQLRequest {\n  const transformedOperation: GraphQLRequest = {\n    variables: operation.variables || {},\n    extensions: operation.extensions || {},\n    operationName: operation.operationName,\n    query: operation.query,\n  };\n\n  // Best guess at an operation name\n  if (!transformedOperation.operationName) {\n    transformedOperation.operationName =\n      typeof transformedOperation.query !== \"string\" ?\n        getOperationName(transformedOperation.query) || undefined\n      : \"\";\n  }\n\n  return transformedOperation as Operation;\n}\n","import { newInvariantError } from \"../../utilities/globals/index.js\";\nimport type { GraphQLRequest } from \"../core/index.js\";\n\nexport function validateOperation(operation: GraphQLRequest): GraphQLRequest {\n  const OPERATION_FIELDS = [\n    \"query\",\n    \"operationName\",\n    \"variables\",\n    \"extensions\",\n    \"context\",\n  ];\n  for (let key of Object.keys(operation)) {\n    if (OPERATION_FIELDS.indexOf(key) < 0) {\n      throw newInvariantError(`illegal argument: %s`, key);\n    }\n  }\n\n  return operation;\n}\n","import { ApolloLink } from \"./ApolloLink.js\";\n\nexport const execute = ApolloLink.execute;\n","export function devAssert(condition, message) {\n  const booleanCondition = Boolean(condition);\n\n  if (!booleanCondition) {\n    throw new Error(message);\n  }\n}\n","const MAX_ARRAY_LENGTH = 10;\nconst MAX_RECURSIVE_DEPTH = 2;\n/**\n * Used to print values in error messages.\n */\n\nexport function inspect(value) {\n  return formatValue(value, []);\n}\n\nfunction formatValue(value, seenValues) {\n  switch (typeof value) {\n    case 'string':\n      return JSON.stringify(value);\n\n    case 'function':\n      return value.name ? `[function ${value.name}]` : '[function]';\n\n    case 'object':\n      return formatObjectValue(value, seenValues);\n\n    default:\n      return String(value);\n  }\n}\n\nfunction formatObjectValue(value, previouslySeenValues) {\n  if (value === null) {\n    return 'null';\n  }\n\n  if (previouslySeenValues.includes(value)) {\n    return '[Circular]';\n  }\n\n  const seenValues = [...previouslySeenValues, value];\n\n  if (isJSONable(value)) {\n    const jsonValue = value.toJSON(); // check for infinite recursion\n\n    if (jsonValue !== value) {\n      return typeof jsonValue === 'string'\n        ? jsonValue\n        : formatValue(jsonValue, seenValues);\n    }\n  } else if (Array.isArray(value)) {\n    return formatArray(value, seenValues);\n  }\n\n  return formatObject(value, seenValues);\n}\n\nfunction isJSONable(value) {\n  return typeof value.toJSON === 'function';\n}\n\nfunction formatObject(object, seenValues) {\n  const entries = Object.entries(object);\n\n  if (entries.length === 0) {\n    return '{}';\n  }\n\n  if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n    return '[' + getObjectTag(object) + ']';\n  }\n\n  const properties = entries.map(\n    ([key, value]) => key + ': ' + formatValue(value, seenValues),\n  );\n  return '{ ' + properties.join(', ') + ' }';\n}\n\nfunction formatArray(array, seenValues) {\n  if (array.length === 0) {\n    return '[]';\n  }\n\n  if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n    return '[Array]';\n  }\n\n  const len = Math.min(MAX_ARRAY_LENGTH, array.length);\n  const remaining = array.length - len;\n  const items = [];\n\n  for (let i = 0; i < len; ++i) {\n    items.push(formatValue(array[i], seenValues));\n  }\n\n  if (remaining === 1) {\n    items.push('... 1 more item');\n  } else if (remaining > 1) {\n    items.push(`... ${remaining} more items`);\n  }\n\n  return '[' + items.join(', ') + ']';\n}\n\nfunction getObjectTag(object) {\n  const tag = Object.prototype.toString\n    .call(object)\n    .replace(/^\\[object /, '')\n    .replace(/]$/, '');\n\n  if (tag === 'Object' && typeof object.constructor === 'function') {\n    const name = object.constructor.name;\n\n    if (typeof name === 'string' && name !== '') {\n      return name;\n    }\n  }\n\n  return tag;\n}\n","/**\n * Contains a range of UTF-8 character offsets and token references that\n * identify the region of the source from which the AST derived.\n */\nexport class Location {\n  /**\n   * The character offset at which this Node begins.\n   */\n\n  /**\n   * The character offset at which this Node ends.\n   */\n\n  /**\n   * The Token at which this Node begins.\n   */\n\n  /**\n   * The Token at which this Node ends.\n   */\n\n  /**\n   * The Source document the AST represents.\n   */\n  constructor(startToken, endToken, source) {\n    this.start = startToken.start;\n    this.end = endToken.end;\n    this.startToken = startToken;\n    this.endToken = endToken;\n    this.source = source;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Location';\n  }\n\n  toJSON() {\n    return {\n      start: this.start,\n      end: this.end,\n    };\n  }\n}\n/**\n * Represents a range of characters represented by a lexical token\n * within a Source.\n */\n\nexport class Token {\n  /**\n   * The kind of Token.\n   */\n\n  /**\n   * The character offset at which this Node begins.\n   */\n\n  /**\n   * The character offset at which this Node ends.\n   */\n\n  /**\n   * The 1-indexed line number on which this Token appears.\n   */\n\n  /**\n   * The 1-indexed column number at which this Token begins.\n   */\n\n  /**\n   * For non-punctuation tokens, represents the interpreted value of the token.\n   *\n   * Note: is undefined for punctuation tokens, but typed as string for\n   * convenience in the parser.\n   */\n\n  /**\n   * Tokens exist as nodes in a double-linked-list amongst all tokens\n   * including ignored tokens. <SOF> is always the first node and <EOF>\n   * the last.\n   */\n  constructor(kind, start, end, line, column, value) {\n    this.kind = kind;\n    this.start = start;\n    this.end = end;\n    this.line = line;\n    this.column = column; // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n    this.value = value;\n    this.prev = null;\n    this.next = null;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Token';\n  }\n\n  toJSON() {\n    return {\n      kind: this.kind,\n      value: this.value,\n      line: this.line,\n      column: this.column,\n    };\n  }\n}\n/**\n * The list of all possible AST node types.\n */\n\n/**\n * @internal\n */\nexport const QueryDocumentKeys = {\n  Name: [],\n  Document: ['definitions'],\n  OperationDefinition: [\n    'name',\n    'variableDefinitions',\n    'directives',\n    'selectionSet',\n  ],\n  VariableDefinition: ['variable', 'type', 'defaultValue', 'directives'],\n  Variable: ['name'],\n  SelectionSet: ['selections'],\n  Field: ['alias', 'name', 'arguments', 'directives', 'selectionSet'],\n  Argument: ['name', 'value'],\n  FragmentSpread: ['name', 'directives'],\n  InlineFragment: ['typeCondition', 'directives', 'selectionSet'],\n  FragmentDefinition: [\n    'name', // Note: fragment variable definitions are deprecated and will removed in v17.0.0\n    'variableDefinitions',\n    'typeCondition',\n    'directives',\n    'selectionSet',\n  ],\n  IntValue: [],\n  FloatValue: [],\n  StringValue: [],\n  BooleanValue: [],\n  NullValue: [],\n  EnumValue: [],\n  ListValue: ['values'],\n  ObjectValue: ['fields'],\n  ObjectField: ['name', 'value'],\n  Directive: ['name', 'arguments'],\n  NamedType: ['name'],\n  ListType: ['type'],\n  NonNullType: ['type'],\n  SchemaDefinition: ['description', 'directives', 'operationTypes'],\n  OperationTypeDefinition: ['type'],\n  ScalarTypeDefinition: ['description', 'name', 'directives'],\n  ObjectTypeDefinition: [\n    'description',\n    'name',\n    'interfaces',\n    'directives',\n    'fields',\n  ],\n  FieldDefinition: ['description', 'name', 'arguments', 'type', 'directives'],\n  InputValueDefinition: [\n    'description',\n    'name',\n    'type',\n    'defaultValue',\n    'directives',\n  ],\n  InterfaceTypeDefinition: [\n    'description',\n    'name',\n    'interfaces',\n    'directives',\n    'fields',\n  ],\n  UnionTypeDefinition: ['description', 'name', 'directives', 'types'],\n  EnumTypeDefinition: ['description', 'name', 'directives', 'values'],\n  EnumValueDefinition: ['description', 'name', 'directives'],\n  InputObjectTypeDefinition: ['description', 'name', 'directives', 'fields'],\n  DirectiveDefinition: ['description', 'name', 'arguments', 'locations'],\n  SchemaExtension: ['directives', 'operationTypes'],\n  ScalarTypeExtension: ['name', 'directives'],\n  ObjectTypeExtension: ['name', 'interfaces', 'directives', 'fields'],\n  InterfaceTypeExtension: ['name', 'interfaces', 'directives', 'fields'],\n  UnionTypeExtension: ['name', 'directives', 'types'],\n  EnumTypeExtension: ['name', 'directives', 'values'],\n  InputObjectTypeExtension: ['name', 'directives', 'fields'],\n};\nconst kindValues = new Set(Object.keys(QueryDocumentKeys));\n/**\n * @internal\n */\n\nexport function isNode(maybeNode) {\n  const maybeKind =\n    maybeNode === null || maybeNode === void 0 ? void 0 : maybeNode.kind;\n  return typeof maybeKind === 'string' && kindValues.has(maybeKind);\n}\n/** Name */\n\nvar OperationTypeNode;\n\n(function (OperationTypeNode) {\n  OperationTypeNode['QUERY'] = 'query';\n  OperationTypeNode['MUTATION'] = 'mutation';\n  OperationTypeNode['SUBSCRIPTION'] = 'subscription';\n})(OperationTypeNode || (OperationTypeNode = {}));\n\nexport { OperationTypeNode };\n","/**\n * The set of allowed kind values for AST nodes.\n */\nvar Kind;\n\n(function (Kind) {\n  Kind['NAME'] = 'Name';\n  Kind['DOCUMENT'] = 'Document';\n  Kind['OPERATION_DEFINITION'] = 'OperationDefinition';\n  Kind['VARIABLE_DEFINITION'] = 'VariableDefinition';\n  Kind['SELECTION_SET'] = 'SelectionSet';\n  Kind['FIELD'] = 'Field';\n  Kind['ARGUMENT'] = 'Argument';\n  Kind['FRAGMENT_SPREAD'] = 'FragmentSpread';\n  Kind['INLINE_FRAGMENT'] = 'InlineFragment';\n  Kind['FRAGMENT_DEFINITION'] = 'FragmentDefinition';\n  Kind['VARIABLE'] = 'Variable';\n  Kind['INT'] = 'IntValue';\n  Kind['FLOAT'] = 'FloatValue';\n  Kind['STRING'] = 'StringValue';\n  Kind['BOOLEAN'] = 'BooleanValue';\n  Kind['NULL'] = 'NullValue';\n  Kind['ENUM'] = 'EnumValue';\n  Kind['LIST'] = 'ListValue';\n  Kind['OBJECT'] = 'ObjectValue';\n  Kind['OBJECT_FIELD'] = 'ObjectField';\n  Kind['DIRECTIVE'] = 'Directive';\n  Kind['NAMED_TYPE'] = 'NamedType';\n  Kind['LIST_TYPE'] = 'ListType';\n  Kind['NON_NULL_TYPE'] = 'NonNullType';\n  Kind['SCHEMA_DEFINITION'] = 'SchemaDefinition';\n  Kind['OPERATION_TYPE_DEFINITION'] = 'OperationTypeDefinition';\n  Kind['SCALAR_TYPE_DEFINITION'] = 'ScalarTypeDefinition';\n  Kind['OBJECT_TYPE_DEFINITION'] = 'ObjectTypeDefinition';\n  Kind['FIELD_DEFINITION'] = 'FieldDefinition';\n  Kind['INPUT_VALUE_DEFINITION'] = 'InputValueDefinition';\n  Kind['INTERFACE_TYPE_DEFINITION'] = 'InterfaceTypeDefinition';\n  Kind['UNION_TYPE_DEFINITION'] = 'UnionTypeDefinition';\n  Kind['ENUM_TYPE_DEFINITION'] = 'EnumTypeDefinition';\n  Kind['ENUM_VALUE_DEFINITION'] = 'EnumValueDefinition';\n  Kind['INPUT_OBJECT_TYPE_DEFINITION'] = 'InputObjectTypeDefinition';\n  Kind['DIRECTIVE_DEFINITION'] = 'DirectiveDefinition';\n  Kind['SCHEMA_EXTENSION'] = 'SchemaExtension';\n  Kind['SCALAR_TYPE_EXTENSION'] = 'ScalarTypeExtension';\n  Kind['OBJECT_TYPE_EXTENSION'] = 'ObjectTypeExtension';\n  Kind['INTERFACE_TYPE_EXTENSION'] = 'InterfaceTypeExtension';\n  Kind['UNION_TYPE_EXTENSION'] = 'UnionTypeExtension';\n  Kind['ENUM_TYPE_EXTENSION'] = 'EnumTypeExtension';\n  Kind['INPUT_OBJECT_TYPE_EXTENSION'] = 'InputObjectTypeExtension';\n})(Kind || (Kind = {}));\n\nexport { Kind };\n/**\n * The enum type representing the possible kind values of AST nodes.\n *\n * @deprecated Please use `Kind`. Will be remove in v17.\n */\n","import { devAssert } from '../jsutils/devAssert.mjs';\nimport { inspect } from '../jsutils/inspect.mjs';\nimport { isNode, QueryDocumentKeys } from './ast.mjs';\nimport { Kind } from './kinds.mjs';\n/**\n * A visitor is provided to visit, it contains the collection of\n * relevant functions to be called during the visitor's traversal.\n */\n\nexport const BREAK = Object.freeze({});\n/**\n * visit() will walk through an AST using a depth-first traversal, calling\n * the visitor's enter function at each node in the traversal, and calling the\n * leave function after visiting that node and all of its child nodes.\n *\n * By returning different values from the enter and leave functions, the\n * behavior of the visitor can be altered, including skipping over a sub-tree of\n * the AST (by returning false), editing the AST by returning a value or null\n * to remove the value, or to stop the whole traversal by returning BREAK.\n *\n * When using visit() to edit an AST, the original AST will not be modified, and\n * a new version of the AST with the changes applied will be returned from the\n * visit function.\n *\n * ```ts\n * const editedAST = visit(ast, {\n *   enter(node, key, parent, path, ancestors) {\n *     // @return\n *     //   undefined: no action\n *     //   false: skip visiting this node\n *     //   visitor.BREAK: stop visiting altogether\n *     //   null: delete this node\n *     //   any value: replace this node with the returned value\n *   },\n *   leave(node, key, parent, path, ancestors) {\n *     // @return\n *     //   undefined: no action\n *     //   false: no action\n *     //   visitor.BREAK: stop visiting altogether\n *     //   null: delete this node\n *     //   any value: replace this node with the returned value\n *   }\n * });\n * ```\n *\n * Alternatively to providing enter() and leave() functions, a visitor can\n * instead provide functions named the same as the kinds of AST nodes, or\n * enter/leave visitors at a named key, leading to three permutations of the\n * visitor API:\n *\n * 1) Named visitors triggered when entering a node of a specific kind.\n *\n * ```ts\n * visit(ast, {\n *   Kind(node) {\n *     // enter the \"Kind\" node\n *   }\n * })\n * ```\n *\n * 2) Named visitors that trigger upon entering and leaving a node of a specific kind.\n *\n * ```ts\n * visit(ast, {\n *   Kind: {\n *     enter(node) {\n *       // enter the \"Kind\" node\n *     }\n *     leave(node) {\n *       // leave the \"Kind\" node\n *     }\n *   }\n * })\n * ```\n *\n * 3) Generic visitors that trigger upon entering and leaving any node.\n *\n * ```ts\n * visit(ast, {\n *   enter(node) {\n *     // enter any node\n *   },\n *   leave(node) {\n *     // leave any node\n *   }\n * })\n * ```\n */\n\nexport function visit(root, visitor, visitorKeys = QueryDocumentKeys) {\n  const enterLeaveMap = new Map();\n\n  for (const kind of Object.values(Kind)) {\n    enterLeaveMap.set(kind, getEnterLeaveForKind(visitor, kind));\n  }\n  /* eslint-disable no-undef-init */\n\n  let stack = undefined;\n  let inArray = Array.isArray(root);\n  let keys = [root];\n  let index = -1;\n  let edits = [];\n  let node = root;\n  let key = undefined;\n  let parent = undefined;\n  const path = [];\n  const ancestors = [];\n  /* eslint-enable no-undef-init */\n\n  do {\n    index++;\n    const isLeaving = index === keys.length;\n    const isEdited = isLeaving && edits.length !== 0;\n\n    if (isLeaving) {\n      key = ancestors.length === 0 ? undefined : path[path.length - 1];\n      node = parent;\n      parent = ancestors.pop();\n\n      if (isEdited) {\n        if (inArray) {\n          node = node.slice();\n          let editOffset = 0;\n\n          for (const [editKey, editValue] of edits) {\n            const arrayKey = editKey - editOffset;\n\n            if (editValue === null) {\n              node.splice(arrayKey, 1);\n              editOffset++;\n            } else {\n              node[arrayKey] = editValue;\n            }\n          }\n        } else {\n          node = Object.defineProperties(\n            {},\n            Object.getOwnPropertyDescriptors(node),\n          );\n\n          for (const [editKey, editValue] of edits) {\n            node[editKey] = editValue;\n          }\n        }\n      }\n\n      index = stack.index;\n      keys = stack.keys;\n      edits = stack.edits;\n      inArray = stack.inArray;\n      stack = stack.prev;\n    } else if (parent) {\n      key = inArray ? index : keys[index];\n      node = parent[key];\n\n      if (node === null || node === undefined) {\n        continue;\n      }\n\n      path.push(key);\n    }\n\n    let result;\n\n    if (!Array.isArray(node)) {\n      var _enterLeaveMap$get, _enterLeaveMap$get2;\n\n      isNode(node) || devAssert(false, `Invalid AST Node: ${inspect(node)}.`);\n      const visitFn = isLeaving\n        ? (_enterLeaveMap$get = enterLeaveMap.get(node.kind)) === null ||\n          _enterLeaveMap$get === void 0\n          ? void 0\n          : _enterLeaveMap$get.leave\n        : (_enterLeaveMap$get2 = enterLeaveMap.get(node.kind)) === null ||\n          _enterLeaveMap$get2 === void 0\n        ? void 0\n        : _enterLeaveMap$get2.enter;\n      result =\n        visitFn === null || visitFn === void 0\n          ? void 0\n          : visitFn.call(visitor, node, key, parent, path, ancestors);\n\n      if (result === BREAK) {\n        break;\n      }\n\n      if (result === false) {\n        if (!isLeaving) {\n          path.pop();\n          continue;\n        }\n      } else if (result !== undefined) {\n        edits.push([key, result]);\n\n        if (!isLeaving) {\n          if (isNode(result)) {\n            node = result;\n          } else {\n            path.pop();\n            continue;\n          }\n        }\n      }\n    }\n\n    if (result === undefined && isEdited) {\n      edits.push([key, node]);\n    }\n\n    if (isLeaving) {\n      path.pop();\n    } else {\n      var _node$kind;\n\n      stack = {\n        inArray,\n        index,\n        keys,\n        edits,\n        prev: stack,\n      };\n      inArray = Array.isArray(node);\n      keys = inArray\n        ? node\n        : (_node$kind = visitorKeys[node.kind]) !== null &&\n          _node$kind !== void 0\n        ? _node$kind\n        : [];\n      index = -1;\n      edits = [];\n\n      if (parent) {\n        ancestors.push(parent);\n      }\n\n      parent = node;\n    }\n  } while (stack !== undefined);\n\n  if (edits.length !== 0) {\n    // New root\n    return edits[edits.length - 1][1];\n  }\n\n  return root;\n}\n/**\n * Creates a new visitor instance which delegates to many visitors to run in\n * parallel. Each visitor will be visited for each node before moving on.\n *\n * If a prior visitor edits a node, no following visitors will see that node.\n */\n\nexport function visitInParallel(visitors) {\n  const skipping = new Array(visitors.length).fill(null);\n  const mergedVisitor = Object.create(null);\n\n  for (const kind of Object.values(Kind)) {\n    let hasVisitor = false;\n    const enterList = new Array(visitors.length).fill(undefined);\n    const leaveList = new Array(visitors.length).fill(undefined);\n\n    for (let i = 0; i < visitors.length; ++i) {\n      const { enter, leave } = getEnterLeaveForKind(visitors[i], kind);\n      hasVisitor || (hasVisitor = enter != null || leave != null);\n      enterList[i] = enter;\n      leaveList[i] = leave;\n    }\n\n    if (!hasVisitor) {\n      continue;\n    }\n\n    const mergedEnterLeave = {\n      enter(...args) {\n        const node = args[0];\n\n        for (let i = 0; i < visitors.length; i++) {\n          if (skipping[i] === null) {\n            var _enterList$i;\n\n            const result =\n              (_enterList$i = enterList[i]) === null || _enterList$i === void 0\n                ? void 0\n                : _enterList$i.apply(visitors[i], args);\n\n            if (result === false) {\n              skipping[i] = node;\n            } else if (result === BREAK) {\n              skipping[i] = BREAK;\n            } else if (result !== undefined) {\n              return result;\n            }\n          }\n        }\n      },\n\n      leave(...args) {\n        const node = args[0];\n\n        for (let i = 0; i < visitors.length; i++) {\n          if (skipping[i] === null) {\n            var _leaveList$i;\n\n            const result =\n              (_leaveList$i = leaveList[i]) === null || _leaveList$i === void 0\n                ? void 0\n                : _leaveList$i.apply(visitors[i], args);\n\n            if (result === BREAK) {\n              skipping[i] = BREAK;\n            } else if (result !== undefined && result !== false) {\n              return result;\n            }\n          } else if (skipping[i] === node) {\n            skipping[i] = null;\n          }\n        }\n      },\n    };\n    mergedVisitor[kind] = mergedEnterLeave;\n  }\n\n  return mergedVisitor;\n}\n/**\n * Given a visitor instance and a node kind, return EnterLeaveVisitor for that kind.\n */\n\nexport function getEnterLeaveForKind(visitor, kind) {\n  const kindVisitor = visitor[kind];\n\n  if (typeof kindVisitor === 'object') {\n    // { Kind: { enter() {}, leave() {} } }\n    return kindVisitor;\n  } else if (typeof kindVisitor === 'function') {\n    // { Kind() {} }\n    return {\n      enter: kindVisitor,\n      leave: undefined,\n    };\n  } // { enter() {}, leave() {} }\n\n  return {\n    enter: visitor.enter,\n    leave: visitor.leave,\n  };\n}\n/**\n * Given a visitor instance, if it is leaving or not, and a node kind, return\n * the function the visitor runtime should call.\n *\n * @deprecated Please use `getEnterLeaveForKind` instead. Will be removed in v17\n */\n\n/* c8 ignore next 8 */\n\nexport function getVisitFn(visitor, kind, isLeaving) {\n  const { enter, leave } = getEnterLeaveForKind(visitor, kind);\n  return isLeaving ? leave : enter;\n}\n","import { invariant } from \"../globals/index.js\";\n\n// Provides the methods that allow QueryManager to handle the `skip` and\n// `include` directives within GraphQL.\nimport type {\n  SelectionNode,\n  VariableNode,\n  BooleanValueNode,\n  DirectiveNode,\n  DocumentNode,\n  ArgumentNode,\n  ValueNode,\n  ASTNode,\n} from \"graphql\";\nimport { visit, BREAK } from \"graphql\";\n\nexport type DirectiveInfo = {\n  [fieldName: string]: { [argName: string]: any };\n};\n\nexport function shouldInclude(\n  { directives }: SelectionNode,\n  variables?: Record<string, any>\n): boolean {\n  if (!directives || !directives.length) {\n    return true;\n  }\n  return getInclusionDirectives(directives).every(\n    ({ directive, ifArgument }) => {\n      let evaledValue: boolean = false;\n      if (ifArgument.value.kind === \"Variable\") {\n        evaledValue =\n          variables && variables[(ifArgument.value as VariableNode).name.value];\n        invariant(\n          evaledValue !== void 0,\n          `Invalid variable referenced in @%s directive.`,\n          directive.name.value\n        );\n      } else {\n        evaledValue = (ifArgument.value as BooleanValueNode).value;\n      }\n      return directive.name.value === \"skip\" ? !evaledValue : evaledValue;\n    }\n  );\n}\n\nexport function getDirectiveNames(root: ASTNode) {\n  const names: string[] = [];\n\n  visit(root, {\n    Directive(node: DirectiveNode) {\n      names.push(node.name.value);\n    },\n  });\n\n  return names;\n}\n\nexport const hasAnyDirectives = (names: string[], root: ASTNode) =>\n  hasDirectives(names, root, false);\n\nexport const hasAllDirectives = (names: string[], root: ASTNode) =>\n  hasDirectives(names, root, true);\n\nexport function hasDirectives(names: string[], root: ASTNode, all?: boolean) {\n  const nameSet = new Set(names);\n  const uniqueCount = nameSet.size;\n\n  visit(root, {\n    Directive(node) {\n      if (nameSet.delete(node.name.value) && (!all || !nameSet.size)) {\n        return BREAK;\n      }\n    },\n  });\n\n  // If we found all the names, nameSet will be empty. If we only care about\n  // finding some of them, the < condition is sufficient.\n  return all ? !nameSet.size : nameSet.size < uniqueCount;\n}\n\nexport function hasClientExports(document: DocumentNode) {\n  return document && hasDirectives([\"client\", \"export\"], document, true);\n}\n\nexport type InclusionDirectives = Array<{\n  directive: DirectiveNode;\n  ifArgument: ArgumentNode;\n}>;\n\nfunction isInclusionDirective({ name: { value } }: DirectiveNode): boolean {\n  return value === \"skip\" || value === \"include\";\n}\n\nexport function getInclusionDirectives(\n  directives: ReadonlyArray<DirectiveNode>\n): InclusionDirectives {\n  const result: InclusionDirectives = [];\n\n  if (directives && directives.length) {\n    directives.forEach((directive) => {\n      if (!isInclusionDirective(directive)) return;\n\n      const directiveArguments = directive.arguments;\n      const directiveName = directive.name.value;\n\n      invariant(\n        directiveArguments && directiveArguments.length === 1,\n        `Incorrect number of arguments for the @%s directive.`,\n        directiveName\n      );\n\n      const ifArgument = directiveArguments![0];\n      invariant(\n        ifArgument.name && ifArgument.name.value === \"if\",\n        `Invalid argument for the @%s directive.`,\n        directiveName\n      );\n\n      const ifValue: ValueNode = ifArgument.value;\n\n      // means it has to be a variable value if this is a valid @skip or @include directive\n      invariant(\n        ifValue &&\n          (ifValue.kind === \"Variable\" || ifValue.kind === \"BooleanValue\"),\n        `Argument for the @%s directive must be a variable or a boolean value.`,\n        directiveName\n      );\n\n      result.push({ directive, ifArgument });\n    });\n  }\n\n  return result;\n}\n","import { newInvariantError } from \"../../utilities/globals/index.js\";\nimport type { InvariantError } from \"../../utilities/globals/index.js\";\n\nexport type ClientParseError = InvariantError & {\n  parseError: Error;\n};\n\nexport const serializeFetchParameter = (p: any, label: string) => {\n  let serialized;\n  try {\n    serialized = JSON.stringify(p);\n  } catch (e: any) {\n    const parseError = newInvariantError(\n      `Network request failed. %s is not serializable: %s`,\n      label,\n      e.message\n    ) as ClientParseError;\n    parseError.parseError = e;\n    throw parseError;\n  }\n  return serialized;\n};\n","/**\n * Original source:\n * https://github.com/kmalakoff/response-iterator/blob/master/src/iterators/nodeStream.ts\n */\n\nimport type { Readable as NodeReadableStream } from \"stream\";\nimport { canUseAsyncIteratorSymbol } from \"../../../utilities/index.js\";\n\ninterface NodeStreamIterator<T> {\n  next(): Promise<IteratorResult<T, boolean | undefined>>;\n  [Symbol.asyncIterator]?(): AsyncIterator<T>;\n}\n\nexport default function nodeStreamIterator<T>(\n  stream: NodeReadableStream\n): AsyncIterableIterator<T> {\n  let cleanup: (() => void) | null = null;\n  let error: Error | null = null;\n  let done = false;\n  const data: unknown[] = [];\n\n  const waiting: [\n    (\n      value:\n        | IteratorResult<T, boolean | undefined>\n        | PromiseLike<IteratorResult<T, boolean | undefined>>\n    ) => void,\n    (reason?: any) => void,\n  ][] = [];\n\n  function onData(chunk: any) {\n    if (error) return;\n    if (waiting.length) {\n      const shiftedArr = waiting.shift();\n      if (Array.isArray(shiftedArr) && shiftedArr[0]) {\n        return shiftedArr[0]({ value: chunk, done: false });\n      }\n    }\n    data.push(chunk);\n  }\n  function onError(err: Error) {\n    error = err;\n    const all = waiting.slice();\n    all.forEach(function (pair) {\n      pair[1](err);\n    });\n    !cleanup || cleanup();\n  }\n  function onEnd() {\n    done = true;\n    const all = waiting.slice();\n    all.forEach(function (pair) {\n      pair[0]({ value: undefined, done: true });\n    });\n    !cleanup || cleanup();\n  }\n\n  cleanup = function () {\n    cleanup = null;\n    stream.removeListener(\"data\", onData);\n    stream.removeListener(\"error\", onError);\n    stream.removeListener(\"end\", onEnd);\n    stream.removeListener(\"finish\", onEnd);\n    stream.removeListener(\"close\", onEnd);\n  };\n  stream.on(\"data\", onData);\n  stream.on(\"error\", onError);\n  stream.on(\"end\", onEnd);\n  stream.on(\"finish\", onEnd);\n  stream.on(\"close\", onEnd);\n\n  function getNext(): Promise<IteratorResult<T, boolean | undefined>> {\n    return new Promise(function (resolve, reject) {\n      if (error) return reject(error);\n      if (data.length)\n        return resolve({ value: data.shift() as T, done: false });\n      if (done) return resolve({ value: undefined, done: true });\n      waiting.push([resolve, reject]);\n    });\n  }\n\n  const iterator: NodeStreamIterator<T> = {\n    next(): Promise<IteratorResult<T, boolean | undefined>> {\n      return getNext();\n    },\n  };\n\n  if (canUseAsyncIteratorSymbol) {\n    iterator[Symbol.asyncIterator] = function (): AsyncIterator<T> {\n      return this;\n    };\n  }\n\n  return iterator as AsyncIterableIterator<T>;\n}\n","/**\n * Original source:\n * https://github.com/kmalakoff/response-iterator/blob/master/src/iterators/reader.ts\n */\n\nimport { canUseAsyncIteratorSymbol } from \"../../../utilities/index.js\";\n\ninterface ReaderIterator<T> {\n  next(): Promise<IteratorResult<T, T | undefined>>;\n  [Symbol.asyncIterator]?(): AsyncIterator<T>;\n}\n\nexport default function readerIterator<T>(\n  reader: ReadableStreamDefaultReader<T>\n): AsyncIterableIterator<T> {\n  const iterator: ReaderIterator<T> = {\n    next() {\n      return reader.read() as Promise<\n        | ReadableStreamReadValueResult<T>\n        // DoneResult has `value` optional, which doesn't comply with an\n        // `IteratorResult`, so we assert it to `T | undefined` instead\n        | Required<ReadableStreamReadDoneResult<T | undefined>>\n      >;\n    },\n  };\n\n  if (canUseAsyncIteratorSymbol) {\n    iterator[Symbol.asyncIterator] = function (): AsyncIterator<\n      T,\n      T | undefined\n    > {\n      return this;\n    };\n  }\n\n  return iterator as AsyncIterableIterator<T>;\n}\n","/**\n * Original source:\n * https://github.com/kmalakoff/response-iterator/blob/master/src/index.ts\n */\n\nimport type { Response as NodeResponse } from \"node-fetch\";\nimport type { Readable as NodeReadableStream } from \"stream\";\nimport { canUseAsyncIteratorSymbol } from \"../../utilities/index.js\";\n\nimport asyncIterator from \"./iterators/async.js\";\nimport nodeStreamIterator from \"./iterators/nodeStream.js\";\nimport promiseIterator from \"./iterators/promise.js\";\nimport readerIterator from \"./iterators/reader.js\";\n\nfunction isNodeResponse(value: any): value is NodeResponse {\n  return !!(value as NodeResponse).body;\n}\n\nfunction isReadableStream(value: any): value is ReadableStream<any> {\n  return !!(value as ReadableStream<any>).getReader;\n}\n\nfunction isAsyncIterableIterator(\n  value: any\n): value is AsyncIterableIterator<any> {\n  return !!(\n    canUseAsyncIteratorSymbol &&\n    (value as AsyncIterableIterator<any>)[Symbol.asyncIterator]\n  );\n}\n\nfunction isStreamableBlob(value: any): value is Blob {\n  return !!(value as Blob).stream;\n}\n\nfunction isBlob(value: any): value is Blob {\n  return !!(value as Blob).arrayBuffer;\n}\n\nfunction isNodeReadableStream(value: any): value is NodeReadableStream {\n  return !!(value as NodeReadableStream).pipe;\n}\n\nexport function responseIterator<T>(\n  response: Response | NodeResponse\n): AsyncIterableIterator<T> {\n  let body: unknown = response;\n\n  if (isNodeResponse(response)) body = response.body;\n\n  if (isAsyncIterableIterator(body)) return asyncIterator<T>(body);\n\n  if (isReadableStream(body)) return readerIterator<T>(body.getReader());\n\n  // this errors without casting to ReadableStream<T>\n  // because Blob.stream() returns a NodeJS ReadableStream\n  if (isStreamableBlob(body)) {\n    return readerIterator<T>(\n      (body.stream() as unknown as ReadableStream<T>).getReader()\n    );\n  }\n\n  if (isBlob(body)) return promiseIterator<T>(body.arrayBuffer());\n\n  if (isNodeReadableStream(body)) return nodeStreamIterator<T>(body);\n\n  throw new Error(\n    \"Unknown body type for responseIterator. Please pass a streamable response.\"\n  );\n}\n","/**\n * Original source:\n * https://github.com/kmalakoff/response-iterator/blob/master/src/iterators/async.ts\n */\n\nexport default function asyncIterator<T>(\n  source: AsyncIterableIterator<T>\n): AsyncIterableIterator<T> {\n  const iterator = source[Symbol.asyncIterator]();\n  return {\n    next(): Promise<IteratorResult<T, boolean>> {\n      return iterator.next();\n    },\n    [Symbol.asyncIterator](): AsyncIterableIterator<T> {\n      return this;\n    },\n  };\n}\n","/**\n * Original source:\n * https://github.com/kmalakoff/response-iterator/blob/master/src/iterators/promise.ts\n */\n\nimport { canUseAsyncIteratorSymbol } from \"../../../utilities/index.js\";\n\ninterface PromiseIterator<T> {\n  next(): Promise<IteratorResult<T, ArrayBuffer | undefined>>;\n  [Symbol.asyncIterator]?(): AsyncIterator<T>;\n}\n\nexport default function promiseIterator<T = ArrayBuffer>(\n  promise: Promise<ArrayBuffer>\n): AsyncIterableIterator<T> {\n  let resolved = false;\n\n  const iterator: PromiseIterator<T> = {\n    next(): Promise<IteratorResult<T, ArrayBuffer | undefined>> {\n      if (resolved)\n        return Promise.resolve({\n          value: undefined,\n          done: true,\n        });\n      resolved = true;\n      return new Promise(function (resolve, reject) {\n        promise\n          .then(function (value) {\n            resolve({ value: value as unknown as T, done: false });\n          })\n          .catch(reject);\n      });\n    },\n  };\n\n  if (canUseAsyncIteratorSymbol) {\n    iterator[Symbol.asyncIterator] = function (): AsyncIterator<T> {\n      return this;\n    };\n  }\n\n  return iterator as AsyncIterableIterator<T>;\n}\n","export type ServerError = Error & {\n  response: Response;\n  result: Record<string, any> | string;\n  statusCode: number;\n};\n\nexport const throwServerError = (\n  response: Response,\n  result: any,\n  message: string\n) => {\n  const error = new Error(message) as ServerError;\n  error.name = \"ServerError\";\n  error.response = response;\n  error.statusCode = response.status;\n  error.result = result;\n  throw error;\n};\n","import \"../utilities/globals/index.js\";\n\nimport type { GraphQLError, GraphQLErrorExtensions } from \"graphql\";\n\nimport { isNonNullObject } from \"../utilities/index.js\";\nimport type { ServerParseError } from \"../link/http/index.js\";\nimport type { ServerError } from \"../link/utils/index.js\";\nimport type { FetchResult } from \"../link/core/index.js\";\n\n// This Symbol allows us to pass transport-specific errors from the link chain\n// into QueryManager/client internals without risking a naming collision within\n// extensions (which implementers can use as they see fit).\nexport const PROTOCOL_ERRORS_SYMBOL: unique symbol = Symbol();\n\ntype FetchResultWithSymbolExtensions<T> = FetchResult<T> & {\n  extensions: Record<string | symbol, any>;\n};\n\nexport interface ApolloErrorOptions {\n  graphQLErrors?: ReadonlyArray<GraphQLError>;\n  protocolErrors?: ReadonlyArray<{\n    message: string;\n    extensions?: GraphQLErrorExtensions[];\n  }>;\n  clientErrors?: ReadonlyArray<Error>;\n  networkError?: Error | ServerParseError | ServerError | null;\n  errorMessage?: string;\n  extraInfo?: any;\n}\n\nexport function graphQLResultHasProtocolErrors<T>(\n  result: FetchResult<T>\n): result is FetchResultWithSymbolExtensions<T> {\n  if (result.extensions) {\n    return Array.isArray(\n      (result as FetchResultWithSymbolExtensions<T>).extensions[\n        PROTOCOL_ERRORS_SYMBOL\n      ]\n    );\n  }\n  return false;\n}\n\nexport function isApolloError(err: Error): err is ApolloError {\n  return err.hasOwnProperty(\"graphQLErrors\");\n}\n\n// Sets the error message on this error according to the\n// the GraphQL and network errors that are present.\n// If the error message has already been set through the\n// constructor or otherwise, this function is a nop.\nconst generateErrorMessage = (err: ApolloError) => {\n  const errors = [\n    ...err.graphQLErrors,\n    ...err.clientErrors,\n    ...err.protocolErrors,\n  ];\n  if (err.networkError) errors.push(err.networkError);\n  return (\n    errors\n      // The rest of the code sometimes unsafely types non-Error objects as GraphQLErrors\n      .map(\n        (err) =>\n          (isNonNullObject(err) && err.message) || \"Error message not found.\"\n      )\n      .join(\"\\n\")\n  );\n};\n\nexport type GraphQLErrors = ReadonlyArray<GraphQLError>;\n\nexport type NetworkError = Error | ServerParseError | ServerError | null;\n\nexport class ApolloError extends Error {\n  public name: string;\n  public message: string;\n  public graphQLErrors: GraphQLErrors;\n  public protocolErrors: ReadonlyArray<{\n    message: string;\n    extensions?: GraphQLErrorExtensions[];\n  }>;\n  public clientErrors: ReadonlyArray<Error>;\n  public networkError: Error | ServerParseError | ServerError | null;\n\n  // An object that can be used to provide some additional information\n  // about an error, e.g. specifying the type of error this is. Used\n  // internally within Apollo Client.\n  public extraInfo: any;\n\n  // Constructs an instance of ApolloError given a GraphQLError\n  // or a network error. Note that one of these has to be a valid\n  // value or the constructed error will be meaningless.\n  constructor({\n    graphQLErrors,\n    protocolErrors,\n    clientErrors,\n    networkError,\n    errorMessage,\n    extraInfo,\n  }: ApolloErrorOptions) {\n    super(errorMessage);\n    this.name = \"ApolloError\";\n    this.graphQLErrors = graphQLErrors || [];\n    this.protocolErrors = protocolErrors || [];\n    this.clientErrors = clientErrors || [];\n    this.networkError = networkError || null;\n    this.message = errorMessage || generateErrorMessage(this);\n    this.extraInfo = extraInfo;\n\n    // We're not using `Object.setPrototypeOf` here as it isn't fully\n    // supported on Android (see issue #3236).\n    (this as any).__proto__ = ApolloError.prototype;\n  }\n}\n","// A version of Array.isArray that works better with readonly arrays.\nexport const isArray: (a: any) => a is any[] | readonly any[] = Array.isArray;\n\nexport function isNonEmptyArray<T>(value?: ArrayLike<T>): value is Array<T> {\n  return Array.isArray(value) && value.length > 0;\n}\n","import { isNonNullObject } from \"./objects.js\";\n\nconst { hasOwnProperty } = Object.prototype;\n\n// These mergeDeep and mergeDeepArray utilities merge any number of objects\n// together, sharing as much memory as possible with the source objects, while\n// remaining careful to avoid modifying any source objects.\n\n// Logically, the return type of mergeDeep should be the intersection of\n// all the argument types. The binary call signature is by far the most\n// common, but we support 0- through 5-ary as well. After that, the\n// resulting type is just the inferred array element type. Note to nerds:\n// there is a more clever way of doing this that converts the tuple type\n// first to a union type (easy enough: T[number]) and then converts the\n// union to an intersection type using distributive conditional type\n// inference, but that approach has several fatal flaws (boolean becomes\n// true & false, and the inferred type ends up as unknown in many cases),\n// in addition to being nearly impossible to explain/understand.\nexport type TupleToIntersection<T extends any[]> =\n  T extends [infer A] ? A\n  : T extends [infer A, infer B] ? A & B\n  : T extends [infer A, infer B, infer C] ? A & B & C\n  : T extends [infer A, infer B, infer C, infer D] ? A & B & C & D\n  : T extends [infer A, infer B, infer C, infer D, infer E] ? A & B & C & D & E\n  : T extends (infer U)[] ? U\n  : any;\n\nexport function mergeDeep<T extends any[]>(\n  ...sources: T\n): TupleToIntersection<T> {\n  return mergeDeepArray(sources);\n}\n\n// In almost any situation where you could succeed in getting the\n// TypeScript compiler to infer a tuple type for the sources array, you\n// could just use mergeDeep instead of mergeDeepArray, so instead of\n// trying to convert T[] to an intersection type we just infer the array\n// element type, which works perfectly when the sources array has a\n// consistent element type.\nexport function mergeDeepArray<T>(sources: T[]): T {\n  let target = sources[0] || ({} as T);\n  const count = sources.length;\n  if (count > 1) {\n    const merger = new DeepMerger();\n    for (let i = 1; i < count; ++i) {\n      target = merger.merge(target, sources[i]);\n    }\n  }\n  return target;\n}\n\nexport type ReconcilerFunction<TContextArgs extends any[]> = (\n  this: DeepMerger<TContextArgs>,\n  target: Record<string | number, any>,\n  source: Record<string | number, any>,\n  property: string | number,\n  ...context: TContextArgs\n) => any;\n\nconst defaultReconciler: ReconcilerFunction<any[]> = function (\n  target,\n  source,\n  property\n) {\n  return this.merge(target[property], source[property]);\n};\n\nexport class DeepMerger<TContextArgs extends any[]> {\n  constructor(\n    private reconciler: ReconcilerFunction<TContextArgs> = defaultReconciler as any as ReconcilerFunction<TContextArgs>\n  ) {}\n\n  public merge(target: any, source: any, ...context: TContextArgs): any {\n    if (isNonNullObject(source) && isNonNullObject(target)) {\n      Object.keys(source).forEach((sourceKey) => {\n        if (hasOwnProperty.call(target, sourceKey)) {\n          const targetValue = target[sourceKey];\n          if (source[sourceKey] !== targetValue) {\n            const result = this.reconciler(\n              target,\n              source,\n              sourceKey,\n              ...context\n            );\n            // A well-implemented reconciler may return targetValue to indicate\n            // the merge changed nothing about the structure of the target.\n            if (result !== targetValue) {\n              target = this.shallowCopyForMerge(target);\n              target[sourceKey] = result;\n            }\n          }\n        } else {\n          // If there is no collision, the target can safely share memory with\n          // the source, and the recursion can terminate here.\n          target = this.shallowCopyForMerge(target);\n          target[sourceKey] = source[sourceKey];\n        }\n      });\n\n      return target;\n    }\n\n    // If source (or target) is not an object, let source replace target.\n    return source;\n  }\n\n  public isObject = isNonNullObject;\n\n  private pastCopies = new Set<any>();\n\n  public shallowCopyForMerge<T>(value: T): T {\n    if (isNonNullObject(value)) {\n      if (!this.pastCopies.has(value)) {\n        if (Array.isArray(value)) {\n          value = (value as any).slice(0);\n        } else {\n          value = {\n            __proto__: Object.getPrototypeOf(value),\n            ...value,\n          };\n        }\n        this.pastCopies.add(value);\n      }\n    }\n    return value;\n  }\n}\n","import type {\n  ExecutionPatchIncrementalResult,\n  ExecutionPatchInitialResult,\n  ExecutionPatchResult,\n  ApolloPayloadResult,\n  FetchResult,\n} from \"../../link/core/index.js\";\nimport { isNonNullObject } from \"./objects.js\";\nimport { isNonEmptyArray } from \"./arrays.js\";\nimport { DeepMerger } from \"./mergeDeep.js\";\n\nexport function isExecutionPatchIncrementalResult<T>(\n  value: FetchResult<T>\n): value is ExecutionPatchIncrementalResult {\n  return \"incremental\" in value;\n}\n\nexport function isExecutionPatchInitialResult<T>(\n  value: FetchResult<T>\n): value is ExecutionPatchInitialResult<T> {\n  return \"hasNext\" in value && \"data\" in value;\n}\n\nexport function isExecutionPatchResult<T>(\n  value: FetchResult<T>\n): value is ExecutionPatchResult<T> {\n  return (\n    isExecutionPatchIncrementalResult(value) ||\n    isExecutionPatchInitialResult(value)\n  );\n}\n\n// This function detects an Apollo payload result before it is transformed\n// into a FetchResult via HttpLink; it cannot detect an ApolloPayloadResult\n// once it leaves the link chain.\nexport function isApolloPayloadResult(\n  value: unknown\n): value is ApolloPayloadResult {\n  return isNonNullObject(value) && \"payload\" in value;\n}\n\nexport function mergeIncrementalData<TData extends object>(\n  prevResult: TData,\n  result: ExecutionPatchResult<TData>\n) {\n  let mergedData = prevResult;\n  const merger = new DeepMerger();\n  if (\n    isExecutionPatchIncrementalResult(result) &&\n    isNonEmptyArray(result.incremental)\n  ) {\n    result.incremental.forEach(({ data, path }) => {\n      for (let i = path.length - 1; i >= 0; --i) {\n        const key = path[i];\n        const isNumericKey = !isNaN(+key);\n        const parent: Record<string | number, any> = isNumericKey ? [] : {};\n        parent[key] = data;\n        data = parent as typeof data;\n      }\n      mergedData = merger.merge(mergedData, data);\n    });\n  }\n  return mergedData as TData;\n}\n","import { responseIterator } from \"./responseIterator.js\";\nimport type { Operation } from \"../core/index.js\";\nimport { throwServerError } from \"../utils/index.js\";\nimport { PROTOCOL_ERRORS_SYMBOL } from \"../../errors/index.js\";\nimport { isApolloPayloadResult } from \"../../utilities/common/incrementalResult.js\";\nimport type { SubscriptionObserver } from \"zen-observable-ts\";\n\nconst { hasOwnProperty } = Object.prototype;\n\nexport type ServerParseError = Error & {\n  response: Response;\n  statusCode: number;\n  bodyText: string;\n};\n\nexport async function readMultipartBody<\n  T extends object = Record<string, unknown>,\n>(response: Response, nextValue: (value: T) => void) {\n  if (TextDecoder === undefined) {\n    throw new Error(\n      \"TextDecoder must be defined in the environment: please import a polyfill.\"\n    );\n  }\n  const decoder = new TextDecoder(\"utf-8\");\n  const contentType = response.headers?.get(\"content-type\");\n  const delimiter = \"boundary=\";\n\n  // parse boundary value and ignore any subsequent name/value pairs after ;\n  // https://www.rfc-editor.org/rfc/rfc9110.html#name-parameters\n  // e.g. multipart/mixed;boundary=\"graphql\";deferSpec=20220824\n  // if no boundary is specified, default to -\n  const boundaryVal =\n    contentType?.includes(delimiter) ?\n      contentType\n        ?.substring(contentType?.indexOf(delimiter) + delimiter.length)\n        .replace(/['\"]/g, \"\")\n        .replace(/\\;(.*)/gm, \"\")\n        .trim()\n    : \"-\";\n\n  const boundary = `\\r\\n--${boundaryVal}`;\n  let buffer = \"\";\n  const iterator = responseIterator(response);\n  let running = true;\n\n  while (running) {\n    const { value, done } = await iterator.next();\n    const chunk = typeof value === \"string\" ? value : decoder.decode(value);\n    const searchFrom = buffer.length - boundary.length + 1;\n    running = !done;\n    buffer += chunk;\n    let bi = buffer.indexOf(boundary, searchFrom);\n\n    while (bi > -1) {\n      let message: string;\n      [message, buffer] = [\n        buffer.slice(0, bi),\n        buffer.slice(bi + boundary.length),\n      ];\n      const i = message.indexOf(\"\\r\\n\\r\\n\");\n      const headers = parseHeaders(message.slice(0, i));\n      const contentType = headers[\"content-type\"];\n      if (\n        contentType &&\n        contentType.toLowerCase().indexOf(\"application/json\") === -1\n      ) {\n        throw new Error(\n          \"Unsupported patch content type: application/json is required.\"\n        );\n      }\n      // nb: Technically you'd want to slice off the beginning \"\\r\\n\" but since\n      // this is going to be `JSON.parse`d there is no need.\n      const body = message.slice(i);\n\n      if (body) {\n        const result = parseJsonBody<T>(response, body);\n        if (\n          Object.keys(result).length > 1 ||\n          \"data\" in result ||\n          \"incremental\" in result ||\n          \"errors\" in result ||\n          \"payload\" in result\n        ) {\n          if (isApolloPayloadResult(result)) {\n            let next = {};\n            if (\"payload\" in result) {\n              if (Object.keys(result).length === 1 && result.payload === null) {\n                return;\n              }\n              next = { ...result.payload };\n            }\n            if (\"errors\" in result) {\n              next = {\n                ...next,\n                extensions: {\n                  ...(\"extensions\" in next ? next.extensions : (null as any)),\n                  [PROTOCOL_ERRORS_SYMBOL]: result.errors,\n                },\n              };\n            }\n            nextValue(next as T);\n          } else {\n            // for the last chunk with only `hasNext: false`\n            // we don't need to call observer.next as there is no data/errors\n            nextValue(result);\n          }\n        } else if (\n          // If the chunk contains only a \"hasNext: false\", we can call\n          // observer.complete() immediately.\n          Object.keys(result).length === 1 &&\n          \"hasNext\" in result &&\n          !result.hasNext\n        ) {\n          return;\n        }\n      }\n      bi = buffer.indexOf(boundary);\n    }\n  }\n}\n\nexport function parseHeaders(headerText: string): Record<string, string> {\n  const headersInit: Record<string, string> = {};\n  headerText.split(\"\\n\").forEach((line) => {\n    const i = line.indexOf(\":\");\n    if (i > -1) {\n      // normalize headers to lowercase\n      const name = line.slice(0, i).trim().toLowerCase();\n      const value = line.slice(i + 1).trim();\n      headersInit[name] = value;\n    }\n  });\n  return headersInit;\n}\n\nexport function parseJsonBody<T>(response: Response, bodyText: string): T {\n  if (response.status >= 300) {\n    // Network error\n    const getResult = (): Record<string, unknown> | string => {\n      try {\n        return JSON.parse(bodyText);\n      } catch (err) {\n        return bodyText;\n      }\n    };\n    throwServerError(\n      response,\n      getResult(),\n      `Response not successful: Received status code ${response.status}`\n    );\n  }\n\n  try {\n    return JSON.parse(bodyText) as T;\n  } catch (err) {\n    const parseError = err as ServerParseError;\n    parseError.name = \"ServerParseError\";\n    parseError.response = response;\n    parseError.statusCode = response.status;\n    parseError.bodyText = bodyText;\n    throw parseError;\n  }\n}\n\nexport function handleError(err: any, observer: SubscriptionObserver<any>) {\n  // if it is a network error, BUT there is graphql result info fire\n  // the next observer before calling error this gives apollo-client\n  // (and react-apollo) the `graphqlErrors` and `networkErrors` to\n  // pass to UI this should only happen if we *also* have data as\n  // part of the response key per the spec\n  if (err.result && err.result.errors && err.result.data) {\n    // if we don't call next, the UI can only show networkError\n    // because AC didn't get any graphqlErrors this is graphql\n    // execution result info (i.e errors and possibly data) this is\n    // because there is no formal spec how errors should translate to\n    // http status codes. So an auth error (401) could have both data\n    // from a public field, errors from a private field, and a status\n    // of 401\n    // {\n    //  user { // this will have errors\n    //    firstName\n    //  }\n    //  products { // this is public so will have data\n    //    cost\n    //  }\n    // }\n    //\n    // the result of above *could* look like this:\n    // {\n    //   data: { products: [{ cost: \"$10\" }] },\n    //   errors: [{\n    //      message: 'your session has timed out',\n    //      path: []\n    //   }]\n    // }\n    // status code of above would be a 401\n    // in the UI you want to show data where you can, errors as data where you can\n    // and use correct http status codes\n    observer.next(err.result);\n  }\n\n  observer.error(err);\n}\n\nexport function parseAndCheckHttpResponse(operations: Operation | Operation[]) {\n  return (response: Response) =>\n    response\n      .text()\n      .then((bodyText) => parseJsonBody(response, bodyText))\n      .then((result: any) => {\n        if (\n          !Array.isArray(result) &&\n          !hasOwnProperty.call(result, \"data\") &&\n          !hasOwnProperty.call(result, \"errors\")\n        ) {\n          // Data error\n          throwServerError(\n            response,\n            result,\n            `Server response was missing for query '${\n              Array.isArray(operations) ?\n                operations.map((op) => op.operationName)\n              : operations.operationName\n            }'.`\n          );\n        }\n        return result;\n      });\n}\n","/**\n * ```\n * WhiteSpace ::\n *   - \"Horizontal Tab (U+0009)\"\n *   - \"Space (U+0020)\"\n * ```\n * @internal\n */\nexport function isWhiteSpace(code) {\n  return code === 0x0009 || code === 0x0020;\n}\n/**\n * ```\n * Digit :: one of\n *   - `0` `1` `2` `3` `4` `5` `6` `7` `8` `9`\n * ```\n * @internal\n */\n\nexport function isDigit(code) {\n  return code >= 0x0030 && code <= 0x0039;\n}\n/**\n * ```\n * Letter :: one of\n *   - `A` `B` `C` `D` `E` `F` `G` `H` `I` `J` `K` `L` `M`\n *   - `N` `O` `P` `Q` `R` `S` `T` `U` `V` `W` `X` `Y` `Z`\n *   - `a` `b` `c` `d` `e` `f` `g` `h` `i` `j` `k` `l` `m`\n *   - `n` `o` `p` `q` `r` `s` `t` `u` `v` `w` `x` `y` `z`\n * ```\n * @internal\n */\n\nexport function isLetter(code) {\n  return (\n    (code >= 0x0061 && code <= 0x007a) || // A-Z\n    (code >= 0x0041 && code <= 0x005a) // a-z\n  );\n}\n/**\n * ```\n * NameStart ::\n *   - Letter\n *   - `_`\n * ```\n * @internal\n */\n\nexport function isNameStart(code) {\n  return isLetter(code) || code === 0x005f;\n}\n/**\n * ```\n * NameContinue ::\n *   - Letter\n *   - Digit\n *   - `_`\n * ```\n * @internal\n */\n\nexport function isNameContinue(code) {\n  return isLetter(code) || isDigit(code) || code === 0x005f;\n}\n","import { isWhiteSpace } from './characterClasses.mjs';\n/**\n * Produces the value of a block string from its parsed raw value, similar to\n * CoffeeScript's block string, Python's docstring trim or Ruby's strip_heredoc.\n *\n * This implements the GraphQL spec's BlockStringValue() static algorithm.\n *\n * @internal\n */\n\nexport function dedentBlockStringLines(lines) {\n  var _firstNonEmptyLine2;\n\n  let commonIndent = Number.MAX_SAFE_INTEGER;\n  let firstNonEmptyLine = null;\n  let lastNonEmptyLine = -1;\n\n  for (let i = 0; i < lines.length; ++i) {\n    var _firstNonEmptyLine;\n\n    const line = lines[i];\n    const indent = leadingWhitespace(line);\n\n    if (indent === line.length) {\n      continue; // skip empty lines\n    }\n\n    firstNonEmptyLine =\n      (_firstNonEmptyLine = firstNonEmptyLine) !== null &&\n      _firstNonEmptyLine !== void 0\n        ? _firstNonEmptyLine\n        : i;\n    lastNonEmptyLine = i;\n\n    if (i !== 0 && indent < commonIndent) {\n      commonIndent = indent;\n    }\n  }\n\n  return lines // Remove common indentation from all lines but first.\n    .map((line, i) => (i === 0 ? line : line.slice(commonIndent))) // Remove leading and trailing blank lines.\n    .slice(\n      (_firstNonEmptyLine2 = firstNonEmptyLine) !== null &&\n        _firstNonEmptyLine2 !== void 0\n        ? _firstNonEmptyLine2\n        : 0,\n      lastNonEmptyLine + 1,\n    );\n}\n\nfunction leadingWhitespace(str) {\n  let i = 0;\n\n  while (i < str.length && isWhiteSpace(str.charCodeAt(i))) {\n    ++i;\n  }\n\n  return i;\n}\n/**\n * @internal\n */\n\nexport function isPrintableAsBlockString(value) {\n  if (value === '') {\n    return true; // empty string is printable\n  }\n\n  let isEmptyLine = true;\n  let hasIndent = false;\n  let hasCommonIndent = true;\n  let seenNonEmptyLine = false;\n\n  for (let i = 0; i < value.length; ++i) {\n    switch (value.codePointAt(i)) {\n      case 0x0000:\n      case 0x0001:\n      case 0x0002:\n      case 0x0003:\n      case 0x0004:\n      case 0x0005:\n      case 0x0006:\n      case 0x0007:\n      case 0x0008:\n      case 0x000b:\n      case 0x000c:\n      case 0x000e:\n      case 0x000f:\n        return false;\n      // Has non-printable characters\n\n      case 0x000d:\n        //  \\r\n        return false;\n      // Has \\r or \\r\\n which will be replaced as \\n\n\n      case 10:\n        //  \\n\n        if (isEmptyLine && !seenNonEmptyLine) {\n          return false; // Has leading new line\n        }\n\n        seenNonEmptyLine = true;\n        isEmptyLine = true;\n        hasIndent = false;\n        break;\n\n      case 9: //   \\t\n\n      case 32:\n        //  <space>\n        hasIndent || (hasIndent = isEmptyLine);\n        break;\n\n      default:\n        hasCommonIndent && (hasCommonIndent = hasIndent);\n        isEmptyLine = false;\n    }\n  }\n\n  if (isEmptyLine) {\n    return false; // Has trailing empty lines\n  }\n\n  if (hasCommonIndent && seenNonEmptyLine) {\n    return false; // Has internal indent\n  }\n\n  return true;\n}\n/**\n * Print a block string in the indented block form by adding a leading and\n * trailing blank line. However, if a block string starts with whitespace and is\n * a single-line, adding a leading blank line would strip that whitespace.\n *\n * @internal\n */\n\nexport function printBlockString(value, options) {\n  const escapedValue = value.replace(/\"\"\"/g, '\\\\\"\"\"'); // Expand a block string's raw value into independent lines.\n\n  const lines = escapedValue.split(/\\r\\n|[\\n\\r]/g);\n  const isSingleLine = lines.length === 1; // If common indentation is found we can fix some of those cases by adding leading new line\n\n  const forceLeadingNewLine =\n    lines.length > 1 &&\n    lines\n      .slice(1)\n      .every((line) => line.length === 0 || isWhiteSpace(line.charCodeAt(0))); // Trailing triple quotes just looks confusing but doesn't force trailing new line\n\n  const hasTrailingTripleQuotes = escapedValue.endsWith('\\\\\"\"\"'); // Trailing quote (single or double) or slash forces trailing new line\n\n  const hasTrailingQuote = value.endsWith('\"') && !hasTrailingTripleQuotes;\n  const hasTrailingSlash = value.endsWith('\\\\');\n  const forceTrailingNewline = hasTrailingQuote || hasTrailingSlash;\n  const printAsMultipleLines =\n    !(options !== null && options !== void 0 && options.minimize) && // add leading and trailing new lines only if it improves readability\n    (!isSingleLine ||\n      value.length > 70 ||\n      forceTrailingNewline ||\n      forceLeadingNewLine ||\n      hasTrailingTripleQuotes);\n  let result = ''; // Format a multi-line block quote to account for leading space.\n\n  const skipLeadingNewLine = isSingleLine && isWhiteSpace(value.charCodeAt(0));\n\n  if ((printAsMultipleLines && !skipLeadingNewLine) || forceLeadingNewLine) {\n    result += '\\n';\n  }\n\n  result += escapedValue;\n\n  if (printAsMultipleLines || forceTrailingNewline) {\n    result += '\\n';\n  }\n\n  return '\"\"\"' + result + '\"\"\"';\n}\n","/**\n * Prints a string as a GraphQL StringValue literal. Replaces control characters\n * and excluded characters (\" U+0022 and \\\\ U+005C) with escape sequences.\n */\nexport function printString(str) {\n  return `\"${str.replace(escapedRegExp, escapedReplacer)}\"`;\n} // eslint-disable-next-line no-control-regex\n\nconst escapedRegExp = /[\\x00-\\x1f\\x22\\x5c\\x7f-\\x9f]/g;\n\nfunction escapedReplacer(str) {\n  return escapeSequences[str.charCodeAt(0)];\n} // prettier-ignore\n\nconst escapeSequences = [\n  '\\\\u0000',\n  '\\\\u0001',\n  '\\\\u0002',\n  '\\\\u0003',\n  '\\\\u0004',\n  '\\\\u0005',\n  '\\\\u0006',\n  '\\\\u0007',\n  '\\\\b',\n  '\\\\t',\n  '\\\\n',\n  '\\\\u000B',\n  '\\\\f',\n  '\\\\r',\n  '\\\\u000E',\n  '\\\\u000F',\n  '\\\\u0010',\n  '\\\\u0011',\n  '\\\\u0012',\n  '\\\\u0013',\n  '\\\\u0014',\n  '\\\\u0015',\n  '\\\\u0016',\n  '\\\\u0017',\n  '\\\\u0018',\n  '\\\\u0019',\n  '\\\\u001A',\n  '\\\\u001B',\n  '\\\\u001C',\n  '\\\\u001D',\n  '\\\\u001E',\n  '\\\\u001F',\n  '',\n  '',\n  '\\\\\"',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '', // 2F\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '', // 3F\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '', // 4F\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '\\\\\\\\',\n  '',\n  '',\n  '', // 5F\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '', // 6F\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '\\\\u007F',\n  '\\\\u0080',\n  '\\\\u0081',\n  '\\\\u0082',\n  '\\\\u0083',\n  '\\\\u0084',\n  '\\\\u0085',\n  '\\\\u0086',\n  '\\\\u0087',\n  '\\\\u0088',\n  '\\\\u0089',\n  '\\\\u008A',\n  '\\\\u008B',\n  '\\\\u008C',\n  '\\\\u008D',\n  '\\\\u008E',\n  '\\\\u008F',\n  '\\\\u0090',\n  '\\\\u0091',\n  '\\\\u0092',\n  '\\\\u0093',\n  '\\\\u0094',\n  '\\\\u0095',\n  '\\\\u0096',\n  '\\\\u0097',\n  '\\\\u0098',\n  '\\\\u0099',\n  '\\\\u009A',\n  '\\\\u009B',\n  '\\\\u009C',\n  '\\\\u009D',\n  '\\\\u009E',\n  '\\\\u009F',\n];\n","import { printBlockString } from './blockString.mjs';\nimport { printString } from './printString.mjs';\nimport { visit } from './visitor.mjs';\n/**\n * Converts an AST into a string, using one set of reasonable\n * formatting rules.\n */\n\nexport function print(ast) {\n  return visit(ast, printDocASTReducer);\n}\nconst MAX_LINE_LENGTH = 80;\nconst printDocASTReducer = {\n  Name: {\n    leave: (node) => node.value,\n  },\n  Variable: {\n    leave: (node) => '$' + node.name,\n  },\n  // Document\n  Document: {\n    leave: (node) => join(node.definitions, '\\n\\n'),\n  },\n  OperationDefinition: {\n    leave(node) {\n      const varDefs = wrap('(', join(node.variableDefinitions, ', '), ')');\n      const prefix = join(\n        [\n          node.operation,\n          join([node.name, varDefs]),\n          join(node.directives, ' '),\n        ],\n        ' ',\n      ); // Anonymous queries with no directives or variable definitions can use\n      // the query short form.\n\n      return (prefix === 'query' ? '' : prefix + ' ') + node.selectionSet;\n    },\n  },\n  VariableDefinition: {\n    leave: ({ variable, type, defaultValue, directives }) =>\n      variable +\n      ': ' +\n      type +\n      wrap(' = ', defaultValue) +\n      wrap(' ', join(directives, ' ')),\n  },\n  SelectionSet: {\n    leave: ({ selections }) => block(selections),\n  },\n  Field: {\n    leave({ alias, name, arguments: args, directives, selectionSet }) {\n      const prefix = wrap('', alias, ': ') + name;\n      let argsLine = prefix + wrap('(', join(args, ', '), ')');\n\n      if (argsLine.length > MAX_LINE_LENGTH) {\n        argsLine = prefix + wrap('(\\n', indent(join(args, '\\n')), '\\n)');\n      }\n\n      return join([argsLine, join(directives, ' '), selectionSet], ' ');\n    },\n  },\n  Argument: {\n    leave: ({ name, value }) => name + ': ' + value,\n  },\n  // Fragments\n  FragmentSpread: {\n    leave: ({ name, directives }) =>\n      '...' + name + wrap(' ', join(directives, ' ')),\n  },\n  InlineFragment: {\n    leave: ({ typeCondition, directives, selectionSet }) =>\n      join(\n        [\n          '...',\n          wrap('on ', typeCondition),\n          join(directives, ' '),\n          selectionSet,\n        ],\n        ' ',\n      ),\n  },\n  FragmentDefinition: {\n    leave: (\n      { name, typeCondition, variableDefinitions, directives, selectionSet }, // Note: fragment variable definitions are experimental and may be changed\n    ) =>\n      // or removed in the future.\n      `fragment ${name}${wrap('(', join(variableDefinitions, ', '), ')')} ` +\n      `on ${typeCondition} ${wrap('', join(directives, ' '), ' ')}` +\n      selectionSet,\n  },\n  // Value\n  IntValue: {\n    leave: ({ value }) => value,\n  },\n  FloatValue: {\n    leave: ({ value }) => value,\n  },\n  StringValue: {\n    leave: ({ value, block: isBlockString }) =>\n      isBlockString ? printBlockString(value) : printString(value),\n  },\n  BooleanValue: {\n    leave: ({ value }) => (value ? 'true' : 'false'),\n  },\n  NullValue: {\n    leave: () => 'null',\n  },\n  EnumValue: {\n    leave: ({ value }) => value,\n  },\n  ListValue: {\n    leave: ({ values }) => '[' + join(values, ', ') + ']',\n  },\n  ObjectValue: {\n    leave: ({ fields }) => '{' + join(fields, ', ') + '}',\n  },\n  ObjectField: {\n    leave: ({ name, value }) => name + ': ' + value,\n  },\n  // Directive\n  Directive: {\n    leave: ({ name, arguments: args }) =>\n      '@' + name + wrap('(', join(args, ', '), ')'),\n  },\n  // Type\n  NamedType: {\n    leave: ({ name }) => name,\n  },\n  ListType: {\n    leave: ({ type }) => '[' + type + ']',\n  },\n  NonNullType: {\n    leave: ({ type }) => type + '!',\n  },\n  // Type System Definitions\n  SchemaDefinition: {\n    leave: ({ description, directives, operationTypes }) =>\n      wrap('', description, '\\n') +\n      join(['schema', join(directives, ' '), block(operationTypes)], ' '),\n  },\n  OperationTypeDefinition: {\n    leave: ({ operation, type }) => operation + ': ' + type,\n  },\n  ScalarTypeDefinition: {\n    leave: ({ description, name, directives }) =>\n      wrap('', description, '\\n') +\n      join(['scalar', name, join(directives, ' ')], ' '),\n  },\n  ObjectTypeDefinition: {\n    leave: ({ description, name, interfaces, directives, fields }) =>\n      wrap('', description, '\\n') +\n      join(\n        [\n          'type',\n          name,\n          wrap('implements ', join(interfaces, ' & ')),\n          join(directives, ' '),\n          block(fields),\n        ],\n        ' ',\n      ),\n  },\n  FieldDefinition: {\n    leave: ({ description, name, arguments: args, type, directives }) =>\n      wrap('', description, '\\n') +\n      name +\n      (hasMultilineItems(args)\n        ? wrap('(\\n', indent(join(args, '\\n')), '\\n)')\n        : wrap('(', join(args, ', '), ')')) +\n      ': ' +\n      type +\n      wrap(' ', join(directives, ' ')),\n  },\n  InputValueDefinition: {\n    leave: ({ description, name, type, defaultValue, directives }) =>\n      wrap('', description, '\\n') +\n      join(\n        [name + ': ' + type, wrap('= ', defaultValue), join(directives, ' ')],\n        ' ',\n      ),\n  },\n  InterfaceTypeDefinition: {\n    leave: ({ description, name, interfaces, directives, fields }) =>\n      wrap('', description, '\\n') +\n      join(\n        [\n          'interface',\n          name,\n          wrap('implements ', join(interfaces, ' & ')),\n          join(directives, ' '),\n          block(fields),\n        ],\n        ' ',\n      ),\n  },\n  UnionTypeDefinition: {\n    leave: ({ description, name, directives, types }) =>\n      wrap('', description, '\\n') +\n      join(\n        ['union', name, join(directives, ' '), wrap('= ', join(types, ' | '))],\n        ' ',\n      ),\n  },\n  EnumTypeDefinition: {\n    leave: ({ description, name, directives, values }) =>\n      wrap('', description, '\\n') +\n      join(['enum', name, join(directives, ' '), block(values)], ' '),\n  },\n  EnumValueDefinition: {\n    leave: ({ description, name, directives }) =>\n      wrap('', description, '\\n') + join([name, join(directives, ' ')], ' '),\n  },\n  InputObjectTypeDefinition: {\n    leave: ({ description, name, directives, fields }) =>\n      wrap('', description, '\\n') +\n      join(['input', name, join(directives, ' '), block(fields)], ' '),\n  },\n  DirectiveDefinition: {\n    leave: ({ description, name, arguments: args, repeatable, locations }) =>\n      wrap('', description, '\\n') +\n      'directive @' +\n      name +\n      (hasMultilineItems(args)\n        ? wrap('(\\n', indent(join(args, '\\n')), '\\n)')\n        : wrap('(', join(args, ', '), ')')) +\n      (repeatable ? ' repeatable' : '') +\n      ' on ' +\n      join(locations, ' | '),\n  },\n  SchemaExtension: {\n    leave: ({ directives, operationTypes }) =>\n      join(\n        ['extend schema', join(directives, ' '), block(operationTypes)],\n        ' ',\n      ),\n  },\n  ScalarTypeExtension: {\n    leave: ({ name, directives }) =>\n      join(['extend scalar', name, join(directives, ' ')], ' '),\n  },\n  ObjectTypeExtension: {\n    leave: ({ name, interfaces, directives, fields }) =>\n      join(\n        [\n          'extend type',\n          name,\n          wrap('implements ', join(interfaces, ' & ')),\n          join(directives, ' '),\n          block(fields),\n        ],\n        ' ',\n      ),\n  },\n  InterfaceTypeExtension: {\n    leave: ({ name, interfaces, directives, fields }) =>\n      join(\n        [\n          'extend interface',\n          name,\n          wrap('implements ', join(interfaces, ' & ')),\n          join(directives, ' '),\n          block(fields),\n        ],\n        ' ',\n      ),\n  },\n  UnionTypeExtension: {\n    leave: ({ name, directives, types }) =>\n      join(\n        [\n          'extend union',\n          name,\n          join(directives, ' '),\n          wrap('= ', join(types, ' | ')),\n        ],\n        ' ',\n      ),\n  },\n  EnumTypeExtension: {\n    leave: ({ name, directives, values }) =>\n      join(['extend enum', name, join(directives, ' '), block(values)], ' '),\n  },\n  InputObjectTypeExtension: {\n    leave: ({ name, directives, fields }) =>\n      join(['extend input', name, join(directives, ' '), block(fields)], ' '),\n  },\n};\n/**\n * Given maybeArray, print an empty string if it is null or empty, otherwise\n * print all items together separated by separator if provided\n */\n\nfunction join(maybeArray, separator = '') {\n  var _maybeArray$filter$jo;\n\n  return (_maybeArray$filter$jo =\n    maybeArray === null || maybeArray === void 0\n      ? void 0\n      : maybeArray.filter((x) => x).join(separator)) !== null &&\n    _maybeArray$filter$jo !== void 0\n    ? _maybeArray$filter$jo\n    : '';\n}\n/**\n * Given array, print each item on its own line, wrapped in an indented `{ }` block.\n */\n\nfunction block(array) {\n  return wrap('{\\n', indent(join(array, '\\n')), '\\n}');\n}\n/**\n * If maybeString is not null or empty, then wrap with start and end, otherwise print an empty string.\n */\n\nfunction wrap(start, maybeString, end = '') {\n  return maybeString != null && maybeString !== ''\n    ? start + maybeString + end\n    : '';\n}\n\nfunction indent(str) {\n  return wrap('  ', str.replace(/\\n/g, '\\n  '));\n}\n\nfunction hasMultilineItems(maybeArray) {\n  var _maybeArray$some;\n\n  // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n  /* c8 ignore next */\n  return (_maybeArray$some =\n    maybeArray === null || maybeArray === void 0\n      ? void 0\n      : maybeArray.some((str) => str.includes('\\n'))) !== null &&\n    _maybeArray$some !== void 0\n    ? _maybeArray$some\n    : false;\n}\n","import type { ASTNode } from \"graphql\";\nimport { print as origPrint } from \"graphql\";\nimport {\n  AutoCleanedWeakCache,\n  cacheSizes,\n  defaultCacheSizes,\n} from \"../caching/index.js\";\nimport { registerGlobalCache } from \"../caching/getMemoryInternals.js\";\n\nlet printCache!: AutoCleanedWeakCache<ASTNode, string>;\nexport const print = Object.assign(\n  (ast: ASTNode) => {\n    let result = printCache.get(ast);\n\n    if (!result) {\n      result = origPrint(ast);\n      printCache.set(ast, result);\n    }\n    return result;\n  },\n  {\n    reset() {\n      printCache = new AutoCleanedWeakCache<ASTNode, string>(\n        cacheSizes.print || defaultCacheSizes.print\n      );\n    },\n  }\n);\nprint.reset();\n\nif (__DEV__) {\n  registerGlobalCache(\"print\", () => (printCache ? printCache.size : 0));\n}\n","import type { ASTNode } from \"graphql\";\nimport { print } from \"../../utilities/index.js\";\n\nimport type { Operation } from \"../core/index.js\";\n\nexport interface Printer {\n  (node: ASTNode, originalPrint: typeof print): string;\n}\n\nexport interface UriFunction {\n  (operation: Operation): string;\n}\n\nexport interface Body {\n  query?: string;\n  operationName?: string;\n  variables?: Record<string, any>;\n  extensions?: Record<string, any>;\n}\n\nexport interface HttpOptions {\n  /**\n   * The URI to use when fetching operations.\n   *\n   * Defaults to '/graphql'.\n   */\n  uri?: string | UriFunction;\n\n  /**\n   * Passes the extensions field to your graphql server.\n   *\n   * Defaults to false.\n   */\n  includeExtensions?: boolean;\n\n  /**\n   * A `fetch`-compatible API to use when making requests.\n   */\n  fetch?: typeof fetch;\n\n  /**\n   * An object representing values to be sent as headers on the request.\n   */\n  headers?: Record<string, string>;\n\n  /**\n   * If set to true, header names won't be automatically normalized to\n   * lowercase. This allows for non-http-spec-compliant servers that might\n   * expect capitalized header names.\n   */\n  preserveHeaderCase?: boolean;\n\n  /**\n   * The credentials policy you want to use for the fetch call.\n   */\n  credentials?: string;\n\n  /**\n   * Any overrides of the fetch options argument to pass to the fetch call.\n   */\n  fetchOptions?: any;\n\n  /**\n   * If set to true, use the HTTP GET method for query operations. Mutations\n   * will still use the method specified in fetchOptions.method (which defaults\n   * to POST).\n   */\n  useGETForQueries?: boolean;\n\n  /**\n   * If set to true, the default behavior of stripping unused variables\n   * from the request will be disabled.\n   *\n   * Unused variables are likely to trigger server-side validation errors,\n   * per https://spec.graphql.org/draft/#sec-All-Variables-Used, but this\n   * includeUnusedVariables option can be useful if your server deviates\n   * from the GraphQL specification by not strictly enforcing that rule.\n   */\n  includeUnusedVariables?: boolean;\n  /**\n   * A function to substitute for the default query print function. Can be\n   * used to apply changes to the results of the print function.\n   */\n  print?: Printer;\n}\n\nexport interface HttpQueryOptions {\n  includeQuery?: boolean;\n  includeExtensions?: boolean;\n  preserveHeaderCase?: boolean;\n}\n\nexport interface HttpConfig {\n  http?: HttpQueryOptions;\n  options?: any;\n  headers?: Record<string, string>;\n  credentials?: any;\n}\n\nconst defaultHttpOptions: HttpQueryOptions = {\n  includeQuery: true,\n  includeExtensions: false,\n  preserveHeaderCase: false,\n};\n\nconst defaultHeaders = {\n  // headers are case insensitive (https://stackoverflow.com/a/5259004)\n  accept: \"*/*\",\n  // The content-type header describes the type of the body of the request, and\n  // so it typically only is sent with requests that actually have bodies. One\n  // could imagine that Apollo Client would remove this header when constructing\n  // a GET request (which has no body), but we historically have not done that.\n  // This means that browsers will preflight all Apollo Client requests (even\n  // GET requests). Apollo Server's CSRF prevention feature (introduced in\n  // AS3.7) takes advantage of this fact and does not block requests with this\n  // header. If you want to drop this header from GET requests, then you should\n  // probably replace it with a `apollo-require-preflight` header, or servers\n  // with CSRF prevention enabled might block your GET request. See\n  // https://www.apollographql.com/docs/apollo-server/security/cors/#preventing-cross-site-request-forgery-csrf\n  // for more details.\n  \"content-type\": \"application/json\",\n};\n\nconst defaultOptions = {\n  method: \"POST\",\n};\n\nexport const fallbackHttpConfig = {\n  http: defaultHttpOptions,\n  headers: defaultHeaders,\n  options: defaultOptions,\n};\n\nexport const defaultPrinter: Printer = (ast, printer) => printer(ast);\n\nexport function selectHttpOptionsAndBody(\n  operation: Operation,\n  fallbackConfig: HttpConfig,\n  ...configs: Array<HttpConfig>\n) {\n  configs.unshift(fallbackConfig);\n  return selectHttpOptionsAndBodyInternal(\n    operation,\n    defaultPrinter,\n    ...configs\n  );\n}\n\nexport function selectHttpOptionsAndBodyInternal(\n  operation: Operation,\n  printer: Printer,\n  ...configs: HttpConfig[]\n) {\n  let options = {} as HttpConfig & Record<string, any>;\n  let http = {} as HttpQueryOptions;\n\n  configs.forEach((config) => {\n    options = {\n      ...options,\n      ...config.options,\n      headers: {\n        ...options.headers,\n        ...config.headers,\n      },\n    };\n\n    if (config.credentials) {\n      options.credentials = config.credentials;\n    }\n\n    http = {\n      ...http,\n      ...config.http,\n    };\n  });\n\n  if (options.headers) {\n    options.headers = removeDuplicateHeaders(\n      options.headers,\n      http.preserveHeaderCase\n    );\n  }\n\n  //The body depends on the http options\n  const { operationName, extensions, variables, query } = operation;\n  const body: Body = { operationName, variables };\n\n  if (http.includeExtensions) (body as any).extensions = extensions;\n\n  // not sending the query (i.e persisted queries)\n  if (http.includeQuery) (body as any).query = printer(query, print);\n\n  return {\n    options,\n    body,\n  };\n}\n\n// Remove potential duplicate header names, preserving last (by insertion order).\n// This is done to prevent unintentionally duplicating a header instead of\n// overwriting it (See #8447 and #8449).\nfunction removeDuplicateHeaders(\n  headers: Record<string, string>,\n  preserveHeaderCase: boolean | undefined\n): typeof headers {\n  // If we're not preserving the case, just remove duplicates w/ normalization.\n  if (!preserveHeaderCase) {\n    const normalizedHeaders = Object.create(null);\n    Object.keys(Object(headers)).forEach((name) => {\n      normalizedHeaders[name.toLowerCase()] = headers[name];\n    });\n    return normalizedHeaders;\n  }\n\n  // If we are preserving the case, remove duplicates w/ normalization,\n  // preserving the original name.\n  // This allows for non-http-spec-compliant servers that expect intentionally\n  // capitalized header names (See #6741).\n  const headerData = Object.create(null);\n  Object.keys(Object(headers)).forEach((name) => {\n    headerData[name.toLowerCase()] = {\n      originalName: name,\n      value: headers[name],\n    };\n  });\n\n  const normalizedHeaders = Object.create(null);\n  Object.keys(headerData).forEach((name) => {\n    normalizedHeaders[headerData[name].originalName] = headerData[name].value;\n  });\n  return normalizedHeaders;\n}\n","import { Observable } from \"../../utilities/index.js\";\n\nexport function fromError<T>(errorValue: any): Observable<T> {\n  return new Observable<T>((observer) => {\n    observer.error(errorValue);\n  });\n}\n","import { invariant } from \"../globals/index.js\";\n\nimport type {\n  DocumentNode,\n  SelectionNode,\n  SelectionSetNode,\n  OperationDefinitionNode,\n  FieldNode,\n  DirectiveNode,\n  FragmentDefinitionNode,\n  ArgumentNode,\n  FragmentSpreadNode,\n  VariableDefinitionNode,\n  ASTNode,\n  ASTVisitFn,\n  InlineFragmentNode,\n} from \"graphql\";\nimport { visit, Kind } from \"graphql\";\n\nimport {\n  checkDocument,\n  getOperationDefinition,\n  getFragmentDefinition,\n  getFragmentDefinitions,\n  getMainDefinition,\n} from \"./getFromAST.js\";\nimport { isField } from \"./storeUtils.js\";\nimport type { FragmentMap } from \"./fragments.js\";\nimport { createFragmentMap } from \"./fragments.js\";\nimport { isArray, isNonEmptyArray } from \"../common/arrays.js\";\n\n// https://github.com/graphql/graphql-js/blob/8d7c8fccf5a9846a50785de04abda58a7eb13fc0/src/language/visitor.ts#L20-L23\ninterface EnterLeaveVisitor<TVisitedNode extends ASTNode> {\n  readonly enter?: ASTVisitFn<TVisitedNode>;\n  readonly leave?: ASTVisitFn<TVisitedNode>;\n}\n\nexport type RemoveNodeConfig<N> = {\n  name?: string;\n  test?: (node: N) => boolean;\n  remove?: boolean;\n};\n\nexport type GetNodeConfig<N> = {\n  name?: string;\n  test?: (node: N) => boolean;\n};\n\nexport type RemoveDirectiveConfig = RemoveNodeConfig<DirectiveNode>;\nexport type GetDirectiveConfig = GetNodeConfig<DirectiveNode>;\nexport type RemoveArgumentsConfig = RemoveNodeConfig<ArgumentNode>;\nexport type GetFragmentSpreadConfig = GetNodeConfig<FragmentSpreadNode>;\nexport type RemoveFragmentSpreadConfig = RemoveNodeConfig<FragmentSpreadNode>;\nexport type RemoveFragmentDefinitionConfig =\n  RemoveNodeConfig<FragmentDefinitionNode>;\nexport type RemoveVariableDefinitionConfig =\n  RemoveNodeConfig<VariableDefinitionNode>;\n\nconst TYPENAME_FIELD: FieldNode = {\n  kind: Kind.FIELD,\n  name: {\n    kind: Kind.NAME,\n    value: \"__typename\",\n  },\n};\n\nfunction isEmpty(\n  op: OperationDefinitionNode | FragmentDefinitionNode,\n  fragmentMap: FragmentMap\n): boolean {\n  return (\n    !op ||\n    op.selectionSet.selections.every(\n      (selection) =>\n        selection.kind === Kind.FRAGMENT_SPREAD &&\n        isEmpty(fragmentMap[selection.name.value], fragmentMap)\n    )\n  );\n}\n\nfunction nullIfDocIsEmpty(doc: DocumentNode) {\n  return (\n      isEmpty(\n        getOperationDefinition(doc) || getFragmentDefinition(doc),\n        createFragmentMap(getFragmentDefinitions(doc))\n      )\n    ) ?\n      null\n    : doc;\n}\n\nfunction getDirectiveMatcher(\n  configs: (RemoveDirectiveConfig | GetDirectiveConfig)[]\n) {\n  const names = new Map<string, RemoveDirectiveConfig | GetDirectiveConfig>();\n\n  const tests = new Map<\n    (directive: DirectiveNode) => boolean,\n    RemoveDirectiveConfig | GetDirectiveConfig\n  >();\n\n  configs.forEach((directive) => {\n    if (directive) {\n      if (directive.name) {\n        names.set(directive.name, directive);\n      } else if (directive.test) {\n        tests.set(directive.test, directive);\n      }\n    }\n  });\n\n  return (directive: DirectiveNode) => {\n    let config = names.get(directive.name.value);\n    if (!config && tests.size) {\n      tests.forEach((testConfig, test) => {\n        if (test(directive)) {\n          config = testConfig;\n        }\n      });\n    }\n    return config;\n  };\n}\n\n// Helper interface and function used by removeDirectivesFromDocument to keep\n// track of variable references and fragments spreads found within a given\n// operation or fragment definition.\ninterface InternalInUseInfo {\n  variables: Set<string>;\n  fragmentSpreads: Set<string>;\n  // Set to true when we deliberately remove a fragment definition, so we can\n  // make sure also to remove dangling ...spreads that refer to it.\n  removed?: boolean;\n  // Populated by the populateTransitiveVars helper function below.\n  transitiveVars?: Set<string>;\n}\nfunction makeInUseGetterFunction<TKey>(defaultKey: TKey) {\n  const map = new Map<TKey, InternalInUseInfo>();\n\n  return function inUseGetterFunction(\n    key: TKey = defaultKey\n  ): InternalInUseInfo {\n    let inUse = map.get(key);\n    if (!inUse) {\n      map.set(\n        key,\n        (inUse = {\n          // Variable and fragment spread names used directly within this\n          // operation or fragment definition, as identified by key. These sets\n          // will be populated during the first traversal of the document in\n          // removeDirectivesFromDocument below.\n          variables: new Set(),\n          fragmentSpreads: new Set(),\n        })\n      );\n    }\n    return inUse;\n  };\n}\n\nexport function removeDirectivesFromDocument(\n  directives: RemoveDirectiveConfig[],\n  doc: DocumentNode\n): DocumentNode | null {\n  checkDocument(doc);\n\n  // Passing empty strings to makeInUseGetterFunction means we handle anonymous\n  // operations as if their names were \"\". Anonymous fragment definitions are\n  // not supposed to be possible, but the same default naming strategy seems\n  // appropriate for that case as well.\n  const getInUseByOperationName = makeInUseGetterFunction<string>(\"\");\n  const getInUseByFragmentName = makeInUseGetterFunction<string>(\"\");\n  const getInUse = (\n    ancestors: readonly (ASTNode | readonly ASTNode[])[]\n  ): InternalInUseInfo | null => {\n    for (\n      let p = 0, ancestor: ASTNode | readonly ASTNode[];\n      p < ancestors.length && (ancestor = ancestors[p]);\n      ++p\n    ) {\n      if (isArray(ancestor)) continue;\n      if (ancestor.kind === Kind.OPERATION_DEFINITION) {\n        // If an operation is anonymous, we use the empty string as its key.\n        return getInUseByOperationName(ancestor.name && ancestor.name.value);\n      }\n      if (ancestor.kind === Kind.FRAGMENT_DEFINITION) {\n        return getInUseByFragmentName(ancestor.name.value);\n      }\n    }\n    invariant.error(`Could not find operation or fragment`);\n    return null;\n  };\n\n  let operationCount = 0;\n  for (let i = doc.definitions.length - 1; i >= 0; --i) {\n    if (doc.definitions[i].kind === Kind.OPERATION_DEFINITION) {\n      ++operationCount;\n    }\n  }\n\n  const directiveMatcher = getDirectiveMatcher(directives);\n  const shouldRemoveField = (nodeDirectives: FieldNode[\"directives\"]) =>\n    isNonEmptyArray(nodeDirectives) &&\n    nodeDirectives\n      .map(directiveMatcher)\n      .some(\n        (config: RemoveDirectiveConfig | undefined) => config && config.remove\n      );\n\n  const originalFragmentDefsByPath = new Map<string, FragmentDefinitionNode>();\n\n  // Any time the first traversal of the document below makes a change like\n  // removing a fragment (by returning null), this variable should be set to\n  // true. Once it becomes true, it should never be set to false again. If this\n  // variable remains false throughout the traversal, then we can return the\n  // original doc immediately without any modifications.\n  let firstVisitMadeChanges = false;\n\n  const fieldOrInlineFragmentVisitor: EnterLeaveVisitor<\n    FieldNode | InlineFragmentNode\n  > = {\n    enter(node) {\n      if (shouldRemoveField(node.directives)) {\n        firstVisitMadeChanges = true;\n        return null;\n      }\n    },\n  };\n\n  const docWithoutDirectiveSubtrees = visit(doc, {\n    // These two AST node types share the same implementation, defined above.\n    Field: fieldOrInlineFragmentVisitor,\n    InlineFragment: fieldOrInlineFragmentVisitor,\n\n    VariableDefinition: {\n      enter() {\n        // VariableDefinition nodes do not count as variables in use, though\n        // they do contain Variable nodes that might be visited below. To avoid\n        // counting variable declarations as usages, we skip visiting the\n        // contents of this VariableDefinition node by returning false.\n        return false;\n      },\n    },\n\n    Variable: {\n      enter(node, _key, _parent, _path, ancestors) {\n        const inUse = getInUse(ancestors);\n        if (inUse) {\n          inUse.variables.add(node.name.value);\n        }\n      },\n    },\n\n    FragmentSpread: {\n      enter(node, _key, _parent, _path, ancestors) {\n        if (shouldRemoveField(node.directives)) {\n          firstVisitMadeChanges = true;\n          return null;\n        }\n        const inUse = getInUse(ancestors);\n        if (inUse) {\n          inUse.fragmentSpreads.add(node.name.value);\n        }\n        // We might like to remove this FragmentSpread by returning null here if\n        // the corresponding FragmentDefinition node is also going to be removed\n        // by the logic below, but we can't control the relative order of those\n        // events, so we have to postpone the removal of dangling FragmentSpread\n        // nodes until after the current visit of the document has finished.\n      },\n    },\n\n    FragmentDefinition: {\n      enter(node, _key, _parent, path) {\n        originalFragmentDefsByPath.set(JSON.stringify(path), node);\n      },\n      leave(node, _key, _parent, path) {\n        const originalNode = originalFragmentDefsByPath.get(\n          JSON.stringify(path)\n        );\n        if (node === originalNode) {\n          // If the FragmentNode received by this leave function is identical to\n          // the one received by the corresponding enter function (above), then\n          // the visitor must not have made any changes within this\n          // FragmentDefinition node. This fragment definition may still be\n          // removed if there are no ...spread references to it, but it won't be\n          // removed just because it has only a __typename field.\n          return node;\n        }\n\n        if (\n          // This logic applies only if the document contains one or more\n          // operations, since removing all fragments from a document containing\n          // only fragments makes the document useless.\n          operationCount > 0 &&\n          node.selectionSet.selections.every(\n            (selection) =>\n              selection.kind === Kind.FIELD &&\n              selection.name.value === \"__typename\"\n          )\n        ) {\n          // This is a somewhat opinionated choice: if a FragmentDefinition ends\n          // up having no fields other than __typename, we remove the whole\n          // fragment definition, and later prune ...spread references to it.\n          getInUseByFragmentName(node.name.value).removed = true;\n          firstVisitMadeChanges = true;\n          return null;\n        }\n      },\n    },\n\n    Directive: {\n      leave(node) {\n        // If a matching directive is found, remove the directive itself. Note\n        // that this does not remove the target (field, argument, etc) of the\n        // directive, but only the directive itself.\n        if (directiveMatcher(node)) {\n          firstVisitMadeChanges = true;\n          return null;\n        }\n      },\n    },\n  });\n\n  if (!firstVisitMadeChanges) {\n    // If our first pass did not change anything about the document, then there\n    // is no cleanup we need to do, and we can return the original doc.\n    return doc;\n  }\n\n  // Utility for making sure inUse.transitiveVars is recursively populated.\n  // Because this logic assumes inUse.fragmentSpreads has been completely\n  // populated and inUse.removed has been set if appropriate,\n  // populateTransitiveVars must be called after that information has been\n  // collected by the first traversal of the document.\n  const populateTransitiveVars = (inUse: InternalInUseInfo) => {\n    if (!inUse.transitiveVars) {\n      inUse.transitiveVars = new Set(inUse.variables);\n      if (!inUse.removed) {\n        inUse.fragmentSpreads.forEach((childFragmentName) => {\n          populateTransitiveVars(\n            getInUseByFragmentName(childFragmentName)\n          ).transitiveVars!.forEach((varName) => {\n            inUse.transitiveVars!.add(varName);\n          });\n        });\n      }\n    }\n    return inUse;\n  };\n\n  // Since we've been keeping track of fragment spreads used by particular\n  // operations and fragment definitions, we now need to compute the set of all\n  // spreads used (transitively) by any operations in the document.\n  const allFragmentNamesUsed = new Set<string>();\n  docWithoutDirectiveSubtrees.definitions.forEach((def) => {\n    if (def.kind === Kind.OPERATION_DEFINITION) {\n      populateTransitiveVars(\n        getInUseByOperationName(def.name && def.name.value)\n      ).fragmentSpreads.forEach((childFragmentName) => {\n        allFragmentNamesUsed.add(childFragmentName);\n      });\n    } else if (\n      def.kind === Kind.FRAGMENT_DEFINITION &&\n      // If there are no operations in the document, then all fragment\n      // definitions count as usages of their own fragment names. This heuristic\n      // prevents accidentally removing all fragment definitions from the\n      // document just because it contains no operations that use the fragments.\n      operationCount === 0 &&\n      !getInUseByFragmentName(def.name.value).removed\n    ) {\n      allFragmentNamesUsed.add(def.name.value);\n    }\n  });\n  // Now that we have added all fragment spreads used by operations to the\n  // allFragmentNamesUsed set, we can complete the set by transitively adding\n  // all fragment spreads used by those fragments, and so on.\n  allFragmentNamesUsed.forEach((fragmentName) => {\n    // Once all the childFragmentName strings added here have been seen already,\n    // the top-level allFragmentNamesUsed.forEach loop will terminate.\n    populateTransitiveVars(\n      getInUseByFragmentName(fragmentName)\n    ).fragmentSpreads.forEach((childFragmentName) => {\n      allFragmentNamesUsed.add(childFragmentName);\n    });\n  });\n\n  const fragmentWillBeRemoved = (fragmentName: string) =>\n    !!(\n      // A fragment definition will be removed if there are no spreads that refer\n      // to it, or the fragment was explicitly removed because it had no fields\n      // other than __typename.\n      (\n        !allFragmentNamesUsed.has(fragmentName) ||\n        getInUseByFragmentName(fragmentName).removed\n      )\n    );\n\n  const enterVisitor: EnterLeaveVisitor<\n    FragmentSpreadNode | FragmentDefinitionNode\n  > = {\n    enter(node) {\n      if (fragmentWillBeRemoved(node.name.value)) {\n        return null;\n      }\n    },\n  };\n\n  return nullIfDocIsEmpty(\n    visit(docWithoutDirectiveSubtrees, {\n      // If the fragment is going to be removed, then leaving any dangling\n      // FragmentSpread nodes with the same name would be a mistake.\n      FragmentSpread: enterVisitor,\n\n      // This is where the fragment definition is actually removed.\n      FragmentDefinition: enterVisitor,\n\n      OperationDefinition: {\n        leave(node) {\n          // Upon leaving each operation in the depth-first AST traversal, prune\n          // any variables that are declared by the operation but unused within.\n          if (node.variableDefinitions) {\n            const usedVariableNames = populateTransitiveVars(\n              // If an operation is anonymous, we use the empty string as its key.\n              getInUseByOperationName(node.name && node.name.value)\n            ).transitiveVars!;\n\n            // According to the GraphQL spec, all variables declared by an\n            // operation must either be used by that operation or used by some\n            // fragment included transitively into that operation:\n            // https://spec.graphql.org/draft/#sec-All-Variables-Used\n            //\n            // To stay on the right side of this validation rule, if/when we\n            // remove the last $var references from an operation or its fragments,\n            // we must also remove the corresponding $var declaration from the\n            // enclosing operation. This pruning applies only to operations and\n            // not fragment definitions, at the moment. Fragments may be able to\n            // declare variables eventually, but today they can only consume them.\n            if (usedVariableNames.size < node.variableDefinitions.length) {\n              return {\n                ...node,\n                variableDefinitions: node.variableDefinitions.filter((varDef) =>\n                  usedVariableNames.has(varDef.variable.name.value)\n                ),\n              };\n            }\n          }\n        },\n      },\n    })\n  );\n}\n\nexport const addTypenameToDocument = Object.assign(\n  function <TNode extends ASTNode>(doc: TNode): TNode {\n    return visit(doc, {\n      SelectionSet: {\n        enter(node, _key, parent) {\n          // Don't add __typename to OperationDefinitions.\n          if (\n            parent &&\n            (parent as OperationDefinitionNode).kind ===\n              Kind.OPERATION_DEFINITION\n          ) {\n            return;\n          }\n\n          // No changes if no selections.\n          const { selections } = node;\n          if (!selections) {\n            return;\n          }\n\n          // If selections already have a __typename, or are part of an\n          // introspection query, do nothing.\n          const skip = selections.some((selection) => {\n            return (\n              isField(selection) &&\n              (selection.name.value === \"__typename\" ||\n                selection.name.value.lastIndexOf(\"__\", 0) === 0)\n            );\n          });\n          if (skip) {\n            return;\n          }\n\n          // If this SelectionSet is @export-ed as an input variable, it should\n          // not have a __typename field (see issue #4691).\n          const field = parent as FieldNode;\n          if (\n            isField(field) &&\n            field.directives &&\n            field.directives.some((d) => d.name.value === \"export\")\n          ) {\n            return;\n          }\n\n          // Create and return a new SelectionSet with a __typename Field.\n          return {\n            ...node,\n            selections: [...selections, TYPENAME_FIELD],\n          };\n        },\n      },\n    });\n  },\n  {\n    added(field: FieldNode): boolean {\n      return field === TYPENAME_FIELD;\n    },\n  }\n);\n\nconst connectionRemoveConfig = {\n  test: (directive: DirectiveNode) => {\n    const willRemove = directive.name.value === \"connection\";\n    if (willRemove) {\n      if (\n        !directive.arguments ||\n        !directive.arguments.some((arg) => arg.name.value === \"key\")\n      ) {\n        invariant.warn(\n          \"Removing an @connection directive even though it does not have a key. \" +\n            \"You may want to use the key parameter to specify a store key.\"\n        );\n      }\n    }\n\n    return willRemove;\n  },\n};\n\nexport function removeConnectionDirectiveFromDocument(doc: DocumentNode) {\n  return removeDirectivesFromDocument(\n    [connectionRemoveConfig],\n    checkDocument(doc)\n  );\n}\n\nfunction hasDirectivesInSelectionSet(\n  directives: GetDirectiveConfig[],\n  selectionSet: SelectionSetNode | undefined,\n  nestedCheck = true\n): boolean {\n  return (\n    !!selectionSet &&\n    selectionSet.selections &&\n    selectionSet.selections.some((selection) =>\n      hasDirectivesInSelection(directives, selection, nestedCheck)\n    )\n  );\n}\n\nfunction hasDirectivesInSelection(\n  directives: GetDirectiveConfig[],\n  selection: SelectionNode,\n  nestedCheck = true\n): boolean {\n  if (!isField(selection)) {\n    return true;\n  }\n\n  if (!selection.directives) {\n    return false;\n  }\n\n  return (\n    selection.directives.some(getDirectiveMatcher(directives)) ||\n    (nestedCheck &&\n      hasDirectivesInSelectionSet(\n        directives,\n        selection.selectionSet,\n        nestedCheck\n      ))\n  );\n}\n\nfunction getArgumentMatcher(config: RemoveArgumentsConfig[]) {\n  return function argumentMatcher(argument: ArgumentNode) {\n    return config.some(\n      (aConfig: RemoveArgumentsConfig) =>\n        argument.value &&\n        argument.value.kind === Kind.VARIABLE &&\n        argument.value.name &&\n        (aConfig.name === argument.value.name.value ||\n          (aConfig.test && aConfig.test(argument)))\n    );\n  };\n}\n\nexport function removeArgumentsFromDocument(\n  config: RemoveArgumentsConfig[],\n  doc: DocumentNode\n): DocumentNode | null {\n  const argMatcher = getArgumentMatcher(config);\n\n  return nullIfDocIsEmpty(\n    visit(doc, {\n      OperationDefinition: {\n        enter(node) {\n          return {\n            ...node,\n            // Remove matching top level variables definitions.\n            variableDefinitions:\n              node.variableDefinitions ?\n                node.variableDefinitions.filter(\n                  (varDef) =>\n                    !config.some(\n                      (arg) => arg.name === varDef.variable.name.value\n                    )\n                )\n              : [],\n          };\n        },\n      },\n\n      Field: {\n        enter(node) {\n          // If `remove` is set to true for an argument, and an argument match\n          // is found for a field, remove the field as well.\n          const shouldRemoveField = config.some(\n            (argConfig) => argConfig.remove\n          );\n\n          if (shouldRemoveField) {\n            let argMatchCount = 0;\n            if (node.arguments) {\n              node.arguments.forEach((arg) => {\n                if (argMatcher(arg)) {\n                  argMatchCount += 1;\n                }\n              });\n            }\n\n            if (argMatchCount === 1) {\n              return null;\n            }\n          }\n        },\n      },\n\n      Argument: {\n        enter(node) {\n          // Remove all matching arguments.\n          if (argMatcher(node)) {\n            return null;\n          }\n        },\n      },\n    })\n  );\n}\n\nexport function removeFragmentSpreadFromDocument(\n  config: RemoveFragmentSpreadConfig[],\n  doc: DocumentNode\n): DocumentNode | null {\n  function enter(\n    node: FragmentSpreadNode | FragmentDefinitionNode\n  ): null | void {\n    if (config.some((def) => def.name === node.name.value)) {\n      return null;\n    }\n  }\n\n  return nullIfDocIsEmpty(\n    visit(doc, {\n      FragmentSpread: { enter },\n      FragmentDefinition: { enter },\n    })\n  );\n}\n\n// If the incoming document is a query, return it as is. Otherwise, build a\n// new document containing a query operation based on the selection set\n// of the previous main operation.\nexport function buildQueryFromSelectionSet(\n  document: DocumentNode\n): DocumentNode {\n  const definition = getMainDefinition(document);\n  const definitionOperation = (<OperationDefinitionNode>definition).operation;\n\n  if (definitionOperation === \"query\") {\n    // Already a query, so return the existing document.\n    return document;\n  }\n\n  // Build a new query using the selection set of the main operation.\n  const modifiedDoc = visit(document, {\n    OperationDefinition: {\n      enter(node) {\n        return {\n          ...node,\n          operation: \"query\",\n        };\n      },\n    },\n  });\n  return modifiedDoc;\n}\n\n// Remove fields / selection sets that include an @client directive.\nexport function removeClientSetsFromDocument(\n  document: DocumentNode\n): DocumentNode | null {\n  checkDocument(document);\n\n  let modifiedDoc = removeDirectivesFromDocument(\n    [\n      {\n        test: (directive: DirectiveNode) => directive.name.value === \"client\",\n        remove: true,\n      },\n    ],\n    document\n  );\n\n  return modifiedDoc;\n}\n","import { invariant } from \"../../utilities/globals/index.js\";\n\nimport type { DefinitionNode } from \"graphql\";\n\nimport { ApolloLink } from \"../core/index.js\";\nimport { Observable, hasDirectives } from \"../../utilities/index.js\";\nimport { serializeFetchParameter } from \"./serializeFetchParameter.js\";\nimport { selectURI } from \"./selectURI.js\";\nimport {\n  handleError,\n  readMultipartBody,\n  parseAndCheckHttpResponse,\n} from \"./parseAndCheckHttpResponse.js\";\nimport { checkFetcher } from \"./checkFetcher.js\";\nimport type { HttpOptions } from \"./selectHttpOptionsAndBody.js\";\nimport {\n  selectHttpOptionsAndBodyInternal,\n  defaultPrinter,\n  fallbackHttpConfig,\n} from \"./selectHttpOptionsAndBody.js\";\nimport { rewriteURIForGET } from \"./rewriteURIForGET.js\";\nimport { fromError, filterOperationVariables } from \"../utils/index.js\";\nimport {\n  maybe,\n  getMainDefinition,\n  removeClientSetsFromDocument,\n} from \"../../utilities/index.js\";\n\nconst backupFetch = maybe(() => fetch);\n\nexport const createHttpLink = (linkOptions: HttpOptions = {}) => {\n  let {\n    uri = \"/graphql\",\n    // use default global fetch if nothing passed in\n    fetch: preferredFetch,\n    print = defaultPrinter,\n    includeExtensions,\n    preserveHeaderCase,\n    useGETForQueries,\n    includeUnusedVariables = false,\n    ...requestOptions\n  } = linkOptions;\n\n  if (__DEV__) {\n    // Make sure at least one of preferredFetch, window.fetch, or backupFetch is\n    // defined, so requests won't fail at runtime.\n    checkFetcher(preferredFetch || backupFetch);\n  }\n\n  const linkConfig = {\n    http: { includeExtensions, preserveHeaderCase },\n    options: requestOptions.fetchOptions,\n    credentials: requestOptions.credentials,\n    headers: requestOptions.headers,\n  };\n\n  return new ApolloLink((operation) => {\n    let chosenURI = selectURI(operation, uri);\n\n    const context = operation.getContext();\n\n    // `apollographql-client-*` headers are automatically set if a\n    // `clientAwareness` object is found in the context. These headers are\n    // set first, followed by the rest of the headers pulled from\n    // `context.headers`. If desired, `apollographql-client-*` headers set by\n    // the `clientAwareness` object can be overridden by\n    // `apollographql-client-*` headers set in `context.headers`.\n    const clientAwarenessHeaders: {\n      \"apollographql-client-name\"?: string;\n      \"apollographql-client-version\"?: string;\n    } = {};\n\n    if (context.clientAwareness) {\n      const { name, version } = context.clientAwareness;\n      if (name) {\n        clientAwarenessHeaders[\"apollographql-client-name\"] = name;\n      }\n      if (version) {\n        clientAwarenessHeaders[\"apollographql-client-version\"] = version;\n      }\n    }\n\n    const contextHeaders = { ...clientAwarenessHeaders, ...context.headers };\n\n    const contextConfig = {\n      http: context.http,\n      options: context.fetchOptions,\n      credentials: context.credentials,\n      headers: contextHeaders,\n    };\n\n    if (hasDirectives([\"client\"], operation.query)) {\n      const transformedQuery = removeClientSetsFromDocument(operation.query);\n\n      if (!transformedQuery) {\n        return fromError(\n          new Error(\n            \"HttpLink: Trying to send a client-only query to the server. To send to the server, ensure a non-client field is added to the query or set the `transformOptions.removeClientFields` option to `true`.\"\n          )\n        );\n      }\n\n      operation.query = transformedQuery;\n    }\n\n    //uses fallback, link, and then context to build options\n    const { options, body } = selectHttpOptionsAndBodyInternal(\n      operation,\n      print,\n      fallbackHttpConfig,\n      linkConfig,\n      contextConfig\n    );\n\n    if (body.variables && !includeUnusedVariables) {\n      body.variables = filterOperationVariables(\n        body.variables,\n        operation.query\n      );\n    }\n\n    let controller: AbortController | undefined;\n    if (!options.signal && typeof AbortController !== \"undefined\") {\n      controller = new AbortController();\n      options.signal = controller.signal;\n    }\n\n    // If requested, set method to GET if there are no mutations.\n    const definitionIsMutation = (d: DefinitionNode) => {\n      return d.kind === \"OperationDefinition\" && d.operation === \"mutation\";\n    };\n    const definitionIsSubscription = (d: DefinitionNode) => {\n      return d.kind === \"OperationDefinition\" && d.operation === \"subscription\";\n    };\n    const isSubscription = definitionIsSubscription(\n      getMainDefinition(operation.query)\n    );\n    // does not match custom directives beginning with @defer\n    const hasDefer = hasDirectives([\"defer\"], operation.query);\n    if (\n      useGETForQueries &&\n      !operation.query.definitions.some(definitionIsMutation)\n    ) {\n      options.method = \"GET\";\n    }\n\n    if (hasDefer || isSubscription) {\n      options.headers = options.headers || {};\n      let acceptHeader = \"multipart/mixed;\";\n      // Omit defer-specific headers if the user attempts to defer a selection\n      // set on a subscription and log a warning.\n      if (isSubscription && hasDefer) {\n        invariant.warn(\"Multipart-subscriptions do not support @defer\");\n      }\n\n      if (isSubscription) {\n        acceptHeader +=\n          \"boundary=graphql;subscriptionSpec=1.0,application/json\";\n      } else if (hasDefer) {\n        acceptHeader += \"deferSpec=20220824,application/json\";\n      }\n      options.headers.accept = acceptHeader;\n    }\n\n    if (options.method === \"GET\") {\n      const { newURI, parseError } = rewriteURIForGET(chosenURI, body);\n      if (parseError) {\n        return fromError(parseError);\n      }\n      chosenURI = newURI;\n    } else {\n      try {\n        (options as any).body = serializeFetchParameter(body, \"Payload\");\n      } catch (parseError) {\n        return fromError(parseError);\n      }\n    }\n\n    return new Observable((observer) => {\n      // Prefer linkOptions.fetch (preferredFetch) if provided, and otherwise\n      // fall back to the *current* global window.fetch function (see issue\n      // #7832), or (if all else fails) the backupFetch function we saved when\n      // this module was first evaluated. This last option protects against the\n      // removal of window.fetch, which is unlikely but not impossible.\n      const currentFetch = preferredFetch || maybe(() => fetch) || backupFetch;\n\n      const observerNext = observer.next.bind(observer);\n      currentFetch!(chosenURI, options)\n        .then((response) => {\n          operation.setContext({ response });\n          const ctype = response.headers?.get(\"content-type\");\n\n          if (ctype !== null && /^multipart\\/mixed/i.test(ctype)) {\n            return readMultipartBody(response, observerNext);\n          } else {\n            return parseAndCheckHttpResponse(operation)(response).then(\n              observerNext\n            );\n          }\n        })\n        .then(() => {\n          controller = undefined;\n          observer.complete();\n        })\n        .catch((err) => {\n          controller = undefined;\n          handleError(err, observer);\n        });\n\n      return () => {\n        // XXX support canceling this request\n        // https://developers.google.com/web/updates/2017/09/abortable-fetch\n        if (controller) controller.abort();\n      };\n    });\n  });\n};\n","import { newInvariantError } from \"../../utilities/globals/index.js\";\n\nexport const checkFetcher = (fetcher: typeof fetch | undefined) => {\n  if (!fetcher && typeof fetch === \"undefined\") {\n    throw newInvariantError(`\n\"fetch\" has not been found globally and no fetcher has been \\\nconfigured. To fix this, install a fetch package (like \\\nhttps://www.npmjs.com/package/cross-fetch), instantiate the \\\nfetcher, and pass it into your HttpLink constructor. For example:\n\nimport fetch from 'cross-fetch';\nimport { ApolloClient, HttpLink } from '@apollo/client';\nconst client = new ApolloClient({\n  link: new HttpLink({ uri: '/graphql', fetch })\n});\n    `);\n  }\n};\n","import type { Operation } from \"../core/index.js\";\n\nexport const selectURI = (\n  operation: Operation,\n  fallbackURI?: string | ((operation: Operation) => string)\n) => {\n  const context = operation.getContext();\n  const contextURI = context.uri;\n\n  if (contextURI) {\n    return contextURI;\n  } else if (typeof fallbackURI === \"function\") {\n    return fallbackURI(operation);\n  } else {\n    return (fallbackURI as string) || \"/graphql\";\n  }\n};\n","import type { VariableDefinitionNode, DocumentNode } from \"graphql\";\nimport { visit } from \"graphql\";\n\nexport function filterOperationVariables(\n  variables: Record<string, any>,\n  query: DocumentNode\n) {\n  const result = { ...variables };\n  const unusedNames = new Set(Object.keys(variables));\n  visit(query, {\n    Variable(node, _key, parent) {\n      // A variable type definition at the top level of a query is not\n      // enough to silence server-side errors about the variable being\n      // unused, so variable definitions do not count as usage.\n      // https://spec.graphql.org/draft/#sec-All-Variables-Used\n      if (\n        parent &&\n        (parent as VariableDefinitionNode).kind !== \"VariableDefinition\"\n      ) {\n        unusedNames.delete(node.name.value);\n      }\n    },\n  });\n  unusedNames.forEach((name) => {\n    delete result![name];\n  });\n  return result;\n}\n","import { serializeFetchParameter } from \"./serializeFetchParameter.js\";\nimport type { Body } from \"./selectHttpOptionsAndBody.js\";\n\n// For GET operations, returns the given URI rewritten with parameters, or a\n// parse error.\nexport function rewriteURIForGET(chosenURI: string, body: Body) {\n  // Implement the standard HTTP GET serialization, plus 'extensions'. Note\n  // the extra level of JSON serialization!\n  const queryParams: string[] = [];\n  const addQueryParam = (key: string, value: string) => {\n    queryParams.push(`${key}=${encodeURIComponent(value)}`);\n  };\n\n  if (\"query\" in body) {\n    addQueryParam(\"query\", body.query!);\n  }\n  if (body.operationName) {\n    addQueryParam(\"operationName\", body.operationName);\n  }\n  if (body.variables) {\n    let serializedVariables;\n    try {\n      serializedVariables = serializeFetchParameter(\n        body.variables,\n        \"Variables map\"\n      );\n    } catch (parseError) {\n      return { parseError };\n    }\n    addQueryParam(\"variables\", serializedVariables);\n  }\n  if (body.extensions) {\n    let serializedExtensions;\n    try {\n      serializedExtensions = serializeFetchParameter(\n        body.extensions,\n        \"Extensions map\"\n      );\n    } catch (parseError) {\n      return { parseError };\n    }\n    addQueryParam(\"extensions\", serializedExtensions);\n  }\n\n  // Reconstruct the URI with added query params.\n  // XXX This assumes that the URI is well-formed and that it doesn't\n  //     already contain any of these query params. We could instead use the\n  //     URL API and take a polyfill (whatwg-url@6) for older browsers that\n  //     don't support URLSearchParams. Note that some browsers (and\n  //     versions of whatwg-url) support URL but not URLSearchParams!\n  let fragment = \"\",\n    preFragment = chosenURI;\n  const fragmentStart = chosenURI.indexOf(\"#\");\n  if (fragmentStart !== -1) {\n    fragment = chosenURI.substr(fragmentStart);\n    preFragment = chosenURI.substr(0, fragmentStart);\n  }\n  const queryParamsPrefix = preFragment.indexOf(\"?\") === -1 ? \"?\" : \"&\";\n  const newURI =\n    preFragment + queryParamsPrefix + queryParams.join(\"&\") + fragment;\n  return { newURI };\n}\n","import { ApolloLink } from \"../core/index.js\";\nimport type { HttpOptions } from \"./selectHttpOptionsAndBody.js\";\nimport { createHttpLink } from \"./createHttpLink.js\";\n\nexport class HttpLink extends ApolloLink {\n  constructor(public options: HttpOptions = {}) {\n    super(createHttpLink(options).request);\n  }\n}\n","const { toString, hasOwnProperty } = Object.prototype;\nconst fnToStr = Function.prototype.toString;\nconst previousComparisons = new Map<object, Set<object>>();\n\n/**\n * Performs a deep equality check on two JavaScript values, tolerating cycles.\n */\nexport function equal(a: any, b: any): boolean {\n  try {\n    return check(a, b);\n  } finally {\n    previousComparisons.clear();\n  }\n}\n\n// Allow default imports as well.\nexport default equal;\n\nfunction check(a: any, b: any): boolean {\n  // If the two values are strictly equal, our job is easy.\n  if (a === b) {\n    return true;\n  }\n\n  // Object.prototype.toString returns a representation of the runtime type of\n  // the given value that is considerably more precise than typeof.\n  const aTag = toString.call(a);\n  const bTag = toString.call(b);\n\n  // If the runtime types of a and b are different, they could maybe be equal\n  // under some interpretation of equality, but for simplicity and performance\n  // we just return false instead.\n  if (aTag !== bTag) {\n    return false;\n  }\n\n  switch (aTag) {\n    case '[object Array]':\n      // Arrays are a lot like other objects, but we can cheaply compare their\n      // lengths as a short-cut before comparing their elements.\n      if (a.length !== b.length) return false;\n      // Fall through to object case...\n    case '[object Object]': {\n      if (previouslyCompared(a, b)) return true;\n\n      const aKeys = definedKeys(a);\n      const bKeys = definedKeys(b);\n\n      // If `a` and `b` have a different number of enumerable keys, they\n      // must be different.\n      const keyCount = aKeys.length;\n      if (keyCount !== bKeys.length) return false;\n\n      // Now make sure they have the same keys.\n      for (let k = 0; k < keyCount; ++k) {\n        if (!hasOwnProperty.call(b, aKeys[k])) {\n          return false;\n        }\n      }\n\n      // Finally, check deep equality of all child properties.\n      for (let k = 0; k < keyCount; ++k) {\n        const key = aKeys[k];\n        if (!check(a[key], b[key])) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    case '[object Error]':\n      return a.name === b.name && a.message === b.message;\n\n    case '[object Number]':\n      // Handle NaN, which is !== itself.\n      if (a !== a) return b !== b;\n      // Fall through to shared +a === +b case...\n    case '[object Boolean]':\n    case '[object Date]':\n      return +a === +b;\n\n    case '[object RegExp]':\n    case '[object String]':\n      return a == `${b}`;\n\n    case '[object Map]':\n    case '[object Set]': {\n      if (a.size !== b.size) return false;\n      if (previouslyCompared(a, b)) return true;\n\n      const aIterator = a.entries();\n      const isMap = aTag === '[object Map]';\n\n      while (true) {\n        const info = aIterator.next();\n        if (info.done) break;\n\n        // If a instanceof Set, aValue === aKey.\n        const [aKey, aValue] = info.value;\n\n        // So this works the same way for both Set and Map.\n        if (!b.has(aKey)) {\n          return false;\n        }\n\n        // However, we care about deep equality of values only when dealing\n        // with Map structures.\n        if (isMap && !check(aValue, b.get(aKey))) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    case '[object Uint16Array]':\n    case '[object Uint8Array]': // Buffer, in Node.js.\n    case '[object Uint32Array]':\n    case '[object Int32Array]':\n    case '[object Int8Array]':\n    case '[object Int16Array]':\n    case '[object ArrayBuffer]':\n      // DataView doesn't need these conversions, but the equality check is\n      // otherwise the same.\n      a = new Uint8Array(a);\n      b = new Uint8Array(b);\n      // Fall through...\n    case '[object DataView]': {\n      let len = a.byteLength;\n      if (len === b.byteLength) {\n        while (len-- && a[len] === b[len]) {\n          // Keep looping as long as the bytes are equal.\n        }\n      }\n      return len === -1;\n    }\n\n    case '[object AsyncFunction]':\n    case '[object GeneratorFunction]':\n    case '[object AsyncGeneratorFunction]':\n    case '[object Function]': {\n      const aCode = fnToStr.call(a);\n      if (aCode !== fnToStr.call(b)) {\n        return false;\n      }\n\n      // We consider non-native functions equal if they have the same code\n      // (native functions require === because their code is censored).\n      // Note that this behavior is not entirely sound, since !== function\n      // objects with the same code can behave differently depending on\n      // their closure scope. However, any function can behave differently\n      // depending on the values of its input arguments (including this)\n      // and its calling context (including its closure scope), even\n      // though the function object is === to itself; and it is entirely\n      // possible for functions that are not === to behave exactly the\n      // same under all conceivable circumstances. Because none of these\n      // factors are statically decidable in JavaScript, JS function\n      // equality is not well-defined. This ambiguity allows us to\n      // consider the best possible heuristic among various imperfect\n      // options, and equating non-native functions that have the same\n      // code has enormous practical benefits, such as when comparing\n      // functions that are repeatedly passed as fresh function\n      // expressions within objects that are otherwise deeply equal. Since\n      // any function created from the same syntactic expression (in the\n      // same code location) will always stringify to the same code\n      // according to fnToStr.call, we can reasonably expect these\n      // repeatedly passed function expressions to have the same code, and\n      // thus behave \"the same\" (with all the caveats mentioned above),\n      // even though the runtime function objects are !== to one another.\n      return !endsWith(aCode, nativeCodeSuffix);\n    }\n  }\n\n  // Otherwise the values are not equal.\n  return false;\n}\n\nfunction definedKeys<TObject extends object>(obj: TObject) {\n  // Remember that the second argument to Array.prototype.filter will be\n  // used as `this` within the callback function.\n  return Object.keys(obj).filter(isDefinedKey, obj);\n}\nfunction isDefinedKey<TObject extends object>(\n  this: TObject,\n  key: keyof TObject,\n) {\n  return this[key] !== void 0;\n}\n\nconst nativeCodeSuffix = \"{ [native code] }\";\n\nfunction endsWith(full: string, suffix: string) {\n  const fromIndex = full.length - suffix.length;\n  return fromIndex >= 0 &&\n    full.indexOf(suffix, fromIndex) === fromIndex;\n}\n\nfunction previouslyCompared(a: object, b: object): boolean {\n  // Though cyclic references can make an object graph appear infinite from the\n  // perspective of a depth-first traversal, the graph still contains a finite\n  // number of distinct object references. We use the previousComparisons cache\n  // to avoid comparing the same pair of object references more than once, which\n  // guarantees termination (even if we end up comparing every object in one\n  // graph to every object in the other graph, which is extremely unlikely),\n  // while still allowing weird isomorphic structures (like rings with different\n  // lengths) a chance to pass the equality test.\n  let bSet = previousComparisons.get(a);\n  if (bSet) {\n    // Return true here because we can be sure false will be returned somewhere\n    // else if the objects are not equivalent.\n    if (bSet.has(b)) return true;\n  } else {\n    previousComparisons.set(a, bSet = new Set);\n  }\n  bSet.add(b);\n  return false;\n}\n","// A [trie](https://en.wikipedia.org/wiki/Trie) data structure that holds\n// object keys weakly, yet can also hold non-object keys, unlike the\n// native `WeakMap`.\n\n// If no makeData function is supplied, the looked-up data will be an empty,\n// null-prototype Object.\nconst defaultMakeData = () => Object.create(null);\n\n// Useful for processing arguments objects as well as arrays.\nconst { forEach, slice } = Array.prototype;\nconst { hasOwnProperty } = Object.prototype;\n\nexport class Trie<Data> {\n  // Since a `WeakMap` cannot hold primitive values as keys, we need a\n  // backup `Map` instance to hold primitive keys. Both `this._weakMap`\n  // and `this._strongMap` are lazily initialized.\n  private weak?: WeakMap<any, Trie<Data>>;\n  private strong?: Map<any, Trie<Data>>;\n  private data?: Data;\n\n  constructor(\n    private weakness = true,\n    private makeData: (array: any[]) => Data = defaultMakeData,\n  ) {}\n\n  public lookup<T extends any[]>(...array: T): Data;\n  public lookup(): Data {\n    return this.lookupArray(arguments);\n  }\n\n  public lookupArray<T extends IArguments | any[]>(array: T): Data {\n    let node: Trie<Data> = this;\n    forEach.call(array, key => node = node.getChildTrie(key));\n    return hasOwnProperty.call(node, \"data\")\n      ? node.data as Data\n      : node.data = this.makeData(slice.call(array));\n  }\n\n  public peek<T extends any[]>(...array: T): Data | undefined;\n  public peek(): Data | undefined {\n    return this.peekArray(arguments);\n  }\n\n  public peekArray<T extends IArguments | any[]>(array: T): Data | undefined {\n    let node: Trie<Data> | undefined = this;\n\n    for (let i = 0, len = array.length; node && i < len; ++i) {\n      const map = node.mapFor(array[i], false);\n      node = map && map.get(array[i]);\n    }\n\n    return node && node.data;\n  }\n\n  public remove(...array: any[]): Data | undefined;\n  public remove(): Data | undefined {\n    return this.removeArray(arguments);\n  }\n\n  public removeArray<T extends IArguments | any[]>(array: T): Data | undefined {\n    let data: Data | undefined;\n\n    if (array.length) {\n      const head = array[0];\n      const map = this.mapFor(head, false);\n      const child = map && map.get(head);\n      if (child) {\n        data = child.removeArray(slice.call(array, 1));\n        if (!child.data && !child.weak && !(child.strong && child.strong.size)) {\n          map.delete(head);\n        }\n      }\n    } else {\n      data = this.data;\n      delete this.data;\n    }\n\n    return data;\n  }\n\n  private getChildTrie(key: any) {\n    const map = this.mapFor(key, true)!;\n    let child = map.get(key);\n    if (!child) map.set(key, child = new Trie<Data>(this.weakness, this.makeData));\n    return child;\n  }\n\n  private mapFor(key: any, create: boolean): Trie<Data>[\"weak\" | \"strong\"] | undefined {\n    return this.weakness && isObjRef(key)\n      ? this.weak || (create ? this.weak = new WeakMap : void 0)\n      : this.strong || (create ? this.strong = new Map : void 0);\n  }\n}\n\nfunction isObjRef(value: any) {\n  switch (typeof value) {\n  case \"object\":\n    if (value === null) break;\n    // Fall through to return true...\n  case \"function\":\n    return true;\n  }\n  return false;\n}\n","// A [trie](https://en.wikipedia.org/wiki/Trie) data structure that holds\n// object keys weakly, yet can also hold non-object keys, unlike the\n// native `WeakMap`.\n\n// If no makeData function is supplied, the looked-up data will be an empty,\n// null-prototype Object.\nconst defaultMakeData = () => Object.create(null);\n\n// Useful for processing arguments objects as well as arrays.\nconst { forEach, slice } = Array.prototype;\nconst { hasOwnProperty } = Object.prototype;\n\nexport class Trie<Data> {\n  // Since a `WeakMap` cannot hold primitive values as keys, we need a\n  // backup `Map` instance to hold primitive keys. Both `this._weakMap`\n  // and `this._strongMap` are lazily initialized.\n  private weak?: WeakMap<any, Trie<Data>>;\n  private strong?: Map<any, Trie<Data>>;\n  private data?: Data;\n\n  constructor(\n    private weakness = true,\n    private makeData: (array: any[]) => Data = defaultMakeData,\n  ) {}\n\n  public lookup<T extends any[]>(...array: T): Data {\n    return this.lookupArray(array);\n  }\n\n  public lookupArray<T extends IArguments | any[]>(array: T): Data {\n    let node: Trie<Data> = this;\n    forEach.call(array, key => node = node.getChildTrie(key));\n    return hasOwnProperty.call(node, \"data\")\n      ? node.data as Data\n      : node.data = this.makeData(slice.call(array));\n  }\n\n  public peek<T extends any[]>(...array: T): Data | undefined {\n    return this.peekArray(array);\n  }\n\n  public peekArray<T extends IArguments | any[]>(array: T): Data | undefined {\n    let node: Trie<Data> | undefined = this;\n\n    for (let i = 0, len = array.length; node && i < len; ++i) {\n      const map: Trie<Data>[\"weak\" | \"strong\"] =\n        this.weakness && isObjRef(array[i]) ? node.weak : node.strong;\n\n      node = map && map.get(array[i]);\n    }\n\n    return node && node.data;\n  }\n\n  private getChildTrie(key: any) {\n    const map = this.weakness && isObjRef(key)\n      ? this.weak || (this.weak = new WeakMap<any, Trie<Data>>())\n      : this.strong || (this.strong = new Map<any, Trie<Data>>());\n    let child = map.get(key);\n    if (!child) map.set(key, child = new Trie<Data>(this.weakness, this.makeData));\n    return child;\n  }\n}\n\nfunction isObjRef(value: any) {\n  switch (typeof value) {\n  case \"object\":\n    if (value === null) break;\n    // Fall through to return true...\n  case \"function\":\n    return true;\n  }\n  return false;\n}\n","type Context = {\n  parent: Context | null;\n  slots: { [slotId: string]: any };\n}\n\n// This currentContext variable will only be used if the makeSlotClass\n// function is called, which happens only if this is the first copy of the\n// @wry/context package to be imported.\nlet currentContext: Context | null = null;\n\n// This unique internal object is used to denote the absence of a value\n// for a given Slot, and is never exposed to outside code.\nconst MISSING_VALUE: any = {};\n\nlet idCounter = 1;\n\n// Although we can't do anything about the cost of duplicated code from\n// accidentally bundling multiple copies of the @wry/context package, we can\n// avoid creating the Slot class more than once using makeSlotClass.\nconst makeSlotClass = () => class Slot<TValue> {\n  // If you have a Slot object, you can find out its slot.id, but you cannot\n  // guess the slot.id of a Slot you don't have access to, thanks to the\n  // randomized suffix.\n  public readonly id = [\n    \"slot\",\n    idCounter++,\n    Date.now(),\n    Math.random().toString(36).slice(2),\n  ].join(\":\");\n\n  public hasValue() {\n    for (let context = currentContext; context; context = context.parent) {\n      // We use the Slot object iself as a key to its value, which means the\n      // value cannot be obtained without a reference to the Slot object.\n      if (this.id in context.slots) {\n        const value = context.slots[this.id];\n        if (value === MISSING_VALUE) break;\n        if (context !== currentContext) {\n          // Cache the value in currentContext.slots so the next lookup will\n          // be faster. This caching is safe because the tree of contexts and\n          // the values of the slots are logically immutable.\n          currentContext!.slots[this.id] = value;\n        }\n        return true;\n      }\n    }\n    if (currentContext) {\n      // If a value was not found for this Slot, it's never going to be found\n      // no matter how many times we look it up, so we might as well cache\n      // the absence of the value, too.\n      currentContext.slots[this.id] = MISSING_VALUE;\n    }\n    return false;\n  }\n\n  public getValue(): TValue | undefined {\n    if (this.hasValue()) {\n      return currentContext!.slots[this.id] as TValue;\n    }\n  }\n\n  public withValue<TResult, TArgs extends any[], TThis = any>(\n    value: TValue,\n    callback: (this: TThis, ...args: TArgs) => TResult,\n    // Given the prevalence of arrow functions, specifying arguments is likely\n    // to be much more common than specifying `this`, hence this ordering:\n    args?: TArgs,\n    thisArg?: TThis,\n  ): TResult {\n    const slots = {\n      __proto__: null,\n      [this.id]: value,\n    };\n    const parent = currentContext;\n    currentContext = { parent, slots };\n    try {\n      // Function.prototype.apply allows the arguments array argument to be\n      // omitted or undefined, so args! is fine here.\n      return callback.apply(thisArg!, args!);\n    } finally {\n      currentContext = parent;\n    }\n  }\n\n  // Capture the current context and wrap a callback function so that it\n  // reestablishes the captured context when called.\n  static bind<TArgs extends any[], TResult, TThis = any>(\n    callback: (this: TThis, ...args: TArgs) => TResult,\n  ) {\n    const context = currentContext;\n    return function (this: TThis) {\n      const saved = currentContext;\n      try {\n        currentContext = context;\n        return callback.apply(this, arguments as any);\n      } finally {\n        currentContext = saved;\n      }\n    } as typeof callback;\n  }\n\n  // Immediately run a callback function without any captured context.\n  static noContext<TResult, TArgs extends any[], TThis = any>(\n    callback: (this: TThis, ...args: TArgs) => TResult,\n    // Given the prevalence of arrow functions, specifying arguments is likely\n    // to be much more common than specifying `this`, hence this ordering:\n    args?: TArgs,\n    thisArg?: TThis,\n  ) {\n    if (currentContext) {\n      const saved = currentContext;\n      try {\n        currentContext = null;\n        // Function.prototype.apply allows the arguments array argument to be\n        // omitted or undefined, so args! is fine here.\n        return callback.apply(thisArg!, args!);\n      } finally {\n        currentContext = saved;\n      }\n    } else {\n      return callback.apply(thisArg!, args!);\n    }\n  }\n};\n\nfunction maybe<T>(fn: () => T): T | undefined {\n  try {\n    return fn();\n  } catch (ignored) {}\n}\n\n// We store a single global implementation of the Slot class as a permanent\n// non-enumerable property of the globalThis object. This obfuscation does\n// nothing to prevent access to the Slot class, but at least it ensures the\n// implementation (i.e. currentContext) cannot be tampered with, and all copies\n// of the @wry/context package (hopefully just one) will share the same Slot\n// implementation. Since the first copy of the @wry/context package to be\n// imported wins, this technique imposes a steep cost for any future breaking\n// changes to the Slot class.\nconst globalKey = \"@wry/context:Slot\";\n\nconst host =\n  // Prefer globalThis when available.\n  // https://github.com/benjamn/wryware/issues/347\n  maybe(() => globalThis) ||\n  // Fall back to global, which works in Node.js and may be converted by some\n  // bundlers to the appropriate identifier (window, self, ...) depending on the\n  // bundling target. https://github.com/endojs/endo/issues/576#issuecomment-1178515224\n  maybe(() => global) ||\n  // Otherwise, use a dummy host that's local to this module. We used to fall\n  // back to using the Array constructor as a namespace, but that was flagged in\n  // https://github.com/benjamn/wryware/issues/347, and can be avoided.\n  Object.create(null) as typeof Array;\n\n// Whichever globalHost we're using, make TypeScript happy about the additional\n// globalKey property.\nconst globalHost: typeof host & {\n  [globalKey]?: typeof Slot;\n} = host;\n\nexport const Slot: ReturnType<typeof makeSlotClass> =\n  globalHost[globalKey] ||\n  // Earlier versions of this package stored the globalKey property on the Array\n  // constructor, so we check there as well, to prevent Slot class duplication.\n  (Array as typeof globalHost)[globalKey] ||\n  (function (Slot) {\n    try {\n      Object.defineProperty(globalHost, globalKey, {\n        value: Slot,\n        enumerable: false,\n        writable: false,\n        // When it was possible for globalHost to be the Array constructor (a\n        // legacy Slot dedup strategy), it was important for the property to be\n        // configurable:true so it could be deleted. That does not seem to be as\n        // important when globalHost is the global object, but I don't want to\n        // cause similar problems again, and configurable:true seems safest.\n        // https://github.com/endojs/endo/issues/576#issuecomment-1178274008\n        configurable: true\n      });\n    } finally {\n      return Slot;\n    }\n  })(makeSlotClass());\n","import { Slot } from \"./slot.js\";\nexport { Slot }\nexport const { bind, noContext } = Slot;\n\n// Relying on the @types/node declaration of global.setTimeout can make\n// things tricky for dowstream projects (see PR #7).\ndeclare function setTimeout(\n  callback: (...args: any[]) => any,\n  ms?: number,\n  ...args: any[]\n): any;\n\n// Like global.setTimeout, except the callback runs with captured context.\nexport { setTimeoutWithContext as setTimeout };\nfunction setTimeoutWithContext(callback: () => any, delay: number) {\n  return setTimeout(bind(callback), delay);\n}\n\n// Turn any generator function into an async function (using yield instead\n// of await), with context automatically preserved across yields.\nexport function asyncFromGen<\n  TArgs extends any[],\n  TYield = any,\n  TReturn = any,\n  TNext = any,\n>(\n  genFn: (...args: TArgs) => Generator<TYield, TReturn, TNext>\n) {\n  return function (this: any) {\n    const gen = genFn.apply(this, arguments as any);\n\n    type Method = (\n      this: Generator<TYield, TReturn, TNext>,\n      arg: any,\n    ) => IteratorResult<TYield, TReturn>;\n\n    const boundNext: Method = bind(gen.next);\n    const boundThrow: Method = bind(gen.throw!);\n\n    return new Promise((resolve, reject) => {\n      function invoke(method: Method, argument: any) {\n        try {\n          var result: any = method.call(gen, argument);\n        } catch (error) {\n          return reject(error);\n        }\n        const next = result.done ? resolve : invokeNext;\n        if (isPromiseLike(result.value)) {\n          result.value.then(next, result.done ? reject : invokeThrow);\n        } else {\n          next(result.value);\n        }\n      }\n      const invokeNext = (value?: any) => invoke(boundNext, value);\n      const invokeThrow = (error: any) => invoke(boundThrow, error);\n      invokeNext();\n    });\n  } as (...args: TArgs) => Promise<any>;\n}\n\nfunction isPromiseLike(value: any): value is PromiseLike<any> {\n  return value && typeof value.then === \"function\";\n}\n\n// If you use the fibers npm package to implement coroutines in Node.js,\n// you should call this function at least once to ensure context management\n// remains coherent across any yields.\nconst wrappedFibers: Function[] = [];\nexport function wrapYieldingFiberMethods<F extends Function>(Fiber: F): F {\n  // There can be only one implementation of Fiber per process, so this array\n  // should never grow longer than one element.\n  if (wrappedFibers.indexOf(Fiber) < 0) {\n    const wrap = (obj: any, method: string) => {\n      const fn = obj[method];\n      obj[method] = function () {\n        return noContext(fn, arguments as any, this);\n      };\n    }\n    // These methods can yield, according to\n    // https://github.com/laverdet/node-fibers/blob/ddebed9b8ae3883e57f822e2108e6943e5c8d2a8/fibers.js#L97-L100\n    wrap(Fiber, \"yield\");\n    wrap(Fiber.prototype, \"run\");\n    wrap(Fiber.prototype, \"throwInto\");\n    wrappedFibers.push(Fiber);\n  }\n  return Fiber;\n}\n","import { Slot } from \"@wry/context\";\nimport { AnyEntry } from \"./entry.js\";\n\nexport const parentEntrySlot = new Slot<AnyEntry | undefined>();\n\nexport function nonReactive<R>(fn: () => R): R {\n  return parentEntrySlot.withValue(void 0, fn);\n}\n\nexport { Slot }\nexport {\n  bind as bindContext,\n  noContext,\n  setTimeout,\n  asyncFromGen,\n} from \"@wry/context\";\n","export type NoInfer<T> = [T][T extends any ? 0 : never];\n\nexport const {\n  hasOwnProperty,\n} = Object.prototype;\n\nexport const arrayFromSet: <T>(set: Set<T>) => T[] =\n  Array.from ||\n  function (set) {\n    const array: any[] = [];\n    set.forEach(item => array.push(item));\n    return array;\n  };\n\nexport type Unsubscribable = {\n  unsubscribe?: void | (() => any);\n}\n\nexport function maybeUnsubscribe(entryOrDep: Unsubscribable) {\n  const { unsubscribe } = entryOrDep;\n  if (typeof unsubscribe === \"function\") {\n    entryOrDep.unsubscribe = void 0;\n    unsubscribe();\n  }\n}\n","import { parentEntrySlot } from \"./context.js\";\nimport { OptimisticWrapOptions } from \"./index.js\";\nimport { Dep } from \"./dep.js\";\nimport { maybeUnsubscribe, arrayFromSet, Unsubscribable } from \"./helpers.js\";\n\nconst emptySetPool: Set<any>[] = [];\nconst POOL_TARGET_SIZE = 100;\n\n// Since this package might be used browsers, we should avoid using the\n// Node built-in assert module.\nfunction assert(condition: any, optionalMessage?: string) {\n  if (! condition) {\n    throw new Error(optionalMessage || \"assertion failure\");\n  }\n}\n\n// Since exceptions are cached just like normal values, we need an efficient\n// way of representing unknown, ordinary, and exceptional values.\ntype Value<T> =\n  | []           // unknown\n  | [T]          // known value\n  | [void, any]; // known exception\n\nfunction valueIs(a: Value<any>, b: Value<any>) {\n  const len = a.length;\n  return (\n    // Unknown values are not equal to each other.\n    len > 0 &&\n    // Both values must be ordinary (or both exceptional) to be equal.\n    len === b.length &&\n    // The underlying value or exception must be the same.\n    a[len - 1] === b[len - 1]\n  );\n}\n\nfunction valueGet<T>(value: Value<T>): T {\n  switch (value.length) {\n    case 0: throw new Error(\"unknown value\");\n    case 1: return value[0];\n    case 2: throw value[1];\n  }\n}\n\nfunction valueCopy<T>(value: Value<T>): Value<T> {\n  return value.slice(0) as Value<T>;\n}\n\nexport type AnyEntry = Entry<any, any>;\n\nexport class Entry<TArgs extends any[], TValue> {\n  public static count = 0;\n\n  public normalizeResult: OptimisticWrapOptions<TArgs, any, any, TValue>[\"normalizeResult\"];\n  public subscribe: OptimisticWrapOptions<TArgs>[\"subscribe\"];\n  public unsubscribe: Unsubscribable[\"unsubscribe\"];\n\n  public readonly parents = new Set<AnyEntry>();\n  public readonly childValues = new Map<AnyEntry, Value<any>>();\n\n  // When this Entry has children that are dirty, this property becomes\n  // a Set containing other Entry objects, borrowed from emptySetPool.\n  // When the set becomes empty, it gets recycled back to emptySetPool.\n  public dirtyChildren: Set<AnyEntry> | null = null;\n\n  public dirty = true;\n  public recomputing = false;\n  public readonly value: Value<TValue> = [];\n\n  constructor(\n    public readonly fn: (...args: TArgs) => TValue,\n  ) {\n    ++Entry.count;\n  }\n\n  public peek(): TValue | undefined {\n    if (this.value.length === 1 && !mightBeDirty(this)) {\n      rememberParent(this);\n      return this.value[0];\n    }\n  }\n\n  // This is the most important method of the Entry API, because it\n  // determines whether the cached this.value can be returned immediately,\n  // or must be recomputed. The overall performance of the caching system\n  // depends on the truth of the following observations: (1) this.dirty is\n  // usually false, (2) this.dirtyChildren is usually null/empty, and thus\n  // (3) valueGet(this.value) is usually returned without recomputation.\n  public recompute(args: TArgs): TValue {\n    assert(! this.recomputing, \"already recomputing\");\n    rememberParent(this);\n    return mightBeDirty(this)\n      ? reallyRecompute(this, args)\n      : valueGet(this.value);\n  }\n\n  public setDirty() {\n    if (this.dirty) return;\n    this.dirty = true;\n    reportDirty(this);\n    // We can go ahead and unsubscribe here, since any further dirty\n    // notifications we receive will be redundant, and unsubscribing may\n    // free up some resources, e.g. file watchers.\n    maybeUnsubscribe(this);\n  }\n\n  public dispose() {\n    this.setDirty();\n\n    // Sever any dependency relationships with our own children, so those\n    // children don't retain this parent Entry in their child.parents sets,\n    // thereby preventing it from being fully garbage collected.\n    forgetChildren(this);\n\n    // Because this entry has been kicked out of the cache (in index.js),\n    // we've lost the ability to find out if/when this entry becomes dirty,\n    // whether that happens through a subscription, because of a direct call\n    // to entry.setDirty(), or because one of its children becomes dirty.\n    // Because of this loss of future information, we have to assume the\n    // worst (that this entry might have become dirty very soon), so we must\n    // immediately mark this entry's parents as dirty. Normally we could\n    // just call entry.setDirty() rather than calling parent.setDirty() for\n    // each parent, but that would leave this entry in parent.childValues\n    // and parent.dirtyChildren, which would prevent the child from being\n    // truly forgotten.\n    eachParent(this, (parent, child) => {\n      parent.setDirty();\n      forgetChild(parent, this);\n    });\n  }\n\n  public forget() {\n    // The code that creates Entry objects in index.ts will replace this method\n    // with one that actually removes the Entry from the cache, which will also\n    // trigger the entry.dispose method.\n    this.dispose();\n  }\n\n  private deps: Set<Dep<any>> | null = null;\n\n  public dependOn(dep: Dep<any>) {\n    dep.add(this);\n    if (! this.deps) {\n      this.deps = emptySetPool.pop() || new Set<Set<AnyEntry>>();\n    }\n    this.deps.add(dep);\n  }\n\n  public forgetDeps() {\n    if (this.deps) {\n      arrayFromSet(this.deps).forEach(dep => dep.delete(this));\n      this.deps.clear();\n      emptySetPool.push(this.deps);\n      this.deps = null;\n    }\n  }\n}\n\nfunction rememberParent(child: AnyEntry) {\n  const parent = parentEntrySlot.getValue();\n  if (parent) {\n    child.parents.add(parent);\n\n    if (! parent.childValues.has(child)) {\n      parent.childValues.set(child, []);\n    }\n\n    if (mightBeDirty(child)) {\n      reportDirtyChild(parent, child);\n    } else {\n      reportCleanChild(parent, child);\n    }\n\n    return parent;\n  }\n}\n\nfunction reallyRecompute(entry: AnyEntry, args: any[]) {\n  forgetChildren(entry);\n\n  // Set entry as the parent entry while calling recomputeNewValue(entry).\n  parentEntrySlot.withValue(entry, recomputeNewValue, [entry, args]);\n\n  if (maybeSubscribe(entry, args)) {\n    // If we successfully recomputed entry.value and did not fail to\n    // (re)subscribe, then this Entry is no longer explicitly dirty.\n    setClean(entry);\n  }\n\n  return valueGet(entry.value);\n}\n\nfunction recomputeNewValue(entry: AnyEntry, args: any[]) {\n  entry.recomputing = true;\n\n  const { normalizeResult } = entry;\n  let oldValueCopy: Value<any> | undefined;\n  if (normalizeResult && entry.value.length === 1) {\n    oldValueCopy = valueCopy(entry.value);\n  }\n\n  // Make entry.value an empty array, representing an unknown value.\n  entry.value.length = 0;\n\n  try {\n    // If entry.fn succeeds, entry.value will become a normal Value.\n    entry.value[0] = entry.fn.apply(null, args);\n\n    // If we have a viable oldValueCopy to compare with the (successfully\n    // recomputed) new entry.value, and they are not already === identical, give\n    // normalizeResult a chance to pick/choose/reuse parts of oldValueCopy[0]\n    // and/or entry.value[0] to determine the final cached entry.value.\n    if (normalizeResult && oldValueCopy && !valueIs(oldValueCopy, entry.value)) {\n      try {\n        entry.value[0] = normalizeResult(entry.value[0], oldValueCopy[0]);\n      } catch {\n        // If normalizeResult throws, just use the newer value, rather than\n        // saving the exception as entry.value[1].\n      }\n    }\n\n  } catch (e) {\n    // If entry.fn throws, entry.value will hold that exception.\n    entry.value[1] = e;\n  }\n\n  // Either way, this line is always reached.\n  entry.recomputing = false;\n}\n\nfunction mightBeDirty(entry: AnyEntry) {\n  return entry.dirty || !!(entry.dirtyChildren && entry.dirtyChildren.size);\n}\n\nfunction setClean(entry: AnyEntry) {\n  entry.dirty = false;\n\n  if (mightBeDirty(entry)) {\n    // This Entry may still have dirty children, in which case we can't\n    // let our parents know we're clean just yet.\n    return;\n  }\n\n  reportClean(entry);\n}\n\nfunction reportDirty(child: AnyEntry) {\n  eachParent(child, reportDirtyChild);\n}\n\nfunction reportClean(child: AnyEntry) {\n  eachParent(child, reportCleanChild);\n}\n\nfunction eachParent(\n  child: AnyEntry,\n  callback: (parent: AnyEntry, child: AnyEntry) => any,\n) {\n  const parentCount = child.parents.size;\n  if (parentCount) {\n    const parents = arrayFromSet(child.parents);\n    for (let i = 0; i < parentCount; ++i) {\n      callback(parents[i], child);\n    }\n  }\n}\n\n// Let a parent Entry know that one of its children may be dirty.\nfunction reportDirtyChild(parent: AnyEntry, child: AnyEntry) {\n  // Must have called rememberParent(child) before calling\n  // reportDirtyChild(parent, child).\n  assert(parent.childValues.has(child));\n  assert(mightBeDirty(child));\n  const parentWasClean = !mightBeDirty(parent);\n\n  if (! parent.dirtyChildren) {\n    parent.dirtyChildren = emptySetPool.pop() || new Set;\n\n  } else if (parent.dirtyChildren.has(child)) {\n    // If we already know this child is dirty, then we must have already\n    // informed our own parents that we are dirty, so we can terminate\n    // the recursion early.\n    return;\n  }\n\n  parent.dirtyChildren.add(child);\n\n  // If parent was clean before, it just became (possibly) dirty (according to\n  // mightBeDirty), since we just added child to parent.dirtyChildren.\n  if (parentWasClean) {\n    reportDirty(parent);\n  }\n}\n\n// Let a parent Entry know that one of its children is no longer dirty.\nfunction reportCleanChild(parent: AnyEntry, child: AnyEntry) {\n  // Must have called rememberChild(child) before calling\n  // reportCleanChild(parent, child).\n  assert(parent.childValues.has(child));\n  assert(! mightBeDirty(child));\n\n  const childValue = parent.childValues.get(child)!;\n  if (childValue.length === 0) {\n    parent.childValues.set(child, valueCopy(child.value));\n  } else if (! valueIs(childValue, child.value)) {\n    parent.setDirty();\n  }\n\n  removeDirtyChild(parent, child);\n\n  if (mightBeDirty(parent)) {\n    return;\n  }\n\n  reportClean(parent);\n}\n\nfunction removeDirtyChild(parent: AnyEntry, child: AnyEntry) {\n  const dc = parent.dirtyChildren;\n  if (dc) {\n    dc.delete(child);\n    if (dc.size === 0) {\n      if (emptySetPool.length < POOL_TARGET_SIZE) {\n        emptySetPool.push(dc);\n      }\n      parent.dirtyChildren = null;\n    }\n  }\n}\n\n// Removes all children from this entry and returns an array of the\n// removed children.\nfunction forgetChildren(parent: AnyEntry) {\n  if (parent.childValues.size > 0) {\n    parent.childValues.forEach((_value, child) => {\n      forgetChild(parent, child);\n    });\n  }\n\n  // Remove this parent Entry from any sets to which it was added by the\n  // addToSet method.\n  parent.forgetDeps();\n\n  // After we forget all our children, this.dirtyChildren must be empty\n  // and therefore must have been reset to null.\n  assert(parent.dirtyChildren === null);\n}\n\nfunction forgetChild(parent: AnyEntry, child: AnyEntry) {\n  child.parents.delete(parent);\n  parent.childValues.delete(child);\n  removeDirtyChild(parent, child);\n}\n\nfunction maybeSubscribe(entry: AnyEntry, args: any[]) {\n  if (typeof entry.subscribe === \"function\") {\n    try {\n      maybeUnsubscribe(entry); // Prevent double subscriptions.\n      entry.unsubscribe = entry.subscribe.apply(null, args);\n    } catch (e) {\n      // If this Entry has a subscribe function and it threw an exception\n      // (or an unsubscribe function it previously returned now throws),\n      // return false to indicate that we were not able to subscribe (or\n      // unsubscribe), and this Entry should remain dirty.\n      entry.setDirty();\n      return false;\n    }\n  }\n\n  // Returning true indicates either that there was no entry.subscribe\n  // function or that it succeeded.\n  return true;\n}\n","import { AnyEntry } from \"./entry.js\";\nimport { OptimisticWrapOptions } from \"./index.js\";\nimport { parentEntrySlot } from \"./context.js\";\nimport {\n  hasOwnProperty,\n  Unsubscribable,\n  maybeUnsubscribe,\n  arrayFromSet,\n } from \"./helpers.js\";\n\ntype EntryMethodName = keyof typeof EntryMethods;\nconst EntryMethods = {\n  setDirty: true, // Mark parent Entry as needing to be recomputed (default)\n  dispose: true,  // Detach parent Entry from parents and children, but leave in LRU cache\n  forget: true,   // Fully remove parent Entry from LRU cache and computation graph\n};\n\nexport type OptimisticDependencyFunction<TKey> =\n  ((key: TKey) => void) & {\n    dirty: (key: TKey, entryMethodName?: EntryMethodName) => void;\n  };\n\nexport type Dep<TKey> = Set<AnyEntry> & {\n  subscribe: OptimisticWrapOptions<[TKey]>[\"subscribe\"];\n} & Unsubscribable;\n\nexport function dep<TKey>(options?: {\n  subscribe: Dep<TKey>[\"subscribe\"];\n}) {\n  const depsByKey = new Map<TKey, Dep<TKey>>();\n  const subscribe = options && options.subscribe;\n\n  function depend(key: TKey) {\n    const parent = parentEntrySlot.getValue();\n    if (parent) {\n      let dep = depsByKey.get(key);\n      if (!dep) {\n        depsByKey.set(key, dep = new Set as Dep<TKey>);\n      }\n      parent.dependOn(dep);\n      if (typeof subscribe === \"function\") {\n        maybeUnsubscribe(dep);\n        dep.unsubscribe = subscribe(key);\n      }\n    }\n  }\n\n  depend.dirty = function dirty(\n    key: TKey,\n    entryMethodName?: EntryMethodName,\n  ) {\n    const dep = depsByKey.get(key);\n    if (dep) {\n      const m: EntryMethodName = (\n        entryMethodName &&\n        hasOwnProperty.call(EntryMethods, entryMethodName)\n      ) ? entryMethodName : \"setDirty\";\n      // We have to use arrayFromSet(dep).forEach instead of dep.forEach,\n      // because modifying a Set while iterating over it can cause elements in\n      // the Set to be removed from the Set before they've been iterated over.\n      arrayFromSet(dep).forEach(entry => entry[m]());\n      depsByKey.delete(key);\n      maybeUnsubscribe(dep);\n    }\n  };\n\n  return depend as OptimisticDependencyFunction<TKey>;\n}\n","import { Trie } from \"@wry/trie\";\n\nimport { StrongCache, CommonCache } from \"@wry/caches\";\nimport { Entry, AnyEntry } from \"./entry.js\";\nimport { parentEntrySlot } from \"./context.js\";\nimport type { NoInfer } from \"./helpers.js\";\n\n// These helper functions are important for making optimism work with\n// asynchronous code. In order to register parent-child dependencies,\n// optimism needs to know about any currently active parent computations.\n// In ordinary synchronous code, the parent context is implicit in the\n// execution stack, but asynchronous code requires some extra guidance in\n// order to propagate context from one async task segment to the next.\nexport {\n  bindContext,\n  noContext,\n  nonReactive,\n  setTimeout,\n  asyncFromGen,\n  Slot,\n} from \"./context.js\";\n\n// A lighter-weight dependency, similar to OptimisticWrapperFunction, except\n// with only one argument, no makeCacheKey, no wrapped function to recompute,\n// and no result value. Useful for representing dependency leaves in the graph\n// of computation. Subscriptions are supported.\nexport { dep, OptimisticDependencyFunction } from \"./dep.js\";\n\n// The defaultMakeCacheKey function is remarkably powerful, because it gives\n// a unique object for any shallow-identical list of arguments. If you need\n// to implement a custom makeCacheKey function, you may find it helpful to\n// delegate the final work to defaultMakeCacheKey, which is why we export it\n// here. However, you may want to avoid defaultMakeCacheKey if your runtime\n// does not support WeakMap, or you have the ability to return a string key.\n// In those cases, just write your own custom makeCacheKey functions.\nlet defaultKeyTrie: Trie<object> | undefined;\nexport function defaultMakeCacheKey(...args: any[]): object {\n  const trie = defaultKeyTrie || (\n    defaultKeyTrie = new Trie(typeof WeakMap === \"function\")\n  );\n  return trie.lookupArray(args);\n}\n\n// If you're paranoid about memory leaks, or you want to avoid using WeakMap\n// under the hood, but you still need the behavior of defaultMakeCacheKey,\n// import this constructor to create your own tries.\nexport { Trie as KeyTrie }\n\nexport type OptimisticWrapperFunction<\n  TArgs extends any[],\n  TResult,\n  TKeyArgs extends any[] = TArgs,\n  TCacheKey = any,\n> = ((...args: TArgs) => TResult) & {\n  // Get the current number of Entry objects in the LRU cache.\n  readonly size: number;\n\n  // Snapshot of wrap options used to create this wrapper function.\n  options: OptionsWithCacheInstance<TArgs, TKeyArgs, TCacheKey>;\n\n  // \"Dirty\" any cached Entry stored for the given arguments, marking that Entry\n  // and its ancestors as potentially needing to be recomputed. The .dirty(...)\n  // method of an optimistic function takes the same parameter types as the\n  // original function by default, unless a keyArgs function is configured, and\n  // then it matters that .dirty takes TKeyArgs instead of TArgs.\n  dirty: (...args: TKeyArgs) => void;\n  // A version of .dirty that accepts a key returned by .getKey.\n  dirtyKey: (key: TCacheKey | undefined) => void;\n\n  // Examine the current value without recomputing it.\n  peek: (...args: TKeyArgs) => TResult | undefined;\n  // A version of .peek that accepts a key returned by .getKey.\n  peekKey: (key: TCacheKey | undefined) => TResult | undefined;\n\n  // Completely remove the entry from the cache, dirtying any parent entries.\n  forget: (...args: TKeyArgs) => boolean;\n  // A version of .forget that accepts a key returned by .getKey.\n  forgetKey: (key: TCacheKey | undefined) => boolean;\n\n  // In order to use the -Key version of the above functions, you need a key\n  // rather than the arguments used to compute the key. These two functions take\n  // TArgs or TKeyArgs and return the corresponding TCacheKey. If no keyArgs\n  // function has been configured, TArgs will be the same as TKeyArgs, and thus\n  // getKey and makeCacheKey will be synonymous.\n  getKey: (...args: TArgs) => TCacheKey | undefined;\n\n  // This property is equivalent to the makeCacheKey function provided in the\n  // OptimisticWrapOptions, or (if no options.makeCacheKey function is provided)\n  // a default implementation of makeCacheKey. This function is also exposed as\n  // optimistic.options.makeCacheKey, somewhat redundantly.\n  makeCacheKey: (...args: TKeyArgs) => TCacheKey | undefined;\n};\n\nexport { CommonCache }\nexport interface CommonCacheConstructor<TCacheKey, TResult, TArgs extends any[]> extends Function {\n  new <K extends TCacheKey, V extends Entry<TArgs, TResult>>(max?: number, dispose?: (value: V, key?: K) => void): CommonCache<K,V>;\n}\n\nexport type OptimisticWrapOptions<\n  TArgs extends any[],\n  TKeyArgs extends any[] = TArgs,\n  TCacheKey = any,\n  TResult = any,\n> = {\n  // The maximum number of cache entries that should be retained before the\n  // cache begins evicting the oldest ones.\n  max?: number;\n  // Transform the raw arguments to some other type of array, which will then\n  // be passed to makeCacheKey.\n  keyArgs?: (...args: TArgs) => TKeyArgs;\n  // The makeCacheKey function takes the same arguments that were passed to\n  // the wrapper function and returns a single value that can be used as a key\n  // in a Map to identify the cached result.\n  makeCacheKey?: (...args: NoInfer<TKeyArgs>) => TCacheKey | undefined;\n  // Called when a new value is computed to allow efficient normalization of\n  // results over time, for example by returning older if equal(newer, older).\n  normalizeResult?: (newer: TResult, older: TResult) => TResult;\n  // If provided, the subscribe function should either return an unsubscribe\n  // function or return nothing.\n  subscribe?: (...args: TArgs) => void | (() => any);\n  cache?: CommonCache<NoInfer<TCacheKey>, Entry<NoInfer<TArgs>, NoInfer<TResult>>>\n    | CommonCacheConstructor<NoInfer<TCacheKey>, NoInfer<TResult>, NoInfer<TArgs>>;\n};\n\nexport interface OptionsWithCacheInstance<\n  TArgs extends any[],\n  TKeyArgs extends any[] = TArgs,\n  TCacheKey = any,\n  TResult = any,\n> extends OptimisticWrapOptions<TArgs, TKeyArgs, TCacheKey, TResult> {\n  cache: CommonCache<NoInfer<TCacheKey>, Entry<NoInfer<TArgs>, NoInfer<TResult>>>;\n};\n\nconst caches = new Set<CommonCache<any, AnyEntry>>();\n\nexport function wrap<\n  TArgs extends any[],\n  TResult,\n  TKeyArgs extends any[] = TArgs,\n  TCacheKey = any,\n>(originalFunction: (...args: TArgs) => TResult, {\n  max = Math.pow(2, 16),\n  keyArgs,\n  makeCacheKey = (defaultMakeCacheKey as () => TCacheKey),\n  normalizeResult,\n  subscribe,\n  cache: cacheOption = StrongCache,\n}: OptimisticWrapOptions<TArgs, TKeyArgs, TCacheKey, TResult> = Object.create(null)) {\n  const cache: CommonCache<TCacheKey, Entry<TArgs, TResult>> =\n    typeof cacheOption === \"function\"\n      ? new cacheOption(max, entry => entry.dispose())\n      : cacheOption;\n\n  const optimistic = function (): TResult {\n    const key = makeCacheKey.apply(\n      null,\n      keyArgs ? keyArgs.apply(null, arguments as any) : arguments as any\n    );\n\n    if (key === void 0) {\n      return originalFunction.apply(null, arguments as any);\n    }\n\n    let entry = cache.get(key)!;\n    if (!entry) {\n      cache.set(key, entry = new Entry(originalFunction));\n      entry.normalizeResult = normalizeResult;\n      entry.subscribe = subscribe;\n      // Give the Entry the ability to trigger cache.delete(key), even though\n      // the Entry itself does not know about key or cache.\n      entry.forget = () => cache.delete(key);\n    }\n\n    const value = entry.recompute(\n      Array.prototype.slice.call(arguments) as TArgs,\n    );\n\n    // Move this entry to the front of the least-recently used queue,\n    // since we just finished computing its value.\n    cache.set(key, entry);\n\n    caches.add(cache);\n\n    // Clean up any excess entries in the cache, but only if there is no\n    // active parent entry, meaning we're not in the middle of a larger\n    // computation that might be flummoxed by the cleaning.\n    if (! parentEntrySlot.hasValue()) {\n      caches.forEach(cache => cache.clean());\n      caches.clear();\n    }\n\n    return value;\n  } as OptimisticWrapperFunction<TArgs, TResult, TKeyArgs, TCacheKey>;\n\n  Object.defineProperty(optimistic, \"size\", {\n    get: () => cache.size,\n    configurable: false,\n    enumerable: false,\n  });\n\n  Object.freeze(optimistic.options = {\n    max,\n    keyArgs,\n    makeCacheKey,\n    normalizeResult,\n    subscribe,\n    cache,\n  });\n\n  function dirtyKey(key: TCacheKey | undefined) {\n    const entry = key && cache.get(key);\n    if (entry) {\n      entry.setDirty();\n    }\n  }\n  optimistic.dirtyKey = dirtyKey;\n  optimistic.dirty = function dirty() {\n    dirtyKey(makeCacheKey.apply(null, arguments as any));\n  };\n\n  function peekKey(key: TCacheKey | undefined) {\n    const entry = key && cache.get(key);\n    if (entry) {\n      return entry.peek();\n    }\n  }\n  optimistic.peekKey = peekKey;\n  optimistic.peek = function peek() {\n    return peekKey(makeCacheKey.apply(null, arguments as any));\n  };\n\n  function forgetKey(key: TCacheKey | undefined) {\n    return key ? cache.delete(key) : false;\n  }\n  optimistic.forgetKey = forgetKey;\n  optimistic.forget = function forget() {\n    return forgetKey(makeCacheKey.apply(null, arguments as any));\n  };\n\n  optimistic.makeCacheKey = makeCacheKey;\n  optimistic.getKey = keyArgs ? function getKey() {\n    return makeCacheKey.apply(null, keyArgs.apply(null, arguments as any));\n  } : makeCacheKey as (...args: any[]) => TCacheKey | undefined;\n\n  return Object.freeze(optimistic);\n}\n","import { Trie } from \"@wry/trie\";\nimport { canUseWeakMap, canUseWeakSet } from \"../common/canUse.js\";\nimport { checkDocument } from \"./getFromAST.js\";\nimport { invariant } from \"../globals/index.js\";\nimport type { DocumentNode } from \"graphql\";\nimport { WeakCache } from \"@wry/caches\";\nimport { wrap } from \"optimism\";\nimport { cacheSizes } from \"../caching/index.js\";\n\nexport type DocumentTransformCacheKey = ReadonlyArray<unknown>;\n\ntype TransformFn = (document: DocumentNode) => DocumentNode;\n\ninterface DocumentTransformOptions {\n  /**\n   * Determines whether to cache the transformed GraphQL document. Caching can speed up repeated calls to the document transform for the same input document. Set to `false` to completely disable caching for the document transform. When disabled, this option takes precedence over the [`getCacheKey`](#getcachekey) option.\n   *\n   * The default value is `true`.\n   */\n  cache?: boolean;\n  /**\n   * Defines a custom cache key for a GraphQL document that will determine whether to re-run the document transform when given the same input GraphQL document. Returns an array that defines the cache key. Return `undefined` to disable caching for that GraphQL document.\n   *\n   * > **Note:** The items in the array may be any type, but also need to be referentially stable to guarantee a stable cache key.\n   *\n   * The default implementation of this function returns the `document` as the cache key.\n   */\n  getCacheKey?: (\n    document: DocumentNode\n  ) => DocumentTransformCacheKey | undefined;\n}\n\nfunction identity(document: DocumentNode) {\n  return document;\n}\n\nexport class DocumentTransform {\n  private readonly transform: TransformFn;\n  private cached: boolean;\n\n  private readonly resultCache =\n    canUseWeakSet ? new WeakSet<DocumentNode>() : new Set<DocumentNode>();\n\n  // This default implementation of getCacheKey can be overridden by providing\n  // options.getCacheKey to the DocumentTransform constructor. In general, a\n  // getCacheKey function may either return an array of keys (often including\n  // the document) to be used as a cache key, or undefined to indicate the\n  // transform for this document should not be cached.\n  private getCacheKey(\n    document: DocumentNode\n  ): DocumentTransformCacheKey | undefined {\n    return [document];\n  }\n\n  static identity() {\n    // No need to cache this transform since it just returns the document\n    // unchanged. This should save a bit of memory that would otherwise be\n    // needed to populate the `documentCache` of this transform.\n    return new DocumentTransform(identity, { cache: false });\n  }\n\n  static split(\n    predicate: (document: DocumentNode) => boolean,\n    left: DocumentTransform,\n    right: DocumentTransform = DocumentTransform.identity()\n  ) {\n    return Object.assign(\n      new DocumentTransform(\n        (document) => {\n          const documentTransform = predicate(document) ? left : right;\n\n          return documentTransform.transformDocument(document);\n        },\n        // Reasonably assume both `left` and `right` transforms handle their own caching\n        { cache: false }\n      ),\n      { left, right }\n    );\n  }\n\n  constructor(\n    transform: TransformFn,\n    options: DocumentTransformOptions = Object.create(null)\n  ) {\n    this.transform = transform;\n\n    if (options.getCacheKey) {\n      // Override default `getCacheKey` function, which returns [document].\n      this.getCacheKey = options.getCacheKey;\n    }\n    this.cached = options.cache !== false;\n\n    this.resetCache();\n  }\n\n  /**\n   * Resets the internal cache of this transform, if it has one.\n   */\n  resetCache() {\n    if (this.cached) {\n      const stableCacheKeys = new Trie<WeakKey>(canUseWeakMap);\n      this.performWork = wrap(\n        DocumentTransform.prototype.performWork.bind(this),\n        {\n          makeCacheKey: (document) => {\n            const cacheKeys = this.getCacheKey(document);\n            if (cacheKeys) {\n              invariant(\n                Array.isArray(cacheKeys),\n                \"`getCacheKey` must return an array or undefined\"\n              );\n              return stableCacheKeys.lookupArray(cacheKeys);\n            }\n          },\n          max: cacheSizes[\"documentTransform.cache\"],\n          cache: WeakCache<any, any>,\n        }\n      );\n    }\n  }\n\n  private performWork(document: DocumentNode) {\n    checkDocument(document);\n    return this.transform(document);\n  }\n\n  transformDocument(document: DocumentNode) {\n    // If a user passes an already transformed result back to this function,\n    // immediately return it.\n    if (this.resultCache.has(document)) {\n      return document;\n    }\n\n    const transformedDocument = this.performWork(document);\n\n    this.resultCache.add(transformedDocument);\n\n    return transformedDocument;\n  }\n\n  concat(otherTransform: DocumentTransform): DocumentTransform {\n    return Object.assign(\n      new DocumentTransform(\n        (document) => {\n          return otherTransform.transformDocument(\n            this.transformDocument(document)\n          );\n        },\n        // Reasonably assume both transforms handle their own caching\n        { cache: false }\n      ),\n      {\n        left: this,\n        right: otherTransform,\n      }\n    );\n  }\n\n  /**\n   * @internal\n   * Used to iterate through all transforms that are concatenations or `split` links.\n   */\n  readonly left?: DocumentTransform;\n  /**\n   * @internal\n   * Used to iterate through all transforms that are concatenations or `split` links.\n   */\n  readonly right?: DocumentTransform;\n}\n","import type { Observer } from \"./Observable.js\";\nimport { Observable } from \"./Observable.js\";\n\n// Like Observable.prototype.map, except that the mapping function can\n// optionally return a Promise (or be async).\nexport function asyncMap<V, R>(\n  observable: Observable<V>,\n  mapFn: (value: V) => R | PromiseLike<R>,\n  catchFn?: (error: any) => R | PromiseLike<R>\n): Observable<R> {\n  return new Observable<R>((observer) => {\n    let promiseQueue = {\n      // Normally we would initialize promiseQueue to Promise.resolve(), but\n      // in this case, for backwards compatibility, we need to be careful to\n      // invoke the first callback synchronously.\n      then(callback: () => any) {\n        return new Promise((resolve) => resolve(callback()));\n      },\n    } as Promise<void>;\n\n    function makeCallback(\n      examiner: typeof mapFn | typeof catchFn,\n      key: \"next\" | \"error\"\n    ): (arg: any) => void {\n      return (arg) => {\n        if (examiner) {\n          const both = () =>\n            // If the observer is closed, we don't want to continue calling the\n            // mapping function - it's result will be swallowed anyways.\n            observer.closed ?\n              /* will be swallowed */ (0 as any)\n            : examiner(arg);\n\n          promiseQueue = promiseQueue.then(both, both).then(\n            (result) => observer.next(result),\n            (error) => observer.error(error)\n          );\n        } else {\n          observer[key](arg);\n        }\n      };\n    }\n\n    const handler: Observer<V> = {\n      next: makeCallback(mapFn, \"next\"),\n      error: makeCallback(catchFn, \"error\"),\n      complete() {\n        // no need to reassign `promiseQueue`, after `observer.complete`,\n        // the observer will be closed and short-circuit everything anyways\n        /*promiseQueue = */ promiseQueue.then(() => observer.complete());\n      },\n    };\n\n    const sub = observable.subscribe(handler);\n    return () => sub.unsubscribe();\n  });\n}\n","import type { FetchResult } from \"../../link/core/index.js\";\nimport { isNonEmptyArray } from \"./arrays.js\";\nimport { isExecutionPatchIncrementalResult } from \"./incrementalResult.js\";\n\nexport function graphQLResultHasError<T>(result: FetchResult<T>): boolean {\n  const errors = getGraphQLErrorsFromResult(result);\n  return isNonEmptyArray(errors);\n}\n\nexport function getGraphQLErrorsFromResult<T>(result: FetchResult<T>) {\n  const graphQLErrors =\n    isNonEmptyArray(result.errors) ? result.errors.slice(0) : [];\n\n  if (\n    isExecutionPatchIncrementalResult(result) &&\n    isNonEmptyArray(result.incremental)\n  ) {\n    result.incremental.forEach((incrementalResult) => {\n      if (incrementalResult.errors) {\n        graphQLErrors.push(...incrementalResult.errors);\n      }\n    });\n  }\n  return graphQLErrors;\n}\n","import type { Observer } from \"./Observable.js\";\n\nexport function iterateObserversSafely<E, A>(\n  observers: Set<Observer<E>>,\n  method: keyof Observer<E>,\n  argument?: A\n) {\n  // In case observers is modified during iteration, we need to commit to the\n  // original elements, which also provides an opportunity to filter them down\n  // to just the observers with the given method.\n  const observersWithMethod: Observer<E>[] = [];\n  observers.forEach((obs) => obs[method] && observersWithMethod.push(obs));\n  observersWithMethod.forEach((obs) => (obs as any)[method](argument));\n}\n","import { Observable } from \"./Observable.js\";\nimport { canUseSymbol } from \"../common/canUse.js\";\n\n// Generic implementations of Observable.prototype methods like map and\n// filter need to know how to create a new Observable from an Observable\n// subclass (like Concast or ObservableQuery). Those methods assume\n// (perhaps unwisely?) that they can call the subtype's constructor with a\n// Subscriber function, even though the subclass constructor might expect\n// different parameters. Defining this static Symbol.species property on\n// the subclass is a hint to generic Observable code to use the default\n// constructor instead of trying to do `new Subclass(observer => ...)`.\nexport function fixObservableSubclass<\n  S extends new (...args: any[]) => Observable<any>,\n>(subclass: S): S {\n  function set(key: symbol | string) {\n    // Object.defineProperty is necessary because the Symbol.species\n    // property is a getter by default in modern JS environments, so we\n    // can't assign to it with a normal assignment expression.\n    Object.defineProperty(subclass, key, { value: Observable });\n  }\n  if (canUseSymbol && Symbol.species) {\n    set(Symbol.species);\n  }\n  // The \"@@species\" string is used as a fake Symbol.species value in some\n  // polyfill systems (including the SymbolSpecies variable used by\n  // zen-observable), so we should set it as well, to be safe.\n  set(\"@@species\");\n  return subclass;\n}\n","import type {\n  Observer,\n  ObservableSubscription,\n  Subscriber,\n} from \"./Observable.js\";\nimport { Observable } from \"./Observable.js\";\nimport { iterateObserversSafely } from \"./iteration.js\";\nimport { fixObservableSubclass } from \"./subclassing.js\";\n\ntype MaybeAsync<T> = T | PromiseLike<T>;\n\nfunction isPromiseLike<T>(value: MaybeAsync<T>): value is PromiseLike<T> {\n  return value && typeof (value as any).then === \"function\";\n}\n\n// Any individual Source<T> can be an Observable<T> or a promise for one.\ntype Source<T> = MaybeAsync<Observable<T>>;\n\nexport type ConcastSourcesIterable<T> = Iterable<Source<T>>;\nexport type ConcastSourcesArray<T> = Array<Source<T>>;\n\n// A Concast<T> observable concatenates the given sources into a single\n// non-overlapping sequence of Ts, automatically unwrapping any promises,\n// and broadcasts the T elements of that sequence to any number of\n// subscribers, all without creating a bunch of intermediary Observable\n// wrapper objects.\n//\n// Even though any number of observers can subscribe to the Concast, each\n// source observable is guaranteed to receive at most one subscribe call,\n// and the results are multicast to all observers.\n//\n// In addition to broadcasting every next/error message to this.observers,\n// the Concast stores the most recent message using this.latest, so any\n// new observers can immediately receive the latest message, even if it\n// was originally delivered in the past. This behavior means we can assume\n// every active observer in this.observers has received the same most\n// recent message.\n//\n// With the exception of this.latest replay, a Concast is a \"hot\"\n// observable in the sense that it does not replay past results from the\n// beginning of time for each new observer.\n//\n// Could we have used some existing RxJS class instead? Concast<T> is\n// similar to a BehaviorSubject<T>, because it is multicast and redelivers\n// the latest next/error message to new subscribers. Unlike Subject<T>,\n// Concast<T> does not expose an Observer<T> interface (this.handlers is\n// intentionally private), since Concast<T> gets its inputs from the\n// concatenated sources. If we ever switch to RxJS, there may be some\n// value in reusing their code, but for now we use zen-observable, which\n// does not contain any Subject implementations.\nexport class Concast<T> extends Observable<T> {\n  // Active observers receiving broadcast messages. Thanks to this.latest,\n  // we can assume all observers in this Set have received the same most\n  // recent message, though possibly at different times in the past.\n  private observers = new Set<Observer<T>>();\n\n  // This property starts off undefined to indicate the initial\n  // subscription has not yet begun, then points to each source\n  // subscription in turn, and finally becomes null after the sources have\n  // been exhausted. After that, it stays null.\n  private sub?: ObservableSubscription | null;\n\n  // Not only can the individual elements of the iterable be promises, but\n  // also the iterable itself can be wrapped in a promise.\n  constructor(sources: MaybeAsync<ConcastSourcesIterable<T>> | Subscriber<T>) {\n    super((observer) => {\n      this.addObserver(observer);\n      return () => this.removeObserver(observer);\n    });\n\n    // Suppress rejection warnings for this.promise, since it's perfectly\n    // acceptable to pay no attention to this.promise if you're consuming\n    // the results through the normal observable API.\n    this.promise.catch((_) => {});\n\n    // If someone accidentally tries to create a Concast using a subscriber\n    // function, recover by creating an Observable from that subscriber and\n    // using it as the source.\n    if (typeof sources === \"function\") {\n      sources = [new Observable(sources)];\n    }\n\n    if (isPromiseLike(sources)) {\n      sources.then((iterable) => this.start(iterable), this.handlers.error);\n    } else {\n      this.start(sources);\n    }\n  }\n\n  // A consumable array of source observables, incrementally consumed each time\n  // this.handlers.complete is called. This private field is not initialized\n  // until the concast.start method is called, which can happen asynchronously\n  // if a Promise is passed to the Concast constructor, so undefined is a\n  // possible value for this.sources before concast.start is called.\n  private sources: Source<T>[] | undefined;\n\n  private start(sources: ConcastSourcesIterable<T>) {\n    if (this.sub !== void 0) return;\n\n    // In practice, sources is most often simply an Array of observables.\n    // TODO Consider using sources[Symbol.iterator]() to take advantage\n    // of the laziness of non-Array iterables.\n    this.sources = Array.from(sources);\n\n    // Calling this.handlers.complete() kicks off consumption of the first\n    // source observable. It's tempting to do this step lazily in\n    // addObserver, but this.promise can be accessed without calling\n    // addObserver, so consumption needs to begin eagerly.\n    this.handlers.complete();\n  }\n\n  private deliverLastMessage(observer: Observer<T>) {\n    if (this.latest) {\n      const nextOrError = this.latest[0];\n      const method = observer[nextOrError];\n      if (method) {\n        method.call(observer, this.latest[1]);\n      }\n      // If the subscription is already closed, and the last message was\n      // a 'next' message, simulate delivery of the final 'complete'\n      // message again.\n      if (this.sub === null && nextOrError === \"next\" && observer.complete) {\n        observer.complete();\n      }\n    }\n  }\n\n  public addObserver(observer: Observer<T>) {\n    if (!this.observers.has(observer)) {\n      // Immediately deliver the most recent message, so we can always\n      // be sure all observers have the latest information.\n      this.deliverLastMessage(observer);\n      this.observers.add(observer);\n    }\n  }\n\n  public removeObserver(observer: Observer<T>) {\n    if (this.observers.delete(observer) && this.observers.size < 1) {\n      // In case there are still any listeners in this.nextResultListeners, and\n      // no error or completion has been broadcast yet, make sure those\n      // observers have a chance to run and then remove themselves from\n      // this.observers.\n      this.handlers.complete();\n    }\n  }\n\n  // Any Concast object can be trivially converted to a Promise, without\n  // having to create a new wrapper Observable. This promise provides an\n  // easy way to observe the final state of the Concast.\n  private resolve!: (result?: T | PromiseLike<T>) => void;\n  private reject!: (reason: any) => void;\n  public readonly promise = new Promise<T | undefined>((resolve, reject) => {\n    this.resolve = resolve;\n    this.reject = reject;\n  });\n\n  // Name and argument of the most recently invoked observer method, used\n  // to deliver latest results immediately to new observers.\n  private latest?: [\"next\", T] | [\"error\", any];\n\n  // Bound handler functions that can be reused for every internal\n  // subscription.\n  private handlers = {\n    next: (result: T) => {\n      if (this.sub !== null) {\n        this.latest = [\"next\", result];\n        this.notify(\"next\", result);\n        iterateObserversSafely(this.observers, \"next\", result);\n      }\n    },\n\n    error: (error: any) => {\n      const { sub } = this;\n      if (sub !== null) {\n        // Delay unsubscribing from the underlying subscription slightly,\n        // so that immediately subscribing another observer can keep the\n        // subscription active.\n        if (sub) setTimeout(() => sub.unsubscribe());\n        this.sub = null;\n        this.latest = [\"error\", error];\n        this.reject(error);\n        this.notify(\"error\", error);\n        iterateObserversSafely(this.observers, \"error\", error);\n      }\n    },\n\n    complete: () => {\n      const { sub, sources = [] } = this;\n      if (sub !== null) {\n        // If complete is called before concast.start, this.sources may be\n        // undefined, so we use a default value of [] for sources. That works\n        // here because it falls into the if (!value) {...} block, which\n        // appropriately terminates the Concast, even if this.sources might\n        // eventually have been initialized to a non-empty array.\n        const value = sources.shift();\n        if (!value) {\n          if (sub) setTimeout(() => sub.unsubscribe());\n          this.sub = null;\n          if (this.latest && this.latest[0] === \"next\") {\n            this.resolve(this.latest[1]);\n          } else {\n            this.resolve();\n          }\n          this.notify(\"complete\");\n          // We do not store this.latest = [\"complete\"], because doing so\n          // discards useful information about the previous next (or\n          // error) message. Instead, if new observers subscribe after\n          // this Concast has completed, they will receive the final\n          // 'next' message (unless there was an error) immediately\n          // followed by a 'complete' message (see addObserver).\n          iterateObserversSafely(this.observers, \"complete\");\n        } else if (isPromiseLike(value)) {\n          value.then(\n            (obs) => (this.sub = obs.subscribe(this.handlers)),\n            this.handlers.error\n          );\n        } else {\n          this.sub = value.subscribe(this.handlers);\n        }\n      }\n    },\n  };\n\n  private nextResultListeners = new Set<NextResultListener>();\n\n  private notify(\n    method: Parameters<NextResultListener>[0],\n    arg?: Parameters<NextResultListener>[1]\n  ) {\n    const { nextResultListeners } = this;\n    if (nextResultListeners.size) {\n      // Replacing this.nextResultListeners first ensures it does not grow while\n      // we are iterating over it, potentially leading to infinite loops.\n      this.nextResultListeners = new Set();\n      nextResultListeners.forEach((listener) => listener(method, arg));\n    }\n  }\n\n  // We need a way to run callbacks just *before* the next result (or error or\n  // completion) is delivered by this Concast, so we can be sure any code that\n  // runs as a result of delivering that result/error observes the effects of\n  // running the callback(s). It was tempting to reuse the Observer type instead\n  // of introducing NextResultListener, but that messes with the sizing and\n  // maintenance of this.observers, and ends up being more code overall.\n  beforeNext(callback: NextResultListener) {\n    let called = false;\n    this.nextResultListeners.add((method, arg) => {\n      if (!called) {\n        called = true;\n        callback(method, arg);\n      }\n    });\n  }\n\n  // A public way to abort observation and broadcast.\n  public cancel = (reason: any) => {\n    this.reject(reason);\n    this.sources = [];\n    this.handlers.complete();\n  };\n}\n\ntype NextResultListener = (\n  method: \"next\" | \"error\" | \"complete\",\n  arg?: any\n) => any;\n\n// Necessary because the Concast constructor has a different signature\n// than the Observable constructor.\nfixObservableSubclass(Concast);\n","/**\n * The current status of a query’s execution in our system.\n */\nexport enum NetworkStatus {\n  /**\n   * The query has never been run before and the query is now currently running. A query will still\n   * have this network status even if a partial data result was returned from the cache, but a\n   * query was dispatched anyway.\n   */\n  loading = 1,\n\n  /**\n   * If `setVariables` was called and a query was fired because of that then the network status\n   * will be `setVariables` until the result of that query comes back.\n   */\n  setVariables = 2,\n\n  /**\n   * Indicates that `fetchMore` was called on this query and that the query created is currently in\n   * flight.\n   */\n  fetchMore = 3,\n\n  /**\n   * Similar to the `setVariables` network status. It means that `refetch` was called on a query\n   * and the refetch request is currently in flight.\n   */\n  refetch = 4,\n\n  /**\n   * Indicates that a polling query is currently in flight. So for example if you are polling a\n   * query every 10 seconds then the network status will switch to `poll` every 10 seconds whenever\n   * a poll request has been sent but not resolved.\n   */\n  poll = 6,\n\n  /**\n   * No request is in flight for this query, and no errors happened. Everything is OK.\n   */\n  ready = 7,\n\n  /**\n   * No request is in flight for this query, but one or more errors were detected.\n   */\n  error = 8,\n}\n\n/**\n * Returns true if there is currently a network request in flight according to a given network\n * status.\n */\nexport function isNetworkRequestInFlight(\n  networkStatus?: NetworkStatus\n): boolean {\n  return networkStatus ? networkStatus < 7 : false;\n}\n\n/**\n * Returns true if the network request is in ready or error state according to a given network\n * status.\n */\nexport function isNetworkRequestSettled(\n  networkStatus?: NetworkStatus\n): boolean {\n  return networkStatus === 7 || networkStatus === 8;\n}\n","import type { TupleToIntersection } from \"./mergeDeep.js\";\n\n/**\n * Merges the provided objects shallowly and removes\n * all properties with an `undefined` value\n */\nexport function compact<TArgs extends any[]>(\n  ...objects: TArgs\n): TupleToIntersection<TArgs> {\n  const result = Object.create(null);\n\n  objects.forEach((obj) => {\n    if (!obj) return;\n    Object.keys(obj).forEach((key) => {\n      const value = (obj as any)[key];\n      if (value !== void 0) {\n        result[key] = value;\n      }\n    });\n  });\n\n  return result;\n}\n","const { toString } = Object.prototype;\n\n/**\n * Deeply clones a value to create a new instance.\n */\nexport function cloneDeep<T>(value: T): T {\n  return cloneDeepHelper(value);\n}\n\nfunction cloneDeepHelper<T>(val: T, seen?: Map<any, any>): T {\n  switch (toString.call(val)) {\n    case \"[object Array]\": {\n      seen = seen || new Map();\n      if (seen.has(val)) return seen.get(val);\n      const copy: T & any[] = (val as any).slice(0);\n      seen.set(val, copy);\n      copy.forEach(function (child, i) {\n        copy[i] = cloneDeepHelper(child, seen);\n      });\n      return copy;\n    }\n\n    case \"[object Object]\": {\n      seen = seen || new Map();\n      if (seen.has(val)) return seen.get(val);\n      // High fidelity polyfills of Object.create and Object.getPrototypeOf are\n      // possible in all JS environments, so we will assume they exist/work.\n      const copy = Object.create(Object.getPrototypeOf(val));\n      seen.set(val, copy);\n      Object.keys(val as T & Record<string, any>).forEach((key) => {\n        copy[key] = cloneDeepHelper((val as any)[key], seen);\n      });\n      return copy;\n    }\n\n    default:\n      return val;\n  }\n}\n","import equal from \"@wry/equality\";\n\nimport type {\n  DirectiveNode,\n  DocumentNode,\n  FieldNode,\n  FragmentDefinitionNode,\n  FragmentSpreadNode,\n  InlineFragmentNode,\n  SelectionNode,\n  SelectionSetNode,\n} from \"graphql\";\n\nimport type { ApolloQueryResult, OperationVariables } from \"./types.js\";\n\nimport type { FragmentMap } from \"../utilities/index.js\";\nimport {\n  createFragmentMap,\n  getFragmentDefinitions,\n  getFragmentFromSelection,\n  getMainDefinition,\n  isField,\n  resultKeyNameFromField,\n  shouldInclude,\n} from \"../utilities/index.js\";\n\n// Returns true if aResult and bResult are deeply equal according to the fields\n// selected by the given query, ignoring any fields marked as @nonreactive.\nexport function equalByQuery(\n  query: DocumentNode,\n  { data: aData, ...aRest }: Partial<ApolloQueryResult<unknown>>,\n  { data: bData, ...bRest }: Partial<ApolloQueryResult<unknown>>,\n  variables?: OperationVariables\n): boolean {\n  return (\n    equal(aRest, bRest) &&\n    equalBySelectionSet(getMainDefinition(query).selectionSet, aData, bData, {\n      fragmentMap: createFragmentMap(getFragmentDefinitions(query)),\n      variables,\n    })\n  );\n}\n\n// Encapsulates the information used by equalBySelectionSet that does not change\n// during the recursion.\ninterface CompareContext<TVariables> {\n  fragmentMap: FragmentMap;\n  variables: TVariables | undefined;\n}\n\nfunction equalBySelectionSet(\n  selectionSet: SelectionSetNode,\n  aResult: any,\n  bResult: any,\n  context: CompareContext<OperationVariables>\n): boolean {\n  if (aResult === bResult) {\n    return true;\n  }\n\n  const seenSelections = new Set<SelectionNode>();\n\n  // Returning true from this Array.prototype.every callback function skips the\n  // current field/subtree. Returning false aborts the entire traversal\n  // immediately, causing equalBySelectionSet to return false.\n  return selectionSet.selections.every((selection) => {\n    // Avoid re-processing the same selection at the same level of recursion, in\n    // case the same field gets included via multiple indirect fragment spreads.\n    if (seenSelections.has(selection)) return true;\n    seenSelections.add(selection);\n\n    // Ignore @skip(if: true) and @include(if: false) fields.\n    if (!shouldInclude(selection, context.variables)) return true;\n\n    // If the field or (named) fragment spread has a @nonreactive directive on\n    // it, we don't care if it's different, so we pretend it's the same.\n    if (selectionHasNonreactiveDirective(selection)) return true;\n\n    if (isField(selection)) {\n      const resultKey = resultKeyNameFromField(selection);\n      const aResultChild = aResult && aResult[resultKey];\n      const bResultChild = bResult && bResult[resultKey];\n      const childSelectionSet = selection.selectionSet;\n\n      if (!childSelectionSet) {\n        // These are scalar values, so we can compare them with deep equal\n        // without redoing the main recursive work.\n        return equal(aResultChild, bResultChild);\n      }\n\n      const aChildIsArray = Array.isArray(aResultChild);\n      const bChildIsArray = Array.isArray(bResultChild);\n      if (aChildIsArray !== bChildIsArray) return false;\n      if (aChildIsArray && bChildIsArray) {\n        const length = aResultChild.length;\n        if (bResultChild.length !== length) {\n          return false;\n        }\n        for (let i = 0; i < length; ++i) {\n          if (\n            !equalBySelectionSet(\n              childSelectionSet,\n              aResultChild[i],\n              bResultChild[i],\n              context\n            )\n          ) {\n            return false;\n          }\n        }\n        return true;\n      }\n\n      return equalBySelectionSet(\n        childSelectionSet,\n        aResultChild,\n        bResultChild,\n        context\n      );\n    } else {\n      const fragment = getFragmentFromSelection(selection, context.fragmentMap);\n      if (fragment) {\n        // The fragment might === selection if it's an inline fragment, but\n        // could be !== if it's a named fragment ...spread.\n        if (selectionHasNonreactiveDirective(fragment)) return true;\n\n        return equalBySelectionSet(\n          fragment.selectionSet,\n          // Notice that we reuse the same aResult and bResult values here,\n          // since the fragment ...spread does not specify a field name, but\n          // consists of multiple fields (within the fragment's selection set)\n          // that should be applied to the current result value(s).\n          aResult,\n          bResult,\n          context\n        );\n      }\n    }\n  });\n}\n\nfunction selectionHasNonreactiveDirective(\n  selection:\n    | FieldNode\n    | InlineFragmentNode\n    | FragmentSpreadNode\n    | FragmentDefinitionNode\n): boolean {\n  return (\n    !!selection.directives && selection.directives.some(directiveIsNonreactive)\n  );\n}\n\nfunction directiveIsNonreactive(dir: DirectiveNode): boolean {\n  return dir.name.value === \"nonreactive\";\n}\n","import { invariant } from \"../utilities/globals/index.js\";\nimport type { DocumentNode } from \"graphql\";\nimport { equal } from \"@wry/equality\";\n\nimport { NetworkStatus, isNetworkRequestInFlight } from \"./networkStatus.js\";\nimport type {\n  Concast,\n  Observer,\n  ObservableSubscription,\n} from \"../utilities/index.js\";\nimport {\n  cloneDeep,\n  compact,\n  getOperationDefinition,\n  Observable,\n  iterateObserversSafely,\n  fixObservableSubclass,\n  getQueryDefinition,\n} from \"../utilities/index.js\";\nimport type { ApolloError } from \"../errors/index.js\";\nimport type { QueryManager } from \"./QueryManager.js\";\nimport type {\n  ApolloQueryResult,\n  OperationVariables,\n  TypedDocumentNode,\n} from \"./types.js\";\nimport type {\n  WatchQueryOptions,\n  FetchMoreQueryOptions,\n  SubscribeToMoreOptions,\n  NextFetchPolicyContext,\n  WatchQueryFetchPolicy,\n} from \"./watchQueryOptions.js\";\nimport type { QueryInfo } from \"./QueryInfo.js\";\nimport type { MissingFieldError } from \"../cache/index.js\";\nimport type { MissingTree } from \"../cache/core/types/common.js\";\nimport { equalByQuery } from \"./equalByQuery.js\";\nimport type { TODO } from \"../utilities/types/TODO.js\";\n\nconst { assign, hasOwnProperty } = Object;\n\nexport interface FetchMoreOptions<\n  TData = any,\n  TVariables = OperationVariables,\n> {\n  updateQuery?: (\n    previousQueryResult: TData,\n    options: {\n      fetchMoreResult?: TData;\n      variables?: TVariables;\n    }\n  ) => TData;\n}\n\nexport interface UpdateQueryOptions<TVariables> {\n  variables?: TVariables;\n}\n\ninterface Last<TData, TVariables> {\n  result: ApolloQueryResult<TData>;\n  variables?: TVariables;\n  error?: ApolloError;\n}\n\nexport class ObservableQuery<\n  TData = any,\n  TVariables extends OperationVariables = OperationVariables,\n> extends Observable<ApolloQueryResult<TData>> {\n  public readonly options: WatchQueryOptions<TVariables, TData>;\n  public readonly queryId: string;\n  public readonly queryName?: string;\n\n  // The `query` computed property will always reflect the document transformed\n  // by the last run query. `this.options.query` will always reflect the raw\n  // untransformed query to ensure document transforms with runtime conditionals\n  // are run on the original document.\n  public get query(): TypedDocumentNode<TData, TVariables> {\n    return this.lastQuery || this.options.query;\n  }\n\n  // Computed shorthand for this.options.variables, preserved for\n  // backwards compatibility.\n  /**\n   * An object containing the variables that were provided for the query.\n   */\n  public get variables(): TVariables | undefined {\n    return this.options.variables;\n  }\n\n  private isTornDown: boolean;\n  private queryManager: QueryManager<any>;\n  private observers = new Set<Observer<ApolloQueryResult<TData>>>();\n  private subscriptions = new Set<ObservableSubscription>();\n\n  private waitForOwnResult: boolean;\n  private last?: Last<TData, TVariables>;\n  private lastQuery?: DocumentNode;\n\n  private queryInfo: QueryInfo;\n\n  // When this.concast is defined, this.observer is the Observer currently\n  // subscribed to that Concast.\n  private concast?: Concast<ApolloQueryResult<TData>>;\n  private observer?: Observer<ApolloQueryResult<TData>>;\n\n  private pollingInfo?: {\n    interval: number;\n    timeout: ReturnType<typeof setTimeout>;\n  };\n\n  constructor({\n    queryManager,\n    queryInfo,\n    options,\n  }: {\n    queryManager: QueryManager<any>;\n    queryInfo: QueryInfo;\n    options: WatchQueryOptions<TVariables, TData>;\n  }) {\n    super((observer: Observer<ApolloQueryResult<TData>>) => {\n      // Zen Observable has its own error function, so in order to log correctly\n      // we need to provide a custom error callback.\n      try {\n        var subObserver = (observer as any)._subscription._observer;\n        if (subObserver && !subObserver.error) {\n          subObserver.error = defaultSubscriptionObserverErrorCallback;\n        }\n      } catch {}\n\n      const first = !this.observers.size;\n      this.observers.add(observer);\n\n      // Deliver most recent error or result.\n      const last = this.last;\n      if (last && last.error) {\n        observer.error && observer.error(last.error);\n      } else if (last && last.result) {\n        observer.next && observer.next(last.result);\n      }\n\n      // Initiate observation of this query if it hasn't been reported to\n      // the QueryManager yet.\n      if (first) {\n        // Blindly catching here prevents unhandled promise rejections,\n        // and is safe because the ObservableQuery handles this error with\n        // this.observer.error, so we're not just swallowing the error by\n        // ignoring it here.\n        this.reobserve().catch(() => {});\n      }\n\n      return () => {\n        if (this.observers.delete(observer) && !this.observers.size) {\n          this.tearDownQuery();\n        }\n      };\n    });\n\n    // related classes\n    this.queryInfo = queryInfo;\n    this.queryManager = queryManager;\n\n    // active state\n    this.waitForOwnResult = skipCacheDataFor(options.fetchPolicy);\n    this.isTornDown = false;\n\n    const {\n      watchQuery: { fetchPolicy: defaultFetchPolicy = \"cache-first\" } = {},\n    } = queryManager.defaultOptions;\n\n    const {\n      fetchPolicy = defaultFetchPolicy,\n      // Make sure we don't store \"standby\" as the initialFetchPolicy.\n      initialFetchPolicy = fetchPolicy === \"standby\" ? defaultFetchPolicy : (\n        fetchPolicy\n      ),\n    } = options;\n\n    this.options = {\n      ...options,\n\n      // Remember the initial options.fetchPolicy so we can revert back to this\n      // policy when variables change. This information can also be specified\n      // (or overridden) by providing options.initialFetchPolicy explicitly.\n      initialFetchPolicy,\n\n      // This ensures this.options.fetchPolicy always has a string value, in\n      // case options.fetchPolicy was not provided.\n      fetchPolicy,\n    };\n\n    this.queryId = queryInfo.queryId || queryManager.generateQueryId();\n\n    const opDef = getOperationDefinition(this.query);\n    this.queryName = opDef && opDef.name && opDef.name.value;\n  }\n\n  public result(): Promise<ApolloQueryResult<TData>> {\n    return new Promise((resolve, reject) => {\n      // TODO: this code doesn’t actually make sense insofar as the observer\n      // will never exist in this.observers due how zen-observable wraps observables.\n      // https://github.com/zenparsing/zen-observable/blob/master/src/Observable.js#L169\n      const observer: Observer<ApolloQueryResult<TData>> = {\n        next: (result: ApolloQueryResult<TData>) => {\n          resolve(result);\n\n          // Stop the query within the QueryManager if we can before\n          // this function returns.\n          //\n          // We do this in order to prevent observers piling up within\n          // the QueryManager. Notice that we only fully unsubscribe\n          // from the subscription in a setTimeout(..., 0)  call. This call can\n          // actually be handled by the browser at a much later time. If queries\n          // are fired in the meantime, observers that should have been removed\n          // from the QueryManager will continue to fire, causing an unnecessary\n          // performance hit.\n          this.observers.delete(observer);\n          if (!this.observers.size) {\n            this.queryManager.removeQuery(this.queryId);\n          }\n\n          setTimeout(() => {\n            subscription.unsubscribe();\n          }, 0);\n        },\n        error: reject,\n      };\n      const subscription = this.subscribe(observer);\n    });\n  }\n\n  /** @internal */\n  public resetDiff() {\n    this.queryInfo.resetDiff();\n  }\n\n  public getCurrentResult(saveAsLastResult = true): ApolloQueryResult<TData> {\n    // Use the last result as long as the variables match this.variables.\n    const lastResult = this.getLastResult(true);\n\n    const networkStatus =\n      this.queryInfo.networkStatus ||\n      (lastResult && lastResult.networkStatus) ||\n      NetworkStatus.ready;\n\n    const result = {\n      ...lastResult,\n      loading: isNetworkRequestInFlight(networkStatus),\n      networkStatus,\n    } as ApolloQueryResult<TData>;\n\n    const { fetchPolicy = \"cache-first\" } = this.options;\n    if (\n      // These fetch policies should never deliver data from the cache, unless\n      // redelivering a previously delivered result.\n      skipCacheDataFor(fetchPolicy) ||\n      // If this.options.query has @client(always: true) fields, we cannot\n      // trust diff.result, since it was read from the cache without running\n      // local resolvers (and it's too late to run resolvers now, since we must\n      // return a result synchronously).\n      this.queryManager.getDocumentInfo(this.query).hasForcedResolvers\n    ) {\n      // Fall through.\n    } else if (this.waitForOwnResult) {\n      // This would usually be a part of `QueryInfo.getDiff()`.\n      // which we skip in the waitForOwnResult case since we are not\n      // interested in the diff.\n      this.queryInfo[\"updateWatch\"]();\n    } else {\n      const diff = this.queryInfo.getDiff();\n\n      if (diff.complete || this.options.returnPartialData) {\n        result.data = diff.result;\n      }\n\n      if (equal(result.data, {})) {\n        result.data = void 0 as any;\n      }\n\n      if (diff.complete) {\n        // Similar to setting result.partial to false, but taking advantage of the\n        // falsiness of missing fields.\n        delete result.partial;\n\n        // If the diff is complete, and we're using a FetchPolicy that\n        // terminates after a complete cache read, we can assume the next result\n        // we receive will have NetworkStatus.ready and !loading.\n        if (\n          diff.complete &&\n          result.networkStatus === NetworkStatus.loading &&\n          (fetchPolicy === \"cache-first\" || fetchPolicy === \"cache-only\")\n        ) {\n          result.networkStatus = NetworkStatus.ready;\n          result.loading = false;\n        }\n      } else {\n        result.partial = true;\n      }\n\n      if (\n        __DEV__ &&\n        !diff.complete &&\n        !this.options.partialRefetch &&\n        !result.loading &&\n        !result.data &&\n        !result.error\n      ) {\n        logMissingFieldErrors(diff.missing);\n      }\n    }\n\n    if (saveAsLastResult) {\n      this.updateLastResult(result);\n    }\n\n    return result;\n  }\n\n  // Compares newResult to the snapshot we took of this.lastResult when it was\n  // first received.\n  public isDifferentFromLastResult(\n    newResult: ApolloQueryResult<TData>,\n    variables?: TVariables\n  ) {\n    if (!this.last) {\n      return true;\n    }\n\n    const resultIsDifferent =\n      this.queryManager.getDocumentInfo(this.query).hasNonreactiveDirective ?\n        !equalByQuery(this.query, this.last.result, newResult, this.variables)\n      : !equal(this.last.result, newResult);\n\n    return (\n      resultIsDifferent || (variables && !equal(this.last.variables, variables))\n    );\n  }\n\n  private getLast<K extends keyof Last<TData, TVariables>>(\n    key: K,\n    variablesMustMatch?: boolean\n  ) {\n    const last = this.last;\n    if (\n      last &&\n      last[key] &&\n      (!variablesMustMatch || equal(last.variables, this.variables))\n    ) {\n      return last[key];\n    }\n  }\n\n  public getLastResult(\n    variablesMustMatch?: boolean\n  ): ApolloQueryResult<TData> | undefined {\n    return this.getLast(\"result\", variablesMustMatch);\n  }\n\n  public getLastError(variablesMustMatch?: boolean): ApolloError | undefined {\n    return this.getLast(\"error\", variablesMustMatch);\n  }\n\n  public resetLastResults(): void {\n    delete this.last;\n    this.isTornDown = false;\n  }\n\n  public resetQueryStoreErrors() {\n    this.queryManager.resetErrors(this.queryId);\n  }\n\n  /**\n   * Update the variables of this observable query, and fetch the new results.\n   * This method should be preferred over `setVariables` in most use cases.\n   *\n   * @param variables - The new set of variables. If there are missing variables,\n   * the previous values of those variables will be used.\n   */\n  public refetch(\n    variables?: Partial<TVariables>\n  ): Promise<ApolloQueryResult<TData>> {\n    const reobserveOptions: Partial<WatchQueryOptions<TVariables, TData>> = {\n      // Always disable polling for refetches.\n      pollInterval: 0,\n    };\n\n    // Unless the provided fetchPolicy always consults the network\n    // (no-cache, network-only, or cache-and-network), override it with\n    // network-only to force the refetch for this fetchQuery call.\n    const { fetchPolicy } = this.options;\n    if (fetchPolicy === \"cache-and-network\") {\n      reobserveOptions.fetchPolicy = fetchPolicy;\n    } else if (fetchPolicy === \"no-cache\") {\n      reobserveOptions.fetchPolicy = \"no-cache\";\n    } else {\n      reobserveOptions.fetchPolicy = \"network-only\";\n    }\n\n    if (__DEV__ && variables && hasOwnProperty.call(variables, \"variables\")) {\n      const queryDef = getQueryDefinition(this.query);\n      const vars = queryDef.variableDefinitions;\n      if (!vars || !vars.some((v) => v.variable.name.value === \"variables\")) {\n        invariant.warn(\n          `Called refetch(%o) for query %o, which does not declare a $variables variable.\nDid you mean to call refetch(variables) instead of refetch({ variables })?`,\n          variables,\n          queryDef.name?.value || queryDef\n        );\n      }\n    }\n\n    if (variables && !equal(this.options.variables, variables)) {\n      // Update the existing options with new variables\n      reobserveOptions.variables = this.options.variables = {\n        ...this.options.variables,\n        ...variables,\n      } as TVariables;\n    }\n\n    this.queryInfo.resetLastWrite();\n    return this.reobserve(reobserveOptions, NetworkStatus.refetch);\n  }\n\n  /**\n   * A function that helps you fetch the next set of results for a [paginated list field](https://www.apollographql.com/docs/react/pagination/core-api/).\n   */\n  public fetchMore<\n    TFetchData = TData,\n    TFetchVars extends OperationVariables = TVariables,\n  >(\n    fetchMoreOptions: FetchMoreQueryOptions<TFetchVars, TFetchData> & {\n      updateQuery?: (\n        previousQueryResult: TData,\n        options: {\n          fetchMoreResult: TFetchData;\n          variables: TFetchVars;\n        }\n      ) => TData;\n    }\n  ): Promise<ApolloQueryResult<TFetchData>> {\n    const combinedOptions = {\n      ...(fetchMoreOptions.query ? fetchMoreOptions : (\n        {\n          ...this.options,\n          query: this.options.query,\n          ...fetchMoreOptions,\n          variables: {\n            ...this.options.variables,\n            ...fetchMoreOptions.variables,\n          },\n        }\n      )),\n      // The fetchMore request goes immediately to the network and does\n      // not automatically write its result to the cache (hence no-cache\n      // instead of network-only), because we allow the caller of\n      // fetchMore to provide an updateQuery callback that determines how\n      // the data gets written to the cache.\n      fetchPolicy: \"no-cache\",\n    } as WatchQueryOptions<TFetchVars, TFetchData>;\n\n    combinedOptions.query = this.transformDocument(combinedOptions.query);\n\n    const qid = this.queryManager.generateQueryId();\n\n    // If a temporary query is passed to `fetchMore`, we don't want to store\n    // it as the last query result since it may be an optimized query for\n    // pagination. We will however run the transforms on the original document\n    // as well as the document passed in `fetchMoreOptions` to ensure the cache\n    // uses the most up-to-date document which may rely on runtime conditionals.\n    this.lastQuery =\n      fetchMoreOptions.query ?\n        this.transformDocument(this.options.query)\n      : combinedOptions.query;\n\n    // Simulate a loading result for the original query with\n    // result.networkStatus === NetworkStatus.fetchMore.\n    const { queryInfo } = this;\n    const originalNetworkStatus = queryInfo.networkStatus;\n    queryInfo.networkStatus = NetworkStatus.fetchMore;\n    if (combinedOptions.notifyOnNetworkStatusChange) {\n      this.observe();\n    }\n\n    const updatedQuerySet = new Set<DocumentNode>();\n\n    return this.queryManager\n      .fetchQuery(qid, combinedOptions, NetworkStatus.fetchMore)\n      .then((fetchMoreResult) => {\n        this.queryManager.removeQuery(qid);\n\n        if (queryInfo.networkStatus === NetworkStatus.fetchMore) {\n          queryInfo.networkStatus = originalNetworkStatus;\n        }\n\n        // Performing this cache update inside a cache.batch transaction ensures\n        // any affected cache.watch watchers are notified at most once about any\n        // updates. Most watchers will be using the QueryInfo class, which\n        // responds to notifications by calling reobserveCacheFirst to deliver\n        // fetchMore cache results back to this ObservableQuery.\n        this.queryManager.cache.batch({\n          update: (cache) => {\n            const { updateQuery } = fetchMoreOptions;\n            if (updateQuery) {\n              cache.updateQuery(\n                {\n                  query: this.query,\n                  variables: this.variables,\n                  returnPartialData: true,\n                  optimistic: false,\n                },\n                (previous) =>\n                  updateQuery(previous!, {\n                    fetchMoreResult: fetchMoreResult.data,\n                    variables: combinedOptions.variables as TFetchVars,\n                  })\n              );\n            } else {\n              // If we're using a field policy instead of updateQuery, the only\n              // thing we need to do is write the new data to the cache using\n              // combinedOptions.variables (instead of this.variables, which is\n              // what this.updateQuery uses, because it works by abusing the\n              // original field value, keyed by the original variables).\n              cache.writeQuery({\n                query: combinedOptions.query,\n                variables: combinedOptions.variables,\n                data: fetchMoreResult.data,\n              });\n            }\n          },\n\n          onWatchUpdated: (watch) => {\n            // Record the DocumentNode associated with any watched query whose\n            // data were updated by the cache writes above.\n            updatedQuerySet.add(watch.query);\n          },\n        });\n\n        return fetchMoreResult;\n      })\n      .finally(() => {\n        // In case the cache writes above did not generate a broadcast\n        // notification (which would have been intercepted by onWatchUpdated),\n        // likely because the written data were the same as what was already in\n        // the cache, we still want fetchMore to deliver its final loading:false\n        // result with the unchanged data.\n        if (!updatedQuerySet.has(this.query)) {\n          reobserveCacheFirst(this);\n        }\n      });\n  }\n\n  // XXX the subscription variables are separate from the query variables.\n  // if you want to update subscription variables, right now you have to do that separately,\n  // and you can only do it by stopping the subscription and then subscribing again with new variables.\n  /**\n   * A function that enables you to execute a [subscription](https://www.apollographql.com/docs/react/data/subscriptions/), usually to subscribe to specific fields that were included in the query.\n   *\n   * This function returns _another_ function that you can call to terminate the subscription.\n   */\n  public subscribeToMore<\n    TSubscriptionData = TData,\n    TSubscriptionVariables extends OperationVariables = TVariables,\n  >(\n    options: SubscribeToMoreOptions<\n      TData,\n      TSubscriptionVariables,\n      TSubscriptionData\n    >\n  ) {\n    const subscription = this.queryManager\n      .startGraphQLSubscription({\n        query: options.document,\n        variables: options.variables,\n        context: options.context,\n      })\n      .subscribe({\n        next: (subscriptionData: { data: TSubscriptionData }) => {\n          const { updateQuery } = options;\n          if (updateQuery) {\n            this.updateQuery<TSubscriptionVariables>(\n              (previous, { variables }) =>\n                updateQuery(previous, {\n                  subscriptionData,\n                  variables,\n                })\n            );\n          }\n        },\n        error: (err: any) => {\n          if (options.onError) {\n            options.onError(err);\n            return;\n          }\n          invariant.error(\"Unhandled GraphQL subscription error\", err);\n        },\n      });\n\n    this.subscriptions.add(subscription);\n\n    return () => {\n      if (this.subscriptions.delete(subscription)) {\n        subscription.unsubscribe();\n      }\n    };\n  }\n\n  public setOptions(\n    newOptions: Partial<WatchQueryOptions<TVariables, TData>>\n  ): Promise<ApolloQueryResult<TData>> {\n    return this.reobserve(newOptions);\n  }\n\n  public silentSetOptions(\n    newOptions: Partial<WatchQueryOptions<TVariables, TData>>\n  ) {\n    const mergedOptions = compact(this.options, newOptions || {});\n    assign(this.options, mergedOptions);\n  }\n\n  /**\n   * Update the variables of this observable query, and fetch the new results\n   * if they've changed. Most users should prefer `refetch` instead of\n   * `setVariables` in order to to be properly notified of results even when\n   * they come from the cache.\n   *\n   * Note: the `next` callback will *not* fire if the variables have not changed\n   * or if the result is coming from cache.\n   *\n   * Note: the promise will return the old results immediately if the variables\n   * have not changed.\n   *\n   * Note: the promise will return null immediately if the query is not active\n   * (there are no subscribers).\n   *\n   * @param variables - The new set of variables. If there are missing variables,\n   * the previous values of those variables will be used.\n   */\n  public setVariables(\n    variables: TVariables\n  ): Promise<ApolloQueryResult<TData> | void> {\n    if (equal(this.variables, variables)) {\n      // If we have no observers, then we don't actually want to make a network\n      // request. As soon as someone observes the query, the request will kick\n      // off. For now, we just store any changes. (See #1077)\n      return this.observers.size ? this.result() : Promise.resolve();\n    }\n\n    this.options.variables = variables;\n\n    // See comment above\n    if (!this.observers.size) {\n      return Promise.resolve();\n    }\n\n    return this.reobserve(\n      {\n        // Reset options.fetchPolicy to its original value.\n        fetchPolicy: this.options.initialFetchPolicy,\n        variables,\n      },\n      NetworkStatus.setVariables\n    );\n  }\n\n  /**\n   * A function that enables you to update the query's cached result without executing a followup GraphQL operation.\n   *\n   * See [using updateQuery and updateFragment](https://www.apollographql.com/docs/react/caching/cache-interaction/#using-updatequery-and-updatefragment) for additional information.\n   */\n  public updateQuery<TVars extends OperationVariables = TVariables>(\n    mapFn: (\n      previousQueryResult: TData,\n      options: Pick<WatchQueryOptions<TVars, TData>, \"variables\">\n    ) => TData\n  ): void {\n    const { queryManager } = this;\n    const { result } = queryManager.cache.diff<TData>({\n      query: this.options.query,\n      variables: this.variables,\n      returnPartialData: true,\n      optimistic: false,\n    });\n\n    const newResult = mapFn(result!, {\n      variables: (this as any).variables,\n    });\n\n    if (newResult) {\n      queryManager.cache.writeQuery({\n        query: this.options.query,\n        data: newResult,\n        variables: this.variables,\n      });\n\n      queryManager.broadcastQueries();\n    }\n  }\n\n  /**\n   * A function that instructs the query to begin re-executing at a specified interval (in milliseconds).\n   */\n  public startPolling(pollInterval: number) {\n    this.options.pollInterval = pollInterval;\n    this.updatePolling();\n  }\n\n  /**\n   * A function that instructs the query to stop polling after a previous call to `startPolling`.\n   */\n  public stopPolling() {\n    this.options.pollInterval = 0;\n    this.updatePolling();\n  }\n\n  // Update options.fetchPolicy according to options.nextFetchPolicy.\n  private applyNextFetchPolicy(\n    reason: NextFetchPolicyContext<TData, TVariables>[\"reason\"],\n    // It's possible to use this method to apply options.nextFetchPolicy to\n    // options.fetchPolicy even if options !== this.options, though that happens\n    // most often when the options are temporary, used for only one request and\n    // then thrown away, so nextFetchPolicy may not end up mattering.\n    options: WatchQueryOptions<TVariables, TData>\n  ) {\n    if (options.nextFetchPolicy) {\n      const { fetchPolicy = \"cache-first\", initialFetchPolicy = fetchPolicy } =\n        options;\n\n      if (fetchPolicy === \"standby\") {\n        // Do nothing, leaving options.fetchPolicy unchanged.\n      } else if (typeof options.nextFetchPolicy === \"function\") {\n        // When someone chooses \"cache-and-network\" or \"network-only\" as their\n        // initial FetchPolicy, they often do not want future cache updates to\n        // trigger unconditional network requests, which is what repeatedly\n        // applying the \"cache-and-network\" or \"network-only\" policies would\n        // seem to imply. Instead, when the cache reports an update after the\n        // initial network request, it may be desirable for subsequent network\n        // requests to be triggered only if the cache result is incomplete. To\n        // that end, the options.nextFetchPolicy option provides an easy way to\n        // update options.fetchPolicy after the initial network request, without\n        // having to call observableQuery.setOptions.\n        options.fetchPolicy = options.nextFetchPolicy(fetchPolicy, {\n          reason,\n          options,\n          observable: this,\n          initialFetchPolicy,\n        });\n      } else if (reason === \"variables-changed\") {\n        options.fetchPolicy = initialFetchPolicy;\n      } else {\n        options.fetchPolicy = options.nextFetchPolicy;\n      }\n    }\n\n    return options.fetchPolicy;\n  }\n\n  private fetch(\n    options: WatchQueryOptions<TVariables, TData>,\n    newNetworkStatus?: NetworkStatus,\n    query?: DocumentNode\n  ) {\n    // TODO Make sure we update the networkStatus (and infer fetchVariables)\n    // before actually committing to the fetch.\n    this.queryManager.setObservableQuery(this);\n    return this.queryManager[\"fetchConcastWithInfo\"](\n      this.queryId,\n      options,\n      newNetworkStatus,\n      query\n    );\n  }\n\n  // Turns polling on or off based on this.options.pollInterval.\n  private updatePolling() {\n    // Avoid polling in SSR mode\n    if (this.queryManager.ssrMode) {\n      return;\n    }\n\n    const {\n      pollingInfo,\n      options: { pollInterval },\n    } = this;\n\n    if (!pollInterval || !this.hasObservers()) {\n      if (pollingInfo) {\n        clearTimeout(pollingInfo.timeout);\n        delete this.pollingInfo;\n      }\n      return;\n    }\n\n    if (pollingInfo && pollingInfo.interval === pollInterval) {\n      return;\n    }\n\n    invariant(\n      pollInterval,\n      \"Attempted to start a polling query without a polling interval.\"\n    );\n\n    const info = pollingInfo || (this.pollingInfo = {} as any);\n    info.interval = pollInterval;\n\n    const maybeFetch = () => {\n      if (this.pollingInfo) {\n        if (\n          !isNetworkRequestInFlight(this.queryInfo.networkStatus) &&\n          !this.options.skipPollAttempt?.()\n        ) {\n          this.reobserve(\n            {\n              // Most fetchPolicy options don't make sense to use in a polling context, as\n              // users wouldn't want to be polling the cache directly. However, network-only and\n              // no-cache are both useful for when the user wants to control whether or not the\n              // polled results are written to the cache.\n              fetchPolicy:\n                this.options.initialFetchPolicy === \"no-cache\" ?\n                  \"no-cache\"\n                : \"network-only\",\n            },\n            NetworkStatus.poll\n          ).then(poll, poll);\n        } else {\n          poll();\n        }\n      }\n    };\n\n    const poll = () => {\n      const info = this.pollingInfo;\n      if (info) {\n        clearTimeout(info.timeout);\n        info.timeout = setTimeout(maybeFetch, info.interval);\n      }\n    };\n\n    poll();\n  }\n\n  private updateLastResult(\n    newResult: ApolloQueryResult<TData>,\n    variables = this.variables\n  ) {\n    let error: ApolloError | undefined = this.getLastError();\n    // Preserve this.last.error unless the variables have changed.\n    if (error && this.last && !equal(variables, this.last.variables)) {\n      error = void 0;\n    }\n    return (this.last = {\n      result:\n        this.queryManager.assumeImmutableResults ?\n          newResult\n        : cloneDeep(newResult),\n      variables,\n      ...(error ? { error } : null),\n    });\n  }\n\n  public reobserveAsConcast(\n    newOptions?: Partial<WatchQueryOptions<TVariables, TData>>,\n    newNetworkStatus?: NetworkStatus\n  ): Concast<ApolloQueryResult<TData>> {\n    this.isTornDown = false;\n\n    const useDisposableConcast =\n      // Refetching uses a disposable Concast to allow refetches using different\n      // options/variables, without permanently altering the options of the\n      // original ObservableQuery.\n      newNetworkStatus === NetworkStatus.refetch ||\n      // The fetchMore method does not actually call the reobserve method, but,\n      // if it did, it would definitely use a disposable Concast.\n      newNetworkStatus === NetworkStatus.fetchMore ||\n      // Polling uses a disposable Concast so the polling options (which force\n      // fetchPolicy to be \"network-only\" or \"no-cache\") won't override the original options.\n      newNetworkStatus === NetworkStatus.poll;\n\n    // Save the old variables, since Object.assign may modify them below.\n    const oldVariables = this.options.variables;\n    const oldFetchPolicy = this.options.fetchPolicy;\n\n    const mergedOptions = compact(this.options, newOptions || {});\n    const options =\n      useDisposableConcast ?\n        // Disposable Concast fetches receive a shallow copy of this.options\n        // (merged with newOptions), leaving this.options unmodified.\n        mergedOptions\n      : assign(this.options, mergedOptions);\n\n    // Don't update options.query with the transformed query to avoid\n    // overwriting this.options.query when we aren't using a disposable concast.\n    // We want to ensure we can re-run the custom document transforms the next\n    // time a request is made against the original query.\n    const query = this.transformDocument(options.query);\n\n    this.lastQuery = query;\n\n    if (!useDisposableConcast) {\n      // We can skip calling updatePolling if we're not changing this.options.\n      this.updatePolling();\n\n      // Reset options.fetchPolicy to its original value when variables change,\n      // unless a new fetchPolicy was provided by newOptions.\n      if (\n        newOptions &&\n        newOptions.variables &&\n        !equal(newOptions.variables, oldVariables) &&\n        // Don't mess with the fetchPolicy if it's currently \"standby\".\n        options.fetchPolicy !== \"standby\" &&\n        // If we're changing the fetchPolicy anyway, don't try to change it here\n        // using applyNextFetchPolicy. The explicit options.fetchPolicy wins.\n        options.fetchPolicy === oldFetchPolicy\n      ) {\n        this.applyNextFetchPolicy(\"variables-changed\", options);\n        if (newNetworkStatus === void 0) {\n          newNetworkStatus = NetworkStatus.setVariables;\n        }\n      }\n    }\n\n    this.waitForOwnResult &&= skipCacheDataFor(options.fetchPolicy);\n    const finishWaitingForOwnResult = () => {\n      if (this.concast === concast) {\n        this.waitForOwnResult = false;\n      }\n    };\n\n    const variables = options.variables && { ...options.variables };\n    const { concast, fromLink } = this.fetch(options, newNetworkStatus, query);\n    const observer: Observer<ApolloQueryResult<TData>> = {\n      next: (result) => {\n        if (equal(this.variables, variables)) {\n          finishWaitingForOwnResult();\n          this.reportResult(result, variables);\n        }\n      },\n      error: (error) => {\n        if (equal(this.variables, variables)) {\n          finishWaitingForOwnResult();\n          this.reportError(error, variables);\n        }\n      },\n    };\n\n    if (!useDisposableConcast && (fromLink || !this.concast)) {\n      // We use the {add,remove}Observer methods directly to avoid wrapping\n      // observer with an unnecessary SubscriptionObserver object.\n      if (this.concast && this.observer) {\n        this.concast.removeObserver(this.observer);\n      }\n\n      this.concast = concast;\n      this.observer = observer;\n    }\n\n    concast.addObserver(observer);\n\n    return concast;\n  }\n\n  public reobserve(\n    newOptions?: Partial<WatchQueryOptions<TVariables, TData>>,\n    newNetworkStatus?: NetworkStatus\n  ): Promise<ApolloQueryResult<TData>> {\n    return this.reobserveAsConcast(newOptions, newNetworkStatus)\n      .promise as TODO;\n  }\n\n  public resubscribeAfterError(\n    onNext: (value: ApolloQueryResult<TData>) => void,\n    onError?: (error: any) => void,\n    onComplete?: () => void\n  ): ObservableSubscription;\n\n  public resubscribeAfterError(\n    observer: Observer<ApolloQueryResult<TData>>\n  ): ObservableSubscription;\n\n  public resubscribeAfterError(...args: [any, any?, any?]) {\n    // If `lastError` is set in the current when the subscription is re-created,\n    // the subscription will immediately receive the error, which will\n    // cause it to terminate again. To avoid this, we first clear\n    // the last error/result from the `observableQuery` before re-starting\n    // the subscription, and restore the last value afterwards so that the\n    // subscription has a chance to stay open.\n    const last = this.last;\n    this.resetLastResults();\n\n    const subscription = this.subscribe(...args);\n    this.last = last;\n\n    return subscription;\n  }\n\n  // (Re)deliver the current result to this.observers without applying fetch\n  // policies or making network requests.\n  private observe() {\n    this.reportResult(\n      // Passing false is important so that this.getCurrentResult doesn't\n      // save the fetchMore result as this.lastResult, causing it to be\n      // ignored due to the this.isDifferentFromLastResult check in\n      // this.reportResult.\n      this.getCurrentResult(false),\n      this.variables\n    );\n  }\n\n  private reportResult(\n    result: ApolloQueryResult<TData>,\n    variables: TVariables | undefined\n  ) {\n    const lastError = this.getLastError();\n    const isDifferent = this.isDifferentFromLastResult(result, variables);\n    // Update the last result even when isDifferentFromLastResult returns false,\n    // because the query may be using the @nonreactive directive, and we want to\n    // save the the latest version of any nonreactive subtrees (in case\n    // getCurrentResult is called), even though we skip broadcasting changes.\n    if (lastError || !result.partial || this.options.returnPartialData) {\n      this.updateLastResult(result, variables);\n    }\n    if (lastError || isDifferent) {\n      iterateObserversSafely(this.observers, \"next\", result);\n    }\n  }\n\n  private reportError(error: ApolloError, variables: TVariables | undefined) {\n    // Since we don't get the current result on errors, only the error, we\n    // must mirror the updates that occur in QueryStore.markQueryError here\n    const errorResult = {\n      ...this.getLastResult(),\n      error,\n      errors: error.graphQLErrors,\n      networkStatus: NetworkStatus.error,\n      loading: false,\n    } as ApolloQueryResult<TData>;\n\n    this.updateLastResult(errorResult, variables);\n\n    iterateObserversSafely(this.observers, \"error\", (this.last!.error = error));\n  }\n\n  public hasObservers() {\n    return this.observers.size > 0;\n  }\n\n  private tearDownQuery() {\n    if (this.isTornDown) return;\n    if (this.concast && this.observer) {\n      this.concast.removeObserver(this.observer);\n      delete this.concast;\n      delete this.observer;\n    }\n\n    this.stopPolling();\n    // stop all active GraphQL subscriptions\n    this.subscriptions.forEach((sub) => sub.unsubscribe());\n    this.subscriptions.clear();\n    this.queryManager.stopQuery(this.queryId);\n    this.observers.clear();\n    this.isTornDown = true;\n  }\n\n  private transformDocument(document: DocumentNode) {\n    return this.queryManager.transform(document);\n  }\n}\n\n// Necessary because the ObservableQuery constructor has a different\n// signature than the Observable constructor.\nfixObservableSubclass(ObservableQuery);\n\n// Reobserve with fetchPolicy effectively set to \"cache-first\", triggering\n// delivery of any new data from the cache, possibly falling back to the network\n// if any cache data are missing. This allows _complete_ cache results to be\n// delivered without also kicking off unnecessary network requests when\n// this.options.fetchPolicy is \"cache-and-network\" or \"network-only\". When\n// this.options.fetchPolicy is any other policy (\"cache-first\", \"cache-only\",\n// \"standby\", or \"no-cache\"), we call this.reobserve() as usual.\nexport function reobserveCacheFirst<TData, TVars extends OperationVariables>(\n  obsQuery: ObservableQuery<TData, TVars>\n) {\n  const { fetchPolicy, nextFetchPolicy } = obsQuery.options;\n\n  if (fetchPolicy === \"cache-and-network\" || fetchPolicy === \"network-only\") {\n    return obsQuery.reobserve({\n      fetchPolicy: \"cache-first\",\n      // Use a temporary nextFetchPolicy function that replaces itself with the\n      // previous nextFetchPolicy value and returns the original fetchPolicy.\n      nextFetchPolicy(\n        this: WatchQueryOptions<TVars, TData>,\n        currentFetchPolicy: WatchQueryFetchPolicy,\n        context: NextFetchPolicyContext<TData, TVars>\n      ) {\n        // Replace this nextFetchPolicy function in the options object with the\n        // original this.options.nextFetchPolicy value.\n        this.nextFetchPolicy = nextFetchPolicy;\n        // If the original nextFetchPolicy value was a function, give it a\n        // chance to decide what happens here.\n        if (typeof this.nextFetchPolicy === \"function\") {\n          return this.nextFetchPolicy(currentFetchPolicy, context);\n        }\n        // Otherwise go back to the original this.options.fetchPolicy.\n        return fetchPolicy!;\n      },\n    });\n  }\n\n  return obsQuery.reobserve();\n}\n\nfunction defaultSubscriptionObserverErrorCallback(error: ApolloError) {\n  invariant.error(\"Unhandled error\", error.message, error.stack);\n}\n\nexport function logMissingFieldErrors(\n  missing: MissingFieldError[] | MissingTree | undefined\n) {\n  if (__DEV__ && missing) {\n    invariant.debug(`Missing cache result fields: %o`, missing);\n  }\n}\n\nfunction skipCacheDataFor(\n  fetchPolicy?: WatchQueryFetchPolicy /* `undefined` would mean `\"cache-first\"` */\n) {\n  return (\n    fetchPolicy === \"network-only\" ||\n    fetchPolicy === \"no-cache\" ||\n    fetchPolicy === \"standby\"\n  );\n}\n","import { Kind } from './kinds.mjs';\nexport function isDefinitionNode(node) {\n  return (\n    isExecutableDefinitionNode(node) ||\n    isTypeSystemDefinitionNode(node) ||\n    isTypeSystemExtensionNode(node)\n  );\n}\nexport function isExecutableDefinitionNode(node) {\n  return (\n    node.kind === Kind.OPERATION_DEFINITION ||\n    node.kind === Kind.FRAGMENT_DEFINITION\n  );\n}\nexport function isSelectionNode(node) {\n  return (\n    node.kind === Kind.FIELD ||\n    node.kind === Kind.FRAGMENT_SPREAD ||\n    node.kind === Kind.INLINE_FRAGMENT\n  );\n}\nexport function isValueNode(node) {\n  return (\n    node.kind === Kind.VARIABLE ||\n    node.kind === Kind.INT ||\n    node.kind === Kind.FLOAT ||\n    node.kind === Kind.STRING ||\n    node.kind === Kind.BOOLEAN ||\n    node.kind === Kind.NULL ||\n    node.kind === Kind.ENUM ||\n    node.kind === Kind.LIST ||\n    node.kind === Kind.OBJECT\n  );\n}\nexport function isConstValueNode(node) {\n  return (\n    isValueNode(node) &&\n    (node.kind === Kind.LIST\n      ? node.values.some(isConstValueNode)\n      : node.kind === Kind.OBJECT\n      ? node.fields.some((field) => isConstValueNode(field.value))\n      : node.kind !== Kind.VARIABLE)\n  );\n}\nexport function isTypeNode(node) {\n  return (\n    node.kind === Kind.NAMED_TYPE ||\n    node.kind === Kind.LIST_TYPE ||\n    node.kind === Kind.NON_NULL_TYPE\n  );\n}\nexport function isTypeSystemDefinitionNode(node) {\n  return (\n    node.kind === Kind.SCHEMA_DEFINITION ||\n    isTypeDefinitionNode(node) ||\n    node.kind === Kind.DIRECTIVE_DEFINITION\n  );\n}\nexport function isTypeDefinitionNode(node) {\n  return (\n    node.kind === Kind.SCALAR_TYPE_DEFINITION ||\n    node.kind === Kind.OBJECT_TYPE_DEFINITION ||\n    node.kind === Kind.INTERFACE_TYPE_DEFINITION ||\n    node.kind === Kind.UNION_TYPE_DEFINITION ||\n    node.kind === Kind.ENUM_TYPE_DEFINITION ||\n    node.kind === Kind.INPUT_OBJECT_TYPE_DEFINITION\n  );\n}\nexport function isTypeSystemExtensionNode(node) {\n  return node.kind === Kind.SCHEMA_EXTENSION || isTypeExtensionNode(node);\n}\nexport function isTypeExtensionNode(node) {\n  return (\n    node.kind === Kind.SCALAR_TYPE_EXTENSION ||\n    node.kind === Kind.OBJECT_TYPE_EXTENSION ||\n    node.kind === Kind.INTERFACE_TYPE_EXTENSION ||\n    node.kind === Kind.UNION_TYPE_EXTENSION ||\n    node.kind === Kind.ENUM_TYPE_EXTENSION ||\n    node.kind === Kind.INPUT_OBJECT_TYPE_EXTENSION\n  );\n}\n","import type { OptimisticDependencyFunction } from \"optimism\";\nimport { dep, Slot } from \"optimism\";\nimport type { InMemoryCache } from \"./inMemoryCache.js\";\nimport type { ApolloCache } from \"../../core/index.js\";\n\nexport interface ReactiveVar<T> {\n  (newValue?: T): T;\n  onNextChange(listener: ReactiveListener<T>): () => void;\n  attachCache(cache: ApolloCache<any>): this;\n  forgetCache(cache: ApolloCache<any>): boolean;\n}\n\nexport type ReactiveListener<T> = (value: T) => any;\n\n// Contextual Slot that acquires its value when custom read functions are\n// called in Policies#readField.\nexport const cacheSlot = new Slot<ApolloCache<any>>();\n\nconst cacheInfoMap = new WeakMap<\n  ApolloCache<any>,\n  {\n    vars: Set<ReactiveVar<any>>;\n    dep: OptimisticDependencyFunction<ReactiveVar<any>>;\n  }\n>();\n\nfunction getCacheInfo(cache: ApolloCache<any>) {\n  let info = cacheInfoMap.get(cache)!;\n  if (!info) {\n    cacheInfoMap.set(\n      cache,\n      (info = {\n        vars: new Set(),\n        dep: dep(),\n      })\n    );\n  }\n  return info;\n}\n\nexport function forgetCache(cache: ApolloCache<any>) {\n  getCacheInfo(cache).vars.forEach((rv) => rv.forgetCache(cache));\n}\n\n// Calling forgetCache(cache) serves to silence broadcasts and allows the\n// cache to be garbage collected. However, the varsByCache WeakMap\n// preserves the set of reactive variables that were previously associated\n// with this cache, which makes it possible to \"recall\" the cache at a\n// later time, by reattaching it to those variables. If the cache has been\n// garbage collected in the meantime, because it is no longer reachable,\n// you won't be able to call recallCache(cache), and the cache will\n// automatically disappear from the varsByCache WeakMap.\nexport function recallCache(cache: ApolloCache<any>) {\n  getCacheInfo(cache).vars.forEach((rv) => rv.attachCache(cache));\n}\n\nexport function makeVar<T>(value: T): ReactiveVar<T> {\n  const caches = new Set<ApolloCache<any>>();\n  const listeners = new Set<ReactiveListener<T>>();\n\n  const rv: ReactiveVar<T> = function (newValue) {\n    if (arguments.length > 0) {\n      if (value !== newValue) {\n        value = newValue!;\n        caches.forEach((cache) => {\n          // Invalidate any fields with custom read functions that\n          // consumed this variable, so query results involving those\n          // fields will be recomputed the next time we read them.\n          getCacheInfo(cache).dep.dirty(rv);\n          // Broadcast changes to any caches that have previously read\n          // from this variable.\n          broadcast(cache);\n        });\n        // Finally, notify any listeners added via rv.onNextChange.\n        const oldListeners = Array.from(listeners);\n        listeners.clear();\n        oldListeners.forEach((listener) => listener(value));\n      }\n    } else {\n      // When reading from the variable, obtain the current cache from\n      // context via cacheSlot. This isn't entirely foolproof, but it's\n      // the same system that powers varDep.\n      const cache = cacheSlot.getValue();\n      if (cache) {\n        attach(cache);\n        getCacheInfo(cache).dep(rv);\n      }\n    }\n\n    return value;\n  };\n\n  rv.onNextChange = (listener) => {\n    listeners.add(listener);\n    return () => {\n      listeners.delete(listener);\n    };\n  };\n\n  const attach = (rv.attachCache = (cache) => {\n    caches.add(cache);\n    getCacheInfo(cache).vars.add(rv);\n    return rv;\n  });\n\n  rv.forgetCache = (cache) => caches.delete(cache);\n\n  return rv;\n}\n\ntype Broadcastable = ApolloCache<any> & {\n  // This method is protected in InMemoryCache, which we are ignoring, but\n  // we still want some semblance of type safety when we call it.\n  broadcastWatches?: InMemoryCache[\"broadcastWatches\"];\n};\n\nfunction broadcast(cache: Broadcastable) {\n  if (cache.broadcastWatches) {\n    cache.broadcastWatches();\n  }\n}\n","import { invariant } from \"../utilities/globals/index.js\";\n\nimport type {\n  DocumentNode,\n  OperationDefinitionNode,\n  SelectionSetNode,\n  SelectionNode,\n  InlineFragmentNode,\n  FragmentDefinitionNode,\n  FieldNode,\n  ASTNode,\n  DirectiveNode,\n  FragmentSpreadNode,\n  ExecutableDefinitionNode,\n} from \"graphql\";\nimport { visit, BREAK, isSelectionNode } from \"graphql\";\n\nimport type { ApolloCache } from \"../cache/index.js\";\nimport type { FragmentMap, StoreObject } from \"../utilities/index.js\";\nimport {\n  argumentsObjectFromField,\n  buildQueryFromSelectionSet,\n  createFragmentMap,\n  getFragmentDefinitions,\n  getMainDefinition,\n  hasDirectives,\n  isField,\n  isInlineFragment,\n  mergeDeep,\n  mergeDeepArray,\n  removeClientSetsFromDocument,\n  resultKeyNameFromField,\n  shouldInclude,\n} from \"../utilities/index.js\";\nimport type { ApolloClient } from \"./ApolloClient.js\";\nimport type { Resolvers, OperationVariables } from \"./types.js\";\nimport type { FetchResult } from \"../link/core/index.js\";\nimport { cacheSlot } from \"../cache/index.js\";\n\nexport type Resolver = (\n  rootValue?: any,\n  args?: any,\n  context?: any,\n  info?: {\n    field: FieldNode;\n    fragmentMap: FragmentMap;\n  }\n) => any;\n\nexport type VariableMap = { [name: string]: any };\n\nexport type FragmentMatcher = (\n  rootValue: any,\n  typeCondition: string,\n  context: any\n) => boolean;\n\nexport type ExecContext = {\n  fragmentMap: FragmentMap;\n  context: any;\n  variables: VariableMap;\n  fragmentMatcher: FragmentMatcher;\n  defaultOperationType: string;\n  exportedVariables: Record<string, any>;\n  onlyRunForcedResolvers: boolean;\n  selectionsToResolve: Set<SelectionNode>;\n};\n\nexport type LocalStateOptions<TCacheShape> = {\n  cache: ApolloCache<TCacheShape>;\n  client?: ApolloClient<TCacheShape>;\n  resolvers?: Resolvers | Resolvers[];\n  fragmentMatcher?: FragmentMatcher;\n};\n\nexport class LocalState<TCacheShape> {\n  private cache: ApolloCache<TCacheShape>;\n  private client?: ApolloClient<TCacheShape>;\n  private resolvers?: Resolvers;\n  private fragmentMatcher?: FragmentMatcher;\n  private selectionsToResolveCache = new WeakMap<\n    ExecutableDefinitionNode,\n    Set<SelectionNode>\n  >();\n\n  constructor({\n    cache,\n    client,\n    resolvers,\n    fragmentMatcher,\n  }: LocalStateOptions<TCacheShape>) {\n    this.cache = cache;\n\n    if (client) {\n      this.client = client;\n    }\n\n    if (resolvers) {\n      this.addResolvers(resolvers);\n    }\n\n    if (fragmentMatcher) {\n      this.setFragmentMatcher(fragmentMatcher);\n    }\n  }\n\n  public addResolvers(resolvers: Resolvers | Resolvers[]) {\n    this.resolvers = this.resolvers || {};\n    if (Array.isArray(resolvers)) {\n      resolvers.forEach((resolverGroup) => {\n        this.resolvers = mergeDeep(this.resolvers, resolverGroup);\n      });\n    } else {\n      this.resolvers = mergeDeep(this.resolvers, resolvers);\n    }\n  }\n\n  public setResolvers(resolvers: Resolvers | Resolvers[]) {\n    this.resolvers = {};\n    this.addResolvers(resolvers);\n  }\n\n  public getResolvers() {\n    return this.resolvers || {};\n  }\n\n  // Run local client resolvers against the incoming query and remote data.\n  // Locally resolved field values are merged with the incoming remote data,\n  // and returned. Note that locally resolved fields will overwrite\n  // remote data using the same field name.\n  public async runResolvers<TData>({\n    document,\n    remoteResult,\n    context,\n    variables,\n    onlyRunForcedResolvers = false,\n  }: {\n    document: DocumentNode | null;\n    remoteResult: FetchResult<TData>;\n    context?: Record<string, any>;\n    variables?: Record<string, any>;\n    onlyRunForcedResolvers?: boolean;\n  }): Promise<FetchResult<TData>> {\n    if (document) {\n      return this.resolveDocument(\n        document,\n        remoteResult.data,\n        context,\n        variables,\n        this.fragmentMatcher,\n        onlyRunForcedResolvers\n      ).then((localResult) => ({\n        ...remoteResult,\n        data: localResult.result,\n      }));\n    }\n\n    return remoteResult;\n  }\n\n  public setFragmentMatcher(fragmentMatcher: FragmentMatcher) {\n    this.fragmentMatcher = fragmentMatcher;\n  }\n\n  public getFragmentMatcher(): FragmentMatcher | undefined {\n    return this.fragmentMatcher;\n  }\n\n  // Client queries contain everything in the incoming document (if a @client\n  // directive is found).\n  public clientQuery(document: DocumentNode) {\n    if (hasDirectives([\"client\"], document)) {\n      if (this.resolvers) {\n        return document;\n      }\n    }\n    return null;\n  }\n\n  // Server queries are stripped of all @client based selection sets.\n  public serverQuery(document: DocumentNode) {\n    return removeClientSetsFromDocument(document);\n  }\n\n  public prepareContext(context?: Record<string, any>) {\n    const { cache } = this;\n    return {\n      ...context,\n      cache,\n      // Getting an entry's cache key is useful for local state resolvers.\n      getCacheKey(obj: StoreObject) {\n        return cache.identify(obj);\n      },\n    };\n  }\n\n  // To support `@client @export(as: \"someVar\")` syntax, we'll first resolve\n  // @client @export fields locally, then pass the resolved values back to be\n  // used alongside the original operation variables.\n  public async addExportedVariables<TVars extends OperationVariables>(\n    document: DocumentNode,\n    variables: TVars = {} as TVars,\n    context = {}\n  ): /* returns at least the variables that were passed in */ Promise<TVars> {\n    if (document) {\n      return this.resolveDocument(\n        document,\n        this.buildRootValueFromCache(document, variables) || {},\n        this.prepareContext(context),\n        variables\n      ).then((data) => ({\n        ...variables,\n        ...data.exportedVariables,\n      }));\n    }\n\n    return {\n      ...variables,\n    };\n  }\n\n  public shouldForceResolvers(document: ASTNode) {\n    let forceResolvers = false;\n    visit(document, {\n      Directive: {\n        enter(node) {\n          if (node.name.value === \"client\" && node.arguments) {\n            forceResolvers = node.arguments.some(\n              (arg) =>\n                arg.name.value === \"always\" &&\n                arg.value.kind === \"BooleanValue\" &&\n                arg.value.value === true\n            );\n            if (forceResolvers) {\n              return BREAK;\n            }\n          }\n        },\n      },\n    });\n    return forceResolvers;\n  }\n\n  // Query the cache and return matching data.\n  private buildRootValueFromCache(\n    document: DocumentNode,\n    variables?: Record<string, any>\n  ) {\n    return this.cache.diff({\n      query: buildQueryFromSelectionSet(document),\n      variables,\n      returnPartialData: true,\n      optimistic: false,\n    }).result;\n  }\n\n  private async resolveDocument<TData>(\n    document: DocumentNode,\n    rootValue: TData,\n    context: any = {},\n    variables: VariableMap = {},\n    fragmentMatcher: FragmentMatcher = () => true,\n    onlyRunForcedResolvers: boolean = false\n  ) {\n    const mainDefinition = getMainDefinition(\n      document\n    ) as OperationDefinitionNode;\n    const fragments = getFragmentDefinitions(document);\n    const fragmentMap = createFragmentMap(fragments);\n    const selectionsToResolve = this.collectSelectionsToResolve(\n      mainDefinition,\n      fragmentMap\n    );\n\n    const definitionOperation = mainDefinition.operation;\n\n    const defaultOperationType =\n      definitionOperation ?\n        definitionOperation.charAt(0).toUpperCase() +\n        definitionOperation.slice(1)\n      : \"Query\";\n\n    const { cache, client } = this;\n    const execContext: ExecContext = {\n      fragmentMap,\n      context: {\n        ...context,\n        cache,\n        client,\n      },\n      variables,\n      fragmentMatcher,\n      defaultOperationType,\n      exportedVariables: {},\n      selectionsToResolve,\n      onlyRunForcedResolvers,\n    };\n    const isClientFieldDescendant = false;\n\n    return this.resolveSelectionSet(\n      mainDefinition.selectionSet,\n      isClientFieldDescendant,\n      rootValue,\n      execContext\n    ).then((result) => ({\n      result,\n      exportedVariables: execContext.exportedVariables,\n    }));\n  }\n\n  private async resolveSelectionSet<TData>(\n    selectionSet: SelectionSetNode,\n    isClientFieldDescendant: boolean,\n    rootValue: TData,\n    execContext: ExecContext\n  ) {\n    const { fragmentMap, context, variables } = execContext;\n    const resultsToMerge: TData[] = [rootValue];\n\n    const execute = async (selection: SelectionNode): Promise<void> => {\n      if (\n        !isClientFieldDescendant &&\n        !execContext.selectionsToResolve.has(selection)\n      ) {\n        // Skip selections without @client directives\n        // (still processing if one of the ancestors or one of the child fields has @client directive)\n        return;\n      }\n      if (!shouldInclude(selection, variables)) {\n        // Skip this entirely.\n        return;\n      }\n\n      if (isField(selection)) {\n        return this.resolveField(\n          selection,\n          isClientFieldDescendant,\n          rootValue,\n          execContext\n        ).then((fieldResult) => {\n          if (typeof fieldResult !== \"undefined\") {\n            resultsToMerge.push({\n              [resultKeyNameFromField(selection)]: fieldResult,\n            } as TData);\n          }\n        });\n      }\n\n      let fragment: InlineFragmentNode | FragmentDefinitionNode;\n\n      if (isInlineFragment(selection)) {\n        fragment = selection;\n      } else {\n        // This is a named fragment.\n        fragment = fragmentMap[selection.name.value];\n        invariant(fragment, `No fragment named %s`, selection.name.value);\n      }\n\n      if (fragment && fragment.typeCondition) {\n        const typeCondition = fragment.typeCondition.name.value;\n        if (execContext.fragmentMatcher(rootValue, typeCondition, context)) {\n          return this.resolveSelectionSet(\n            fragment.selectionSet,\n            isClientFieldDescendant,\n            rootValue,\n            execContext\n          ).then((fragmentResult) => {\n            resultsToMerge.push(fragmentResult);\n          });\n        }\n      }\n    };\n\n    return Promise.all(selectionSet.selections.map(execute)).then(function () {\n      return mergeDeepArray(resultsToMerge);\n    });\n  }\n\n  private async resolveField(\n    field: FieldNode,\n    isClientFieldDescendant: boolean,\n    rootValue: any,\n    execContext: ExecContext\n  ): Promise<any> {\n    if (!rootValue) {\n      return null;\n    }\n\n    const { variables } = execContext;\n    const fieldName = field.name.value;\n    const aliasedFieldName = resultKeyNameFromField(field);\n    const aliasUsed = fieldName !== aliasedFieldName;\n    const defaultResult = rootValue[aliasedFieldName] || rootValue[fieldName];\n    let resultPromise = Promise.resolve(defaultResult);\n\n    // Usually all local resolvers are run when passing through here, but\n    // if we've specifically identified that we only want to run forced\n    // resolvers (that is, resolvers for fields marked with\n    // `@client(always: true)`), then we'll skip running non-forced resolvers.\n    if (\n      !execContext.onlyRunForcedResolvers ||\n      this.shouldForceResolvers(field)\n    ) {\n      const resolverType =\n        rootValue.__typename || execContext.defaultOperationType;\n      const resolverMap = this.resolvers && this.resolvers[resolverType];\n      if (resolverMap) {\n        const resolve = resolverMap[aliasUsed ? fieldName : aliasedFieldName];\n        if (resolve) {\n          resultPromise = Promise.resolve(\n            // In case the resolve function accesses reactive variables,\n            // set cacheSlot to the current cache instance.\n            cacheSlot.withValue(this.cache, resolve, [\n              rootValue,\n              argumentsObjectFromField(field, variables),\n              execContext.context,\n              { field, fragmentMap: execContext.fragmentMap },\n            ])\n          );\n        }\n      }\n    }\n\n    return resultPromise.then((result = defaultResult) => {\n      // If an @export directive is associated with the current field, store\n      // the `as` export variable name and current result for later use.\n      if (field.directives) {\n        field.directives.forEach((directive) => {\n          if (directive.name.value === \"export\" && directive.arguments) {\n            directive.arguments.forEach((arg) => {\n              if (arg.name.value === \"as\" && arg.value.kind === \"StringValue\") {\n                execContext.exportedVariables[arg.value.value] = result;\n              }\n            });\n          }\n        });\n      }\n\n      // Handle all scalar types here.\n      if (!field.selectionSet) {\n        return result;\n      }\n\n      // From here down, the field has a selection set, which means it's trying\n      // to query a GraphQLObjectType.\n      if (result == null) {\n        // Basically any field in a GraphQL response can be null, or missing\n        return result;\n      }\n\n      const isClientField =\n        field.directives?.some((d) => d.name.value === \"client\") ?? false;\n\n      if (Array.isArray(result)) {\n        return this.resolveSubSelectedArray(\n          field,\n          isClientFieldDescendant || isClientField,\n          result,\n          execContext\n        );\n      }\n\n      // Returned value is an object, and the query has a sub-selection. Recurse.\n      if (field.selectionSet) {\n        return this.resolveSelectionSet(\n          field.selectionSet,\n          isClientFieldDescendant || isClientField,\n          result,\n          execContext\n        );\n      }\n    });\n  }\n\n  private resolveSubSelectedArray(\n    field: FieldNode,\n    isClientFieldDescendant: boolean,\n    result: any[],\n    execContext: ExecContext\n  ): any {\n    return Promise.all(\n      result.map((item) => {\n        if (item === null) {\n          return null;\n        }\n\n        // This is a nested array, recurse.\n        if (Array.isArray(item)) {\n          return this.resolveSubSelectedArray(\n            field,\n            isClientFieldDescendant,\n            item,\n            execContext\n          );\n        }\n\n        // This is an object, run the selection set on it.\n        if (field.selectionSet) {\n          return this.resolveSelectionSet(\n            field.selectionSet,\n            isClientFieldDescendant,\n            item,\n            execContext\n          );\n        }\n      })\n    );\n  }\n\n  // Collect selection nodes on paths from document root down to all @client directives.\n  // This function takes into account transitive fragment spreads.\n  // Complexity equals to a single `visit` over the full document.\n  private collectSelectionsToResolve(\n    mainDefinition: OperationDefinitionNode,\n    fragmentMap: FragmentMap\n  ): Set<SelectionNode> {\n    const isSingleASTNode = (\n      node: ASTNode | readonly ASTNode[]\n    ): node is ASTNode => !Array.isArray(node);\n    const selectionsToResolveCache = this.selectionsToResolveCache;\n\n    function collectByDefinition(\n      definitionNode: ExecutableDefinitionNode\n    ): Set<SelectionNode> {\n      if (!selectionsToResolveCache.has(definitionNode)) {\n        const matches = new Set<SelectionNode>();\n        selectionsToResolveCache.set(definitionNode, matches);\n\n        visit(definitionNode, {\n          Directive(node: DirectiveNode, _, __, ___, ancestors) {\n            if (node.name.value === \"client\") {\n              ancestors.forEach((node) => {\n                if (isSingleASTNode(node) && isSelectionNode(node)) {\n                  matches.add(node);\n                }\n              });\n            }\n          },\n          FragmentSpread(spread: FragmentSpreadNode, _, __, ___, ancestors) {\n            const fragment = fragmentMap[spread.name.value];\n            invariant(fragment, `No fragment named %s`, spread.name.value);\n\n            const fragmentSelections = collectByDefinition(fragment);\n            if (fragmentSelections.size > 0) {\n              // Fragment for this spread contains @client directive (either directly or transitively)\n              // Collect selection nodes on paths from the root down to fields with the @client directive\n              ancestors.forEach((node) => {\n                if (isSingleASTNode(node) && isSelectionNode(node)) {\n                  matches.add(node);\n                }\n              });\n              matches.add(spread);\n              fragmentSelections.forEach((selection) => {\n                matches.add(selection);\n              });\n            }\n          },\n        });\n      }\n      return selectionsToResolveCache.get(definitionNode)!;\n    }\n    return collectByDefinition(mainDefinition);\n  }\n}\n","import type { DocumentNode, GraphQLError } from \"graphql\";\nimport { equal } from \"@wry/equality\";\n\nimport type { Cache, ApolloCache } from \"../cache/index.js\";\nimport { DeepMerger } from \"../utilities/index.js\";\nimport { mergeIncrementalData } from \"../utilities/index.js\";\nimport type { WatchQueryOptions, ErrorPolicy } from \"./watchQueryOptions.js\";\nimport type { ObservableQuery } from \"./ObservableQuery.js\";\nimport { reobserveCacheFirst } from \"./ObservableQuery.js\";\nimport type { QueryListener } from \"./types.js\";\nimport type { FetchResult } from \"../link/core/index.js\";\nimport {\n  isNonEmptyArray,\n  graphQLResultHasError,\n  canUseWeakMap,\n} from \"../utilities/index.js\";\nimport { NetworkStatus, isNetworkRequestInFlight } from \"./networkStatus.js\";\nimport type { ApolloError } from \"../errors/index.js\";\nimport type { QueryManager } from \"./QueryManager.js\";\n\nexport type QueryStoreValue = Pick<\n  QueryInfo,\n  \"variables\" | \"networkStatus\" | \"networkError\" | \"graphQLErrors\"\n>;\n\nexport const enum CacheWriteBehavior {\n  FORBID,\n  OVERWRITE,\n  MERGE,\n}\n\nconst destructiveMethodCounts = new (canUseWeakMap ? WeakMap : Map)<\n  ApolloCache<any>,\n  number\n>();\n\nfunction wrapDestructiveCacheMethod(\n  cache: ApolloCache<any>,\n  methodName: \"evict\" | \"modify\" | \"reset\"\n) {\n  const original = cache[methodName];\n  if (typeof original === \"function\") {\n    // @ts-expect-error this is just too generic to be typed correctly\n    cache[methodName] = function () {\n      destructiveMethodCounts.set(\n        cache,\n        // The %1e15 allows the count to wrap around to 0 safely every\n        // quadrillion evictions, so there's no risk of overflow. To be\n        // clear, this is more of a pedantic principle than something\n        // that matters in any conceivable practical scenario.\n        (destructiveMethodCounts.get(cache)! + 1) % 1e15\n      );\n      // @ts-expect-error this is just too generic to be typed correctly\n      return original.apply(this, arguments);\n    };\n  }\n}\n\nfunction cancelNotifyTimeout(info: QueryInfo) {\n  if (info[\"notifyTimeout\"]) {\n    clearTimeout(info[\"notifyTimeout\"]);\n    info[\"notifyTimeout\"] = void 0;\n  }\n}\n\n// A QueryInfo object represents a single query managed by the\n// QueryManager, which tracks all QueryInfo objects by queryId in its\n// this.queries Map. QueryInfo objects store the latest results and errors\n// for the given query, and are responsible for reporting those results to\n// the corresponding ObservableQuery, via the QueryInfo.notify method.\n// Results are reported asynchronously whenever setDiff marks the\n// QueryInfo object as dirty, though a call to the QueryManager's\n// broadcastQueries method may trigger the notification before it happens\n// automatically. This class used to be a simple interface type without\n// any field privacy or meaningful methods, which is why it still has so\n// many public fields. The effort to lock down and simplify the QueryInfo\n// interface is ongoing, and further improvements are welcome.\nexport class QueryInfo {\n  listeners = new Set<QueryListener>();\n  document: DocumentNode | null = null;\n  lastRequestId = 1;\n  variables?: Record<string, any>;\n  networkStatus?: NetworkStatus;\n  networkError?: Error | null;\n  graphQLErrors?: ReadonlyArray<GraphQLError>;\n  stopped = false;\n\n  private cache: ApolloCache<any>;\n\n  constructor(\n    queryManager: QueryManager<any>,\n    public readonly queryId = queryManager.generateQueryId()\n  ) {\n    const cache = (this.cache = queryManager.cache);\n\n    // Track how often cache.evict is called, since we want eviction to\n    // override the feud-stopping logic in the markResult method, by\n    // causing shouldWrite to return true. Wrapping the cache.evict method\n    // is a bit of a hack, but it saves us from having to make eviction\n    // counting an official part of the ApolloCache API.\n    if (!destructiveMethodCounts.has(cache)) {\n      destructiveMethodCounts.set(cache, 0);\n      wrapDestructiveCacheMethod(cache, \"evict\");\n      wrapDestructiveCacheMethod(cache, \"modify\");\n      wrapDestructiveCacheMethod(cache, \"reset\");\n    }\n  }\n\n  public init(query: {\n    document: DocumentNode;\n    variables: Record<string, any> | undefined;\n    // The initial networkStatus for this fetch, most often\n    // NetworkStatus.loading, but also possibly fetchMore, poll, refetch,\n    // or setVariables.\n    networkStatus?: NetworkStatus;\n    observableQuery?: ObservableQuery<any, any>;\n    lastRequestId?: number;\n  }): this {\n    let networkStatus = query.networkStatus || NetworkStatus.loading;\n    if (\n      this.variables &&\n      this.networkStatus !== NetworkStatus.loading &&\n      !equal(this.variables, query.variables)\n    ) {\n      networkStatus = NetworkStatus.setVariables;\n    }\n\n    if (!equal(query.variables, this.variables)) {\n      this.lastDiff = void 0;\n    }\n\n    Object.assign(this, {\n      document: query.document,\n      variables: query.variables,\n      networkError: null,\n      graphQLErrors: this.graphQLErrors || [],\n      networkStatus,\n    });\n\n    if (query.observableQuery) {\n      this.setObservableQuery(query.observableQuery);\n    }\n\n    if (query.lastRequestId) {\n      this.lastRequestId = query.lastRequestId;\n    }\n\n    return this;\n  }\n\n  private dirty: boolean = false;\n\n  private notifyTimeout?: ReturnType<typeof setTimeout>;\n\n  reset() {\n    cancelNotifyTimeout(this);\n    this.dirty = false;\n  }\n\n  resetDiff() {\n    this.lastDiff = void 0;\n  }\n\n  getDiff(): Cache.DiffResult<any> {\n    const options = this.getDiffOptions();\n\n    if (this.lastDiff && equal(options, this.lastDiff.options)) {\n      return this.lastDiff.diff;\n    }\n\n    this.updateWatch(this.variables);\n\n    const oq = this.observableQuery;\n    if (oq && oq.options.fetchPolicy === \"no-cache\") {\n      return { complete: false };\n    }\n\n    const diff = this.cache.diff(options);\n    this.updateLastDiff(diff, options);\n    return diff;\n  }\n\n  private lastDiff?: {\n    diff: Cache.DiffResult<any>;\n    options: Cache.DiffOptions;\n  };\n\n  private updateLastDiff(\n    diff: Cache.DiffResult<any> | null,\n    options?: Cache.DiffOptions\n  ) {\n    this.lastDiff =\n      diff ?\n        {\n          diff,\n          options: options || this.getDiffOptions(),\n        }\n      : void 0;\n  }\n\n  private getDiffOptions(variables = this.variables): Cache.DiffOptions {\n    return {\n      query: this.document!,\n      variables,\n      returnPartialData: true,\n      optimistic: true,\n      canonizeResults: this.observableQuery?.options.canonizeResults,\n    };\n  }\n\n  setDiff(diff: Cache.DiffResult<any> | null) {\n    const oldDiff = this.lastDiff && this.lastDiff.diff;\n\n    // If we are trying to deliver an incomplete cache result, we avoid\n    // reporting it if the query has errored, otherwise we let the broadcast try\n    // and repair the partial result by refetching the query. This check avoids\n    // a situation where a query that errors and another succeeds with\n    // overlapping data does not report the partial data result to the errored\n    // query.\n    //\n    // See https://github.com/apollographql/apollo-client/issues/11400 for more\n    // information on this issue.\n    if (diff && !diff.complete && this.observableQuery?.getLastError()) {\n      return;\n    }\n\n    this.updateLastDiff(diff);\n\n    if (!this.dirty && !equal(oldDiff && oldDiff.result, diff && diff.result)) {\n      this.dirty = true;\n      if (!this.notifyTimeout) {\n        this.notifyTimeout = setTimeout(() => this.notify(), 0);\n      }\n    }\n  }\n\n  public readonly observableQuery: ObservableQuery<any, any> | null = null;\n  private oqListener?: QueryListener;\n\n  setObservableQuery(oq: ObservableQuery<any, any> | null) {\n    if (oq === this.observableQuery) return;\n\n    if (this.oqListener) {\n      this.listeners.delete(this.oqListener);\n    }\n\n    (this as any).observableQuery = oq;\n\n    if (oq) {\n      oq[\"queryInfo\"] = this;\n      this.listeners.add(\n        (this.oqListener = () => {\n          const diff = this.getDiff();\n          if (diff.fromOptimisticTransaction) {\n            // If this diff came from an optimistic transaction, deliver the\n            // current cache data to the ObservableQuery, but don't perform a\n            // reobservation, since oq.reobserveCacheFirst might make a network\n            // request, and we never want to trigger network requests in the\n            // middle of optimistic updates.\n            oq[\"observe\"]();\n          } else {\n            // Otherwise, make the ObservableQuery \"reobserve\" the latest data\n            // using a temporary fetch policy of \"cache-first\", so complete cache\n            // results have a chance to be delivered without triggering additional\n            // network requests, even when options.fetchPolicy is \"network-only\"\n            // or \"cache-and-network\". All other fetch policies are preserved by\n            // this method, and are handled by calling oq.reobserve(). If this\n            // reobservation is spurious, isDifferentFromLastResult still has a\n            // chance to catch it before delivery to ObservableQuery subscribers.\n            reobserveCacheFirst(oq);\n          }\n        })\n      );\n    } else {\n      delete this.oqListener;\n    }\n  }\n\n  notify() {\n    cancelNotifyTimeout(this);\n\n    if (this.shouldNotify()) {\n      this.listeners.forEach((listener) => listener(this));\n    }\n\n    this.dirty = false;\n  }\n\n  private shouldNotify() {\n    if (!this.dirty || !this.listeners.size) {\n      return false;\n    }\n\n    if (isNetworkRequestInFlight(this.networkStatus) && this.observableQuery) {\n      const { fetchPolicy } = this.observableQuery.options;\n      if (fetchPolicy !== \"cache-only\" && fetchPolicy !== \"cache-and-network\") {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  public stop() {\n    if (!this.stopped) {\n      this.stopped = true;\n\n      // Cancel the pending notify timeout\n      this.reset();\n\n      this.cancel();\n      // Revert back to the no-op version of cancel inherited from\n      // QueryInfo.prototype.\n      this.cancel = QueryInfo.prototype.cancel;\n\n      const oq = this.observableQuery;\n      if (oq) oq.stopPolling();\n    }\n  }\n\n  // This method is a no-op by default, until/unless overridden by the\n  // updateWatch method.\n  private cancel() {}\n\n  private lastWatch?: Cache.WatchOptions;\n\n  private updateWatch(variables = this.variables) {\n    const oq = this.observableQuery;\n    if (oq && oq.options.fetchPolicy === \"no-cache\") {\n      return;\n    }\n\n    const watchOptions: Cache.WatchOptions = {\n      // Although this.getDiffOptions returns Cache.DiffOptions instead of\n      // Cache.WatchOptions, all the overlapping options should be the same, so\n      // we can reuse getDiffOptions here, for consistency.\n      ...this.getDiffOptions(variables),\n      watcher: this,\n      callback: (diff) => this.setDiff(diff),\n    };\n\n    if (!this.lastWatch || !equal(watchOptions, this.lastWatch)) {\n      this.cancel();\n      this.cancel = this.cache.watch((this.lastWatch = watchOptions));\n    }\n  }\n\n  private lastWrite?: {\n    result: FetchResult<any>;\n    variables: WatchQueryOptions[\"variables\"];\n    dmCount: number | undefined;\n  };\n\n  public resetLastWrite() {\n    this.lastWrite = void 0;\n  }\n\n  private shouldWrite(\n    result: FetchResult<any>,\n    variables: WatchQueryOptions[\"variables\"]\n  ) {\n    const { lastWrite } = this;\n    return !(\n      lastWrite &&\n      // If cache.evict has been called since the last time we wrote this\n      // data into the cache, there's a chance writing this result into\n      // the cache will repair what was evicted.\n      lastWrite.dmCount === destructiveMethodCounts.get(this.cache) &&\n      equal(variables, lastWrite.variables) &&\n      equal(result.data, lastWrite.result.data)\n    );\n  }\n\n  public markResult<T>(\n    result: FetchResult<T>,\n    document: DocumentNode,\n    options: Pick<\n      WatchQueryOptions,\n      \"variables\" | \"fetchPolicy\" | \"errorPolicy\"\n    >,\n    cacheWriteBehavior: CacheWriteBehavior\n  ) {\n    const merger = new DeepMerger();\n    const graphQLErrors =\n      isNonEmptyArray(result.errors) ? result.errors.slice(0) : [];\n\n    // Cancel the pending notify timeout (if it exists) to prevent extraneous network\n    // requests. To allow future notify timeouts, diff and dirty are reset as well.\n    this.reset();\n\n    if (\"incremental\" in result && isNonEmptyArray(result.incremental)) {\n      const mergedData = mergeIncrementalData(this.getDiff().result, result);\n      result.data = mergedData;\n\n      // Detect the first chunk of a deferred query and merge it with existing\n      // cache data. This ensures a `cache-first` fetch policy that returns\n      // partial cache data or a `cache-and-network` fetch policy that already\n      // has full data in the cache does not complain when trying to merge the\n      // initial deferred server data with existing cache data.\n    } else if (\"hasNext\" in result && result.hasNext) {\n      const diff = this.getDiff();\n      result.data = merger.merge(diff.result, result.data);\n    }\n\n    this.graphQLErrors = graphQLErrors;\n\n    if (options.fetchPolicy === \"no-cache\") {\n      this.updateLastDiff(\n        { result: result.data, complete: true },\n        this.getDiffOptions(options.variables)\n      );\n    } else if (cacheWriteBehavior !== CacheWriteBehavior.FORBID) {\n      if (shouldWriteResult(result, options.errorPolicy)) {\n        // Using a transaction here so we have a chance to read the result\n        // back from the cache before the watch callback fires as a result\n        // of writeQuery, so we can store the new diff quietly and ignore\n        // it when we receive it redundantly from the watch callback.\n        this.cache.performTransaction((cache) => {\n          if (this.shouldWrite(result, options.variables)) {\n            cache.writeQuery({\n              query: document,\n              data: result.data as T,\n              variables: options.variables,\n              overwrite: cacheWriteBehavior === CacheWriteBehavior.OVERWRITE,\n            });\n\n            this.lastWrite = {\n              result,\n              variables: options.variables,\n              dmCount: destructiveMethodCounts.get(this.cache),\n            };\n          } else {\n            // If result is the same as the last result we received from\n            // the network (and the variables match too), avoid writing\n            // result into the cache again. The wisdom of skipping this\n            // cache write is far from obvious, since any cache write\n            // could be the one that puts the cache back into a desired\n            // state, fixing corruption or missing data. However, if we\n            // always write every network result into the cache, we enable\n            // feuds between queries competing to update the same data in\n            // incompatible ways, which can lead to an endless cycle of\n            // cache broadcasts and useless network requests. As with any\n            // feud, eventually one side must step back from the brink,\n            // letting the other side(s) have the last word(s). There may\n            // be other points where we could break this cycle, such as\n            // silencing the broadcast for cache.writeQuery (not a good\n            // idea, since it just delays the feud a bit) or somehow\n            // avoiding the network request that just happened (also bad,\n            // because the server could return useful new data). All\n            // options considered, skipping this cache write seems to be\n            // the least damaging place to break the cycle, because it\n            // reflects the intuition that we recently wrote this exact\n            // result into the cache, so the cache *should* already/still\n            // contain this data. If some other query has clobbered that\n            // data in the meantime, that's too bad, but there will be no\n            // winners if every query blindly reverts to its own version\n            // of the data. This approach also gives the network a chance\n            // to return new data, which will be written into the cache as\n            // usual, notifying only those queries that are directly\n            // affected by the cache updates, as usual. In the future, an\n            // even more sophisticated cache could perhaps prevent or\n            // mitigate the clobbering somehow, but that would make this\n            // particular cache write even less important, and thus\n            // skipping it would be even safer than it is today.\n            if (this.lastDiff && this.lastDiff.diff.complete) {\n              // Reuse data from the last good (complete) diff that we\n              // received, when possible.\n              result.data = this.lastDiff.diff.result;\n              return;\n            }\n            // If the previous this.diff was incomplete, fall through to\n            // re-reading the latest data with cache.diff, below.\n          }\n\n          const diffOptions = this.getDiffOptions(options.variables);\n          const diff = cache.diff<T>(diffOptions);\n\n          // In case the QueryManager stops this QueryInfo before its\n          // results are delivered, it's important to avoid restarting the\n          // cache watch when markResult is called. We also avoid updating\n          // the watch if we are writing a result that doesn't match the current\n          // variables to avoid race conditions from broadcasting the wrong\n          // result.\n          if (!this.stopped && equal(this.variables, options.variables)) {\n            // Any time we're about to update this.diff, we need to make\n            // sure we've started watching the cache.\n            this.updateWatch(options.variables);\n          }\n\n          // If we're allowed to write to the cache, and we can read a\n          // complete result from the cache, update result.data to be the\n          // result from the cache, rather than the raw network result.\n          // Set without setDiff to avoid triggering a notify call, since\n          // we have other ways of notifying for this result.\n          this.updateLastDiff(diff, diffOptions);\n          if (diff.complete) {\n            result.data = diff.result;\n          }\n        });\n      } else {\n        this.lastWrite = void 0;\n      }\n    }\n  }\n\n  public markReady() {\n    this.networkError = null;\n    return (this.networkStatus = NetworkStatus.ready);\n  }\n\n  public markError(error: ApolloError) {\n    this.networkStatus = NetworkStatus.error;\n    this.lastWrite = void 0;\n\n    this.reset();\n\n    if (error.graphQLErrors) {\n      this.graphQLErrors = error.graphQLErrors;\n    }\n\n    if (error.networkError) {\n      this.networkError = error.networkError;\n    }\n\n    return error;\n  }\n}\n\nexport function shouldWriteResult<T>(\n  result: FetchResult<T>,\n  errorPolicy: ErrorPolicy = \"none\"\n) {\n  const ignoreErrors = errorPolicy === \"ignore\" || errorPolicy === \"all\";\n  let writeWithErrors = !graphQLResultHasError(result);\n  if (!writeWithErrors && ignoreErrors && result.data) {\n    writeWithErrors = true;\n  }\n  return writeWithErrors;\n}\n","import { invariant, newInvariantError } from \"../utilities/globals/index.js\";\n\nimport type { DocumentNode } from \"graphql\";\n// TODO(brian): A hack until this issue is resolved (https://github.com/graphql/graphql-js/issues/3356)\ntype OperationTypeNode = any;\nimport { equal } from \"@wry/equality\";\n\nimport type { ApolloLink, FetchResult } from \"../link/core/index.js\";\nimport { execute } from \"../link/core/index.js\";\nimport {\n  defaultCacheSizes,\n  hasDirectives,\n  isExecutionPatchIncrementalResult,\n  isExecutionPatchResult,\n  removeDirectivesFromDocument,\n} from \"../utilities/index.js\";\nimport type { Cache, ApolloCache } from \"../cache/index.js\";\nimport { canonicalStringify } from \"../cache/index.js\";\n\nimport type {\n  ObservableSubscription,\n  ConcastSourcesArray,\n} from \"../utilities/index.js\";\nimport {\n  getDefaultValues,\n  getOperationDefinition,\n  getOperationName,\n  hasClientExports,\n  graphQLResultHasError,\n  getGraphQLErrorsFromResult,\n  Observable,\n  asyncMap,\n  isNonEmptyArray,\n  Concast,\n  makeUniqueId,\n  isDocumentNode,\n  isNonNullObject,\n  DocumentTransform,\n} from \"../utilities/index.js\";\nimport { mergeIncrementalData } from \"../utilities/common/incrementalResult.js\";\nimport {\n  ApolloError,\n  isApolloError,\n  graphQLResultHasProtocolErrors,\n} from \"../errors/index.js\";\nimport type {\n  QueryOptions,\n  WatchQueryOptions,\n  SubscriptionOptions,\n  MutationOptions,\n  ErrorPolicy,\n  MutationFetchPolicy,\n} from \"./watchQueryOptions.js\";\nimport { ObservableQuery, logMissingFieldErrors } from \"./ObservableQuery.js\";\nimport { NetworkStatus, isNetworkRequestInFlight } from \"./networkStatus.js\";\nimport type {\n  ApolloQueryResult,\n  OperationVariables,\n  MutationUpdaterFunction,\n  OnQueryUpdated,\n  InternalRefetchQueriesInclude,\n  InternalRefetchQueriesOptions,\n  InternalRefetchQueriesResult,\n  InternalRefetchQueriesMap,\n  DefaultContext,\n} from \"./types.js\";\nimport { LocalState } from \"./LocalState.js\";\n\nimport type { QueryStoreValue } from \"./QueryInfo.js\";\nimport {\n  QueryInfo,\n  shouldWriteResult,\n  CacheWriteBehavior,\n} from \"./QueryInfo.js\";\nimport type { ApolloErrorOptions } from \"../errors/index.js\";\nimport { PROTOCOL_ERRORS_SYMBOL } from \"../errors/index.js\";\nimport { print } from \"../utilities/index.js\";\nimport type { IgnoreModifier } from \"../cache/core/types/common.js\";\nimport type { TODO } from \"../utilities/types/TODO.js\";\n\nconst { hasOwnProperty } = Object.prototype;\n\nconst IGNORE: IgnoreModifier = Object.create(null);\n\ninterface MutationStoreValue {\n  mutation: DocumentNode;\n  variables: Record<string, any>;\n  loading: boolean;\n  error: Error | null;\n}\n\ntype UpdateQueries<TData> = MutationOptions<TData, any, any>[\"updateQueries\"];\n\ninterface TransformCacheEntry {\n  hasClientExports: boolean;\n  hasForcedResolvers: boolean;\n  hasNonreactiveDirective: boolean;\n  clientQuery: DocumentNode | null;\n  serverQuery: DocumentNode | null;\n  defaultVars: OperationVariables;\n  asQuery: DocumentNode;\n}\n\nimport type { DefaultOptions } from \"./ApolloClient.js\";\nimport { Trie } from \"@wry/trie\";\nimport { AutoCleanedWeakCache, cacheSizes } from \"../utilities/index.js\";\n\nexport class QueryManager<TStore> {\n  public cache: ApolloCache<TStore>;\n  public link: ApolloLink;\n  public defaultOptions: DefaultOptions;\n\n  public readonly assumeImmutableResults: boolean;\n  public readonly documentTransform: DocumentTransform;\n  public readonly ssrMode: boolean;\n  public readonly defaultContext: Partial<DefaultContext>;\n\n  private queryDeduplication: boolean;\n  private clientAwareness: Record<string, string> = {};\n  private localState: LocalState<TStore>;\n\n  private onBroadcast?: () => void;\n  public mutationStore?: {\n    [mutationId: string]: MutationStoreValue;\n  };\n\n  // All the queries that the QueryManager is currently managing (not\n  // including mutations and subscriptions).\n  private queries = new Map<string, QueryInfo>();\n\n  // Maps from queryId strings to Promise rejection functions for\n  // currently active queries and fetches.\n  // Use protected instead of private field so\n  // @apollo/experimental-nextjs-app-support can access type info.\n  protected fetchCancelFns = new Map<string, (error: any) => any>();\n\n  constructor({\n    cache,\n    link,\n    defaultOptions,\n    documentTransform,\n    queryDeduplication = false,\n    onBroadcast,\n    ssrMode = false,\n    clientAwareness = {},\n    localState,\n    assumeImmutableResults = !!cache.assumeImmutableResults,\n    defaultContext,\n  }: {\n    cache: ApolloCache<TStore>;\n    link: ApolloLink;\n    defaultOptions?: DefaultOptions;\n    documentTransform?: DocumentTransform;\n    queryDeduplication?: boolean;\n    onBroadcast?: () => void;\n    ssrMode?: boolean;\n    clientAwareness?: Record<string, string>;\n    localState?: LocalState<TStore>;\n    assumeImmutableResults?: boolean;\n    defaultContext?: Partial<DefaultContext>;\n  }) {\n    const defaultDocumentTransform = new DocumentTransform(\n      (document) => this.cache.transformDocument(document),\n      // Allow the apollo cache to manage its own transform caches\n      { cache: false }\n    );\n\n    this.cache = cache;\n    this.link = link;\n    this.defaultOptions = defaultOptions || Object.create(null);\n    this.queryDeduplication = queryDeduplication;\n    this.clientAwareness = clientAwareness;\n    this.localState = localState || new LocalState({ cache });\n    this.ssrMode = ssrMode;\n    this.assumeImmutableResults = assumeImmutableResults;\n    this.documentTransform =\n      documentTransform ?\n        defaultDocumentTransform\n          .concat(documentTransform)\n          // The custom document transform may add new fragment spreads or new\n          // field selections, so we want to give the cache a chance to run\n          // again. For example, the InMemoryCache adds __typename to field\n          // selections and fragments from the fragment registry.\n          .concat(defaultDocumentTransform)\n      : defaultDocumentTransform;\n    this.defaultContext = defaultContext || Object.create(null);\n\n    if ((this.onBroadcast = onBroadcast)) {\n      this.mutationStore = Object.create(null);\n    }\n  }\n\n  /**\n   * Call this method to terminate any active query processes, making it safe\n   * to dispose of this QueryManager instance.\n   */\n  public stop() {\n    this.queries.forEach((_info, queryId) => {\n      this.stopQueryNoBroadcast(queryId);\n    });\n\n    this.cancelPendingFetches(\n      newInvariantError(\"QueryManager stopped while query was in flight\")\n    );\n  }\n\n  private cancelPendingFetches(error: Error) {\n    this.fetchCancelFns.forEach((cancel) => cancel(error));\n    this.fetchCancelFns.clear();\n  }\n\n  public async mutate<\n    TData,\n    TVariables extends OperationVariables,\n    TContext extends Record<string, any>,\n    TCache extends ApolloCache<any>,\n  >({\n    mutation,\n    variables,\n    optimisticResponse,\n    updateQueries,\n    refetchQueries = [],\n    awaitRefetchQueries = false,\n    update: updateWithProxyFn,\n    onQueryUpdated,\n    fetchPolicy = this.defaultOptions.mutate?.fetchPolicy || \"network-only\",\n    errorPolicy = this.defaultOptions.mutate?.errorPolicy || \"none\",\n    keepRootFields,\n    context,\n  }: MutationOptions<TData, TVariables, TContext>): Promise<\n    FetchResult<TData>\n  > {\n    invariant(\n      mutation,\n      \"mutation option is required. You must specify your GraphQL document in the mutation option.\"\n    );\n\n    invariant(\n      fetchPolicy === \"network-only\" || fetchPolicy === \"no-cache\",\n      \"Mutations support only 'network-only' or 'no-cache' fetchPolicy strings. The default `network-only` behavior automatically writes mutation results to the cache. Passing `no-cache` skips the cache write.\"\n    );\n\n    const mutationId = this.generateMutationId();\n\n    mutation = this.cache.transformForLink(this.transform(mutation));\n    const { hasClientExports } = this.getDocumentInfo(mutation);\n\n    variables = this.getVariables(mutation, variables) as TVariables;\n    if (hasClientExports) {\n      variables = (await this.localState.addExportedVariables(\n        mutation,\n        variables,\n        context\n      )) as TVariables;\n    }\n\n    const mutationStoreValue =\n      this.mutationStore &&\n      (this.mutationStore[mutationId] = {\n        mutation,\n        variables,\n        loading: true,\n        error: null,\n      } as MutationStoreValue);\n\n    const isOptimistic =\n      optimisticResponse &&\n      this.markMutationOptimistic<TData, TVariables, TContext, TCache>(\n        optimisticResponse,\n        {\n          mutationId,\n          document: mutation,\n          variables,\n          fetchPolicy,\n          errorPolicy,\n          context,\n          updateQueries,\n          update: updateWithProxyFn,\n          keepRootFields,\n        }\n      );\n\n    this.broadcastQueries();\n\n    const self = this;\n\n    return new Promise((resolve, reject) => {\n      return asyncMap(\n        self.getObservableFromLink(\n          mutation,\n          {\n            ...context,\n            optimisticResponse: isOptimistic ? optimisticResponse : void 0,\n          },\n          variables,\n          false\n        ),\n\n        (result: FetchResult<TData>) => {\n          if (graphQLResultHasError(result) && errorPolicy === \"none\") {\n            throw new ApolloError({\n              graphQLErrors: getGraphQLErrorsFromResult(result),\n            });\n          }\n\n          if (mutationStoreValue) {\n            mutationStoreValue.loading = false;\n            mutationStoreValue.error = null;\n          }\n\n          const storeResult: typeof result = { ...result };\n\n          if (typeof refetchQueries === \"function\") {\n            refetchQueries = refetchQueries(storeResult);\n          }\n\n          if (errorPolicy === \"ignore\" && graphQLResultHasError(storeResult)) {\n            delete storeResult.errors;\n          }\n\n          return self.markMutationResult<TData, TVariables, TContext, TCache>({\n            mutationId,\n            result: storeResult,\n            document: mutation,\n            variables,\n            fetchPolicy,\n            errorPolicy,\n            context,\n            update: updateWithProxyFn,\n            updateQueries,\n            awaitRefetchQueries,\n            refetchQueries,\n            removeOptimistic: isOptimistic ? mutationId : void 0,\n            onQueryUpdated,\n            keepRootFields,\n          });\n        }\n      ).subscribe({\n        next(storeResult) {\n          self.broadcastQueries();\n\n          // Since mutations might receive multiple payloads from the\n          // ApolloLink chain (e.g. when used with @defer),\n          // we resolve with a SingleExecutionResult or after the final\n          // ExecutionPatchResult has arrived and we have assembled the\n          // multipart response into a single result.\n          if (!(\"hasNext\" in storeResult) || storeResult.hasNext === false) {\n            resolve(storeResult);\n          }\n        },\n\n        error(err: Error) {\n          if (mutationStoreValue) {\n            mutationStoreValue.loading = false;\n            mutationStoreValue.error = err;\n          }\n\n          if (isOptimistic) {\n            self.cache.removeOptimistic(mutationId);\n          }\n\n          self.broadcastQueries();\n\n          reject(\n            err instanceof ApolloError ? err : (\n              new ApolloError({\n                networkError: err,\n              })\n            )\n          );\n        },\n      });\n    });\n  }\n\n  public markMutationResult<\n    TData,\n    TVariables,\n    TContext,\n    TCache extends ApolloCache<any>,\n  >(\n    mutation: {\n      mutationId: string;\n      result: FetchResult<TData>;\n      document: DocumentNode;\n      variables?: TVariables;\n      fetchPolicy?: MutationFetchPolicy;\n      errorPolicy: ErrorPolicy;\n      context?: TContext;\n      updateQueries: UpdateQueries<TData>;\n      update?: MutationUpdaterFunction<TData, TVariables, TContext, TCache>;\n      awaitRefetchQueries?: boolean;\n      refetchQueries?: InternalRefetchQueriesInclude;\n      removeOptimistic?: string;\n      onQueryUpdated?: OnQueryUpdated<any>;\n      keepRootFields?: boolean;\n    },\n    cache = this.cache\n  ): Promise<FetchResult<TData>> {\n    let { result } = mutation;\n    const cacheWrites: Cache.WriteOptions[] = [];\n    const skipCache = mutation.fetchPolicy === \"no-cache\";\n\n    if (!skipCache && shouldWriteResult(result, mutation.errorPolicy)) {\n      if (!isExecutionPatchIncrementalResult(result)) {\n        cacheWrites.push({\n          result: result.data,\n          dataId: \"ROOT_MUTATION\",\n          query: mutation.document,\n          variables: mutation.variables,\n        });\n      }\n      if (\n        isExecutionPatchIncrementalResult(result) &&\n        isNonEmptyArray(result.incremental)\n      ) {\n        const diff = cache.diff<TData>({\n          id: \"ROOT_MUTATION\",\n          // The cache complains if passed a mutation where it expects a\n          // query, so we transform mutations and subscriptions to queries\n          // (only once, thanks to this.transformCache).\n          query: this.getDocumentInfo(mutation.document).asQuery,\n          variables: mutation.variables,\n          optimistic: false,\n          returnPartialData: true,\n        });\n        let mergedData;\n        if (diff.result) {\n          mergedData = mergeIncrementalData(diff.result, result);\n        }\n        if (typeof mergedData !== \"undefined\") {\n          // cast the ExecutionPatchResult to FetchResult here since\n          // ExecutionPatchResult never has `data` when returned from the server\n          (result as FetchResult).data = mergedData;\n          cacheWrites.push({\n            result: mergedData,\n            dataId: \"ROOT_MUTATION\",\n            query: mutation.document,\n            variables: mutation.variables,\n          });\n        }\n      }\n\n      const { updateQueries } = mutation;\n      if (updateQueries) {\n        this.queries.forEach(({ observableQuery }, queryId) => {\n          const queryName = observableQuery && observableQuery.queryName;\n          if (!queryName || !hasOwnProperty.call(updateQueries, queryName)) {\n            return;\n          }\n          const updater = updateQueries[queryName];\n          const { document, variables } = this.queries.get(queryId)!;\n\n          // Read the current query result from the store.\n          const { result: currentQueryResult, complete } = cache.diff<TData>({\n            query: document!,\n            variables,\n            returnPartialData: true,\n            optimistic: false,\n          });\n\n          if (complete && currentQueryResult) {\n            // Run our reducer using the current query result and the mutation result.\n            const nextQueryResult = updater(currentQueryResult, {\n              mutationResult: result,\n              queryName: (document && getOperationName(document)) || void 0,\n              queryVariables: variables!,\n            });\n\n            // Write the modified result back into the store if we got a new result.\n            if (nextQueryResult) {\n              cacheWrites.push({\n                result: nextQueryResult,\n                dataId: \"ROOT_QUERY\",\n                query: document!,\n                variables,\n              });\n            }\n          }\n        });\n      }\n    }\n\n    if (\n      cacheWrites.length > 0 ||\n      (mutation.refetchQueries || \"\").length > 0 ||\n      mutation.update ||\n      mutation.onQueryUpdated ||\n      mutation.removeOptimistic\n    ) {\n      const results: any[] = [];\n\n      this.refetchQueries({\n        updateCache: (cache) => {\n          if (!skipCache) {\n            cacheWrites.forEach((write) => cache.write(write));\n          }\n\n          // If the mutation has some writes associated with it then we need to\n          // apply those writes to the store by running this reducer again with\n          // a write action.\n          const { update } = mutation;\n          // Determine whether result is a SingleExecutionResult,\n          // or the final ExecutionPatchResult.\n          const isFinalResult =\n            !isExecutionPatchResult(result) ||\n            (isExecutionPatchIncrementalResult(result) && !result.hasNext);\n\n          if (update) {\n            if (!skipCache) {\n              // Re-read the ROOT_MUTATION data we just wrote into the cache\n              // (the first cache.write call in the cacheWrites.forEach loop\n              // above), so field read functions have a chance to run for\n              // fields within mutation result objects.\n              const diff = cache.diff<TData>({\n                id: \"ROOT_MUTATION\",\n                // The cache complains if passed a mutation where it expects a\n                // query, so we transform mutations and subscriptions to queries\n                // (only once, thanks to this.transformCache).\n                query: this.getDocumentInfo(mutation.document).asQuery,\n                variables: mutation.variables,\n                optimistic: false,\n                returnPartialData: true,\n              });\n\n              if (diff.complete) {\n                result = { ...(result as FetchResult), data: diff.result };\n                if (\"incremental\" in result) {\n                  delete result.incremental;\n                }\n                if (\"hasNext\" in result) {\n                  delete result.hasNext;\n                }\n              }\n            }\n\n            // If we've received the whole response,\n            // either a SingleExecutionResult or the final ExecutionPatchResult,\n            // call the update function.\n            if (isFinalResult) {\n              update(cache as TCache, result, {\n                context: mutation.context,\n                variables: mutation.variables,\n              });\n            }\n          }\n\n          // TODO Do this with cache.evict({ id: 'ROOT_MUTATION' }) but make it\n          // shallow to allow rolling back optimistic evictions.\n          if (!skipCache && !mutation.keepRootFields && isFinalResult) {\n            cache.modify({\n              id: \"ROOT_MUTATION\",\n              fields(value, { fieldName, DELETE }) {\n                return fieldName === \"__typename\" ? value : DELETE;\n              },\n            });\n          }\n        },\n\n        include: mutation.refetchQueries,\n\n        // Write the final mutation.result to the root layer of the cache.\n        optimistic: false,\n\n        // Remove the corresponding optimistic layer at the same time as we\n        // write the final non-optimistic result.\n        removeOptimistic: mutation.removeOptimistic,\n\n        // Let the caller of client.mutate optionally determine the refetching\n        // behavior for watched queries after the mutation.update function runs.\n        // If no onQueryUpdated function was provided for this mutation, pass\n        // null instead of undefined to disable the default refetching behavior.\n        onQueryUpdated: mutation.onQueryUpdated || null,\n      }).forEach((result) => results.push(result));\n\n      if (mutation.awaitRefetchQueries || mutation.onQueryUpdated) {\n        // Returning a promise here makes the mutation await that promise, so we\n        // include results in that promise's work if awaitRefetchQueries or an\n        // onQueryUpdated function was specified.\n        return Promise.all(results).then(() => result);\n      }\n    }\n\n    return Promise.resolve(result);\n  }\n\n  public markMutationOptimistic<\n    TData,\n    TVariables,\n    TContext,\n    TCache extends ApolloCache<any>,\n  >(\n    optimisticResponse: any,\n    mutation: {\n      mutationId: string;\n      document: DocumentNode;\n      variables?: TVariables;\n      fetchPolicy?: MutationFetchPolicy;\n      errorPolicy: ErrorPolicy;\n      context?: TContext;\n      updateQueries: UpdateQueries<TData>;\n      update?: MutationUpdaterFunction<TData, TVariables, TContext, TCache>;\n      keepRootFields?: boolean;\n    }\n  ) {\n    const data =\n      typeof optimisticResponse === \"function\" ?\n        optimisticResponse(mutation.variables, { IGNORE })\n      : optimisticResponse;\n\n    if (data === IGNORE) {\n      return false;\n    }\n\n    this.cache.recordOptimisticTransaction((cache) => {\n      try {\n        this.markMutationResult<TData, TVariables, TContext, TCache>(\n          {\n            ...mutation,\n            result: { data },\n          },\n          cache\n        );\n      } catch (error) {\n        invariant.error(error);\n      }\n    }, mutation.mutationId);\n\n    return true;\n  }\n\n  public fetchQuery<TData, TVars extends OperationVariables>(\n    queryId: string,\n    options: WatchQueryOptions<TVars, TData>,\n    networkStatus?: NetworkStatus\n  ): Promise<ApolloQueryResult<TData>> {\n    return this.fetchConcastWithInfo(queryId, options, networkStatus).concast\n      .promise as TODO;\n  }\n\n  public getQueryStore() {\n    const store: Record<string, QueryStoreValue> = Object.create(null);\n    this.queries.forEach((info, queryId) => {\n      store[queryId] = {\n        variables: info.variables,\n        networkStatus: info.networkStatus,\n        networkError: info.networkError,\n        graphQLErrors: info.graphQLErrors,\n      };\n    });\n    return store;\n  }\n\n  public resetErrors(queryId: string) {\n    const queryInfo = this.queries.get(queryId);\n    if (queryInfo) {\n      queryInfo.networkError = undefined;\n      queryInfo.graphQLErrors = [];\n    }\n  }\n\n  public transform(document: DocumentNode) {\n    return this.documentTransform.transformDocument(document);\n  }\n\n  private transformCache = new AutoCleanedWeakCache<\n    DocumentNode,\n    TransformCacheEntry\n  >(\n    cacheSizes[\"queryManager.getDocumentInfo\"] ||\n      defaultCacheSizes[\"queryManager.getDocumentInfo\"]\n  );\n\n  public getDocumentInfo(document: DocumentNode) {\n    const { transformCache } = this;\n\n    if (!transformCache.has(document)) {\n      const cacheEntry: TransformCacheEntry = {\n        // TODO These three calls (hasClientExports, shouldForceResolvers, and\n        // usesNonreactiveDirective) are performing independent full traversals\n        // of the transformed document. We should consider merging these\n        // traversals into a single pass in the future, though the work is\n        // cached after the first time.\n        hasClientExports: hasClientExports(document),\n        hasForcedResolvers: this.localState.shouldForceResolvers(document),\n        hasNonreactiveDirective: hasDirectives([\"nonreactive\"], document),\n        clientQuery: this.localState.clientQuery(document),\n        serverQuery: removeDirectivesFromDocument(\n          [\n            { name: \"client\", remove: true },\n            { name: \"connection\" },\n            { name: \"nonreactive\" },\n          ],\n          document\n        ),\n        defaultVars: getDefaultValues(\n          getOperationDefinition(document)\n        ) as OperationVariables,\n        // Transform any mutation or subscription operations to query operations\n        // so we can read/write them from/to the cache.\n        asQuery: {\n          ...document,\n          definitions: document.definitions.map((def) => {\n            if (\n              def.kind === \"OperationDefinition\" &&\n              def.operation !== \"query\"\n            ) {\n              return { ...def, operation: \"query\" as OperationTypeNode };\n            }\n            return def;\n          }),\n        },\n      };\n\n      transformCache.set(document, cacheEntry);\n    }\n\n    return transformCache.get(document)!;\n  }\n\n  private getVariables<TVariables>(\n    document: DocumentNode,\n    variables?: TVariables\n  ): OperationVariables {\n    return {\n      ...this.getDocumentInfo(document).defaultVars,\n      ...variables,\n    };\n  }\n\n  public watchQuery<\n    T,\n    TVariables extends OperationVariables = OperationVariables,\n  >(options: WatchQueryOptions<TVariables, T>): ObservableQuery<T, TVariables> {\n    const query = this.transform(options.query);\n\n    // assign variable default values if supplied\n    // NOTE: We don't modify options.query here with the transformed query to\n    // ensure observable.options.query is set to the raw untransformed query.\n    options = {\n      ...options,\n      variables: this.getVariables(query, options.variables) as TVariables,\n    };\n\n    if (typeof options.notifyOnNetworkStatusChange === \"undefined\") {\n      options.notifyOnNetworkStatusChange = false;\n    }\n\n    const queryInfo = new QueryInfo(this);\n    const observable = new ObservableQuery<T, TVariables>({\n      queryManager: this,\n      queryInfo,\n      options,\n    });\n    observable[\"lastQuery\"] = query;\n\n    this.queries.set(observable.queryId, queryInfo);\n\n    // We give queryInfo the transformed query to ensure the first cache diff\n    // uses the transformed query instead of the raw query\n    queryInfo.init({\n      document: query,\n      observableQuery: observable,\n      variables: observable.variables,\n    });\n\n    return observable;\n  }\n\n  public query<TData, TVars extends OperationVariables = OperationVariables>(\n    options: QueryOptions<TVars, TData>,\n    queryId = this.generateQueryId()\n  ): Promise<ApolloQueryResult<TData>> {\n    invariant(\n      options.query,\n      \"query option is required. You must specify your GraphQL document \" +\n        \"in the query option.\"\n    );\n\n    invariant(\n      options.query.kind === \"Document\",\n      'You must wrap the query string in a \"gql\" tag.'\n    );\n\n    invariant(\n      !(options as any).returnPartialData,\n      \"returnPartialData option only supported on watchQuery.\"\n    );\n\n    invariant(\n      !(options as any).pollInterval,\n      \"pollInterval option only supported on watchQuery.\"\n    );\n\n    return this.fetchQuery<TData, TVars>(queryId, {\n      ...options,\n      query: this.transform(options.query),\n    }).finally(() => this.stopQuery(queryId));\n  }\n\n  private queryIdCounter = 1;\n  public generateQueryId() {\n    return String(this.queryIdCounter++);\n  }\n\n  private requestIdCounter = 1;\n  public generateRequestId() {\n    return this.requestIdCounter++;\n  }\n\n  private mutationIdCounter = 1;\n  public generateMutationId() {\n    return String(this.mutationIdCounter++);\n  }\n\n  public stopQueryInStore(queryId: string) {\n    this.stopQueryInStoreNoBroadcast(queryId);\n    this.broadcastQueries();\n  }\n\n  private stopQueryInStoreNoBroadcast(queryId: string) {\n    const queryInfo = this.queries.get(queryId);\n    if (queryInfo) queryInfo.stop();\n  }\n\n  public clearStore(\n    options: Cache.ResetOptions = {\n      discardWatches: true,\n    }\n  ): Promise<void> {\n    // Before we have sent the reset action to the store, we can no longer\n    // rely on the results returned by in-flight requests since these may\n    // depend on values that previously existed in the data portion of the\n    // store. So, we cancel the promises and observers that we have issued\n    // so far and not yet resolved (in the case of queries).\n    this.cancelPendingFetches(\n      newInvariantError(\n        \"Store reset while query was in flight (not completed in link chain)\"\n      )\n    );\n\n    this.queries.forEach((queryInfo) => {\n      if (queryInfo.observableQuery) {\n        // Set loading to true so listeners don't trigger unless they want\n        // results with partial data.\n        queryInfo.networkStatus = NetworkStatus.loading;\n      } else {\n        queryInfo.stop();\n      }\n    });\n\n    if (this.mutationStore) {\n      this.mutationStore = Object.create(null);\n    }\n\n    // begin removing data from the store\n    return this.cache.reset(options);\n  }\n\n  public getObservableQueries(\n    include: InternalRefetchQueriesInclude = \"active\"\n  ) {\n    const queries = new Map<string, ObservableQuery<any>>();\n    const queryNamesAndDocs = new Map<string | DocumentNode, boolean>();\n    const legacyQueryOptions = new Set<QueryOptions>();\n\n    if (Array.isArray(include)) {\n      include.forEach((desc) => {\n        if (typeof desc === \"string\") {\n          queryNamesAndDocs.set(desc, false);\n        } else if (isDocumentNode(desc)) {\n          queryNamesAndDocs.set(this.transform(desc), false);\n        } else if (isNonNullObject(desc) && desc.query) {\n          legacyQueryOptions.add(desc);\n        }\n      });\n    }\n\n    this.queries.forEach(({ observableQuery: oq, document }, queryId) => {\n      if (oq) {\n        if (include === \"all\") {\n          queries.set(queryId, oq);\n          return;\n        }\n\n        const {\n          queryName,\n          options: { fetchPolicy },\n        } = oq;\n\n        if (\n          fetchPolicy === \"standby\" ||\n          (include === \"active\" && !oq.hasObservers())\n        ) {\n          return;\n        }\n\n        if (\n          include === \"active\" ||\n          (queryName && queryNamesAndDocs.has(queryName)) ||\n          (document && queryNamesAndDocs.has(document))\n        ) {\n          queries.set(queryId, oq);\n          if (queryName) queryNamesAndDocs.set(queryName, true);\n          if (document) queryNamesAndDocs.set(document, true);\n        }\n      }\n    });\n\n    if (legacyQueryOptions.size) {\n      legacyQueryOptions.forEach((options: QueryOptions) => {\n        // We will be issuing a fresh network request for this query, so we\n        // pre-allocate a new query ID here, using a special prefix to enable\n        // cleaning up these temporary queries later, after fetching.\n        const queryId = makeUniqueId(\"legacyOneTimeQuery\");\n        const queryInfo = this.getQuery(queryId).init({\n          document: options.query,\n          variables: options.variables,\n        });\n        const oq = new ObservableQuery({\n          queryManager: this,\n          queryInfo,\n          options: {\n            ...options,\n            fetchPolicy: \"network-only\",\n          },\n        });\n        invariant(oq.queryId === queryId);\n        queryInfo.setObservableQuery(oq);\n        queries.set(queryId, oq);\n      });\n    }\n\n    if (__DEV__ && queryNamesAndDocs.size) {\n      queryNamesAndDocs.forEach((included, nameOrDoc) => {\n        if (!included) {\n          invariant.warn(\n            typeof nameOrDoc === \"string\" ?\n              `Unknown query named \"%s\" requested in refetchQueries options.include array`\n            : `Unknown query %o requested in refetchQueries options.include array`,\n            nameOrDoc\n          );\n        }\n      });\n    }\n\n    return queries;\n  }\n\n  public reFetchObservableQueries(\n    includeStandby: boolean = false\n  ): Promise<ApolloQueryResult<any>[]> {\n    const observableQueryPromises: Promise<ApolloQueryResult<any>>[] = [];\n\n    this.getObservableQueries(includeStandby ? \"all\" : \"active\").forEach(\n      (observableQuery, queryId) => {\n        const { fetchPolicy } = observableQuery.options;\n        observableQuery.resetLastResults();\n        if (\n          includeStandby ||\n          (fetchPolicy !== \"standby\" && fetchPolicy !== \"cache-only\")\n        ) {\n          observableQueryPromises.push(observableQuery.refetch());\n        }\n        this.getQuery(queryId).setDiff(null);\n      }\n    );\n\n    this.broadcastQueries();\n\n    return Promise.all(observableQueryPromises);\n  }\n\n  public setObservableQuery(observableQuery: ObservableQuery<any, any>) {\n    this.getQuery(observableQuery.queryId).setObservableQuery(observableQuery);\n  }\n\n  public startGraphQLSubscription<T = any>({\n    query,\n    fetchPolicy,\n    errorPolicy = \"none\",\n    variables,\n    context = {},\n  }: SubscriptionOptions): Observable<FetchResult<T>> {\n    query = this.transform(query);\n    variables = this.getVariables(query, variables);\n\n    const makeObservable = (variables: OperationVariables) =>\n      this.getObservableFromLink<T>(query, context, variables).map((result) => {\n        if (fetchPolicy !== \"no-cache\") {\n          // the subscription interface should handle not sending us results we no longer subscribe to.\n          // XXX I don't think we ever send in an object with errors, but we might in the future...\n          if (shouldWriteResult(result, errorPolicy)) {\n            this.cache.write({\n              query,\n              result: result.data,\n              dataId: \"ROOT_SUBSCRIPTION\",\n              variables: variables,\n            });\n          }\n\n          this.broadcastQueries();\n        }\n\n        const hasErrors = graphQLResultHasError(result);\n        const hasProtocolErrors = graphQLResultHasProtocolErrors(result);\n        if (hasErrors || hasProtocolErrors) {\n          const errors: ApolloErrorOptions = {};\n          if (hasErrors) {\n            errors.graphQLErrors = result.errors;\n          }\n          if (hasProtocolErrors) {\n            errors.protocolErrors = result.extensions[PROTOCOL_ERRORS_SYMBOL];\n          }\n\n          // `errorPolicy` is a mechanism for handling GraphQL errors, according\n          // to our documentation, so we throw protocol errors regardless of the\n          // set error policy.\n          if (errorPolicy === \"none\" || hasProtocolErrors) {\n            throw new ApolloError(errors);\n          }\n        }\n\n        if (errorPolicy === \"ignore\") {\n          delete result.errors;\n        }\n\n        return result;\n      });\n\n    if (this.getDocumentInfo(query).hasClientExports) {\n      const observablePromise = this.localState\n        .addExportedVariables(query, variables, context)\n        .then(makeObservable);\n\n      return new Observable<FetchResult<T>>((observer) => {\n        let sub: ObservableSubscription | null = null;\n        observablePromise.then(\n          (observable) => (sub = observable.subscribe(observer)),\n          observer.error\n        );\n        return () => sub && sub.unsubscribe();\n      });\n    }\n\n    return makeObservable(variables);\n  }\n\n  public stopQuery(queryId: string) {\n    this.stopQueryNoBroadcast(queryId);\n    this.broadcastQueries();\n  }\n\n  private stopQueryNoBroadcast(queryId: string) {\n    this.stopQueryInStoreNoBroadcast(queryId);\n    this.removeQuery(queryId);\n  }\n\n  public removeQuery(queryId: string) {\n    // teardown all links\n    // Both `QueryManager.fetchRequest` and `QueryManager.query` create separate promises\n    // that each add their reject functions to fetchCancelFns.\n    // A query created with `QueryManager.query()` could trigger a `QueryManager.fetchRequest`.\n    // The same queryId could have two rejection fns for two promises\n    this.fetchCancelFns.delete(queryId);\n    if (this.queries.has(queryId)) {\n      this.getQuery(queryId).stop();\n      this.queries.delete(queryId);\n    }\n  }\n\n  public broadcastQueries() {\n    if (this.onBroadcast) this.onBroadcast();\n    this.queries.forEach((info) => info.notify());\n  }\n\n  public getLocalState(): LocalState<TStore> {\n    return this.localState;\n  }\n\n  // Use protected instead of private field so\n  // @apollo/experimental-nextjs-app-support can access type info.\n  protected inFlightLinkObservables = new Trie<{\n    observable?: Observable<FetchResult<any>>;\n  }>(false);\n\n  private getObservableFromLink<T = any>(\n    query: DocumentNode,\n    context: any,\n    variables?: OperationVariables,\n    // Prefer context.queryDeduplication if specified.\n    deduplication: boolean = context?.queryDeduplication ??\n      this.queryDeduplication\n  ): Observable<FetchResult<T>> {\n    let observable: Observable<FetchResult<T>> | undefined;\n\n    const { serverQuery, clientQuery } = this.getDocumentInfo(query);\n    if (serverQuery) {\n      const { inFlightLinkObservables, link } = this;\n\n      const operation = {\n        query: serverQuery,\n        variables,\n        operationName: getOperationName(serverQuery) || void 0,\n        context: this.prepareContext({\n          ...context,\n          forceFetch: !deduplication,\n        }),\n      };\n\n      context = operation.context;\n\n      if (deduplication) {\n        const printedServerQuery = print(serverQuery);\n        const varJson = canonicalStringify(variables);\n\n        const entry = inFlightLinkObservables.lookup(\n          printedServerQuery,\n          varJson\n        );\n\n        observable = entry.observable;\n        if (!observable) {\n          const concast = new Concast([\n            execute(link, operation) as Observable<FetchResult<T>>,\n          ]);\n          observable = entry.observable = concast;\n\n          concast.beforeNext(() => {\n            inFlightLinkObservables.remove(printedServerQuery, varJson);\n          });\n        }\n      } else {\n        observable = new Concast([\n          execute(link, operation) as Observable<FetchResult<T>>,\n        ]);\n      }\n    } else {\n      observable = new Concast([Observable.of({ data: {} } as FetchResult<T>)]);\n      context = this.prepareContext(context);\n    }\n\n    if (clientQuery) {\n      observable = asyncMap(observable, (result) => {\n        return this.localState.runResolvers({\n          document: clientQuery,\n          remoteResult: result,\n          context,\n          variables,\n        });\n      });\n    }\n\n    return observable;\n  }\n\n  private getResultsFromLink<TData, TVars extends OperationVariables>(\n    queryInfo: QueryInfo,\n    cacheWriteBehavior: CacheWriteBehavior,\n    options: Pick<\n      WatchQueryOptions<TVars, TData>,\n      \"query\" | \"variables\" | \"context\" | \"fetchPolicy\" | \"errorPolicy\"\n    >\n  ): Observable<ApolloQueryResult<TData>> {\n    const requestId = (queryInfo.lastRequestId = this.generateRequestId());\n\n    // Performing transformForLink here gives this.cache a chance to fill in\n    // missing fragment definitions (for example) before sending this document\n    // through the link chain.\n    const linkDocument = this.cache.transformForLink(options.query);\n\n    return asyncMap(\n      this.getObservableFromLink(\n        linkDocument,\n        options.context,\n        options.variables\n      ),\n\n      (result) => {\n        const graphQLErrors = getGraphQLErrorsFromResult(result);\n        const hasErrors = graphQLErrors.length > 0;\n\n        // If we interrupted this request by calling getResultsFromLink again\n        // with the same QueryInfo object, we ignore the old results.\n        if (requestId >= queryInfo.lastRequestId) {\n          if (hasErrors && options.errorPolicy === \"none\") {\n            // Throwing here effectively calls observer.error.\n            throw queryInfo.markError(\n              new ApolloError({\n                graphQLErrors,\n              })\n            );\n          }\n          // Use linkDocument rather than queryInfo.document so the\n          // operation/fragments used to write the result are the same as the\n          // ones used to obtain it from the link.\n          queryInfo.markResult(\n            result,\n            linkDocument,\n            options,\n            cacheWriteBehavior\n          );\n          queryInfo.markReady();\n        }\n\n        const aqr: ApolloQueryResult<TData> = {\n          data: result.data,\n          loading: false,\n          networkStatus: NetworkStatus.ready,\n        };\n\n        if (hasErrors && options.errorPolicy !== \"ignore\") {\n          aqr.errors = graphQLErrors;\n          aqr.networkStatus = NetworkStatus.error;\n        }\n\n        return aqr;\n      },\n\n      (networkError) => {\n        const error =\n          isApolloError(networkError) ? networkError : (\n            new ApolloError({ networkError })\n          );\n\n        // Avoid storing errors from older interrupted queries.\n        if (requestId >= queryInfo.lastRequestId) {\n          queryInfo.markError(error);\n        }\n\n        throw error;\n      }\n    );\n  }\n\n  private fetchConcastWithInfo<TData, TVars extends OperationVariables>(\n    queryId: string,\n    options: WatchQueryOptions<TVars, TData>,\n    // The initial networkStatus for this fetch, most often\n    // NetworkStatus.loading, but also possibly fetchMore, poll, refetch,\n    // or setVariables.\n    networkStatus = NetworkStatus.loading,\n    query = options.query\n  ): ConcastAndInfo<TData> {\n    const variables = this.getVariables(query, options.variables) as TVars;\n    const queryInfo = this.getQuery(queryId);\n\n    const defaults = this.defaultOptions.watchQuery;\n    let {\n      fetchPolicy = (defaults && defaults.fetchPolicy) || \"cache-first\",\n      errorPolicy = (defaults && defaults.errorPolicy) || \"none\",\n      returnPartialData = false,\n      notifyOnNetworkStatusChange = false,\n      context = {},\n    } = options;\n\n    const normalized = Object.assign({}, options, {\n      query,\n      variables,\n      fetchPolicy,\n      errorPolicy,\n      returnPartialData,\n      notifyOnNetworkStatusChange,\n      context,\n    });\n\n    const fromVariables = (variables: TVars) => {\n      // Since normalized is always a fresh copy of options, it's safe to\n      // modify its properties here, rather than creating yet another new\n      // WatchQueryOptions object.\n      normalized.variables = variables;\n\n      const sourcesWithInfo = this.fetchQueryByPolicy<TData, TVars>(\n        queryInfo,\n        normalized,\n        networkStatus\n      );\n\n      if (\n        // If we're in standby, postpone advancing options.fetchPolicy using\n        // applyNextFetchPolicy.\n        normalized.fetchPolicy !== \"standby\" &&\n        // The \"standby\" policy currently returns [] from fetchQueryByPolicy, so\n        // this is another way to detect when nothing was done/fetched.\n        sourcesWithInfo.sources.length > 0 &&\n        queryInfo.observableQuery\n      ) {\n        queryInfo.observableQuery[\"applyNextFetchPolicy\"](\n          \"after-fetch\",\n          options\n        );\n      }\n\n      return sourcesWithInfo;\n    };\n\n    // This cancel function needs to be set before the concast is created,\n    // in case concast creation synchronously cancels the request.\n    const cleanupCancelFn = () => this.fetchCancelFns.delete(queryId);\n    this.fetchCancelFns.set(queryId, (reason) => {\n      cleanupCancelFn();\n      // This delay ensures the concast variable has been initialized.\n      setTimeout(() => concast.cancel(reason));\n    });\n\n    let concast: Concast<ApolloQueryResult<TData>>,\n      containsDataFromLink: boolean;\n    // If the query has @export(as: ...) directives, then we need to\n    // process those directives asynchronously. When there are no\n    // @export directives (the common case), we deliberately avoid\n    // wrapping the result of this.fetchQueryByPolicy in a Promise,\n    // since the timing of result delivery is (unfortunately) important\n    // for backwards compatibility. TODO This code could be simpler if\n    // we deprecated and removed LocalState.\n    if (this.getDocumentInfo(normalized.query).hasClientExports) {\n      concast = new Concast(\n        this.localState\n          .addExportedVariables(\n            normalized.query,\n            normalized.variables,\n            normalized.context\n          )\n          .then(fromVariables)\n          .then((sourcesWithInfo) => sourcesWithInfo.sources)\n      );\n      // there is just no way we can synchronously get the *right* value here,\n      // so we will assume `true`, which is the behaviour before the bug fix in\n      // #10597. This means that bug is not fixed in that case, and is probably\n      // un-fixable with reasonable effort for the edge case of @export as\n      // directives.\n      containsDataFromLink = true;\n    } else {\n      const sourcesWithInfo = fromVariables(normalized.variables);\n      containsDataFromLink = sourcesWithInfo.fromLink;\n      concast = new Concast(sourcesWithInfo.sources);\n    }\n\n    concast.promise.then(cleanupCancelFn, cleanupCancelFn);\n\n    return {\n      concast,\n      fromLink: containsDataFromLink,\n    };\n  }\n\n  public refetchQueries<TResult>({\n    updateCache,\n    include,\n    optimistic = false,\n    removeOptimistic = optimistic ? makeUniqueId(\"refetchQueries\") : void 0,\n    onQueryUpdated,\n  }: InternalRefetchQueriesOptions<\n    ApolloCache<TStore>,\n    TResult\n  >): InternalRefetchQueriesMap<TResult> {\n    const includedQueriesById = new Map<\n      string,\n      {\n        oq: ObservableQuery<any>;\n        lastDiff?: Cache.DiffResult<any>;\n        diff?: Cache.DiffResult<any>;\n      }\n    >();\n\n    if (include) {\n      this.getObservableQueries(include).forEach((oq, queryId) => {\n        includedQueriesById.set(queryId, {\n          oq,\n          lastDiff: this.getQuery(queryId).getDiff(),\n        });\n      });\n    }\n\n    const results: InternalRefetchQueriesMap<TResult> = new Map();\n\n    if (updateCache) {\n      this.cache.batch({\n        update: updateCache,\n\n        // Since you can perform any combination of cache reads and/or writes in\n        // the cache.batch update function, its optimistic option can be either\n        // a boolean or a string, representing three distinct modes of\n        // operation:\n        //\n        // * false: read/write only the root layer\n        // * true: read/write the topmost layer\n        // * string: read/write a fresh optimistic layer with that ID string\n        //\n        // When typeof optimistic === \"string\", a new optimistic layer will be\n        // temporarily created within cache.batch with that string as its ID. If\n        // we then pass that same string as the removeOptimistic option, we can\n        // make cache.batch immediately remove the optimistic layer after\n        // running the updateCache function, triggering only one broadcast.\n        //\n        // However, the refetchQueries method accepts only true or false for its\n        // optimistic option (not string). We interpret true to mean a temporary\n        // optimistic layer should be created, to allow efficiently rolling back\n        // the effect of the updateCache function, which involves passing a\n        // string instead of true as the optimistic option to cache.batch, when\n        // refetchQueries receives optimistic: true.\n        //\n        // In other words, we are deliberately not supporting the use case of\n        // writing to an *existing* optimistic layer (using the refetchQueries\n        // updateCache function), since that would potentially interfere with\n        // other optimistic updates in progress. Instead, you can read/write\n        // only the root layer by passing optimistic: false to refetchQueries,\n        // or you can read/write a brand new optimistic layer that will be\n        // automatically removed by passing optimistic: true.\n        optimistic: (optimistic && removeOptimistic) || false,\n\n        // The removeOptimistic option can also be provided by itself, even if\n        // optimistic === false, to remove some previously-added optimistic\n        // layer safely and efficiently, like we do in markMutationResult.\n        //\n        // If an explicit removeOptimistic string is provided with optimistic:\n        // true, the removeOptimistic string will determine the ID of the\n        // temporary optimistic layer, in case that ever matters.\n        removeOptimistic,\n\n        onWatchUpdated(watch, diff, lastDiff) {\n          const oq =\n            watch.watcher instanceof QueryInfo && watch.watcher.observableQuery;\n\n          if (oq) {\n            if (onQueryUpdated) {\n              // Since we're about to handle this query now, remove it from\n              // includedQueriesById, in case it was added earlier because of\n              // options.include.\n              includedQueriesById.delete(oq.queryId);\n\n              let result: TResult | boolean | Promise<ApolloQueryResult<any>> =\n                onQueryUpdated(oq, diff, lastDiff);\n\n              if (result === true) {\n                // The onQueryUpdated function requested the default refetching\n                // behavior by returning true.\n                result = oq.refetch();\n              }\n\n              // Record the result in the results Map, as long as onQueryUpdated\n              // did not return false to skip/ignore this result.\n              if (result !== false) {\n                results.set(\n                  oq,\n                  result as InternalRefetchQueriesResult<TResult>\n                );\n              }\n\n              // Allow the default cache broadcast to happen, except when\n              // onQueryUpdated returns false.\n              return result;\n            }\n\n            if (onQueryUpdated !== null) {\n              // If we don't have an onQueryUpdated function, and onQueryUpdated\n              // was not disabled by passing null, make sure this query is\n              // \"included\" like any other options.include-specified query.\n              includedQueriesById.set(oq.queryId, { oq, lastDiff, diff });\n            }\n          }\n        },\n      });\n    }\n\n    if (includedQueriesById.size) {\n      includedQueriesById.forEach(({ oq, lastDiff, diff }, queryId) => {\n        let result:\n          | TResult\n          | boolean\n          | Promise<ApolloQueryResult<any>>\n          | undefined;\n\n        // If onQueryUpdated is provided, we want to use it for all included\n        // queries, even the QueryOptions ones.\n        if (onQueryUpdated) {\n          if (!diff) {\n            const info = oq[\"queryInfo\"];\n            info.reset(); // Force info.getDiff() to read from cache.\n            diff = info.getDiff();\n          }\n          result = onQueryUpdated(oq, diff, lastDiff);\n        }\n\n        // Otherwise, we fall back to refetching.\n        if (!onQueryUpdated || result === true) {\n          result = oq.refetch();\n        }\n\n        if (result !== false) {\n          results.set(oq, result as InternalRefetchQueriesResult<TResult>);\n        }\n\n        if (queryId.indexOf(\"legacyOneTimeQuery\") >= 0) {\n          this.stopQueryNoBroadcast(queryId);\n        }\n      });\n    }\n\n    if (removeOptimistic) {\n      // In case no updateCache callback was provided (so cache.batch was not\n      // called above, and thus did not already remove the optimistic layer),\n      // remove it here. Since this is a no-op when the layer has already been\n      // removed, we do it even if we called cache.batch above, since it's\n      // possible this.cache is an instance of some ApolloCache subclass other\n      // than InMemoryCache, and does not fully support the removeOptimistic\n      // option for cache.batch.\n      this.cache.removeOptimistic(removeOptimistic);\n    }\n\n    return results;\n  }\n\n  private fetchQueryByPolicy<TData, TVars extends OperationVariables>(\n    queryInfo: QueryInfo,\n    {\n      query,\n      variables,\n      fetchPolicy,\n      refetchWritePolicy,\n      errorPolicy,\n      returnPartialData,\n      context,\n      notifyOnNetworkStatusChange,\n    }: WatchQueryOptions<TVars, TData>,\n    // The initial networkStatus for this fetch, most often\n    // NetworkStatus.loading, but also possibly fetchMore, poll, refetch,\n    // or setVariables.\n    networkStatus: NetworkStatus\n  ): SourcesAndInfo<TData> {\n    const oldNetworkStatus = queryInfo.networkStatus;\n\n    queryInfo.init({\n      document: query,\n      variables,\n      networkStatus,\n    });\n\n    const readCache = () => queryInfo.getDiff();\n\n    const resultsFromCache = (\n      diff: Cache.DiffResult<TData>,\n      networkStatus = queryInfo.networkStatus || NetworkStatus.loading\n    ) => {\n      const data = diff.result;\n\n      if (__DEV__ && !returnPartialData && !equal(data, {})) {\n        logMissingFieldErrors(diff.missing);\n      }\n\n      const fromData = (data: TData | undefined) =>\n        Observable.of({\n          data,\n          loading: isNetworkRequestInFlight(networkStatus),\n          networkStatus,\n          ...(diff.complete ? null : { partial: true }),\n        } as ApolloQueryResult<TData>);\n\n      if (data && this.getDocumentInfo(query).hasForcedResolvers) {\n        return this.localState\n          .runResolvers({\n            document: query,\n            remoteResult: { data },\n            context,\n            variables,\n            onlyRunForcedResolvers: true,\n          })\n          .then((resolved) => fromData(resolved.data || void 0));\n      }\n\n      // Resolves https://github.com/apollographql/apollo-client/issues/10317.\n      // If errorPolicy is 'none' and notifyOnNetworkStatusChange is true,\n      // data was incorrectly returned from the cache on refetch:\n      // if diff.missing exists, we should not return cache data.\n      if (\n        errorPolicy === \"none\" &&\n        networkStatus === NetworkStatus.refetch &&\n        Array.isArray(diff.missing)\n      ) {\n        return fromData(void 0);\n      }\n\n      return fromData(data);\n    };\n\n    const cacheWriteBehavior =\n      fetchPolicy === \"no-cache\" ? CacheWriteBehavior.FORBID\n        // Watched queries must opt into overwriting existing data on refetch,\n        // by passing refetchWritePolicy: \"overwrite\" in their WatchQueryOptions.\n      : (\n        networkStatus === NetworkStatus.refetch &&\n        refetchWritePolicy !== \"merge\"\n      ) ?\n        CacheWriteBehavior.OVERWRITE\n      : CacheWriteBehavior.MERGE;\n\n    const resultsFromLink = () =>\n      this.getResultsFromLink<TData, TVars>(queryInfo, cacheWriteBehavior, {\n        query,\n        variables,\n        context,\n        fetchPolicy,\n        errorPolicy,\n      });\n\n    const shouldNotify =\n      notifyOnNetworkStatusChange &&\n      typeof oldNetworkStatus === \"number\" &&\n      oldNetworkStatus !== networkStatus &&\n      isNetworkRequestInFlight(networkStatus);\n\n    switch (fetchPolicy) {\n      default:\n      case \"cache-first\": {\n        const diff = readCache();\n\n        if (diff.complete) {\n          return {\n            fromLink: false,\n            sources: [resultsFromCache(diff, queryInfo.markReady())],\n          };\n        }\n\n        if (returnPartialData || shouldNotify) {\n          return {\n            fromLink: true,\n            sources: [resultsFromCache(diff), resultsFromLink()],\n          };\n        }\n\n        return { fromLink: true, sources: [resultsFromLink()] };\n      }\n\n      case \"cache-and-network\": {\n        const diff = readCache();\n\n        if (diff.complete || returnPartialData || shouldNotify) {\n          return {\n            fromLink: true,\n            sources: [resultsFromCache(diff), resultsFromLink()],\n          };\n        }\n\n        return { fromLink: true, sources: [resultsFromLink()] };\n      }\n\n      case \"cache-only\":\n        return {\n          fromLink: false,\n          sources: [resultsFromCache(readCache(), queryInfo.markReady())],\n        };\n\n      case \"network-only\":\n        if (shouldNotify) {\n          return {\n            fromLink: true,\n            sources: [resultsFromCache(readCache()), resultsFromLink()],\n          };\n        }\n\n        return { fromLink: true, sources: [resultsFromLink()] };\n\n      case \"no-cache\":\n        if (shouldNotify) {\n          return {\n            fromLink: true,\n            // Note that queryInfo.getDiff() for no-cache queries does not call\n            // cache.diff, but instead returns a { complete: false } stub result\n            // when there is no queryInfo.diff already defined.\n            sources: [resultsFromCache(queryInfo.getDiff()), resultsFromLink()],\n          };\n        }\n\n        return { fromLink: true, sources: [resultsFromLink()] };\n\n      case \"standby\":\n        return { fromLink: false, sources: [] };\n    }\n  }\n\n  private getQuery(queryId: string): QueryInfo {\n    if (queryId && !this.queries.has(queryId)) {\n      this.queries.set(queryId, new QueryInfo(this, queryId));\n    }\n    return this.queries.get(queryId)!;\n  }\n\n  private prepareContext(context = {}) {\n    const newContext = this.localState.prepareContext(context);\n    return {\n      ...this.defaultContext,\n      ...newContext,\n      clientAwareness: this.clientAwareness,\n    };\n  }\n}\n\n// Return types used by fetchQueryByPolicy and other private methods above.\ninterface FetchConcastInfo {\n  // Metadata properties that can be returned in addition to the Concast.\n  fromLink: boolean;\n}\ninterface SourcesAndInfo<TData> extends FetchConcastInfo {\n  sources: ConcastSourcesArray<ApolloQueryResult<TData>>;\n}\ninterface ConcastAndInfo<TData> extends FetchConcastInfo {\n  concast: Concast<ApolloQueryResult<TData>>;\n}\n","import type {\n  QueryOptions,\n  WatchQueryOptions,\n  MutationOptions,\n  OperationVariables,\n} from \"../../core/index.js\";\n\nimport { compact } from \"./compact.js\";\n\ntype OptionsUnion<TData, TVariables extends OperationVariables, TContext> =\n  | WatchQueryOptions<TVariables, TData>\n  | QueryOptions<TVariables, TData>\n  | MutationOptions<TData, TVariables, TContext, any>;\n\nexport function mergeOptions<\n  TDefaultOptions extends Partial<OptionsUnion<any, any, any>>,\n  TOptions extends TDefaultOptions,\n>(\n  defaults: TDefaultOptions | Partial<TDefaultOptions> | undefined,\n  options: TOptions | Partial<TOptions>\n): TOptions & TDefaultOptions {\n  return compact(\n    defaults,\n    options,\n    options.variables && {\n      variables: compact({\n        ...(defaults && defaults.variables),\n        ...options.variables,\n      }),\n    }\n  );\n}\n","import { invariant, newInvariantError } from \"../utilities/globals/index.js\";\n\nimport type { ExecutionResult, DocumentNode } from \"graphql\";\n\nimport type { FetchResult, GraphQLRequest } from \"../link/core/index.js\";\nimport { ApolloLink, execute } from \"../link/core/index.js\";\nimport type { ApolloCache, DataProxy, Reference } from \"../cache/index.js\";\nimport type { DocumentTransform, Observable } from \"../utilities/index.js\";\nimport { version } from \"../version.js\";\nimport type { UriFunction } from \"../link/http/index.js\";\nimport { HttpLink } from \"../link/http/index.js\";\n\nimport { QueryManager } from \"./QueryManager.js\";\nimport type { ObservableQuery } from \"./ObservableQuery.js\";\n\nimport type {\n  ApolloQueryResult,\n  DefaultContext,\n  OperationVariables,\n  Resolvers,\n  RefetchQueriesOptions,\n  RefetchQueriesResult,\n  InternalRefetchQueriesResult,\n  RefetchQueriesInclude,\n} from \"./types.js\";\n\nimport type {\n  QueryOptions,\n  WatchQueryOptions,\n  MutationOptions,\n  SubscriptionOptions,\n  WatchQueryFetchPolicy,\n} from \"./watchQueryOptions.js\";\n\nimport type { FragmentMatcher } from \"./LocalState.js\";\nimport { LocalState } from \"./LocalState.js\";\n\nexport interface DefaultOptions {\n  watchQuery?: Partial<WatchQueryOptions<any, any>>;\n  query?: Partial<QueryOptions<any, any>>;\n  mutate?: Partial<MutationOptions<any, any, any>>;\n}\n\nlet hasSuggestedDevtools = false;\n\nexport interface ApolloClientOptions<TCacheShape> {\n  /**\n   * The URI of the GraphQL endpoint that Apollo Client will communicate with.\n   *\n   * One of `uri` or `link` is **required**. If you provide both, `link` takes precedence.\n   */\n  uri?: string | UriFunction;\n  credentials?: string;\n  /**\n   * An object representing headers to include in every HTTP request, such as `{Authorization: 'Bearer 1234'}`\n   *\n   * This value will be ignored when using the `link` option.\n   */\n  headers?: Record<string, string>;\n  /**\n   * You can provide an `ApolloLink` instance to serve as Apollo Client's network layer. For more information, see [Advanced HTTP networking](https://www.apollographql.com/docs/react/networking/advanced-http-networking/).\n   *\n   * One of `uri` or `link` is **required**. If you provide both, `link` takes precedence.\n   */\n  link?: ApolloLink;\n  /**\n   * The cache that Apollo Client should use to store query results locally. The recommended cache is `InMemoryCache`, which is provided by the `@apollo/client` package.\n   *\n   * For more information, see [Configuring the cache](https://www.apollographql.com/docs/react/caching/cache-configuration/).\n   */\n  cache: ApolloCache<TCacheShape>;\n  /**\n   * The time interval (in milliseconds) before Apollo Client force-fetches queries after a server-side render.\n   *\n   * @defaultValue `0` (no delay)\n   */\n  ssrForceFetchDelay?: number;\n  /**\n   * When using Apollo Client for [server-side rendering](https://www.apollographql.com/docs/react/performance/server-side-rendering/), set this to `true` so that the [`getDataFromTree` function](../react/ssr/#getdatafromtree) can work effectively.\n   *\n   * @defaultValue `false`\n   */\n  ssrMode?: boolean;\n  /**\n   * If `true`, the [Apollo Client Devtools](https://www.apollographql.com/docs/react/development-testing/developer-tooling/#apollo-client-devtools) browser extension can connect to Apollo Client.\n   *\n   * The default value is `false` in production and `true` in development (if there is a `window` object).\n   */\n  connectToDevTools?: boolean;\n  /**\n   * If `false`, Apollo Client sends every created query to the server, even if a _completely_ identical query (identical in terms of query string, variable values, and operationName) is already in flight.\n   *\n   * @defaultValue `true`\n   */\n  queryDeduplication?: boolean;\n  /**\n   * Provide this object to set application-wide default values for options you can provide to the `watchQuery`, `query`, and `mutate` functions. See below for an example object.\n   *\n   * See this [example object](https://www.apollographql.com/docs/react/api/core/ApolloClient#example-defaultoptions-object).\n   */\n  defaultOptions?: DefaultOptions;\n  defaultContext?: Partial<DefaultContext>;\n  /**\n   * If `true`, Apollo Client will assume results read from the cache are never mutated by application code, which enables substantial performance optimizations.\n   *\n   * @defaultValue `false`\n   */\n  assumeImmutableResults?: boolean;\n  resolvers?: Resolvers | Resolvers[];\n  typeDefs?: string | string[] | DocumentNode | DocumentNode[];\n  fragmentMatcher?: FragmentMatcher;\n  /**\n   * A custom name (e.g., `iOS`) that identifies this particular client among your set of clients. Apollo Server and Apollo Studio use this property as part of the [client awareness](https://www.apollographql.com/docs/apollo-server/monitoring/metrics#identifying-distinct-clients) feature.\n   */\n  name?: string;\n  /**\n   * A custom version that identifies the current version of this particular client (e.g., `1.2`). Apollo Server and Apollo Studio use this property as part of the [client awareness](https://www.apollographql.com/docs/apollo-server/monitoring/metrics#identifying-distinct-clients) feature.\n   *\n   * This is **not** the version of Apollo Client that you are using, but rather any version string that helps you differentiate between versions of your client.\n   */\n  version?: string;\n  documentTransform?: DocumentTransform;\n}\n\n// Though mergeOptions now resides in @apollo/client/utilities, it was\n// previously declared and exported from this module, and then reexported from\n// @apollo/client/core. Since we need to preserve that API anyway, the easiest\n// solution is to reexport mergeOptions where it was previously declared (here).\nimport { mergeOptions } from \"../utilities/index.js\";\nimport { getApolloClientMemoryInternals } from \"../utilities/caching/getMemoryInternals.js\";\nimport type {\n  WatchFragmentOptions,\n  WatchFragmentResult,\n} from \"../cache/core/cache.js\";\nexport { mergeOptions };\n\n/**\n * This is the primary Apollo Client class. It is used to send GraphQL documents (i.e. queries\n * and mutations) to a GraphQL spec-compliant server over an `ApolloLink` instance,\n * receive results from the server and cache the results in a store. It also delivers updates\n * to GraphQL queries through `Observable` instances.\n */\nexport class ApolloClient<TCacheShape> implements DataProxy {\n  public link: ApolloLink;\n  public cache: ApolloCache<TCacheShape>;\n  public disableNetworkFetches: boolean;\n  public version: string;\n  public queryDeduplication: boolean;\n  public defaultOptions: DefaultOptions;\n  public readonly typeDefs: ApolloClientOptions<TCacheShape>[\"typeDefs\"];\n\n  private queryManager: QueryManager<TCacheShape>;\n  private devToolsHookCb?: Function;\n  private resetStoreCallbacks: Array<() => Promise<any>> = [];\n  private clearStoreCallbacks: Array<() => Promise<any>> = [];\n  private localState: LocalState<TCacheShape>;\n\n  /**\n   * Constructs an instance of `ApolloClient`.\n   *\n   * @example\n   * ```js\n   * import { ApolloClient, InMemoryCache } from '@apollo/client';\n   *\n   * const cache = new InMemoryCache();\n   *\n   * const client = new ApolloClient({\n   *   // Provide required constructor fields\n   *   cache: cache,\n   *   uri: 'http://localhost:4000/',\n   *\n   *   // Provide some optional constructor fields\n   *   name: 'react-web-client',\n   *   version: '1.3',\n   *   queryDeduplication: false,\n   *   defaultOptions: {\n   *     watchQuery: {\n   *       fetchPolicy: 'cache-and-network',\n   *     },\n   *   },\n   * });\n   * ```\n   */\n  constructor(options: ApolloClientOptions<TCacheShape>) {\n    if (!options.cache) {\n      throw newInvariantError(\n        \"To initialize Apollo Client, you must specify a 'cache' property \" +\n          \"in the options object. \\n\" +\n          \"For more information, please visit: https://go.apollo.dev/c/docs\"\n      );\n    }\n\n    const {\n      uri,\n      credentials,\n      headers,\n      cache,\n      documentTransform,\n      ssrMode = false,\n      ssrForceFetchDelay = 0,\n      // Expose the client instance as window.__APOLLO_CLIENT__ and call\n      // onBroadcast in queryManager.broadcastQueries to enable browser\n      // devtools, but disable them by default in production.\n      connectToDevTools = typeof window === \"object\" &&\n        !(window as any).__APOLLO_CLIENT__ &&\n        __DEV__,\n      queryDeduplication = true,\n      defaultOptions,\n      defaultContext,\n      assumeImmutableResults = cache.assumeImmutableResults,\n      resolvers,\n      typeDefs,\n      fragmentMatcher,\n      name: clientAwarenessName,\n      version: clientAwarenessVersion,\n    } = options;\n\n    let { link } = options;\n\n    if (!link) {\n      link =\n        uri ? new HttpLink({ uri, credentials, headers }) : ApolloLink.empty();\n    }\n\n    this.link = link;\n    this.cache = cache;\n    this.disableNetworkFetches = ssrMode || ssrForceFetchDelay > 0;\n    this.queryDeduplication = queryDeduplication;\n    this.defaultOptions = defaultOptions || Object.create(null);\n    this.typeDefs = typeDefs;\n\n    if (ssrForceFetchDelay) {\n      setTimeout(\n        () => (this.disableNetworkFetches = false),\n        ssrForceFetchDelay\n      );\n    }\n\n    this.watchQuery = this.watchQuery.bind(this);\n    this.query = this.query.bind(this);\n    this.mutate = this.mutate.bind(this);\n    this.watchFragment = this.watchFragment.bind(this);\n    this.resetStore = this.resetStore.bind(this);\n    this.reFetchObservableQueries = this.reFetchObservableQueries.bind(this);\n\n    this.version = version;\n\n    this.localState = new LocalState({\n      cache,\n      client: this,\n      resolvers,\n      fragmentMatcher,\n    });\n\n    this.queryManager = new QueryManager({\n      cache: this.cache,\n      link: this.link,\n      defaultOptions: this.defaultOptions,\n      defaultContext,\n      documentTransform,\n      queryDeduplication,\n      ssrMode,\n      clientAwareness: {\n        name: clientAwarenessName!,\n        version: clientAwarenessVersion!,\n      },\n      localState: this.localState,\n      assumeImmutableResults,\n      onBroadcast:\n        connectToDevTools ?\n          () => {\n            if (this.devToolsHookCb) {\n              this.devToolsHookCb({\n                action: {},\n                state: {\n                  queries: this.queryManager.getQueryStore(),\n                  mutations: this.queryManager.mutationStore || {},\n                },\n                dataWithOptimisticResults: this.cache.extract(true),\n              });\n            }\n          }\n        : void 0,\n    });\n\n    if (connectToDevTools) this.connectToDevTools();\n  }\n\n  private connectToDevTools() {\n    if (typeof window === \"object\") {\n      type DevToolsConnector = {\n        push(client: ApolloClient<any>): void;\n      };\n      const windowWithDevTools = window as Window & {\n        [devtoolsSymbol]?: DevToolsConnector;\n        __APOLLO_CLIENT__?: ApolloClient<any>;\n      };\n      const devtoolsSymbol = Symbol.for(\"apollo.devtools\");\n      (windowWithDevTools[devtoolsSymbol] =\n        windowWithDevTools[devtoolsSymbol] || ([] as DevToolsConnector)).push(\n        this\n      );\n      windowWithDevTools.__APOLLO_CLIENT__ = this;\n    }\n\n    /**\n     * Suggest installing the devtools for developers who don't have them\n     */\n    if (!hasSuggestedDevtools && __DEV__) {\n      hasSuggestedDevtools = true;\n      setTimeout(() => {\n        if (\n          typeof window !== \"undefined\" &&\n          window.document &&\n          window.top === window.self &&\n          !(window as any).__APOLLO_DEVTOOLS_GLOBAL_HOOK__ &&\n          /^(https?|file):$/.test(window.location.protocol)\n        ) {\n          const nav = window.navigator;\n          const ua = nav && nav.userAgent;\n          let url: string | undefined;\n          if (typeof ua === \"string\") {\n            if (ua.indexOf(\"Chrome/\") > -1) {\n              url =\n                \"https://chrome.google.com/webstore/detail/\" +\n                \"apollo-client-developer-t/jdkknkkbebbapilgoeccciglkfbmbnfm\";\n            } else if (ua.indexOf(\"Firefox/\") > -1) {\n              url =\n                \"https://addons.mozilla.org/en-US/firefox/addon/apollo-developer-tools/\";\n            }\n          }\n          if (url) {\n            invariant.log(\n              \"Download the Apollo DevTools for a better development \" +\n                \"experience: %s\",\n              url\n            );\n          }\n        }\n      }, 10000);\n    }\n  }\n\n  /**\n   * The `DocumentTransform` used to modify GraphQL documents before a request\n   * is made. If a custom `DocumentTransform` is not provided, this will be the\n   * default document transform.\n   */\n  get documentTransform() {\n    return this.queryManager.documentTransform;\n  }\n\n  /**\n   * Call this method to terminate any active client processes, making it safe\n   * to dispose of this `ApolloClient` instance.\n   */\n  public stop() {\n    this.queryManager.stop();\n  }\n\n  /**\n   * This watches the cache store of the query according to the options specified and\n   * returns an `ObservableQuery`. We can subscribe to this `ObservableQuery` and\n   * receive updated results through an observer when the cache store changes.\n   *\n   * Note that this method is not an implementation of GraphQL subscriptions. Rather,\n   * it uses Apollo's store in order to reactively deliver updates to your query results.\n   *\n   * For example, suppose you call watchQuery on a GraphQL query that fetches a person's\n   * first and last name and this person has a particular object identifier, provided by\n   * dataIdFromObject. Later, a different query fetches that same person's\n   * first and last name and the first name has now changed. Then, any observers associated\n   * with the results of the first query will be updated with a new result object.\n   *\n   * Note that if the cache does not change, the subscriber will *not* be notified.\n   *\n   * See [here](https://medium.com/apollo-stack/the-concepts-of-graphql-bc68bd819be3#.3mb0cbcmc) for\n   * a description of store reactivity.\n   */\n  public watchQuery<\n    T = any,\n    TVariables extends OperationVariables = OperationVariables,\n  >(options: WatchQueryOptions<TVariables, T>): ObservableQuery<T, TVariables> {\n    if (this.defaultOptions.watchQuery) {\n      options = mergeOptions(this.defaultOptions.watchQuery, options);\n    }\n\n    // XXX Overwriting options is probably not the best way to do this long term...\n    if (\n      this.disableNetworkFetches &&\n      (options.fetchPolicy === \"network-only\" ||\n        options.fetchPolicy === \"cache-and-network\")\n    ) {\n      options = { ...options, fetchPolicy: \"cache-first\" };\n    }\n\n    return this.queryManager.watchQuery<T, TVariables>(options);\n  }\n\n  /**\n   * This resolves a single query according to the options specified and\n   * returns a `Promise` which is either resolved with the resulting data\n   * or rejected with an error.\n   *\n   * @param options - An object of type `QueryOptions` that allows us to\n   * describe how this query should be treated e.g. whether it should hit the\n   * server at all or just resolve from the cache, etc.\n   */\n  public query<\n    T = any,\n    TVariables extends OperationVariables = OperationVariables,\n  >(options: QueryOptions<TVariables, T>): Promise<ApolloQueryResult<T>> {\n    if (this.defaultOptions.query) {\n      options = mergeOptions(this.defaultOptions.query, options);\n    }\n\n    invariant(\n      (options.fetchPolicy as WatchQueryFetchPolicy) !== \"cache-and-network\",\n      \"The cache-and-network fetchPolicy does not work with client.query, because \" +\n        \"client.query can only return a single result. Please use client.watchQuery \" +\n        \"to receive multiple results from the cache and the network, or consider \" +\n        \"using a different fetchPolicy, such as cache-first or network-only.\"\n    );\n\n    if (this.disableNetworkFetches && options.fetchPolicy === \"network-only\") {\n      options = { ...options, fetchPolicy: \"cache-first\" };\n    }\n\n    return this.queryManager.query<T, TVariables>(options);\n  }\n\n  /**\n   * This resolves a single mutation according to the options specified and returns a\n   * Promise which is either resolved with the resulting data or rejected with an\n   * error. In some cases both `data` and `errors` might be undefined, for example\n   * when `errorPolicy` is set to `'ignore'`.\n   *\n   * It takes options as an object with the following keys and values:\n   */\n  public mutate<\n    TData = any,\n    TVariables extends OperationVariables = OperationVariables,\n    TContext extends Record<string, any> = DefaultContext,\n    TCache extends ApolloCache<any> = ApolloCache<any>,\n  >(\n    options: MutationOptions<TData, TVariables, TContext>\n  ): Promise<FetchResult<TData>> {\n    if (this.defaultOptions.mutate) {\n      options = mergeOptions(this.defaultOptions.mutate, options);\n    }\n    return this.queryManager.mutate<TData, TVariables, TContext, TCache>(\n      options\n    );\n  }\n\n  /**\n   * This subscribes to a graphql subscription according to the options specified and returns an\n   * `Observable` which either emits received data or an error.\n   */\n  public subscribe<\n    T = any,\n    TVariables extends OperationVariables = OperationVariables,\n  >(options: SubscriptionOptions<TVariables, T>): Observable<FetchResult<T>> {\n    return this.queryManager.startGraphQLSubscription<T>(options);\n  }\n\n  /**\n   * Tries to read some data from the store in the shape of the provided\n   * GraphQL query without making a network request. This method will start at\n   * the root query. To start at a specific id returned by `dataIdFromObject`\n   * use `readFragment`.\n   *\n   * @param optimistic - Set to `true` to allow `readQuery` to return\n   * optimistic results. Is `false` by default.\n   */\n  public readQuery<T = any, TVariables = OperationVariables>(\n    options: DataProxy.Query<TVariables, T>,\n    optimistic: boolean = false\n  ): T | null {\n    return this.cache.readQuery<T, TVariables>(options, optimistic);\n  }\n\n  /**\n   * Watches the cache store of the fragment according to the options specified\n   * and returns an `Observable`. We can subscribe to this\n   * `Observable` and receive updated results through an\n   * observer when the cache store changes.\n   *\n   * You must pass in a GraphQL document with a single fragment or a document\n   * with multiple fragments that represent what you are reading. If you pass\n   * in a document with multiple fragments then you must also specify a\n   * `fragmentName`.\n   *\n   * @since 3.10.0\n   * @param options - An object of type `WatchFragmentOptions` that allows\n   * the cache to identify the fragment and optionally specify whether to react\n   * to optimistic updates.\n   */\n\n  public watchFragment<\n    TFragmentData = unknown,\n    TVariables = OperationVariables,\n  >(\n    options: WatchFragmentOptions<TFragmentData, TVariables>\n  ): Observable<WatchFragmentResult<TFragmentData>> {\n    return this.cache.watchFragment<TFragmentData, TVariables>(options);\n  }\n\n  /**\n   * Tries to read some data from the store in the shape of the provided\n   * GraphQL fragment without making a network request. This method will read a\n   * GraphQL fragment from any arbitrary id that is currently cached, unlike\n   * `readQuery` which will only read from the root query.\n   *\n   * You must pass in a GraphQL document with a single fragment or a document\n   * with multiple fragments that represent what you are reading. If you pass\n   * in a document with multiple fragments then you must also specify a\n   * `fragmentName`.\n   *\n   * @param optimistic - Set to `true` to allow `readFragment` to return\n   * optimistic results. Is `false` by default.\n   */\n  public readFragment<T = any, TVariables = OperationVariables>(\n    options: DataProxy.Fragment<TVariables, T>,\n    optimistic: boolean = false\n  ): T | null {\n    return this.cache.readFragment<T, TVariables>(options, optimistic);\n  }\n\n  /**\n   * Writes some data in the shape of the provided GraphQL query directly to\n   * the store. This method will start at the root query. To start at a\n   * specific id returned by `dataIdFromObject` then use `writeFragment`.\n   */\n  public writeQuery<TData = any, TVariables = OperationVariables>(\n    options: DataProxy.WriteQueryOptions<TData, TVariables>\n  ): Reference | undefined {\n    const ref = this.cache.writeQuery<TData, TVariables>(options);\n\n    if (options.broadcast !== false) {\n      this.queryManager.broadcastQueries();\n    }\n\n    return ref;\n  }\n\n  /**\n   * Writes some data in the shape of the provided GraphQL fragment directly to\n   * the store. This method will write to a GraphQL fragment from any arbitrary\n   * id that is currently cached, unlike `writeQuery` which will only write\n   * from the root query.\n   *\n   * You must pass in a GraphQL document with a single fragment or a document\n   * with multiple fragments that represent what you are writing. If you pass\n   * in a document with multiple fragments then you must also specify a\n   * `fragmentName`.\n   */\n  public writeFragment<TData = any, TVariables = OperationVariables>(\n    options: DataProxy.WriteFragmentOptions<TData, TVariables>\n  ): Reference | undefined {\n    const ref = this.cache.writeFragment<TData, TVariables>(options);\n\n    if (options.broadcast !== false) {\n      this.queryManager.broadcastQueries();\n    }\n\n    return ref;\n  }\n\n  public __actionHookForDevTools(cb: () => any) {\n    this.devToolsHookCb = cb;\n  }\n\n  public __requestRaw(payload: GraphQLRequest): Observable<ExecutionResult> {\n    return execute(this.link, payload);\n  }\n\n  /**\n   * Resets your entire store by clearing out your cache and then re-executing\n   * all of your active queries. This makes it so that you may guarantee that\n   * there is no data left in your store from a time before you called this\n   * method.\n   *\n   * `resetStore()` is useful when your user just logged out. You’ve removed the\n   * user session, and you now want to make sure that any references to data you\n   * might have fetched while the user session was active is gone.\n   *\n   * It is important to remember that `resetStore()` *will* refetch any active\n   * queries. This means that any components that might be mounted will execute\n   * their queries again using your network interface. If you do not want to\n   * re-execute any queries then you should make sure to stop watching any\n   * active queries.\n   */\n  public resetStore(): Promise<ApolloQueryResult<any>[] | null> {\n    return Promise.resolve()\n      .then(() =>\n        this.queryManager.clearStore({\n          discardWatches: false,\n        })\n      )\n      .then(() => Promise.all(this.resetStoreCallbacks.map((fn) => fn())))\n      .then(() => this.reFetchObservableQueries());\n  }\n\n  /**\n   * Remove all data from the store. Unlike `resetStore`, `clearStore` will\n   * not refetch any active queries.\n   */\n  public clearStore(): Promise<any[]> {\n    return Promise.resolve()\n      .then(() =>\n        this.queryManager.clearStore({\n          discardWatches: true,\n        })\n      )\n      .then(() => Promise.all(this.clearStoreCallbacks.map((fn) => fn())));\n  }\n\n  /**\n   * Allows callbacks to be registered that are executed when the store is\n   * reset. `onResetStore` returns an unsubscribe function that can be used\n   * to remove registered callbacks.\n   */\n  public onResetStore(cb: () => Promise<any>): () => void {\n    this.resetStoreCallbacks.push(cb);\n    return () => {\n      this.resetStoreCallbacks = this.resetStoreCallbacks.filter(\n        (c) => c !== cb\n      );\n    };\n  }\n\n  /**\n   * Allows callbacks to be registered that are executed when the store is\n   * cleared. `onClearStore` returns an unsubscribe function that can be used\n   * to remove registered callbacks.\n   */\n  public onClearStore(cb: () => Promise<any>): () => void {\n    this.clearStoreCallbacks.push(cb);\n    return () => {\n      this.clearStoreCallbacks = this.clearStoreCallbacks.filter(\n        (c) => c !== cb\n      );\n    };\n  }\n\n  /**\n   * Refetches all of your active queries.\n   *\n   * `reFetchObservableQueries()` is useful if you want to bring the client back to proper state in case of a network outage\n   *\n   * It is important to remember that `reFetchObservableQueries()` *will* refetch any active\n   * queries. This means that any components that might be mounted will execute\n   * their queries again using your network interface. If you do not want to\n   * re-execute any queries then you should make sure to stop watching any\n   * active queries.\n   * Takes optional parameter `includeStandby` which will include queries in standby-mode when refetching.\n   */\n  public reFetchObservableQueries(\n    includeStandby?: boolean\n  ): Promise<ApolloQueryResult<any>[]> {\n    return this.queryManager.reFetchObservableQueries(includeStandby);\n  }\n\n  /**\n   * Refetches specified active queries. Similar to \"reFetchObservableQueries()\" but with a specific list of queries.\n   *\n   * `refetchQueries()` is useful for use cases to imperatively refresh a selection of queries.\n   *\n   * It is important to remember that `refetchQueries()` *will* refetch specified active\n   * queries. This means that any components that might be mounted will execute\n   * their queries again using your network interface. If you do not want to\n   * re-execute any queries then you should make sure to stop watching any\n   * active queries.\n   */\n  public refetchQueries<\n    TCache extends ApolloCache<any> = ApolloCache<TCacheShape>,\n    TResult = Promise<ApolloQueryResult<any>>,\n  >(\n    options: RefetchQueriesOptions<TCache, TResult>\n  ): RefetchQueriesResult<TResult> {\n    const map = this.queryManager.refetchQueries(\n      options as RefetchQueriesOptions<ApolloCache<TCacheShape>, TResult>\n    );\n    const queries: ObservableQuery<any>[] = [];\n    const results: InternalRefetchQueriesResult<TResult>[] = [];\n\n    map.forEach((result, obsQuery) => {\n      queries.push(obsQuery);\n      results.push(result);\n    });\n\n    const result = Promise.all<TResult>(\n      results as TResult[]\n    ) as RefetchQueriesResult<TResult>;\n\n    // In case you need the raw results immediately, without awaiting\n    // Promise.all(results):\n    result.queries = queries;\n    result.results = results;\n\n    // If you decide to ignore the result Promise because you're using\n    // result.queries and result.results instead, you shouldn't have to worry\n    // about preventing uncaught rejections for the Promise.all result.\n    result.catch((error) => {\n      invariant.debug(\n        `In client.refetchQueries, Promise.all promise rejected with error %o`,\n        error\n      );\n    });\n\n    return result;\n  }\n\n  /**\n   * Get all currently active `ObservableQuery` objects, in a `Map` keyed by\n   * query ID strings.\n   *\n   * An \"active\" query is one that has observers and a `fetchPolicy` other than\n   * \"standby\" or \"cache-only\".\n   *\n   * You can include all `ObservableQuery` objects (including the inactive ones)\n   * by passing \"all\" instead of \"active\", or you can include just a subset of\n   * active queries by passing an array of query names or DocumentNode objects.\n   */\n  public getObservableQueries(\n    include: RefetchQueriesInclude = \"active\"\n  ): Map<string, ObservableQuery<any>> {\n    return this.queryManager.getObservableQueries(include);\n  }\n\n  /**\n   * Exposes the cache's complete state, in a serializable format for later restoration.\n   */\n  public extract(optimistic?: boolean): TCacheShape {\n    return this.cache.extract(optimistic);\n  }\n\n  /**\n   * Replaces existing state in the cache (if any) with the values expressed by\n   * `serializedState`.\n   *\n   * Called when hydrating a cache (server side rendering, or offline storage),\n   * and also (potentially) during hot reloads.\n   */\n  public restore(serializedState: TCacheShape): ApolloCache<TCacheShape> {\n    return this.cache.restore(serializedState);\n  }\n\n  /**\n   * Add additional local resolvers.\n   */\n  public addResolvers(resolvers: Resolvers | Resolvers[]) {\n    this.localState.addResolvers(resolvers);\n  }\n\n  /**\n   * Set (override existing) local resolvers.\n   */\n  public setResolvers(resolvers: Resolvers | Resolvers[]) {\n    this.localState.setResolvers(resolvers);\n  }\n\n  /**\n   * Get all registered local resolvers.\n   */\n  public getResolvers() {\n    return this.localState.getResolvers();\n  }\n\n  /**\n   * Set a custom local state fragment matcher.\n   */\n  public setLocalStateFragmentMatcher(fragmentMatcher: FragmentMatcher) {\n    this.localState.setFragmentMatcher(fragmentMatcher);\n  }\n\n  /**\n   * Define a new ApolloLink (or link chain) that Apollo Client will use.\n   */\n  public setLink(newLink: ApolloLink) {\n    this.link = this.queryManager.link = newLink;\n  }\n\n  public get defaultContext() {\n    return this.queryManager.defaultContext;\n  }\n\n  /**\n   * @experimental\n   * This is not a stable API - it is used in development builds to expose\n   * information to the DevTools.\n   * Use at your own risk!\n   * For more details, see [Memory Management](https://www.apollographql.com/docs/react/caching/memory-management/#measuring-cache-usage)\n   *\n   * @example\n   * ```ts\n   * console.log(client.getMemoryInternals())\n   * ```\n   * Logs output in the following JSON format:\n   * @example\n   * ```json\n   *{\n   *  limits:     {\n   *    parser: 1000,\n   *    canonicalStringify: 1000,\n   *    print: 2000,\n   *    'documentTransform.cache': 2000,\n   *    'queryManager.getDocumentInfo': 2000,\n   *    'PersistedQueryLink.persistedQueryHashes': 2000,\n   *    'fragmentRegistry.transform': 2000,\n   *    'fragmentRegistry.lookup': 1000,\n   *    'fragmentRegistry.findFragmentSpreads': 4000,\n   *    'cache.fragmentQueryDocuments': 1000,\n   *    'removeTypenameFromVariables.getVariableDefinitions': 2000,\n   *    'inMemoryCache.maybeBroadcastWatch': 5000,\n   *    'inMemoryCache.executeSelectionSet': 10000,\n   *    'inMemoryCache.executeSubSelectedArray': 5000\n   *  },\n   *  sizes: {\n   *    parser: 26,\n   *    canonicalStringify: 4,\n   *    print: 14,\n   *    addTypenameDocumentTransform: [\n   *      {\n   *        cache: 14,\n   *      },\n   *    ],\n   *    queryManager: {\n   *      getDocumentInfo: 14,\n   *      documentTransforms: [\n   *        {\n   *          cache: 14,\n   *        },\n   *        {\n   *          cache: 14,\n   *        },\n   *      ],\n   *    },\n   *    fragmentRegistry: {\n   *      findFragmentSpreads: 34,\n   *      lookup: 20,\n   *      transform: 14,\n   *    },\n   *    cache: {\n   *      fragmentQueryDocuments: 22,\n   *    },\n   *    inMemoryCache: {\n   *      executeSelectionSet: 4345,\n   *      executeSubSelectedArray: 1206,\n   *      maybeBroadcastWatch: 32,\n   *    },\n   *    links: [\n   *      {\n   *        PersistedQueryLink: {\n   *          persistedQueryHashes: 14,\n   *        },\n   *      },\n   *      {\n   *        removeTypenameFromVariables: {\n   *          getVariableDefinitions: 14,\n   *        },\n   *      },\n   *    ],\n   *  },\n   * }\n   *```\n   */\n  public getMemoryInternals?: typeof getApolloClientMemoryInternals;\n}\n\nif (__DEV__) {\n  ApolloClient.prototype.getMemoryInternals = getApolloClientMemoryInternals;\n}\n","import type { DocumentNode } from \"graphql\";\nimport { wrap } from \"optimism\";\n\nimport type {\n  StoreObject,\n  Reference,\n  DeepPartial,\n} from \"../../utilities/index.js\";\nimport {\n  Observable,\n  cacheSizes,\n  defaultCacheSizes,\n  getFragmentQueryDocument,\n  mergeDeepArray,\n} from \"../../utilities/index.js\";\nimport type { DataProxy } from \"./types/DataProxy.js\";\nimport type { Cache } from \"./types/Cache.js\";\nimport { WeakCache } from \"@wry/caches\";\nimport { getApolloCacheMemoryInternals } from \"../../utilities/caching/getMemoryInternals.js\";\nimport type {\n  OperationVariables,\n  TypedDocumentNode,\n} from \"../../core/types.js\";\nimport type { MissingTree } from \"./types/common.js\";\nimport { equalByQuery } from \"../../core/equalByQuery.js\";\n\nexport type Transaction<T> = (c: ApolloCache<T>) => void;\n\n/**\n * Watched fragment options.\n */\nexport interface WatchFragmentOptions<TData, TVars> {\n  /**\n   * A GraphQL fragment document parsed into an AST with the `gql`\n   * template literal.\n   *\n   * @docGroup 1. Required options\n   */\n  fragment: DocumentNode | TypedDocumentNode<TData, TVars>;\n  /**\n   * An object containing a `__typename` and primary key fields\n   * (such as `id`) identifying the entity object from which the fragment will\n   * be retrieved, or a `{ __ref: \"...\" }` reference, or a `string` ID\n   * (uncommon).\n   *\n   * @docGroup 1. Required options\n   */\n  from: StoreObject | Reference | string;\n  /**\n   * Any variables that the GraphQL fragment may depend on.\n   *\n   * @docGroup 2. Cache options\n   */\n  variables?: TVars;\n  /**\n   * The name of the fragment defined in the fragment document.\n   *\n   * Required if the fragment document includes more than one fragment,\n   * optional otherwise.\n   *\n   * @docGroup 2. Cache options\n   */\n  fragmentName?: string;\n  /**\n   * If `true`, `watchFragment` returns optimistic results.\n   *\n   * The default value is `true`.\n   *\n   * @docGroup 2. Cache options\n   */\n  optimistic?: boolean;\n  /**\n   * @deprecated\n   * Using `canonizeResults` can result in memory leaks so we generally do not\n   * recommend using this option anymore.\n   * A future version of Apollo Client will contain a similar feature.\n   *\n   * Whether to canonize cache results before returning them. Canonization\n   * takes some extra time, but it speeds up future deep equality comparisons.\n   * Defaults to false.\n   */\n  canonizeResults?: boolean;\n}\n\n/**\n * Watched fragment results.\n */\nexport type WatchFragmentResult<TData> =\n  | {\n      data: TData;\n      complete: true;\n      missing?: never;\n    }\n  | {\n      data: DeepPartial<TData>;\n      complete: false;\n      missing: MissingTree;\n    };\n\nexport abstract class ApolloCache<TSerialized> implements DataProxy {\n  public readonly assumeImmutableResults: boolean = false;\n\n  // required to implement\n  // core API\n  public abstract read<TData = any, TVariables = any>(\n    query: Cache.ReadOptions<TVariables, TData>\n  ): TData | null;\n  public abstract write<TData = any, TVariables = any>(\n    write: Cache.WriteOptions<TData, TVariables>\n  ): Reference | undefined;\n  public abstract diff<T>(query: Cache.DiffOptions): Cache.DiffResult<T>;\n  public abstract watch<TData = any, TVariables = any>(\n    watch: Cache.WatchOptions<TData, TVariables>\n  ): () => void;\n\n  // Empty the cache and restart all current watches (unless\n  // options.discardWatches is true).\n  public abstract reset(options?: Cache.ResetOptions): Promise<void>;\n\n  // Remove whole objects from the cache by passing just options.id, or\n  // specific fields by passing options.field and/or options.args. If no\n  // options.args are provided, all fields matching options.field (even\n  // those with arguments) will be removed. Returns true iff any data was\n  // removed from the cache.\n  public abstract evict(options: Cache.EvictOptions): boolean;\n\n  // initializer / offline / ssr API\n  /**\n   * Replaces existing state in the cache (if any) with the values expressed by\n   * `serializedState`.\n   *\n   * Called when hydrating a cache (server side rendering, or offline storage),\n   * and also (potentially) during hot reloads.\n   */\n  public abstract restore(\n    serializedState: TSerialized\n  ): ApolloCache<TSerialized>;\n\n  /**\n   * Exposes the cache's complete state, in a serializable format for later restoration.\n   */\n  public abstract extract(optimistic?: boolean): TSerialized;\n\n  // Optimistic API\n\n  public abstract removeOptimistic(id: string): void;\n\n  // Transactional API\n\n  // The batch method is intended to replace/subsume both performTransaction\n  // and recordOptimisticTransaction, but performTransaction came first, so we\n  // provide a default batch implementation that's just another way of calling\n  // performTransaction. Subclasses of ApolloCache (such as InMemoryCache) can\n  // override the batch method to do more interesting things with its options.\n  public batch<U>(options: Cache.BatchOptions<this, U>): U {\n    const optimisticId =\n      typeof options.optimistic === \"string\" ? options.optimistic\n      : options.optimistic === false ? null\n      : void 0;\n    let updateResult: U;\n    this.performTransaction(\n      () => (updateResult = options.update(this)),\n      optimisticId\n    );\n    return updateResult!;\n  }\n\n  public abstract performTransaction(\n    transaction: Transaction<TSerialized>,\n    // Although subclasses may implement recordOptimisticTransaction\n    // however they choose, the default implementation simply calls\n    // performTransaction with a string as the second argument, allowing\n    // performTransaction to handle both optimistic and non-optimistic\n    // (broadcast-batching) transactions. Passing null for optimisticId is\n    // also allowed, and indicates that performTransaction should apply\n    // the transaction non-optimistically (ignoring optimistic data).\n    optimisticId?: string | null\n  ): void;\n\n  public recordOptimisticTransaction(\n    transaction: Transaction<TSerialized>,\n    optimisticId: string\n  ) {\n    this.performTransaction(transaction, optimisticId);\n  }\n\n  // Optional API\n\n  // Called once per input document, allowing the cache to make static changes\n  // to the query, such as adding __typename fields.\n  public transformDocument(document: DocumentNode): DocumentNode {\n    return document;\n  }\n\n  // Called before each ApolloLink request, allowing the cache to make dynamic\n  // changes to the query, such as filling in missing fragment definitions.\n  public transformForLink(document: DocumentNode): DocumentNode {\n    return document;\n  }\n\n  public identify(object: StoreObject | Reference): string | undefined {\n    return;\n  }\n\n  public gc(): string[] {\n    return [];\n  }\n\n  public modify<Entity extends Record<string, any> = Record<string, any>>(\n    options: Cache.ModifyOptions<Entity>\n  ): boolean {\n    return false;\n  }\n\n  // DataProxy API\n  public readQuery<QueryType, TVariables = any>(\n    options: Cache.ReadQueryOptions<QueryType, TVariables>,\n    optimistic = !!options.optimistic\n  ): QueryType | null {\n    return this.read({\n      ...options,\n      rootId: options.id || \"ROOT_QUERY\",\n      optimistic,\n    });\n  }\n\n  /** {@inheritDoc @apollo/client!ApolloClient#watchFragment:member(1)} */\n  public watchFragment<TData = any, TVars = OperationVariables>(\n    options: WatchFragmentOptions<TData, TVars>\n  ): Observable<WatchFragmentResult<TData>> {\n    const { fragment, fragmentName, from, optimistic = true } = options;\n    const query = this.getFragmentDoc(fragment, fragmentName);\n\n    const diffOptions: Cache.DiffOptions<TData, TVars> = {\n      returnPartialData: true,\n      id: typeof from === \"string\" ? from : this.identify(from),\n      query,\n      optimistic,\n    };\n\n    let latestDiff: DataProxy.DiffResult<TData> | undefined;\n\n    return new Observable((observer) => {\n      return this.watch<TData, TVars>({\n        ...diffOptions,\n        immediate: true,\n        callback(diff) {\n          if (\n            // Always ensure we deliver the first result\n            latestDiff &&\n            equalByQuery(\n              query,\n              { data: latestDiff?.result },\n              { data: diff.result }\n            )\n          ) {\n            return;\n          }\n\n          const result = {\n            data: diff.result as DeepPartial<TData>,\n            complete: !!diff.complete,\n          } as WatchFragmentResult<TData>;\n\n          if (diff.missing) {\n            result.missing = mergeDeepArray(\n              diff.missing.map((error) => error.missing)\n            );\n          }\n\n          latestDiff = diff;\n          observer.next(result);\n        },\n      });\n    });\n  }\n\n  // Make sure we compute the same (===) fragment query document every\n  // time we receive the same fragment in readFragment.\n  private getFragmentDoc = wrap(getFragmentQueryDocument, {\n    max:\n      cacheSizes[\"cache.fragmentQueryDocuments\"] ||\n      defaultCacheSizes[\"cache.fragmentQueryDocuments\"],\n    cache: WeakCache,\n  });\n\n  public readFragment<FragmentType, TVariables = any>(\n    options: Cache.ReadFragmentOptions<FragmentType, TVariables>,\n    optimistic = !!options.optimistic\n  ): FragmentType | null {\n    return this.read({\n      ...options,\n      query: this.getFragmentDoc(options.fragment, options.fragmentName),\n      rootId: options.id,\n      optimistic,\n    });\n  }\n\n  public writeQuery<TData = any, TVariables = any>({\n    id,\n    data,\n    ...options\n  }: Cache.WriteQueryOptions<TData, TVariables>): Reference | undefined {\n    return this.write(\n      Object.assign(options, {\n        dataId: id || \"ROOT_QUERY\",\n        result: data,\n      })\n    );\n  }\n\n  public writeFragment<TData = any, TVariables = any>({\n    id,\n    data,\n    fragment,\n    fragmentName,\n    ...options\n  }: Cache.WriteFragmentOptions<TData, TVariables>): Reference | undefined {\n    return this.write(\n      Object.assign(options, {\n        query: this.getFragmentDoc(fragment, fragmentName),\n        dataId: id,\n        result: data,\n      })\n    );\n  }\n\n  public updateQuery<TData = any, TVariables = any>(\n    options: Cache.UpdateQueryOptions<TData, TVariables>,\n    update: (data: TData | null) => TData | null | void\n  ): TData | null {\n    return this.batch({\n      update(cache) {\n        const value = cache.readQuery<TData, TVariables>(options);\n        const data = update(value);\n        if (data === void 0 || data === null) return value;\n        cache.writeQuery<TData, TVariables>({ ...options, data });\n        return data;\n      },\n    });\n  }\n\n  public updateFragment<TData = any, TVariables = any>(\n    options: Cache.UpdateFragmentOptions<TData, TVariables>,\n    update: (data: TData | null) => TData | null | void\n  ): TData | null {\n    return this.batch({\n      update(cache) {\n        const value = cache.readFragment<TData, TVariables>(options);\n        const data = update(value);\n        if (data === void 0 || data === null) return value;\n        cache.writeFragment<TData, TVariables>({ ...options, data });\n        return data;\n      },\n    });\n  }\n\n  /**\n   * @experimental\n   * @internal\n   * This is not a stable API - it is used in development builds to expose\n   * information to the DevTools.\n   * Use at your own risk!\n   */\n  public getMemoryInternals?: typeof getApolloCacheMemoryInternals;\n}\n\nif (__DEV__) {\n  ApolloCache.prototype.getMemoryInternals = getApolloCacheMemoryInternals;\n}\n","import type { DocumentNode, FieldNode } from \"graphql\";\n\nimport type {\n  Reference,\n  StoreObject,\n  StoreValue,\n  isReference,\n  AsStoreObject,\n} from \"../../../utilities/index.js\";\n\nimport type { StorageType } from \"../../inmemory/policies.js\";\n\n// The Readonly<T> type only really works for object types, since it marks\n// all of the object's properties as readonly, but there are many cases when\n// a generic type parameter like TExisting might be a string or some other\n// primitive type, in which case we need to avoid wrapping it with Readonly.\n// SafeReadonly<string> collapses to just string, which makes string\n// assignable to SafeReadonly<any>, whereas string is not assignable to\n// Readonly<any>, somewhat surprisingly.\nexport type SafeReadonly<T> = T extends object ? Readonly<T> : T;\n\nexport type MissingTree =\n  | string\n  | {\n      readonly [key: string]: MissingTree;\n    };\n\nexport class MissingFieldError extends Error {\n  constructor(\n    public readonly message: string,\n    public readonly path: MissingTree | Array<string | number>,\n    public readonly query: DocumentNode,\n    public readonly variables?: Record<string, any>\n  ) {\n    // 'Error' breaks prototype chain here\n    super(message);\n\n    if (Array.isArray(this.path)) {\n      this.missing = this.message;\n      for (let i = this.path.length - 1; i >= 0; --i) {\n        this.missing = { [this.path[i]]: this.missing };\n      }\n    } else {\n      this.missing = this.path;\n    }\n\n    // We're not using `Object.setPrototypeOf` here as it isn't fully supported\n    // on Android (see issue #3236).\n    (this as any).__proto__ = MissingFieldError.prototype;\n  }\n\n  public readonly missing: MissingTree;\n}\n\nexport interface FieldSpecifier {\n  typename?: string;\n  fieldName: string;\n  field?: FieldNode;\n  args?: Record<string, any>;\n  variables?: Record<string, any>;\n}\n\nexport interface ReadFieldOptions extends FieldSpecifier {\n  from?: StoreObject | Reference;\n}\n\nexport interface ReadFieldFunction {\n  <V = StoreValue>(options: ReadFieldOptions): SafeReadonly<V> | undefined;\n  <V = StoreValue>(\n    fieldName: string,\n    from?: StoreObject | Reference\n  ): SafeReadonly<V> | undefined;\n}\n\nexport type ToReferenceFunction = (\n  objOrIdOrRef: StoreObject | string | Reference,\n  mergeIntoStore?: boolean\n) => Reference | undefined;\n\nexport type CanReadFunction = (value: StoreValue) => boolean;\n\ndeclare const _deleteModifier: unique symbol;\nexport interface DeleteModifier {\n  [_deleteModifier]: true;\n}\ndeclare const _invalidateModifier: unique symbol;\nexport interface InvalidateModifier {\n  [_invalidateModifier]: true;\n}\ndeclare const _ignoreModifier: unique symbol;\nexport interface IgnoreModifier {\n  [_ignoreModifier]: true;\n}\n\nexport type ModifierDetails = {\n  DELETE: DeleteModifier;\n  INVALIDATE: InvalidateModifier;\n  fieldName: string;\n  storeFieldName: string;\n  readField: ReadFieldFunction;\n  canRead: CanReadFunction;\n  isReference: typeof isReference;\n  toReference: ToReferenceFunction;\n  storage: StorageType;\n};\n\nexport type Modifier<T> = (\n  value: T,\n  details: ModifierDetails\n) => T | DeleteModifier | InvalidateModifier | undefined;\n\ntype StoreObjectValueMaybeReference<StoreVal> =\n  StoreVal extends Array<Record<string, any>> ?\n    StoreVal extends Array<infer Item> ?\n      Item extends Record<string, any> ?\n        ReadonlyArray<AsStoreObject<Item> | Reference>\n      : never\n    : never\n  : StoreVal extends Record<string, any> ? AsStoreObject<StoreVal> | Reference\n  : StoreVal;\n\nexport type AllFieldsModifier<Entity extends Record<string, any>> = Modifier<\n  Entity[keyof Entity] extends infer Value ?\n    StoreObjectValueMaybeReference<Exclude<Value, undefined>>\n  : never\n>;\n\nexport type Modifiers<T extends Record<string, any> = Record<string, unknown>> =\n  Partial<{\n    [FieldName in keyof T]: Modifier<\n      StoreObjectValueMaybeReference<Exclude<T[FieldName], undefined>>\n    >;\n  }>;\n","import { isNonNullObject } from \"./objects.js\";\n\nfunction deepFreeze(value: any) {\n  const workSet = new Set([value]);\n  workSet.forEach((obj) => {\n    if (isNonNullObject(obj) && shallowFreeze(obj) === obj) {\n      Object.getOwnPropertyNames(obj).forEach((name) => {\n        if (isNonNullObject(obj[name])) workSet.add(obj[name]);\n      });\n    }\n  });\n  return value;\n}\n\nfunction shallowFreeze<T extends object>(obj: T): T | null {\n  if (__DEV__ && !Object.isFrozen(obj)) {\n    try {\n      Object.freeze(obj);\n    } catch (e) {\n      // Some types like Uint8Array and Node.js's Buffer cannot be frozen, but\n      // they all throw a TypeError when you try, so we re-throw any exceptions\n      // that are not TypeErrors, since that would be unexpected.\n      if (e instanceof TypeError) return null;\n      throw e;\n    }\n  }\n  return obj;\n}\n\nexport function maybeDeepFreeze<T>(obj: T): T {\n  if (__DEV__) {\n    deepFreeze(obj);\n  }\n  return obj;\n}\n","import type {\n  DocumentNode,\n  FragmentDefinitionNode,\n  SelectionSetNode,\n} from \"graphql\";\n\nimport type { NormalizedCache, InMemoryCacheConfig } from \"./types.js\";\n\nimport type { KeyFieldsContext } from \"./policies.js\";\nimport type { FragmentRegistryAPI } from \"./fragmentRegistry.js\";\n\nimport type {\n  Reference,\n  StoreValue,\n  StoreObject,\n  FragmentMap,\n  FragmentMapFunction,\n} from \"../../utilities/index.js\";\nimport {\n  isReference,\n  isField,\n  DeepMerger,\n  resultKeyNameFromField,\n  shouldInclude,\n  isNonNullObject,\n  compact,\n  createFragmentMap,\n  getFragmentDefinitions,\n  isArray,\n} from \"../../utilities/index.js\";\n\nexport const { hasOwnProperty: hasOwn } = Object.prototype;\n\nexport function isNullish(value: any): value is null | undefined {\n  return value === null || value === void 0;\n}\n\nexport { isArray };\n\nexport function defaultDataIdFromObject(\n  { __typename, id, _id }: Readonly<StoreObject>,\n  context?: KeyFieldsContext\n): string | undefined {\n  if (typeof __typename === \"string\") {\n    if (context) {\n      context.keyObject =\n        !isNullish(id) ? { id }\n        : !isNullish(_id) ? { _id }\n        : void 0;\n    }\n\n    // If there is no object.id, fall back to object._id.\n    if (isNullish(id) && !isNullish(_id)) {\n      id = _id;\n    }\n\n    if (!isNullish(id)) {\n      return `${__typename}:${\n        typeof id === \"number\" || typeof id === \"string\" ?\n          id\n        : JSON.stringify(id)\n      }`;\n    }\n  }\n}\n\nconst defaultConfig = {\n  dataIdFromObject: defaultDataIdFromObject,\n  addTypename: true,\n  resultCaching: true,\n  // Thanks to the shouldCanonizeResults helper, this should be the only line\n  // you have to change to reenable canonization by default in the future.\n  canonizeResults: false,\n};\n\nexport function normalizeConfig(config: InMemoryCacheConfig) {\n  return compact(defaultConfig, config);\n}\n\nexport function shouldCanonizeResults(\n  config: Pick<InMemoryCacheConfig, \"canonizeResults\">\n): boolean {\n  const value = config.canonizeResults;\n  return value === void 0 ? defaultConfig.canonizeResults : value;\n}\n\nexport function getTypenameFromStoreObject(\n  store: NormalizedCache,\n  objectOrReference: StoreObject | Reference\n): string | undefined {\n  return isReference(objectOrReference) ?\n      (store.get(objectOrReference.__ref, \"__typename\") as string)\n    : objectOrReference && objectOrReference.__typename;\n}\n\nexport const TypeOrFieldNameRegExp = /^[_a-z][_0-9a-z]*/i;\n\nexport function fieldNameFromStoreName(storeFieldName: string): string {\n  const match = storeFieldName.match(TypeOrFieldNameRegExp);\n  return match ? match[0] : storeFieldName;\n}\n\nexport function selectionSetMatchesResult(\n  selectionSet: SelectionSetNode,\n  result: Record<string, any>,\n  variables?: Record<string, any>\n): boolean {\n  if (isNonNullObject(result)) {\n    return isArray(result) ?\n        result.every((item) =>\n          selectionSetMatchesResult(selectionSet, item, variables)\n        )\n      : selectionSet.selections.every((field) => {\n          if (isField(field) && shouldInclude(field, variables)) {\n            const key = resultKeyNameFromField(field);\n            return (\n              hasOwn.call(result, key) &&\n              (!field.selectionSet ||\n                selectionSetMatchesResult(\n                  field.selectionSet,\n                  result[key],\n                  variables\n                ))\n            );\n          }\n          // If the selection has been skipped with @skip(true) or\n          // @include(false), it should not count against the matching. If\n          // the selection is not a field, it must be a fragment (inline or\n          // named). We will determine if selectionSetMatchesResult for that\n          // fragment when we get to it, so for now we return true.\n          return true;\n        });\n  }\n  return false;\n}\n\nexport function storeValueIsStoreObject(\n  value: StoreValue\n): value is StoreObject {\n  return isNonNullObject(value) && !isReference(value) && !isArray(value);\n}\n\nexport function makeProcessedFieldsMerger() {\n  return new DeepMerger();\n}\n\nexport function extractFragmentContext(\n  document: DocumentNode,\n  fragments?: FragmentRegistryAPI\n): {\n  fragmentMap: FragmentMap;\n  lookupFragment: FragmentMapFunction;\n} {\n  // FragmentMap consisting only of fragments defined directly in document, not\n  // including other fragments registered in the FragmentRegistry.\n  const fragmentMap = createFragmentMap(getFragmentDefinitions(document));\n  return {\n    fragmentMap,\n    lookupFragment(name) {\n      let def: FragmentDefinitionNode | null = fragmentMap[name];\n      if (!def && fragments) {\n        def = fragments.lookup(name);\n      }\n      return def || null;\n    },\n  };\n}\n","import { invariant } from \"../../utilities/globals/index.js\";\nimport type { OptimisticDependencyFunction } from \"optimism\";\nimport { dep } from \"optimism\";\nimport { equal } from \"@wry/equality\";\nimport { Trie } from \"@wry/trie\";\n\nimport type {\n  StoreValue,\n  StoreObject,\n  Reference,\n} from \"../../utilities/index.js\";\nimport {\n  isReference,\n  makeReference,\n  DeepMerger,\n  maybeDeepFreeze,\n  canUseWeakMap,\n  isNonNullObject,\n} from \"../../utilities/index.js\";\nimport type { NormalizedCache, NormalizedCacheObject } from \"./types.js\";\nimport { hasOwn, fieldNameFromStoreName } from \"./helpers.js\";\nimport type { Policies, StorageType } from \"./policies.js\";\nimport type { Cache } from \"../core/types/Cache.js\";\nimport type {\n  SafeReadonly,\n  Modifier,\n  Modifiers,\n  ReadFieldOptions,\n  ToReferenceFunction,\n  CanReadFunction,\n  InvalidateModifier,\n  DeleteModifier,\n  ModifierDetails,\n} from \"../core/types/common.js\";\nimport type { DocumentNode, FieldNode, SelectionSetNode } from \"graphql\";\n\nconst DELETE: DeleteModifier = Object.create(null);\nconst delModifier: Modifier<any> = () => DELETE;\nconst INVALIDATE: InvalidateModifier = Object.create(null);\n\nexport abstract class EntityStore implements NormalizedCache {\n  protected data: NormalizedCacheObject = Object.create(null);\n\n  constructor(\n    public readonly policies: Policies,\n    public readonly group: CacheGroup\n  ) {}\n\n  public abstract addLayer(\n    layerId: string,\n    replay: (layer: EntityStore) => any\n  ): Layer;\n\n  public abstract removeLayer(layerId: string): EntityStore;\n\n  // Although the EntityStore class is abstract, it contains concrete\n  // implementations of the various NormalizedCache interface methods that\n  // are inherited by the Root and Layer subclasses.\n\n  public toObject(): NormalizedCacheObject {\n    return { ...this.data };\n  }\n\n  public has(dataId: string): boolean {\n    return this.lookup(dataId, true) !== void 0;\n  }\n\n  public get(dataId: string, fieldName: string): StoreValue {\n    this.group.depend(dataId, fieldName);\n    if (hasOwn.call(this.data, dataId)) {\n      const storeObject = this.data[dataId];\n      if (storeObject && hasOwn.call(storeObject, fieldName)) {\n        return storeObject[fieldName];\n      }\n    }\n    if (\n      fieldName === \"__typename\" &&\n      hasOwn.call(this.policies.rootTypenamesById, dataId)\n    ) {\n      return this.policies.rootTypenamesById[dataId];\n    }\n    if (this instanceof Layer) {\n      return this.parent.get(dataId, fieldName);\n    }\n  }\n\n  protected lookup(\n    dataId: string,\n    dependOnExistence?: boolean\n  ): StoreObject | undefined {\n    // The has method (above) calls lookup with dependOnExistence = true, so\n    // that it can later be invalidated when we add or remove a StoreObject for\n    // this dataId. Any consumer who cares about the contents of the StoreObject\n    // should not rely on this dependency, since the contents could change\n    // without the object being added or removed.\n    if (dependOnExistence) this.group.depend(dataId, \"__exists\");\n\n    if (hasOwn.call(this.data, dataId)) {\n      return this.data[dataId];\n    }\n\n    if (this instanceof Layer) {\n      return this.parent.lookup(dataId, dependOnExistence);\n    }\n\n    if (this.policies.rootTypenamesById[dataId]) {\n      return Object.create(null);\n    }\n  }\n\n  public merge(older: string | StoreObject, newer: StoreObject | string): void {\n    let dataId: string | undefined;\n\n    // Convert unexpected references to ID strings.\n    if (isReference(older)) older = older.__ref;\n    if (isReference(newer)) newer = newer.__ref;\n\n    const existing: StoreObject | undefined =\n      typeof older === \"string\" ? this.lookup((dataId = older)) : older;\n\n    const incoming: StoreObject | undefined =\n      typeof newer === \"string\" ? this.lookup((dataId = newer)) : newer;\n\n    // If newer was a string ID, but that ID was not defined in this store,\n    // then there are no fields to be merged, so we're done.\n    if (!incoming) return;\n\n    invariant(typeof dataId === \"string\", \"store.merge expects a string ID\");\n\n    const merged: StoreObject = new DeepMerger(storeObjectReconciler).merge(\n      existing,\n      incoming\n    );\n\n    // Even if merged === existing, existing may have come from a lower\n    // layer, so we always need to set this.data[dataId] on this level.\n    this.data[dataId] = merged;\n\n    if (merged !== existing) {\n      delete this.refs[dataId];\n      if (this.group.caching) {\n        const fieldsToDirty: Record<string, 1> = Object.create(null);\n\n        // If we added a new StoreObject where there was previously none, dirty\n        // anything that depended on the existence of this dataId, such as the\n        // EntityStore#has method.\n        if (!existing) fieldsToDirty.__exists = 1;\n\n        // Now invalidate dependents who called getFieldValue for any fields\n        // that are changing as a result of this merge.\n        Object.keys(incoming).forEach((storeFieldName) => {\n          if (\n            !existing ||\n            existing[storeFieldName] !== merged[storeFieldName]\n          ) {\n            // Always dirty the full storeFieldName, which may include\n            // serialized arguments following the fieldName prefix.\n            fieldsToDirty[storeFieldName] = 1;\n\n            // Also dirty fieldNameFromStoreName(storeFieldName) if it's\n            // different from storeFieldName and this field does not have\n            // keyArgs configured, because that means the cache can't make\n            // any assumptions about how field values with the same field\n            // name but different arguments might be interrelated, so it\n            // must err on the side of invalidating all field values that\n            // share the same short fieldName, regardless of arguments.\n            const fieldName = fieldNameFromStoreName(storeFieldName);\n            if (\n              fieldName !== storeFieldName &&\n              !this.policies.hasKeyArgs(merged.__typename, fieldName)\n            ) {\n              fieldsToDirty[fieldName] = 1;\n            }\n\n            // If merged[storeFieldName] has become undefined, and this is the\n            // Root layer, actually delete the property from the merged object,\n            // which is guaranteed to have been created fresh in this method.\n            if (merged[storeFieldName] === void 0 && !(this instanceof Layer)) {\n              delete merged[storeFieldName];\n            }\n          }\n        });\n\n        if (\n          fieldsToDirty.__typename &&\n          !(existing && existing.__typename) &&\n          // Since we return default root __typename strings\n          // automatically from store.get, we don't need to dirty the\n          // ROOT_QUERY.__typename field if merged.__typename is equal\n          // to the default string (usually \"Query\").\n          this.policies.rootTypenamesById[dataId] === merged.__typename\n        ) {\n          delete fieldsToDirty.__typename;\n        }\n\n        Object.keys(fieldsToDirty).forEach((fieldName) =>\n          this.group.dirty(dataId as string, fieldName)\n        );\n      }\n    }\n  }\n\n  public modify(\n    dataId: string,\n    fields: Modifier<any> | Modifiers<Record<string, any>>\n  ): boolean {\n    const storeObject = this.lookup(dataId);\n\n    if (storeObject) {\n      const changedFields: Record<string, any> = Object.create(null);\n      let needToMerge = false;\n      let allDeleted = true;\n\n      const sharedDetails = {\n        DELETE,\n        INVALIDATE,\n        isReference,\n        toReference: this.toReference,\n        canRead: this.canRead,\n        readField: <V = StoreValue>(\n          fieldNameOrOptions: string | ReadFieldOptions,\n          from?: StoreObject | Reference\n        ) =>\n          this.policies.readField<V>(\n            typeof fieldNameOrOptions === \"string\" ?\n              {\n                fieldName: fieldNameOrOptions,\n                from: from || makeReference(dataId),\n              }\n            : fieldNameOrOptions,\n            { store: this }\n          ),\n      } satisfies Partial<ModifierDetails>;\n\n      Object.keys(storeObject).forEach((storeFieldName) => {\n        const fieldName = fieldNameFromStoreName(storeFieldName);\n        let fieldValue = storeObject[storeFieldName];\n        if (fieldValue === void 0) return;\n        const modify: Modifier<StoreValue> | undefined =\n          typeof fields === \"function\" ? fields : (\n            fields[storeFieldName] || fields[fieldName]\n          );\n        if (modify) {\n          let newValue =\n            modify === delModifier ? DELETE : (\n              modify(maybeDeepFreeze(fieldValue), {\n                ...sharedDetails,\n                fieldName,\n                storeFieldName,\n                storage: this.getStorage(dataId, storeFieldName),\n              })\n            );\n          if (newValue === INVALIDATE) {\n            this.group.dirty(dataId, storeFieldName);\n          } else {\n            if (newValue === DELETE) newValue = void 0;\n            if (newValue !== fieldValue) {\n              changedFields[storeFieldName] = newValue;\n              needToMerge = true;\n              fieldValue = newValue;\n\n              if (__DEV__) {\n                const checkReference = (ref: Reference) => {\n                  if (this.lookup(ref.__ref) === undefined) {\n                    invariant.warn(\n                      \"cache.modify: You are trying to write a Reference that is not part of the store: %o\\n\" +\n                        \"Please make sure to set the `mergeIntoStore` parameter to `true` when creating a Reference that is not part of the store yet:\\n\" +\n                        \"`toReference(object, true)`\",\n                      ref\n                    );\n                    return true;\n                  }\n                };\n                if (isReference(newValue)) {\n                  checkReference(newValue);\n                } else if (Array.isArray(newValue)) {\n                  // Warn about writing \"mixed\" arrays of Reference and non-Reference objects\n                  let seenReference: boolean = false;\n                  let someNonReference: unknown;\n                  for (const value of newValue) {\n                    if (isReference(value)) {\n                      seenReference = true;\n                      if (checkReference(value)) break;\n                    } else {\n                      // Do not warn on primitive values, since those could never be represented\n                      // by a reference. This is a valid (albeit uncommon) use case.\n                      if (typeof value === \"object\" && !!value) {\n                        const [id] = this.policies.identify(value);\n                        // check if object could even be referenced, otherwise we are not interested in it for this warning\n                        if (id) {\n                          someNonReference = value;\n                        }\n                      }\n                    }\n                    if (seenReference && someNonReference !== undefined) {\n                      invariant.warn(\n                        \"cache.modify: Writing an array with a mix of both References and Objects will not result in the Objects being normalized correctly.\\n\" +\n                          \"Please convert the object instance %o to a Reference before writing it to the cache by calling `toReference(object, true)`.\",\n                        someNonReference\n                      );\n                      break;\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n        if (fieldValue !== void 0) {\n          allDeleted = false;\n        }\n      });\n\n      if (needToMerge) {\n        this.merge(dataId, changedFields);\n\n        if (allDeleted) {\n          if (this instanceof Layer) {\n            this.data[dataId] = void 0;\n          } else {\n            delete this.data[dataId];\n          }\n          this.group.dirty(dataId, \"__exists\");\n        }\n\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  // If called with only one argument, removes the entire entity\n  // identified by dataId. If called with a fieldName as well, removes all\n  // fields of that entity whose names match fieldName according to the\n  // fieldNameFromStoreName helper function. If called with a fieldName\n  // and variables, removes all fields of that entity whose names match fieldName\n  // and whose arguments when cached exactly match the variables passed.\n  public delete(\n    dataId: string,\n    fieldName?: string,\n    args?: Record<string, any>\n  ) {\n    const storeObject = this.lookup(dataId);\n    if (storeObject) {\n      const typename = this.getFieldValue<string>(storeObject, \"__typename\");\n      const storeFieldName =\n        fieldName && args ?\n          this.policies.getStoreFieldName({ typename, fieldName, args })\n        : fieldName;\n      return this.modify(\n        dataId,\n        storeFieldName ?\n          {\n            [storeFieldName]: delModifier,\n          }\n        : delModifier\n      );\n    }\n    return false;\n  }\n\n  public evict(options: Cache.EvictOptions, limit: EntityStore): boolean {\n    let evicted = false;\n    if (options.id) {\n      if (hasOwn.call(this.data, options.id)) {\n        evicted = this.delete(options.id, options.fieldName, options.args);\n      }\n      if (this instanceof Layer && this !== limit) {\n        evicted = this.parent.evict(options, limit) || evicted;\n      }\n      // Always invalidate the field to trigger rereading of watched\n      // queries, even if no cache data was modified by the eviction,\n      // because queries may depend on computed fields with custom read\n      // functions, whose values are not stored in the EntityStore.\n      if (options.fieldName || evicted) {\n        this.group.dirty(options.id, options.fieldName || \"__exists\");\n      }\n    }\n    return evicted;\n  }\n\n  public clear(): void {\n    this.replace(null);\n  }\n\n  public extract(): NormalizedCacheObject {\n    const obj = this.toObject();\n    const extraRootIds: string[] = [];\n    this.getRootIdSet().forEach((id) => {\n      if (!hasOwn.call(this.policies.rootTypenamesById, id)) {\n        extraRootIds.push(id);\n      }\n    });\n    if (extraRootIds.length) {\n      obj.__META = { extraRootIds: extraRootIds.sort() };\n    }\n    return obj;\n  }\n\n  public replace(newData: NormalizedCacheObject | null): void {\n    Object.keys(this.data).forEach((dataId) => {\n      if (!(newData && hasOwn.call(newData, dataId))) {\n        this.delete(dataId);\n      }\n    });\n    if (newData) {\n      const { __META, ...rest } = newData;\n      Object.keys(rest).forEach((dataId) => {\n        this.merge(dataId, rest[dataId] as StoreObject);\n      });\n      if (__META) {\n        __META.extraRootIds.forEach(this.retain, this);\n      }\n    }\n  }\n\n  public abstract getStorage(\n    idOrObj: string | StoreObject,\n    ...storeFieldNames: (string | number)[]\n  ): StorageType;\n\n  // Maps root entity IDs to the number of times they have been retained, minus\n  // the number of times they have been released. Retained entities keep other\n  // entities they reference (even indirectly) from being garbage collected.\n  private rootIds: {\n    [rootId: string]: number;\n  } = Object.create(null);\n\n  public retain(rootId: string): number {\n    return (this.rootIds[rootId] = (this.rootIds[rootId] || 0) + 1);\n  }\n\n  public release(rootId: string): number {\n    if (this.rootIds[rootId] > 0) {\n      const count = --this.rootIds[rootId];\n      if (!count) delete this.rootIds[rootId];\n      return count;\n    }\n    return 0;\n  }\n\n  // Return a Set<string> of all the ID strings that have been retained by\n  // this layer/root *and* any layers/roots beneath it.\n  public getRootIdSet(ids = new Set<string>()) {\n    Object.keys(this.rootIds).forEach(ids.add, ids);\n    if (this instanceof Layer) {\n      this.parent.getRootIdSet(ids);\n    } else {\n      // Official singleton IDs like ROOT_QUERY and ROOT_MUTATION are\n      // always considered roots for garbage collection, regardless of\n      // their retainment counts in this.rootIds.\n      Object.keys(this.policies.rootTypenamesById).forEach(ids.add, ids);\n    }\n    return ids;\n  }\n\n  // The goal of garbage collection is to remove IDs from the Root layer of the\n  // store that are no longer reachable starting from any IDs that have been\n  // explicitly retained (see retain and release, above). Returns an array of\n  // dataId strings that were removed from the store.\n  public gc() {\n    const ids = this.getRootIdSet();\n    const snapshot = this.toObject();\n    ids.forEach((id) => {\n      if (hasOwn.call(snapshot, id)) {\n        // Because we are iterating over an ECMAScript Set, the IDs we add here\n        // will be visited in later iterations of the forEach loop only if they\n        // were not previously contained by the Set.\n        Object.keys(this.findChildRefIds(id)).forEach(ids.add, ids);\n        // By removing IDs from the snapshot object here, we protect them from\n        // getting removed from the root store layer below.\n        delete snapshot[id];\n      }\n    });\n    const idsToRemove = Object.keys(snapshot);\n    if (idsToRemove.length) {\n      let root: EntityStore = this;\n      while (root instanceof Layer) root = root.parent;\n      idsToRemove.forEach((id) => root.delete(id));\n    }\n    return idsToRemove;\n  }\n\n  // Lazily tracks { __ref: <dataId> } strings contained by this.data[dataId].\n  private refs: {\n    [dataId: string]: Record<string, true>;\n  } = Object.create(null);\n\n  public findChildRefIds(dataId: string): Record<string, true> {\n    if (!hasOwn.call(this.refs, dataId)) {\n      const found = (this.refs[dataId] = Object.create(null));\n      const root = this.data[dataId];\n      if (!root) return found;\n\n      const workSet = new Set<Record<string | number, any>>([root]);\n      // Within the store, only arrays and objects can contain child entity\n      // references, so we can prune the traversal using this predicate:\n      workSet.forEach((obj) => {\n        if (isReference(obj)) {\n          found[obj.__ref] = true;\n          // In rare cases, a { __ref } Reference object may have other fields.\n          // This often indicates a mismerging of References with StoreObjects,\n          // but garbage collection should not be fooled by a stray __ref\n          // property in a StoreObject (ignoring all the other fields just\n          // because the StoreObject looks like a Reference). To avoid this\n          // premature termination of findChildRefIds recursion, we fall through\n          // to the code below, which will handle any other properties of obj.\n        }\n        if (isNonNullObject(obj)) {\n          Object.keys(obj).forEach((key) => {\n            const child = obj[key];\n            // No need to add primitive values to the workSet, since they cannot\n            // contain reference objects.\n            if (isNonNullObject(child)) {\n              workSet.add(child);\n            }\n          });\n        }\n      });\n    }\n    return this.refs[dataId];\n  }\n\n  // Used to compute cache keys specific to this.group.\n  /** overload for `InMemoryCache.maybeBroadcastWatch` */\n  public makeCacheKey(\n    document: DocumentNode,\n    callback: Cache.WatchCallback<any>,\n    details: string\n  ): object;\n  /** overload for `StoreReader.executeSelectionSet` */\n  public makeCacheKey(\n    selectionSet: SelectionSetNode,\n    parent: string /* = ( Reference.__ref ) */ | StoreObject,\n    varString: string | undefined,\n    canonizeResults: boolean\n  ): object;\n  /** overload for `StoreReader.executeSubSelectedArray` */\n  public makeCacheKey(\n    field: FieldNode,\n    array: readonly any[],\n    varString: string | undefined\n  ): object;\n  /** @deprecated This is only meant for internal usage,\n   * in your own code please use a `Trie` instance instead. */\n  public makeCacheKey(...args: any[]): object;\n  public makeCacheKey() {\n    return this.group.keyMaker.lookupArray(arguments);\n  }\n\n  // Bound function that can be passed around to provide easy access to fields\n  // of Reference objects as well as ordinary objects.\n  public getFieldValue = <T = StoreValue>(\n    objectOrReference: StoreObject | Reference | undefined,\n    storeFieldName: string\n  ) =>\n    maybeDeepFreeze(\n      isReference(objectOrReference) ?\n        this.get(objectOrReference.__ref, storeFieldName)\n      : objectOrReference && objectOrReference[storeFieldName]\n    ) as SafeReadonly<T>;\n\n  // Returns true for non-normalized StoreObjects and non-dangling\n  // References, indicating that readField(name, objOrRef) has a chance of\n  // working. Useful for filtering out dangling references from lists.\n  public canRead: CanReadFunction = (objOrRef) => {\n    return isReference(objOrRef) ?\n        this.has(objOrRef.__ref)\n      : typeof objOrRef === \"object\";\n  };\n\n  // Bound function that converts an id or an object with a __typename and\n  // primary key fields to a Reference object. If called with a Reference object,\n  // that same Reference object is returned. Pass true for mergeIntoStore to persist\n  // an object into the store.\n  public toReference: ToReferenceFunction = (objOrIdOrRef, mergeIntoStore) => {\n    if (typeof objOrIdOrRef === \"string\") {\n      return makeReference(objOrIdOrRef);\n    }\n\n    if (isReference(objOrIdOrRef)) {\n      return objOrIdOrRef;\n    }\n\n    const [id] = this.policies.identify(objOrIdOrRef);\n\n    if (id) {\n      const ref = makeReference(id);\n      if (mergeIntoStore) {\n        this.merge(id, objOrIdOrRef);\n      }\n      return ref;\n    }\n  };\n}\n\nexport type FieldValueGetter = EntityStore[\"getFieldValue\"];\n\n// A single CacheGroup represents a set of one or more EntityStore objects,\n// typically the Root store in a CacheGroup by itself, and all active Layer\n// stores in a group together. A single EntityStore object belongs to only\n// one CacheGroup, store.group. The CacheGroup is responsible for tracking\n// dependencies, so store.group is helpful for generating unique keys for\n// cached results that need to be invalidated when/if those dependencies\n// change. If we used the EntityStore objects themselves as cache keys (that\n// is, store rather than store.group), the cache would become unnecessarily\n// fragmented by all the different Layer objects. Instead, the CacheGroup\n// approach allows all optimistic Layer objects in the same linked list to\n// belong to one CacheGroup, with the non-optimistic Root object belonging\n// to another CacheGroup, allowing resultCaching dependencies to be tracked\n// separately for optimistic and non-optimistic entity data.\nclass CacheGroup {\n  private d: OptimisticDependencyFunction<string> | null = null;\n\n  // Used by the EntityStore#makeCacheKey method to compute cache keys\n  // specific to this CacheGroup.\n  public keyMaker!: Trie<object>;\n\n  constructor(\n    public readonly caching: boolean,\n    private parent: CacheGroup | null = null\n  ) {\n    this.resetCaching();\n  }\n\n  public resetCaching() {\n    this.d = this.caching ? dep<string>() : null;\n    this.keyMaker = new Trie(canUseWeakMap);\n  }\n\n  public depend(dataId: string, storeFieldName: string) {\n    if (this.d) {\n      this.d(makeDepKey(dataId, storeFieldName));\n      const fieldName = fieldNameFromStoreName(storeFieldName);\n      if (fieldName !== storeFieldName) {\n        // Fields with arguments that contribute extra identifying\n        // information to the fieldName (thus forming the storeFieldName)\n        // depend not only on the full storeFieldName but also on the\n        // short fieldName, so the field can be invalidated using either\n        // level of specificity.\n        this.d(makeDepKey(dataId, fieldName));\n      }\n      if (this.parent) {\n        this.parent.depend(dataId, storeFieldName);\n      }\n    }\n  }\n\n  public dirty(dataId: string, storeFieldName: string) {\n    if (this.d) {\n      this.d.dirty(\n        makeDepKey(dataId, storeFieldName),\n        // When storeFieldName === \"__exists\", that means the entity identified\n        // by dataId has either disappeared from the cache or was newly added,\n        // so the result caching system would do well to \"forget everything it\n        // knows\" about that object. To achieve that kind of invalidation, we\n        // not only dirty the associated result cache entry, but also remove it\n        // completely from the dependency graph. For the optimism implementation\n        // details, see https://github.com/benjamn/optimism/pull/195.\n        storeFieldName === \"__exists\" ? \"forget\" : \"setDirty\"\n      );\n    }\n  }\n}\n\nfunction makeDepKey(dataId: string, storeFieldName: string) {\n  // Since field names cannot have '#' characters in them, this method\n  // of joining the field name and the ID should be unambiguous, and much\n  // cheaper than JSON.stringify([dataId, fieldName]).\n  return storeFieldName + \"#\" + dataId;\n}\n\nexport function maybeDependOnExistenceOfEntity(\n  store: NormalizedCache,\n  entityId: string\n) {\n  if (supportsResultCaching(store)) {\n    // We use this pseudo-field __exists elsewhere in the EntityStore code to\n    // represent changes in the existence of the entity object identified by\n    // entityId. This dependency gets reliably dirtied whenever an object with\n    // this ID is deleted (or newly created) within this group, so any result\n    // cache entries (for example, StoreReader#executeSelectionSet results) that\n    // depend on __exists for this entityId will get dirtied as well, leading to\n    // the eventual recomputation (instead of reuse) of those result objects the\n    // next time someone reads them from the cache.\n    store.group.depend(entityId, \"__exists\");\n  }\n}\n\nexport namespace EntityStore {\n  // Refer to this class as EntityStore.Root outside this namespace.\n  export class Root extends EntityStore {\n    constructor({\n      policies,\n      resultCaching = true,\n      seed,\n    }: {\n      policies: Policies;\n      resultCaching?: boolean;\n      seed?: NormalizedCacheObject;\n    }) {\n      super(policies, new CacheGroup(resultCaching));\n      if (seed) this.replace(seed);\n    }\n\n    public readonly stump = new Stump(this);\n\n    public addLayer(\n      layerId: string,\n      replay: (layer: EntityStore) => any\n    ): Layer {\n      // Adding an optimistic Layer on top of the Root actually adds the Layer\n      // on top of the Stump, so the Stump always comes between the Root and\n      // any Layer objects that we've added.\n      return this.stump.addLayer(layerId, replay);\n    }\n\n    public removeLayer(): Root {\n      // Never remove the root layer.\n      return this;\n    }\n\n    public readonly storageTrie = new Trie<StorageType>(canUseWeakMap);\n    public getStorage(): StorageType {\n      return this.storageTrie.lookupArray(arguments);\n    }\n  }\n}\n\n// Not exported, since all Layer instances are created by the addLayer method\n// of the EntityStore.Root class.\nclass Layer extends EntityStore {\n  constructor(\n    public readonly id: string,\n    public readonly parent: EntityStore,\n    public readonly replay: (layer: EntityStore) => any,\n    public readonly group: CacheGroup\n  ) {\n    super(parent.policies, group);\n    replay(this);\n  }\n\n  public addLayer(layerId: string, replay: (layer: EntityStore) => any): Layer {\n    return new Layer(layerId, this, replay, this.group);\n  }\n\n  public removeLayer(layerId: string): EntityStore {\n    // Remove all instances of the given id, not just the first one.\n    const parent = this.parent.removeLayer(layerId);\n\n    if (layerId === this.id) {\n      if (this.group.caching) {\n        // Dirty every ID we're removing. Technically we might be able to avoid\n        // dirtying fields that have values in higher layers, but we don't have\n        // easy access to higher layers here, and we're about to recreate those\n        // layers anyway (see parent.addLayer below).\n        Object.keys(this.data).forEach((dataId) => {\n          const ownStoreObject = this.data[dataId];\n          const parentStoreObject = parent[\"lookup\"](dataId);\n          if (!parentStoreObject) {\n            // The StoreObject identified by dataId was defined in this layer\n            // but will be undefined in the parent layer, so we can delete the\n            // whole entity using this.delete(dataId). Since we're about to\n            // throw this layer away, the only goal of this deletion is to dirty\n            // the removed fields.\n            this.delete(dataId);\n          } else if (!ownStoreObject) {\n            // This layer had an entry for dataId but it was undefined, which\n            // means the entity was deleted in this layer, and it's about to\n            // become undeleted when we remove this layer, so we need to dirty\n            // all fields that are about to be reexposed.\n            this.group.dirty(dataId, \"__exists\");\n            Object.keys(parentStoreObject).forEach((storeFieldName) => {\n              this.group.dirty(dataId, storeFieldName);\n            });\n          } else if (ownStoreObject !== parentStoreObject) {\n            // If ownStoreObject is not exactly the same as parentStoreObject,\n            // dirty any fields whose values will change as a result of this\n            // removal.\n            Object.keys(ownStoreObject).forEach((storeFieldName) => {\n              if (\n                !equal(\n                  ownStoreObject[storeFieldName],\n                  parentStoreObject[storeFieldName]\n                )\n              ) {\n                this.group.dirty(dataId, storeFieldName);\n              }\n            });\n          }\n        });\n      }\n\n      return parent;\n    }\n\n    // No changes are necessary if the parent chain remains identical.\n    if (parent === this.parent) return this;\n\n    // Recreate this layer on top of the new parent.\n    return parent.addLayer(this.id, this.replay);\n  }\n\n  public toObject(): NormalizedCacheObject {\n    return {\n      ...this.parent.toObject(),\n      ...this.data,\n    };\n  }\n\n  public findChildRefIds(dataId: string): Record<string, true> {\n    const fromParent = this.parent.findChildRefIds(dataId);\n    return hasOwn.call(this.data, dataId) ?\n        {\n          ...fromParent,\n          ...super.findChildRefIds(dataId),\n        }\n      : fromParent;\n  }\n\n  public getStorage(): StorageType {\n    let p: EntityStore = this.parent;\n    while ((p as Layer).parent) p = (p as Layer).parent;\n    return p.getStorage.apply(\n      p,\n      // @ts-expect-error\n      arguments\n    );\n  }\n}\n\n// Represents a Layer permanently installed just above the Root, which allows\n// reading optimistically (and registering optimistic dependencies) even when\n// no optimistic layers are currently active. The stump.group CacheGroup object\n// is shared by any/all Layer objects added on top of the Stump.\nclass Stump extends Layer {\n  constructor(root: EntityStore.Root) {\n    super(\n      \"EntityStore.Stump\",\n      root,\n      () => {},\n      new CacheGroup(root.group.caching, root.group)\n    );\n  }\n\n  public removeLayer() {\n    // Never remove the Stump layer.\n    return this;\n  }\n\n  public merge(older: string | StoreObject, newer: string | StoreObject) {\n    // We never want to write any data into the Stump, so we forward any merge\n    // calls to the Root instead. Another option here would be to throw an\n    // exception, but the toReference(object, true) function can sometimes\n    // trigger Stump writes (which used to be Root writes, before the Stump\n    // concept was introduced).\n    return this.parent.merge(older, newer);\n  }\n}\n\nfunction storeObjectReconciler(\n  existingObject: StoreObject,\n  incomingObject: StoreObject,\n  property: string | number\n): StoreValue {\n  const existingValue = existingObject[property];\n  const incomingValue = incomingObject[property];\n  // Wherever there is a key collision, prefer the incoming value, unless\n  // it is deeply equal to the existing value. It's worth checking deep\n  // equality here (even though blindly returning incoming would be\n  // logically correct) because preserving the referential identity of\n  // existing data can prevent needless rereading and rerendering.\n  return equal(existingValue, incomingValue) ? existingValue : incomingValue;\n}\n\nexport function supportsResultCaching(store: any): store is EntityStore {\n  // When result caching is disabled, store.depend will be null.\n  return !!(store instanceof EntityStore && store.group.caching);\n}\n","import { Trie } from \"@wry/trie\";\nimport {\n  canUseWeakMap,\n  canUseWeakSet,\n  isNonNullObject as isObjectOrArray,\n} from \"../../utilities/index.js\";\nimport { isArray } from \"./helpers.js\";\n\nfunction shallowCopy<T>(value: T): T {\n  if (isObjectOrArray(value)) {\n    return isArray(value) ?\n        (value.slice(0) as any as T)\n      : { __proto__: Object.getPrototypeOf(value), ...value };\n  }\n  return value;\n}\n\n// When programmers talk about the \"canonical form\" of an object, they\n// usually have the following meaning in mind, which I've copied from\n// https://en.wiktionary.org/wiki/canonical_form:\n//\n// 1. A standard or normal presentation of a mathematical entity [or\n//    object]. A canonical form is an element of a set of representatives\n//    of equivalence classes of forms such that there is a function or\n//    procedure which projects every element of each equivalence class\n//    onto that one element, the canonical form of that equivalence\n//    class. The canonical form is expected to be simpler than the rest of\n//    the forms in some way.\n//\n// That's a long-winded way of saying any two objects that have the same\n// canonical form may be considered equivalent, even if they are !==,\n// which usually means the objects are structurally equivalent (deeply\n// equal), but don't necessarily use the same memory.\n//\n// Like a literary or musical canon, this ObjectCanon class represents a\n// collection of unique canonical items (JavaScript objects), with the\n// important property that canon.admit(a) === canon.admit(b) if a and b\n// are deeply equal to each other. In terms of the definition above, the\n// canon.admit method is the \"function or procedure which projects every\"\n// object \"onto that one element, the canonical form.\"\n//\n// In the worst case, the canonicalization process may involve looking at\n// every property in the provided object tree, so it takes the same order\n// of time as deep equality checking. Fortunately, already-canonicalized\n// objects are returned immediately from canon.admit, so the presence of\n// canonical subtrees tends to speed up canonicalization.\n//\n// Since consumers of canonical objects can check for deep equality in\n// constant time, canonicalizing cache results can massively improve the\n// performance of application code that skips re-rendering unchanged\n// results, such as \"pure\" UI components in a framework like React.\n//\n// Of course, since canonical objects may be shared widely between\n// unrelated consumers, it's important to think of them as immutable, even\n// though they are not actually frozen with Object.freeze in production,\n// due to the extra performance overhead that comes with frozen objects.\n//\n// Custom scalar objects whose internal class name is neither Array nor\n// Object can be included safely in the admitted tree, but they will not\n// be replaced with a canonical version (to put it another way, they are\n// assumed to be canonical already).\n//\n// If we ignore custom objects, no detection of cycles or repeated object\n// references is currently required by the StoreReader class, since\n// GraphQL result objects are JSON-serializable trees (and thus contain\n// neither cycles nor repeated subtrees), so we can avoid the complexity\n// of keeping track of objects we've already seen during the recursion of\n// the admit method.\n//\n// In the future, we may consider adding additional cases to the switch\n// statement to handle other common object types, such as \"[object Date]\"\n// objects, as needed.\nexport class ObjectCanon {\n  // Set of all canonical objects this ObjectCanon has admitted, allowing\n  // canon.admit to return previously-canonicalized objects immediately.\n  private known = new (canUseWeakSet ? WeakSet : Set)<object>();\n\n  // Efficient storage/lookup structure for canonical objects.\n  private pool = new Trie<{\n    array?: any[];\n    object?: Record<string, any>;\n    keys?: SortedKeysInfo;\n  }>(canUseWeakMap);\n\n  public isKnown(value: any): boolean {\n    return isObjectOrArray(value) && this.known.has(value);\n  }\n\n  // Make the ObjectCanon assume this value has already been\n  // canonicalized.\n  private passes = new WeakMap<object, object>();\n  public pass<T>(value: T): T;\n  public pass(value: any) {\n    if (isObjectOrArray(value)) {\n      const copy = shallowCopy(value);\n      this.passes.set(copy, value);\n      return copy;\n    }\n    return value;\n  }\n\n  // Returns the canonical version of value.\n  public admit<T>(value: T): T;\n  public admit(value: any) {\n    if (isObjectOrArray(value)) {\n      const original = this.passes.get(value);\n      if (original) return original;\n\n      const proto = Object.getPrototypeOf(value);\n      switch (proto) {\n        case Array.prototype: {\n          if (this.known.has(value)) return value;\n          const array: any[] = (value as any[]).map(this.admit, this);\n          // Arrays are looked up in the Trie using their recursively\n          // canonicalized elements, and the known version of the array is\n          // preserved as node.array.\n          const node = this.pool.lookupArray(array);\n          if (!node.array) {\n            this.known.add((node.array = array));\n            // Since canonical arrays may be shared widely between\n            // unrelated consumers, it's important to regard them as\n            // immutable, even if they are not frozen in production.\n            if (__DEV__) {\n              Object.freeze(array);\n            }\n          }\n          return node.array;\n        }\n\n        case null:\n        case Object.prototype: {\n          if (this.known.has(value)) return value;\n          const proto = Object.getPrototypeOf(value);\n          const array = [proto];\n          const keys = this.sortedKeys(value);\n          array.push(keys.json);\n          const firstValueIndex = array.length;\n          keys.sorted.forEach((key) => {\n            array.push(this.admit((value as any)[key]));\n          });\n          // Objects are looked up in the Trie by their prototype (which\n          // is *not* recursively canonicalized), followed by a JSON\n          // representation of their (sorted) keys, followed by the\n          // sequence of recursively canonicalized values corresponding to\n          // those keys. To keep the final results unambiguous with other\n          // sequences (such as arrays that just happen to contain [proto,\n          // keys.json, value1, value2, ...]), the known version of the\n          // object is stored as node.object.\n          const node = this.pool.lookupArray(array);\n          if (!node.object) {\n            const obj = (node.object = Object.create(proto));\n            this.known.add(obj);\n            keys.sorted.forEach((key, i) => {\n              obj[key] = array[firstValueIndex + i];\n            });\n            // Since canonical objects may be shared widely between\n            // unrelated consumers, it's important to regard them as\n            // immutable, even if they are not frozen in production.\n            if (__DEV__) {\n              Object.freeze(obj);\n            }\n          }\n          return node.object;\n        }\n      }\n    }\n    return value;\n  }\n\n  // It's worthwhile to cache the sorting of arrays of strings, since the\n  // same initial unsorted arrays tend to be encountered many times.\n  // Fortunately, we can reuse the Trie machinery to look up the sorted\n  // arrays in linear time (which is faster than sorting large arrays).\n  private sortedKeys(obj: object) {\n    const keys = Object.keys(obj);\n    const node = this.pool.lookupArray(keys);\n    if (!node.keys) {\n      keys.sort();\n      const json = JSON.stringify(keys);\n      if (!(node.keys = this.keysByJSON.get(json))) {\n        this.keysByJSON.set(json, (node.keys = { sorted: keys, json }));\n      }\n    }\n    return node.keys;\n  }\n  // Arrays that contain the same elements in a different order can share\n  // the same SortedKeysInfo object, to save memory.\n  private keysByJSON = new Map<string, SortedKeysInfo>();\n\n  // This has to come last because it depends on keysByJSON.\n  public readonly empty = this.admit({});\n}\n\ntype SortedKeysInfo = {\n  sorted: string[];\n  json: string;\n};\n","import { invariant, newInvariantError } from \"../../utilities/globals/index.js\";\n\nimport type { DocumentNode, FieldNode, SelectionSetNode } from \"graphql\";\nimport { Kind } from \"graphql\";\nimport type { OptimisticWrapperFunction } from \"optimism\";\nimport { wrap } from \"optimism\";\n\nimport type {\n  Reference,\n  StoreObject,\n  FragmentMap,\n  FragmentMapFunction,\n} from \"../../utilities/index.js\";\nimport {\n  isField,\n  resultKeyNameFromField,\n  isReference,\n  makeReference,\n  shouldInclude,\n  addTypenameToDocument,\n  getDefaultValues,\n  getMainDefinition,\n  getQueryDefinition,\n  getFragmentFromSelection,\n  maybeDeepFreeze,\n  mergeDeepArray,\n  DeepMerger,\n  isNonNullObject,\n  canUseWeakMap,\n  compact,\n  canonicalStringify,\n  cacheSizes,\n  defaultCacheSizes,\n} from \"../../utilities/index.js\";\nimport type { Cache } from \"../core/types/Cache.js\";\nimport type {\n  DiffQueryAgainstStoreOptions,\n  InMemoryCacheConfig,\n  NormalizedCache,\n  ReadMergeModifyContext,\n} from \"./types.js\";\nimport {\n  maybeDependOnExistenceOfEntity,\n  supportsResultCaching,\n} from \"./entityStore.js\";\nimport {\n  isArray,\n  extractFragmentContext,\n  getTypenameFromStoreObject,\n  shouldCanonizeResults,\n} from \"./helpers.js\";\nimport type { Policies } from \"./policies.js\";\nimport type { InMemoryCache } from \"./inMemoryCache.js\";\nimport type { MissingTree } from \"../core/types/common.js\";\nimport { MissingFieldError } from \"../core/types/common.js\";\nimport { ObjectCanon } from \"./object-canon.js\";\n\nexport type VariableMap = { [name: string]: any };\n\ninterface ReadContext extends ReadMergeModifyContext {\n  query: DocumentNode;\n  policies: Policies;\n  canonizeResults: boolean;\n  fragmentMap: FragmentMap;\n  lookupFragment: FragmentMapFunction;\n}\n\nexport type ExecResult<R = any> = {\n  result: R;\n  missing?: MissingTree;\n};\n\ntype ExecSelectionSetOptions = {\n  selectionSet: SelectionSetNode;\n  objectOrReference: StoreObject | Reference;\n  enclosingRef: Reference;\n  context: ReadContext;\n};\n\ntype ExecSubSelectedArrayOptions = {\n  field: FieldNode;\n  array: readonly any[];\n  enclosingRef: Reference;\n  context: ReadContext;\n};\n\nexport interface StoreReaderConfig {\n  cache: InMemoryCache;\n  addTypename?: boolean;\n  resultCacheMaxSize?: number;\n  canonizeResults?: boolean;\n  canon?: ObjectCanon;\n  fragments?: InMemoryCacheConfig[\"fragments\"];\n}\n\n// Arguments type after keyArgs translation.\ntype ExecSelectionSetKeyArgs = [\n  SelectionSetNode,\n  StoreObject | Reference,\n  ReadMergeModifyContext,\n  boolean,\n];\n\nfunction execSelectionSetKeyArgs(\n  options: ExecSelectionSetOptions\n): ExecSelectionSetKeyArgs {\n  return [\n    options.selectionSet,\n    options.objectOrReference,\n    options.context,\n    // We split out this property so we can pass different values\n    // independently without modifying options.context itself.\n    options.context.canonizeResults,\n  ];\n}\n\nexport class StoreReader {\n  // cached version of executeSelectionSet\n  private executeSelectionSet: OptimisticWrapperFunction<\n    [ExecSelectionSetOptions], // Actual arguments tuple type.\n    ExecResult, // Actual return type.\n    ExecSelectionSetKeyArgs\n  >;\n\n  // cached version of executeSubSelectedArray\n  private executeSubSelectedArray: OptimisticWrapperFunction<\n    [ExecSubSelectedArrayOptions],\n    ExecResult<any>,\n    [ExecSubSelectedArrayOptions]\n  >;\n\n  private config: {\n    cache: InMemoryCache;\n    addTypename: boolean;\n    resultCacheMaxSize?: number;\n    canonizeResults: boolean;\n    fragments?: InMemoryCacheConfig[\"fragments\"];\n  };\n\n  private knownResults = new (canUseWeakMap ? WeakMap : Map)<\n    Record<string, any>,\n    SelectionSetNode\n  >();\n\n  public canon: ObjectCanon;\n  public resetCanon() {\n    this.canon = new ObjectCanon();\n  }\n\n  constructor(config: StoreReaderConfig) {\n    this.config = compact(config, {\n      addTypename: config.addTypename !== false,\n      canonizeResults: shouldCanonizeResults(config),\n    });\n\n    this.canon = config.canon || new ObjectCanon();\n\n    // memoized functions in this class will be \"garbage-collected\"\n    // by recreating the whole `StoreReader` in\n    // `InMemoryCache.resetResultsCache`\n    // (triggered from `InMemoryCache.gc` with `resetResultCache: true`)\n    this.executeSelectionSet = wrap(\n      (options) => {\n        const { canonizeResults } = options.context;\n\n        const peekArgs = execSelectionSetKeyArgs(options);\n\n        // Negate this boolean option so we can find out if we've already read\n        // this result using the other boolean value.\n        peekArgs[3] = !canonizeResults;\n\n        const other = this.executeSelectionSet.peek(...peekArgs);\n\n        if (other) {\n          if (canonizeResults) {\n            return {\n              ...other,\n              // If we previously read this result without canonizing it, we can\n              // reuse that result simply by canonizing it now.\n              result: this.canon.admit(other.result),\n            };\n          }\n          // If we previously read this result with canonization enabled, we can\n          // return that canonized result as-is.\n          return other;\n        }\n\n        maybeDependOnExistenceOfEntity(\n          options.context.store,\n          options.enclosingRef.__ref\n        );\n\n        // Finally, if we didn't find any useful previous results, run the real\n        // execSelectionSetImpl method with the given options.\n        return this.execSelectionSetImpl(options);\n      },\n      {\n        max:\n          this.config.resultCacheMaxSize ||\n          cacheSizes[\"inMemoryCache.executeSelectionSet\"] ||\n          defaultCacheSizes[\"inMemoryCache.executeSelectionSet\"],\n        keyArgs: execSelectionSetKeyArgs,\n        // Note that the parameters of makeCacheKey are determined by the\n        // array returned by keyArgs.\n        makeCacheKey(selectionSet, parent, context, canonizeResults) {\n          if (supportsResultCaching(context.store)) {\n            return context.store.makeCacheKey(\n              selectionSet,\n              isReference(parent) ? parent.__ref : parent,\n              context.varString,\n              canonizeResults\n            );\n          }\n        },\n      }\n    );\n\n    this.executeSubSelectedArray = wrap(\n      (options: ExecSubSelectedArrayOptions) => {\n        maybeDependOnExistenceOfEntity(\n          options.context.store,\n          options.enclosingRef.__ref\n        );\n        return this.execSubSelectedArrayImpl(options);\n      },\n      {\n        max:\n          this.config.resultCacheMaxSize ||\n          cacheSizes[\"inMemoryCache.executeSubSelectedArray\"] ||\n          defaultCacheSizes[\"inMemoryCache.executeSubSelectedArray\"],\n        makeCacheKey({ field, array, context }) {\n          if (supportsResultCaching(context.store)) {\n            return context.store.makeCacheKey(field, array, context.varString);\n          }\n        },\n      }\n    );\n  }\n\n  /**\n   * Given a store and a query, return as much of the result as possible and\n   * identify if any data was missing from the store.\n   */\n  public diffQueryAgainstStore<T>({\n    store,\n    query,\n    rootId = \"ROOT_QUERY\",\n    variables,\n    returnPartialData = true,\n    canonizeResults = this.config.canonizeResults,\n  }: DiffQueryAgainstStoreOptions): Cache.DiffResult<T> {\n    const policies = this.config.cache.policies;\n\n    variables = {\n      ...getDefaultValues(getQueryDefinition(query)),\n      ...variables!,\n    };\n\n    const rootRef = makeReference(rootId);\n    const execResult = this.executeSelectionSet({\n      selectionSet: getMainDefinition(query).selectionSet,\n      objectOrReference: rootRef,\n      enclosingRef: rootRef,\n      context: {\n        store,\n        query,\n        policies,\n        variables,\n        varString: canonicalStringify(variables),\n        canonizeResults,\n        ...extractFragmentContext(query, this.config.fragments),\n      },\n    });\n\n    let missing: MissingFieldError[] | undefined;\n    if (execResult.missing) {\n      // For backwards compatibility we still report an array of\n      // MissingFieldError objects, even though there will only ever be at most\n      // one of them, now that all missing field error messages are grouped\n      // together in the execResult.missing tree.\n      missing = [\n        new MissingFieldError(\n          firstMissing(execResult.missing)!,\n          execResult.missing,\n          query,\n          variables\n        ),\n      ];\n      if (!returnPartialData) {\n        throw missing[0];\n      }\n    }\n\n    return {\n      result: execResult.result,\n      complete: !missing,\n      missing,\n    };\n  }\n\n  public isFresh(\n    result: Record<string, any>,\n    parent: StoreObject | Reference,\n    selectionSet: SelectionSetNode,\n    context: ReadMergeModifyContext\n  ): boolean {\n    if (\n      supportsResultCaching(context.store) &&\n      this.knownResults.get(result) === selectionSet\n    ) {\n      const latest = this.executeSelectionSet.peek(\n        selectionSet,\n        parent,\n        context,\n        // If result is canonical, then it could only have been previously\n        // cached by the canonizing version of executeSelectionSet, so we can\n        // avoid checking both possibilities here.\n        this.canon.isKnown(result)\n      );\n      if (latest && result === latest.result) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  // Uncached version of executeSelectionSet.\n  private execSelectionSetImpl({\n    selectionSet,\n    objectOrReference,\n    enclosingRef,\n    context,\n  }: ExecSelectionSetOptions): ExecResult {\n    if (\n      isReference(objectOrReference) &&\n      !context.policies.rootTypenamesById[objectOrReference.__ref] &&\n      !context.store.has(objectOrReference.__ref)\n    ) {\n      return {\n        result: this.canon.empty,\n        missing: `Dangling reference to missing ${objectOrReference.__ref} object`,\n      };\n    }\n\n    const { variables, policies, store } = context;\n    const typename = store.getFieldValue<string>(\n      objectOrReference,\n      \"__typename\"\n    );\n\n    const objectsToMerge: Record<string, any>[] = [];\n    let missing: MissingTree | undefined;\n    const missingMerger = new DeepMerger();\n\n    if (\n      this.config.addTypename &&\n      typeof typename === \"string\" &&\n      !policies.rootIdsByTypename[typename]\n    ) {\n      // Ensure we always include a default value for the __typename\n      // field, if we have one, and this.config.addTypename is true. Note\n      // that this field can be overridden by other merged objects.\n      objectsToMerge.push({ __typename: typename });\n    }\n\n    function handleMissing<T>(result: ExecResult<T>, resultName: string): T {\n      if (result.missing) {\n        missing = missingMerger.merge(missing, {\n          [resultName]: result.missing,\n        });\n      }\n      return result.result;\n    }\n\n    const workSet = new Set(selectionSet.selections);\n\n    workSet.forEach((selection) => {\n      // Omit fields with directives @skip(if: <truthy value>) or\n      // @include(if: <falsy value>).\n      if (!shouldInclude(selection, variables)) return;\n\n      if (isField(selection)) {\n        let fieldValue = policies.readField(\n          {\n            fieldName: selection.name.value,\n            field: selection,\n            variables: context.variables,\n            from: objectOrReference,\n          },\n          context\n        );\n\n        const resultName = resultKeyNameFromField(selection);\n\n        if (fieldValue === void 0) {\n          if (!addTypenameToDocument.added(selection)) {\n            missing = missingMerger.merge(missing, {\n              [resultName]: `Can't find field '${selection.name.value}' on ${\n                isReference(objectOrReference) ?\n                  objectOrReference.__ref + \" object\"\n                : \"object \" + JSON.stringify(objectOrReference, null, 2)\n              }`,\n            });\n          }\n        } else if (isArray(fieldValue)) {\n          if (fieldValue.length > 0) {\n            fieldValue = handleMissing(\n              this.executeSubSelectedArray({\n                field: selection,\n                array: fieldValue,\n                enclosingRef,\n                context,\n              }),\n              resultName\n            );\n          }\n        } else if (!selection.selectionSet) {\n          // If the field does not have a selection set, then we handle it\n          // as a scalar value. To keep this.canon from canonicalizing\n          // this value, we use this.canon.pass to wrap fieldValue in a\n          // Pass object that this.canon.admit will later unwrap as-is.\n          if (context.canonizeResults) {\n            fieldValue = this.canon.pass(fieldValue);\n          }\n        } else if (fieldValue != null) {\n          // In this case, because we know the field has a selection set,\n          // it must be trying to query a GraphQLObjectType, which is why\n          // fieldValue must be != null.\n          fieldValue = handleMissing(\n            this.executeSelectionSet({\n              selectionSet: selection.selectionSet,\n              objectOrReference: fieldValue as StoreObject | Reference,\n              enclosingRef: isReference(fieldValue) ? fieldValue : enclosingRef,\n              context,\n            }),\n            resultName\n          );\n        }\n\n        if (fieldValue !== void 0) {\n          objectsToMerge.push({ [resultName]: fieldValue });\n        }\n      } else {\n        const fragment = getFragmentFromSelection(\n          selection,\n          context.lookupFragment\n        );\n\n        if (!fragment && selection.kind === Kind.FRAGMENT_SPREAD) {\n          throw newInvariantError(`No fragment named %s`, selection.name.value);\n        }\n\n        if (fragment && policies.fragmentMatches(fragment, typename)) {\n          fragment.selectionSet.selections.forEach(workSet.add, workSet);\n        }\n      }\n    });\n\n    const result = mergeDeepArray(objectsToMerge);\n    const finalResult: ExecResult = { result, missing };\n    const frozen =\n      context.canonizeResults ?\n        this.canon.admit(finalResult)\n        // Since this.canon is normally responsible for freezing results (only in\n        // development), freeze them manually if canonization is disabled.\n      : maybeDeepFreeze(finalResult);\n\n    // Store this result with its selection set so that we can quickly\n    // recognize it again in the StoreReader#isFresh method.\n    if (frozen.result) {\n      this.knownResults.set(frozen.result, selectionSet);\n    }\n\n    return frozen;\n  }\n\n  // Uncached version of executeSubSelectedArray.\n  private execSubSelectedArrayImpl({\n    field,\n    array,\n    enclosingRef,\n    context,\n  }: ExecSubSelectedArrayOptions): ExecResult {\n    let missing: MissingTree | undefined;\n    let missingMerger = new DeepMerger<MissingTree[]>();\n\n    function handleMissing<T>(childResult: ExecResult<T>, i: number): T {\n      if (childResult.missing) {\n        missing = missingMerger.merge(missing, { [i]: childResult.missing });\n      }\n      return childResult.result;\n    }\n\n    if (field.selectionSet) {\n      array = array.filter(context.store.canRead);\n    }\n\n    array = array.map((item, i) => {\n      // null value in array\n      if (item === null) {\n        return null;\n      }\n\n      // This is a nested array, recurse\n      if (isArray(item)) {\n        return handleMissing(\n          this.executeSubSelectedArray({\n            field,\n            array: item,\n            enclosingRef,\n            context,\n          }),\n          i\n        );\n      }\n\n      // This is an object, run the selection set on it\n      if (field.selectionSet) {\n        return handleMissing(\n          this.executeSelectionSet({\n            selectionSet: field.selectionSet,\n            objectOrReference: item,\n            enclosingRef: isReference(item) ? item : enclosingRef,\n            context,\n          }),\n          i\n        );\n      }\n\n      if (__DEV__) {\n        assertSelectionSetForIdValue(context.store, field, item);\n      }\n\n      return item;\n    });\n\n    return {\n      result: context.canonizeResults ? this.canon.admit(array) : array,\n      missing,\n    };\n  }\n}\n\nfunction firstMissing(tree: MissingTree): string | undefined {\n  try {\n    JSON.stringify(tree, (_, value) => {\n      if (typeof value === \"string\") throw value;\n      return value;\n    });\n  } catch (result) {\n    return result as string;\n  }\n}\n\nfunction assertSelectionSetForIdValue(\n  store: NormalizedCache,\n  field: FieldNode,\n  fieldValue: any\n) {\n  if (!field.selectionSet) {\n    const workSet = new Set([fieldValue]);\n    workSet.forEach((value) => {\n      if (isNonNullObject(value)) {\n        invariant(\n          !isReference(value),\n          `Missing selection set for object of type %s returned for query field %s`,\n          getTypenameFromStoreObject(store, value),\n          field.name.value\n        );\n        Object.values(value).forEach(workSet.add, workSet);\n      }\n    });\n  }\n}\n","import { invariant } from \"../../utilities/globals/index.js\";\n\nimport {\n  argumentsObjectFromField,\n  DeepMerger,\n  isNonEmptyArray,\n  isNonNullObject,\n} from \"../../utilities/index.js\";\n\nimport { hasOwn, isArray } from \"./helpers.js\";\nimport type {\n  KeySpecifier,\n  KeyFieldsFunction,\n  KeyArgsFunction,\n} from \"./policies.js\";\n\n// Mapping from JSON-encoded KeySpecifier strings to associated information.\nconst specifierInfoCache: Record<\n  string,\n  {\n    paths?: string[][];\n    keyFieldsFn?: KeyFieldsFunction;\n    keyArgsFn?: KeyArgsFunction;\n  }\n> = Object.create(null);\n\nfunction lookupSpecifierInfo(spec: KeySpecifier) {\n  // It's safe to encode KeySpecifier arrays with JSON.stringify, since they're\n  // just arrays of strings or nested KeySpecifier arrays, and the order of the\n  // array elements is important (and suitably preserved by JSON.stringify).\n  const cacheKey = JSON.stringify(spec);\n  return (\n    specifierInfoCache[cacheKey] ||\n    (specifierInfoCache[cacheKey] = Object.create(null))\n  );\n}\n\nexport function keyFieldsFnFromSpecifier(\n  specifier: KeySpecifier\n): KeyFieldsFunction {\n  const info = lookupSpecifierInfo(specifier);\n\n  return (\n    info.keyFieldsFn ||\n    (info.keyFieldsFn = (object, context) => {\n      const extract: typeof extractKey = (from, key) =>\n        context.readField(key, from);\n\n      const keyObject = (context.keyObject = collectSpecifierPaths(\n        specifier,\n        (schemaKeyPath) => {\n          let extracted = extractKeyPath(\n            context.storeObject,\n            schemaKeyPath,\n            // Using context.readField to extract paths from context.storeObject\n            // allows the extraction to see through Reference objects and respect\n            // custom read functions.\n            extract\n          );\n\n          if (\n            extracted === void 0 &&\n            object !== context.storeObject &&\n            hasOwn.call(object, schemaKeyPath[0])\n          ) {\n            // If context.storeObject fails to provide a value for the requested\n            // path, fall back to the raw result object, if it has a top-level key\n            // matching the first key in the path (schemaKeyPath[0]). This allows\n            // key fields included in the written data to be saved in the cache\n            // even if they are not selected explicitly in context.selectionSet.\n            // Not being mentioned by context.selectionSet is convenient here,\n            // since it means these extra fields cannot be affected by field\n            // aliasing, which is why we can use extractKey instead of\n            // context.readField for this extraction.\n            extracted = extractKeyPath(object, schemaKeyPath, extractKey);\n          }\n\n          invariant(\n            extracted !== void 0,\n            `Missing field '%s' while extracting keyFields from %s`,\n            schemaKeyPath.join(\".\"),\n            object\n          );\n\n          return extracted;\n        }\n      ));\n\n      return `${context.typename}:${JSON.stringify(keyObject)}`;\n    })\n  );\n}\n\n// The keyArgs extraction process is roughly analogous to keyFields extraction,\n// but there are no aliases involved, missing fields are tolerated (by merely\n// omitting them from the key), and drawing from field.directives or variables\n// is allowed (in addition to drawing from the field's arguments object).\n// Concretely, these differences mean passing a different key path extractor\n// function to collectSpecifierPaths, reusing the shared extractKeyPath helper\n// wherever possible.\nexport function keyArgsFnFromSpecifier(\n  specifier: KeySpecifier\n): KeyArgsFunction {\n  const info = lookupSpecifierInfo(specifier);\n\n  return (\n    info.keyArgsFn ||\n    (info.keyArgsFn = (args, { field, variables, fieldName }) => {\n      const collected = collectSpecifierPaths(specifier, (keyPath) => {\n        const firstKey = keyPath[0];\n        const firstChar = firstKey.charAt(0);\n\n        if (firstChar === \"@\") {\n          if (field && isNonEmptyArray(field.directives)) {\n            const directiveName = firstKey.slice(1);\n            // If the directive appears multiple times, only the first\n            // occurrence's arguments will be used. TODO Allow repetition?\n            // TODO Cache this work somehow, a la aliasMap?\n            const d = field.directives.find(\n              (d) => d.name.value === directiveName\n            );\n            // Fortunately argumentsObjectFromField works for DirectiveNode!\n            const directiveArgs = d && argumentsObjectFromField(d, variables);\n            // For directives without arguments (d defined, but directiveArgs ===\n            // null), the presence or absence of the directive still counts as\n            // part of the field key, so we return null in those cases. If no\n            // directive with this name was found for this field (d undefined and\n            // thus directiveArgs undefined), we return undefined, which causes\n            // this value to be omitted from the key object returned by\n            // collectSpecifierPaths.\n            return (\n              directiveArgs &&\n              extractKeyPath(\n                directiveArgs,\n                // If keyPath.length === 1, this code calls extractKeyPath with an\n                // empty path, which works because it uses directiveArgs as the\n                // extracted value.\n                keyPath.slice(1)\n              )\n            );\n          }\n          // If the key started with @ but there was no corresponding directive,\n          // we want to omit this value from the key object, not fall through to\n          // treating @whatever as a normal argument name.\n          return;\n        }\n\n        if (firstChar === \"$\") {\n          const variableName = firstKey.slice(1);\n          if (variables && hasOwn.call(variables, variableName)) {\n            const varKeyPath = keyPath.slice(0);\n            varKeyPath[0] = variableName;\n            return extractKeyPath(variables, varKeyPath);\n          }\n          // If the key started with $ but there was no corresponding variable, we\n          // want to omit this value from the key object, not fall through to\n          // treating $whatever as a normal argument name.\n          return;\n        }\n\n        if (args) {\n          return extractKeyPath(args, keyPath);\n        }\n      });\n\n      const suffix = JSON.stringify(collected);\n\n      // If no arguments were passed to this field, and it didn't have any other\n      // field key contributions from directives or variables, hide the empty\n      // :{} suffix from the field key. However, a field passed no arguments can\n      // still end up with a non-empty :{...} suffix if its key configuration\n      // refers to directives or variables.\n      if (args || suffix !== \"{}\") {\n        fieldName += \":\" + suffix;\n      }\n\n      return fieldName;\n    })\n  );\n}\n\nexport function collectSpecifierPaths(\n  specifier: KeySpecifier,\n  extractor: (path: string[]) => any\n): Record<string, any> {\n  // For each path specified by specifier, invoke the extractor, and repeatedly\n  // merge the results together, with appropriate ancestor context.\n  const merger = new DeepMerger();\n  return getSpecifierPaths(specifier).reduce((collected, path) => {\n    let toMerge = extractor(path);\n    if (toMerge !== void 0) {\n      // This path is not expected to contain array indexes, so the toMerge\n      // reconstruction will not contain arrays. TODO Fix this?\n      for (let i = path.length - 1; i >= 0; --i) {\n        toMerge = { [path[i]]: toMerge };\n      }\n      collected = merger.merge(collected, toMerge);\n    }\n    return collected;\n  }, Object.create(null));\n}\n\nexport function getSpecifierPaths(spec: KeySpecifier): string[][] {\n  const info = lookupSpecifierInfo(spec);\n\n  if (!info.paths) {\n    const paths: string[][] = (info.paths = []);\n    const currentPath: string[] = [];\n\n    spec.forEach((s, i) => {\n      if (isArray(s)) {\n        getSpecifierPaths(s).forEach((p) => paths.push(currentPath.concat(p)));\n        currentPath.length = 0;\n      } else {\n        currentPath.push(s);\n        if (!isArray(spec[i + 1])) {\n          paths.push(currentPath.slice(0));\n          currentPath.length = 0;\n        }\n      }\n    });\n  }\n\n  return info.paths!;\n}\n\nfunction extractKey<TObj extends Record<string, any>, TKey extends string>(\n  object: TObj,\n  key: TKey\n): TObj[TKey] | undefined {\n  return object[key];\n}\n\nexport function extractKeyPath(\n  object: Record<string, any>,\n  path: string[],\n  extract?: typeof extractKey\n): any {\n  // For each key in path, extract the corresponding child property from obj,\n  // flattening arrays if encountered (uncommon for keyFields and keyArgs, but\n  // possible). The final result of path.reduce is normalized so unexpected leaf\n  // objects have their keys safely sorted. That final result is difficult to\n  // type as anything other than any. You're welcome to try to improve the\n  // return type, but keep in mind extractKeyPath is not a public function\n  // (exported only for testing), so the effort may not be worthwhile unless the\n  // limited set of actual callers (see above) pass arguments that TypeScript\n  // can statically type. If we know only that path is some array of strings\n  // (and not, say, a specific tuple of statically known strings), any (or\n  // possibly unknown) is the honest answer.\n  extract = extract || extractKey;\n  return normalize(\n    path.reduce(function reducer(obj, key): any {\n      return isArray(obj) ?\n          obj.map((child) => reducer(child, key))\n        : obj && extract!(obj, key);\n    }, object)\n  );\n}\n\nfunction normalize<T>(value: T): T {\n  // Usually the extracted value will be a scalar value, since most primary\n  // key fields are scalar, but just in case we get an object or an array, we\n  // need to do some normalization of the order of (nested) keys.\n  if (isNonNullObject(value)) {\n    if (isArray(value)) {\n      return value.map(normalize) as any;\n    }\n    return collectSpecifierPaths(Object.keys(value).sort(), (path) =>\n      extractKeyPath(value, path)\n    ) as T;\n  }\n  return value;\n}\n","import { invariant, newInvariantError } from \"../../utilities/globals/index.js\";\n\nimport type {\n  InlineFragmentNode,\n  FragmentDefinitionNode,\n  SelectionSetNode,\n  FieldNode,\n} from \"graphql\";\n\nimport type {\n  FragmentMap,\n  StoreValue,\n  StoreObject,\n  Reference,\n} from \"../../utilities/index.js\";\nimport {\n  storeKeyNameFromField,\n  argumentsObjectFromField,\n  isReference,\n  getStoreKeyName,\n  isNonNullObject,\n  stringifyForDisplay,\n} from \"../../utilities/index.js\";\nimport type {\n  IdGetter,\n  MergeInfo,\n  NormalizedCache,\n  ReadMergeModifyContext,\n} from \"./types.js\";\nimport {\n  hasOwn,\n  fieldNameFromStoreName,\n  storeValueIsStoreObject,\n  selectionSetMatchesResult,\n  TypeOrFieldNameRegExp,\n  defaultDataIdFromObject,\n  isArray,\n} from \"./helpers.js\";\nimport { cacheSlot } from \"./reactiveVars.js\";\nimport type { InMemoryCache } from \"./inMemoryCache.js\";\nimport type {\n  SafeReadonly,\n  FieldSpecifier,\n  ToReferenceFunction,\n  ReadFieldFunction,\n  ReadFieldOptions,\n  CanReadFunction,\n} from \"../core/types/common.js\";\nimport type { WriteContext } from \"./writeToStore.js\";\n\nimport {\n  keyArgsFnFromSpecifier,\n  keyFieldsFnFromSpecifier,\n} from \"./key-extractor.js\";\n\nexport type TypePolicies = {\n  [__typename: string]: TypePolicy;\n};\n\n// TypeScript 3.7 will allow recursive type aliases, so this should work:\n// type KeySpecifier = (string | KeySpecifier)[]\nexport type KeySpecifier = ReadonlyArray<string | KeySpecifier>;\n\nexport type KeyFieldsContext = {\n  // The __typename of the incoming object, even if the __typename field was\n  // aliased to another name in the raw result object. May be undefined when\n  // dataIdFromObject is called for objects without __typename fields.\n  typename: string | undefined;\n\n  // The object to be identified, after processing to remove aliases and\n  // normalize identifiable child objects with references.\n  storeObject: StoreObject;\n\n  // Handy tool for reading additional fields from context.storeObject, either\n  // readField(\"fieldName\") to read storeObject[fieldName], or readField(\"name\",\n  // objectOrReference) to read from another object or Reference. If you read a\n  // field with a read function, that function will be invoked.\n  readField: ReadFieldFunction;\n\n  // If you are writing a custom keyFields function, and you plan to use the raw\n  // result object passed as the first argument, you may also need access to the\n  // selection set and available fragments for this object, just in case any\n  // fields have aliases. Since this logic is tricky to get right, and these\n  // context properties are not even always provided (for example, they are\n  // omitted when calling cache.identify(object), where object is assumed to be\n  // a StoreObject), we recommend you use context.storeObject (which has already\n  // been de-aliased) and context.readField (which can read from references as\n  // well as objects) instead of the raw result object in your keyFields\n  // functions, or just rely on the internal implementation of keyFields:[...]\n  // syntax to get these details right for you.\n  selectionSet?: SelectionSetNode;\n  fragmentMap?: FragmentMap;\n\n  // Internal. May be set by the KeyFieldsFunction to report fields that were\n  // involved in computing the ID. Never passed in by the caller.\n  keyObject?: Record<string, any>;\n};\n\nexport type KeyFieldsFunction = (\n  object: Readonly<StoreObject>,\n  context: KeyFieldsContext\n) => KeySpecifier | false | ReturnType<IdGetter>;\n\ntype KeyFieldsResult = Exclude<ReturnType<KeyFieldsFunction>, KeySpecifier>;\n\n// TODO Should TypePolicy be a generic type, with a TObject or TEntity\n// type parameter?\nexport type TypePolicy = {\n  // Allows defining the primary key fields for this type, either using an\n  // array of field names or a function that returns an arbitrary string.\n  keyFields?: KeySpecifier | KeyFieldsFunction | false;\n\n  // Allows defining a merge function (or merge:true/false shorthand) to\n  // be used for merging objects of this type wherever they appear, unless\n  // the parent field also defines a merge function/boolean (that is,\n  // parent field merge functions take precedence over type policy merge\n  // functions). In many cases, defining merge:true for a given type\n  // policy can save you from specifying merge:true for all the field\n  // policies where that type might be encountered.\n  merge?: FieldMergeFunction | boolean;\n\n  // In the rare event that your schema happens to use a different\n  // __typename for the root Query, Mutation, and/or Schema types, you can\n  // express your deviant preferences by enabling one of these options.\n  queryType?: true;\n  mutationType?: true;\n  subscriptionType?: true;\n\n  fields?: {\n    [fieldName: string]: FieldPolicy<any> | FieldReadFunction<any>;\n  };\n};\n\nexport type KeyArgsFunction = (\n  args: Record<string, any> | null,\n  context: {\n    typename: string;\n    fieldName: string;\n    field: FieldNode | null;\n    variables?: Record<string, any>;\n  }\n) => KeySpecifier | false | ReturnType<IdGetter>;\n\nexport type FieldPolicy<\n  // The internal representation used to store the field's data in the\n  // cache. Must be JSON-serializable if you plan to serialize the result\n  // of cache.extract() using JSON.\n  TExisting = any,\n  // The type of the incoming parameter passed to the merge function,\n  // typically matching the GraphQL response format, but with Reference\n  // objects substituted for any identifiable child objects. Often the\n  // same as TExisting, but not necessarily.\n  TIncoming = TExisting,\n  // The type that the read function actually returns, using TExisting\n  // data and options.args as input. Usually the same as TIncoming.\n  TReadResult = TIncoming,\n  // Allows FieldFunctionOptions definition to be overwritten by the\n  // developer\n  TOptions extends FieldFunctionOptions = FieldFunctionOptions,\n> = {\n  keyArgs?: KeySpecifier | KeyArgsFunction | false;\n  read?: FieldReadFunction<TExisting, TReadResult, TOptions>;\n  merge?: FieldMergeFunction<TExisting, TIncoming, TOptions> | boolean;\n};\n\nexport type StorageType = Record<string, any>;\n\nfunction argsFromFieldSpecifier(spec: FieldSpecifier) {\n  return (\n    spec.args !== void 0 ? spec.args\n    : spec.field ? argumentsObjectFromField(spec.field, spec.variables)\n    : null\n  );\n}\n\nexport interface FieldFunctionOptions<\n  TArgs = Record<string, any>,\n  TVars = Record<string, any>,\n> {\n  args: TArgs | null;\n\n  // The name of the field, equal to options.field.name.value when\n  // options.field is available. Useful if you reuse the same function for\n  // multiple fields, and you need to know which field you're currently\n  // processing. Always a string, even when options.field is null.\n  fieldName: string;\n\n  // The full field key used internally, including serialized key arguments.\n  storeFieldName: string;\n\n  // The FieldNode object used to read this field. Useful if you need to\n  // know about other attributes of the field, such as its directives. This\n  // option will be null when a string was passed to options.readField.\n  field: FieldNode | null;\n\n  variables?: TVars;\n\n  // Utilities for dealing with { __ref } objects.\n  isReference: typeof isReference;\n  toReference: ToReferenceFunction;\n\n  // A handy place to put field-specific data that you want to survive\n  // across multiple read function calls. Useful for field-level caching,\n  // if your read function does any expensive work.\n  storage: StorageType;\n\n  cache: InMemoryCache;\n\n  // Helper function for reading other fields within the current object.\n  // If a foreign object or reference is provided, the field will be read\n  // from that object instead of the current object, so this function can\n  // be used (together with isReference) to examine the cache outside the\n  // current object. If a FieldNode is passed instead of a string, and\n  // that FieldNode has arguments, the same options.variables will be used\n  // to compute the argument values. Note that this function will invoke\n  // custom read functions for other fields, if defined. Always returns\n  // immutable data (enforced with Object.freeze in development).\n  readField: ReadFieldFunction;\n\n  // Returns true for non-normalized StoreObjects and non-dangling\n  // References, indicating that readField(name, objOrRef) has a chance of\n  // working. Useful for filtering out dangling references from lists.\n  canRead: CanReadFunction;\n\n  // Instead of just merging objects with { ...existing, ...incoming }, this\n  // helper function can be used to merge objects in a way that respects any\n  // custom merge functions defined for their fields.\n  mergeObjects: MergeObjectsFunction;\n}\n\ntype MergeObjectsFunction = <T extends StoreObject | Reference>(\n  existing: T,\n  incoming: T\n) => T;\n\nexport type FieldReadFunction<\n  TExisting = any,\n  TReadResult = TExisting,\n  TOptions extends FieldFunctionOptions = FieldFunctionOptions,\n> = (\n  // When reading a field, one often needs to know about any existing\n  // value stored for that field. If the field is read before any value\n  // has been written to the cache, this existing parameter will be\n  // undefined, which makes it easy to use a default parameter expression\n  // to supply the initial value. This parameter is positional (rather\n  // than one of the named options) because that makes it possible for the\n  // developer to annotate it with a type, without also having to provide\n  // a whole new type for the options object.\n  existing: SafeReadonly<TExisting> | undefined,\n  options: TOptions\n) => TReadResult | undefined;\n\nexport type FieldMergeFunction<\n  TExisting = any,\n  TIncoming = TExisting,\n  // Passing the whole FieldFunctionOptions makes the current definition\n  // independent from its implementation\n  TOptions extends FieldFunctionOptions = FieldFunctionOptions,\n> = (\n  existing: SafeReadonly<TExisting> | undefined,\n  // The incoming parameter needs to be positional as well, for the same\n  // reasons discussed in FieldReadFunction above.\n  incoming: SafeReadonly<TIncoming>,\n  options: TOptions\n) => SafeReadonly<TExisting>;\n\nconst nullKeyFieldsFn: KeyFieldsFunction = () => void 0;\nconst simpleKeyArgsFn: KeyArgsFunction = (_args, context) => context.fieldName;\n\n// These merge functions can be selected by specifying merge:true or\n// merge:false in a field policy.\nconst mergeTrueFn: FieldMergeFunction<any> = (\n  existing,\n  incoming,\n  { mergeObjects }\n) => mergeObjects(existing, incoming);\nconst mergeFalseFn: FieldMergeFunction<any> = (_, incoming) => incoming;\n\nexport type PossibleTypesMap = {\n  [supertype: string]: string[];\n};\n\nexport class Policies {\n  private typePolicies: {\n    [__typename: string]: {\n      keyFn?: KeyFieldsFunction;\n      merge?: FieldMergeFunction<any>;\n      fields: {\n        [fieldName: string]: {\n          keyFn?: KeyArgsFunction;\n          read?: FieldReadFunction<any>;\n          merge?: FieldMergeFunction<any>;\n        };\n      };\n    };\n  } = Object.create(null);\n\n  private toBeAdded: {\n    [__typename: string]: TypePolicy[];\n  } = Object.create(null);\n\n  // Map from subtype names to sets of supertype names. Note that this\n  // representation inverts the structure of possibleTypes (whose keys are\n  // supertypes and whose values are arrays of subtypes) because it tends\n  // to be much more efficient to search upwards than downwards.\n  private supertypeMap = new Map<string, Set<string>>();\n\n  // Any fuzzy subtypes specified by possibleTypes will be converted to\n  // RegExp objects and recorded here. Every key of this map can also be\n  // found in supertypeMap. In many cases this Map will be empty, which\n  // means no fuzzy subtype checking will happen in fragmentMatches.\n  private fuzzySubtypes = new Map<string, RegExp>();\n\n  public readonly cache: InMemoryCache;\n\n  public readonly rootIdsByTypename: Record<string, string> =\n    Object.create(null);\n  public readonly rootTypenamesById: Record<string, string> =\n    Object.create(null);\n\n  public readonly usingPossibleTypes = false;\n\n  constructor(\n    private config: {\n      cache: InMemoryCache;\n      dataIdFromObject?: KeyFieldsFunction;\n      possibleTypes?: PossibleTypesMap;\n      typePolicies?: TypePolicies;\n    }\n  ) {\n    this.config = {\n      dataIdFromObject: defaultDataIdFromObject,\n      ...config,\n    };\n\n    this.cache = this.config.cache;\n\n    this.setRootTypename(\"Query\");\n    this.setRootTypename(\"Mutation\");\n    this.setRootTypename(\"Subscription\");\n\n    if (config.possibleTypes) {\n      this.addPossibleTypes(config.possibleTypes);\n    }\n\n    if (config.typePolicies) {\n      this.addTypePolicies(config.typePolicies);\n    }\n  }\n\n  public identify(\n    object: StoreObject,\n    partialContext?: Partial<KeyFieldsContext>\n  ): [string?, StoreObject?] {\n    const policies = this;\n\n    const typename =\n      (partialContext &&\n        (partialContext.typename || partialContext.storeObject?.__typename)) ||\n      object.__typename;\n\n    // It should be possible to write root Query fields with writeFragment,\n    // using { __typename: \"Query\", ... } as the data, but it does not make\n    // sense to allow the same identification behavior for the Mutation and\n    // Subscription types, since application code should never be writing\n    // directly to (or reading directly from) those root objects.\n    if (typename === this.rootTypenamesById.ROOT_QUERY) {\n      return [\"ROOT_QUERY\"];\n    }\n\n    // Default context.storeObject to object if not otherwise provided.\n    const storeObject =\n      (partialContext && partialContext.storeObject) || object;\n\n    const context: KeyFieldsContext = {\n      ...partialContext,\n      typename,\n      storeObject,\n      readField:\n        (partialContext && partialContext.readField) ||\n        function () {\n          const options = normalizeReadFieldOptions(arguments, storeObject);\n          return policies.readField(options, {\n            store: policies.cache[\"data\"],\n            variables: options.variables,\n          });\n        },\n    };\n\n    let id: KeyFieldsResult;\n\n    const policy = typename && this.getTypePolicy(typename);\n    let keyFn = (policy && policy.keyFn) || this.config.dataIdFromObject;\n    while (keyFn) {\n      const specifierOrId = keyFn({ ...object, ...storeObject }, context);\n      if (isArray(specifierOrId)) {\n        keyFn = keyFieldsFnFromSpecifier(specifierOrId);\n      } else {\n        id = specifierOrId;\n        break;\n      }\n    }\n\n    id = id ? String(id) : void 0;\n    return context.keyObject ? [id, context.keyObject] : [id];\n  }\n\n  public addTypePolicies(typePolicies: TypePolicies) {\n    Object.keys(typePolicies).forEach((typename) => {\n      const { queryType, mutationType, subscriptionType, ...incoming } =\n        typePolicies[typename];\n\n      // Though {query,mutation,subscription}Type configurations are rare,\n      // it's important to call setRootTypename as early as possible,\n      // since these configurations should apply consistently for the\n      // entire lifetime of the cache. Also, since only one __typename can\n      // qualify as one of these root types, these three properties cannot\n      // be inherited, unlike the rest of the incoming properties. That\n      // restriction is convenient, because the purpose of this.toBeAdded\n      // is to delay the processing of type/field policies until the first\n      // time they're used, allowing policies to be added in any order as\n      // long as all relevant policies (including policies for supertypes)\n      // have been added by the time a given policy is used for the first\n      // time. In other words, since inheritance doesn't matter for these\n      // properties, there's also no need to delay their processing using\n      // the this.toBeAdded queue.\n      if (queryType) this.setRootTypename(\"Query\", typename);\n      if (mutationType) this.setRootTypename(\"Mutation\", typename);\n      if (subscriptionType) this.setRootTypename(\"Subscription\", typename);\n\n      if (hasOwn.call(this.toBeAdded, typename)) {\n        this.toBeAdded[typename].push(incoming);\n      } else {\n        this.toBeAdded[typename] = [incoming];\n      }\n    });\n  }\n\n  private updateTypePolicy(typename: string, incoming: TypePolicy) {\n    const existing = this.getTypePolicy(typename);\n    const { keyFields, fields } = incoming;\n\n    function setMerge(\n      existing: { merge?: FieldMergeFunction | boolean },\n      merge?: FieldMergeFunction | boolean\n    ) {\n      existing.merge =\n        typeof merge === \"function\" ? merge\n          // Pass merge:true as a shorthand for a merge implementation\n          // that returns options.mergeObjects(existing, incoming).\n        : merge === true ? mergeTrueFn\n          // Pass merge:false to make incoming always replace existing\n          // without any warnings about data clobbering.\n        : merge === false ? mergeFalseFn\n        : existing.merge;\n    }\n\n    // Type policies can define merge functions, as an alternative to\n    // using field policies to merge child objects.\n    setMerge(existing, incoming.merge);\n\n    existing.keyFn =\n      // Pass false to disable normalization for this typename.\n      keyFields === false ? nullKeyFieldsFn\n        // Pass an array of strings to use those fields to compute a\n        // composite ID for objects of this typename.\n      : isArray(keyFields) ? keyFieldsFnFromSpecifier(keyFields)\n        // Pass a function to take full control over identification.\n      : typeof keyFields === \"function\" ? keyFields\n        // Leave existing.keyFn unchanged if above cases fail.\n      : existing.keyFn;\n\n    if (fields) {\n      Object.keys(fields).forEach((fieldName) => {\n        const existing = this.getFieldPolicy(typename, fieldName, true)!;\n        const incoming = fields[fieldName];\n\n        if (typeof incoming === \"function\") {\n          existing.read = incoming;\n        } else {\n          const { keyArgs, read, merge } = incoming;\n\n          existing.keyFn =\n            // Pass false to disable argument-based differentiation of\n            // field identities.\n            keyArgs === false ? simpleKeyArgsFn\n              // Pass an array of strings to use named arguments to\n              // compute a composite identity for the field.\n            : isArray(keyArgs) ? keyArgsFnFromSpecifier(keyArgs)\n              // Pass a function to take full control over field identity.\n            : typeof keyArgs === \"function\" ? keyArgs\n              // Leave existing.keyFn unchanged if above cases fail.\n            : existing.keyFn;\n\n          if (typeof read === \"function\") {\n            existing.read = read;\n          }\n\n          setMerge(existing, merge);\n        }\n\n        if (existing.read && existing.merge) {\n          // If we have both a read and a merge function, assume\n          // keyArgs:false, because read and merge together can take\n          // responsibility for interpreting arguments in and out. This\n          // default assumption can always be overridden by specifying\n          // keyArgs explicitly in the FieldPolicy.\n          existing.keyFn = existing.keyFn || simpleKeyArgsFn;\n        }\n      });\n    }\n  }\n\n  private setRootTypename(\n    which: \"Query\" | \"Mutation\" | \"Subscription\",\n    typename: string = which\n  ) {\n    const rootId = \"ROOT_\" + which.toUpperCase();\n    const old = this.rootTypenamesById[rootId];\n    if (typename !== old) {\n      invariant(\n        !old || old === which,\n        `Cannot change root %s __typename more than once`,\n        which\n      );\n      // First, delete any old __typename associated with this rootId from\n      // rootIdsByTypename.\n      if (old) delete this.rootIdsByTypename[old];\n      // Now make this the only __typename that maps to this rootId.\n      this.rootIdsByTypename[typename] = rootId;\n      // Finally, update the __typename associated with this rootId.\n      this.rootTypenamesById[rootId] = typename;\n    }\n  }\n\n  public addPossibleTypes(possibleTypes: PossibleTypesMap) {\n    (this.usingPossibleTypes as boolean) = true;\n    Object.keys(possibleTypes).forEach((supertype) => {\n      // Make sure all types have an entry in this.supertypeMap, even if\n      // their supertype set is empty, so we can return false immediately\n      // from policies.fragmentMatches for unknown supertypes.\n      this.getSupertypeSet(supertype, true);\n\n      possibleTypes[supertype].forEach((subtype) => {\n        this.getSupertypeSet(subtype, true)!.add(supertype);\n        const match = subtype.match(TypeOrFieldNameRegExp);\n        if (!match || match[0] !== subtype) {\n          // TODO Don't interpret just any invalid typename as a RegExp.\n          this.fuzzySubtypes.set(subtype, new RegExp(subtype));\n        }\n      });\n    });\n  }\n\n  private getTypePolicy(typename: string): Policies[\"typePolicies\"][string] {\n    if (!hasOwn.call(this.typePolicies, typename)) {\n      const policy: Policies[\"typePolicies\"][string] = (this.typePolicies[\n        typename\n      ] = Object.create(null));\n      policy.fields = Object.create(null);\n\n      // When the TypePolicy for typename is first accessed, instead of\n      // starting with an empty policy object, inherit any properties or\n      // fields from the type policies of the supertypes of typename.\n      //\n      // Any properties or fields defined explicitly within the TypePolicy\n      // for typename will take precedence, and if there are multiple\n      // supertypes, the properties of policies whose types were added\n      // later via addPossibleTypes will take precedence over those of\n      // earlier supertypes. TODO Perhaps we should warn about these\n      // conflicts in development, and recommend defining the property\n      // explicitly in the subtype policy?\n      //\n      // Field policy inheritance is atomic/shallow: you can't inherit a\n      // field policy and then override just its read function, since read\n      // and merge functions often need to cooperate, so changing only one\n      // of them would be a recipe for inconsistency.\n      //\n      // Once the TypePolicy for typename has been accessed, its properties can\n      // still be updated directly using addTypePolicies, but future changes to\n      // inherited supertype policies will not be reflected in this subtype\n      // policy, because this code runs at most once per typename.\n      let supertypes = this.supertypeMap.get(typename);\n      if (!supertypes && this.fuzzySubtypes.size) {\n        // To make the inheritance logic work for unknown typename strings that\n        // may have fuzzy supertypes, we give this typename an empty supertype\n        // set and then populate it with any fuzzy supertypes that match.\n        supertypes = this.getSupertypeSet(typename, true)!;\n        // This only works for typenames that are directly matched by a fuzzy\n        // supertype. What if there is an intermediate chain of supertypes?\n        // While possible, that situation can only be solved effectively by\n        // specifying the intermediate relationships via possibleTypes, manually\n        // and in a non-fuzzy way.\n        this.fuzzySubtypes.forEach((regExp, fuzzy) => {\n          if (regExp.test(typename)) {\n            // The fuzzy parameter is just the original string version of regExp\n            // (not a valid __typename string), but we can look up the\n            // associated supertype(s) in this.supertypeMap.\n            const fuzzySupertypes = this.supertypeMap.get(fuzzy);\n            if (fuzzySupertypes) {\n              fuzzySupertypes.forEach((supertype) =>\n                supertypes!.add(supertype)\n              );\n            }\n          }\n        });\n      }\n      if (supertypes && supertypes.size) {\n        supertypes.forEach((supertype) => {\n          const { fields, ...rest } = this.getTypePolicy(supertype);\n          Object.assign(policy, rest);\n          Object.assign(policy.fields, fields);\n        });\n      }\n    }\n\n    const inbox = this.toBeAdded[typename];\n    if (inbox && inbox.length) {\n      // Merge the pending policies into this.typePolicies, in the order they\n      // were originally passed to addTypePolicy.\n      inbox.splice(0).forEach((policy) => {\n        this.updateTypePolicy(typename, policy);\n      });\n    }\n\n    return this.typePolicies[typename];\n  }\n\n  private getFieldPolicy(\n    typename: string | undefined,\n    fieldName: string,\n    createIfMissing: boolean\n  ):\n    | {\n        keyFn?: KeyArgsFunction;\n        read?: FieldReadFunction<any>;\n        merge?: FieldMergeFunction<any>;\n      }\n    | undefined {\n    if (typename) {\n      const fieldPolicies = this.getTypePolicy(typename).fields;\n      return (\n        fieldPolicies[fieldName] ||\n        (createIfMissing && (fieldPolicies[fieldName] = Object.create(null)))\n      );\n    }\n  }\n\n  private getSupertypeSet(\n    subtype: string,\n    createIfMissing: boolean\n  ): Set<string> | undefined {\n    let supertypeSet = this.supertypeMap.get(subtype);\n    if (!supertypeSet && createIfMissing) {\n      this.supertypeMap.set(subtype, (supertypeSet = new Set<string>()));\n    }\n    return supertypeSet;\n  }\n\n  public fragmentMatches(\n    fragment: InlineFragmentNode | FragmentDefinitionNode,\n    typename: string | undefined,\n    result?: Record<string, any>,\n    variables?: Record<string, any>\n  ): boolean {\n    if (!fragment.typeCondition) return true;\n\n    // If the fragment has a type condition but the object we're matching\n    // against does not have a __typename, the fragment cannot match.\n    if (!typename) return false;\n\n    const supertype = fragment.typeCondition.name.value;\n    // Common case: fragment type condition and __typename are the same.\n    if (typename === supertype) return true;\n\n    if (this.usingPossibleTypes && this.supertypeMap.has(supertype)) {\n      const typenameSupertypeSet = this.getSupertypeSet(typename, true)!;\n      const workQueue = [typenameSupertypeSet];\n      const maybeEnqueue = (subtype: string) => {\n        const supertypeSet = this.getSupertypeSet(subtype, false);\n        if (\n          supertypeSet &&\n          supertypeSet.size &&\n          workQueue.indexOf(supertypeSet) < 0\n        ) {\n          workQueue.push(supertypeSet);\n        }\n      };\n\n      // We need to check fuzzy subtypes only if we encountered fuzzy\n      // subtype strings in addPossibleTypes, and only while writing to\n      // the cache, since that's when selectionSetMatchesResult gives a\n      // strong signal of fragment matching. The StoreReader class calls\n      // policies.fragmentMatches without passing a result object, so\n      // needToCheckFuzzySubtypes is always false while reading.\n      let needToCheckFuzzySubtypes = !!(result && this.fuzzySubtypes.size);\n      let checkingFuzzySubtypes = false;\n\n      // It's important to keep evaluating workQueue.length each time through\n      // the loop, because the queue can grow while we're iterating over it.\n      for (let i = 0; i < workQueue.length; ++i) {\n        const supertypeSet = workQueue[i];\n\n        if (supertypeSet.has(supertype)) {\n          if (!typenameSupertypeSet.has(supertype)) {\n            if (checkingFuzzySubtypes) {\n              invariant.warn(\n                `Inferring subtype %s of supertype %s`,\n                typename,\n                supertype\n              );\n            }\n            // Record positive results for faster future lookup.\n            // Unfortunately, we cannot safely cache negative results,\n            // because new possibleTypes data could always be added to the\n            // Policies class.\n            typenameSupertypeSet.add(supertype);\n          }\n          return true;\n        }\n\n        supertypeSet.forEach(maybeEnqueue);\n\n        if (\n          needToCheckFuzzySubtypes &&\n          // Start checking fuzzy subtypes only after exhausting all\n          // non-fuzzy subtypes (after the final iteration of the loop).\n          i === workQueue.length - 1 &&\n          // We could wait to compare fragment.selectionSet to result\n          // after we verify the supertype, but this check is often less\n          // expensive than that search, and we will have to do the\n          // comparison anyway whenever we find a potential match.\n          selectionSetMatchesResult(fragment.selectionSet, result!, variables)\n        ) {\n          // We don't always need to check fuzzy subtypes (if no result\n          // was provided, or !this.fuzzySubtypes.size), but, when we do,\n          // we only want to check them once.\n          needToCheckFuzzySubtypes = false;\n          checkingFuzzySubtypes = true;\n\n          // If we find any fuzzy subtypes that match typename, extend the\n          // workQueue to search through the supertypes of those fuzzy\n          // subtypes. Otherwise the for-loop will terminate and we'll\n          // return false below.\n          this.fuzzySubtypes.forEach((regExp, fuzzyString) => {\n            const match = typename.match(regExp);\n            if (match && match[0] === typename) {\n              maybeEnqueue(fuzzyString);\n            }\n          });\n        }\n      }\n    }\n\n    return false;\n  }\n\n  public hasKeyArgs(typename: string | undefined, fieldName: string) {\n    const policy = this.getFieldPolicy(typename, fieldName, false);\n    return !!(policy && policy.keyFn);\n  }\n\n  public getStoreFieldName(fieldSpec: FieldSpecifier): string {\n    const { typename, fieldName } = fieldSpec;\n    const policy = this.getFieldPolicy(typename, fieldName, false);\n    let storeFieldName: Exclude<ReturnType<KeyArgsFunction>, KeySpecifier>;\n\n    let keyFn = policy && policy.keyFn;\n    if (keyFn && typename) {\n      const context: Parameters<KeyArgsFunction>[1] = {\n        typename,\n        fieldName,\n        field: fieldSpec.field || null,\n        variables: fieldSpec.variables,\n      };\n      const args = argsFromFieldSpecifier(fieldSpec);\n      while (keyFn) {\n        const specifierOrString = keyFn(args, context);\n        if (isArray(specifierOrString)) {\n          keyFn = keyArgsFnFromSpecifier(specifierOrString);\n        } else {\n          // If the custom keyFn returns a falsy value, fall back to\n          // fieldName instead.\n          storeFieldName = specifierOrString || fieldName;\n          break;\n        }\n      }\n    }\n\n    if (storeFieldName === void 0) {\n      storeFieldName =\n        fieldSpec.field ?\n          storeKeyNameFromField(fieldSpec.field, fieldSpec.variables)\n        : getStoreKeyName(fieldName, argsFromFieldSpecifier(fieldSpec));\n    }\n\n    // Returning false from a keyArgs function is like configuring\n    // keyArgs: false, but more dynamic.\n    if (storeFieldName === false) {\n      return fieldName;\n    }\n\n    // Make sure custom field names start with the actual field.name.value\n    // of the field, so we can always figure out which properties of a\n    // StoreObject correspond to which original field names.\n    return fieldName === fieldNameFromStoreName(storeFieldName) ? storeFieldName\n      : fieldName + \":\" + storeFieldName;\n  }\n\n  public readField<V = StoreValue>(\n    options: ReadFieldOptions,\n    context: ReadMergeModifyContext\n  ): SafeReadonly<V> | undefined {\n    const objectOrReference = options.from;\n    if (!objectOrReference) return;\n\n    const nameOrField = options.field || options.fieldName;\n    if (!nameOrField) return;\n\n    if (options.typename === void 0) {\n      const typename = context.store.getFieldValue<string>(\n        objectOrReference,\n        \"__typename\"\n      );\n      if (typename) options.typename = typename;\n    }\n\n    const storeFieldName = this.getStoreFieldName(options);\n    const fieldName = fieldNameFromStoreName(storeFieldName);\n    const existing = context.store.getFieldValue<V>(\n      objectOrReference,\n      storeFieldName\n    );\n    const policy = this.getFieldPolicy(options.typename, fieldName, false);\n    const read = policy && policy.read;\n\n    if (read) {\n      const readOptions = makeFieldFunctionOptions(\n        this,\n        objectOrReference,\n        options,\n        context,\n        context.store.getStorage(\n          isReference(objectOrReference) ?\n            objectOrReference.__ref\n          : objectOrReference,\n          storeFieldName\n        )\n      );\n\n      // Call read(existing, readOptions) with cacheSlot holding this.cache.\n      return cacheSlot.withValue(this.cache, read, [\n        existing,\n        readOptions,\n      ]) as SafeReadonly<V>;\n    }\n\n    return existing;\n  }\n\n  public getReadFunction(\n    typename: string | undefined,\n    fieldName: string\n  ): FieldReadFunction | undefined {\n    const policy = this.getFieldPolicy(typename, fieldName, false);\n    return policy && policy.read;\n  }\n\n  public getMergeFunction(\n    parentTypename: string | undefined,\n    fieldName: string,\n    childTypename: string | undefined\n  ): FieldMergeFunction | undefined {\n    let policy:\n      | Policies[\"typePolicies\"][string]\n      | Policies[\"typePolicies\"][string][\"fields\"][string]\n      | undefined = this.getFieldPolicy(parentTypename, fieldName, false);\n    let merge = policy && policy.merge;\n    if (!merge && childTypename) {\n      policy = this.getTypePolicy(childTypename);\n      merge = policy && policy.merge;\n    }\n    return merge;\n  }\n\n  public runMergeFunction(\n    existing: StoreValue,\n    incoming: StoreValue,\n    { field, typename, merge }: MergeInfo,\n    context: WriteContext,\n    storage?: StorageType\n  ) {\n    if (merge === mergeTrueFn) {\n      // Instead of going to the trouble of creating a full\n      // FieldFunctionOptions object and calling mergeTrueFn, we can\n      // simply call mergeObjects, as mergeTrueFn would.\n      return makeMergeObjectsFunction(context.store)(\n        existing as StoreObject,\n        incoming as StoreObject\n      );\n    }\n\n    if (merge === mergeFalseFn) {\n      // Likewise for mergeFalseFn, whose implementation is even simpler.\n      return incoming;\n    }\n\n    // If cache.writeQuery or cache.writeFragment was called with\n    // options.overwrite set to true, we still call merge functions, but\n    // the existing data is always undefined, so the merge function will\n    // not attempt to combine the incoming data with the existing data.\n    if (context.overwrite) {\n      existing = void 0;\n    }\n\n    return merge(\n      existing,\n      incoming,\n      makeFieldFunctionOptions(\n        this,\n        // Unlike options.readField for read functions, we do not fall\n        // back to the current object if no foreignObjOrRef is provided,\n        // because it's not clear what the current object should be for\n        // merge functions: the (possibly undefined) existing object, or\n        // the incoming object? If you think your merge function needs\n        // to read sibling fields in order to produce a new value for\n        // the current field, you might want to rethink your strategy,\n        // because that's a recipe for making merge behavior sensitive\n        // to the order in which fields are written into the cache.\n        // However, readField(name, ref) is useful for merge functions\n        // that need to deduplicate child objects and references.\n        void 0,\n        {\n          typename,\n          fieldName: field.name.value,\n          field,\n          variables: context.variables,\n        },\n        context,\n        storage || Object.create(null)\n      )\n    );\n  }\n}\n\nfunction makeFieldFunctionOptions(\n  policies: Policies,\n  objectOrReference: StoreObject | Reference | undefined,\n  fieldSpec: FieldSpecifier,\n  context: ReadMergeModifyContext,\n  storage: StorageType\n): FieldFunctionOptions {\n  const storeFieldName = policies.getStoreFieldName(fieldSpec);\n  const fieldName = fieldNameFromStoreName(storeFieldName);\n  const variables = fieldSpec.variables || context.variables;\n  const { toReference, canRead } = context.store;\n\n  return {\n    args: argsFromFieldSpecifier(fieldSpec),\n    field: fieldSpec.field || null,\n    fieldName,\n    storeFieldName,\n    variables,\n    isReference,\n    toReference,\n    storage,\n    cache: policies.cache,\n    canRead,\n    readField<T>() {\n      return policies.readField<T>(\n        normalizeReadFieldOptions(arguments, objectOrReference, variables),\n        context\n      );\n    },\n    mergeObjects: makeMergeObjectsFunction(context.store),\n  };\n}\n\nexport function normalizeReadFieldOptions(\n  readFieldArgs: IArguments,\n  objectOrReference: StoreObject | Reference | undefined,\n  variables?: ReadMergeModifyContext[\"variables\"]\n): ReadFieldOptions {\n  const { 0: fieldNameOrOptions, 1: from, length: argc } = readFieldArgs;\n\n  let options: ReadFieldOptions;\n\n  if (typeof fieldNameOrOptions === \"string\") {\n    options = {\n      fieldName: fieldNameOrOptions,\n      // Default to objectOrReference only when no second argument was\n      // passed for the from parameter, not when undefined is explicitly\n      // passed as the second argument.\n      from: argc > 1 ? from : objectOrReference,\n    };\n  } else {\n    options = { ...fieldNameOrOptions };\n    // Default to objectOrReference only when fieldNameOrOptions.from is\n    // actually omitted, rather than just undefined.\n    if (!hasOwn.call(options, \"from\")) {\n      options.from = objectOrReference;\n    }\n  }\n\n  if (__DEV__ && options.from === void 0) {\n    invariant.warn(\n      `Undefined 'from' passed to readField with arguments %s`,\n      stringifyForDisplay(Array.from(readFieldArgs))\n    );\n  }\n\n  if (void 0 === options.variables) {\n    options.variables = variables;\n  }\n\n  return options;\n}\n\nfunction makeMergeObjectsFunction(\n  store: NormalizedCache\n): MergeObjectsFunction {\n  return function mergeObjects(existing, incoming) {\n    if (isArray(existing) || isArray(incoming)) {\n      throw newInvariantError(\"Cannot automatically merge arrays\");\n    }\n\n    // These dynamic checks are necessary because the parameters of a\n    // custom merge function can easily have the any type, so the type\n    // system cannot always enforce the StoreObject | Reference parameter\n    // types of options.mergeObjects.\n    if (isNonNullObject(existing) && isNonNullObject(incoming)) {\n      const eType = store.getFieldValue(existing, \"__typename\");\n      const iType = store.getFieldValue(incoming, \"__typename\");\n      const typesDiffer = eType && iType && eType !== iType;\n\n      if (typesDiffer) {\n        return incoming;\n      }\n\n      if (isReference(existing) && storeValueIsStoreObject(incoming)) {\n        // Update the normalized EntityStore for the entity identified by\n        // existing.__ref, preferring/overwriting any fields contributed by the\n        // newer incoming StoreObject.\n        store.merge(existing.__ref, incoming);\n        return existing;\n      }\n\n      if (storeValueIsStoreObject(existing) && isReference(incoming)) {\n        // Update the normalized EntityStore for the entity identified by\n        // incoming.__ref, taking fields from the older existing object only if\n        // those fields are not already present in the newer StoreObject\n        // identified by incoming.__ref.\n        store.merge(existing, incoming.__ref);\n        return incoming;\n      }\n\n      if (\n        storeValueIsStoreObject(existing) &&\n        storeValueIsStoreObject(incoming)\n      ) {\n        return { ...existing, ...incoming };\n      }\n    }\n\n    return incoming;\n  };\n}\n","import { invariant, newInvariantError } from \"../../utilities/globals/index.js\";\nimport { equal } from \"@wry/equality\";\nimport { Trie } from \"@wry/trie\";\nimport type { SelectionSetNode, FieldNode } from \"graphql\";\nimport { Kind } from \"graphql\";\n\nimport type {\n  FragmentMap,\n  FragmentMapFunction,\n  StoreValue,\n  StoreObject,\n  Reference,\n} from \"../../utilities/index.js\";\nimport {\n  getFragmentFromSelection,\n  getDefaultValues,\n  getOperationDefinition,\n  getTypenameFromResult,\n  makeReference,\n  isField,\n  resultKeyNameFromField,\n  isReference,\n  shouldInclude,\n  cloneDeep,\n  addTypenameToDocument,\n  isNonEmptyArray,\n  argumentsObjectFromField,\n  canonicalStringify,\n} from \"../../utilities/index.js\";\n\nimport type {\n  NormalizedCache,\n  ReadMergeModifyContext,\n  MergeTree,\n  InMemoryCacheConfig,\n} from \"./types.js\";\nimport {\n  isArray,\n  makeProcessedFieldsMerger,\n  fieldNameFromStoreName,\n  storeValueIsStoreObject,\n  extractFragmentContext,\n} from \"./helpers.js\";\nimport type { StoreReader } from \"./readFromStore.js\";\nimport type { InMemoryCache } from \"./inMemoryCache.js\";\nimport type { EntityStore } from \"./entityStore.js\";\nimport type { Cache } from \"../../core/index.js\";\nimport { normalizeReadFieldOptions } from \"./policies.js\";\nimport type { ReadFieldFunction } from \"../core/types/common.js\";\n\nexport interface WriteContext extends ReadMergeModifyContext {\n  readonly written: {\n    [dataId: string]: SelectionSetNode[];\n  };\n  readonly fragmentMap: FragmentMap;\n  lookupFragment: FragmentMapFunction;\n  // General-purpose deep-merge function for use during writes.\n  merge<T>(existing: T, incoming: T): T;\n  // If true, merge functions will be called with undefined existing data.\n  overwrite: boolean;\n  incomingById: Map<\n    string,\n    {\n      storeObject: StoreObject;\n      mergeTree?: MergeTree;\n      fieldNodeSet: Set<FieldNode>;\n    }\n  >;\n  // Directive metadata for @client and @defer. We could use a bitfield for this\n  // information to save some space, and use that bitfield number as the keys in\n  // the context.flavors Map.\n  clientOnly: boolean;\n  deferred: boolean;\n  flavors: Map<string, FlavorableWriteContext>;\n}\n\ntype FlavorableWriteContext = Pick<\n  WriteContext,\n  \"clientOnly\" | \"deferred\" | \"flavors\"\n>;\n\n// Since there are only four possible combinations of context.clientOnly and\n// context.deferred values, we should need at most four \"flavors\" of any given\n// WriteContext. To avoid creating multiple copies of the same context, we cache\n// the contexts in the context.flavors Map (shared by all flavors) according to\n// their clientOnly and deferred values (always in that order).\nfunction getContextFlavor<TContext extends FlavorableWriteContext>(\n  context: TContext,\n  clientOnly: TContext[\"clientOnly\"],\n  deferred: TContext[\"deferred\"]\n): TContext {\n  const key = `${clientOnly}${deferred}`;\n  let flavored = context.flavors.get(key);\n  if (!flavored) {\n    context.flavors.set(\n      key,\n      (flavored =\n        context.clientOnly === clientOnly && context.deferred === deferred ?\n          context\n        : {\n            ...context,\n            clientOnly,\n            deferred,\n          })\n    );\n  }\n  return flavored as TContext;\n}\n\ninterface ProcessSelectionSetOptions {\n  dataId?: string;\n  result: Record<string, any>;\n  selectionSet: SelectionSetNode;\n  context: WriteContext;\n  mergeTree: MergeTree;\n}\n\nexport class StoreWriter {\n  constructor(\n    public readonly cache: InMemoryCache,\n    private reader?: StoreReader,\n    private fragments?: InMemoryCacheConfig[\"fragments\"]\n  ) {}\n\n  public writeToStore(\n    store: NormalizedCache,\n    { query, result, dataId, variables, overwrite }: Cache.WriteOptions\n  ): Reference | undefined {\n    const operationDefinition = getOperationDefinition(query)!;\n    const merger = makeProcessedFieldsMerger();\n\n    variables = {\n      ...getDefaultValues(operationDefinition),\n      ...variables!,\n    };\n\n    const context: WriteContext = {\n      store,\n      written: Object.create(null),\n      merge<T>(existing: T, incoming: T) {\n        return merger.merge(existing, incoming) as T;\n      },\n      variables,\n      varString: canonicalStringify(variables),\n      ...extractFragmentContext(query, this.fragments),\n      overwrite: !!overwrite,\n      incomingById: new Map(),\n      clientOnly: false,\n      deferred: false,\n      flavors: new Map(),\n    };\n\n    const ref = this.processSelectionSet({\n      result: result || Object.create(null),\n      dataId,\n      selectionSet: operationDefinition.selectionSet,\n      mergeTree: { map: new Map() },\n      context,\n    });\n\n    if (!isReference(ref)) {\n      throw newInvariantError(`Could not identify object %s`, result);\n    }\n\n    // So far, the store has not been modified, so now it's time to process\n    // context.incomingById and merge those incoming fields into context.store.\n    context.incomingById.forEach(\n      ({ storeObject, mergeTree, fieldNodeSet }, dataId) => {\n        const entityRef = makeReference(dataId);\n\n        if (mergeTree && mergeTree.map.size) {\n          const applied = this.applyMerges(\n            mergeTree,\n            entityRef,\n            storeObject,\n            context\n          );\n          if (isReference(applied)) {\n            // Assume References returned by applyMerges have already been merged\n            // into the store. See makeMergeObjectsFunction in policies.ts for an\n            // example of how this can happen.\n            return;\n          }\n          // Otherwise, applyMerges returned a StoreObject, whose fields we should\n          // merge into the store (see store.merge statement below).\n          storeObject = applied;\n        }\n\n        if (__DEV__ && !context.overwrite) {\n          const fieldsWithSelectionSets: Record<string, true> =\n            Object.create(null);\n          fieldNodeSet.forEach((field) => {\n            if (field.selectionSet) {\n              fieldsWithSelectionSets[field.name.value] = true;\n            }\n          });\n\n          const hasSelectionSet = (storeFieldName: string) =>\n            fieldsWithSelectionSets[fieldNameFromStoreName(storeFieldName)] ===\n            true;\n\n          const hasMergeFunction = (storeFieldName: string) => {\n            const childTree = mergeTree && mergeTree.map.get(storeFieldName);\n            return Boolean(childTree && childTree.info && childTree.info.merge);\n          };\n\n          Object.keys(storeObject).forEach((storeFieldName) => {\n            // If a merge function was defined for this field, trust that it\n            // did the right thing about (not) clobbering data. If the field\n            // has no selection set, it's a scalar field, so it doesn't need\n            // a merge function (even if it's an object, like JSON data).\n            if (\n              hasSelectionSet(storeFieldName) &&\n              !hasMergeFunction(storeFieldName)\n            ) {\n              warnAboutDataLoss(\n                entityRef,\n                storeObject,\n                storeFieldName,\n                context.store\n              );\n            }\n          });\n        }\n\n        store.merge(dataId, storeObject);\n      }\n    );\n\n    // Any IDs written explicitly to the cache will be retained as\n    // reachable root IDs for garbage collection purposes. Although this\n    // logic includes root IDs like ROOT_QUERY and ROOT_MUTATION, their\n    // retainment counts are effectively ignored because cache.gc() always\n    // includes them in its root ID set.\n    store.retain(ref.__ref);\n\n    return ref;\n  }\n\n  private processSelectionSet({\n    dataId,\n    result,\n    selectionSet,\n    context,\n    // This object allows processSelectionSet to report useful information\n    // to its callers without explicitly returning that information.\n    mergeTree,\n  }: ProcessSelectionSetOptions): StoreObject | Reference {\n    const { policies } = this.cache;\n\n    // This variable will be repeatedly updated using context.merge to\n    // accumulate all fields that need to be written into the store.\n    let incoming: StoreObject = Object.create(null);\n\n    // If typename was not passed in, infer it. Note that typename is\n    // always passed in for tricky-to-infer cases such as \"Query\" for\n    // ROOT_QUERY.\n    const typename: string | undefined =\n      (dataId && policies.rootTypenamesById[dataId]) ||\n      getTypenameFromResult(result, selectionSet, context.fragmentMap) ||\n      (dataId && (context.store.get(dataId, \"__typename\") as string));\n\n    if (\"string\" === typeof typename) {\n      incoming.__typename = typename;\n    }\n\n    // This readField function will be passed as context.readField in the\n    // KeyFieldsContext object created within policies.identify (called below).\n    // In addition to reading from the existing context.store (thanks to the\n    // policies.readField(options, context) line at the very bottom), this\n    // version of readField can read from Reference objects that are currently\n    // pending in context.incomingById, which is important whenever keyFields\n    // need to be extracted from a child object that processSelectionSet has\n    // turned into a Reference.\n    const readField: ReadFieldFunction = function (this: void) {\n      const options = normalizeReadFieldOptions(\n        arguments,\n        incoming,\n        context.variables\n      );\n\n      if (isReference(options.from)) {\n        const info = context.incomingById.get(options.from.__ref);\n        if (info) {\n          const result = policies.readField(\n            {\n              ...options,\n              from: info.storeObject,\n            },\n            context\n          );\n\n          if (result !== void 0) {\n            return result;\n          }\n        }\n      }\n\n      return policies.readField(options, context);\n    };\n\n    const fieldNodeSet = new Set<FieldNode>();\n\n    this.flattenFields(\n      selectionSet,\n      result,\n      // This WriteContext will be the default context value for fields returned\n      // by the flattenFields method, but some fields may be assigned a modified\n      // context, depending on the presence of @client and other directives.\n      context,\n      typename\n    ).forEach((context, field) => {\n      const resultFieldKey = resultKeyNameFromField(field);\n      const value = result[resultFieldKey];\n\n      fieldNodeSet.add(field);\n\n      if (value !== void 0) {\n        const storeFieldName = policies.getStoreFieldName({\n          typename,\n          fieldName: field.name.value,\n          field,\n          variables: context.variables,\n        });\n\n        const childTree = getChildMergeTree(mergeTree, storeFieldName);\n\n        let incomingValue = this.processFieldValue(\n          value,\n          field,\n          // Reset context.clientOnly and context.deferred to their default\n          // values before processing nested selection sets.\n          field.selectionSet ?\n            getContextFlavor(context, false, false)\n          : context,\n          childTree\n        );\n\n        // To determine if this field holds a child object with a merge function\n        // defined in its type policy (see PR #7070), we need to figure out the\n        // child object's __typename.\n        let childTypename: string | undefined;\n\n        // The field's value can be an object that has a __typename only if the\n        // field has a selection set. Otherwise incomingValue is scalar.\n        if (\n          field.selectionSet &&\n          (isReference(incomingValue) || storeValueIsStoreObject(incomingValue))\n        ) {\n          childTypename = readField<string>(\"__typename\", incomingValue);\n        }\n\n        const merge = policies.getMergeFunction(\n          typename,\n          field.name.value,\n          childTypename\n        );\n\n        if (merge) {\n          childTree.info = {\n            // TODO Check compatibility against any existing childTree.field?\n            field,\n            typename,\n            merge,\n          };\n        } else {\n          maybeRecycleChildMergeTree(mergeTree, storeFieldName);\n        }\n\n        incoming = context.merge(incoming, {\n          [storeFieldName]: incomingValue,\n        });\n      } else if (\n        __DEV__ &&\n        !context.clientOnly &&\n        !context.deferred &&\n        !addTypenameToDocument.added(field) &&\n        // If the field has a read function, it may be a synthetic field or\n        // provide a default value, so its absence from the written data should\n        // not be cause for alarm.\n        !policies.getReadFunction(typename, field.name.value)\n      ) {\n        invariant.error(\n          `Missing field '%s' while writing result %o`,\n          resultKeyNameFromField(field),\n          result\n        );\n      }\n    });\n\n    // Identify the result object, even if dataId was already provided,\n    // since we always need keyObject below.\n    try {\n      const [id, keyObject] = policies.identify(result, {\n        typename,\n        selectionSet,\n        fragmentMap: context.fragmentMap,\n        storeObject: incoming,\n        readField,\n      });\n\n      // If dataId was not provided, fall back to the id just generated by\n      // policies.identify.\n      dataId = dataId || id;\n\n      // Write any key fields that were used during identification, even if\n      // they were not mentioned in the original query.\n      if (keyObject) {\n        // TODO Reverse the order of the arguments?\n        incoming = context.merge(incoming, keyObject);\n      }\n    } catch (e) {\n      // If dataId was provided, tolerate failure of policies.identify.\n      if (!dataId) throw e;\n    }\n\n    if (\"string\" === typeof dataId) {\n      const dataRef = makeReference(dataId);\n\n      // Avoid processing the same entity object using the same selection\n      // set more than once. We use an array instead of a Set since most\n      // entity IDs will be written using only one selection set, so the\n      // size of this array is likely to be very small, meaning indexOf is\n      // likely to be faster than Set.prototype.has.\n      const sets = context.written[dataId] || (context.written[dataId] = []);\n      if (sets.indexOf(selectionSet) >= 0) return dataRef;\n      sets.push(selectionSet);\n\n      // If we're about to write a result object into the store, but we\n      // happen to know that the exact same (===) result object would be\n      // returned if we were to reread the result with the same inputs,\n      // then we can skip the rest of the processSelectionSet work for\n      // this object, and immediately return a Reference to it.\n      if (\n        this.reader &&\n        this.reader.isFresh(result, dataRef, selectionSet, context)\n      ) {\n        return dataRef;\n      }\n\n      const previous = context.incomingById.get(dataId);\n      if (previous) {\n        previous.storeObject = context.merge(previous.storeObject, incoming);\n        previous.mergeTree = mergeMergeTrees(previous.mergeTree, mergeTree);\n        fieldNodeSet.forEach((field) => previous.fieldNodeSet.add(field));\n      } else {\n        context.incomingById.set(dataId, {\n          storeObject: incoming,\n          // Save a reference to mergeTree only if it is not empty, because\n          // empty MergeTrees may be recycled by maybeRecycleChildMergeTree and\n          // reused for entirely different parts of the result tree.\n          mergeTree: mergeTreeIsEmpty(mergeTree) ? void 0 : mergeTree,\n          fieldNodeSet,\n        });\n      }\n\n      return dataRef;\n    }\n\n    return incoming;\n  }\n\n  private processFieldValue(\n    value: any,\n    field: FieldNode,\n    context: WriteContext,\n    mergeTree: MergeTree\n  ): StoreValue {\n    if (!field.selectionSet || value === null) {\n      // In development, we need to clone scalar values so that they can be\n      // safely frozen with maybeDeepFreeze in readFromStore.ts. In production,\n      // it's cheaper to store the scalar values directly in the cache.\n      return __DEV__ ? cloneDeep(value) : value;\n    }\n\n    if (isArray(value)) {\n      return value.map((item, i) => {\n        const value = this.processFieldValue(\n          item,\n          field,\n          context,\n          getChildMergeTree(mergeTree, i)\n        );\n        maybeRecycleChildMergeTree(mergeTree, i);\n        return value;\n      });\n    }\n\n    return this.processSelectionSet({\n      result: value,\n      selectionSet: field.selectionSet,\n      context,\n      mergeTree,\n    });\n  }\n\n  // Implements https://spec.graphql.org/draft/#sec-Field-Collection, but with\n  // some additions for tracking @client and @defer directives.\n  private flattenFields<\n    TContext extends Pick<\n      WriteContext,\n      | \"clientOnly\"\n      | \"deferred\"\n      | \"flavors\"\n      | \"fragmentMap\"\n      | \"lookupFragment\"\n      | \"variables\"\n    >,\n  >(\n    selectionSet: SelectionSetNode,\n    result: Record<string, any>,\n    context: TContext,\n    typename = getTypenameFromResult(result, selectionSet, context.fragmentMap)\n  ): Map<FieldNode, TContext> {\n    const fieldMap = new Map<FieldNode, TContext>();\n    const { policies } = this.cache;\n\n    const limitingTrie = new Trie<{\n      // Tracks whether (selectionSet, clientOnly, deferred) has been flattened\n      // before. The GraphQL specification only uses the fragment name for\n      // skipping previously visited fragments, but the top-level fragment\n      // selection set corresponds 1:1 with the fagment name (and is slightly\n      // easier too work with), and we need to consider clientOnly and deferred\n      // values as well, potentially revisiting selection sets that were\n      // previously visited with different inherited configurations of those\n      // directives.\n      visited?: boolean;\n    }>(false); // No need for WeakMap, since limitingTrie does not escape.\n\n    (function flatten(\n      this: void,\n      selectionSet: SelectionSetNode,\n      inheritedContext: TContext\n    ) {\n      const visitedNode = limitingTrie.lookup(\n        selectionSet,\n        // Because we take inheritedClientOnly and inheritedDeferred into\n        // consideration here (in addition to selectionSet), it's possible for\n        // the same selection set to be flattened more than once, if it appears\n        // in the query with different @client and/or @directive configurations.\n        inheritedContext.clientOnly,\n        inheritedContext.deferred\n      );\n      if (visitedNode.visited) return;\n      visitedNode.visited = true;\n\n      selectionSet.selections.forEach((selection) => {\n        if (!shouldInclude(selection, context.variables)) return;\n\n        let { clientOnly, deferred } = inheritedContext;\n        if (\n          // Since the presence of @client or @defer on this field can only\n          // cause clientOnly or deferred to become true, we can skip the\n          // forEach loop if both clientOnly and deferred are already true.\n          !(clientOnly && deferred) &&\n          isNonEmptyArray(selection.directives)\n        ) {\n          selection.directives.forEach((dir) => {\n            const name = dir.name.value;\n            if (name === \"client\") clientOnly = true;\n            if (name === \"defer\") {\n              const args = argumentsObjectFromField(dir, context.variables);\n              // The @defer directive takes an optional args.if boolean\n              // argument, similar to @include(if: boolean). Note that\n              // @defer(if: false) does not make context.deferred false, but\n              // instead behaves as if there was no @defer directive.\n              if (!args || (args as { if?: boolean }).if !== false) {\n                deferred = true;\n              }\n              // TODO In the future, we may want to record args.label using\n              // context.deferred, if a label is specified.\n            }\n          });\n        }\n\n        if (isField(selection)) {\n          const existing = fieldMap.get(selection);\n          if (existing) {\n            // If this field has been visited along another recursive path\n            // before, the final context should have clientOnly or deferred set\n            // to true only if *all* paths have the directive (hence the &&).\n            clientOnly = clientOnly && existing.clientOnly;\n            deferred = deferred && existing.deferred;\n          }\n\n          fieldMap.set(\n            selection,\n            getContextFlavor(context, clientOnly, deferred)\n          );\n        } else {\n          const fragment = getFragmentFromSelection(\n            selection,\n            context.lookupFragment\n          );\n\n          if (!fragment && selection.kind === Kind.FRAGMENT_SPREAD) {\n            throw newInvariantError(\n              `No fragment named %s`,\n              selection.name.value\n            );\n          }\n\n          if (\n            fragment &&\n            policies.fragmentMatches(\n              fragment,\n              typename,\n              result,\n              context.variables\n            )\n          ) {\n            flatten(\n              fragment.selectionSet,\n              getContextFlavor(context, clientOnly, deferred)\n            );\n          }\n        }\n      });\n    })(selectionSet, context);\n\n    return fieldMap;\n  }\n\n  private applyMerges<T extends StoreValue>(\n    mergeTree: MergeTree,\n    existing: StoreValue,\n    incoming: T,\n    context: WriteContext,\n    getStorageArgs?: Parameters<EntityStore[\"getStorage\"]>\n  ): T | Reference {\n    if (mergeTree.map.size && !isReference(incoming)) {\n      const e: StoreObject | Reference | undefined =\n        // Items in the same position in different arrays are not\n        // necessarily related to each other, so when incoming is an array\n        // we process its elements as if there was no existing data.\n        (\n          !isArray(incoming) &&\n          // Likewise, existing must be either a Reference or a StoreObject\n          // in order for its fields to be safe to merge with the fields of\n          // the incoming object.\n          (isReference(existing) || storeValueIsStoreObject(existing))\n        ) ?\n          existing\n        : void 0;\n\n      // This narrowing is implied by mergeTree.map.size > 0 and\n      // !isReference(incoming), though TypeScript understandably cannot\n      // hope to infer this type.\n      const i = incoming as StoreObject | StoreValue[];\n\n      // The options.storage objects provided to read and merge functions\n      // are derived from the identity of the parent object plus a\n      // sequence of storeFieldName strings/numbers identifying the nested\n      // field name path of each field value to be merged.\n      if (e && !getStorageArgs) {\n        getStorageArgs = [isReference(e) ? e.__ref : e];\n      }\n\n      // It's possible that applying merge functions to this subtree will\n      // not change the incoming data, so this variable tracks the fields\n      // that did change, so we can create a new incoming object when (and\n      // only when) at least one incoming field has changed. We use a Map\n      // to preserve the type of numeric keys.\n      let changedFields: Map<string | number, StoreValue> | undefined;\n\n      const getValue = (\n        from: typeof e | typeof i,\n        name: string | number\n      ): StoreValue => {\n        return (\n          isArray(from) ?\n            typeof name === \"number\" ?\n              from[name]\n            : void 0\n          : context.store.getFieldValue(from, String(name))\n        );\n      };\n\n      mergeTree.map.forEach((childTree, storeFieldName) => {\n        const eVal = getValue(e, storeFieldName);\n        const iVal = getValue(i, storeFieldName);\n        // If we have no incoming data, leave any existing data untouched.\n        if (void 0 === iVal) return;\n        if (getStorageArgs) {\n          getStorageArgs.push(storeFieldName);\n        }\n        const aVal = this.applyMerges(\n          childTree,\n          eVal,\n          iVal,\n          context,\n          getStorageArgs\n        );\n        if (aVal !== iVal) {\n          changedFields = changedFields || new Map();\n          changedFields.set(storeFieldName, aVal);\n        }\n        if (getStorageArgs) {\n          invariant(getStorageArgs.pop() === storeFieldName);\n        }\n      });\n\n      if (changedFields) {\n        // Shallow clone i so we can add changed fields to it.\n        incoming = (isArray(i) ? i.slice(0) : { ...i }) as T;\n        changedFields.forEach((value, name) => {\n          (incoming as any)[name] = value;\n        });\n      }\n    }\n\n    if (mergeTree.info) {\n      return this.cache.policies.runMergeFunction(\n        existing,\n        incoming,\n        mergeTree.info,\n        context,\n        getStorageArgs && context.store.getStorage(...getStorageArgs)\n      );\n    }\n\n    return incoming;\n  }\n}\n\nconst emptyMergeTreePool: MergeTree[] = [];\n\nfunction getChildMergeTree(\n  { map }: MergeTree,\n  name: string | number\n): MergeTree {\n  if (!map.has(name)) {\n    map.set(name, emptyMergeTreePool.pop() || { map: new Map() });\n  }\n  return map.get(name)!;\n}\n\nfunction mergeMergeTrees(\n  left: MergeTree | undefined,\n  right: MergeTree | undefined\n): MergeTree {\n  if (left === right || !right || mergeTreeIsEmpty(right)) return left!;\n  if (!left || mergeTreeIsEmpty(left)) return right;\n\n  const info =\n    left.info && right.info ?\n      {\n        ...left.info,\n        ...right.info,\n      }\n    : left.info || right.info;\n\n  const needToMergeMaps = left.map.size && right.map.size;\n  const map =\n    needToMergeMaps ? new Map()\n    : left.map.size ? left.map\n    : right.map;\n\n  const merged = { info, map };\n\n  if (needToMergeMaps) {\n    const remainingRightKeys = new Set(right.map.keys());\n\n    left.map.forEach((leftTree, key) => {\n      merged.map.set(key, mergeMergeTrees(leftTree, right.map.get(key)));\n      remainingRightKeys.delete(key);\n    });\n\n    remainingRightKeys.forEach((key) => {\n      merged.map.set(\n        key,\n        mergeMergeTrees(right.map.get(key), left.map.get(key))\n      );\n    });\n  }\n\n  return merged;\n}\n\nfunction mergeTreeIsEmpty(tree: MergeTree | undefined): boolean {\n  return !tree || !(tree.info || tree.map.size);\n}\n\nfunction maybeRecycleChildMergeTree({ map }: MergeTree, name: string | number) {\n  const childTree = map.get(name);\n  if (childTree && mergeTreeIsEmpty(childTree)) {\n    emptyMergeTreePool.push(childTree);\n    map.delete(name);\n  }\n}\n\nconst warnings = new Set<string>();\n\n// Note that this function is unused in production, and thus should be\n// pruned by any well-configured minifier.\nfunction warnAboutDataLoss(\n  existingRef: Reference,\n  incomingObj: StoreObject,\n  storeFieldName: string,\n  store: NormalizedCache\n) {\n  const getChild = (objOrRef: StoreObject | Reference): StoreObject | false => {\n    const child = store.getFieldValue<StoreObject>(objOrRef, storeFieldName);\n    return typeof child === \"object\" && child;\n  };\n\n  const existing = getChild(existingRef);\n  if (!existing) return;\n\n  const incoming = getChild(incomingObj);\n  if (!incoming) return;\n\n  // It's always safe to replace a reference, since it refers to data\n  // safely stored elsewhere.\n  if (isReference(existing)) return;\n\n  // If the values are structurally equivalent, we do not need to worry\n  // about incoming replacing existing.\n  if (equal(existing, incoming)) return;\n\n  // If we're replacing every key of the existing object, then the\n  // existing data would be overwritten even if the objects were\n  // normalized, so warning would not be helpful here.\n  if (\n    Object.keys(existing).every(\n      (key) => store.getFieldValue(incoming, key) !== void 0\n    )\n  ) {\n    return;\n  }\n\n  const parentType =\n    store.getFieldValue<string>(existingRef, \"__typename\") ||\n    store.getFieldValue<string>(incomingObj, \"__typename\");\n  const fieldName = fieldNameFromStoreName(storeFieldName);\n  const typeDotName = `${parentType}.${fieldName}`;\n  // Avoid warning more than once for the same type and field name.\n  if (warnings.has(typeDotName)) return;\n  warnings.add(typeDotName);\n\n  const childTypenames: string[] = [];\n  // Arrays do not have __typename fields, and always need a custom merge\n  // function, even if their elements are normalized entities.\n  if (!isArray(existing) && !isArray(incoming)) {\n    [existing, incoming].forEach((child) => {\n      const typename = store.getFieldValue(child, \"__typename\");\n      if (typeof typename === \"string\" && !childTypenames.includes(typename)) {\n        childTypenames.push(typename);\n      }\n    });\n  }\n\n  invariant.warn(\n    `Cache data may be lost when replacing the %s field of a %s object.\n\nThis could cause additional (usually avoidable) network requests to fetch data that were otherwise cached.\n\nTo address this problem (which is not a bug in Apollo Client), %sdefine a custom merge function for the %s field, so InMemoryCache can safely merge these objects:\n\n  existing: %o\n  incoming: %o\n\nFor more information about these options, please refer to the documentation:\n\n  * Ensuring entity objects have IDs: https://go.apollo.dev/c/generating-unique-identifiers\n  * Defining custom merge functions: https://go.apollo.dev/c/merging-non-normalized-objects\n`,\n    fieldName,\n    parentType,\n    childTypenames.length ?\n      \"either ensure all objects of type \" +\n        childTypenames.join(\" and \") +\n        \" have an ID or a custom merge function, or \"\n    : \"\",\n    typeDotName,\n    { ...existing },\n    { ...incoming }\n  );\n}\n","import { invariant } from \"../../utilities/globals/index.js\";\n\n// Make builtins like Map and Set safe to use with non-extensible objects.\nimport \"./fixPolyfills.js\";\n\nimport type { DocumentNode } from \"graphql\";\nimport type { OptimisticWrapperFunction } from \"optimism\";\nimport { wrap } from \"optimism\";\nimport { equal } from \"@wry/equality\";\n\nimport { ApolloCache } from \"../core/cache.js\";\nimport type { Cache } from \"../core/types/Cache.js\";\nimport { MissingFieldError } from \"../core/types/common.js\";\nimport type { StoreObject, Reference } from \"../../utilities/index.js\";\nimport {\n  addTypenameToDocument,\n  isReference,\n  DocumentTransform,\n  canonicalStringify,\n  print,\n  cacheSizes,\n  defaultCacheSizes,\n} from \"../../utilities/index.js\";\nimport type { InMemoryCacheConfig, NormalizedCacheObject } from \"./types.js\";\nimport { StoreReader } from \"./readFromStore.js\";\nimport { StoreWriter } from \"./writeToStore.js\";\nimport { EntityStore, supportsResultCaching } from \"./entityStore.js\";\nimport { makeVar, forgetCache, recallCache } from \"./reactiveVars.js\";\nimport { Policies } from \"./policies.js\";\nimport { hasOwn, normalizeConfig, shouldCanonizeResults } from \"./helpers.js\";\nimport type { OperationVariables } from \"../../core/index.js\";\nimport { getInMemoryCacheMemoryInternals } from \"../../utilities/caching/getMemoryInternals.js\";\n\ntype BroadcastOptions = Pick<\n  Cache.BatchOptions<InMemoryCache>,\n  \"optimistic\" | \"onWatchUpdated\"\n>;\n\nexport class InMemoryCache extends ApolloCache<NormalizedCacheObject> {\n  private data!: EntityStore;\n  private optimisticData!: EntityStore;\n\n  protected config: InMemoryCacheConfig;\n  private watches = new Set<Cache.WatchOptions>();\n  private addTypename: boolean;\n\n  private storeReader!: StoreReader;\n  private storeWriter!: StoreWriter;\n  private addTypenameTransform = new DocumentTransform(addTypenameToDocument);\n\n  private maybeBroadcastWatch!: OptimisticWrapperFunction<\n    [Cache.WatchOptions, BroadcastOptions?],\n    any,\n    [Cache.WatchOptions]\n  >;\n\n  // Override the default value, since InMemoryCache result objects are frozen\n  // in development and expected to remain logically immutable in production.\n  public readonly assumeImmutableResults = true;\n\n  // Dynamically imported code can augment existing typePolicies or\n  // possibleTypes by calling cache.policies.addTypePolicies or\n  // cache.policies.addPossibletypes.\n  public readonly policies: Policies;\n\n  public readonly makeVar = makeVar;\n\n  constructor(config: InMemoryCacheConfig = {}) {\n    super();\n    this.config = normalizeConfig(config);\n    this.addTypename = !!this.config.addTypename;\n\n    this.policies = new Policies({\n      cache: this,\n      dataIdFromObject: this.config.dataIdFromObject,\n      possibleTypes: this.config.possibleTypes,\n      typePolicies: this.config.typePolicies,\n    });\n\n    this.init();\n  }\n\n  private init() {\n    // Passing { resultCaching: false } in the InMemoryCache constructor options\n    // will completely disable dependency tracking, which will improve memory\n    // usage but worsen the performance of repeated reads.\n    const rootStore = (this.data = new EntityStore.Root({\n      policies: this.policies,\n      resultCaching: this.config.resultCaching,\n    }));\n\n    // When no optimistic writes are currently active, cache.optimisticData ===\n    // cache.data, so there are no additional layers on top of the actual data.\n    // When an optimistic update happens, this.optimisticData will become a\n    // linked list of EntityStore Layer objects that terminates with the\n    // original this.data cache object.\n    this.optimisticData = rootStore.stump;\n\n    this.resetResultCache();\n  }\n\n  private resetResultCache(resetResultIdentities?: boolean) {\n    const previousReader = this.storeReader;\n    const { fragments } = this.config;\n\n    // The StoreWriter is mostly stateless and so doesn't really need to be\n    // reset, but it does need to have its writer.storeReader reference updated,\n    // so it's simpler to update this.storeWriter as well.\n    this.storeWriter = new StoreWriter(\n      this,\n      (this.storeReader = new StoreReader({\n        cache: this,\n        addTypename: this.addTypename,\n        resultCacheMaxSize: this.config.resultCacheMaxSize,\n        canonizeResults: shouldCanonizeResults(this.config),\n        canon:\n          resetResultIdentities ? void 0 : (\n            previousReader && previousReader.canon\n          ),\n        fragments,\n      })),\n      fragments\n    );\n\n    this.maybeBroadcastWatch = wrap(\n      (c: Cache.WatchOptions, options?: BroadcastOptions) => {\n        return this.broadcastWatch(c, options);\n      },\n      {\n        max:\n          this.config.resultCacheMaxSize ||\n          cacheSizes[\"inMemoryCache.maybeBroadcastWatch\"] ||\n          defaultCacheSizes[\"inMemoryCache.maybeBroadcastWatch\"],\n        makeCacheKey: (c: Cache.WatchOptions) => {\n          // Return a cache key (thus enabling result caching) only if we're\n          // currently using a data store that can track cache dependencies.\n          const store = c.optimistic ? this.optimisticData : this.data;\n          if (supportsResultCaching(store)) {\n            const { optimistic, id, variables } = c;\n            return store.makeCacheKey(\n              c.query,\n              // Different watches can have the same query, optimistic\n              // status, rootId, and variables, but if their callbacks are\n              // different, the (identical) result needs to be delivered to\n              // each distinct callback. The easiest way to achieve that\n              // separation is to include c.callback in the cache key for\n              // maybeBroadcastWatch calls. See issue #5733.\n              c.callback,\n              canonicalStringify({ optimistic, id, variables })\n            );\n          }\n        },\n      }\n    );\n\n    // Since we have thrown away all the cached functions that depend on the\n    // CacheGroup dependencies maintained by EntityStore, we should also reset\n    // all CacheGroup dependency information.\n    new Set([this.data.group, this.optimisticData.group]).forEach((group) =>\n      group.resetCaching()\n    );\n  }\n\n  public restore(data: NormalizedCacheObject): this {\n    this.init();\n    // Since calling this.init() discards/replaces the entire StoreReader, along\n    // with the result caches it maintains, this.data.replace(data) won't have\n    // to bother deleting the old data.\n    if (data) this.data.replace(data);\n    return this;\n  }\n\n  public extract(optimistic: boolean = false): NormalizedCacheObject {\n    return (optimistic ? this.optimisticData : this.data).extract();\n  }\n\n  public read<T>(options: Cache.ReadOptions): T | null {\n    const {\n      // Since read returns data or null, without any additional metadata\n      // about whether/where there might have been missing fields, the\n      // default behavior cannot be returnPartialData = true (like it is\n      // for the diff method), since defaulting to true would violate the\n      // integrity of the T in the return type. However, partial data may\n      // be useful in some cases, so returnPartialData:true may be\n      // specified explicitly.\n      returnPartialData = false,\n    } = options;\n    try {\n      return (\n        this.storeReader.diffQueryAgainstStore<T>({\n          ...options,\n          store: options.optimistic ? this.optimisticData : this.data,\n          config: this.config,\n          returnPartialData,\n        }).result || null\n      );\n    } catch (e) {\n      if (e instanceof MissingFieldError) {\n        // Swallow MissingFieldError and return null, so callers do not need to\n        // worry about catching \"normal\" exceptions resulting from incomplete\n        // cache data. Unexpected errors will be re-thrown. If you need more\n        // information about which fields were missing, use cache.diff instead,\n        // and examine diffResult.missing.\n        return null;\n      }\n      throw e;\n    }\n  }\n\n  public write(options: Cache.WriteOptions): Reference | undefined {\n    try {\n      ++this.txCount;\n      return this.storeWriter.writeToStore(this.data, options);\n    } finally {\n      if (!--this.txCount && options.broadcast !== false) {\n        this.broadcastWatches();\n      }\n    }\n  }\n\n  public modify<Entity extends Record<string, any> = Record<string, any>>(\n    options: Cache.ModifyOptions<Entity>\n  ): boolean {\n    if (hasOwn.call(options, \"id\") && !options.id) {\n      // To my knowledge, TypeScript does not currently provide a way to\n      // enforce that an optional property?:type must *not* be undefined\n      // when present. That ability would be useful here, because we want\n      // options.id to default to ROOT_QUERY only when no options.id was\n      // provided. If the caller attempts to pass options.id with a\n      // falsy/undefined value (perhaps because cache.identify failed), we\n      // should not assume the goal was to modify the ROOT_QUERY object.\n      // We could throw, but it seems natural to return false to indicate\n      // that nothing was modified.\n      return false;\n    }\n    const store =\n      (\n        options.optimistic // Defaults to false.\n      ) ?\n        this.optimisticData\n      : this.data;\n    try {\n      ++this.txCount;\n      return store.modify(options.id || \"ROOT_QUERY\", options.fields);\n    } finally {\n      if (!--this.txCount && options.broadcast !== false) {\n        this.broadcastWatches();\n      }\n    }\n  }\n\n  public diff<TData, TVariables extends OperationVariables = any>(\n    options: Cache.DiffOptions<TData, TVariables>\n  ): Cache.DiffResult<TData> {\n    return this.storeReader.diffQueryAgainstStore({\n      ...options,\n      store: options.optimistic ? this.optimisticData : this.data,\n      rootId: options.id || \"ROOT_QUERY\",\n      config: this.config,\n    });\n  }\n\n  public watch<TData = any, TVariables = any>(\n    watch: Cache.WatchOptions<TData, TVariables>\n  ): () => void {\n    if (!this.watches.size) {\n      // In case we previously called forgetCache(this) because\n      // this.watches became empty (see below), reattach this cache to any\n      // reactive variables on which it previously depended. It might seem\n      // paradoxical that we're able to recall something we supposedly\n      // forgot, but the point of calling forgetCache(this) is to silence\n      // useless broadcasts while this.watches is empty, and to allow the\n      // cache to be garbage collected. If, however, we manage to call\n      // recallCache(this) here, this cache object must not have been\n      // garbage collected yet, and should resume receiving updates from\n      // reactive variables, now that it has a watcher to notify.\n      recallCache(this);\n    }\n    this.watches.add(watch);\n    if (watch.immediate) {\n      this.maybeBroadcastWatch(watch);\n    }\n    return () => {\n      // Once we remove the last watch from this.watches, cache.broadcastWatches\n      // no longer does anything, so we preemptively tell the reactive variable\n      // system to exclude this cache from future broadcasts.\n      if (this.watches.delete(watch) && !this.watches.size) {\n        forgetCache(this);\n      }\n      // Remove this watch from the LRU cache managed by the\n      // maybeBroadcastWatch OptimisticWrapperFunction, to prevent memory\n      // leaks involving the closure of watch.callback.\n      this.maybeBroadcastWatch.forget(watch);\n    };\n  }\n\n  public gc(options?: {\n    // If true, also free non-essential result cache memory by bulk-releasing\n    // this.{store{Reader,Writer},maybeBroadcastWatch}. Defaults to false.\n    resetResultCache?: boolean;\n    // If resetResultCache is true, this.storeReader.canon will be preserved by\n    // default, but can also be discarded by passing resetResultIdentities:true.\n    // Defaults to false.\n    resetResultIdentities?: boolean;\n  }) {\n    canonicalStringify.reset();\n    print.reset();\n    this.addTypenameTransform.resetCache();\n    this.config.fragments?.resetCaches();\n    const ids = this.optimisticData.gc();\n    if (options && !this.txCount) {\n      if (options.resetResultCache) {\n        this.resetResultCache(options.resetResultIdentities);\n      } else if (options.resetResultIdentities) {\n        this.storeReader.resetCanon();\n      }\n    }\n    return ids;\n  }\n\n  // Call this method to ensure the given root ID remains in the cache after\n  // garbage collection, along with its transitive child entities. Note that\n  // the cache automatically retains all directly written entities. By default,\n  // the retainment persists after optimistic updates are removed. Pass true\n  // for the optimistic argument if you would prefer for the retainment to be\n  // discarded when the top-most optimistic layer is removed. Returns the\n  // resulting (non-negative) retainment count.\n  public retain(rootId: string, optimistic?: boolean): number {\n    return (optimistic ? this.optimisticData : this.data).retain(rootId);\n  }\n\n  // Call this method to undo the effect of the retain method, above. Once the\n  // retainment count falls to zero, the given ID will no longer be preserved\n  // during garbage collection, though it may still be preserved by other safe\n  // entities that refer to it. Returns the resulting (non-negative) retainment\n  // count, in case that's useful.\n  public release(rootId: string, optimistic?: boolean): number {\n    return (optimistic ? this.optimisticData : this.data).release(rootId);\n  }\n\n  // Returns the canonical ID for a given StoreObject, obeying typePolicies\n  // and keyFields (and dataIdFromObject, if you still use that). At minimum,\n  // the object must contain a __typename and any primary key fields required\n  // to identify entities of that type. If you pass a query result object, be\n  // sure that none of the primary key fields have been renamed by aliasing.\n  // If you pass a Reference object, its __ref ID string will be returned.\n  public identify(object: StoreObject | Reference): string | undefined {\n    if (isReference(object)) return object.__ref;\n    try {\n      return this.policies.identify(object)[0];\n    } catch (e) {\n      invariant.warn(e);\n    }\n  }\n\n  public evict(options: Cache.EvictOptions): boolean {\n    if (!options.id) {\n      if (hasOwn.call(options, \"id\")) {\n        // See comment in modify method about why we return false when\n        // options.id exists but is falsy/undefined.\n        return false;\n      }\n      options = { ...options, id: \"ROOT_QUERY\" };\n    }\n    try {\n      // It's unlikely that the eviction will end up invoking any other\n      // cache update operations while it's running, but {in,de}crementing\n      // this.txCount still seems like a good idea, for uniformity with\n      // the other update methods.\n      ++this.txCount;\n      // Pass this.data as a limit on the depth of the eviction, so evictions\n      // during optimistic updates (when this.data is temporarily set equal to\n      // this.optimisticData) do not escape their optimistic Layer.\n      return this.optimisticData.evict(options, this.data);\n    } finally {\n      if (!--this.txCount && options.broadcast !== false) {\n        this.broadcastWatches();\n      }\n    }\n  }\n\n  public reset(options?: Cache.ResetOptions): Promise<void> {\n    this.init();\n\n    canonicalStringify.reset();\n\n    if (options && options.discardWatches) {\n      // Similar to what happens in the unsubscribe function returned by\n      // cache.watch, applied to all current watches.\n      this.watches.forEach((watch) => this.maybeBroadcastWatch.forget(watch));\n      this.watches.clear();\n      forgetCache(this);\n    } else {\n      // Calling this.init() above unblocks all maybeBroadcastWatch caching, so\n      // this.broadcastWatches() triggers a broadcast to every current watcher\n      // (letting them know their data is now missing). This default behavior is\n      // convenient because it means the watches do not have to be manually\n      // reestablished after resetting the cache. To prevent this broadcast and\n      // cancel all watches, pass true for options.discardWatches.\n      this.broadcastWatches();\n    }\n\n    return Promise.resolve();\n  }\n\n  public removeOptimistic(idToRemove: string) {\n    const newOptimisticData = this.optimisticData.removeLayer(idToRemove);\n    if (newOptimisticData !== this.optimisticData) {\n      this.optimisticData = newOptimisticData;\n      this.broadcastWatches();\n    }\n  }\n\n  private txCount = 0;\n\n  public batch<TUpdateResult>(\n    options: Cache.BatchOptions<InMemoryCache, TUpdateResult>\n  ): TUpdateResult {\n    const {\n      update,\n      optimistic = true,\n      removeOptimistic,\n      onWatchUpdated,\n    } = options;\n\n    let updateResult: TUpdateResult;\n    const perform = (layer?: EntityStore): TUpdateResult => {\n      const { data, optimisticData } = this;\n      ++this.txCount;\n      if (layer) {\n        this.data = this.optimisticData = layer;\n      }\n      try {\n        return (updateResult = update(this));\n      } finally {\n        --this.txCount;\n        this.data = data;\n        this.optimisticData = optimisticData;\n      }\n    };\n\n    const alreadyDirty = new Set<Cache.WatchOptions>();\n\n    if (onWatchUpdated && !this.txCount) {\n      // If an options.onWatchUpdated callback is provided, we want to call it\n      // with only the Cache.WatchOptions objects affected by options.update,\n      // but there might be dirty watchers already waiting to be broadcast that\n      // have nothing to do with the update. To prevent including those watchers\n      // in the post-update broadcast, we perform this initial broadcast to\n      // collect the dirty watchers, so we can re-dirty them later, after the\n      // post-update broadcast, allowing them to receive their pending\n      // broadcasts the next time broadcastWatches is called, just as they would\n      // if we never called cache.batch.\n      this.broadcastWatches({\n        ...options,\n        onWatchUpdated(watch) {\n          alreadyDirty.add(watch);\n          return false;\n        },\n      });\n    }\n\n    if (typeof optimistic === \"string\") {\n      // Note that there can be multiple layers with the same optimistic ID.\n      // When removeOptimistic(id) is called for that id, all matching layers\n      // will be removed, and the remaining layers will be reapplied.\n      this.optimisticData = this.optimisticData.addLayer(optimistic, perform);\n    } else if (optimistic === false) {\n      // Ensure both this.data and this.optimisticData refer to the root\n      // (non-optimistic) layer of the cache during the update. Note that\n      // this.data could be a Layer if we are currently executing an optimistic\n      // update function, but otherwise will always be an EntityStore.Root\n      // instance.\n      perform(this.data);\n    } else {\n      // Otherwise, leave this.data and this.optimisticData unchanged and run\n      // the update with broadcast batching.\n      perform();\n    }\n\n    if (typeof removeOptimistic === \"string\") {\n      this.optimisticData = this.optimisticData.removeLayer(removeOptimistic);\n    }\n\n    // Note: if this.txCount > 0, then alreadyDirty.size === 0, so this code\n    // takes the else branch and calls this.broadcastWatches(options), which\n    // does nothing when this.txCount > 0.\n    if (onWatchUpdated && alreadyDirty.size) {\n      this.broadcastWatches({\n        ...options,\n        onWatchUpdated(watch, diff) {\n          const result = onWatchUpdated.call(this, watch, diff);\n          if (result !== false) {\n            // Since onWatchUpdated did not return false, this diff is\n            // about to be broadcast to watch.callback, so we don't need\n            // to re-dirty it with the other alreadyDirty watches below.\n            alreadyDirty.delete(watch);\n          }\n          return result;\n        },\n      });\n      // Silently re-dirty any watches that were already dirty before the update\n      // was performed, and were not broadcast just now.\n      if (alreadyDirty.size) {\n        alreadyDirty.forEach((watch) => this.maybeBroadcastWatch.dirty(watch));\n      }\n    } else {\n      // If alreadyDirty is empty or we don't have an onWatchUpdated\n      // function, we don't need to go to the trouble of wrapping\n      // options.onWatchUpdated.\n      this.broadcastWatches(options);\n    }\n\n    return updateResult!;\n  }\n\n  public performTransaction(\n    update: (cache: InMemoryCache) => any,\n    optimisticId?: string | null\n  ) {\n    return this.batch({\n      update,\n      optimistic: optimisticId || optimisticId !== null,\n    });\n  }\n\n  public transformDocument(document: DocumentNode): DocumentNode {\n    return this.addTypenameToDocument(this.addFragmentsToDocument(document));\n  }\n\n  protected broadcastWatches(options?: BroadcastOptions) {\n    if (!this.txCount) {\n      this.watches.forEach((c) => this.maybeBroadcastWatch(c, options));\n    }\n  }\n\n  private addFragmentsToDocument(document: DocumentNode) {\n    const { fragments } = this.config;\n    return fragments ? fragments.transform(document) : document;\n  }\n\n  private addTypenameToDocument(document: DocumentNode) {\n    if (this.addTypename) {\n      return this.addTypenameTransform.transformDocument(document);\n    }\n    return document;\n  }\n\n  // This method is wrapped by maybeBroadcastWatch, which is called by\n  // broadcastWatches, so that we compute and broadcast results only when\n  // the data that would be broadcast might have changed. It would be\n  // simpler to check for changes after recomputing a result but before\n  // broadcasting it, but this wrapping approach allows us to skip both\n  // the recomputation and the broadcast, in most cases.\n  private broadcastWatch(c: Cache.WatchOptions, options?: BroadcastOptions) {\n    const { lastDiff } = c;\n\n    // Both WatchOptions and DiffOptions extend ReadOptions, and DiffOptions\n    // currently requires no additional properties, so we can use c (a\n    // WatchOptions object) as DiffOptions, without having to allocate a new\n    // object, and without having to enumerate the relevant properties (query,\n    // variables, etc.) explicitly. There will be some additional properties\n    // (lastDiff, callback, etc.), but cache.diff ignores them.\n    const diff = this.diff<any>(c);\n\n    if (options) {\n      if (c.optimistic && typeof options.optimistic === \"string\") {\n        diff.fromOptimisticTransaction = true;\n      }\n\n      if (\n        options.onWatchUpdated &&\n        options.onWatchUpdated.call(this, c, diff, lastDiff) === false\n      ) {\n        // Returning false from the onWatchUpdated callback will prevent\n        // calling c.callback(diff) for this watcher.\n        return;\n      }\n    }\n\n    if (!lastDiff || !equal(lastDiff.result, diff.result)) {\n      c.callback((c.lastDiff = diff), lastDiff);\n    }\n  }\n\n  /**\n   * @experimental\n   * @internal\n   * This is not a stable API - it is used in development builds to expose\n   * information to the DevTools.\n   * Use at your own risk!\n   */\n  public getMemoryInternals?: typeof getInMemoryCacheMemoryInternals;\n}\n\nif (__DEV__) {\n  InMemoryCache.prototype.getMemoryInternals = getInMemoryCacheMemoryInternals;\n}\n","import { ApolloClient, InMemoryCache, HttpLink } from '@apollo/client';\n\nconst client = new ApolloClient({\n  link: new HttpLink({\n    uri: 'https://countries.trevorblades.com/', // GraphQL API endpoint\n  }),\n  cache: new InMemoryCache(),\n});\n\nexport default client;","import { invariant } from \"../../utilities/globals/index.js\";\nimport * as React from \"rehackt\";\n\nimport { canUseLayoutEffect } from \"../../utilities/index.js\";\n\nlet didWarnUncachedGetSnapshot = false;\n\ntype RealUseSESHookType =\n  // This import depends only on the @types/use-sync-external-store package, not\n  // the actual use-sync-external-store package, which is not installed. It\n  // might be nice to get this type from React 18, but it still needs to work\n  // when only React 17 or earlier is installed.\n  typeof import(\"use-sync-external-store\").useSyncExternalStore;\n\n// Prevent webpack from complaining about our feature detection of the\n// useSyncExternalStore property of the React namespace, which is expected not\n// to exist when using React 17 and earlier, and that's fine.\nconst uSESKey = \"useSyncExternalStore\" as keyof typeof React;\nconst realHook = React[uSESKey] as RealUseSESHookType | undefined;\n\n// Adapted from https://www.npmjs.com/package/use-sync-external-store, with\n// Apollo Client deviations called out by \"// DEVIATION ...\" comments.\n\n// When/if React.useSyncExternalStore is defined, delegate fully to it.\nexport const useSyncExternalStore: RealUseSESHookType =\n  realHook ||\n  ((subscribe, getSnapshot, getServerSnapshot) => {\n    // Read the current snapshot from the store on every render. Again, this\n    // breaks the rules of React, and only works here because of specific\n    // implementation details, most importantly that updates are\n    // always synchronous.\n    const value = getSnapshot();\n    if (\n      // DEVIATION: Using __DEV__\n      __DEV__ &&\n      !didWarnUncachedGetSnapshot &&\n      // DEVIATION: Not using Object.is because we know our snapshots will never\n      // be exotic primitive values like NaN, which is !== itself.\n      value !== getSnapshot()\n    ) {\n      didWarnUncachedGetSnapshot = true;\n      // DEVIATION: Using invariant.error instead of console.error directly.\n      invariant.error(\n        \"The result of getSnapshot should be cached to avoid an infinite loop\"\n      );\n    }\n\n    // Because updates are synchronous, we don't queue them. Instead we force a\n    // re-render whenever the subscribed state changes by updating an some\n    // arbitrary useState hook. Then, during render, we call getSnapshot to read\n    // the current value.\n    //\n    // Because we don't actually use the state returned by the useState hook, we\n    // can save a bit of memory by storing other stuff in that slot.\n    //\n    // To implement the early bailout, we need to track some things on a mutable\n    // object. Usually, we would put that in a useRef hook, but we can stash it in\n    // our useState hook instead.\n    //\n    // To force a re-render, we call forceUpdate({inst}). That works because the\n    // new object always fails an equality check.\n    const [{ inst }, forceUpdate] = React.useState({\n      inst: { value, getSnapshot },\n    });\n\n    // Track the latest getSnapshot function with a ref. This needs to be updated\n    // in the layout phase so we can access it during the tearing check that\n    // happens on subscribe.\n    if (canUseLayoutEffect) {\n      // DEVIATION: We avoid calling useLayoutEffect when !canUseLayoutEffect,\n      // which may seem like a conditional hook, but this code ends up behaving\n      // unconditionally (one way or the other) because canUseLayoutEffect is\n      // constant.\n      React.useLayoutEffect(() => {\n        Object.assign(inst, { value, getSnapshot });\n        // Whenever getSnapshot or subscribe changes, we need to check in the\n        // commit phase if there was an interleaved mutation. In concurrent mode\n        // this can happen all the time, but even in synchronous mode, an earlier\n        // effect may have mutated the store.\n        if (checkIfSnapshotChanged(inst)) {\n          // Force a re-render.\n          forceUpdate({ inst });\n        }\n        // React Hook React.useLayoutEffect has a missing dependency: 'inst'. Either include it or remove the dependency array.\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n      }, [subscribe, value, getSnapshot]);\n    } else {\n      Object.assign(inst, { value, getSnapshot });\n    }\n\n    React.useEffect(() => {\n      // Check for changes right before subscribing. Subsequent changes will be\n      // detected in the subscription handler.\n      if (checkIfSnapshotChanged(inst)) {\n        // Force a re-render.\n        forceUpdate({ inst });\n      }\n\n      // Subscribe to the store and return a clean-up function.\n      return subscribe(function handleStoreChange() {\n        // TODO: Because there is no cross-renderer API for batching updates, it's\n        // up to the consumer of this library to wrap their subscription event\n        // with unstable_batchedUpdates. Should we try to detect when this isn't\n        // the case and print a warning in development?\n\n        // The store changed. Check if the snapshot changed since the last time we\n        // read from the store.\n        if (checkIfSnapshotChanged(inst)) {\n          // Force a re-render.\n          forceUpdate({ inst });\n        }\n      });\n      // React Hook React.useEffect has a missing dependency: 'inst'. Either include it or remove the dependency array.\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [subscribe]);\n\n    return value;\n  });\n\nfunction checkIfSnapshotChanged<Snapshot>({\n  value,\n  getSnapshot,\n}: {\n  value: Snapshot;\n  getSnapshot: () => Snapshot;\n}): boolean {\n  try {\n    return value !== getSnapshot();\n  } catch {\n    return true;\n  }\n}\n","import { invariant } from \"../../utilities/globals/index.js\";\n\nimport type {\n  DocumentNode,\n  DefinitionNode,\n  VariableDefinitionNode,\n  OperationDefinitionNode,\n} from \"graphql\";\nimport {\n  AutoCleanedWeakCache,\n  cacheSizes,\n  defaultCacheSizes,\n} from \"../../utilities/index.js\";\nimport { registerGlobalCache } from \"../../utilities/caching/getMemoryInternals.js\";\n\nexport enum DocumentType {\n  Query,\n  Mutation,\n  Subscription,\n}\n\nexport interface IDocumentDefinition {\n  type: DocumentType;\n  name: string;\n  variables: ReadonlyArray<VariableDefinitionNode>;\n}\n\nlet cache:\n  | undefined\n  | AutoCleanedWeakCache<\n      DocumentNode,\n      {\n        name: string;\n        type: DocumentType;\n        variables: readonly VariableDefinitionNode[];\n      }\n    >;\n\nexport function operationName(type: DocumentType) {\n  let name;\n  switch (type) {\n    case DocumentType.Query:\n      name = \"Query\";\n      break;\n    case DocumentType.Mutation:\n      name = \"Mutation\";\n      break;\n    case DocumentType.Subscription:\n      name = \"Subscription\";\n      break;\n  }\n  return name;\n}\n\n// This parser is mostly used to safety check incoming documents.\nexport function parser(document: DocumentNode): IDocumentDefinition {\n  if (!cache) {\n    cache = new AutoCleanedWeakCache(\n      cacheSizes.parser || defaultCacheSizes.parser\n    );\n  }\n  const cached = cache.get(document);\n  if (cached) return cached;\n\n  let variables, type, name;\n\n  invariant(\n    !!document && !!document.kind,\n    `Argument of %s passed to parser was not a valid GraphQL ` +\n      `DocumentNode. You may need to use 'graphql-tag' or another method ` +\n      `to convert your operation into a document`,\n    document\n  );\n\n  const fragments: DefinitionNode[] = [];\n  const queries: DefinitionNode[] = [];\n  const mutations: DefinitionNode[] = [];\n  const subscriptions: DefinitionNode[] = [];\n\n  for (const x of document.definitions) {\n    if (x.kind === \"FragmentDefinition\") {\n      fragments.push(x);\n      continue;\n    }\n\n    if (x.kind === \"OperationDefinition\") {\n      switch (x.operation) {\n        case \"query\":\n          queries.push(x);\n          break;\n        case \"mutation\":\n          mutations.push(x);\n          break;\n        case \"subscription\":\n          subscriptions.push(x);\n          break;\n      }\n    }\n  }\n\n  invariant(\n    !fragments.length ||\n      queries.length ||\n      mutations.length ||\n      subscriptions.length,\n    `Passing only a fragment to 'graphql' is not yet supported. ` +\n      `You must include a query, subscription or mutation as well`\n  );\n\n  invariant(\n    queries.length + mutations.length + subscriptions.length <= 1,\n    `react-apollo only supports a query, subscription, or a mutation per HOC. ` +\n      `%s had %s queries, %s ` +\n      `subscriptions and %s mutations. ` +\n      `You can use 'compose' to join multiple operation types to a component`,\n    document,\n    queries.length,\n    subscriptions.length,\n    mutations.length\n  );\n\n  type = queries.length ? DocumentType.Query : DocumentType.Mutation;\n  if (!queries.length && !mutations.length) type = DocumentType.Subscription;\n\n  const definitions =\n    queries.length ? queries\n    : mutations.length ? mutations\n    : subscriptions;\n\n  invariant(\n    definitions.length === 1,\n    `react-apollo only supports one definition per HOC. %s had ` +\n      `%s definitions. ` +\n      `You can use 'compose' to join multiple operation types to a component`,\n    document,\n    definitions.length\n  );\n\n  const definition = definitions[0] as OperationDefinitionNode;\n  variables = definition.variableDefinitions || [];\n\n  if (definition.name && definition.name.kind === \"Name\") {\n    name = definition.name.value;\n  } else {\n    name = \"data\"; // fallback to using data if no name\n  }\n\n  const payload = { name, type, variables };\n  cache.set(document, payload);\n  return payload;\n}\n\nparser.resetCache = () => {\n  cache = undefined;\n};\n\nif (__DEV__) {\n  registerGlobalCache(\"parser\", () => (cache ? cache.size : 0));\n}\n\nexport function verifyDocumentType(document: DocumentNode, type: DocumentType) {\n  const operation = parser(document);\n  const requiredOperationName = operationName(type);\n  const usedOperationName = operationName(operation.type);\n  invariant(\n    operation.type === type,\n    `Running a %s requires a graphql ` + `%s, but a %s was used instead.`,\n    requiredOperationName,\n    requiredOperationName,\n    usedOperationName\n  );\n}\n","import { invariant } from \"../../utilities/globals/index.js\";\nimport * as React from \"rehackt\";\nimport type { ApolloClient } from \"../../core/index.js\";\nimport { getApolloContext } from \"../context/index.js\";\n\n/**\n * @example\n * ```jsx\n * import { useApolloClient } from '@apollo/client';\n *\n * function SomeComponent() {\n *   const client = useApolloClient();\n *   // `client` is now set to the `ApolloClient` instance being used by the\n *   // application (that was configured using something like `ApolloProvider`)\n * }\n * ```\n *\n * @since 3.0.0\n * @returns The `ApolloClient` instance being used by the application.\n */\nexport function useApolloClient(\n  override?: ApolloClient<object>\n): ApolloClient<object> {\n  const context = React.useContext(getApolloContext());\n  const client = override || context.client;\n  invariant(\n    !!client,\n    'Could not find \"client\" in the context or passed in as an option. ' +\n      \"Wrap the root component in an <ApolloProvider>, or pass an ApolloClient \" +\n      \"instance in via options.\"\n  );\n\n  return client;\n}\n","import type {\n  useQuery,\n  useSuspenseQuery,\n  useBackgroundQuery,\n  useReadQuery,\n  useFragment,\n  useQueryRefHandlers,\n} from \"../index.js\";\nimport type { QueryManager } from \"../../../core/QueryManager.js\";\nimport type { ApolloClient } from \"../../../core/ApolloClient.js\";\nimport type { ObservableQuery } from \"../../../core/ObservableQuery.js\";\n\nconst wrapperSymbol = Symbol.for(\"apollo.hook.wrappers\");\n\ninterface WrappableHooks {\n  useQuery: typeof useQuery;\n  useSuspenseQuery: typeof useSuspenseQuery;\n  useBackgroundQuery: typeof useBackgroundQuery;\n  useReadQuery: typeof useReadQuery;\n  useFragment: typeof useFragment;\n  useQueryRefHandlers: typeof useQueryRefHandlers;\n}\n\n/**\n * @internal\n * Can be used to correctly type the [Symbol.for(\"apollo.hook.wrappers\")] property of\n * `QueryManager`, to override/wrap hook functionality.\n */\nexport type HookWrappers = {\n  [K in keyof WrappableHooks]?: (\n    originalHook: WrappableHooks[K]\n  ) => WrappableHooks[K];\n};\n\ninterface QueryManagerWithWrappers<T> extends QueryManager<T> {\n  [wrapperSymbol]?: HookWrappers;\n}\n\n/**\n * @internal\n *\n * Makes an Apollo Client hook \"wrappable\".\n * That means that the Apollo Client instance can expose a \"wrapper\" that will be\n * used to wrap the original hook implementation with additional logic.\n * @example\n * ```tsx\n * // this is already done in `@apollo/client` for all wrappable hooks (see `WrappableHooks`)\n * // following this pattern\n * function useQuery() {\n *   return wrapHook('useQuery', _useQuery, options.client)(query, options);\n * }\n * function _useQuery(query, options) {\n *   // original implementation\n * }\n *\n * // this is what a library like `@apollo/client-react-streaming` would do\n * class ApolloClientWithStreaming extends ApolloClient {\n *   constructor(options) {\n *     super(options);\n *     this.queryManager[Symbol.for(\"apollo.hook.wrappers\")] = {\n *       useQuery: (original) => (query, options) => {\n *         console.log(\"useQuery was called with options\", options);\n *         return original(query, options);\n *       }\n *     }\n *   }\n * }\n *\n * // this will now log the options and then call the original `useQuery`\n * const client = new ApolloClientWithStreaming({ ... });\n * useQuery(query, { client });\n * ```\n */\nexport function wrapHook<Hook extends (...args: any[]) => any>(\n  hookName: keyof WrappableHooks,\n  useHook: Hook,\n  clientOrObsQuery: ObservableQuery<any> | ApolloClient<any>\n): Hook {\n  const queryManager = (\n    clientOrObsQuery as unknown as {\n      // both `ApolloClient` and `ObservableQuery` have a `queryManager` property\n      // but they're both `private`, so we have to cast around for a bit here.\n      queryManager: QueryManagerWithWrappers<any>;\n    }\n  )[\"queryManager\"];\n  const wrappers = queryManager && queryManager[wrapperSymbol];\n  const wrapper: undefined | ((wrap: Hook) => Hook) =\n    wrappers && (wrappers[hookName] as any);\n  return wrapper ? wrapper(useHook) : useHook;\n}\n","import { invariant } from \"../../utilities/globals/index.js\";\n\nimport * as React from \"rehackt\";\nimport { useSyncExternalStore } from \"./useSyncExternalStore.js\";\nimport { equal } from \"@wry/equality\";\n\nimport type {\n  OperationVariables,\n  WatchQueryFetchPolicy,\n} from \"../../core/index.js\";\nimport { mergeOptions } from \"../../utilities/index.js\";\nimport type { ApolloContextValue } from \"../context/index.js\";\nimport { getApolloContext } from \"../context/index.js\";\nimport { ApolloError } from \"../../errors/index.js\";\nimport type {\n  ApolloClient,\n  ApolloQueryResult,\n  ObservableQuery,\n  DocumentNode,\n  TypedDocumentNode,\n  WatchQueryOptions,\n} from \"../../core/index.js\";\nimport { NetworkStatus } from \"../../core/index.js\";\nimport type {\n  QueryHookOptions,\n  QueryResult,\n  ObservableQueryFields,\n  NoInfer,\n} from \"../types/types.js\";\n\nimport { DocumentType, verifyDocumentType } from \"../parser/index.js\";\nimport { useApolloClient } from \"./useApolloClient.js\";\nimport {\n  canUseWeakMap,\n  compact,\n  isNonEmptyArray,\n  maybeDeepFreeze,\n} from \"../../utilities/index.js\";\nimport { wrapHook } from \"./internal/index.js\";\n\nconst {\n  prototype: { hasOwnProperty },\n} = Object;\n\n/**\n * A hook for executing queries in an Apollo application.\n *\n * To run a query within a React component, call `useQuery` and pass it a GraphQL query document.\n *\n * When your component renders, `useQuery` returns an object from Apollo Client that contains `loading`, `error`, and `data` properties you can use to render your UI.\n *\n * > Refer to the [Queries](https://www.apollographql.com/docs/react/data/queries) section for a more in-depth overview of `useQuery`.\n *\n * @example\n * ```jsx\n * import { gql, useQuery } from '@apollo/client';\n *\n * const GET_GREETING = gql`\n *   query GetGreeting($language: String!) {\n *     greeting(language: $language) {\n *       message\n *     }\n *   }\n * `;\n *\n * function Hello() {\n *   const { loading, error, data } = useQuery(GET_GREETING, {\n *     variables: { language: 'english' },\n *   });\n *   if (loading) return <p>Loading ...</p>;\n *   return <h1>Hello {data.greeting.message}!</h1>;\n * }\n * ```\n * @since 3.0.0\n * @param query - A GraphQL query document parsed into an AST by `gql`.\n * @param options - Options to control how the query is executed.\n * @returns Query result object\n */\nexport function useQuery<\n  TData = any,\n  TVariables extends OperationVariables = OperationVariables,\n>(\n  query: DocumentNode | TypedDocumentNode<TData, TVariables>,\n  options: QueryHookOptions<\n    NoInfer<TData>,\n    NoInfer<TVariables>\n  > = Object.create(null)\n): QueryResult<TData, TVariables> {\n  return wrapHook(\n    \"useQuery\",\n    _useQuery,\n    useApolloClient(options && options.client)\n  )(query, options);\n}\n\nfunction _useQuery<\n  TData = any,\n  TVariables extends OperationVariables = OperationVariables,\n>(\n  query: DocumentNode | TypedDocumentNode<TData, TVariables>,\n  options: QueryHookOptions<NoInfer<TData>, NoInfer<TVariables>>\n) {\n  return useInternalState(useApolloClient(options.client), query).useQuery(\n    options\n  );\n}\n\nexport function useInternalState<TData, TVariables extends OperationVariables>(\n  client: ApolloClient<any>,\n  query: DocumentNode | TypedDocumentNode<TData, TVariables>\n): InternalState<TData, TVariables> {\n  // By default, InternalState.prototype.forceUpdate is an empty function, but\n  // we replace it here (before anyone has had a chance to see this state yet)\n  // with a function that unconditionally forces an update, using the latest\n  // setTick function. Updating this state by calling state.forceUpdate or the\n  // uSES notification callback are the only way we trigger React component updates.\n  const forceUpdateState = React.useReducer((tick) => tick + 1, 0)[1];\n\n  function createInternalState(previous?: InternalState<TData, TVariables>) {\n    return Object.assign(new InternalState(client, query, previous), {\n      forceUpdateState,\n    });\n  }\n\n  let [state, updateState] = React.useState(createInternalState);\n\n  if (client !== state.client || query !== state.query) {\n    // If the client or query have changed, we need to create a new InternalState.\n    // This will trigger a re-render with the new state, but it will also continue\n    // to run the current render function to completion.\n    // Since we sometimes trigger some side-effects in the render function, we\n    // re-assign `state` to the new state to ensure that those side-effects are\n    // triggered with the new state.\n    updateState((state = createInternalState(state)));\n  }\n\n  return state;\n}\n\nclass InternalState<TData, TVariables extends OperationVariables> {\n  constructor(\n    public readonly client: ReturnType<typeof useApolloClient>,\n    public readonly query: DocumentNode | TypedDocumentNode<TData, TVariables>,\n    previous?: InternalState<TData, TVariables>\n  ) {\n    verifyDocumentType(query, DocumentType.Query);\n\n    // Reuse previousData from previous InternalState (if any) to provide\n    // continuity of previousData even if/when the query or client changes.\n    const previousResult = previous && previous.result;\n    const previousData = previousResult && previousResult.data;\n    if (previousData) {\n      this.previousData = previousData;\n    }\n  }\n\n  /**\n   * Forces an update using local component state.\n   * As this is not batched with `useSyncExternalStore` updates,\n   * this is only used as a fallback if the `useSyncExternalStore` \"force update\"\n   * method is not registered at the moment.\n   * See https://github.com/facebook/react/issues/25191\n   *  */\n  forceUpdateState() {\n    // Replaced (in useInternalState) with a method that triggers an update.\n    invariant.warn(\n      \"Calling default no-op implementation of InternalState#forceUpdate\"\n    );\n  }\n\n  /**\n   * Will be overwritten by the `useSyncExternalStore` \"force update\" method\n   * whenever it is available and reset to `forceUpdateState` when it isn't.\n   */\n  forceUpdate = () => this.forceUpdateState();\n\n  executeQuery(\n    options: QueryHookOptions<TData, TVariables> & {\n      query?: DocumentNode;\n    }\n  ) {\n    if (options.query) {\n      Object.assign(this, { query: options.query });\n    }\n\n    this.watchQueryOptions = this.createWatchQueryOptions(\n      (this.queryHookOptions = options)\n    );\n\n    const concast = this.observable.reobserveAsConcast(\n      this.getObsQueryOptions()\n    );\n\n    // Make sure getCurrentResult returns a fresh ApolloQueryResult<TData>,\n    // but save the current data as this.previousData, just like setResult\n    // usually does.\n    this.previousData = this.result?.data || this.previousData;\n    this.result = void 0;\n    this.forceUpdate();\n\n    return new Promise<QueryResult<TData, TVariables>>((resolve) => {\n      let result: ApolloQueryResult<TData>;\n\n      // Subscribe to the concast independently of the ObservableQuery in case\n      // the component gets unmounted before the promise resolves. This prevents\n      // the concast from terminating early and resolving with `undefined` when\n      // there are no more subscribers for the concast.\n      concast.subscribe({\n        next: (value) => {\n          result = value;\n        },\n        error: () => {\n          resolve(this.toQueryResult(this.observable.getCurrentResult()));\n        },\n        complete: () => {\n          resolve(this.toQueryResult(result));\n        },\n      });\n    });\n  }\n\n  // Methods beginning with use- should be called according to the standard\n  // rules of React hooks: only at the top level of the calling function, and\n  // without any dynamic conditional logic.\n  useQuery(options: QueryHookOptions<TData, TVariables>) {\n    // The renderPromises field gets initialized here in the useQuery method, at\n    // the beginning of everything (for a given component rendering, at least),\n    // so we can safely use this.renderPromises in other/later InternalState\n    // methods without worrying it might be uninitialized. Even after\n    // initialization, this.renderPromises is usually undefined (unless SSR is\n    // happening), but that's fine as long as it has been initialized that way,\n    // rather than left uninitialized.\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    this.renderPromises = React.useContext(getApolloContext()).renderPromises;\n\n    this.useOptions(options);\n\n    const obsQuery = this.useObservableQuery();\n\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const result = useSyncExternalStore(\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      React.useCallback(\n        (handleStoreChange) => {\n          if (this.renderPromises) {\n            return () => {};\n          }\n\n          this.forceUpdate = handleStoreChange;\n\n          const onNext = () => {\n            const previousResult = this.result;\n            // We use `getCurrentResult()` instead of the onNext argument because\n            // the values differ slightly. Specifically, loading results will have\n            // an empty object for data instead of `undefined` for some reason.\n            const result = obsQuery.getCurrentResult();\n            // Make sure we're not attempting to re-render similar results\n            if (\n              previousResult &&\n              previousResult.loading === result.loading &&\n              previousResult.networkStatus === result.networkStatus &&\n              equal(previousResult.data, result.data)\n            ) {\n              return;\n            }\n\n            this.setResult(result);\n          };\n\n          const onError = (error: Error) => {\n            subscription.unsubscribe();\n            subscription = obsQuery.resubscribeAfterError(onNext, onError);\n\n            if (!hasOwnProperty.call(error, \"graphQLErrors\")) {\n              // The error is not a GraphQL error\n              throw error;\n            }\n\n            const previousResult = this.result;\n            if (\n              !previousResult ||\n              (previousResult && previousResult.loading) ||\n              !equal(error, previousResult.error)\n            ) {\n              this.setResult({\n                data: (previousResult && previousResult.data) as TData,\n                error: error as ApolloError,\n                loading: false,\n                networkStatus: NetworkStatus.error,\n              });\n            }\n          };\n\n          let subscription = obsQuery.subscribe(onNext, onError);\n\n          // Do the \"unsubscribe\" with a short delay.\n          // This way, an existing subscription can be reused without an additional\n          // request if \"unsubscribe\"  and \"resubscribe\" to the same ObservableQuery\n          // happen in very fast succession.\n          return () => {\n            setTimeout(() => subscription.unsubscribe());\n            this.forceUpdate = () => this.forceUpdateState();\n          };\n        },\n        [\n          // We memoize the subscribe function using useCallback and the following\n          // dependency keys, because the subscribe function reference is all that\n          // useSyncExternalStore uses internally as a dependency key for the\n          // useEffect ultimately responsible for the subscription, so we are\n          // effectively passing this dependency array to that useEffect buried\n          // inside useSyncExternalStore, as desired.\n          obsQuery,\n          // eslint-disable-next-line react-hooks/exhaustive-deps\n          this.renderPromises,\n          // eslint-disable-next-line react-hooks/exhaustive-deps\n          this.client.disableNetworkFetches,\n        ]\n      ),\n\n      () => this.getCurrentResult(),\n      () => this.getCurrentResult()\n    );\n\n    // TODO Remove this method when we remove support for options.partialRefetch.\n    this.unsafeHandlePartialRefetch(result);\n\n    return this.toQueryResult(result);\n  }\n\n  // These members (except for renderPromises) are all populated by the\n  // useOptions method, which is called unconditionally at the beginning of the\n  // useQuery method, so we can safely use these members in other/later methods\n  // without worrying they might be uninitialized.\n  private renderPromises: ApolloContextValue[\"renderPromises\"];\n  private queryHookOptions!: QueryHookOptions<TData, TVariables>;\n  private watchQueryOptions!: WatchQueryOptions<TVariables, TData>;\n\n  private useOptions(options: QueryHookOptions<TData, TVariables>) {\n    const watchQueryOptions = this.createWatchQueryOptions(\n      (this.queryHookOptions = options)\n    );\n\n    // Update this.watchQueryOptions, but only when they have changed, which\n    // allows us to depend on the referential stability of\n    // this.watchQueryOptions elsewhere.\n    const currentWatchQueryOptions = this.watchQueryOptions;\n\n    if (!equal(watchQueryOptions, currentWatchQueryOptions)) {\n      this.watchQueryOptions = watchQueryOptions;\n\n      if (currentWatchQueryOptions && this.observable) {\n        // Though it might be tempting to postpone this reobserve call to the\n        // useEffect block, we need getCurrentResult to return an appropriate\n        // loading:true result synchronously (later within the same call to\n        // useQuery). Since we already have this.observable here (not true for\n        // the very first call to useQuery), we are not initiating any new\n        // subscriptions, though it does feel less than ideal that reobserve\n        // (potentially) kicks off a network request (for example, when the\n        // variables have changed), which is technically a side-effect.\n        this.observable.reobserve(this.getObsQueryOptions());\n\n        // Make sure getCurrentResult returns a fresh ApolloQueryResult<TData>,\n        // but save the current data as this.previousData, just like setResult\n        // usually does.\n        this.previousData = this.result?.data || this.previousData;\n        this.result = void 0;\n      }\n    }\n\n    // Make sure state.onCompleted and state.onError always reflect the latest\n    // options.onCompleted and options.onError callbacks provided to useQuery,\n    // since those functions are often recreated every time useQuery is called.\n    // Like the forceUpdate method, the versions of these methods inherited from\n    // InternalState.prototype are empty no-ops, but we can override them on the\n    // base state object (without modifying the prototype).\n    this.onCompleted =\n      options.onCompleted || InternalState.prototype.onCompleted;\n    this.onError = options.onError || InternalState.prototype.onError;\n\n    if (\n      (this.renderPromises || this.client.disableNetworkFetches) &&\n      this.queryHookOptions.ssr === false &&\n      !this.queryHookOptions.skip\n    ) {\n      // If SSR has been explicitly disabled, and this function has been called\n      // on the server side, return the default loading state.\n      this.result = this.ssrDisabledResult;\n    } else if (\n      this.queryHookOptions.skip ||\n      this.watchQueryOptions.fetchPolicy === \"standby\"\n    ) {\n      // When skipping a query (ie. we're not querying for data but still want to\n      // render children), make sure the `data` is cleared out and `loading` is\n      // set to `false` (since we aren't loading anything).\n      //\n      // NOTE: We no longer think this is the correct behavior. Skipping should\n      // not automatically set `data` to `undefined`, but instead leave the\n      // previous data in place. In other words, skipping should not mandate that\n      // previously received data is all of a sudden removed. Unfortunately,\n      // changing this is breaking, so we'll have to wait until Apollo Client 4.0\n      // to address this.\n      this.result = this.skipStandbyResult;\n    } else if (\n      this.result === this.ssrDisabledResult ||\n      this.result === this.skipStandbyResult\n    ) {\n      this.result = void 0;\n    }\n  }\n\n  private getObsQueryOptions(): WatchQueryOptions<TVariables, TData> {\n    const toMerge: Array<Partial<WatchQueryOptions<TVariables, TData>>> = [];\n\n    const globalDefaults = this.client.defaultOptions.watchQuery;\n    if (globalDefaults) toMerge.push(globalDefaults);\n\n    if (this.queryHookOptions.defaultOptions) {\n      toMerge.push(this.queryHookOptions.defaultOptions);\n    }\n\n    // We use compact rather than mergeOptions for this part of the merge,\n    // because we want watchQueryOptions.variables (if defined) to replace\n    // this.observable.options.variables whole. This replacement allows\n    // removing variables by removing them from the variables input to\n    // useQuery. If the variables were always merged together (rather than\n    // replaced), there would be no way to remove existing variables.\n    // However, the variables from options.defaultOptions and globalDefaults\n    // (if provided) should be merged, to ensure individual defaulted\n    // variables always have values, if not otherwise defined in\n    // observable.options or watchQueryOptions.\n    toMerge.push(\n      compact(\n        this.observable && this.observable.options,\n        this.watchQueryOptions\n      )\n    );\n\n    return toMerge.reduce(mergeOptions) as WatchQueryOptions<TVariables, TData>;\n  }\n\n  private ssrDisabledResult = maybeDeepFreeze({\n    loading: true,\n    data: void 0 as unknown as TData,\n    error: void 0,\n    networkStatus: NetworkStatus.loading,\n  });\n\n  private skipStandbyResult = maybeDeepFreeze({\n    loading: false,\n    data: void 0 as unknown as TData,\n    error: void 0,\n    networkStatus: NetworkStatus.ready,\n  });\n\n  // A function to massage options before passing them to ObservableQuery.\n  private createWatchQueryOptions({\n    skip,\n    ssr,\n    onCompleted,\n    onError,\n    defaultOptions,\n    // The above options are useQuery-specific, so this ...otherOptions spread\n    // makes otherOptions almost a WatchQueryOptions object, except for the\n    // query property that we add below.\n    ...otherOptions\n  }: QueryHookOptions<TData, TVariables> = {}): WatchQueryOptions<\n    TVariables,\n    TData\n  > {\n    // This Object.assign is safe because otherOptions is a fresh ...rest object\n    // that did not exist until just now, so modifications are still allowed.\n    const watchQueryOptions: WatchQueryOptions<TVariables, TData> =\n      Object.assign(otherOptions, { query: this.query });\n\n    if (\n      this.renderPromises &&\n      (watchQueryOptions.fetchPolicy === \"network-only\" ||\n        watchQueryOptions.fetchPolicy === \"cache-and-network\")\n    ) {\n      // this behavior was added to react-apollo without explanation in this PR\n      // https://github.com/apollographql/react-apollo/pull/1579\n      watchQueryOptions.fetchPolicy = \"cache-first\";\n    }\n\n    if (!watchQueryOptions.variables) {\n      watchQueryOptions.variables = {} as TVariables;\n    }\n\n    if (skip) {\n      const {\n        fetchPolicy = this.getDefaultFetchPolicy(),\n        initialFetchPolicy = fetchPolicy,\n      } = watchQueryOptions;\n\n      // When skipping, we set watchQueryOptions.fetchPolicy initially to\n      // \"standby\", but we also need/want to preserve the initial non-standby\n      // fetchPolicy that would have been used if not skipping.\n      Object.assign(watchQueryOptions, {\n        initialFetchPolicy,\n        fetchPolicy: \"standby\",\n      });\n    } else if (!watchQueryOptions.fetchPolicy) {\n      watchQueryOptions.fetchPolicy =\n        this.observable?.options.initialFetchPolicy ||\n        this.getDefaultFetchPolicy();\n    }\n\n    return watchQueryOptions;\n  }\n\n  getDefaultFetchPolicy(): WatchQueryFetchPolicy {\n    return (\n      this.queryHookOptions.defaultOptions?.fetchPolicy ||\n      this.client.defaultOptions.watchQuery?.fetchPolicy ||\n      \"cache-first\"\n    );\n  }\n\n  // Defining these methods as no-ops on the prototype allows us to call\n  // state.onCompleted and/or state.onError without worrying about whether a\n  // callback was provided.\n  private onCompleted(data: TData) {}\n  private onError(error: ApolloError) {}\n\n  private observable!: ObservableQuery<TData, TVariables>;\n  public obsQueryFields!: Omit<\n    ObservableQueryFields<TData, TVariables>,\n    \"variables\"\n  >;\n\n  private useObservableQuery() {\n    // See if there is an existing observable that was used to fetch the same\n    // data and if so, use it instead since it will contain the proper queryId\n    // to fetch the result set. This is used during SSR.\n    const obsQuery = (this.observable =\n      (this.renderPromises &&\n        this.renderPromises.getSSRObservable(this.watchQueryOptions)) ||\n      this.observable || // Reuse this.observable if possible (and not SSR)\n      this.client.watchQuery(this.getObsQueryOptions()));\n\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    this.obsQueryFields = React.useMemo(\n      () => ({\n        refetch: obsQuery.refetch.bind(obsQuery),\n        reobserve: obsQuery.reobserve.bind(obsQuery),\n        fetchMore: obsQuery.fetchMore.bind(obsQuery),\n        updateQuery: obsQuery.updateQuery.bind(obsQuery),\n        startPolling: obsQuery.startPolling.bind(obsQuery),\n        stopPolling: obsQuery.stopPolling.bind(obsQuery),\n        subscribeToMore: obsQuery.subscribeToMore.bind(obsQuery),\n      }),\n      [obsQuery]\n    );\n\n    const ssrAllowed = !(\n      this.queryHookOptions.ssr === false || this.queryHookOptions.skip\n    );\n\n    if (this.renderPromises && ssrAllowed) {\n      this.renderPromises.registerSSRObservable(obsQuery);\n\n      if (obsQuery.getCurrentResult().loading) {\n        // TODO: This is a legacy API which could probably be cleaned up\n        this.renderPromises.addObservableQueryPromise(obsQuery);\n      }\n    }\n\n    return obsQuery;\n  }\n\n  // These members are populated by getCurrentResult and setResult, and it's\n  // okay/normal for them to be initially undefined.\n  private result: undefined | ApolloQueryResult<TData>;\n  private previousData: undefined | TData;\n\n  private setResult(nextResult: ApolloQueryResult<TData>) {\n    const previousResult = this.result;\n    if (previousResult && previousResult.data) {\n      this.previousData = previousResult.data;\n    }\n    this.result = nextResult;\n    // Calling state.setResult always triggers an update, though some call sites\n    // perform additional equality checks before committing to an update.\n    this.forceUpdate();\n    this.handleErrorOrCompleted(nextResult, previousResult);\n  }\n\n  private handleErrorOrCompleted(\n    result: ApolloQueryResult<TData>,\n    previousResult?: ApolloQueryResult<TData>\n  ) {\n    if (!result.loading) {\n      const error = this.toApolloError(result);\n\n      // wait a tick in case we are in the middle of rendering a component\n      Promise.resolve()\n        .then(() => {\n          if (error) {\n            this.onError(error);\n          } else if (\n            result.data &&\n            previousResult?.networkStatus !== result.networkStatus &&\n            result.networkStatus === NetworkStatus.ready\n          ) {\n            this.onCompleted(result.data);\n          }\n        })\n        .catch((error) => {\n          invariant.warn(error);\n        });\n    }\n  }\n\n  private toApolloError(\n    result: ApolloQueryResult<TData>\n  ): ApolloError | undefined {\n    return isNonEmptyArray(result.errors) ?\n        new ApolloError({ graphQLErrors: result.errors })\n      : result.error;\n  }\n\n  private getCurrentResult(): ApolloQueryResult<TData> {\n    // Using this.result as a cache ensures getCurrentResult continues returning\n    // the same (===) result object, unless state.setResult has been called, or\n    // we're doing server rendering and therefore override the result below.\n    if (!this.result) {\n      this.handleErrorOrCompleted(\n        (this.result = this.observable.getCurrentResult())\n      );\n    }\n    return this.result;\n  }\n\n  // This cache allows the referential stability of this.result (as returned by\n  // getCurrentResult) to translate into referential stability of the resulting\n  // QueryResult object returned by toQueryResult.\n  private toQueryResultCache = new (canUseWeakMap ? WeakMap : Map)<\n    ApolloQueryResult<TData>,\n    QueryResult<TData, TVariables>\n  >();\n\n  toQueryResult(\n    result: ApolloQueryResult<TData>\n  ): QueryResult<TData, TVariables> {\n    let queryResult = this.toQueryResultCache.get(result);\n    if (queryResult) return queryResult;\n\n    const { data, partial, ...resultWithoutPartial } = result;\n    this.toQueryResultCache.set(\n      result,\n      (queryResult = {\n        data, // Ensure always defined, even if result.data is missing.\n        ...resultWithoutPartial,\n        ...this.obsQueryFields,\n        client: this.client,\n        observable: this.observable,\n        variables: this.observable.variables,\n        called: !this.queryHookOptions.skip,\n        previousData: this.previousData,\n      })\n    );\n\n    if (!queryResult.error && isNonEmptyArray(result.errors)) {\n      // Until a set naming convention for networkError and graphQLErrors is\n      // decided upon, we map errors (graphQLErrors) to the error options.\n      // TODO: Is it possible for both result.error and result.errors to be\n      // defined here?\n      queryResult.error = new ApolloError({ graphQLErrors: result.errors });\n    }\n\n    return queryResult;\n  }\n\n  private unsafeHandlePartialRefetch(result: ApolloQueryResult<TData>) {\n    // WARNING: SIDE-EFFECTS IN THE RENDER FUNCTION\n    //\n    // TODO: This code should be removed when the partialRefetch option is\n    // removed. I was unable to get this hook to behave reasonably in certain\n    // edge cases when this block was put in an effect.\n    if (\n      result.partial &&\n      this.queryHookOptions.partialRefetch &&\n      !result.loading &&\n      (!result.data || Object.keys(result.data).length === 0) &&\n      this.observable.options.fetchPolicy !== \"cache-only\"\n    ) {\n      Object.assign(result, {\n        loading: true,\n        networkStatus: NetworkStatus.refetch,\n      });\n      this.observable.refetch();\n    }\n  }\n}\n","export function invariant(condition, message) {\n  const booleanCondition = Boolean(condition);\n\n  if (!booleanCondition) {\n    throw new Error(\n      message != null ? message : 'Unexpected invariant triggered.',\n    );\n  }\n}\n","import { invariant } from '../jsutils/invariant.mjs';\nconst LineRegExp = /\\r\\n|[\\n\\r]/g;\n/**\n * Represents a location in a Source.\n */\n\n/**\n * Takes a Source and a UTF-8 character offset, and returns the corresponding\n * line and column as a SourceLocation.\n */\nexport function getLocation(source, position) {\n  let lastLineStart = 0;\n  let line = 1;\n\n  for (const match of source.body.matchAll(LineRegExp)) {\n    typeof match.index === 'number' || invariant(false);\n\n    if (match.index >= position) {\n      break;\n    }\n\n    lastLineStart = match.index + match[0].length;\n    line += 1;\n  }\n\n  return {\n    line,\n    column: position + 1 - lastLineStart,\n  };\n}\n","import { getLocation } from './location.mjs';\n\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\nexport function printLocation(location) {\n  return printSourceLocation(\n    location.source,\n    getLocation(location.source, location.start),\n  );\n}\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\n\nexport function printSourceLocation(source, sourceLocation) {\n  const firstLineColumnOffset = source.locationOffset.column - 1;\n  const body = ''.padStart(firstLineColumnOffset) + source.body;\n  const lineIndex = sourceLocation.line - 1;\n  const lineOffset = source.locationOffset.line - 1;\n  const lineNum = sourceLocation.line + lineOffset;\n  const columnOffset = sourceLocation.line === 1 ? firstLineColumnOffset : 0;\n  const columnNum = sourceLocation.column + columnOffset;\n  const locationStr = `${source.name}:${lineNum}:${columnNum}\\n`;\n  const lines = body.split(/\\r\\n|[\\n\\r]/g);\n  const locationLine = lines[lineIndex]; // Special case for minified documents\n\n  if (locationLine.length > 120) {\n    const subLineIndex = Math.floor(columnNum / 80);\n    const subLineColumnNum = columnNum % 80;\n    const subLines = [];\n\n    for (let i = 0; i < locationLine.length; i += 80) {\n      subLines.push(locationLine.slice(i, i + 80));\n    }\n\n    return (\n      locationStr +\n      printPrefixedLines([\n        [`${lineNum} |`, subLines[0]],\n        ...subLines.slice(1, subLineIndex + 1).map((subLine) => ['|', subLine]),\n        ['|', '^'.padStart(subLineColumnNum)],\n        ['|', subLines[subLineIndex + 1]],\n      ])\n    );\n  }\n\n  return (\n    locationStr +\n    printPrefixedLines([\n      // Lines specified like this: [\"prefix\", \"string\"],\n      [`${lineNum - 1} |`, lines[lineIndex - 1]],\n      [`${lineNum} |`, locationLine],\n      ['|', '^'.padStart(columnNum)],\n      [`${lineNum + 1} |`, lines[lineIndex + 1]],\n    ])\n  );\n}\n\nfunction printPrefixedLines(lines) {\n  const existingLines = lines.filter(([_, line]) => line !== undefined);\n  const padLen = Math.max(...existingLines.map(([prefix]) => prefix.length));\n  return existingLines\n    .map(([prefix, line]) => prefix.padStart(padLen) + (line ? ' ' + line : ''))\n    .join('\\n');\n}\n","import { isObjectLike } from '../jsutils/isObjectLike.mjs';\nimport { getLocation } from '../language/location.mjs';\nimport {\n  printLocation,\n  printSourceLocation,\n} from '../language/printLocation.mjs';\n\nfunction toNormalizedOptions(args) {\n  const firstArg = args[0];\n\n  if (firstArg == null || 'kind' in firstArg || 'length' in firstArg) {\n    return {\n      nodes: firstArg,\n      source: args[1],\n      positions: args[2],\n      path: args[3],\n      originalError: args[4],\n      extensions: args[5],\n    };\n  }\n\n  return firstArg;\n}\n/**\n * A GraphQLError describes an Error found during the parse, validate, or\n * execute phases of performing a GraphQL operation. In addition to a message\n * and stack trace, it also includes information about the locations in a\n * GraphQL document and/or execution result that correspond to the Error.\n */\n\nexport class GraphQLError extends Error {\n  /**\n   * An array of `{ line, column }` locations within the source GraphQL document\n   * which correspond to this error.\n   *\n   * Errors during validation often contain multiple locations, for example to\n   * point out two things with the same name. Errors during execution include a\n   * single location, the field which produced the error.\n   *\n   * Enumerable, and appears in the result of JSON.stringify().\n   */\n\n  /**\n   * An array describing the JSON-path into the execution response which\n   * corresponds to this error. Only included for errors during execution.\n   *\n   * Enumerable, and appears in the result of JSON.stringify().\n   */\n\n  /**\n   * An array of GraphQL AST Nodes corresponding to this error.\n   */\n\n  /**\n   * The source GraphQL document for the first location of this error.\n   *\n   * Note that if this Error represents more than one node, the source may not\n   * represent nodes after the first node.\n   */\n\n  /**\n   * An array of character offsets within the source GraphQL document\n   * which correspond to this error.\n   */\n\n  /**\n   * The original error thrown from a field resolver during execution.\n   */\n\n  /**\n   * Extension fields to add to the formatted error.\n   */\n\n  /**\n   * @deprecated Please use the `GraphQLErrorOptions` constructor overload instead.\n   */\n  constructor(message, ...rawArgs) {\n    var _this$nodes, _nodeLocations$, _ref;\n\n    const { nodes, source, positions, path, originalError, extensions } =\n      toNormalizedOptions(rawArgs);\n    super(message);\n    this.name = 'GraphQLError';\n    this.path = path !== null && path !== void 0 ? path : undefined;\n    this.originalError =\n      originalError !== null && originalError !== void 0\n        ? originalError\n        : undefined; // Compute list of blame nodes.\n\n    this.nodes = undefinedIfEmpty(\n      Array.isArray(nodes) ? nodes : nodes ? [nodes] : undefined,\n    );\n    const nodeLocations = undefinedIfEmpty(\n      (_this$nodes = this.nodes) === null || _this$nodes === void 0\n        ? void 0\n        : _this$nodes.map((node) => node.loc).filter((loc) => loc != null),\n    ); // Compute locations in the source for the given nodes/positions.\n\n    this.source =\n      source !== null && source !== void 0\n        ? source\n        : nodeLocations === null || nodeLocations === void 0\n        ? void 0\n        : (_nodeLocations$ = nodeLocations[0]) === null ||\n          _nodeLocations$ === void 0\n        ? void 0\n        : _nodeLocations$.source;\n    this.positions =\n      positions !== null && positions !== void 0\n        ? positions\n        : nodeLocations === null || nodeLocations === void 0\n        ? void 0\n        : nodeLocations.map((loc) => loc.start);\n    this.locations =\n      positions && source\n        ? positions.map((pos) => getLocation(source, pos))\n        : nodeLocations === null || nodeLocations === void 0\n        ? void 0\n        : nodeLocations.map((loc) => getLocation(loc.source, loc.start));\n    const originalExtensions = isObjectLike(\n      originalError === null || originalError === void 0\n        ? void 0\n        : originalError.extensions,\n    )\n      ? originalError === null || originalError === void 0\n        ? void 0\n        : originalError.extensions\n      : undefined;\n    this.extensions =\n      (_ref =\n        extensions !== null && extensions !== void 0\n          ? extensions\n          : originalExtensions) !== null && _ref !== void 0\n        ? _ref\n        : Object.create(null); // Only properties prescribed by the spec should be enumerable.\n    // Keep the rest as non-enumerable.\n\n    Object.defineProperties(this, {\n      message: {\n        writable: true,\n        enumerable: true,\n      },\n      name: {\n        enumerable: false,\n      },\n      nodes: {\n        enumerable: false,\n      },\n      source: {\n        enumerable: false,\n      },\n      positions: {\n        enumerable: false,\n      },\n      originalError: {\n        enumerable: false,\n      },\n    }); // Include (non-enumerable) stack trace.\n\n    /* c8 ignore start */\n    // FIXME: https://github.com/graphql/graphql-js/issues/2317\n\n    if (\n      originalError !== null &&\n      originalError !== void 0 &&\n      originalError.stack\n    ) {\n      Object.defineProperty(this, 'stack', {\n        value: originalError.stack,\n        writable: true,\n        configurable: true,\n      });\n    } else if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, GraphQLError);\n    } else {\n      Object.defineProperty(this, 'stack', {\n        value: Error().stack,\n        writable: true,\n        configurable: true,\n      });\n    }\n    /* c8 ignore stop */\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLError';\n  }\n\n  toString() {\n    let output = this.message;\n\n    if (this.nodes) {\n      for (const node of this.nodes) {\n        if (node.loc) {\n          output += '\\n\\n' + printLocation(node.loc);\n        }\n      }\n    } else if (this.source && this.locations) {\n      for (const location of this.locations) {\n        output += '\\n\\n' + printSourceLocation(this.source, location);\n      }\n    }\n\n    return output;\n  }\n\n  toJSON() {\n    const formattedError = {\n      message: this.message,\n    };\n\n    if (this.locations != null) {\n      formattedError.locations = this.locations;\n    }\n\n    if (this.path != null) {\n      formattedError.path = this.path;\n    }\n\n    if (this.extensions != null && Object.keys(this.extensions).length > 0) {\n      formattedError.extensions = this.extensions;\n    }\n\n    return formattedError;\n  }\n}\n\nfunction undefinedIfEmpty(array) {\n  return array === undefined || array.length === 0 ? undefined : array;\n}\n/**\n * See: https://spec.graphql.org/draft/#sec-Errors\n */\n\n/**\n * Prints a GraphQLError to a string, representing useful location information\n * about the error's position in the source.\n *\n * @deprecated Please use `error.toString` instead. Will be removed in v17\n */\nexport function printError(error) {\n  return error.toString();\n}\n/**\n * Given a GraphQLError, format it according to the rules described by the\n * Response Format, Errors section of the GraphQL Specification.\n *\n * @deprecated Please use `error.toJSON` instead. Will be removed in v17\n */\n\nexport function formatError(error) {\n  return error.toJSON();\n}\n","/**\n * Return true if `value` is object-like. A value is object-like if it's not\n * `null` and has a `typeof` result of \"object\".\n */\nexport function isObjectLike(value) {\n  return typeof value == 'object' && value !== null;\n}\n","import { GraphQLError } from './GraphQLError.mjs';\n/**\n * Produces a GraphQLError representing a syntax error, containing useful\n * descriptive information about the syntax error's position in the source.\n */\n\nexport function syntaxError(source, position, description) {\n  return new GraphQLError(`Syntax Error: ${description}`, {\n    source,\n    positions: [position],\n  });\n}\n","/**\n * The set of allowed directive location values.\n */\nvar DirectiveLocation;\n\n(function (DirectiveLocation) {\n  DirectiveLocation['QUERY'] = 'QUERY';\n  DirectiveLocation['MUTATION'] = 'MUTATION';\n  DirectiveLocation['SUBSCRIPTION'] = 'SUBSCRIPTION';\n  DirectiveLocation['FIELD'] = 'FIELD';\n  DirectiveLocation['FRAGMENT_DEFINITION'] = 'FRAGMENT_DEFINITION';\n  DirectiveLocation['FRAGMENT_SPREAD'] = 'FRAGMENT_SPREAD';\n  DirectiveLocation['INLINE_FRAGMENT'] = 'INLINE_FRAGMENT';\n  DirectiveLocation['VARIABLE_DEFINITION'] = 'VARIABLE_DEFINITION';\n  DirectiveLocation['SCHEMA'] = 'SCHEMA';\n  DirectiveLocation['SCALAR'] = 'SCALAR';\n  DirectiveLocation['OBJECT'] = 'OBJECT';\n  DirectiveLocation['FIELD_DEFINITION'] = 'FIELD_DEFINITION';\n  DirectiveLocation['ARGUMENT_DEFINITION'] = 'ARGUMENT_DEFINITION';\n  DirectiveLocation['INTERFACE'] = 'INTERFACE';\n  DirectiveLocation['UNION'] = 'UNION';\n  DirectiveLocation['ENUM'] = 'ENUM';\n  DirectiveLocation['ENUM_VALUE'] = 'ENUM_VALUE';\n  DirectiveLocation['INPUT_OBJECT'] = 'INPUT_OBJECT';\n  DirectiveLocation['INPUT_FIELD_DEFINITION'] = 'INPUT_FIELD_DEFINITION';\n})(DirectiveLocation || (DirectiveLocation = {}));\n\nexport { DirectiveLocation };\n/**\n * The enum type representing the directive location values.\n *\n * @deprecated Please use `DirectiveLocation`. Will be remove in v17.\n */\n","/**\n * An exported enum describing the different kinds of tokens that the\n * lexer emits.\n */\nvar TokenKind;\n\n(function (TokenKind) {\n  TokenKind['SOF'] = '<SOF>';\n  TokenKind['EOF'] = '<EOF>';\n  TokenKind['BANG'] = '!';\n  TokenKind['DOLLAR'] = '$';\n  TokenKind['AMP'] = '&';\n  TokenKind['PAREN_L'] = '(';\n  TokenKind['PAREN_R'] = ')';\n  TokenKind['SPREAD'] = '...';\n  TokenKind['COLON'] = ':';\n  TokenKind['EQUALS'] = '=';\n  TokenKind['AT'] = '@';\n  TokenKind['BRACKET_L'] = '[';\n  TokenKind['BRACKET_R'] = ']';\n  TokenKind['BRACE_L'] = '{';\n  TokenKind['PIPE'] = '|';\n  TokenKind['BRACE_R'] = '}';\n  TokenKind['NAME'] = 'Name';\n  TokenKind['INT'] = 'Int';\n  TokenKind['FLOAT'] = 'Float';\n  TokenKind['STRING'] = 'String';\n  TokenKind['BLOCK_STRING'] = 'BlockString';\n  TokenKind['COMMENT'] = 'Comment';\n})(TokenKind || (TokenKind = {}));\n\nexport { TokenKind };\n/**\n * The enum type representing the token kinds values.\n *\n * @deprecated Please use `TokenKind`. Will be remove in v17.\n */\n","import { syntaxError } from '../error/syntaxError.mjs';\nimport { Token } from './ast.mjs';\nimport { dedentBlockStringLines } from './blockString.mjs';\nimport { isDigit, isNameContinue, isNameStart } from './characterClasses.mjs';\nimport { TokenKind } from './tokenKind.mjs';\n/**\n * Given a Source object, creates a Lexer for that source.\n * A Lexer is a stateful stream generator in that every time\n * it is advanced, it returns the next token in the Source. Assuming the\n * source lexes, the final Token emitted by the lexer will be of kind\n * EOF, after which the lexer will repeatedly return the same EOF token\n * whenever called.\n */\n\nexport class Lexer {\n  /**\n   * The previously focused non-ignored token.\n   */\n\n  /**\n   * The currently focused non-ignored token.\n   */\n\n  /**\n   * The (1-indexed) line containing the current token.\n   */\n\n  /**\n   * The character offset at which the current line begins.\n   */\n  constructor(source) {\n    const startOfFileToken = new Token(TokenKind.SOF, 0, 0, 0, 0);\n    this.source = source;\n    this.lastToken = startOfFileToken;\n    this.token = startOfFileToken;\n    this.line = 1;\n    this.lineStart = 0;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Lexer';\n  }\n  /**\n   * Advances the token stream to the next non-ignored token.\n   */\n\n  advance() {\n    this.lastToken = this.token;\n    const token = (this.token = this.lookahead());\n    return token;\n  }\n  /**\n   * Looks ahead and returns the next non-ignored token, but does not change\n   * the state of Lexer.\n   */\n\n  lookahead() {\n    let token = this.token;\n\n    if (token.kind !== TokenKind.EOF) {\n      do {\n        if (token.next) {\n          token = token.next;\n        } else {\n          // Read the next token and form a link in the token linked-list.\n          const nextToken = readNextToken(this, token.end); // @ts-expect-error next is only mutable during parsing.\n\n          token.next = nextToken; // @ts-expect-error prev is only mutable during parsing.\n\n          nextToken.prev = token;\n          token = nextToken;\n        }\n      } while (token.kind === TokenKind.COMMENT);\n    }\n\n    return token;\n  }\n}\n/**\n * @internal\n */\n\nexport function isPunctuatorTokenKind(kind) {\n  return (\n    kind === TokenKind.BANG ||\n    kind === TokenKind.DOLLAR ||\n    kind === TokenKind.AMP ||\n    kind === TokenKind.PAREN_L ||\n    kind === TokenKind.PAREN_R ||\n    kind === TokenKind.SPREAD ||\n    kind === TokenKind.COLON ||\n    kind === TokenKind.EQUALS ||\n    kind === TokenKind.AT ||\n    kind === TokenKind.BRACKET_L ||\n    kind === TokenKind.BRACKET_R ||\n    kind === TokenKind.BRACE_L ||\n    kind === TokenKind.PIPE ||\n    kind === TokenKind.BRACE_R\n  );\n}\n/**\n * A Unicode scalar value is any Unicode code point except surrogate code\n * points. In other words, the inclusive ranges of values 0x0000 to 0xD7FF and\n * 0xE000 to 0x10FFFF.\n *\n * SourceCharacter ::\n *   - \"Any Unicode scalar value\"\n */\n\nfunction isUnicodeScalarValue(code) {\n  return (\n    (code >= 0x0000 && code <= 0xd7ff) || (code >= 0xe000 && code <= 0x10ffff)\n  );\n}\n/**\n * The GraphQL specification defines source text as a sequence of unicode scalar\n * values (which Unicode defines to exclude surrogate code points). However\n * JavaScript defines strings as a sequence of UTF-16 code units which may\n * include surrogates. A surrogate pair is a valid source character as it\n * encodes a supplementary code point (above U+FFFF), but unpaired surrogate\n * code points are not valid source characters.\n */\n\nfunction isSupplementaryCodePoint(body, location) {\n  return (\n    isLeadingSurrogate(body.charCodeAt(location)) &&\n    isTrailingSurrogate(body.charCodeAt(location + 1))\n  );\n}\n\nfunction isLeadingSurrogate(code) {\n  return code >= 0xd800 && code <= 0xdbff;\n}\n\nfunction isTrailingSurrogate(code) {\n  return code >= 0xdc00 && code <= 0xdfff;\n}\n/**\n * Prints the code point (or end of file reference) at a given location in a\n * source for use in error messages.\n *\n * Printable ASCII is printed quoted, while other points are printed in Unicode\n * code point form (ie. U+1234).\n */\n\nfunction printCodePointAt(lexer, location) {\n  const code = lexer.source.body.codePointAt(location);\n\n  if (code === undefined) {\n    return TokenKind.EOF;\n  } else if (code >= 0x0020 && code <= 0x007e) {\n    // Printable ASCII\n    const char = String.fromCodePoint(code);\n    return char === '\"' ? \"'\\\"'\" : `\"${char}\"`;\n  } // Unicode code point\n\n  return 'U+' + code.toString(16).toUpperCase().padStart(4, '0');\n}\n/**\n * Create a token with line and column location information.\n */\n\nfunction createToken(lexer, kind, start, end, value) {\n  const line = lexer.line;\n  const col = 1 + start - lexer.lineStart;\n  return new Token(kind, start, end, line, col, value);\n}\n/**\n * Gets the next token from the source starting at the given position.\n *\n * This skips over whitespace until it finds the next lexable token, then lexes\n * punctuators immediately or calls the appropriate helper function for more\n * complicated tokens.\n */\n\nfunction readNextToken(lexer, start) {\n  const body = lexer.source.body;\n  const bodyLength = body.length;\n  let position = start;\n\n  while (position < bodyLength) {\n    const code = body.charCodeAt(position); // SourceCharacter\n\n    switch (code) {\n      // Ignored ::\n      //   - UnicodeBOM\n      //   - WhiteSpace\n      //   - LineTerminator\n      //   - Comment\n      //   - Comma\n      //\n      // UnicodeBOM :: \"Byte Order Mark (U+FEFF)\"\n      //\n      // WhiteSpace ::\n      //   - \"Horizontal Tab (U+0009)\"\n      //   - \"Space (U+0020)\"\n      //\n      // Comma :: ,\n      case 0xfeff: // <BOM>\n\n      case 0x0009: // \\t\n\n      case 0x0020: // <space>\n\n      case 0x002c:\n        // ,\n        ++position;\n        continue;\n      // LineTerminator ::\n      //   - \"New Line (U+000A)\"\n      //   - \"Carriage Return (U+000D)\" [lookahead != \"New Line (U+000A)\"]\n      //   - \"Carriage Return (U+000D)\" \"New Line (U+000A)\"\n\n      case 0x000a:\n        // \\n\n        ++position;\n        ++lexer.line;\n        lexer.lineStart = position;\n        continue;\n\n      case 0x000d:\n        // \\r\n        if (body.charCodeAt(position + 1) === 0x000a) {\n          position += 2;\n        } else {\n          ++position;\n        }\n\n        ++lexer.line;\n        lexer.lineStart = position;\n        continue;\n      // Comment\n\n      case 0x0023:\n        // #\n        return readComment(lexer, position);\n      // Token ::\n      //   - Punctuator\n      //   - Name\n      //   - IntValue\n      //   - FloatValue\n      //   - StringValue\n      //\n      // Punctuator :: one of ! $ & ( ) ... : = @ [ ] { | }\n\n      case 0x0021:\n        // !\n        return createToken(lexer, TokenKind.BANG, position, position + 1);\n\n      case 0x0024:\n        // $\n        return createToken(lexer, TokenKind.DOLLAR, position, position + 1);\n\n      case 0x0026:\n        // &\n        return createToken(lexer, TokenKind.AMP, position, position + 1);\n\n      case 0x0028:\n        // (\n        return createToken(lexer, TokenKind.PAREN_L, position, position + 1);\n\n      case 0x0029:\n        // )\n        return createToken(lexer, TokenKind.PAREN_R, position, position + 1);\n\n      case 0x002e:\n        // .\n        if (\n          body.charCodeAt(position + 1) === 0x002e &&\n          body.charCodeAt(position + 2) === 0x002e\n        ) {\n          return createToken(lexer, TokenKind.SPREAD, position, position + 3);\n        }\n\n        break;\n\n      case 0x003a:\n        // :\n        return createToken(lexer, TokenKind.COLON, position, position + 1);\n\n      case 0x003d:\n        // =\n        return createToken(lexer, TokenKind.EQUALS, position, position + 1);\n\n      case 0x0040:\n        // @\n        return createToken(lexer, TokenKind.AT, position, position + 1);\n\n      case 0x005b:\n        // [\n        return createToken(lexer, TokenKind.BRACKET_L, position, position + 1);\n\n      case 0x005d:\n        // ]\n        return createToken(lexer, TokenKind.BRACKET_R, position, position + 1);\n\n      case 0x007b:\n        // {\n        return createToken(lexer, TokenKind.BRACE_L, position, position + 1);\n\n      case 0x007c:\n        // |\n        return createToken(lexer, TokenKind.PIPE, position, position + 1);\n\n      case 0x007d:\n        // }\n        return createToken(lexer, TokenKind.BRACE_R, position, position + 1);\n      // StringValue\n\n      case 0x0022:\n        // \"\n        if (\n          body.charCodeAt(position + 1) === 0x0022 &&\n          body.charCodeAt(position + 2) === 0x0022\n        ) {\n          return readBlockString(lexer, position);\n        }\n\n        return readString(lexer, position);\n    } // IntValue | FloatValue (Digit | -)\n\n    if (isDigit(code) || code === 0x002d) {\n      return readNumber(lexer, position, code);\n    } // Name\n\n    if (isNameStart(code)) {\n      return readName(lexer, position);\n    }\n\n    throw syntaxError(\n      lexer.source,\n      position,\n      code === 0x0027\n        ? 'Unexpected single quote character (\\'), did you mean to use a double quote (\")?'\n        : isUnicodeScalarValue(code) || isSupplementaryCodePoint(body, position)\n        ? `Unexpected character: ${printCodePointAt(lexer, position)}.`\n        : `Invalid character: ${printCodePointAt(lexer, position)}.`,\n    );\n  }\n\n  return createToken(lexer, TokenKind.EOF, bodyLength, bodyLength);\n}\n/**\n * Reads a comment token from the source file.\n *\n * ```\n * Comment :: # CommentChar* [lookahead != CommentChar]\n *\n * CommentChar :: SourceCharacter but not LineTerminator\n * ```\n */\n\nfunction readComment(lexer, start) {\n  const body = lexer.source.body;\n  const bodyLength = body.length;\n  let position = start + 1;\n\n  while (position < bodyLength) {\n    const code = body.charCodeAt(position); // LineTerminator (\\n | \\r)\n\n    if (code === 0x000a || code === 0x000d) {\n      break;\n    } // SourceCharacter\n\n    if (isUnicodeScalarValue(code)) {\n      ++position;\n    } else if (isSupplementaryCodePoint(body, position)) {\n      position += 2;\n    } else {\n      break;\n    }\n  }\n\n  return createToken(\n    lexer,\n    TokenKind.COMMENT,\n    start,\n    position,\n    body.slice(start + 1, position),\n  );\n}\n/**\n * Reads a number token from the source file, either a FloatValue or an IntValue\n * depending on whether a FractionalPart or ExponentPart is encountered.\n *\n * ```\n * IntValue :: IntegerPart [lookahead != {Digit, `.`, NameStart}]\n *\n * IntegerPart ::\n *   - NegativeSign? 0\n *   - NegativeSign? NonZeroDigit Digit*\n *\n * NegativeSign :: -\n *\n * NonZeroDigit :: Digit but not `0`\n *\n * FloatValue ::\n *   - IntegerPart FractionalPart ExponentPart [lookahead != {Digit, `.`, NameStart}]\n *   - IntegerPart FractionalPart [lookahead != {Digit, `.`, NameStart}]\n *   - IntegerPart ExponentPart [lookahead != {Digit, `.`, NameStart}]\n *\n * FractionalPart :: . Digit+\n *\n * ExponentPart :: ExponentIndicator Sign? Digit+\n *\n * ExponentIndicator :: one of `e` `E`\n *\n * Sign :: one of + -\n * ```\n */\n\nfunction readNumber(lexer, start, firstCode) {\n  const body = lexer.source.body;\n  let position = start;\n  let code = firstCode;\n  let isFloat = false; // NegativeSign (-)\n\n  if (code === 0x002d) {\n    code = body.charCodeAt(++position);\n  } // Zero (0)\n\n  if (code === 0x0030) {\n    code = body.charCodeAt(++position);\n\n    if (isDigit(code)) {\n      throw syntaxError(\n        lexer.source,\n        position,\n        `Invalid number, unexpected digit after 0: ${printCodePointAt(\n          lexer,\n          position,\n        )}.`,\n      );\n    }\n  } else {\n    position = readDigits(lexer, position, code);\n    code = body.charCodeAt(position);\n  } // Full stop (.)\n\n  if (code === 0x002e) {\n    isFloat = true;\n    code = body.charCodeAt(++position);\n    position = readDigits(lexer, position, code);\n    code = body.charCodeAt(position);\n  } // E e\n\n  if (code === 0x0045 || code === 0x0065) {\n    isFloat = true;\n    code = body.charCodeAt(++position); // + -\n\n    if (code === 0x002b || code === 0x002d) {\n      code = body.charCodeAt(++position);\n    }\n\n    position = readDigits(lexer, position, code);\n    code = body.charCodeAt(position);\n  } // Numbers cannot be followed by . or NameStart\n\n  if (code === 0x002e || isNameStart(code)) {\n    throw syntaxError(\n      lexer.source,\n      position,\n      `Invalid number, expected digit but got: ${printCodePointAt(\n        lexer,\n        position,\n      )}.`,\n    );\n  }\n\n  return createToken(\n    lexer,\n    isFloat ? TokenKind.FLOAT : TokenKind.INT,\n    start,\n    position,\n    body.slice(start, position),\n  );\n}\n/**\n * Returns the new position in the source after reading one or more digits.\n */\n\nfunction readDigits(lexer, start, firstCode) {\n  if (!isDigit(firstCode)) {\n    throw syntaxError(\n      lexer.source,\n      start,\n      `Invalid number, expected digit but got: ${printCodePointAt(\n        lexer,\n        start,\n      )}.`,\n    );\n  }\n\n  const body = lexer.source.body;\n  let position = start + 1; // +1 to skip first firstCode\n\n  while (isDigit(body.charCodeAt(position))) {\n    ++position;\n  }\n\n  return position;\n}\n/**\n * Reads a single-quote string token from the source file.\n *\n * ```\n * StringValue ::\n *   - `\"\"` [lookahead != `\"`]\n *   - `\"` StringCharacter+ `\"`\n *\n * StringCharacter ::\n *   - SourceCharacter but not `\"` or `\\` or LineTerminator\n *   - `\\u` EscapedUnicode\n *   - `\\` EscapedCharacter\n *\n * EscapedUnicode ::\n *   - `{` HexDigit+ `}`\n *   - HexDigit HexDigit HexDigit HexDigit\n *\n * EscapedCharacter :: one of `\"` `\\` `/` `b` `f` `n` `r` `t`\n * ```\n */\n\nfunction readString(lexer, start) {\n  const body = lexer.source.body;\n  const bodyLength = body.length;\n  let position = start + 1;\n  let chunkStart = position;\n  let value = '';\n\n  while (position < bodyLength) {\n    const code = body.charCodeAt(position); // Closing Quote (\")\n\n    if (code === 0x0022) {\n      value += body.slice(chunkStart, position);\n      return createToken(lexer, TokenKind.STRING, start, position + 1, value);\n    } // Escape Sequence (\\)\n\n    if (code === 0x005c) {\n      value += body.slice(chunkStart, position);\n      const escape =\n        body.charCodeAt(position + 1) === 0x0075 // u\n          ? body.charCodeAt(position + 2) === 0x007b // {\n            ? readEscapedUnicodeVariableWidth(lexer, position)\n            : readEscapedUnicodeFixedWidth(lexer, position)\n          : readEscapedCharacter(lexer, position);\n      value += escape.value;\n      position += escape.size;\n      chunkStart = position;\n      continue;\n    } // LineTerminator (\\n | \\r)\n\n    if (code === 0x000a || code === 0x000d) {\n      break;\n    } // SourceCharacter\n\n    if (isUnicodeScalarValue(code)) {\n      ++position;\n    } else if (isSupplementaryCodePoint(body, position)) {\n      position += 2;\n    } else {\n      throw syntaxError(\n        lexer.source,\n        position,\n        `Invalid character within String: ${printCodePointAt(\n          lexer,\n          position,\n        )}.`,\n      );\n    }\n  }\n\n  throw syntaxError(lexer.source, position, 'Unterminated string.');\n} // The string value and lexed size of an escape sequence.\n\nfunction readEscapedUnicodeVariableWidth(lexer, position) {\n  const body = lexer.source.body;\n  let point = 0;\n  let size = 3; // Cannot be larger than 12 chars (\\u{00000000}).\n\n  while (size < 12) {\n    const code = body.charCodeAt(position + size++); // Closing Brace (})\n\n    if (code === 0x007d) {\n      // Must be at least 5 chars (\\u{0}) and encode a Unicode scalar value.\n      if (size < 5 || !isUnicodeScalarValue(point)) {\n        break;\n      }\n\n      return {\n        value: String.fromCodePoint(point),\n        size,\n      };\n    } // Append this hex digit to the code point.\n\n    point = (point << 4) | readHexDigit(code);\n\n    if (point < 0) {\n      break;\n    }\n  }\n\n  throw syntaxError(\n    lexer.source,\n    position,\n    `Invalid Unicode escape sequence: \"${body.slice(\n      position,\n      position + size,\n    )}\".`,\n  );\n}\n\nfunction readEscapedUnicodeFixedWidth(lexer, position) {\n  const body = lexer.source.body;\n  const code = read16BitHexCode(body, position + 2);\n\n  if (isUnicodeScalarValue(code)) {\n    return {\n      value: String.fromCodePoint(code),\n      size: 6,\n    };\n  } // GraphQL allows JSON-style surrogate pair escape sequences, but only when\n  // a valid pair is formed.\n\n  if (isLeadingSurrogate(code)) {\n    // \\u\n    if (\n      body.charCodeAt(position + 6) === 0x005c &&\n      body.charCodeAt(position + 7) === 0x0075\n    ) {\n      const trailingCode = read16BitHexCode(body, position + 8);\n\n      if (isTrailingSurrogate(trailingCode)) {\n        // JavaScript defines strings as a sequence of UTF-16 code units and\n        // encodes Unicode code points above U+FFFF using a surrogate pair of\n        // code units. Since this is a surrogate pair escape sequence, just\n        // include both codes into the JavaScript string value. Had JavaScript\n        // not been internally based on UTF-16, then this surrogate pair would\n        // be decoded to retrieve the supplementary code point.\n        return {\n          value: String.fromCodePoint(code, trailingCode),\n          size: 12,\n        };\n      }\n    }\n  }\n\n  throw syntaxError(\n    lexer.source,\n    position,\n    `Invalid Unicode escape sequence: \"${body.slice(position, position + 6)}\".`,\n  );\n}\n/**\n * Reads four hexadecimal characters and returns the positive integer that 16bit\n * hexadecimal string represents. For example, \"000f\" will return 15, and \"dead\"\n * will return 57005.\n *\n * Returns a negative number if any char was not a valid hexadecimal digit.\n */\n\nfunction read16BitHexCode(body, position) {\n  // readHexDigit() returns -1 on error. ORing a negative value with any other\n  // value always produces a negative value.\n  return (\n    (readHexDigit(body.charCodeAt(position)) << 12) |\n    (readHexDigit(body.charCodeAt(position + 1)) << 8) |\n    (readHexDigit(body.charCodeAt(position + 2)) << 4) |\n    readHexDigit(body.charCodeAt(position + 3))\n  );\n}\n/**\n * Reads a hexadecimal character and returns its positive integer value (0-15).\n *\n * '0' becomes 0, '9' becomes 9\n * 'A' becomes 10, 'F' becomes 15\n * 'a' becomes 10, 'f' becomes 15\n *\n * Returns -1 if the provided character code was not a valid hexadecimal digit.\n *\n * HexDigit :: one of\n *   - `0` `1` `2` `3` `4` `5` `6` `7` `8` `9`\n *   - `A` `B` `C` `D` `E` `F`\n *   - `a` `b` `c` `d` `e` `f`\n */\n\nfunction readHexDigit(code) {\n  return code >= 0x0030 && code <= 0x0039 // 0-9\n    ? code - 0x0030\n    : code >= 0x0041 && code <= 0x0046 // A-F\n    ? code - 0x0037\n    : code >= 0x0061 && code <= 0x0066 // a-f\n    ? code - 0x0057\n    : -1;\n}\n/**\n * | Escaped Character | Code Point | Character Name               |\n * | ----------------- | ---------- | ---------------------------- |\n * | `\"`               | U+0022     | double quote                 |\n * | `\\`               | U+005C     | reverse solidus (back slash) |\n * | `/`               | U+002F     | solidus (forward slash)      |\n * | `b`               | U+0008     | backspace                    |\n * | `f`               | U+000C     | form feed                    |\n * | `n`               | U+000A     | line feed (new line)         |\n * | `r`               | U+000D     | carriage return              |\n * | `t`               | U+0009     | horizontal tab               |\n */\n\nfunction readEscapedCharacter(lexer, position) {\n  const body = lexer.source.body;\n  const code = body.charCodeAt(position + 1);\n\n  switch (code) {\n    case 0x0022:\n      // \"\n      return {\n        value: '\\u0022',\n        size: 2,\n      };\n\n    case 0x005c:\n      // \\\n      return {\n        value: '\\u005c',\n        size: 2,\n      };\n\n    case 0x002f:\n      // /\n      return {\n        value: '\\u002f',\n        size: 2,\n      };\n\n    case 0x0062:\n      // b\n      return {\n        value: '\\u0008',\n        size: 2,\n      };\n\n    case 0x0066:\n      // f\n      return {\n        value: '\\u000c',\n        size: 2,\n      };\n\n    case 0x006e:\n      // n\n      return {\n        value: '\\u000a',\n        size: 2,\n      };\n\n    case 0x0072:\n      // r\n      return {\n        value: '\\u000d',\n        size: 2,\n      };\n\n    case 0x0074:\n      // t\n      return {\n        value: '\\u0009',\n        size: 2,\n      };\n  }\n\n  throw syntaxError(\n    lexer.source,\n    position,\n    `Invalid character escape sequence: \"${body.slice(\n      position,\n      position + 2,\n    )}\".`,\n  );\n}\n/**\n * Reads a block string token from the source file.\n *\n * ```\n * StringValue ::\n *   - `\"\"\"` BlockStringCharacter* `\"\"\"`\n *\n * BlockStringCharacter ::\n *   - SourceCharacter but not `\"\"\"` or `\\\"\"\"`\n *   - `\\\"\"\"`\n * ```\n */\n\nfunction readBlockString(lexer, start) {\n  const body = lexer.source.body;\n  const bodyLength = body.length;\n  let lineStart = lexer.lineStart;\n  let position = start + 3;\n  let chunkStart = position;\n  let currentLine = '';\n  const blockLines = [];\n\n  while (position < bodyLength) {\n    const code = body.charCodeAt(position); // Closing Triple-Quote (\"\"\")\n\n    if (\n      code === 0x0022 &&\n      body.charCodeAt(position + 1) === 0x0022 &&\n      body.charCodeAt(position + 2) === 0x0022\n    ) {\n      currentLine += body.slice(chunkStart, position);\n      blockLines.push(currentLine);\n      const token = createToken(\n        lexer,\n        TokenKind.BLOCK_STRING,\n        start,\n        position + 3, // Return a string of the lines joined with U+000A.\n        dedentBlockStringLines(blockLines).join('\\n'),\n      );\n      lexer.line += blockLines.length - 1;\n      lexer.lineStart = lineStart;\n      return token;\n    } // Escaped Triple-Quote (\\\"\"\")\n\n    if (\n      code === 0x005c &&\n      body.charCodeAt(position + 1) === 0x0022 &&\n      body.charCodeAt(position + 2) === 0x0022 &&\n      body.charCodeAt(position + 3) === 0x0022\n    ) {\n      currentLine += body.slice(chunkStart, position);\n      chunkStart = position + 1; // skip only slash\n\n      position += 4;\n      continue;\n    } // LineTerminator\n\n    if (code === 0x000a || code === 0x000d) {\n      currentLine += body.slice(chunkStart, position);\n      blockLines.push(currentLine);\n\n      if (code === 0x000d && body.charCodeAt(position + 1) === 0x000a) {\n        position += 2;\n      } else {\n        ++position;\n      }\n\n      currentLine = '';\n      chunkStart = position;\n      lineStart = position;\n      continue;\n    } // SourceCharacter\n\n    if (isUnicodeScalarValue(code)) {\n      ++position;\n    } else if (isSupplementaryCodePoint(body, position)) {\n      position += 2;\n    } else {\n      throw syntaxError(\n        lexer.source,\n        position,\n        `Invalid character within String: ${printCodePointAt(\n          lexer,\n          position,\n        )}.`,\n      );\n    }\n  }\n\n  throw syntaxError(lexer.source, position, 'Unterminated string.');\n}\n/**\n * Reads an alphanumeric + underscore name from the source.\n *\n * ```\n * Name ::\n *   - NameStart NameContinue* [lookahead != NameContinue]\n * ```\n */\n\nfunction readName(lexer, start) {\n  const body = lexer.source.body;\n  const bodyLength = body.length;\n  let position = start + 1;\n\n  while (position < bodyLength) {\n    const code = body.charCodeAt(position);\n\n    if (isNameContinue(code)) {\n      ++position;\n    } else {\n      break;\n    }\n  }\n\n  return createToken(\n    lexer,\n    TokenKind.NAME,\n    start,\n    position,\n    body.slice(start, position),\n  );\n}\n","import { inspect } from './inspect.mjs';\n/* c8 ignore next 3 */\n\nconst isProduction =\n  globalThis.process && // eslint-disable-next-line no-undef\n  process.env.NODE_ENV === 'production';\n/**\n * A replacement for instanceof which includes an error warning when multi-realm\n * constructors are detected.\n * See: https://expressjs.com/en/advanced/best-practice-performance.html#set-node_env-to-production\n * See: https://webpack.js.org/guides/production/\n */\n\nexport const instanceOf =\n  /* c8 ignore next 6 */\n  // FIXME: https://github.com/graphql/graphql-js/issues/2317\n  isProduction\n    ? function instanceOf(value, constructor) {\n        return value instanceof constructor;\n      }\n    : function instanceOf(value, constructor) {\n        if (value instanceof constructor) {\n          return true;\n        }\n\n        if (typeof value === 'object' && value !== null) {\n          var _value$constructor;\n\n          // Prefer Symbol.toStringTag since it is immune to minification.\n          const className = constructor.prototype[Symbol.toStringTag];\n          const valueClassName = // We still need to support constructor's name to detect conflicts with older versions of this library.\n            Symbol.toStringTag in value // @ts-expect-error TS bug see, https://github.com/microsoft/TypeScript/issues/38009\n              ? value[Symbol.toStringTag]\n              : (_value$constructor = value.constructor) === null ||\n                _value$constructor === void 0\n              ? void 0\n              : _value$constructor.name;\n\n          if (className === valueClassName) {\n            const stringifiedValue = inspect(value);\n            throw new Error(`Cannot use ${className} \"${stringifiedValue}\" from another module or realm.\n\nEnsure that there is only one instance of \"graphql\" in the node_modules\ndirectory. If different versions of \"graphql\" are the dependencies of other\nrelied on modules, use \"resolutions\" to ensure only one version is installed.\n\nhttps://yarnpkg.com/en/docs/selective-version-resolutions\n\nDuplicate \"graphql\" modules cannot be used at the same time since different\nversions may have different capabilities and behavior. The data from one\nversion used in the function from another could produce confusing and\nspurious results.`);\n          }\n        }\n\n        return false;\n      };\n","import { devAssert } from '../jsutils/devAssert.mjs';\nimport { inspect } from '../jsutils/inspect.mjs';\nimport { instanceOf } from '../jsutils/instanceOf.mjs';\n\n/**\n * A representation of source input to GraphQL. The `name` and `locationOffset` parameters are\n * optional, but they are useful for clients who store GraphQL documents in source files.\n * For example, if the GraphQL input starts at line 40 in a file named `Foo.graphql`, it might\n * be useful for `name` to be `\"Foo.graphql\"` and location to be `{ line: 40, column: 1 }`.\n * The `line` and `column` properties in `locationOffset` are 1-indexed.\n */\nexport class Source {\n  constructor(\n    body,\n    name = 'GraphQL request',\n    locationOffset = {\n      line: 1,\n      column: 1,\n    },\n  ) {\n    typeof body === 'string' ||\n      devAssert(false, `Body must be a string. Received: ${inspect(body)}.`);\n    this.body = body;\n    this.name = name;\n    this.locationOffset = locationOffset;\n    this.locationOffset.line > 0 ||\n      devAssert(\n        false,\n        'line in locationOffset is 1-indexed and must be positive.',\n      );\n    this.locationOffset.column > 0 ||\n      devAssert(\n        false,\n        'column in locationOffset is 1-indexed and must be positive.',\n      );\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Source';\n  }\n}\n/**\n * Test if the given value is a Source object.\n *\n * @internal\n */\n\nexport function isSource(source) {\n  return instanceOf(source, Source);\n}\n","import { syntaxError } from '../error/syntaxError.mjs';\nimport { Location, OperationTypeNode } from './ast.mjs';\nimport { DirectiveLocation } from './directiveLocation.mjs';\nimport { Kind } from './kinds.mjs';\nimport { isPunctuatorTokenKind, Lexer } from './lexer.mjs';\nimport { isSource, Source } from './source.mjs';\nimport { TokenKind } from './tokenKind.mjs';\n/**\n * Configuration options to control parser behavior\n */\n\n/**\n * Given a GraphQL source, parses it into a Document.\n * Throws GraphQLError if a syntax error is encountered.\n */\nexport function parse(source, options) {\n  const parser = new Parser(source, options);\n  return parser.parseDocument();\n}\n/**\n * Given a string containing a GraphQL value (ex. `[42]`), parse the AST for\n * that value.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Values directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: valueFromAST().\n */\n\nexport function parseValue(source, options) {\n  const parser = new Parser(source, options);\n  parser.expectToken(TokenKind.SOF);\n  const value = parser.parseValueLiteral(false);\n  parser.expectToken(TokenKind.EOF);\n  return value;\n}\n/**\n * Similar to parseValue(), but raises a parse error if it encounters a\n * variable. The return type will be a constant value.\n */\n\nexport function parseConstValue(source, options) {\n  const parser = new Parser(source, options);\n  parser.expectToken(TokenKind.SOF);\n  const value = parser.parseConstValueLiteral();\n  parser.expectToken(TokenKind.EOF);\n  return value;\n}\n/**\n * Given a string containing a GraphQL Type (ex. `[Int!]`), parse the AST for\n * that type.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Types directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: typeFromAST().\n */\n\nexport function parseType(source, options) {\n  const parser = new Parser(source, options);\n  parser.expectToken(TokenKind.SOF);\n  const type = parser.parseTypeReference();\n  parser.expectToken(TokenKind.EOF);\n  return type;\n}\n/**\n * This class is exported only to assist people in implementing their own parsers\n * without duplicating too much code and should be used only as last resort for cases\n * such as experimental syntax or if certain features could not be contributed upstream.\n *\n * It is still part of the internal API and is versioned, so any changes to it are never\n * considered breaking changes. If you still need to support multiple versions of the\n * library, please use the `versionInfo` variable for version detection.\n *\n * @internal\n */\n\nexport class Parser {\n  constructor(source, options = {}) {\n    const sourceObj = isSource(source) ? source : new Source(source);\n    this._lexer = new Lexer(sourceObj);\n    this._options = options;\n    this._tokenCounter = 0;\n  }\n  /**\n   * Converts a name lex token into a name parse node.\n   */\n\n  parseName() {\n    const token = this.expectToken(TokenKind.NAME);\n    return this.node(token, {\n      kind: Kind.NAME,\n      value: token.value,\n    });\n  } // Implements the parsing rules in the Document section.\n\n  /**\n   * Document : Definition+\n   */\n\n  parseDocument() {\n    return this.node(this._lexer.token, {\n      kind: Kind.DOCUMENT,\n      definitions: this.many(\n        TokenKind.SOF,\n        this.parseDefinition,\n        TokenKind.EOF,\n      ),\n    });\n  }\n  /**\n   * Definition :\n   *   - ExecutableDefinition\n   *   - TypeSystemDefinition\n   *   - TypeSystemExtension\n   *\n   * ExecutableDefinition :\n   *   - OperationDefinition\n   *   - FragmentDefinition\n   *\n   * TypeSystemDefinition :\n   *   - SchemaDefinition\n   *   - TypeDefinition\n   *   - DirectiveDefinition\n   *\n   * TypeDefinition :\n   *   - ScalarTypeDefinition\n   *   - ObjectTypeDefinition\n   *   - InterfaceTypeDefinition\n   *   - UnionTypeDefinition\n   *   - EnumTypeDefinition\n   *   - InputObjectTypeDefinition\n   */\n\n  parseDefinition() {\n    if (this.peek(TokenKind.BRACE_L)) {\n      return this.parseOperationDefinition();\n    } // Many definitions begin with a description and require a lookahead.\n\n    const hasDescription = this.peekDescription();\n    const keywordToken = hasDescription\n      ? this._lexer.lookahead()\n      : this._lexer.token;\n\n    if (keywordToken.kind === TokenKind.NAME) {\n      switch (keywordToken.value) {\n        case 'schema':\n          return this.parseSchemaDefinition();\n\n        case 'scalar':\n          return this.parseScalarTypeDefinition();\n\n        case 'type':\n          return this.parseObjectTypeDefinition();\n\n        case 'interface':\n          return this.parseInterfaceTypeDefinition();\n\n        case 'union':\n          return this.parseUnionTypeDefinition();\n\n        case 'enum':\n          return this.parseEnumTypeDefinition();\n\n        case 'input':\n          return this.parseInputObjectTypeDefinition();\n\n        case 'directive':\n          return this.parseDirectiveDefinition();\n      }\n\n      if (hasDescription) {\n        throw syntaxError(\n          this._lexer.source,\n          this._lexer.token.start,\n          'Unexpected description, descriptions are supported only on type definitions.',\n        );\n      }\n\n      switch (keywordToken.value) {\n        case 'query':\n        case 'mutation':\n        case 'subscription':\n          return this.parseOperationDefinition();\n\n        case 'fragment':\n          return this.parseFragmentDefinition();\n\n        case 'extend':\n          return this.parseTypeSystemExtension();\n      }\n    }\n\n    throw this.unexpected(keywordToken);\n  } // Implements the parsing rules in the Operations section.\n\n  /**\n   * OperationDefinition :\n   *  - SelectionSet\n   *  - OperationType Name? VariableDefinitions? Directives? SelectionSet\n   */\n\n  parseOperationDefinition() {\n    const start = this._lexer.token;\n\n    if (this.peek(TokenKind.BRACE_L)) {\n      return this.node(start, {\n        kind: Kind.OPERATION_DEFINITION,\n        operation: OperationTypeNode.QUERY,\n        name: undefined,\n        variableDefinitions: [],\n        directives: [],\n        selectionSet: this.parseSelectionSet(),\n      });\n    }\n\n    const operation = this.parseOperationType();\n    let name;\n\n    if (this.peek(TokenKind.NAME)) {\n      name = this.parseName();\n    }\n\n    return this.node(start, {\n      kind: Kind.OPERATION_DEFINITION,\n      operation,\n      name,\n      variableDefinitions: this.parseVariableDefinitions(),\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n    });\n  }\n  /**\n   * OperationType : one of query mutation subscription\n   */\n\n  parseOperationType() {\n    const operationToken = this.expectToken(TokenKind.NAME);\n\n    switch (operationToken.value) {\n      case 'query':\n        return OperationTypeNode.QUERY;\n\n      case 'mutation':\n        return OperationTypeNode.MUTATION;\n\n      case 'subscription':\n        return OperationTypeNode.SUBSCRIPTION;\n    }\n\n    throw this.unexpected(operationToken);\n  }\n  /**\n   * VariableDefinitions : ( VariableDefinition+ )\n   */\n\n  parseVariableDefinitions() {\n    return this.optionalMany(\n      TokenKind.PAREN_L,\n      this.parseVariableDefinition,\n      TokenKind.PAREN_R,\n    );\n  }\n  /**\n   * VariableDefinition : Variable : Type DefaultValue? Directives[Const]?\n   */\n\n  parseVariableDefinition() {\n    return this.node(this._lexer.token, {\n      kind: Kind.VARIABLE_DEFINITION,\n      variable: this.parseVariable(),\n      type: (this.expectToken(TokenKind.COLON), this.parseTypeReference()),\n      defaultValue: this.expectOptionalToken(TokenKind.EQUALS)\n        ? this.parseConstValueLiteral()\n        : undefined,\n      directives: this.parseConstDirectives(),\n    });\n  }\n  /**\n   * Variable : $ Name\n   */\n\n  parseVariable() {\n    const start = this._lexer.token;\n    this.expectToken(TokenKind.DOLLAR);\n    return this.node(start, {\n      kind: Kind.VARIABLE,\n      name: this.parseName(),\n    });\n  }\n  /**\n   * ```\n   * SelectionSet : { Selection+ }\n   * ```\n   */\n\n  parseSelectionSet() {\n    return this.node(this._lexer.token, {\n      kind: Kind.SELECTION_SET,\n      selections: this.many(\n        TokenKind.BRACE_L,\n        this.parseSelection,\n        TokenKind.BRACE_R,\n      ),\n    });\n  }\n  /**\n   * Selection :\n   *   - Field\n   *   - FragmentSpread\n   *   - InlineFragment\n   */\n\n  parseSelection() {\n    return this.peek(TokenKind.SPREAD)\n      ? this.parseFragment()\n      : this.parseField();\n  }\n  /**\n   * Field : Alias? Name Arguments? Directives? SelectionSet?\n   *\n   * Alias : Name :\n   */\n\n  parseField() {\n    const start = this._lexer.token;\n    const nameOrAlias = this.parseName();\n    let alias;\n    let name;\n\n    if (this.expectOptionalToken(TokenKind.COLON)) {\n      alias = nameOrAlias;\n      name = this.parseName();\n    } else {\n      name = nameOrAlias;\n    }\n\n    return this.node(start, {\n      kind: Kind.FIELD,\n      alias,\n      name,\n      arguments: this.parseArguments(false),\n      directives: this.parseDirectives(false),\n      selectionSet: this.peek(TokenKind.BRACE_L)\n        ? this.parseSelectionSet()\n        : undefined,\n    });\n  }\n  /**\n   * Arguments[Const] : ( Argument[?Const]+ )\n   */\n\n  parseArguments(isConst) {\n    const item = isConst ? this.parseConstArgument : this.parseArgument;\n    return this.optionalMany(TokenKind.PAREN_L, item, TokenKind.PAREN_R);\n  }\n  /**\n   * Argument[Const] : Name : Value[?Const]\n   */\n\n  parseArgument(isConst = false) {\n    const start = this._lexer.token;\n    const name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    return this.node(start, {\n      kind: Kind.ARGUMENT,\n      name,\n      value: this.parseValueLiteral(isConst),\n    });\n  }\n\n  parseConstArgument() {\n    return this.parseArgument(true);\n  } // Implements the parsing rules in the Fragments section.\n\n  /**\n   * Corresponds to both FragmentSpread and InlineFragment in the spec.\n   *\n   * FragmentSpread : ... FragmentName Directives?\n   *\n   * InlineFragment : ... TypeCondition? Directives? SelectionSet\n   */\n\n  parseFragment() {\n    const start = this._lexer.token;\n    this.expectToken(TokenKind.SPREAD);\n    const hasTypeCondition = this.expectOptionalKeyword('on');\n\n    if (!hasTypeCondition && this.peek(TokenKind.NAME)) {\n      return this.node(start, {\n        kind: Kind.FRAGMENT_SPREAD,\n        name: this.parseFragmentName(),\n        directives: this.parseDirectives(false),\n      });\n    }\n\n    return this.node(start, {\n      kind: Kind.INLINE_FRAGMENT,\n      typeCondition: hasTypeCondition ? this.parseNamedType() : undefined,\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n    });\n  }\n  /**\n   * FragmentDefinition :\n   *   - fragment FragmentName on TypeCondition Directives? SelectionSet\n   *\n   * TypeCondition : NamedType\n   */\n\n  parseFragmentDefinition() {\n    const start = this._lexer.token;\n    this.expectKeyword('fragment'); // Legacy support for defining variables within fragments changes\n    // the grammar of FragmentDefinition:\n    //   - fragment FragmentName VariableDefinitions? on TypeCondition Directives? SelectionSet\n\n    if (this._options.allowLegacyFragmentVariables === true) {\n      return this.node(start, {\n        kind: Kind.FRAGMENT_DEFINITION,\n        name: this.parseFragmentName(),\n        variableDefinitions: this.parseVariableDefinitions(),\n        typeCondition: (this.expectKeyword('on'), this.parseNamedType()),\n        directives: this.parseDirectives(false),\n        selectionSet: this.parseSelectionSet(),\n      });\n    }\n\n    return this.node(start, {\n      kind: Kind.FRAGMENT_DEFINITION,\n      name: this.parseFragmentName(),\n      typeCondition: (this.expectKeyword('on'), this.parseNamedType()),\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n    });\n  }\n  /**\n   * FragmentName : Name but not `on`\n   */\n\n  parseFragmentName() {\n    if (this._lexer.token.value === 'on') {\n      throw this.unexpected();\n    }\n\n    return this.parseName();\n  } // Implements the parsing rules in the Values section.\n\n  /**\n   * Value[Const] :\n   *   - [~Const] Variable\n   *   - IntValue\n   *   - FloatValue\n   *   - StringValue\n   *   - BooleanValue\n   *   - NullValue\n   *   - EnumValue\n   *   - ListValue[?Const]\n   *   - ObjectValue[?Const]\n   *\n   * BooleanValue : one of `true` `false`\n   *\n   * NullValue : `null`\n   *\n   * EnumValue : Name but not `true`, `false` or `null`\n   */\n\n  parseValueLiteral(isConst) {\n    const token = this._lexer.token;\n\n    switch (token.kind) {\n      case TokenKind.BRACKET_L:\n        return this.parseList(isConst);\n\n      case TokenKind.BRACE_L:\n        return this.parseObject(isConst);\n\n      case TokenKind.INT:\n        this.advanceLexer();\n        return this.node(token, {\n          kind: Kind.INT,\n          value: token.value,\n        });\n\n      case TokenKind.FLOAT:\n        this.advanceLexer();\n        return this.node(token, {\n          kind: Kind.FLOAT,\n          value: token.value,\n        });\n\n      case TokenKind.STRING:\n      case TokenKind.BLOCK_STRING:\n        return this.parseStringLiteral();\n\n      case TokenKind.NAME:\n        this.advanceLexer();\n\n        switch (token.value) {\n          case 'true':\n            return this.node(token, {\n              kind: Kind.BOOLEAN,\n              value: true,\n            });\n\n          case 'false':\n            return this.node(token, {\n              kind: Kind.BOOLEAN,\n              value: false,\n            });\n\n          case 'null':\n            return this.node(token, {\n              kind: Kind.NULL,\n            });\n\n          default:\n            return this.node(token, {\n              kind: Kind.ENUM,\n              value: token.value,\n            });\n        }\n\n      case TokenKind.DOLLAR:\n        if (isConst) {\n          this.expectToken(TokenKind.DOLLAR);\n\n          if (this._lexer.token.kind === TokenKind.NAME) {\n            const varName = this._lexer.token.value;\n            throw syntaxError(\n              this._lexer.source,\n              token.start,\n              `Unexpected variable \"$${varName}\" in constant value.`,\n            );\n          } else {\n            throw this.unexpected(token);\n          }\n        }\n\n        return this.parseVariable();\n\n      default:\n        throw this.unexpected();\n    }\n  }\n\n  parseConstValueLiteral() {\n    return this.parseValueLiteral(true);\n  }\n\n  parseStringLiteral() {\n    const token = this._lexer.token;\n    this.advanceLexer();\n    return this.node(token, {\n      kind: Kind.STRING,\n      value: token.value,\n      block: token.kind === TokenKind.BLOCK_STRING,\n    });\n  }\n  /**\n   * ListValue[Const] :\n   *   - [ ]\n   *   - [ Value[?Const]+ ]\n   */\n\n  parseList(isConst) {\n    const item = () => this.parseValueLiteral(isConst);\n\n    return this.node(this._lexer.token, {\n      kind: Kind.LIST,\n      values: this.any(TokenKind.BRACKET_L, item, TokenKind.BRACKET_R),\n    });\n  }\n  /**\n   * ```\n   * ObjectValue[Const] :\n   *   - { }\n   *   - { ObjectField[?Const]+ }\n   * ```\n   */\n\n  parseObject(isConst) {\n    const item = () => this.parseObjectField(isConst);\n\n    return this.node(this._lexer.token, {\n      kind: Kind.OBJECT,\n      fields: this.any(TokenKind.BRACE_L, item, TokenKind.BRACE_R),\n    });\n  }\n  /**\n   * ObjectField[Const] : Name : Value[?Const]\n   */\n\n  parseObjectField(isConst) {\n    const start = this._lexer.token;\n    const name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    return this.node(start, {\n      kind: Kind.OBJECT_FIELD,\n      name,\n      value: this.parseValueLiteral(isConst),\n    });\n  } // Implements the parsing rules in the Directives section.\n\n  /**\n   * Directives[Const] : Directive[?Const]+\n   */\n\n  parseDirectives(isConst) {\n    const directives = [];\n\n    while (this.peek(TokenKind.AT)) {\n      directives.push(this.parseDirective(isConst));\n    }\n\n    return directives;\n  }\n\n  parseConstDirectives() {\n    return this.parseDirectives(true);\n  }\n  /**\n   * ```\n   * Directive[Const] : @ Name Arguments[?Const]?\n   * ```\n   */\n\n  parseDirective(isConst) {\n    const start = this._lexer.token;\n    this.expectToken(TokenKind.AT);\n    return this.node(start, {\n      kind: Kind.DIRECTIVE,\n      name: this.parseName(),\n      arguments: this.parseArguments(isConst),\n    });\n  } // Implements the parsing rules in the Types section.\n\n  /**\n   * Type :\n   *   - NamedType\n   *   - ListType\n   *   - NonNullType\n   */\n\n  parseTypeReference() {\n    const start = this._lexer.token;\n    let type;\n\n    if (this.expectOptionalToken(TokenKind.BRACKET_L)) {\n      const innerType = this.parseTypeReference();\n      this.expectToken(TokenKind.BRACKET_R);\n      type = this.node(start, {\n        kind: Kind.LIST_TYPE,\n        type: innerType,\n      });\n    } else {\n      type = this.parseNamedType();\n    }\n\n    if (this.expectOptionalToken(TokenKind.BANG)) {\n      return this.node(start, {\n        kind: Kind.NON_NULL_TYPE,\n        type,\n      });\n    }\n\n    return type;\n  }\n  /**\n   * NamedType : Name\n   */\n\n  parseNamedType() {\n    return this.node(this._lexer.token, {\n      kind: Kind.NAMED_TYPE,\n      name: this.parseName(),\n    });\n  } // Implements the parsing rules in the Type Definition section.\n\n  peekDescription() {\n    return this.peek(TokenKind.STRING) || this.peek(TokenKind.BLOCK_STRING);\n  }\n  /**\n   * Description : StringValue\n   */\n\n  parseDescription() {\n    if (this.peekDescription()) {\n      return this.parseStringLiteral();\n    }\n  }\n  /**\n   * ```\n   * SchemaDefinition : Description? schema Directives[Const]? { OperationTypeDefinition+ }\n   * ```\n   */\n\n  parseSchemaDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('schema');\n    const directives = this.parseConstDirectives();\n    const operationTypes = this.many(\n      TokenKind.BRACE_L,\n      this.parseOperationTypeDefinition,\n      TokenKind.BRACE_R,\n    );\n    return this.node(start, {\n      kind: Kind.SCHEMA_DEFINITION,\n      description,\n      directives,\n      operationTypes,\n    });\n  }\n  /**\n   * OperationTypeDefinition : OperationType : NamedType\n   */\n\n  parseOperationTypeDefinition() {\n    const start = this._lexer.token;\n    const operation = this.parseOperationType();\n    this.expectToken(TokenKind.COLON);\n    const type = this.parseNamedType();\n    return this.node(start, {\n      kind: Kind.OPERATION_TYPE_DEFINITION,\n      operation,\n      type,\n    });\n  }\n  /**\n   * ScalarTypeDefinition : Description? scalar Name Directives[Const]?\n   */\n\n  parseScalarTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('scalar');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    return this.node(start, {\n      kind: Kind.SCALAR_TYPE_DEFINITION,\n      description,\n      name,\n      directives,\n    });\n  }\n  /**\n   * ObjectTypeDefinition :\n   *   Description?\n   *   type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition?\n   */\n\n  parseObjectTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('type');\n    const name = this.parseName();\n    const interfaces = this.parseImplementsInterfaces();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseFieldsDefinition();\n    return this.node(start, {\n      kind: Kind.OBJECT_TYPE_DEFINITION,\n      description,\n      name,\n      interfaces,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * ImplementsInterfaces :\n   *   - implements `&`? NamedType\n   *   - ImplementsInterfaces & NamedType\n   */\n\n  parseImplementsInterfaces() {\n    return this.expectOptionalKeyword('implements')\n      ? this.delimitedMany(TokenKind.AMP, this.parseNamedType)\n      : [];\n  }\n  /**\n   * ```\n   * FieldsDefinition : { FieldDefinition+ }\n   * ```\n   */\n\n  parseFieldsDefinition() {\n    return this.optionalMany(\n      TokenKind.BRACE_L,\n      this.parseFieldDefinition,\n      TokenKind.BRACE_R,\n    );\n  }\n  /**\n   * FieldDefinition :\n   *   - Description? Name ArgumentsDefinition? : Type Directives[Const]?\n   */\n\n  parseFieldDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    const name = this.parseName();\n    const args = this.parseArgumentDefs();\n    this.expectToken(TokenKind.COLON);\n    const type = this.parseTypeReference();\n    const directives = this.parseConstDirectives();\n    return this.node(start, {\n      kind: Kind.FIELD_DEFINITION,\n      description,\n      name,\n      arguments: args,\n      type,\n      directives,\n    });\n  }\n  /**\n   * ArgumentsDefinition : ( InputValueDefinition+ )\n   */\n\n  parseArgumentDefs() {\n    return this.optionalMany(\n      TokenKind.PAREN_L,\n      this.parseInputValueDef,\n      TokenKind.PAREN_R,\n    );\n  }\n  /**\n   * InputValueDefinition :\n   *   - Description? Name : Type DefaultValue? Directives[Const]?\n   */\n\n  parseInputValueDef() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    const name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    const type = this.parseTypeReference();\n    let defaultValue;\n\n    if (this.expectOptionalToken(TokenKind.EQUALS)) {\n      defaultValue = this.parseConstValueLiteral();\n    }\n\n    const directives = this.parseConstDirectives();\n    return this.node(start, {\n      kind: Kind.INPUT_VALUE_DEFINITION,\n      description,\n      name,\n      type,\n      defaultValue,\n      directives,\n    });\n  }\n  /**\n   * InterfaceTypeDefinition :\n   *   - Description? interface Name Directives[Const]? FieldsDefinition?\n   */\n\n  parseInterfaceTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('interface');\n    const name = this.parseName();\n    const interfaces = this.parseImplementsInterfaces();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseFieldsDefinition();\n    return this.node(start, {\n      kind: Kind.INTERFACE_TYPE_DEFINITION,\n      description,\n      name,\n      interfaces,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * UnionTypeDefinition :\n   *   - Description? union Name Directives[Const]? UnionMemberTypes?\n   */\n\n  parseUnionTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('union');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const types = this.parseUnionMemberTypes();\n    return this.node(start, {\n      kind: Kind.UNION_TYPE_DEFINITION,\n      description,\n      name,\n      directives,\n      types,\n    });\n  }\n  /**\n   * UnionMemberTypes :\n   *   - = `|`? NamedType\n   *   - UnionMemberTypes | NamedType\n   */\n\n  parseUnionMemberTypes() {\n    return this.expectOptionalToken(TokenKind.EQUALS)\n      ? this.delimitedMany(TokenKind.PIPE, this.parseNamedType)\n      : [];\n  }\n  /**\n   * EnumTypeDefinition :\n   *   - Description? enum Name Directives[Const]? EnumValuesDefinition?\n   */\n\n  parseEnumTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('enum');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const values = this.parseEnumValuesDefinition();\n    return this.node(start, {\n      kind: Kind.ENUM_TYPE_DEFINITION,\n      description,\n      name,\n      directives,\n      values,\n    });\n  }\n  /**\n   * ```\n   * EnumValuesDefinition : { EnumValueDefinition+ }\n   * ```\n   */\n\n  parseEnumValuesDefinition() {\n    return this.optionalMany(\n      TokenKind.BRACE_L,\n      this.parseEnumValueDefinition,\n      TokenKind.BRACE_R,\n    );\n  }\n  /**\n   * EnumValueDefinition : Description? EnumValue Directives[Const]?\n   */\n\n  parseEnumValueDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    const name = this.parseEnumValueName();\n    const directives = this.parseConstDirectives();\n    return this.node(start, {\n      kind: Kind.ENUM_VALUE_DEFINITION,\n      description,\n      name,\n      directives,\n    });\n  }\n  /**\n   * EnumValue : Name but not `true`, `false` or `null`\n   */\n\n  parseEnumValueName() {\n    if (\n      this._lexer.token.value === 'true' ||\n      this._lexer.token.value === 'false' ||\n      this._lexer.token.value === 'null'\n    ) {\n      throw syntaxError(\n        this._lexer.source,\n        this._lexer.token.start,\n        `${getTokenDesc(\n          this._lexer.token,\n        )} is reserved and cannot be used for an enum value.`,\n      );\n    }\n\n    return this.parseName();\n  }\n  /**\n   * InputObjectTypeDefinition :\n   *   - Description? input Name Directives[Const]? InputFieldsDefinition?\n   */\n\n  parseInputObjectTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('input');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseInputFieldsDefinition();\n    return this.node(start, {\n      kind: Kind.INPUT_OBJECT_TYPE_DEFINITION,\n      description,\n      name,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * ```\n   * InputFieldsDefinition : { InputValueDefinition+ }\n   * ```\n   */\n\n  parseInputFieldsDefinition() {\n    return this.optionalMany(\n      TokenKind.BRACE_L,\n      this.parseInputValueDef,\n      TokenKind.BRACE_R,\n    );\n  }\n  /**\n   * TypeSystemExtension :\n   *   - SchemaExtension\n   *   - TypeExtension\n   *\n   * TypeExtension :\n   *   - ScalarTypeExtension\n   *   - ObjectTypeExtension\n   *   - InterfaceTypeExtension\n   *   - UnionTypeExtension\n   *   - EnumTypeExtension\n   *   - InputObjectTypeDefinition\n   */\n\n  parseTypeSystemExtension() {\n    const keywordToken = this._lexer.lookahead();\n\n    if (keywordToken.kind === TokenKind.NAME) {\n      switch (keywordToken.value) {\n        case 'schema':\n          return this.parseSchemaExtension();\n\n        case 'scalar':\n          return this.parseScalarTypeExtension();\n\n        case 'type':\n          return this.parseObjectTypeExtension();\n\n        case 'interface':\n          return this.parseInterfaceTypeExtension();\n\n        case 'union':\n          return this.parseUnionTypeExtension();\n\n        case 'enum':\n          return this.parseEnumTypeExtension();\n\n        case 'input':\n          return this.parseInputObjectTypeExtension();\n      }\n    }\n\n    throw this.unexpected(keywordToken);\n  }\n  /**\n   * ```\n   * SchemaExtension :\n   *  - extend schema Directives[Const]? { OperationTypeDefinition+ }\n   *  - extend schema Directives[Const]\n   * ```\n   */\n\n  parseSchemaExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('schema');\n    const directives = this.parseConstDirectives();\n    const operationTypes = this.optionalMany(\n      TokenKind.BRACE_L,\n      this.parseOperationTypeDefinition,\n      TokenKind.BRACE_R,\n    );\n\n    if (directives.length === 0 && operationTypes.length === 0) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: Kind.SCHEMA_EXTENSION,\n      directives,\n      operationTypes,\n    });\n  }\n  /**\n   * ScalarTypeExtension :\n   *   - extend scalar Name Directives[Const]\n   */\n\n  parseScalarTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('scalar');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n\n    if (directives.length === 0) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: Kind.SCALAR_TYPE_EXTENSION,\n      name,\n      directives,\n    });\n  }\n  /**\n   * ObjectTypeExtension :\n   *  - extend type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition\n   *  - extend type Name ImplementsInterfaces? Directives[Const]\n   *  - extend type Name ImplementsInterfaces\n   */\n\n  parseObjectTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('type');\n    const name = this.parseName();\n    const interfaces = this.parseImplementsInterfaces();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseFieldsDefinition();\n\n    if (\n      interfaces.length === 0 &&\n      directives.length === 0 &&\n      fields.length === 0\n    ) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: Kind.OBJECT_TYPE_EXTENSION,\n      name,\n      interfaces,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * InterfaceTypeExtension :\n   *  - extend interface Name ImplementsInterfaces? Directives[Const]? FieldsDefinition\n   *  - extend interface Name ImplementsInterfaces? Directives[Const]\n   *  - extend interface Name ImplementsInterfaces\n   */\n\n  parseInterfaceTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('interface');\n    const name = this.parseName();\n    const interfaces = this.parseImplementsInterfaces();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseFieldsDefinition();\n\n    if (\n      interfaces.length === 0 &&\n      directives.length === 0 &&\n      fields.length === 0\n    ) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: Kind.INTERFACE_TYPE_EXTENSION,\n      name,\n      interfaces,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * UnionTypeExtension :\n   *   - extend union Name Directives[Const]? UnionMemberTypes\n   *   - extend union Name Directives[Const]\n   */\n\n  parseUnionTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('union');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const types = this.parseUnionMemberTypes();\n\n    if (directives.length === 0 && types.length === 0) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: Kind.UNION_TYPE_EXTENSION,\n      name,\n      directives,\n      types,\n    });\n  }\n  /**\n   * EnumTypeExtension :\n   *   - extend enum Name Directives[Const]? EnumValuesDefinition\n   *   - extend enum Name Directives[Const]\n   */\n\n  parseEnumTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('enum');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const values = this.parseEnumValuesDefinition();\n\n    if (directives.length === 0 && values.length === 0) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: Kind.ENUM_TYPE_EXTENSION,\n      name,\n      directives,\n      values,\n    });\n  }\n  /**\n   * InputObjectTypeExtension :\n   *   - extend input Name Directives[Const]? InputFieldsDefinition\n   *   - extend input Name Directives[Const]\n   */\n\n  parseInputObjectTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('input');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseInputFieldsDefinition();\n\n    if (directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: Kind.INPUT_OBJECT_TYPE_EXTENSION,\n      name,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * ```\n   * DirectiveDefinition :\n   *   - Description? directive @ Name ArgumentsDefinition? `repeatable`? on DirectiveLocations\n   * ```\n   */\n\n  parseDirectiveDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('directive');\n    this.expectToken(TokenKind.AT);\n    const name = this.parseName();\n    const args = this.parseArgumentDefs();\n    const repeatable = this.expectOptionalKeyword('repeatable');\n    this.expectKeyword('on');\n    const locations = this.parseDirectiveLocations();\n    return this.node(start, {\n      kind: Kind.DIRECTIVE_DEFINITION,\n      description,\n      name,\n      arguments: args,\n      repeatable,\n      locations,\n    });\n  }\n  /**\n   * DirectiveLocations :\n   *   - `|`? DirectiveLocation\n   *   - DirectiveLocations | DirectiveLocation\n   */\n\n  parseDirectiveLocations() {\n    return this.delimitedMany(TokenKind.PIPE, this.parseDirectiveLocation);\n  }\n  /*\n   * DirectiveLocation :\n   *   - ExecutableDirectiveLocation\n   *   - TypeSystemDirectiveLocation\n   *\n   * ExecutableDirectiveLocation : one of\n   *   `QUERY`\n   *   `MUTATION`\n   *   `SUBSCRIPTION`\n   *   `FIELD`\n   *   `FRAGMENT_DEFINITION`\n   *   `FRAGMENT_SPREAD`\n   *   `INLINE_FRAGMENT`\n   *\n   * TypeSystemDirectiveLocation : one of\n   *   `SCHEMA`\n   *   `SCALAR`\n   *   `OBJECT`\n   *   `FIELD_DEFINITION`\n   *   `ARGUMENT_DEFINITION`\n   *   `INTERFACE`\n   *   `UNION`\n   *   `ENUM`\n   *   `ENUM_VALUE`\n   *   `INPUT_OBJECT`\n   *   `INPUT_FIELD_DEFINITION`\n   */\n\n  parseDirectiveLocation() {\n    const start = this._lexer.token;\n    const name = this.parseName();\n\n    if (Object.prototype.hasOwnProperty.call(DirectiveLocation, name.value)) {\n      return name;\n    }\n\n    throw this.unexpected(start);\n  } // Core parsing utility functions\n\n  /**\n   * Returns a node that, if configured to do so, sets a \"loc\" field as a\n   * location object, used to identify the place in the source that created a\n   * given parsed object.\n   */\n\n  node(startToken, node) {\n    if (this._options.noLocation !== true) {\n      node.loc = new Location(\n        startToken,\n        this._lexer.lastToken,\n        this._lexer.source,\n      );\n    }\n\n    return node;\n  }\n  /**\n   * Determines if the next token is of a given kind\n   */\n\n  peek(kind) {\n    return this._lexer.token.kind === kind;\n  }\n  /**\n   * If the next token is of the given kind, return that token after advancing the lexer.\n   * Otherwise, do not change the parser state and throw an error.\n   */\n\n  expectToken(kind) {\n    const token = this._lexer.token;\n\n    if (token.kind === kind) {\n      this.advanceLexer();\n      return token;\n    }\n\n    throw syntaxError(\n      this._lexer.source,\n      token.start,\n      `Expected ${getTokenKindDesc(kind)}, found ${getTokenDesc(token)}.`,\n    );\n  }\n  /**\n   * If the next token is of the given kind, return \"true\" after advancing the lexer.\n   * Otherwise, do not change the parser state and return \"false\".\n   */\n\n  expectOptionalToken(kind) {\n    const token = this._lexer.token;\n\n    if (token.kind === kind) {\n      this.advanceLexer();\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * If the next token is a given keyword, advance the lexer.\n   * Otherwise, do not change the parser state and throw an error.\n   */\n\n  expectKeyword(value) {\n    const token = this._lexer.token;\n\n    if (token.kind === TokenKind.NAME && token.value === value) {\n      this.advanceLexer();\n    } else {\n      throw syntaxError(\n        this._lexer.source,\n        token.start,\n        `Expected \"${value}\", found ${getTokenDesc(token)}.`,\n      );\n    }\n  }\n  /**\n   * If the next token is a given keyword, return \"true\" after advancing the lexer.\n   * Otherwise, do not change the parser state and return \"false\".\n   */\n\n  expectOptionalKeyword(value) {\n    const token = this._lexer.token;\n\n    if (token.kind === TokenKind.NAME && token.value === value) {\n      this.advanceLexer();\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * Helper function for creating an error when an unexpected lexed token is encountered.\n   */\n\n  unexpected(atToken) {\n    const token =\n      atToken !== null && atToken !== void 0 ? atToken : this._lexer.token;\n    return syntaxError(\n      this._lexer.source,\n      token.start,\n      `Unexpected ${getTokenDesc(token)}.`,\n    );\n  }\n  /**\n   * Returns a possibly empty list of parse nodes, determined by the parseFn.\n   * This list begins with a lex token of openKind and ends with a lex token of closeKind.\n   * Advances the parser to the next lex token after the closing token.\n   */\n\n  any(openKind, parseFn, closeKind) {\n    this.expectToken(openKind);\n    const nodes = [];\n\n    while (!this.expectOptionalToken(closeKind)) {\n      nodes.push(parseFn.call(this));\n    }\n\n    return nodes;\n  }\n  /**\n   * Returns a list of parse nodes, determined by the parseFn.\n   * It can be empty only if open token is missing otherwise it will always return non-empty list\n   * that begins with a lex token of openKind and ends with a lex token of closeKind.\n   * Advances the parser to the next lex token after the closing token.\n   */\n\n  optionalMany(openKind, parseFn, closeKind) {\n    if (this.expectOptionalToken(openKind)) {\n      const nodes = [];\n\n      do {\n        nodes.push(parseFn.call(this));\n      } while (!this.expectOptionalToken(closeKind));\n\n      return nodes;\n    }\n\n    return [];\n  }\n  /**\n   * Returns a non-empty list of parse nodes, determined by the parseFn.\n   * This list begins with a lex token of openKind and ends with a lex token of closeKind.\n   * Advances the parser to the next lex token after the closing token.\n   */\n\n  many(openKind, parseFn, closeKind) {\n    this.expectToken(openKind);\n    const nodes = [];\n\n    do {\n      nodes.push(parseFn.call(this));\n    } while (!this.expectOptionalToken(closeKind));\n\n    return nodes;\n  }\n  /**\n   * Returns a non-empty list of parse nodes, determined by the parseFn.\n   * This list may begin with a lex token of delimiterKind followed by items separated by lex tokens of tokenKind.\n   * Advances the parser to the next lex token after last item in the list.\n   */\n\n  delimitedMany(delimiterKind, parseFn) {\n    this.expectOptionalToken(delimiterKind);\n    const nodes = [];\n\n    do {\n      nodes.push(parseFn.call(this));\n    } while (this.expectOptionalToken(delimiterKind));\n\n    return nodes;\n  }\n\n  advanceLexer() {\n    const { maxTokens } = this._options;\n\n    const token = this._lexer.advance();\n\n    if (maxTokens !== undefined && token.kind !== TokenKind.EOF) {\n      ++this._tokenCounter;\n\n      if (this._tokenCounter > maxTokens) {\n        throw syntaxError(\n          this._lexer.source,\n          token.start,\n          `Document contains more that ${maxTokens} tokens. Parsing aborted.`,\n        );\n      }\n    }\n  }\n}\n/**\n * A helper function to describe a token as a string for debugging.\n */\n\nfunction getTokenDesc(token) {\n  const value = token.value;\n  return getTokenKindDesc(token.kind) + (value != null ? ` \"${value}\"` : '');\n}\n/**\n * A helper function to describe a token kind as a string for debugging.\n */\n\nfunction getTokenKindDesc(kind) {\n  return isPunctuatorTokenKind(kind) ? `\"${kind}\"` : kind;\n}\n","import { parse } from 'graphql';\n\nimport {\n  DocumentNode,\n  DefinitionNode,\n  Location,\n} from 'graphql/language/ast';\n\n// A map docString -> graphql document\nconst docCache = new Map<string, DocumentNode>();\n\n// A map fragmentName -> [normalized source]\nconst fragmentSourceMap = new Map<string, Set<string>>();\n\nlet printFragmentWarnings = true;\nlet experimentalFragmentVariables = false;\n\n// Strip insignificant whitespace\n// Note that this could do a lot more, such as reorder fields etc.\nfunction normalize(string: string) {\n  return string.replace(/[\\s,]+/g, ' ').trim();\n}\n\nfunction cacheKeyFromLoc(loc: Location) {\n  return normalize(loc.source.body.substring(loc.start, loc.end));\n}\n\n// Take a unstripped parsed document (query/mutation or even fragment), and\n// check all fragment definitions, checking for name->source uniqueness.\n// We also want to make sure only unique fragments exist in the document.\nfunction processFragments(ast: DocumentNode) {\n  const seenKeys = new Set<string>();\n  const definitions: DefinitionNode[] = [];\n\n  ast.definitions.forEach(fragmentDefinition => {\n    if (fragmentDefinition.kind === 'FragmentDefinition') {\n      var fragmentName = fragmentDefinition.name.value;\n      var sourceKey = cacheKeyFromLoc(fragmentDefinition.loc!);\n\n      // We know something about this fragment\n      let sourceKeySet = fragmentSourceMap.get(fragmentName)!;\n      if (sourceKeySet && !sourceKeySet.has(sourceKey)) {\n        // this is a problem because the app developer is trying to register another fragment with\n        // the same name as one previously registered. So, we tell them about it.\n        if (printFragmentWarnings) {\n          console.warn(\"Warning: fragment with name \" + fragmentName + \" already exists.\\n\"\n            + \"graphql-tag enforces all fragment names across your application to be unique; read more about\\n\"\n            + \"this in the docs: http://dev.apollodata.com/core/fragments.html#unique-names\");\n        }\n      } else if (!sourceKeySet) {\n        fragmentSourceMap.set(fragmentName, sourceKeySet = new Set);\n      }\n\n      sourceKeySet.add(sourceKey);\n\n      if (!seenKeys.has(sourceKey)) {\n        seenKeys.add(sourceKey);\n        definitions.push(fragmentDefinition);\n      }\n    } else {\n      definitions.push(fragmentDefinition);\n    }\n  });\n\n  return {\n    ...ast,\n    definitions,\n  };\n}\n\nfunction stripLoc(doc: DocumentNode) {\n  const workSet = new Set<Record<string, any>>(doc.definitions);\n\n  workSet.forEach(node => {\n    if (node.loc) delete node.loc;\n    Object.keys(node).forEach(key => {\n      const value = node[key];\n      if (value && typeof value === 'object') {\n        workSet.add(value);\n      }\n    });\n  });\n\n  const loc = doc.loc as Record<string, any>;\n  if (loc) {\n    delete loc.startToken;\n    delete loc.endToken;\n  }\n\n  return doc;\n}\n\nfunction parseDocument(source: string) {\n  var cacheKey = normalize(source);\n  if (!docCache.has(cacheKey)) {\n    const parsed = parse(source, {\n      experimentalFragmentVariables,\n      allowLegacyFragmentVariables: experimentalFragmentVariables,\n    } as any);\n    if (!parsed || parsed.kind !== 'Document') {\n      throw new Error('Not a valid GraphQL document.');\n    }\n    docCache.set(\n      cacheKey,\n      // check that all \"new\" fragments inside the documents are consistent with\n      // existing fragments of the same name\n      stripLoc(processFragments(parsed)),\n    );\n  }\n  return docCache.get(cacheKey)!;\n}\n\n// XXX This should eventually disallow arbitrary string interpolation, like Relay does\nexport function gql(\n  literals: string | readonly string[],\n  ...args: any[]\n) {\n\n  if (typeof literals === 'string') {\n    literals = [literals];\n  }\n\n  let result = literals[0];\n\n  args.forEach((arg, i) => {\n    if (arg && arg.kind === 'Document') {\n      result += arg.loc.source.body;\n    } else {\n      result += arg;\n    }\n    result += literals[i + 1];\n  });\n\n  return parseDocument(result);\n}\n\nexport function resetCaches() {\n  docCache.clear();\n  fragmentSourceMap.clear();\n}\n\nexport function disableFragmentWarnings() {\n  printFragmentWarnings = false;\n}\n\nexport function enableExperimentalFragmentVariables() {\n  experimentalFragmentVariables = true;\n}\n\nexport function disableExperimentalFragmentVariables() {\n  experimentalFragmentVariables = false;\n}\n\nconst extras = {\n  gql,\n  resetCaches,\n  disableFragmentWarnings,\n  enableExperimentalFragmentVariables,\n  disableExperimentalFragmentVariables,\n};\n\nexport namespace gql {\n  export const {\n    gql,\n    resetCaches,\n    disableFragmentWarnings,\n    enableExperimentalFragmentVariables,\n    disableExperimentalFragmentVariables,\n  } = extras;\n}\n\ngql.default = gql;\n\nexport default gql;\n","import { gql } from '@apollo/client';\n\nexport const GET_COUNTRIES = gql`\n  query GetCountries {\n    countries {\n      code\n      name\n      capital\n      emoji\n    }\n  }\n`;","function _taggedTemplateLiteral(e, t) {\n  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, {\n    raw: {\n      value: Object.freeze(t)\n    }\n  }));\n}\nexport { _taggedTemplateLiteral as default };","import React from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { GET_COUNTRIES } from \"./queries\";\nimport \"./Countries.css\";\n\nfunction Countries() {\n  const { loading, error, data } = useQuery(GET_COUNTRIES);\n\n  if (loading) return <p className=\"loading\">Loading...</p>;\n  if (error) return <p className=\"error\">Error: {error.message}</p>;\n\n  return (\n    <div className=\"container\">\n      <h2>Countries with Capitals (GraphQL Example)</h2>\n      <div className=\"countries\">\n        {data.countries.map((country) => (\n          <div key={country.code} className=\"country-card\">\n            <h3>\n              {country.name} {country.emoji}\n            </h3>\n            <p>Capital: {country.capital}</p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Countries;","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nexport { _typeof as default };","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nexport { toPropertyKey as default };","import _typeof from \"./typeof.js\";\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nexport { toPrimitive as default };","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperties(e, r) {\n  for (var t = 0; t < r.length; t++) {\n    var o = r[t];\n    o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, toPropertyKey(o.key), o);\n  }\n}\nfunction _createClass(e, r, t) {\n  return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", {\n    writable: !1\n  }), e;\n}\nexport { _createClass as default };","\n/**\n * Copied from the fast-deep-equal package\n * because it does not support es modules and causes optimization bailouts.\n * TODO use the npm package again when this is merged:\n * @link https://github.com/epoberezkin/fast-deep-equal/pull/105\n */\nexport function deepEqual(a: any, b: any): boolean {\n    if (a === b) return true;\n\n    if (a && b && typeof a == 'object' && typeof b == 'object') {\n        if (a.constructor !== b.constructor) return false;\n\n        let length;\n        let i;\n        if (Array.isArray(a)) {\n            length = a.length;\n            if (length !== b.length) return false;\n            for (i = length; i-- !== 0;)\n                if (!deepEqual(a[i], b[i])) return false;\n            return true;\n        }\n\n\n        if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n        if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n        if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n        const keys = Object.keys(a);\n        length = keys.length;\n        if (length !== Object.keys(b).length) return false;\n\n        for (i = length; i-- !== 0;)\n            if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n        for (i = length; i-- !== 0;) {\n            const key = keys[i];\n            if (!deepEqual(a[key], b[key])) return false;\n        }\n\n        return true;\n    }\n\n    // true if both NaN, false otherwise\n    return a !== a && b !== b;\n}\n","import type {\n    DeepReadonlyObject\n} from '../../types/index.d.ts';\n\nexport function deepFreeze<T>(o: T): T {\n    Object.freeze(o);\n    Object.getOwnPropertyNames(o).forEach(function (prop) {\n        if (\n            Object.prototype.hasOwnProperty.call(o, prop) &&\n            (o as any)[prop] !== null &&\n            (\n                typeof (o as any)[prop] === 'object'\n                ||\n                typeof (o as any)[prop] === 'function'\n            ) &&\n            !Object.isFrozen((o as any)[prop])\n        ) {\n            deepFreeze((o as any)[prop]);\n        }\n    });\n    return o;\n}\n\n\n\n/**\n * To get specific nested path values from objects,\n * RxDB normally uses the 'dot-prop' npm module.\n * But when performance is really relevant, this is not fast enough.\n * Instead we use a monad that can prepare some stuff up front\n * and we can reuse the generated function.\n */\nexport type ObjectPathMonadFunction<T, R = any> = (obj: T) => R;\nexport function objectPathMonad<T, R = any>(objectPath: string): ObjectPathMonadFunction<T, R> {\n    const split = objectPath.split('.');\n\n    // reuse this variable for better performance.\n    const splitLength = split.length;\n\n    /**\n     * Performance shortcut,\n     * if no nested path is used,\n     * directly return the field of the object.\n     */\n    if (splitLength === 1) {\n        return (obj: T) => (obj as any)[objectPath];\n    }\n\n\n    return (obj: T) => {\n        let currentVal: any = obj;\n        for (let i = 0; i < splitLength; ++i) {\n            const subPath = split[i];\n            currentVal = currentVal[subPath];\n            if (typeof currentVal === 'undefined') {\n                return currentVal;\n            }\n        }\n        return currentVal;\n    };\n}\n\n\nexport function getFromObjectOrThrow<V>(\n    obj: { [k: string]: V; },\n    key: string\n): V {\n    const val = obj[key];\n    if (!val) {\n        throw new Error('missing value from object ' + key);\n    }\n    return val;\n}\n\n/**\n * returns a flattened object\n * @link https://gist.github.com/penguinboy/762197\n */\nexport function flattenObject(ob: any) {\n    const toReturn: any = {};\n\n    for (const i in ob) {\n        if (!Object.prototype.hasOwnProperty.call(ob, i)) continue;\n        if ((typeof ob[i]) === 'object') {\n            const flatObject = flattenObject(ob[i]);\n            for (const x in flatObject) {\n                if (!Object.prototype.hasOwnProperty.call(flatObject, x)) continue;\n                toReturn[i + '.' + x] = flatObject[x];\n            }\n        } else {\n            toReturn[i] = ob[i];\n        }\n    }\n    return toReturn;\n}\n\n\n/**\n * does a flat copy on the objects,\n * is about 3 times faster then using deepClone\n * @link https://jsperf.com/object-rest-spread-vs-clone/2\n */\nexport function flatClone<T>(obj: T | DeepReadonlyObject<T> | Readonly<T>): T {\n    return Object.assign({}, obj) as any;\n}\n\n/**\n * @link https://stackoverflow.com/a/11509718/3443137\n */\nexport function firstPropertyNameOfObject(obj: any): string {\n    return Object.keys(obj)[0];\n}\nexport function firstPropertyValueOfObject<T>(obj: { [k: string]: T; }): T {\n    const key = Object.keys(obj)[0];\n    return obj[key];\n}\n\n\n/**\n * deep-sort an object so its attributes are in lexical order.\n * Also sorts the arrays inside of the object if no-array-sort not set\n */\nexport function sortObject(obj: any, noArraySort = false): any {\n    if (!obj) return obj; // do not sort null, false or undefined\n\n    // array\n    if (!noArraySort && Array.isArray(obj)) {\n        return obj\n            .sort((a, b) => {\n                if (typeof a === 'string' && typeof b === 'string')\n                    return a.localeCompare(b);\n\n                if (typeof a === 'object') return 1;\n                else return -1;\n            })\n            .map(i => sortObject(i, noArraySort));\n    }\n\n    // object\n    // array is also of type object\n    if (typeof obj === 'object' && !Array.isArray(obj)) {\n        const out: any = {};\n        Object.keys(obj)\n            .sort((a, b) => a.localeCompare(b))\n            .forEach(key => {\n                out[key] = sortObject(obj[key], noArraySort);\n            });\n        return out;\n    }\n\n    // everything else\n    return obj;\n}\n\n\n\n/**\n * Deep clone a plain json object.\n * Does not work with recursive stuff\n * or non-plain-json.\n * IMPORTANT: Performance of this is very important,\n * do not change it without running performance tests!\n *\n * @link https://github.com/zxdong262/deep-copy/blob/master/src/index.ts\n */\nfunction deepClone<T>(src: T | DeepReadonlyObject<T>): T {\n    if (!src) {\n        return src;\n    }\n    if (src === null || typeof (src) !== 'object') {\n        return src;\n    }\n    if (Array.isArray(src)) {\n        const ret = new Array(src.length);\n        let i = ret.length;\n        while (i--) {\n            ret[i] = deepClone(src[i]);\n        }\n        return ret as any;\n    }\n    const dest: any = {};\n    // eslint-disable-next-line guard-for-in\n    for (const key in src) {\n        dest[key] = deepClone(src[key]);\n    }\n    return dest;\n}\nexport const clone = deepClone;\n\n\n\n/**\n * overwrites the getter with the actual value\n * Mostly used for caching stuff on the first run\n */\nexport function overwriteGetterForCaching<ValueType = any>(\n    obj: any,\n    getterName: string,\n    value: ValueType\n): ValueType {\n    Object.defineProperty(obj, getterName, {\n        get: function () {\n            return value;\n        }\n    });\n    return value;\n}\n\n\nexport function hasDeepProperty(obj: any, property: string): boolean {\n    if (obj.hasOwnProperty(property)) {\n        return true;\n    }\n\n    if (Array.isArray(obj)) {\n        const has = !!obj.find(item => hasDeepProperty(item, property));\n        return has;\n    }\n\n    // Recursively check for property in nested objects\n    for (const key in obj) {\n        if (typeof obj[key] === 'object' && obj[key] !== null) {\n            if (hasDeepProperty(obj[key], property)) {\n                return true;\n            }\n        }\n    }\n\n    // Return false if 'foobar' is not found at any level\n    return false;\n}\n","import type {\n    MaybePromise,\n    MaybeReadonly\n} from '../../types/index.d.ts';\n\nexport function lastOfArray<T>(ar: T[]): T | undefined {\n    return ar[ar.length - 1];\n}\n\n/**\n * shuffle the given array\n */\nexport function shuffleArray<T>(arr: T[]): T[] {\n    return arr.slice(0).sort(() => (Math.random() - 0.5));\n}\n\nexport function randomOfArray<T>(arr: T[]): T {\n    const randomElement = arr[Math.floor(Math.random() * arr.length)];\n    return randomElement;\n}\n\n\nexport function toArray<T>(input: T | T[] | Readonly<T> | Readonly<T[]>): T[] {\n    return Array.isArray(input) ? (input as any[]).slice(0) : [input];\n}\n\n/**\n * Split array with items into smaller arrays with items\n * @link https://stackoverflow.com/a/7273794/3443137\n */\nexport function batchArray<T>(array: T[], batchSize: number): T[][] {\n    array = array.slice(0);\n    const ret: T[][] = [];\n    while (array.length) {\n        const batch = array.splice(0, batchSize);\n        ret.push(batch);\n    }\n    return ret;\n}\n\n/**\n * @link https://stackoverflow.com/a/15996017\n */\nexport function removeOneFromArrayIfMatches<T>(ar: T[], condition: (x: T) => boolean): T[] {\n    ar = ar.slice();\n    let i = ar.length;\n    let done = false;\n    while (i-- && !done) {\n        if (condition(ar[i])) {\n            done = true;\n            ar.splice(i, 1);\n        }\n    }\n    return ar;\n}\n\n/**\n * returns true if the supplied argument is either an Array<T> or a Readonly<Array<T>>\n */\nexport function isMaybeReadonlyArray(x: any): x is MaybeReadonly<any[]> {\n    // While this looks strange, it's a workaround for an issue in TypeScript:\n    // https://github.com/microsoft/TypeScript/issues/17002\n    //\n    // The problem is that `Array.isArray` as a type guard returns `false` for a readonly array,\n    // but at runtime the object is an array and the runtime call to `Array.isArray` would return `true`.\n    // The type predicate here allows for both `Array<T>` and `Readonly<Array<T>>` to pass a type check while\n    // still performing runtime type inspection.\n    return Array.isArray(x);\n}\n\n\n\nexport function isOneItemOfArrayInOtherArray<T>(ar1: T[], ar2: T[]): boolean {\n    for (let i = 0; i < ar1.length; i++) {\n        const el = ar1[i];\n        const has = ar2.includes(el);\n        if (has) {\n            return true;\n        }\n    }\n    return false;\n}\n\n\n/**\n * Use this in array.filter() to remove all empty slots\n * and have the correct typings afterwards.\n * @link https://stackoverflow.com/a/46700791/3443137\n */\nexport function arrayFilterNotEmpty<TValue>(value: TValue | null | undefined): value is TValue {\n    if (value === null || value === undefined) {\n        return false;\n    }\n    return true;\n}\n\nexport function countUntilNotMatching<T>(\n    ar: T[],\n    matchingFn: (v: T, idx: number) => boolean\n): number {\n    let count = 0;\n    let idx = -1;\n    for (const item of ar) {\n        idx = idx + 1;\n        const matching = matchingFn(item, idx);\n        if (matching) {\n            count = count + 1;\n        } else {\n            break;\n        }\n    }\n    return count;\n}\n\nexport async function asyncFilter<T>(array: T[], predicate: (item: T, index: number, a: T[]) => MaybePromise<boolean>): Promise<T[]> {\n    const filters = await Promise.all(\n        array.map(predicate)\n    );\n\n    return array.filter((...[, index]) => filters[index]);\n}\n\n/**\n * @link https://stackoverflow.com/a/3762735\n */\nexport function sumNumberArray(array: number[]): number {\n    let count = 0;\n    for (let i = array.length; i--;) {\n        count += array[i];\n    }\n    return count;\n}\n\nexport function maxOfNumbers(arr: number[]): number {\n    return Math.max(...arr);\n}\n\n\n/**\n * Appends the given documents to the given array.\n * This will mutate the first given array.\n * Mostly used as faster alternative to Array.concat()\n * because .concat() is so slow.\n * @link https://www.measurethat.net/Benchmarks/Show/4223/0/array-concat-vs-spread-operator-vs-push#latest_results_block\n * \n * TODO it turns out that in mid 2024 v8 has optimized Array.concat()\n * so it might be faster to just use concat() again:\n * @link https://jsperf.app/qiqawa/10\n */\nexport function appendToArray<T>(ar: T[], add: T[] | readonly T[]): void {\n    /**\n     * Pre-increasing the array size has turned out\n     * to be way faster when big arrays must be handled.\n     * @link https://dev.to/uilicious/javascript-array-push-is-945x-faster-than-array-concat-1oki\n     */\n    const addSize = add.length;\n    if (addSize === 0) {\n        return;\n    }\n    const baseSize = ar.length;\n    ar.length = baseSize + add.length;\n    for (let i = 0; i < addSize; ++i) {\n        ar[baseSize + i] = add[i];\n    }\n}\n\n/**\n * @link https://gist.github.com/telekosmos/3b62a31a5c43f40849bb\n */\nexport function uniqueArray(arrArg: string[]): string[] {\n    return arrArg.filter(function (elem, pos, arr) {\n        return arr.indexOf(elem) === pos;\n    });\n}\n\n","function _setPrototypeOf(t, e) {\n  return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) {\n    return t.__proto__ = e, t;\n  }, _setPrototypeOf(t, e);\n}\nexport { _setPrototypeOf as default };","import setPrototypeOf from \"./setPrototypeOf.js\";\nfunction _inheritsLoose(t, o) {\n  t.prototype = Object.create(o.prototype), t.prototype.constructor = t, setPrototypeOf(t, o);\n}\nexport { _inheritsLoose as default };","function _getPrototypeOf(t) {\n  return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) {\n    return t.__proto__ || Object.getPrototypeOf(t);\n  }, _getPrototypeOf(t);\n}\nexport { _getPrototypeOf as default };","function _isNativeReflectConstruct() {\n  try {\n    var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n  } catch (t) {}\n  return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {\n    return !!t;\n  })();\n}\nexport { _isNativeReflectConstruct as default };","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeFunction from \"./isNativeFunction.js\";\nimport construct from \"./construct.js\";\nfunction _wrapNativeSuper(t) {\n  var r = \"function\" == typeof Map ? new Map() : void 0;\n  return _wrapNativeSuper = function _wrapNativeSuper(t) {\n    if (null === t || !isNativeFunction(t)) return t;\n    if (\"function\" != typeof t) throw new TypeError(\"Super expression must either be null or a function\");\n    if (void 0 !== r) {\n      if (r.has(t)) return r.get(t);\n      r.set(t, Wrapper);\n    }\n    function Wrapper() {\n      return construct(t, arguments, getPrototypeOf(this).constructor);\n    }\n    return Wrapper.prototype = Object.create(t.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: !1,\n        writable: !0,\n        configurable: !0\n      }\n    }), setPrototypeOf(Wrapper, t);\n  }, _wrapNativeSuper(t);\n}\nexport { _wrapNativeSuper as default };","function _isNativeFunction(t) {\n  try {\n    return -1 !== Function.toString.call(t).indexOf(\"[native code]\");\n  } catch (n) {\n    return \"function\" == typeof t;\n  }\n}\nexport { _isNativeFunction as default };","import isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport setPrototypeOf from \"./setPrototypeOf.js\";\nfunction _construct(t, e, r) {\n  if (isNativeReflectConstruct()) return Reflect.construct.apply(null, arguments);\n  var o = [null];\n  o.push.apply(o, e);\n  var p = new (t.bind.apply(t, o))();\n  return r && setPrototypeOf(p, r.prototype), p;\n}\nexport { _construct as default };","/**\n * functions that can or should be overwritten by plugins\n * IMPORTANT: Do not import any big stuff from RxDB here!\n * An 'overwritable' can be used inside WebWorkers for RxStorage only,\n * and we do not want to have the full RxDB lib bundled in them.\n */\n\nimport type { DeepReadonly } from './types/util.d.ts';\n\nexport const overwritable = {\n    /**\n     * if this method is overwritten with one\n     * that returns true, we do additional checks\n     * which help the developer but have bad performance\n     */\n    isDevMode(): boolean {\n        return false;\n    },\n\n    /**\n     * Deep freezes and object when in dev-mode.\n     * Deep-Freezing has the same performance as deep-cloning, so we only do that in dev-mode.\n     * Also, we can ensure the readonly state via typescript\n     * @link https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze\n     */\n    deepFreezeWhenDevMode<T>(obj: T): DeepReadonly<T> {\n        return obj as any;\n    },\n\n    /**\n     * overwritten to map error-codes to text-messages\n     */\n    tunnelErrorMessage(message: string): string {\n        return `RxDB Error-Code ${message}.\n        Error messages are not included in RxDB core to reduce build size.\n        `;\n    }\n};\n","/**\n * here we use custom errors with the additional field 'parameters'\n */\n\nimport { overwritable } from './overwritable.ts';\nimport type {\n    RxErrorParameters,\n    RxErrorKey,\n    RxStorageWriteError,\n    RxStorageWriteErrorConflict\n} from './types/index.d.ts';\n\n/**\n * transform an object of parameters to a presentable string\n */\nfunction parametersToString(parameters: any): string {\n    let ret = '';\n    if (Object.keys(parameters).length === 0)\n        return ret;\n    ret += 'Given parameters: {\\n';\n    ret += Object.keys(parameters)\n        .map(k => {\n            let paramStr = '[object Object]';\n            try {\n                if (k === 'errors') {\n                    paramStr = parameters[k].map((err: any) => JSON.stringify(err, Object.getOwnPropertyNames(err)));\n                } else {\n                    paramStr = JSON.stringify(parameters[k], function (_k, v) {\n                        return v === undefined ? null : v;\n                    }, 2);\n                }\n            } catch (e) { }\n            return k + ':' + paramStr;\n        })\n        .join('\\n');\n    ret += '}';\n    return ret;\n}\n\nfunction messageForError(\n    message: string,\n    code: string,\n    parameters: any\n): string {\n    return 'RxError (' + code + '):' + '\\n' +\n        message + '\\n' +\n        parametersToString(parameters);\n}\n\nexport class RxError extends Error {\n    public code: RxErrorKey;\n    public message: string;\n    public url: string;\n    public parameters: RxErrorParameters;\n    // always true, use this to detect if its an rxdb-error\n    public rxdb: true;\n    constructor(\n        code: RxErrorKey,\n        message: string,\n        parameters: RxErrorParameters = {}\n    ) {\n        const mes = messageForError(message, code, parameters);\n        super(mes);\n        this.code = code;\n        this.message = mes;\n        this.url = getErrorUrl(code);\n        this.parameters = parameters;\n        this.rxdb = true; // tag them as internal\n    }\n    get name(): string {\n        return 'RxError (' + this.code + ')';\n    }\n    toString(): string {\n        return this.message;\n    }\n    get typeError(): boolean {\n        return false;\n    }\n}\n\nexport class RxTypeError extends TypeError {\n    public code: RxErrorKey;\n    public message: string;\n    public url: string;\n    public parameters: RxErrorParameters;\n    // always true, use this to detect if its an rxdb-error\n    public rxdb: true;\n    constructor(\n        code: RxErrorKey,\n        message: string,\n        parameters: RxErrorParameters = {}\n    ) {\n        const mes = messageForError(message, code, parameters);\n        super(mes);\n        this.code = code;\n        this.message = mes;\n        this.url = getErrorUrl(code);\n        this.parameters = parameters;\n        this.rxdb = true; // tag them as internal\n    }\n    get name(): string {\n        return 'RxTypeError (' + this.code + ')';\n    }\n    toString(): string {\n        return this.message;\n    }\n    get typeError(): boolean {\n        return true;\n    }\n}\n\n\nexport function getErrorUrl(code: RxErrorKey) {\n    return 'https://rxdb.info/errors.html?console=errors#' + code;\n}\n\nexport function errorUrlHint(code: RxErrorKey) {\n    return '\\n You can find out more about this error here: ' + getErrorUrl(code) + ' ';\n}\n\nexport function newRxError(\n    code: RxErrorKey,\n    parameters?: RxErrorParameters\n): RxError {\n    return new RxError(\n        code,\n        overwritable.tunnelErrorMessage(code) + errorUrlHint(code),\n        parameters\n    );\n}\n\nexport function newRxTypeError(\n    code: RxErrorKey,\n    parameters?: RxErrorParameters\n): RxTypeError {\n    return new RxTypeError(\n        code,\n        overwritable.tunnelErrorMessage(code) + errorUrlHint(code),\n        parameters\n    );\n}\n\n\n/**\n * Returns the error if it is a 409 conflict,\n * return false if it is another error.\n */\nexport function isBulkWriteConflictError<RxDocType>(\n    err?: RxStorageWriteError<RxDocType> | any\n): RxStorageWriteErrorConflict<RxDocType> | false {\n    if (\n        err &&\n        err.status === 409\n    ) {\n        return err;\n    } else {\n        return false;\n    }\n}\n\n\nconst STORAGE_WRITE_ERROR_CODE_TO_MESSAGE: { [k: number]: string; } = {\n    409: 'document write conflict',\n    422: 'schema validation error',\n    510: 'attachment data missing'\n};\n\nexport function rxStorageWriteErrorToRxError(err: RxStorageWriteError<any>): RxError {\n    return newRxError('COL20', {\n        name: STORAGE_WRITE_ERROR_CODE_TO_MESSAGE[err.status],\n        document: err.documentId,\n        writeError: err\n    });\n}\n","\n/**\n * hook-functions that can be extended by the plugin\n */\nexport const HOOKS: { [k: string]: any[]; } = {\n    /**\n     * Runs before a plugin is added.\n     * Use this to block the usage of non-compatible plugins.\n     */\n    preAddRxPlugin: [],\n    /**\n     * functions that run before the database is created\n     */\n    preCreateRxDatabase: [],\n    /**\n     * runs after the database is created and prepared\n     * but before the instance is returned to the user\n     * @async\n     */\n    createRxDatabase: [],\n    preCreateRxCollection: [],\n    createRxCollection: [],\n    createRxState: [],\n    /**\n    * runs at the end of the destroy-process of a collection\n    * @async\n    */\n    postDestroyRxCollection: [],\n    /**\n     * Runs after a collection is removed.\n     * @async\n     */\n    postRemoveRxCollection: [],\n    /**\n      * functions that get the json-schema as input\n      * to do additionally checks/manipulation\n      */\n    preCreateRxSchema: [],\n    /**\n     * functions that run after the RxSchema is created\n     * gets RxSchema as attribute\n     */\n    createRxSchema: [],\n    preCreateRxQuery: [],\n    /**\n     * Runs before a query is send to the\n     * prepareQuery function of the storage engine.\n     */\n    prePrepareQuery: [],\n    createRxDocument: [],\n    /**\n     * runs after a RxDocument is created,\n     * cannot be async\n     */\n    postCreateRxDocument: [],\n    /**\n     * Runs before a RxStorageInstance is created\n     * gets the params of createStorageInstance()\n     * as attribute so you can manipulate them.\n     * Notice that you have to clone stuff before mutating the inputs.\n     */\n    preCreateRxStorageInstance: [],\n    preStorageWrite: [],\n    /**\n     * runs on the document-data before the document is migrated\n     * {\n     *   doc: Object, // original doc-data\n     *   migrated: // migrated doc-data after run through migration-strategies\n     * }\n     */\n    preMigrateDocument: [],\n    /**\n     * runs after the migration of a document has been done\n     */\n    postMigrateDocument: [],\n    /**\n     * runs at the beginning of the destroy-process of a database\n     */\n    preDestroyRxDatabase: [],\n    /**\n     * runs after a database has been removed\n     * @async\n     */\n    postRemoveRxDatabase: [],\n\n    /**\n     * runs before the replication writes the rows to master\n     * but before the rows have been modified\n     * @async\n     */\n    preReplicationMasterWrite: [],\n\n    /**\n     * runs after the replication has been sent to the server\n     * but before the new documents have been handled\n     * @async\n     */\n    preReplicationMasterWriteDocumentsHandle: [],\n};\n\nexport function runPluginHooks(hookKey: string, obj: any) {\n    if (HOOKS[hookKey].length > 0) {\n        HOOKS[hookKey].forEach(fun => fun(obj));\n    }\n}\n\n\n/**\n * TODO\n * we should not run the hooks in parallel\n * this makes stuff unpredictable.\n */\nexport function runAsyncPluginHooks(hookKey: string, obj: any): Promise<any> {\n    return Promise.all(\n        HOOKS[hookKey].map(fun => fun(obj))\n    );\n}\n\n/**\n * used in tests to remove hooks\n */\nexport function _clearHook(type: string, fun: Function) {\n    HOOKS[type] = HOOKS[type].filter(h => h !== fun);\n}\n","export const REGEX_ALL_DOTS = /\\./g;\nexport const REGEX_ALL_PIPES = /\\|/g;\n","const COUCH_NAME_CHARS = 'abcdefghijklmnopqrstuvwxyz';\n/**\n * get a random string which can be used with couchdb\n * @link http://stackoverflow.com/a/1349426/3443137\n */\nexport function randomCouchString(length: number = 10): string {\n    let text = '';\n\n    for (let i = 0; i < length; i++) {\n        text += COUCH_NAME_CHARS.charAt(Math.floor(Math.random() * COUCH_NAME_CHARS.length));\n    }\n\n    return text;\n}\n\n\n/**\n * A random string that is never inside of any storage\n */\nexport const RANDOM_STRING = 'Fz7SZXPmYJujkzjY1rpXWvlWBqoGAfAX';\n\n/**\n * uppercase first char\n */\nexport function ucfirst(str: string): string {\n    str += '';\n    const f = str.charAt(0)\n        .toUpperCase();\n    return f + str.substr(1);\n}\n\n/**\n * removes trailing and ending dots from the string\n */\nexport function trimDots(str: string): string {\n    // start\n    while (str.charAt(0) === '.') {\n        str = str.substr(1);\n    }\n\n    // end\n    while (str.slice(-1) === '.') {\n        str = str.slice(0, -1);\n    }\n\n    return str;\n}\n\n/**\n * @link https://stackoverflow.com/a/44950500/3443137\n */\nexport function lastCharOfString(str: string): string {\n    return str.charAt(str.length - 1);\n}\n\n/**\n * returns true if the given name is likely a folder path\n */\nexport function isFolderPath(name: string) {\n    // do not check, if foldername is given\n    if (\n        name.includes('/') || // unix\n        name.includes('\\\\') // windows\n    ) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n\n/**\n * @link https://gist.github.com/andreburgaud/6f73fd2d690b629346b8\n * @link https://stackoverflow.com/a/76240378/3443137\n */\nexport function arrayBufferToString(arrayBuffer: ArrayBuffer): string {\n    const chunkSize = 8192;\n    let str = '';\n    var len = arrayBuffer.byteLength;\n    for (let i = 0; i < len; i += chunkSize) {\n        const chunk = new Uint8Array(\n            arrayBuffer,\n            i,\n            Math.min(chunkSize, len - i)\n        );\n        str += String.fromCharCode.apply(null, chunk as any);\n    }\n    return str;\n}\n\nexport function stringToArrayBuffer(str: string): ArrayBuffer {\n    const buf = new ArrayBuffer(str.length);\n    const bufView = new Uint8Array(buf);\n    for (let i = 0, strLen = str.length; i < strLen; i++) {\n        bufView[i] = str.charCodeAt(i);\n    }\n    return buf;\n}\n\n\nexport function normalizeString(str: string) : string {\n    return str.trim().replace(/[\\n\\s]+/g, '');\n}\n","/**\n * Copied from\n * @link https://github.com/sindresorhus/dot-prop/blob/main/index.js\n * because it is currently an esm only module.\n * TODO use the npm package again when RxDB is also fully esm.\n */\n\nconst isObject = (value: null) => {\n    const type = typeof value;\n    return value !== null && (type === 'object' || type === 'function');\n};\n\nconst disallowedKeys = new Set([\n    '__proto__',\n    'prototype',\n    'constructor',\n]);\n\nconst digits = new Set('0123456789');\n\nfunction getPathSegments(path: string) {\n    const parts = [];\n    let currentSegment = '';\n    let currentPart = 'start';\n    let isIgnoring = false;\n\n    for (const character of path) {\n        switch (character) {\n            case '\\\\': {\n                if (currentPart === 'index') {\n                    throw new Error('Invalid character in an index');\n                }\n\n                if (currentPart === 'indexEnd') {\n                    throw new Error('Invalid character after an index');\n                }\n\n                if (isIgnoring) {\n                    currentSegment += character;\n                }\n\n                currentPart = 'property';\n                isIgnoring = !isIgnoring;\n                break;\n            }\n\n            case '.': {\n                if (currentPart === 'index') {\n                    throw new Error('Invalid character in an index');\n                }\n\n                if (currentPart === 'indexEnd') {\n                    currentPart = 'property';\n                    break;\n                }\n\n                if (isIgnoring) {\n                    isIgnoring = false;\n                    currentSegment += character;\n                    break;\n                }\n\n                if (disallowedKeys.has(currentSegment)) {\n                    return [];\n                }\n\n                parts.push(currentSegment);\n                currentSegment = '';\n                currentPart = 'property';\n                break;\n            }\n\n            case '[': {\n                if (currentPart === 'index') {\n                    throw new Error('Invalid character in an index');\n                }\n\n                if (currentPart === 'indexEnd') {\n                    currentPart = 'index';\n                    break;\n                }\n\n                if (isIgnoring) {\n                    isIgnoring = false;\n                    currentSegment += character;\n                    break;\n                }\n\n                if (currentPart === 'property') {\n                    if (disallowedKeys.has(currentSegment)) {\n                        return [];\n                    }\n\n                    parts.push(currentSegment);\n                    currentSegment = '';\n                }\n\n                currentPart = 'index';\n                break;\n            }\n\n            case ']': {\n                if (currentPart === 'index') {\n                    parts.push(Number.parseInt(currentSegment, 10));\n                    currentSegment = '';\n                    currentPart = 'indexEnd';\n                    break;\n                }\n\n                if (currentPart === 'indexEnd') {\n                    throw new Error('Invalid character after an index');\n                }\n\n                // Falls through\n            }\n\n            default: {\n                if (currentPart === 'index' && !digits.has(character)) {\n                    throw new Error('Invalid character in an index');\n                }\n\n                if (currentPart === 'indexEnd') {\n                    throw new Error('Invalid character after an index');\n                }\n\n                if (currentPart === 'start') {\n                    currentPart = 'property';\n                }\n\n                if (isIgnoring) {\n                    isIgnoring = false;\n                    currentSegment += '\\\\';\n                }\n\n                currentSegment += character;\n            }\n        }\n    }\n\n    if (isIgnoring) {\n        currentSegment += '\\\\';\n    }\n\n    switch (currentPart) {\n        case 'property': {\n            if (disallowedKeys.has(currentSegment)) {\n                return [];\n            }\n\n            parts.push(currentSegment);\n\n            break;\n        }\n\n        case 'index': {\n            throw new Error('Index was not closed');\n        }\n\n        case 'start': {\n            parts.push('');\n\n            break;\n        }\n        // No default\n    }\n\n    return parts;\n}\n\nfunction isStringIndex(object: any[], key: string) {\n    if (typeof key !== 'number' && Array.isArray(object)) {\n        const index = Number.parseInt(key, 10);\n        return Number.isInteger(index) && object[index] === object[key as any];\n    }\n\n    return false;\n}\n\nfunction assertNotStringIndex(object: any, key: string | number) {\n    if (isStringIndex(object, key as any)) {\n        throw new Error('Cannot use string index');\n    }\n}\n\n/**\n * TODO we need some performance tests and improvements here.\n */\nexport function getProperty(object: any, path: string | string[], value?: any) {\n    if (Array.isArray(path)) {\n        path = path.join('.');\n    }\n\n    /**\n     * Performance shortcut.\n     * In most cases we just have a simple property name\n     * so we can directly return it.\n     */\n    if (\n        !path.includes('.') &&\n        !path.includes('[')\n    ) {\n        return object[path];\n    }\n\n    if (!isObject(object as any) || typeof path !== 'string') {\n        return value === undefined ? object : value;\n    }\n\n    const pathArray = getPathSegments(path);\n    if (pathArray.length === 0) {\n        return value;\n    }\n\n    for (let index = 0; index < pathArray.length; index++) {\n        const key = pathArray[index];\n\n        if (isStringIndex(object as any, key as any)) {\n            object = index === pathArray.length - 1 ? undefined : null;\n        } else {\n            object = (object as any)[key];\n        }\n\n        if (object === undefined || object === null) {\n            // `object` is either `undefined` or `null` so we want to stop the loop, and\n            // if this is not the last bit of the path, and\n            // if it didn't return `undefined`\n            // it would return `null` if `object` is `null`\n            // but we want `get({foo: null}, 'foo.bar')` to equal `undefined`, or the supplied value, not `null`\n            if (index !== pathArray.length - 1) {\n                return value;\n            }\n\n            break;\n        }\n    }\n\n    return object === undefined ? value : object;\n}\n\nexport function setProperty(object: any, path: string, value: any) {\n    if (Array.isArray(path)) {\n        path = path.join('.');\n    }\n\n    if (!isObject(object as any) || typeof path !== 'string') {\n        return object;\n    }\n\n    const root = object;\n    const pathArray = getPathSegments(path);\n\n    for (let index = 0; index < pathArray.length; index++) {\n        const key = pathArray[index];\n\n        assertNotStringIndex(object, key);\n\n        if (index === pathArray.length - 1) {\n            object[key] = value;\n        } else if (!isObject(object[key])) {\n            object[key] = typeof pathArray[index + 1] === 'number' ? [] : {};\n        }\n\n        object = object[key];\n    }\n\n    return root;\n}\n\nexport function deleteProperty(object: any, path: string) {\n    if (!isObject(object as any) || typeof path !== 'string') {\n        return false;\n    }\n\n    const pathArray = getPathSegments(path);\n\n    for (let index = 0; index < pathArray.length; index++) {\n        const key = pathArray[index];\n\n        assertNotStringIndex(object, key);\n\n        if (index === pathArray.length - 1) {\n            delete object[key];\n            return true;\n        }\n\n        object = object[key];\n\n        if (!isObject(object as any)) {\n            return false;\n        }\n    }\n}\n\nexport function hasProperty(object: any, path: string) {\n    if (!isObject(object) || typeof path !== 'string') {\n        return false;\n    }\n\n    const pathArray = getPathSegments(path);\n    if (pathArray.length === 0) {\n        return false;\n    }\n\n    for (const key of pathArray) {\n        if (!isObject(object) || !(key in object) || isStringIndex(object, key as any)) {\n            return false;\n        }\n\n        object = object[key];\n    }\n\n    return true;\n}\n\n// TODO: Backslashes with no effect should not be escaped\nfunction escapePath(path: string) {\n    if (typeof path !== 'string') {\n        throw new TypeError('Expected a string');\n    }\n\n    return path.replace(/[\\\\.[]/g, '\\\\$&');\n}\n\n// The keys returned by Object.entries() for arrays are strings\nfunction entries(value: any) {\n    if (Array.isArray(value)) {\n        return value.map((v, index) => [index, v]);\n    }\n\n    return Object.entries(value);\n}\n\nfunction stringifyPath(pathSegments: never[]) {\n    let result = '';\n\n    // eslint-disable-next-line prefer-const\n    for (let [index, segment] of entries(pathSegments)) {\n        if (typeof segment === 'number') {\n            result += `[${segment}]`;\n        } else {\n            segment = escapePath(segment);\n            result += index === 0 ? segment : `.${segment}`;\n        }\n    }\n\n    return result;\n}\n\nfunction* deepKeysIterator(object: any, currentPath = []): any {\n    if (!isObject(object)) {\n        if (currentPath.length > 0) {\n            yield stringifyPath(currentPath);\n        }\n\n        return;\n    }\n\n    for (const [key, value] of entries(object)) {\n        yield* deepKeysIterator(value, [...currentPath, key] as any);\n    }\n}\n\nexport function deepKeys(object: any) {\n    return [...deepKeysIterator(object)];\n}\n","import type {\n    DeepReadonly,\n    RxDocumentData,\n    RxDocumentMeta,\n    StringKeys,\n    WithDeleted,\n    WithDeletedAndAttachments\n} from '../../types/index.d.ts';\nimport { flatClone } from './utils-object.ts';\n/**\n * We use 1 as minimum so that the value is never falsy.\n * This const is used in several places because querying\n * with a value lower then the minimum could give false results.\n */\nexport const RX_META_LWT_MINIMUM = 1;\n\nexport function getDefaultRxDocumentMeta(): RxDocumentMeta {\n    return {\n        /**\n         * Set this to 1 to not waste performance\n         * while calling new Date()..\n         * The storage wrappers will anyway update\n         * the lastWrite time while calling transformDocumentDataFromRxDBToRxStorage()\n         */\n        lwt: RX_META_LWT_MINIMUM\n    };\n}\n\n/**\n * Returns a revision that is not valid.\n * Use this to have correct typings\n * while the storage wrapper anyway will overwrite the revision.\n */\nexport function getDefaultRevision(): string {\n    /**\n     * Use a non-valid revision format,\n     * to ensure that the RxStorage will throw\n     * when the revision is not replaced downstream.\n     */\n    return '';\n}\n\n\nexport function stripMetaDataFromDocument<RxDocType>(docData: RxDocumentData<RxDocType>): RxDocType {\n    return Object.assign({}, docData, {\n        _meta: undefined,\n        _deleted: undefined,\n        _rev: undefined\n    });\n}\n\n\n/**\n * Faster way to check the equality of document lists\n * compared to doing a deep-equal.\n * Here we only check the ids and revisions.\n */\nexport function areRxDocumentArraysEqual<RxDocType>(\n    primaryPath: StringKeys<RxDocumentData<RxDocType>>,\n    ar1: RxDocumentData<RxDocType>[],\n    ar2: RxDocumentData<RxDocType>[]\n): boolean {\n    if (ar1.length !== ar2.length) {\n        return false;\n    }\n    let i = 0;\n    const len = ar1.length;\n    while (i < len) {\n        const row1 = ar1[i];\n        const row2 = ar2[i];\n        i++;\n\n        if (\n            row1._rev !== row2._rev ||\n            row1[primaryPath] !== row2[primaryPath]\n        ) {\n            return false;\n        }\n    }\n    return true;\n}\n\n\n\nexport function getSortDocumentsByLastWriteTimeComparator<RxDocType>(primaryPath: string) {\n    return (a: RxDocumentData<RxDocType>, b: RxDocumentData<RxDocType>) => {\n        if (a._meta.lwt === b._meta.lwt) {\n            if ((b as any)[primaryPath] < (a as any)[primaryPath]) {\n                return 1;\n            } else {\n                return -1;\n            }\n        } else {\n            return a._meta.lwt - b._meta.lwt;\n        }\n    };\n}\nexport function sortDocumentsByLastWriteTime<RxDocType>(\n    primaryPath: string,\n    docs: RxDocumentData<RxDocType>[]\n): RxDocumentData<RxDocType>[] {\n    return docs.sort(getSortDocumentsByLastWriteTimeComparator(primaryPath));\n}\n\ntype AnyDocFormat<RxDocType> = RxDocType | WithDeleted<RxDocType> | RxDocumentData<RxDocType> | WithDeletedAndAttachments<RxDocType>;\nexport function toWithDeleted<RxDocType>(\n    docData: AnyDocFormat<RxDocType> | DeepReadonly<AnyDocFormat<RxDocType>>\n): WithDeleted<RxDocType> {\n    docData = flatClone(docData);\n    (docData as any)._deleted = !!(docData as any)._deleted;\n    return Object.assign(docData as any, {\n        _attachments: undefined,\n        _meta: undefined,\n        _rev: undefined\n    }) as any;\n}\n","import { newRxError } from './rx-error.ts';\nimport type {\n    CompositePrimaryKey,\n    DeepReadonly,\n    JsonSchema,\n    PrimaryKey,\n    RxDocumentData,\n    RxJsonSchema,\n    RxStorageDefaultCheckpoint,\n    StringKeys\n} from './types/index.d.ts';\nimport {\n    appendToArray,\n    ensureNotFalsy,\n    flatClone,\n    getProperty,\n    isMaybeReadonlyArray,\n    REGEX_ALL_DOTS,\n    RX_META_LWT_MINIMUM,\n    sortObject,\n    trimDots\n} from './plugins/utils/index.ts';\nimport type { RxSchema } from './rx-schema.ts';\n\n/**\n * Helper function to create a valid RxJsonSchema\n * with a given version.\n */\nexport function getPseudoSchemaForVersion<T = any>(\n    version: number,\n    primaryKey: StringKeys<T>\n): RxJsonSchema<RxDocumentData<T>> {\n    const pseudoSchema: RxJsonSchema<RxDocumentData<T>> = fillWithDefaultSettings({\n        version,\n        type: 'object',\n        primaryKey: primaryKey as any,\n        properties: {\n            [primaryKey]: {\n                type: 'string',\n                maxLength: 100\n            }\n        } as any,\n        indexes: [\n            [primaryKey]\n        ],\n        required: [primaryKey]\n    });\n    return pseudoSchema;\n}\n\n/**\n * Returns the sub-schema for a given path\n */\nexport function getSchemaByObjectPath<T = any>(\n    rxJsonSchema: RxJsonSchema<T>,\n    path: keyof T | string\n): JsonSchema {\n    let usePath: string = path as string;\n    usePath = usePath.replace(REGEX_ALL_DOTS, '.properties.');\n    usePath = 'properties.' + usePath;\n    usePath = trimDots(usePath);\n\n    const ret = getProperty(rxJsonSchema, usePath);\n    return ret;\n}\n\nexport function fillPrimaryKey<T>(\n    primaryPath: keyof T,\n    jsonSchema: RxJsonSchema<T>,\n    documentData: RxDocumentData<T>\n): RxDocumentData<T> {\n    // optimization shortcut.\n    if (typeof jsonSchema.primaryKey === 'string') {\n        return documentData;\n    }\n\n    const newPrimary = getComposedPrimaryKeyOfDocumentData<T>(\n        jsonSchema,\n        documentData\n    );\n    const existingPrimary: string | undefined = documentData[primaryPath] as any;\n    if (\n        existingPrimary &&\n        existingPrimary !== newPrimary\n    ) {\n        throw newRxError(\n            'DOC19',\n            {\n                args: {\n                    documentData,\n                    existingPrimary,\n                    newPrimary,\n                },\n                schema: jsonSchema\n            });\n    }\n\n    (documentData as any)[primaryPath] = newPrimary;\n    return documentData;\n}\n\nexport function getPrimaryFieldOfPrimaryKey<RxDocType>(\n    primaryKey: PrimaryKey<RxDocType>\n): StringKeys<RxDocType> {\n    if (typeof primaryKey === 'string') {\n        return primaryKey as any;\n    } else {\n        return (primaryKey as CompositePrimaryKey<RxDocType>).key;\n    }\n}\n\nexport function getLengthOfPrimaryKey<RxDocType>(\n    schema: RxJsonSchema<RxDocumentData<RxDocType>>\n): number {\n    const primaryPath = getPrimaryFieldOfPrimaryKey(schema.primaryKey);\n    const schemaPart = getSchemaByObjectPath(schema, primaryPath);\n    return ensureNotFalsy(schemaPart.maxLength);\n}\n\n/**\n * Returns the composed primaryKey of a document by its data.\n */\nexport function getComposedPrimaryKeyOfDocumentData<RxDocType>(\n    jsonSchema: RxJsonSchema<RxDocType> | RxJsonSchema<RxDocumentData<RxDocType>>,\n    documentData: Partial<RxDocType>\n): string {\n    if (typeof jsonSchema.primaryKey === 'string') {\n        return (documentData as any)[jsonSchema.primaryKey];\n    }\n\n    const compositePrimary: CompositePrimaryKey<RxDocType> = jsonSchema.primaryKey as any;\n    return compositePrimary.fields.map(field => {\n        const value = getProperty(documentData as any, field as string);\n        if (typeof value === 'undefined') {\n            throw newRxError('DOC18', { args: { field, documentData } });\n        }\n        return value;\n    }).join(compositePrimary.separator);\n}\n\n\n/**\n * Normalize the RxJsonSchema.\n * We need this to ensure everything is set up properly\n * and we have the same hash on schemas that represent the same value but\n * have different json.\n *\n * - Orders the schemas attributes by alphabetical order\n * - Adds the primaryKey to all indexes that do not contain the primaryKey\n * - We need this for deterministic sort order on all queries, which is required for event-reduce to work.\n *\n * @return RxJsonSchema - ordered and filled\n */\nexport function normalizeRxJsonSchema<T>(jsonSchema: RxJsonSchema<T>): RxJsonSchema<T> {\n    const normalizedSchema: RxJsonSchema<T> = sortObject(jsonSchema, true);\n    return normalizedSchema;\n}\n\n/**\n * If the schema does not specify any index,\n * we add this index so we at least can run RxQuery()\n * and only select non-deleted fields.\n */\nexport function getDefaultIndex(primaryPath: string) {\n    return ['_deleted', primaryPath];\n}\n\n/**\n * fills the schema-json with default-settings\n * @return cloned schemaObj\n */\nexport function fillWithDefaultSettings<T = any>(\n    schemaObj: RxJsonSchema<T>\n): RxJsonSchema<RxDocumentData<T>> {\n    schemaObj = flatClone(schemaObj);\n    const primaryPath: string = getPrimaryFieldOfPrimaryKey(schemaObj.primaryKey);\n    schemaObj.properties = flatClone(schemaObj.properties);\n\n    // additionalProperties is always false\n    schemaObj.additionalProperties = false;\n\n    // fill with key-compression-state ()\n    if (!Object.prototype.hasOwnProperty.call(schemaObj, 'keyCompression')) {\n        schemaObj.keyCompression = false;\n    }\n\n    // indexes must be array\n    schemaObj.indexes = schemaObj.indexes ? schemaObj.indexes.slice(0) : [];\n\n    // required must be array\n    schemaObj.required = schemaObj.required ? schemaObj.required.slice(0) : [];\n\n    // encrypted must be array\n    schemaObj.encrypted = schemaObj.encrypted ? schemaObj.encrypted.slice(0) : [];\n\n    // add _rev\n    (schemaObj.properties as any)._rev = {\n        type: 'string',\n        minLength: 1\n    };\n\n    // add attachments\n    (schemaObj.properties as any)._attachments = {\n        type: 'object'\n    };\n\n    // add deleted flag\n    (schemaObj.properties as any)._deleted = {\n        type: 'boolean'\n    };\n\n    // add meta property\n    (schemaObj.properties as any)._meta = RX_META_SCHEMA;\n\n    /**\n     * meta fields are all required\n     */\n    schemaObj.required = schemaObj.required ? schemaObj.required.slice(0) : [];\n    (schemaObj.required as string[]).push('_deleted');\n    (schemaObj.required as string[]).push('_rev');\n    (schemaObj.required as string[]).push('_meta');\n    (schemaObj.required as string[]).push('_attachments');\n\n    // final fields are always required\n    const finalFields = getFinalFields(schemaObj);\n    appendToArray(schemaObj.required as any, finalFields);\n    schemaObj.required = schemaObj.required\n        .filter((field: string) => !field.includes('.'))\n        .filter((elem: any, pos: any, arr: any) => arr.indexOf(elem) === pos); // unique;\n\n    // version is 0 by default\n    schemaObj.version = schemaObj.version || 0;\n\n    const useIndexes: string[][] = schemaObj.indexes.map(index => {\n        const arIndex = isMaybeReadonlyArray(index) ? index.slice(0) : [index];\n        /**\n         * Append primary key to indexes that do not contain the primaryKey.\n         * All indexes must have the primaryKey to ensure a deterministic sort order.\n         */\n        if (!arIndex.includes(primaryPath)) {\n            arIndex.push(primaryPath);\n        }\n\n        // add _deleted flag to all indexes so we can query only non-deleted fields\n        // in RxDB itself\n        if (arIndex[0] !== '_deleted') {\n            arIndex.unshift('_deleted');\n        }\n\n        return arIndex;\n    });\n\n    if (useIndexes.length === 0) {\n        useIndexes.push(getDefaultIndex(primaryPath));\n    }\n\n    // we need this index for the getChangedDocumentsSince() method\n    useIndexes.push(['_meta.lwt', primaryPath]);\n\n    // also add the internalIndexes\n    if (schemaObj.internalIndexes) {\n        schemaObj.internalIndexes.map(idx => {\n            useIndexes.push(idx);\n        });\n    }\n\n    // make indexes unique\n    const hasIndex = new Set<string>();\n    useIndexes.filter(index => {\n        const indexStr = index.join(',');\n        if (hasIndex.has(indexStr)) {\n            return false;\n        } else {\n            hasIndex.add(indexStr);\n            return true;\n        }\n    });\n\n    schemaObj.indexes = useIndexes;\n\n    return schemaObj as any;\n}\n\n\nexport const RX_META_SCHEMA: JsonSchema = {\n    type: 'object',\n    properties: {\n        /**\n         * The last-write time.\n         * Unix time in milliseconds.\n         */\n        lwt: {\n            type: 'number',\n            /**\n             * We use 1 as minimum so that the value is never falsy.\n             */\n            minimum: RX_META_LWT_MINIMUM,\n            maximum: 1000000000000000,\n            multipleOf: 0.01\n        }\n    },\n    /**\n     * Additional properties are allowed\n     * and can be used by plugins to set various flags.\n     */\n    additionalProperties: true as any,\n    required: [\n        'lwt'\n    ]\n};\n\n\n/**\n * returns the final-fields of the schema\n * @return field-names of the final-fields\n */\nexport function getFinalFields<T = any>(\n    jsonSchema: RxJsonSchema<T>\n): string[] {\n    const ret = Object.keys(jsonSchema.properties)\n        .filter(key => (jsonSchema as any).properties[key].final);\n\n    // primary is also final\n    const primaryPath = getPrimaryFieldOfPrimaryKey(jsonSchema.primaryKey);\n    ret.push(primaryPath);\n\n    // fields of composite primary are final\n    if (typeof jsonSchema.primaryKey !== 'string') {\n        (jsonSchema.primaryKey as CompositePrimaryKey<T>).fields\n            .forEach(field => ret.push(field as string));\n    }\n\n    return ret;\n}\n\n/**\n * fills all unset fields with default-values if set\n * @hotPath\n */\nexport function fillObjectWithDefaults(rxSchema: RxSchema<any>, obj: any): any {\n    const defaultKeys = Object.keys(rxSchema.defaultValues);\n    for (let i = 0; i < defaultKeys.length; ++i) {\n        const key = defaultKeys[i];\n        if (!Object.prototype.hasOwnProperty.call(obj, key) || typeof obj[key] === 'undefined') {\n            obj[key] = rxSchema.defaultValues[key];\n        }\n    }\n    return obj;\n}\n\nexport const DEFAULT_CHECKPOINT_SCHEMA: DeepReadonly<JsonSchema<RxStorageDefaultCheckpoint>> = {\n    type: 'object',\n    properties: {\n        id: {\n            type: 'string'\n        },\n        lwt: {\n            type: 'number'\n        }\n    },\n    required: [\n        'id',\n        'lwt'\n    ],\n    additionalProperties: false\n} as const;\n","import {\n    overwriteGetterForCaching,\n    isMaybeReadonlyArray,\n    deepEqual\n} from './plugins/utils/index.ts';\nimport {\n    newRxError,\n} from './rx-error.ts';\nimport {\n    runPluginHooks\n} from './hooks.ts';\n\nimport type {\n    DeepMutable,\n    DeepReadonly,\n    HashFunction,\n    MaybeReadonly,\n    RxDocument,\n    RxDocumentData,\n    RxJsonSchema,\n    StringKeys\n} from './types/index.d.ts';\nimport {\n    fillWithDefaultSettings,\n    getComposedPrimaryKeyOfDocumentData,\n    getFinalFields,\n    getPrimaryFieldOfPrimaryKey,\n    getSchemaByObjectPath,\n    normalizeRxJsonSchema\n} from './rx-schema-helper.ts';\nimport { overwritable } from './overwritable.ts';\n\nexport class RxSchema<RxDocType = any> {\n    public indexes: MaybeReadonly<string[]>[];\n    public readonly primaryPath: StringKeys<RxDocumentData<RxDocType>>;\n    public finalFields: string[];\n\n    constructor(\n        public readonly jsonSchema: RxJsonSchema<RxDocumentData<RxDocType>>,\n        public readonly hashFunction: HashFunction\n    ) {\n        this.indexes = getIndexes(this.jsonSchema);\n\n        // primary is always required\n        this.primaryPath = getPrimaryFieldOfPrimaryKey(this.jsonSchema.primaryKey);\n\n        this.finalFields = getFinalFields(this.jsonSchema);\n    }\n\n    public get version(): number {\n        return this.jsonSchema.version;\n    }\n\n    public get defaultValues(): { [P in keyof RxDocType]: RxDocType[P] } {\n        const values = {} as { [P in keyof RxDocType]: RxDocType[P] };\n        Object\n            .entries(this.jsonSchema.properties)\n            .filter(([, v]) => Object.prototype.hasOwnProperty.call(v, 'default'))\n            .forEach(([k, v]) => (values as any)[k] = (v as any).default);\n        return overwriteGetterForCaching(\n            this,\n            'defaultValues',\n            values\n        );\n    }\n\n    /**\n     * @overrides itself on the first call\n     *\n     * TODO this should be a pure function that\n     * caches the hash in a WeakMap.\n     */\n    public get hash(): Promise<string> {\n        return overwriteGetterForCaching(\n            this,\n            'hash',\n            this.hashFunction(JSON.stringify(this.jsonSchema))\n        );\n    }\n\n    /**\n     * checks if a given change on a document is allowed\n     * Ensures that:\n     * - final fields are not modified\n     * @throws {Error} if not valid\n     */\n    validateChange(dataBefore: any, dataAfter: any): void {\n        this.finalFields.forEach(fieldName => {\n            if (!deepEqual(dataBefore[fieldName], dataAfter[fieldName])) {\n                throw newRxError('DOC9', {\n                    dataBefore,\n                    dataAfter,\n                    fieldName,\n                    schema: this.jsonSchema\n                });\n            }\n        });\n    }\n\n    /**\n     * creates the schema-based document-prototype,\n     * see RxCollection.getDocumentPrototype()\n     */\n    public getDocumentPrototype(): any {\n        const proto: any = {};\n\n        /**\n         * On the top level, we know all keys\n         * and therefore do not have to create a new Proxy object\n         * for each document. Instead we define the getter in the prototype once.\n         */\n        const pathProperties = getSchemaByObjectPath(\n            this.jsonSchema,\n            ''\n        );\n        Object.keys(pathProperties)\n            .forEach(key => {\n                const fullPath = key;\n\n                // getter - value\n                proto.__defineGetter__(\n                    key,\n                    function (this: RxDocument) {\n                        if (!this.get || typeof this.get !== 'function') {\n                            /**\n                             * When an object gets added to the state of a vuejs-component,\n                             * it happens that this getter is called with another scope.\n                             * To prevent errors, we have to return undefined in this case\n                             */\n                            return undefined;\n                        }\n                        const ret = this.get(fullPath);\n                        return ret;\n                    }\n                );\n                // getter - observable$\n                Object.defineProperty(proto, key + '$', {\n                    get: function () {\n                        return this.get$(fullPath);\n                    },\n                    enumerable: false,\n                    configurable: false\n                });\n                // getter - reactivity$$\n                Object.defineProperty(proto, key + '$$', {\n                    get: function () {\n                        return this.get$$(fullPath);\n                    },\n                    enumerable: false,\n                    configurable: false\n                });\n                // getter - populate_\n                Object.defineProperty(proto, key + '_', {\n                    get: function () {\n                        return this.populate(fullPath);\n                    },\n                    enumerable: false,\n                    configurable: false\n                });\n            });\n\n        overwriteGetterForCaching(\n            this,\n            'getDocumentPrototype',\n            () => proto\n        );\n        return proto;\n    }\n\n\n    getPrimaryOfDocumentData(\n        documentData: Partial<RxDocType>\n    ): string {\n        return getComposedPrimaryKeyOfDocumentData(\n            this.jsonSchema,\n            documentData\n        );\n    }\n}\n\nexport function getIndexes<RxDocType = any>(\n    jsonSchema: RxJsonSchema<RxDocType>\n): MaybeReadonly<string[]>[] {\n    return (jsonSchema.indexes || []).map(index => isMaybeReadonlyArray(index) ? index : [index]);\n}\n\n/**\n * array with previous version-numbers\n */\nexport function getPreviousVersions(schema: RxJsonSchema<any>): number[] {\n    const version = schema.version ? schema.version : 0;\n    let c = 0;\n    return new Array(version)\n        .fill(0)\n        .map(() => c++);\n}\n\nexport function createRxSchema<T>(\n    jsonSchema: RxJsonSchema<T>,\n    hashFunction: HashFunction,\n    runPreCreateHooks = true\n): RxSchema<T> {\n    if (runPreCreateHooks) {\n        runPluginHooks('preCreateRxSchema', jsonSchema);\n    }\n\n    let useJsonSchema = fillWithDefaultSettings(jsonSchema);\n    useJsonSchema = normalizeRxJsonSchema(useJsonSchema);\n    overwritable.deepFreezeWhenDevMode(useJsonSchema);\n\n    const schema = new RxSchema(useJsonSchema, hashFunction);\n    runPluginHooks('createRxSchema', schema);\n    return schema;\n}\n\nexport function isRxSchema(obj: any): boolean {\n    return obj instanceof RxSchema;\n}\n\n/**\n * Used as helper function the generate the document type out of the schema via typescript.\n * @link https://github.com/pubkey/rxdb/discussions/3467\n */\nexport function toTypedRxJsonSchema<T extends DeepReadonly<RxJsonSchema<any>>>(schema: T): DeepMutable<T> {\n    return schema as any;\n}\n","/**\n * Returns true if the object is a function.\n * @param value The value to check\n */\nexport function isFunction(value: any): value is (...args: any[]) => any {\n  return typeof value === 'function';\n}\n","import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction } from '../types';\nimport { isFunction } from './isFunction';\n\n/**\n * Used to determine if an object is an Observable with a lift function.\n */\nexport function hasLift(source: any): source is { lift: InstanceType<typeof Observable>['lift'] } {\n  return isFunction(source?.lift);\n}\n\n/**\n * Creates an `OperatorFunction`. Used to define operators throughout the library in a concise way.\n * @param init The logic to connect the liftedSource to the subscriber at the moment of subscription.\n */\nexport function operate<T, R>(\n  init: (liftedSource: Observable<T>, subscriber: Subscriber<R>) => (() => void) | void\n): OperatorFunction<T, R> {\n  return (source: Observable<T>) => {\n    if (hasLift(source)) {\n      return source.lift(function (this: Subscriber<R>, liftedSource: Observable<T>) {\n        try {\n          return init(liftedSource, this);\n        } catch (err) {\n          this.error(err);\n        }\n      });\n    }\n    throw new TypeError('Unable to lift unknown Observable type');\n  };\n}\n","/**\n * Used to create Error subclasses until the community moves away from ES5.\n *\n * This is because compiling from TypeScript down to ES5 has issues with subclassing Errors\n * as well as other built-in types: https://github.com/Microsoft/TypeScript/issues/12123\n *\n * @param createImpl A factory function to create the actual constructor implementation. The returned\n * function should be a named function that calls `_super` internally.\n */\nexport function createErrorClass<T>(createImpl: (_super: any) => any): T {\n  const _super = (instance: any) => {\n    Error.call(instance);\n    instance.stack = new Error().stack;\n  };\n\n  const ctorFunc = createImpl(_super);\n  ctorFunc.prototype = Object.create(Error.prototype);\n  ctorFunc.prototype.constructor = ctorFunc;\n  return ctorFunc;\n}\n","import { createErrorClass } from './createErrorClass';\n\nexport interface UnsubscriptionError extends Error {\n  readonly errors: any[];\n}\n\nexport interface UnsubscriptionErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (errors: any[]): UnsubscriptionError;\n}\n\n/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nexport const UnsubscriptionError: UnsubscriptionErrorCtor = createErrorClass(\n  (_super) =>\n    function UnsubscriptionErrorImpl(this: any, errors: (Error | string)[]) {\n      _super(this);\n      this.message = errors\n        ? `${errors.length} errors occurred during unsubscription:\n${errors.map((err, i) => `${i + 1}) ${err.toString()}`).join('\\n  ')}`\n        : '';\n      this.name = 'UnsubscriptionError';\n      this.errors = errors;\n    }\n);\n","/**\n * Removes an item from an array, mutating it.\n * @param arr The array to remove the item from\n * @param item The item to remove\n */\nexport function arrRemove<T>(arr: T[] | undefined | null, item: T) {\n  if (arr) {\n    const index = arr.indexOf(item);\n    0 <= index && arr.splice(index, 1);\n  }\n}\n","import { isFunction } from './util/isFunction';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nimport { SubscriptionLike, TeardownLogic, Unsubscribable } from './types';\nimport { arrRemove } from './util/arrRemove';\n\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nexport class Subscription implements SubscriptionLike {\n  /** @nocollapse */\n  public static EMPTY = (() => {\n    const empty = new Subscription();\n    empty.closed = true;\n    return empty;\n  })();\n\n  /**\n   * A flag to indicate whether this Subscription has already been unsubscribed.\n   */\n  public closed = false;\n\n  private _parentage: Subscription[] | Subscription | null = null;\n\n  /**\n   * The list of registered finalizers to execute upon unsubscription. Adding and removing from this\n   * list occurs in the {@link #add} and {@link #remove} methods.\n   */\n  private _finalizers: Exclude<TeardownLogic, void>[] | null = null;\n\n  /**\n   * @param initialTeardown A function executed first as part of the finalization\n   * process that is kicked off when {@link #unsubscribe} is called.\n   */\n  constructor(private initialTeardown?: () => void) {}\n\n  /**\n   * Disposes the resources held by the subscription. May, for instance, cancel\n   * an ongoing Observable execution or cancel any other type of work that\n   * started when the Subscription was created.\n   * @return {void}\n   */\n  unsubscribe(): void {\n    let errors: any[] | undefined;\n\n    if (!this.closed) {\n      this.closed = true;\n\n      // Remove this from it's parents.\n      const { _parentage } = this;\n      if (_parentage) {\n        this._parentage = null;\n        if (Array.isArray(_parentage)) {\n          for (const parent of _parentage) {\n            parent.remove(this);\n          }\n        } else {\n          _parentage.remove(this);\n        }\n      }\n\n      const { initialTeardown: initialFinalizer } = this;\n      if (isFunction(initialFinalizer)) {\n        try {\n          initialFinalizer();\n        } catch (e) {\n          errors = e instanceof UnsubscriptionError ? e.errors : [e];\n        }\n      }\n\n      const { _finalizers } = this;\n      if (_finalizers) {\n        this._finalizers = null;\n        for (const finalizer of _finalizers) {\n          try {\n            execFinalizer(finalizer);\n          } catch (err) {\n            errors = errors ?? [];\n            if (err instanceof UnsubscriptionError) {\n              errors = [...errors, ...err.errors];\n            } else {\n              errors.push(err);\n            }\n          }\n        }\n      }\n\n      if (errors) {\n        throw new UnsubscriptionError(errors);\n      }\n    }\n  }\n\n  /**\n   * Adds a finalizer to this subscription, so that finalization will be unsubscribed/called\n   * when this subscription is unsubscribed. If this subscription is already {@link #closed},\n   * because it has already been unsubscribed, then whatever finalizer is passed to it\n   * will automatically be executed (unless the finalizer itself is also a closed subscription).\n   *\n   * Closed Subscriptions cannot be added as finalizers to any subscription. Adding a closed\n   * subscription to a any subscription will result in no operation. (A noop).\n   *\n   * Adding a subscription to itself, or adding `null` or `undefined` will not perform any\n   * operation at all. (A noop).\n   *\n   * `Subscription` instances that are added to this instance will automatically remove themselves\n   * if they are unsubscribed. Functions and {@link Unsubscribable} objects that you wish to remove\n   * will need to be removed manually with {@link #remove}\n   *\n   * @param teardown The finalization logic to add to this subscription.\n   */\n  add(teardown: TeardownLogic): void {\n    // Only add the finalizer if it's not undefined\n    // and don't add a subscription to itself.\n    if (teardown && teardown !== this) {\n      if (this.closed) {\n        // If this subscription is already closed,\n        // execute whatever finalizer is handed to it automatically.\n        execFinalizer(teardown);\n      } else {\n        if (teardown instanceof Subscription) {\n          // We don't add closed subscriptions, and we don't add the same subscription\n          // twice. Subscription unsubscribe is idempotent.\n          if (teardown.closed || teardown._hasParent(this)) {\n            return;\n          }\n          teardown._addParent(this);\n        }\n        (this._finalizers = this._finalizers ?? []).push(teardown);\n      }\n    }\n  }\n\n  /**\n   * Checks to see if a this subscription already has a particular parent.\n   * This will signal that this subscription has already been added to the parent in question.\n   * @param parent the parent to check for\n   */\n  private _hasParent(parent: Subscription) {\n    const { _parentage } = this;\n    return _parentage === parent || (Array.isArray(_parentage) && _parentage.includes(parent));\n  }\n\n  /**\n   * Adds a parent to this subscription so it can be removed from the parent if it\n   * unsubscribes on it's own.\n   *\n   * NOTE: THIS ASSUMES THAT {@link _hasParent} HAS ALREADY BEEN CHECKED.\n   * @param parent The parent subscription to add\n   */\n  private _addParent(parent: Subscription) {\n    const { _parentage } = this;\n    this._parentage = Array.isArray(_parentage) ? (_parentage.push(parent), _parentage) : _parentage ? [_parentage, parent] : parent;\n  }\n\n  /**\n   * Called on a child when it is removed via {@link #remove}.\n   * @param parent The parent to remove\n   */\n  private _removeParent(parent: Subscription) {\n    const { _parentage } = this;\n    if (_parentage === parent) {\n      this._parentage = null;\n    } else if (Array.isArray(_parentage)) {\n      arrRemove(_parentage, parent);\n    }\n  }\n\n  /**\n   * Removes a finalizer from this subscription that was previously added with the {@link #add} method.\n   *\n   * Note that `Subscription` instances, when unsubscribed, will automatically remove themselves\n   * from every other `Subscription` they have been added to. This means that using the `remove` method\n   * is not a common thing and should be used thoughtfully.\n   *\n   * If you add the same finalizer instance of a function or an unsubscribable object to a `Subscription` instance\n   * more than once, you will need to call `remove` the same number of times to remove all instances.\n   *\n   * All finalizer instances are removed to free up memory upon unsubscription.\n   *\n   * @param teardown The finalizer to remove from this subscription\n   */\n  remove(teardown: Exclude<TeardownLogic, void>): void {\n    const { _finalizers } = this;\n    _finalizers && arrRemove(_finalizers, teardown);\n\n    if (teardown instanceof Subscription) {\n      teardown._removeParent(this);\n    }\n  }\n}\n\nexport const EMPTY_SUBSCRIPTION = Subscription.EMPTY;\n\nexport function isSubscription(value: any): value is Subscription {\n  return (\n    value instanceof Subscription ||\n    (value && 'closed' in value && isFunction(value.remove) && isFunction(value.add) && isFunction(value.unsubscribe))\n  );\n}\n\nfunction execFinalizer(finalizer: Unsubscribable | (() => void)) {\n  if (isFunction(finalizer)) {\n    finalizer();\n  } else {\n    finalizer.unsubscribe();\n  }\n}\n","import { Subscriber } from './Subscriber';\nimport { ObservableNotification } from './types';\n\n/**\n * The {@link GlobalConfig} object for RxJS. It is used to configure things\n * like how to react on unhandled errors.\n */\nexport const config: GlobalConfig = {\n  onUnhandledError: null,\n  onStoppedNotification: null,\n  Promise: undefined,\n  useDeprecatedSynchronousErrorHandling: false,\n  useDeprecatedNextContext: false,\n};\n\n/**\n * The global configuration object for RxJS, used to configure things\n * like how to react on unhandled errors. Accessible via {@link config}\n * object.\n */\nexport interface GlobalConfig {\n  /**\n   * A registration point for unhandled errors from RxJS. These are errors that\n   * cannot were not handled by consuming code in the usual subscription path. For\n   * example, if you have this configured, and you subscribe to an observable without\n   * providing an error handler, errors from that subscription will end up here. This\n   * will _always_ be called asynchronously on another job in the runtime. This is because\n   * we do not want errors thrown in this user-configured handler to interfere with the\n   * behavior of the library.\n   */\n  onUnhandledError: ((err: any) => void) | null;\n\n  /**\n   * A registration point for notifications that cannot be sent to subscribers because they\n   * have completed, errored or have been explicitly unsubscribed. By default, next, complete\n   * and error notifications sent to stopped subscribers are noops. However, sometimes callers\n   * might want a different behavior. For example, with sources that attempt to report errors\n   * to stopped subscribers, a caller can configure RxJS to throw an unhandled error instead.\n   * This will _always_ be called asynchronously on another job in the runtime. This is because\n   * we do not want errors thrown in this user-configured handler to interfere with the\n   * behavior of the library.\n   */\n  onStoppedNotification: ((notification: ObservableNotification<any>, subscriber: Subscriber<any>) => void) | null;\n\n  /**\n   * The promise constructor used by default for {@link Observable#toPromise toPromise} and {@link Observable#forEach forEach}\n   * methods.\n   *\n   * @deprecated As of version 8, RxJS will no longer support this sort of injection of a\n   * Promise constructor. If you need a Promise implementation other than native promises,\n   * please polyfill/patch Promise as you see appropriate. Will be removed in v8.\n   */\n  Promise?: PromiseConstructorLike;\n\n  /**\n   * If true, turns on synchronous error rethrowing, which is a deprecated behavior\n   * in v6 and higher. This behavior enables bad patterns like wrapping a subscribe\n   * call in a try/catch block. It also enables producer interference, a nasty bug\n   * where a multicast can be broken for all observers by a downstream consumer with\n   * an unhandled error. DO NOT USE THIS FLAG UNLESS IT'S NEEDED TO BUY TIME\n   * FOR MIGRATION REASONS.\n   *\n   * @deprecated As of version 8, RxJS will no longer support synchronous throwing\n   * of unhandled errors. All errors will be thrown on a separate call stack to prevent bad\n   * behaviors described above. Will be removed in v8.\n   */\n  useDeprecatedSynchronousErrorHandling: boolean;\n\n  /**\n   * If true, enables an as-of-yet undocumented feature from v5: The ability to access\n   * `unsubscribe()` via `this` context in `next` functions created in observers passed\n   * to `subscribe`.\n   *\n   * This is being removed because the performance was severely problematic, and it could also cause\n   * issues when types other than POJOs are passed to subscribe as subscribers, as they will likely have\n   * their `this` context overwritten.\n   *\n   * @deprecated As of version 8, RxJS will no longer support altering the\n   * context of next functions provided as part of an observer to Subscribe. Instead,\n   * you will have access to a subscription or a signal or token that will allow you to do things like\n   * unsubscribe and test closed status. Will be removed in v8.\n   */\n  useDeprecatedNextContext: boolean;\n}\n","import type { TimerHandle } from './timerHandle';\ntype SetTimeoutFunction = (handler: () => void, timeout?: number, ...args: any[]) => TimerHandle;\ntype ClearTimeoutFunction = (handle: TimerHandle) => void;\n\ninterface TimeoutProvider {\n  setTimeout: SetTimeoutFunction;\n  clearTimeout: ClearTimeoutFunction;\n  delegate:\n    | {\n        setTimeout: SetTimeoutFunction;\n        clearTimeout: ClearTimeoutFunction;\n      }\n    | undefined;\n}\n\nexport const timeoutProvider: TimeoutProvider = {\n  // When accessing the delegate, use the variable rather than `this` so that\n  // the functions can be called without being bound to the provider.\n  setTimeout(handler: () => void, timeout?: number, ...args) {\n    const { delegate } = timeoutProvider;\n    if (delegate?.setTimeout) {\n      return delegate.setTimeout(handler, timeout, ...args);\n    }\n    return setTimeout(handler, timeout, ...args);\n  },\n  clearTimeout(handle) {\n    const { delegate } = timeoutProvider;\n    return (delegate?.clearTimeout || clearTimeout)(handle as any);\n  },\n  delegate: undefined,\n};\n","import { config } from '../config';\nimport { timeoutProvider } from '../scheduler/timeoutProvider';\n\n/**\n * Handles an error on another job either with the user-configured {@link onUnhandledError},\n * or by throwing it on that new job so it can be picked up by `window.onerror`, `process.on('error')`, etc.\n *\n * This should be called whenever there is an error that is out-of-band with the subscription\n * or when an error hits a terminal boundary of the subscription and no error handler was provided.\n *\n * @param err the error to report\n */\nexport function reportUnhandledError(err: any) {\n  timeoutProvider.setTimeout(() => {\n    const { onUnhandledError } = config;\n    if (onUnhandledError) {\n      // Execute the user-configured error handler.\n      onUnhandledError(err);\n    } else {\n      // Throw so it is picked up by the runtime's uncaught error mechanism.\n      throw err;\n    }\n  });\n}\n","/* tslint:disable:no-empty */\nexport function noop() { }\n","import { CompleteNotification, NextNotification, ErrorNotification } from './types';\n\n/**\n * A completion object optimized for memory use and created to be the\n * same \"shape\" as other notifications in v8.\n * @internal\n */\nexport const COMPLETE_NOTIFICATION = (() => createNotification('C', undefined, undefined) as CompleteNotification)();\n\n/**\n * Internal use only. Creates an optimized error notification that is the same \"shape\"\n * as other notifications.\n * @internal\n */\nexport function errorNotification(error: any): ErrorNotification {\n  return createNotification('E', undefined, error) as any;\n}\n\n/**\n * Internal use only. Creates an optimized next notification that is the same \"shape\"\n * as other notifications.\n * @internal\n */\nexport function nextNotification<T>(value: T) {\n  return createNotification('N', value, undefined) as NextNotification<T>;\n}\n\n/**\n * Ensures that all notifications created internally have the same \"shape\" in v8.\n *\n * TODO: This is only exported to support a crazy legacy test in `groupBy`.\n * @internal\n */\nexport function createNotification(kind: 'N' | 'E' | 'C', value: any, error: any) {\n  return {\n    kind,\n    value,\n    error,\n  };\n}\n","import { config } from '../config';\n\nlet context: { errorThrown: boolean; error: any } | null = null;\n\n/**\n * Handles dealing with errors for super-gross mode. Creates a context, in which\n * any synchronously thrown errors will be passed to {@link captureError}. Which\n * will record the error such that it will be rethrown after the call back is complete.\n * TODO: Remove in v8\n * @param cb An immediately executed function.\n */\nexport function errorContext(cb: () => void) {\n  if (config.useDeprecatedSynchronousErrorHandling) {\n    const isRoot = !context;\n    if (isRoot) {\n      context = { errorThrown: false, error: null };\n    }\n    cb();\n    if (isRoot) {\n      const { errorThrown, error } = context!;\n      context = null;\n      if (errorThrown) {\n        throw error;\n      }\n    }\n  } else {\n    // This is the general non-deprecated path for everyone that\n    // isn't crazy enough to use super-gross mode (useDeprecatedSynchronousErrorHandling)\n    cb();\n  }\n}\n\n/**\n * Captures errors only in super-gross mode.\n * @param err the error to capture\n */\nexport function captureError(err: any) {\n  if (config.useDeprecatedSynchronousErrorHandling && context) {\n    context.errorThrown = true;\n    context.error = err;\n  }\n}\n","import { isFunction } from './util/isFunction';\nimport { Observer, ObservableNotification } from './types';\nimport { isSubscription, Subscription } from './Subscription';\nimport { config } from './config';\nimport { reportUnhandledError } from './util/reportUnhandledError';\nimport { noop } from './util/noop';\nimport { nextNotification, errorNotification, COMPLETE_NOTIFICATION } from './NotificationFactories';\nimport { timeoutProvider } from './scheduler/timeoutProvider';\nimport { captureError } from './util/errorContext';\n\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nexport class Subscriber<T> extends Subscription implements Observer<T> {\n  /**\n   * A static factory for a Subscriber, given a (potentially partial) definition\n   * of an Observer.\n   * @param next The `next` callback of an Observer.\n   * @param error The `error` callback of an\n   * Observer.\n   * @param complete The `complete` callback of an\n   * Observer.\n   * @return A Subscriber wrapping the (partially defined)\n   * Observer represented by the given arguments.\n   * @nocollapse\n   * @deprecated Do not use. Will be removed in v8. There is no replacement for this\n   * method, and there is no reason to be creating instances of `Subscriber` directly.\n   * If you have a specific use case, please file an issue.\n   */\n  static create<T>(next?: (x?: T) => void, error?: (e?: any) => void, complete?: () => void): Subscriber<T> {\n    return new SafeSubscriber(next, error, complete);\n  }\n\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  protected isStopped: boolean = false;\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  protected destination: Subscriber<any> | Observer<any>; // this `any` is the escape hatch to erase extra type param (e.g. R)\n\n  /**\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   * There is no reason to directly create an instance of Subscriber. This type is exported for typings reasons.\n   */\n  constructor(destination?: Subscriber<any> | Observer<any>) {\n    super();\n    if (destination) {\n      this.destination = destination;\n      // Automatically chain subscriptions together here.\n      // if destination is a Subscription, then it is a Subscriber.\n      if (isSubscription(destination)) {\n        destination.add(this);\n      }\n    } else {\n      this.destination = EMPTY_OBSERVER;\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `next` from\n   * the Observable, with a value. The Observable may call this method 0 or more\n   * times.\n   * @param {T} [value] The `next` value.\n   * @return {void}\n   */\n  next(value?: T): void {\n    if (this.isStopped) {\n      handleStoppedNotification(nextNotification(value), this);\n    } else {\n      this._next(value!);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `error` from\n   * the Observable, with an attached `Error`. Notifies the Observer that\n   * the Observable has experienced an error condition.\n   * @param {any} [err] The `error` exception.\n   * @return {void}\n   */\n  error(err?: any): void {\n    if (this.isStopped) {\n      handleStoppedNotification(errorNotification(err), this);\n    } else {\n      this.isStopped = true;\n      this._error(err);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive a valueless notification of type\n   * `complete` from the Observable. Notifies the Observer that the Observable\n   * has finished sending push-based notifications.\n   * @return {void}\n   */\n  complete(): void {\n    if (this.isStopped) {\n      handleStoppedNotification(COMPLETE_NOTIFICATION, this);\n    } else {\n      this.isStopped = true;\n      this._complete();\n    }\n  }\n\n  unsubscribe(): void {\n    if (!this.closed) {\n      this.isStopped = true;\n      super.unsubscribe();\n      this.destination = null!;\n    }\n  }\n\n  protected _next(value: T): void {\n    this.destination.next(value);\n  }\n\n  protected _error(err: any): void {\n    try {\n      this.destination.error(err);\n    } finally {\n      this.unsubscribe();\n    }\n  }\n\n  protected _complete(): void {\n    try {\n      this.destination.complete();\n    } finally {\n      this.unsubscribe();\n    }\n  }\n}\n\n/**\n * This bind is captured here because we want to be able to have\n * compatibility with monoid libraries that tend to use a method named\n * `bind`. In particular, a library called Monio requires this.\n */\nconst _bind = Function.prototype.bind;\n\nfunction bind<Fn extends (...args: any[]) => any>(fn: Fn, thisArg: any): Fn {\n  return _bind.call(fn, thisArg);\n}\n\n/**\n * Internal optimization only, DO NOT EXPOSE.\n * @internal\n */\nclass ConsumerObserver<T> implements Observer<T> {\n  constructor(private partialObserver: Partial<Observer<T>>) {}\n\n  next(value: T): void {\n    const { partialObserver } = this;\n    if (partialObserver.next) {\n      try {\n        partialObserver.next(value);\n      } catch (error) {\n        handleUnhandledError(error);\n      }\n    }\n  }\n\n  error(err: any): void {\n    const { partialObserver } = this;\n    if (partialObserver.error) {\n      try {\n        partialObserver.error(err);\n      } catch (error) {\n        handleUnhandledError(error);\n      }\n    } else {\n      handleUnhandledError(err);\n    }\n  }\n\n  complete(): void {\n    const { partialObserver } = this;\n    if (partialObserver.complete) {\n      try {\n        partialObserver.complete();\n      } catch (error) {\n        handleUnhandledError(error);\n      }\n    }\n  }\n}\n\nexport class SafeSubscriber<T> extends Subscriber<T> {\n  constructor(\n    observerOrNext?: Partial<Observer<T>> | ((value: T) => void) | null,\n    error?: ((e?: any) => void) | null,\n    complete?: (() => void) | null\n  ) {\n    super();\n\n    let partialObserver: Partial<Observer<T>>;\n    if (isFunction(observerOrNext) || !observerOrNext) {\n      // The first argument is a function, not an observer. The next\n      // two arguments *could* be observers, or they could be empty.\n      partialObserver = {\n        next: (observerOrNext ?? undefined) as (((value: T) => void) | undefined),\n        error: error ?? undefined,\n        complete: complete ?? undefined,\n      };\n    } else {\n      // The first argument is a partial observer.\n      let context: any;\n      if (this && config.useDeprecatedNextContext) {\n        // This is a deprecated path that made `this.unsubscribe()` available in\n        // next handler functions passed to subscribe. This only exists behind a flag\n        // now, as it is *very* slow.\n        context = Object.create(observerOrNext);\n        context.unsubscribe = () => this.unsubscribe();\n        partialObserver = {\n          next: observerOrNext.next && bind(observerOrNext.next, context),\n          error: observerOrNext.error && bind(observerOrNext.error, context),\n          complete: observerOrNext.complete && bind(observerOrNext.complete, context),\n        };\n      } else {\n        // The \"normal\" path. Just use the partial observer directly.\n        partialObserver = observerOrNext;\n      }\n    }\n\n    // Wrap the partial observer to ensure it's a full observer, and\n    // make sure proper error handling is accounted for.\n    this.destination = new ConsumerObserver(partialObserver);\n  }\n}\n\nfunction handleUnhandledError(error: any) {\n  if (config.useDeprecatedSynchronousErrorHandling) {\n    captureError(error);\n  } else {\n    // Ideal path, we report this as an unhandled error,\n    // which is thrown on a new call stack.\n    reportUnhandledError(error);\n  }\n}\n\n/**\n * An error handler used when no error handler was supplied\n * to the SafeSubscriber -- meaning no error handler was supplied\n * do the `subscribe` call on our observable.\n * @param err The error to handle\n */\nfunction defaultErrorHandler(err: any) {\n  throw err;\n}\n\n/**\n * A handler for notifications that cannot be sent to a stopped subscriber.\n * @param notification The notification being sent\n * @param subscriber The stopped subscriber\n */\nfunction handleStoppedNotification(notification: ObservableNotification<any>, subscriber: Subscriber<any>) {\n  const { onStoppedNotification } = config;\n  onStoppedNotification && timeoutProvider.setTimeout(() => onStoppedNotification(notification, subscriber));\n}\n\n/**\n * The observer used as a stub for subscriptions where the user did not\n * pass any arguments to `subscribe`. Comes with the default error handling\n * behavior.\n */\nexport const EMPTY_OBSERVER: Readonly<Observer<any>> & { closed: true } = {\n  closed: true,\n  next: noop,\n  error: defaultErrorHandler,\n  complete: noop,\n};\n","import { Subscriber } from '../Subscriber';\n\n/**\n * Creates an instance of an `OperatorSubscriber`.\n * @param destination The downstream subscriber.\n * @param onNext Handles next values, only called if this subscriber is not stopped or closed. Any\n * error that occurs in this function is caught and sent to the `error` method of this subscriber.\n * @param onError Handles errors from the subscription, any errors that occur in this handler are caught\n * and send to the `destination` error handler.\n * @param onComplete Handles completion notification from the subscription. Any errors that occur in\n * this handler are sent to the `destination` error handler.\n * @param onFinalize Additional teardown logic here. This will only be called on teardown if the\n * subscriber itself is not already closed. This is called after all other teardown logic is executed.\n */\nexport function createOperatorSubscriber<T>(\n  destination: Subscriber<any>,\n  onNext?: (value: T) => void,\n  onComplete?: () => void,\n  onError?: (err: any) => void,\n  onFinalize?: () => void\n): Subscriber<T> {\n  return new OperatorSubscriber(destination, onNext, onComplete, onError, onFinalize);\n}\n\n/**\n * A generic helper for allowing operators to be created with a Subscriber and\n * use closures to capture necessary state from the operator function itself.\n */\nexport class OperatorSubscriber<T> extends Subscriber<T> {\n  /**\n   * Creates an instance of an `OperatorSubscriber`.\n   * @param destination The downstream subscriber.\n   * @param onNext Handles next values, only called if this subscriber is not stopped or closed. Any\n   * error that occurs in this function is caught and sent to the `error` method of this subscriber.\n   * @param onError Handles errors from the subscription, any errors that occur in this handler are caught\n   * and send to the `destination` error handler.\n   * @param onComplete Handles completion notification from the subscription. Any errors that occur in\n   * this handler are sent to the `destination` error handler.\n   * @param onFinalize Additional finalization logic here. This will only be called on finalization if the\n   * subscriber itself is not already closed. This is called after all other finalization logic is executed.\n   * @param shouldUnsubscribe An optional check to see if an unsubscribe call should truly unsubscribe.\n   * NOTE: This currently **ONLY** exists to support the strange behavior of {@link groupBy}, where unsubscription\n   * to the resulting observable does not actually disconnect from the source if there are active subscriptions\n   * to any grouped observable. (DO NOT EXPOSE OR USE EXTERNALLY!!!)\n   */\n  constructor(\n    destination: Subscriber<any>,\n    onNext?: (value: T) => void,\n    onComplete?: () => void,\n    onError?: (err: any) => void,\n    private onFinalize?: () => void,\n    private shouldUnsubscribe?: () => boolean\n  ) {\n    // It's important - for performance reasons - that all of this class's\n    // members are initialized and that they are always initialized in the same\n    // order. This will ensure that all OperatorSubscriber instances have the\n    // same hidden class in V8. This, in turn, will help keep the number of\n    // hidden classes involved in property accesses within the base class as\n    // low as possible. If the number of hidden classes involved exceeds four,\n    // the property accesses will become megamorphic and performance penalties\n    // will be incurred - i.e. inline caches won't be used.\n    //\n    // The reasons for ensuring all instances have the same hidden class are\n    // further discussed in this blog post from Benedikt Meurer:\n    // https://benediktmeurer.de/2018/03/23/impact-of-polymorphism-on-component-based-frameworks-like-react/\n    super(destination);\n    this._next = onNext\n      ? function (this: OperatorSubscriber<T>, value: T) {\n          try {\n            onNext(value);\n          } catch (err) {\n            destination.error(err);\n          }\n        }\n      : super._next;\n    this._error = onError\n      ? function (this: OperatorSubscriber<T>, err: any) {\n          try {\n            onError(err);\n          } catch (err) {\n            // Send any errors that occur down stream.\n            destination.error(err);\n          } finally {\n            // Ensure finalization.\n            this.unsubscribe();\n          }\n        }\n      : super._error;\n    this._complete = onComplete\n      ? function (this: OperatorSubscriber<T>) {\n          try {\n            onComplete();\n          } catch (err) {\n            // Send any errors that occur down stream.\n            destination.error(err);\n          } finally {\n            // Ensure finalization.\n            this.unsubscribe();\n          }\n        }\n      : super._complete;\n  }\n\n  unsubscribe() {\n    if (!this.shouldUnsubscribe || this.shouldUnsubscribe()) {\n      const { closed } = this;\n      super.unsubscribe();\n      // Execute additional teardown if we have any and we didn't already do so.\n      !closed && this.onFinalize?.();\n    }\n  }\n}\n","import { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\nexport function map<T, R>(project: (value: T, index: number) => R): OperatorFunction<T, R>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function map<T, R, A>(project: (this: A, value: T, index: number) => R, thisArg: A): OperatorFunction<T, R>;\n\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * ![](map.png)\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * ## Example\n *\n * Map every click to the `clientX` position of that click\n *\n * ```ts\n * import { fromEvent, map } from 'rxjs';\n *\n * const clicks = fromEvent<PointerEvent>(document, 'click');\n * const positions = clicks.pipe(map(ev => ev.clientX));\n *\n * positions.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return A function that returns an Observable that emits the values from the\n * source Observable transformed by the given `project` function.\n */\nexport function map<T, R>(project: (value: T, index: number) => R, thisArg?: any): OperatorFunction<T, R> {\n  return operate((source, subscriber) => {\n    // The index of the value from the source. Used with projection.\n    let index = 0;\n    // Subscribe to the source, all errors and completions are sent along\n    // to the consumer.\n    source.subscribe(\n      createOperatorSubscriber(subscriber, (value: T) => {\n        // Call the projection function with the appropriate this context,\n        // and send the resulting value to the consumer.\n        subscriber.next(project.call(thisArg, value, index++));\n      })\n    );\n  });\n}\n","import { OperatorFunction, MonoTypeOperatorFunction, TruthyTypesOf } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function filter<T, S extends T, A>(predicate: (this: A, value: T, index: number) => value is S, thisArg: A): OperatorFunction<T, S>;\nexport function filter<T, S extends T>(predicate: (value: T, index: number) => value is S): OperatorFunction<T, S>;\nexport function filter<T>(predicate: BooleanConstructor): OperatorFunction<T, TruthyTypesOf<T>>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function filter<T, A>(predicate: (this: A, value: T, index: number) => boolean, thisArg: A): MonoTypeOperatorFunction<T>;\nexport function filter<T>(predicate: (value: T, index: number) => boolean): MonoTypeOperatorFunction<T>;\n\n/**\n * Filter items emitted by the source Observable by only emitting those that\n * satisfy a specified predicate.\n *\n * <span class=\"informal\">Like\n * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\n * it only emits a value from the source if it passes a criterion function.</span>\n *\n * ![](filter.png)\n *\n * Similar to the well-known `Array.prototype.filter` method, this operator\n * takes values from the source Observable, passes them through a `predicate`\n * function and only emits those values that yielded `true`.\n *\n * ## Example\n *\n * Emit only click events whose target was a DIV element\n *\n * ```ts\n * import { fromEvent, filter } from 'rxjs';\n *\n * const div = document.createElement('div');\n * div.style.cssText = 'width: 200px; height: 200px; background: #09c;';\n * document.body.appendChild(div);\n *\n * const clicks = fromEvent(document, 'click');\n * const clicksOnDivs = clicks.pipe(filter(ev => (<HTMLElement>ev.target).tagName === 'DIV'));\n * clicksOnDivs.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n * @see {@link ignoreElements}\n * @see {@link partition}\n * @see {@link skip}\n *\n * @param predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted, if `false` the value is not passed to the output\n * Observable. The `index` parameter is the number `i` for the i-th source\n * emission that has happened since the subscription, starting from the number\n * `0`.\n * @param thisArg An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return A function that returns an Observable that emits items from the\n * source Observable that satisfy the specified `predicate`.\n */\nexport function filter<T>(predicate: (value: T, index: number) => boolean, thisArg?: any): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    // An index passed to our predicate function on each call.\n    let index = 0;\n\n    // Subscribe to the source, all errors and completions are\n    // forwarded to the consumer.\n    source.subscribe(\n      // Call the predicate with the appropriate `this` context,\n      // if the predicate returns `true`, then send the value\n      // to the consumer.\n      createOperatorSubscriber(subscriber, (value) => predicate.call(thisArg, value, index++) && subscriber.next(value))\n    );\n  });\n}\n","export const isArrayLike = (<T>(x: any): x is ArrayLike<T> => x && typeof x.length === 'number' && typeof x !== 'function');","import { isFunction } from \"./isFunction\";\n\n/**\n * Tests to see if the object is \"thennable\".\n * @param value the object to test\n */\nexport function isPromise(value: any): value is PromiseLike<any> {\n  return isFunction(value?.then);\n}\n","/**\n * Symbol.observable or a string \"@@observable\". Used for interop\n *\n * @deprecated We will no longer be exporting this symbol in upcoming versions of RxJS.\n * Instead polyfill and use Symbol.observable directly *or* use https://www.npmjs.com/package/symbol-observable\n */\nexport const observable: string | symbol = (() => (typeof Symbol === 'function' && Symbol.observable) || '@@observable')();\n","/**\n * This function takes one parameter and just returns it. Simply put,\n * this is like `<T>(x: T): T => x`.\n *\n * ## Examples\n *\n * This is useful in some cases when using things like `mergeMap`\n *\n * ```ts\n * import { interval, take, map, range, mergeMap, identity } from 'rxjs';\n *\n * const source$ = interval(1000).pipe(take(5));\n *\n * const result$ = source$.pipe(\n *   map(i => range(i)),\n *   mergeMap(identity) // same as mergeMap(x => x)\n * );\n *\n * result$.subscribe({\n *   next: console.log\n * });\n * ```\n *\n * Or when you want to selectively apply an operator\n *\n * ```ts\n * import { interval, take, identity } from 'rxjs';\n *\n * const shouldLimit = () => Math.random() < 0.5;\n *\n * const source$ = interval(1000);\n *\n * const result$ = source$.pipe(shouldLimit() ? take(5) : identity);\n *\n * result$.subscribe({\n *   next: console.log\n * });\n * ```\n *\n * @param x Any value that is returned by this function\n * @returns The value passed as the first parameter to this function\n */\nexport function identity<T>(x: T): T {\n  return x;\n}\n","import { identity } from './identity';\nimport { UnaryFunction } from '../types';\n\nexport function pipe(): typeof identity;\nexport function pipe<T, A>(fn1: UnaryFunction<T, A>): UnaryFunction<T, A>;\nexport function pipe<T, A, B>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>): UnaryFunction<T, B>;\nexport function pipe<T, A, B, C>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>): UnaryFunction<T, C>;\nexport function pipe<T, A, B, C, D>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>\n): UnaryFunction<T, D>;\nexport function pipe<T, A, B, C, D, E>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>\n): UnaryFunction<T, E>;\nexport function pipe<T, A, B, C, D, E, F>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>\n): UnaryFunction<T, F>;\nexport function pipe<T, A, B, C, D, E, F, G>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>\n): UnaryFunction<T, G>;\nexport function pipe<T, A, B, C, D, E, F, G, H>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>,\n  fn8: UnaryFunction<G, H>\n): UnaryFunction<T, H>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>,\n  fn8: UnaryFunction<G, H>,\n  fn9: UnaryFunction<H, I>\n): UnaryFunction<T, I>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>,\n  fn8: UnaryFunction<G, H>,\n  fn9: UnaryFunction<H, I>,\n  ...fns: UnaryFunction<any, any>[]\n): UnaryFunction<T, unknown>;\n\n/**\n * pipe() can be called on one or more functions, each of which can take one argument (\"UnaryFunction\")\n * and uses it to return a value.\n * It returns a function that takes one argument, passes it to the first UnaryFunction, and then\n * passes the result to the next one, passes that result to the next one, and so on.  \n */\nexport function pipe(...fns: Array<UnaryFunction<any, any>>): UnaryFunction<any, any> {\n  return pipeFromArray(fns);\n}\n\n/** @internal */\nexport function pipeFromArray<T, R>(fns: Array<UnaryFunction<T, R>>): UnaryFunction<T, R> {\n  if (fns.length === 0) {\n    return identity as UnaryFunction<any, any>;\n  }\n\n  if (fns.length === 1) {\n    return fns[0];\n  }\n\n  return function piped(input: T): R {\n    return fns.reduce((prev: any, fn: UnaryFunction<T, R>) => fn(prev), input as any);\n  };\n}\n","import { Operator } from './Operator';\nimport { SafeSubscriber, Subscriber } from './Subscriber';\nimport { isSubscription, Subscription } from './Subscription';\nimport { TeardownLogic, OperatorFunction, Subscribable, Observer } from './types';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\nimport { isFunction } from './util/isFunction';\nimport { errorContext } from './util/errorContext';\n\n/**\n * A representation of any set of values over any amount of time. This is the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nexport class Observable<T> implements Subscribable<T> {\n  /**\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   */\n  source: Observable<any> | undefined;\n\n  /**\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   */\n  operator: Operator<any, T> | undefined;\n\n  /**\n   * @constructor\n   * @param {Function} subscribe the function that is called when the Observable is\n   * initially subscribed to. This function is given a Subscriber, to which new values\n   * can be `next`ed, or an `error` method can be called to raise an error, or\n   * `complete` can be called to notify of a successful completion.\n   */\n  constructor(subscribe?: (this: Observable<T>, subscriber: Subscriber<T>) => TeardownLogic) {\n    if (subscribe) {\n      this._subscribe = subscribe;\n    }\n  }\n\n  // HACK: Since TypeScript inherits static properties too, we have to\n  // fight against TypeScript here so Subject can have a different static create signature\n  /**\n   * Creates a new Observable by calling the Observable constructor\n   * @owner Observable\n   * @method create\n   * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n   * @return {Observable} a new observable\n   * @nocollapse\n   * @deprecated Use `new Observable()` instead. Will be removed in v8.\n   */\n  static create: (...args: any[]) => any = <T>(subscribe?: (subscriber: Subscriber<T>) => TeardownLogic) => {\n    return new Observable<T>(subscribe);\n  };\n\n  /**\n   * Creates a new Observable, with this Observable instance as the source, and the passed\n   * operator defined as the new observable's operator.\n   * @method lift\n   * @param operator the operator defining the operation to take on the observable\n   * @return a new observable with the Operator applied\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   * If you have implemented an operator using `lift`, it is recommended that you create an\n   * operator by simply returning `new Observable()` directly. See \"Creating new operators from\n   * scratch\" section here: https://rxjs.dev/guide/operators\n   */\n  lift<R>(operator?: Operator<T, R>): Observable<R> {\n    const observable = new Observable<R>();\n    observable.source = this;\n    observable.operator = operator;\n    return observable;\n  }\n\n  subscribe(observerOrNext?: Partial<Observer<T>> | ((value: T) => void)): Subscription;\n  /** @deprecated Instead of passing separate callback arguments, use an observer argument. Signatures taking separate callback arguments will be removed in v8. Details: https://rxjs.dev/deprecations/subscribe-arguments */\n  subscribe(next?: ((value: T) => void) | null, error?: ((error: any) => void) | null, complete?: (() => void) | null): Subscription;\n  /**\n   * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.\n   *\n   * <span class=\"informal\">Use it when you have all these Observables, but still nothing is happening.</span>\n   *\n   * `subscribe` is not a regular operator, but a method that calls Observable's internal `subscribe` function. It\n   * might be for example a function that you passed to Observable's constructor, but most of the time it is\n   * a library implementation, which defines what will be emitted by an Observable, and when it be will emitted. This means\n   * that calling `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often\n   * the thought.\n   *\n   * Apart from starting the execution of an Observable, this method allows you to listen for values\n   * that an Observable emits, as well as for when it completes or errors. You can achieve this in two\n   * of the following ways.\n   *\n   * The first way is creating an object that implements {@link Observer} interface. It should have methods\n   * defined by that interface, but note that it should be just a regular JavaScript object, which you can create\n   * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular, do\n   * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also\n   * that your object does not have to implement all methods. If you find yourself creating a method that doesn't\n   * do anything, you can simply omit it. Note however, if the `error` method is not provided and an error happens,\n   * it will be thrown asynchronously. Errors thrown asynchronously cannot be caught using `try`/`catch`. Instead,\n   * use the {@link onUnhandledError} configuration option or use a runtime handler (like `window.onerror` or\n   * `process.on('error)`) to be notified of unhandled errors. Because of this, it's recommended that you provide\n   * an `error` method to avoid missing thrown errors.\n   *\n   * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\n   * This means you can provide three functions as arguments to `subscribe`, where the first function is equivalent\n   * of a `next` method, the second of an `error` method and the third of a `complete` method. Just as in case of an Observer,\n   * if you do not need to listen for something, you can omit a function by passing `undefined` or `null`,\n   * since `subscribe` recognizes these functions by where they were placed in function call. When it comes\n   * to the `error` function, as with an Observer, if not provided, errors emitted by an Observable will be thrown asynchronously.\n   *\n   * You can, however, subscribe with no parameters at all. This may be the case where you're not interested in terminal events\n   * and you also handled emissions internally by using operators (e.g. using `tap`).\n   *\n   * Whichever style of calling `subscribe` you use, in both cases it returns a Subscription object.\n   * This object allows you to call `unsubscribe` on it, which in turn will stop the work that an Observable does and will clean\n   * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback\n   * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.\n   *\n   * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.\n   * It is an Observable itself that decides when these functions will be called. For example {@link of}\n   * by default emits all its values synchronously. Always check documentation for how given Observable\n   * will behave when subscribed and if its default behavior can be modified with a `scheduler`.\n   *\n   * #### Examples\n   *\n   * Subscribe with an {@link guide/observer Observer}\n   *\n   * ```ts\n   * import { of } from 'rxjs';\n   *\n   * const sumObserver = {\n   *   sum: 0,\n   *   next(value) {\n   *     console.log('Adding: ' + value);\n   *     this.sum = this.sum + value;\n   *   },\n   *   error() {\n   *     // We actually could just remove this method,\n   *     // since we do not really care about errors right now.\n   *   },\n   *   complete() {\n   *     console.log('Sum equals: ' + this.sum);\n   *   }\n   * };\n   *\n   * of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\n   *   .subscribe(sumObserver);\n   *\n   * // Logs:\n   * // 'Adding: 1'\n   * // 'Adding: 2'\n   * // 'Adding: 3'\n   * // 'Sum equals: 6'\n   * ```\n   *\n   * Subscribe with functions ({@link deprecations/subscribe-arguments deprecated})\n   *\n   * ```ts\n   * import { of } from 'rxjs'\n   *\n   * let sum = 0;\n   *\n   * of(1, 2, 3).subscribe(\n   *   value => {\n   *     console.log('Adding: ' + value);\n   *     sum = sum + value;\n   *   },\n   *   undefined,\n   *   () => console.log('Sum equals: ' + sum)\n   * );\n   *\n   * // Logs:\n   * // 'Adding: 1'\n   * // 'Adding: 2'\n   * // 'Adding: 3'\n   * // 'Sum equals: 6'\n   * ```\n   *\n   * Cancel a subscription\n   *\n   * ```ts\n   * import { interval } from 'rxjs';\n   *\n   * const subscription = interval(1000).subscribe({\n   *   next(num) {\n   *     console.log(num)\n   *   },\n   *   complete() {\n   *     // Will not be called, even when cancelling subscription.\n   *     console.log('completed!');\n   *   }\n   * });\n   *\n   * setTimeout(() => {\n   *   subscription.unsubscribe();\n   *   console.log('unsubscribed!');\n   * }, 2500);\n   *\n   * // Logs:\n   * // 0 after 1s\n   * // 1 after 2s\n   * // 'unsubscribed!' after 2.5s\n   * ```\n   *\n   * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,\n   * or the first of three possible handlers, which is the handler for each value emitted from the subscribed\n   * Observable.\n   * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,\n   * the error will be thrown asynchronously as unhandled.\n   * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.\n   * @return {Subscription} a subscription reference to the registered handlers\n   * @method subscribe\n   */\n  subscribe(\n    observerOrNext?: Partial<Observer<T>> | ((value: T) => void) | null,\n    error?: ((error: any) => void) | null,\n    complete?: (() => void) | null\n  ): Subscription {\n    const subscriber = isSubscriber(observerOrNext) ? observerOrNext : new SafeSubscriber(observerOrNext, error, complete);\n\n    errorContext(() => {\n      const { operator, source } = this;\n      subscriber.add(\n        operator\n          ? // We're dealing with a subscription in the\n            // operator chain to one of our lifted operators.\n            operator.call(subscriber, source)\n          : source\n          ? // If `source` has a value, but `operator` does not, something that\n            // had intimate knowledge of our API, like our `Subject`, must have\n            // set it. We're going to just call `_subscribe` directly.\n            this._subscribe(subscriber)\n          : // In all other cases, we're likely wrapping a user-provided initializer\n            // function, so we need to catch errors and handle them appropriately.\n            this._trySubscribe(subscriber)\n      );\n    });\n\n    return subscriber;\n  }\n\n  /** @internal */\n  protected _trySubscribe(sink: Subscriber<T>): TeardownLogic {\n    try {\n      return this._subscribe(sink);\n    } catch (err) {\n      // We don't need to return anything in this case,\n      // because it's just going to try to `add()` to a subscription\n      // above.\n      sink.error(err);\n    }\n  }\n\n  /**\n   * Used as a NON-CANCELLABLE means of subscribing to an observable, for use with\n   * APIs that expect promises, like `async/await`. You cannot unsubscribe from this.\n   *\n   * **WARNING**: Only use this with observables you *know* will complete. If the source\n   * observable does not complete, you will end up with a promise that is hung up, and\n   * potentially all of the state of an async function hanging out in memory. To avoid\n   * this situation, look into adding something like {@link timeout}, {@link take},\n   * {@link takeWhile}, or {@link takeUntil} amongst others.\n   *\n   * #### Example\n   *\n   * ```ts\n   * import { interval, take } from 'rxjs';\n   *\n   * const source$ = interval(1000).pipe(take(4));\n   *\n   * async function getTotal() {\n   *   let total = 0;\n   *\n   *   await source$.forEach(value => {\n   *     total += value;\n   *     console.log('observable -> ' + value);\n   *   });\n   *\n   *   return total;\n   * }\n   *\n   * getTotal().then(\n   *   total => console.log('Total: ' + total)\n   * );\n   *\n   * // Expected:\n   * // 'observable -> 0'\n   * // 'observable -> 1'\n   * // 'observable -> 2'\n   * // 'observable -> 3'\n   * // 'Total: 6'\n   * ```\n   *\n   * @param next a handler for each value emitted by the observable\n   * @return a promise that either resolves on observable completion or\n   *  rejects with the handled error\n   */\n  forEach(next: (value: T) => void): Promise<void>;\n\n  /**\n   * @param next a handler for each value emitted by the observable\n   * @param promiseCtor a constructor function used to instantiate the Promise\n   * @return a promise that either resolves on observable completion or\n   *  rejects with the handled error\n   * @deprecated Passing a Promise constructor will no longer be available\n   * in upcoming versions of RxJS. This is because it adds weight to the library, for very\n   * little benefit. If you need this functionality, it is recommended that you either\n   * polyfill Promise, or you create an adapter to convert the returned native promise\n   * to whatever promise implementation you wanted. Will be removed in v8.\n   */\n  forEach(next: (value: T) => void, promiseCtor: PromiseConstructorLike): Promise<void>;\n\n  forEach(next: (value: T) => void, promiseCtor?: PromiseConstructorLike): Promise<void> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor<void>((resolve, reject) => {\n      const subscriber = new SafeSubscriber<T>({\n        next: (value) => {\n          try {\n            next(value);\n          } catch (err) {\n            reject(err);\n            subscriber.unsubscribe();\n          }\n        },\n        error: reject,\n        complete: resolve,\n      });\n      this.subscribe(subscriber);\n    }) as Promise<void>;\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<any>): TeardownLogic {\n    return this.source?.subscribe(subscriber);\n  }\n\n  /**\n   * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n   * @method Symbol.observable\n   * @return {Observable} this instance of the observable\n   */\n  [Symbol_observable]() {\n    return this;\n  }\n\n  /* tslint:disable:max-line-length */\n  pipe(): Observable<T>;\n  pipe<A>(op1: OperatorFunction<T, A>): Observable<A>;\n  pipe<A, B>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>): Observable<B>;\n  pipe<A, B, C>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>): Observable<C>;\n  pipe<A, B, C, D>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>\n  ): Observable<D>;\n  pipe<A, B, C, D, E>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>\n  ): Observable<E>;\n  pipe<A, B, C, D, E, F>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>\n  ): Observable<F>;\n  pipe<A, B, C, D, E, F, G>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>\n  ): Observable<G>;\n  pipe<A, B, C, D, E, F, G, H>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>,\n    op8: OperatorFunction<G, H>\n  ): Observable<H>;\n  pipe<A, B, C, D, E, F, G, H, I>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>,\n    op8: OperatorFunction<G, H>,\n    op9: OperatorFunction<H, I>\n  ): Observable<I>;\n  pipe<A, B, C, D, E, F, G, H, I>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>,\n    op8: OperatorFunction<G, H>,\n    op9: OperatorFunction<H, I>,\n    ...operations: OperatorFunction<any, any>[]\n  ): Observable<unknown>;\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Used to stitch together functional operators into a chain.\n   * @method pipe\n   * @return {Observable} the Observable result of all of the operators having\n   * been called in the order they were passed in.\n   *\n   * ## Example\n   *\n   * ```ts\n   * import { interval, filter, map, scan } from 'rxjs';\n   *\n   * interval(1000)\n   *   .pipe(\n   *     filter(x => x % 2 === 0),\n   *     map(x => x + x),\n   *     scan((acc, x) => acc + x)\n   *   )\n   *   .subscribe(x => console.log(x));\n   * ```\n   */\n  pipe(...operations: OperatorFunction<any, any>[]): Observable<any> {\n    return pipeFromArray(operations)(this);\n  }\n\n  /* tslint:disable:max-line-length */\n  /** @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise */\n  toPromise(): Promise<T | undefined>;\n  /** @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise */\n  toPromise(PromiseCtor: typeof Promise): Promise<T | undefined>;\n  /** @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise */\n  toPromise(PromiseCtor: PromiseConstructorLike): Promise<T | undefined>;\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Subscribe to this Observable and get a Promise resolving on\n   * `complete` with the last emission (if any).\n   *\n   * **WARNING**: Only use this with observables you *know* will complete. If the source\n   * observable does not complete, you will end up with a promise that is hung up, and\n   * potentially all of the state of an async function hanging out in memory. To avoid\n   * this situation, look into adding something like {@link timeout}, {@link take},\n   * {@link takeWhile}, or {@link takeUntil} amongst others.\n   *\n   * @method toPromise\n   * @param [promiseCtor] a constructor function used to instantiate\n   * the Promise\n   * @return A Promise that resolves with the last value emit, or\n   * rejects on an error. If there were no emissions, Promise\n   * resolves with undefined.\n   * @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise\n   */\n  toPromise(promiseCtor?: PromiseConstructorLike): Promise<T | undefined> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor((resolve, reject) => {\n      let value: T | undefined;\n      this.subscribe(\n        (x: T) => (value = x),\n        (err: any) => reject(err),\n        () => resolve(value)\n      );\n    }) as Promise<T | undefined>;\n  }\n}\n\n/**\n * Decides between a passed promise constructor from consuming code,\n * A default configured promise constructor, and the native promise\n * constructor and returns it. If nothing can be found, it will throw\n * an error.\n * @param promiseCtor The optional promise constructor to passed by consuming code\n */\nfunction getPromiseCtor(promiseCtor: PromiseConstructorLike | undefined) {\n  return promiseCtor ?? config.Promise ?? Promise;\n}\n\nfunction isObserver<T>(value: any): value is Observer<T> {\n  return value && isFunction(value.next) && isFunction(value.error) && isFunction(value.complete);\n}\n\nfunction isSubscriber<T>(value: any): value is Subscriber<T> {\n  return (value && value instanceof Subscriber) || (isObserver(value) && isSubscription(value));\n}\n","import { InteropObservable } from '../types';\nimport { observable as Symbol_observable } from '../symbol/observable';\nimport { isFunction } from './isFunction';\n\n/** Identifies an input as being Observable (but not necessary an Rx Observable) */\nexport function isInteropObservable(input: any): input is InteropObservable<any> {\n  return isFunction(input[Symbol_observable]);\n}\n","import { isFunction } from './isFunction';\n\nexport function isAsyncIterable<T>(obj: any): obj is AsyncIterable<T> {\n  return Symbol.asyncIterator && isFunction(obj?.[Symbol.asyncIterator]);\n}\n","/**\n * Creates the TypeError to throw if an invalid object is passed to `from` or `scheduled`.\n * @param input The object that was passed.\n */\nexport function createInvalidObservableTypeError(input: any) {\n  // TODO: We should create error codes that can be looked up, so this can be less verbose.\n  return new TypeError(\n    `You provided ${\n      input !== null && typeof input === 'object' ? 'an invalid object' : `'${input}'`\n    } where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.`\n  );\n}\n","export function getSymbolIterator(): symbol {\n  if (typeof Symbol !== 'function' || !Symbol.iterator) {\n    return '@@iterator' as any;\n  }\n\n  return Symbol.iterator;\n}\n\nexport const iterator = getSymbolIterator();\n","import { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { isFunction } from './isFunction';\n\n/** Identifies an input as being an Iterable */\nexport function isIterable(input: any): input is Iterable<any> {\n  return isFunction(input?.[Symbol_iterator]);\n}\n","import { ReadableStreamLike } from '../types';\nimport { isFunction } from './isFunction';\n\nexport async function* readableStreamLikeToAsyncGenerator<T>(readableStream: ReadableStreamLike<T>): AsyncGenerator<T> {\n  const reader = readableStream.getReader();\n  try {\n    while (true) {\n      const { value, done } = await reader.read();\n      if (done) {\n        return;\n      }\n      yield value!;\n    }\n  } finally {\n    reader.releaseLock();\n  }\n}\n\nexport function isReadableStreamLike<T>(obj: any): obj is ReadableStreamLike<T> {\n  // We don't want to use instanceof checks because they would return\n  // false for instances from another Realm, like an <iframe>.\n  return isFunction(obj?.getReader);\n}\n","import { isArrayLike } from '../util/isArrayLike';\nimport { isPromise } from '../util/isPromise';\nimport { Observable } from '../Observable';\nimport { ObservableInput, ObservedValueOf, ReadableStreamLike } from '../types';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isAsyncIterable } from '../util/isAsyncIterable';\nimport { createInvalidObservableTypeError } from '../util/throwUnobservableError';\nimport { isIterable } from '../util/isIterable';\nimport { isReadableStreamLike, readableStreamLikeToAsyncGenerator } from '../util/isReadableStreamLike';\nimport { Subscriber } from '../Subscriber';\nimport { isFunction } from '../util/isFunction';\nimport { reportUnhandledError } from '../util/reportUnhandledError';\nimport { observable as Symbol_observable } from '../symbol/observable';\n\nexport function innerFrom<O extends ObservableInput<any>>(input: O): Observable<ObservedValueOf<O>>;\nexport function innerFrom<T>(input: ObservableInput<T>): Observable<T> {\n  if (input instanceof Observable) {\n    return input;\n  }\n  if (input != null) {\n    if (isInteropObservable(input)) {\n      return fromInteropObservable(input);\n    }\n    if (isArrayLike(input)) {\n      return fromArrayLike(input);\n    }\n    if (isPromise(input)) {\n      return fromPromise(input);\n    }\n    if (isAsyncIterable(input)) {\n      return fromAsyncIterable(input);\n    }\n    if (isIterable(input)) {\n      return fromIterable(input);\n    }\n    if (isReadableStreamLike(input)) {\n      return fromReadableStreamLike(input);\n    }\n  }\n\n  throw createInvalidObservableTypeError(input);\n}\n\n/**\n * Creates an RxJS Observable from an object that implements `Symbol.observable`.\n * @param obj An object that properly implements `Symbol.observable`.\n */\nexport function fromInteropObservable<T>(obj: any) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    const obs = obj[Symbol_observable]();\n    if (isFunction(obs.subscribe)) {\n      return obs.subscribe(subscriber);\n    }\n    // Should be caught by observable subscribe function error handling.\n    throw new TypeError('Provided object does not correctly implement Symbol.observable');\n  });\n}\n\n/**\n * Synchronously emits the values of an array like and completes.\n * This is exported because there are creation functions and operators that need to\n * make direct use of the same logic, and there's no reason to make them run through\n * `from` conditionals because we *know* they're dealing with an array.\n * @param array The array to emit values from\n */\nexport function fromArrayLike<T>(array: ArrayLike<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    // Loop over the array and emit each value. Note two things here:\n    // 1. We're making sure that the subscriber is not closed on each loop.\n    //    This is so we don't continue looping over a very large array after\n    //    something like a `take`, `takeWhile`, or other synchronous unsubscription\n    //    has already unsubscribed.\n    // 2. In this form, reentrant code can alter that array we're looping over.\n    //    This is a known issue, but considered an edge case. The alternative would\n    //    be to copy the array before executing the loop, but this has\n    //    performance implications.\n    for (let i = 0; i < array.length && !subscriber.closed; i++) {\n      subscriber.next(array[i]);\n    }\n    subscriber.complete();\n  });\n}\n\nexport function fromPromise<T>(promise: PromiseLike<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    promise\n      .then(\n        (value) => {\n          if (!subscriber.closed) {\n            subscriber.next(value);\n            subscriber.complete();\n          }\n        },\n        (err: any) => subscriber.error(err)\n      )\n      .then(null, reportUnhandledError);\n  });\n}\n\nexport function fromIterable<T>(iterable: Iterable<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    for (const value of iterable) {\n      subscriber.next(value);\n      if (subscriber.closed) {\n        return;\n      }\n    }\n    subscriber.complete();\n  });\n}\n\nexport function fromAsyncIterable<T>(asyncIterable: AsyncIterable<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    process(asyncIterable, subscriber).catch((err) => subscriber.error(err));\n  });\n}\n\nexport function fromReadableStreamLike<T>(readableStream: ReadableStreamLike<T>) {\n  return fromAsyncIterable(readableStreamLikeToAsyncGenerator(readableStream));\n}\n\nasync function process<T>(asyncIterable: AsyncIterable<T>, subscriber: Subscriber<T>) {\n  for await (const value of asyncIterable) {\n    subscriber.next(value);\n    // A side-effect may have closed our subscriber,\n    // check before the next iteration.\n    if (subscriber.closed) {\n      return;\n    }\n  }\n  subscriber.complete();\n}\n","import { Subscription } from '../Subscription';\nimport { SchedulerAction, SchedulerLike } from '../types';\n\nexport function executeSchedule(\n  parentSubscription: Subscription,\n  scheduler: SchedulerLike,\n  work: () => void,\n  delay: number,\n  repeat: true\n): void;\nexport function executeSchedule(\n  parentSubscription: Subscription,\n  scheduler: SchedulerLike,\n  work: () => void,\n  delay?: number,\n  repeat?: false\n): Subscription;\n\nexport function executeSchedule(\n  parentSubscription: Subscription,\n  scheduler: SchedulerLike,\n  work: () => void,\n  delay = 0,\n  repeat = false\n): Subscription | void {\n  const scheduleSubscription = scheduler.schedule(function (this: SchedulerAction<any>) {\n    work();\n    if (repeat) {\n      parentSubscription.add(this.schedule(null, delay));\n    } else {\n      this.unsubscribe();\n    }\n  }, delay);\n\n  parentSubscription.add(scheduleSubscription);\n\n  if (!repeat) {\n    // Because user-land scheduler implementations are unlikely to properly reuse\n    // Actions for repeat scheduling, we can't trust that the returned subscription\n    // will control repeat subscription scenarios. So we're trying to avoid using them\n    // incorrectly within this library.\n    return scheduleSubscription;\n  }\n}\n","import { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { map } from './map';\nimport { innerFrom } from '../observable/innerFrom';\nimport { operate } from '../util/lift';\nimport { mergeInternals } from './mergeInternals';\nimport { isFunction } from '../util/isFunction';\n\n/* tslint:disable:max-line-length */\nexport function mergeMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  concurrent?: number\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function mergeMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: undefined,\n  concurrent?: number\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function mergeMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R,\n  concurrent?: number\n): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link mergeAll}.</span>\n *\n * ![](mergeMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger.\n *\n * ## Example\n *\n * Map and flatten each letter to an Observable ticking every 1 second\n *\n * ```ts\n * import { of, mergeMap, interval, map } from 'rxjs';\n *\n * const letters = of('a', 'b', 'c');\n * const result = letters.pipe(\n *   mergeMap(x => interval(1000).pipe(map(i => x + i)))\n * );\n *\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // a0\n * // b0\n * // c0\n * // a1\n * // b1\n * // c1\n * // continues to list a, b, c every second with respective ascending integers\n * ```\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {number} [concurrent=Infinity] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return A function that returns an Observable that emits the result of\n * applying the projection function (and the optional deprecated\n * `resultSelector`) to each item emitted by the source Observable and merging\n * the results of the Observables obtained from this transformation.\n */\nexport function mergeMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector?: ((outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R) | number,\n  concurrent: number = Infinity\n): OperatorFunction<T, ObservedValueOf<O> | R> {\n  if (isFunction(resultSelector)) {\n    // DEPRECATED PATH\n    return mergeMap((a, i) => map((b: any, ii: number) => resultSelector(a, b, i, ii))(innerFrom(project(a, i))), concurrent);\n  } else if (typeof resultSelector === 'number') {\n    concurrent = resultSelector;\n  }\n\n  return operate((source, subscriber) => mergeInternals(source, subscriber, project, concurrent));\n}\n","import { Observable } from '../Observable';\nimport { innerFrom } from '../observable/innerFrom';\nimport { Subscriber } from '../Subscriber';\nimport { ObservableInput, SchedulerLike } from '../types';\nimport { executeSchedule } from '../util/executeSchedule';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * A process embodying the general \"merge\" strategy. This is used in\n * `mergeMap` and `mergeScan` because the logic is otherwise nearly identical.\n * @param source The original source observable\n * @param subscriber The consumer subscriber\n * @param project The projection function to get our inner sources\n * @param concurrent The number of concurrent inner subscriptions\n * @param onBeforeNext Additional logic to apply before nexting to our consumer\n * @param expand If `true` this will perform an \"expand\" strategy, which differs only\n * in that it recurses, and the inner subscription must be schedule-able.\n * @param innerSubScheduler A scheduler to use to schedule inner subscriptions,\n * this is to support the expand strategy, mostly, and should be deprecated\n */\nexport function mergeInternals<T, R>(\n  source: Observable<T>,\n  subscriber: Subscriber<R>,\n  project: (value: T, index: number) => ObservableInput<R>,\n  concurrent: number,\n  onBeforeNext?: (innerValue: R) => void,\n  expand?: boolean,\n  innerSubScheduler?: SchedulerLike,\n  additionalFinalizer?: () => void\n) {\n  // Buffered values, in the event of going over our concurrency limit\n  const buffer: T[] = [];\n  // The number of active inner subscriptions.\n  let active = 0;\n  // An index to pass to our accumulator function\n  let index = 0;\n  // Whether or not the outer source has completed.\n  let isComplete = false;\n\n  /**\n   * Checks to see if we can complete our result or not.\n   */\n  const checkComplete = () => {\n    // If the outer has completed, and nothing is left in the buffer,\n    // and we don't have any active inner subscriptions, then we can\n    // Emit the state and complete.\n    if (isComplete && !buffer.length && !active) {\n      subscriber.complete();\n    }\n  };\n\n  // If we're under our concurrency limit, just start the inner subscription, otherwise buffer and wait.\n  const outerNext = (value: T) => (active < concurrent ? doInnerSub(value) : buffer.push(value));\n\n  const doInnerSub = (value: T) => {\n    // If we're expanding, we need to emit the outer values and the inner values\n    // as the inners will \"become outers\" in a way as they are recursively fed\n    // back to the projection mechanism.\n    expand && subscriber.next(value as any);\n\n    // Increment the number of active subscriptions so we can track it\n    // against our concurrency limit later.\n    active++;\n\n    // A flag used to show that the inner observable completed.\n    // This is checked during finalization to see if we should\n    // move to the next item in the buffer, if there is on.\n    let innerComplete = false;\n\n    // Start our inner subscription.\n    innerFrom(project(value, index++)).subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (innerValue) => {\n          // `mergeScan` has additional handling here. For example\n          // taking the inner value and updating state.\n          onBeforeNext?.(innerValue);\n\n          if (expand) {\n            // If we're expanding, then just recurse back to our outer\n            // handler. It will emit the value first thing.\n            outerNext(innerValue as any);\n          } else {\n            // Otherwise, emit the inner value.\n            subscriber.next(innerValue);\n          }\n        },\n        () => {\n          // Flag that we have completed, so we know to check the buffer\n          // during finalization.\n          innerComplete = true;\n        },\n        // Errors are passed to the destination.\n        undefined,\n        () => {\n          // During finalization, if the inner completed (it wasn't errored or\n          // cancelled), then we want to try the next item in the buffer if\n          // there is one.\n          if (innerComplete) {\n            // We have to wrap this in a try/catch because it happens during\n            // finalization, possibly asynchronously, and we want to pass\n            // any errors that happen (like in a projection function) to\n            // the outer Subscriber.\n            try {\n              // INNER SOURCE COMPLETE\n              // Decrement the active count to ensure that the next time\n              // we try to call `doInnerSub`, the number is accurate.\n              active--;\n              // If we have more values in the buffer, try to process those\n              // Note that this call will increment `active` ahead of the\n              // next conditional, if there were any more inner subscriptions\n              // to start.\n              while (buffer.length && active < concurrent) {\n                const bufferedValue = buffer.shift()!;\n                // Particularly for `expand`, we need to check to see if a scheduler was provided\n                // for when we want to start our inner subscription. Otherwise, we just start\n                // are next inner subscription.\n                if (innerSubScheduler) {\n                  executeSchedule(subscriber, innerSubScheduler, () => doInnerSub(bufferedValue));\n                } else {\n                  doInnerSub(bufferedValue);\n                }\n              }\n              // Check to see if we can complete, and complete if so.\n              checkComplete();\n            } catch (err) {\n              subscriber.error(err);\n            }\n          }\n        }\n      )\n    );\n  };\n\n  // Subscribe to our source observable.\n  source.subscribe(\n    createOperatorSubscriber(subscriber, outerNext, () => {\n      // Outer completed, make a note of it, and check to see if we can complete everything.\n      isComplete = true;\n      checkComplete();\n    })\n  );\n\n  // Additional finalization (for when the destination is torn down).\n  // Other finalization is added implicitly via subscription above.\n  return () => {\n    additionalFinalizer?.();\n  };\n}\n","import { mergeMap } from './mergeMap';\nimport { identity } from '../util/identity';\nimport { OperatorFunction, ObservableInput, ObservedValueOf } from '../types';\n\n/**\n * Converts a higher-order Observable into a first-order Observable which\n * concurrently delivers all values that are emitted on the inner Observables.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables.</span>\n *\n * ![](mergeAll.png)\n *\n * `mergeAll` subscribes to an Observable that emits Observables, also known as\n * a higher-order Observable. Each time it observes one of these emitted inner\n * Observables, it subscribes to that and delivers all the values from the\n * inner Observable on the output Observable. The output Observable only\n * completes once all inner Observables have completed. Any error delivered by\n * a inner Observable will be immediately emitted on the output Observable.\n *\n * ## Examples\n *\n * Spawn a new interval Observable for each click event, and blend their outputs as one Observable\n *\n * ```ts\n * import { fromEvent, map, interval, mergeAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(map(() => interval(1000)));\n * const firstOrder = higherOrder.pipe(mergeAll());\n *\n * firstOrder.subscribe(x => console.log(x));\n * ```\n *\n * Count from 0 to 9 every second for each click, but only allow 2 concurrent timers\n *\n * ```ts\n * import { fromEvent, map, interval, take, mergeAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(\n *   map(() => interval(1000).pipe(take(10)))\n * );\n * const firstOrder = higherOrder.pipe(mergeAll(2));\n *\n * firstOrder.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link combineLatestAll}\n * @see {@link concatAll}\n * @see {@link exhaustAll}\n * @see {@link merge}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchAll}\n * @see {@link switchMap}\n * @see {@link zipAll}\n *\n * @param {number} [concurrent=Infinity] Maximum number of inner\n * Observables being subscribed to concurrently.\n * @return A function that returns an Observable that emits values coming from\n * all the inner Observables emitted by the source Observable.\n */\nexport function mergeAll<O extends ObservableInput<any>>(concurrent: number = Infinity): OperatorFunction<O, ObservedValueOf<O>> {\n  return mergeMap(identity, concurrent);\n}\n","import { SchedulerLike } from '../types';\nimport { isFunction } from './isFunction';\nimport { isScheduler } from './isScheduler';\n\nfunction last<T>(arr: T[]): T | undefined {\n  return arr[arr.length - 1];\n}\n\nexport function popResultSelector(args: any[]): ((...args: unknown[]) => unknown) | undefined {\n  return isFunction(last(args)) ? args.pop() : undefined;\n}\n\nexport function popScheduler(args: any[]): SchedulerLike | undefined {\n  return isScheduler(last(args)) ? args.pop() : undefined;\n}\n\nexport function popNumber(args: any[], defaultValue: number): number {\n  return typeof last(args) === 'number' ? args.pop()! : defaultValue;\n}\n","import { SchedulerLike } from '../types';\nimport { isFunction } from './isFunction';\n\nexport function isScheduler(value: any): value is SchedulerLike {\n  return value && isFunction(value.schedule);\n}\n","/** @prettier */\nimport { MonoTypeOperatorFunction, SchedulerLike } from '../types';\nimport { executeSchedule } from '../util/executeSchedule';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Re-emits all notifications from source Observable with specified scheduler.\n *\n * <span class=\"informal\">Ensure a specific scheduler is used, from outside of an Observable.</span>\n *\n * `observeOn` is an operator that accepts a scheduler as a first parameter, which will be used to reschedule\n * notifications emitted by the source Observable. It might be useful, if you do not have control over\n * internal scheduler of a given Observable, but want to control when its values are emitted nevertheless.\n *\n * Returned Observable emits the same notifications (nexted values, complete and error events) as the source Observable,\n * but rescheduled with provided scheduler. Note that this doesn't mean that source Observables internal\n * scheduler will be replaced in any way. Original scheduler still will be used, but when the source Observable emits\n * notification, it will be immediately scheduled again - this time with scheduler passed to `observeOn`.\n * An anti-pattern would be calling `observeOn` on Observable that emits lots of values synchronously, to split\n * that emissions into asynchronous chunks. For this to happen, scheduler would have to be passed into the source\n * Observable directly (usually into the operator that creates it). `observeOn` simply delays notifications a\n * little bit more, to ensure that they are emitted at expected moments.\n *\n * As a matter of fact, `observeOn` accepts second parameter, which specifies in milliseconds with what delay notifications\n * will be emitted. The main difference between {@link delay} operator and `observeOn` is that `observeOn`\n * will delay all notifications - including error notifications - while `delay` will pass through error\n * from source Observable immediately when it is emitted. In general it is highly recommended to use `delay` operator\n * for any kind of delaying of values in the stream, while using `observeOn` to specify which scheduler should be used\n * for notification emissions in general.\n *\n * ## Example\n *\n * Ensure values in subscribe are called just before browser repaint\n *\n * ```ts\n * import { interval, observeOn, animationFrameScheduler } from 'rxjs';\n *\n * const someDiv = document.createElement('div');\n * someDiv.style.cssText = 'width: 200px;background: #09c';\n * document.body.appendChild(someDiv);\n * const intervals = interval(10);      // Intervals are scheduled\n *                                      // with async scheduler by default...\n * intervals.pipe(\n *   observeOn(animationFrameScheduler) // ...but we will observe on animationFrame\n * )                                    // scheduler to ensure smooth animation.\n * .subscribe(val => {\n *   someDiv.style.height = val + 'px';\n * });\n * ```\n *\n * @see {@link delay}\n *\n * @param scheduler Scheduler that will be used to reschedule notifications from source Observable.\n * @param delay Number of milliseconds that states with what delay every notification should be rescheduled.\n * @return A function that returns an Observable that emits the same\n * notifications as the source Observable, but with provided scheduler.\n */\nexport function observeOn<T>(scheduler: SchedulerLike, delay = 0): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => executeSchedule(subscriber, scheduler, () => subscriber.next(value), delay),\n        () => executeSchedule(subscriber, scheduler, () => subscriber.complete(), delay),\n        (err) => executeSchedule(subscriber, scheduler, () => subscriber.error(err), delay)\n      )\n    );\n  });\n}\n","import { MonoTypeOperatorFunction, SchedulerLike } from '../types';\nimport { operate } from '../util/lift';\n\n/**\n * Asynchronously subscribes Observers to this Observable on the specified {@link SchedulerLike}.\n *\n * With `subscribeOn` you can decide what type of scheduler a specific Observable will be using when it is subscribed to.\n *\n * Schedulers control the speed and order of emissions to observers from an Observable stream.\n *\n * ![](subscribeOn.png)\n *\n * ## Example\n *\n * Given the following code:\n *\n * ```ts\n * import { of, merge } from 'rxjs';\n *\n * const a = of(1, 2, 3);\n * const b = of(4, 5, 6);\n *\n * merge(a, b).subscribe(console.log);\n *\n * // Outputs\n * // 1\n * // 2\n * // 3\n * // 4\n * // 5\n * // 6\n * ```\n *\n * Both Observable `a` and `b` will emit their values directly and synchronously once they are subscribed to.\n *\n * If we instead use the `subscribeOn` operator declaring that we want to use the {@link asyncScheduler} for values emitted by Observable `a`:\n *\n * ```ts\n * import { of, subscribeOn, asyncScheduler, merge } from 'rxjs';\n *\n * const a = of(1, 2, 3).pipe(subscribeOn(asyncScheduler));\n * const b = of(4, 5, 6);\n *\n * merge(a, b).subscribe(console.log);\n *\n * // Outputs\n * // 4\n * // 5\n * // 6\n * // 1\n * // 2\n * // 3\n * ```\n *\n * The reason for this is that Observable `b` emits its values directly and synchronously like before\n * but the emissions from `a` are scheduled on the event loop because we are now using the {@link asyncScheduler} for that specific Observable.\n *\n * @param scheduler The {@link SchedulerLike} to perform subscription actions on.\n * @param delay A delay to pass to the scheduler to delay subscriptions\n * @return A function that returns an Observable modified so that its\n * subscriptions happen on the specified {@link SchedulerLike}.\n */\nexport function subscribeOn<T>(scheduler: SchedulerLike, delay: number = 0): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    subscriber.add(scheduler.schedule(() => source.subscribe(subscriber), delay));\n  });\n}\n","import { SchedulerLike } from '../types';\nimport { Observable } from '../Observable';\nimport { executeSchedule } from '../util/executeSchedule';\n\nexport function scheduleAsyncIterable<T>(input: AsyncIterable<T>, scheduler: SchedulerLike) {\n  if (!input) {\n    throw new Error('Iterable cannot be null');\n  }\n  return new Observable<T>((subscriber) => {\n    executeSchedule(subscriber, scheduler, () => {\n      const iterator = input[Symbol.asyncIterator]();\n      executeSchedule(\n        subscriber,\n        scheduler,\n        () => {\n          iterator.next().then((result) => {\n            if (result.done) {\n              // This will remove the subscriptions from\n              // the parent subscription.\n              subscriber.complete();\n            } else {\n              subscriber.next(result.value);\n            }\n          });\n        },\n        0,\n        true\n      );\n    });\n  });\n}\n","import { scheduleObservable } from './scheduleObservable';\nimport { schedulePromise } from './schedulePromise';\nimport { scheduleArray } from './scheduleArray';\nimport { scheduleIterable } from './scheduleIterable';\nimport { scheduleAsyncIterable } from './scheduleAsyncIterable';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isPromise } from '../util/isPromise';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isIterable } from '../util/isIterable';\nimport { ObservableInput, SchedulerLike } from '../types';\nimport { Observable } from '../Observable';\nimport { isAsyncIterable } from '../util/isAsyncIterable';\nimport { createInvalidObservableTypeError } from '../util/throwUnobservableError';\nimport { isReadableStreamLike } from '../util/isReadableStreamLike';\nimport { scheduleReadableStreamLike } from './scheduleReadableStreamLike';\n\n/**\n * Converts from a common {@link ObservableInput} type to an observable where subscription and emissions\n * are scheduled on the provided scheduler.\n *\n * @see {@link from}\n * @see {@link of}\n *\n * @param input The observable, array, promise, iterable, etc you would like to schedule\n * @param scheduler The scheduler to use to schedule the subscription and emissions from\n * the returned observable.\n */\nexport function scheduled<T>(input: ObservableInput<T>, scheduler: SchedulerLike): Observable<T> {\n  if (input != null) {\n    if (isInteropObservable(input)) {\n      return scheduleObservable(input, scheduler);\n    }\n    if (isArrayLike(input)) {\n      return scheduleArray(input, scheduler);\n    }\n    if (isPromise(input)) {\n      return schedulePromise(input, scheduler);\n    }\n    if (isAsyncIterable(input)) {\n      return scheduleAsyncIterable(input, scheduler);\n    }\n    if (isIterable(input)) {\n      return scheduleIterable(input, scheduler);\n    }\n    if (isReadableStreamLike(input)) {\n      return scheduleReadableStreamLike(input, scheduler);\n    }\n  }\n  throw createInvalidObservableTypeError(input);\n}\n","import { innerFrom } from '../observable/innerFrom';\nimport { observeOn } from '../operators/observeOn';\nimport { subscribeOn } from '../operators/subscribeOn';\nimport { InteropObservable, SchedulerLike } from '../types';\n\nexport function scheduleObservable<T>(input: InteropObservable<T>, scheduler: SchedulerLike) {\n  return innerFrom(input).pipe(subscribeOn(scheduler), observeOn(scheduler));\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\n\nexport function scheduleArray<T>(input: ArrayLike<T>, scheduler: SchedulerLike) {\n  return new Observable<T>((subscriber) => {\n    // The current array index.\n    let i = 0;\n    // Start iterating over the array like on a schedule.\n    return scheduler.schedule(function () {\n      if (i === input.length) {\n        // If we have hit the end of the array like in the\n        // previous job, we can complete.\n        subscriber.complete();\n      } else {\n        // Otherwise let's next the value at the current index,\n        // then increment our index.\n        subscriber.next(input[i++]);\n        // If the last emission didn't cause us to close the subscriber\n        // (via take or some side effect), reschedule the job and we'll\n        // make another pass.\n        if (!subscriber.closed) {\n          this.schedule();\n        }\n      }\n    });\n  });\n}\n","import { innerFrom } from '../observable/innerFrom';\nimport { observeOn } from '../operators/observeOn';\nimport { subscribeOn } from '../operators/subscribeOn';\nimport { SchedulerLike } from '../types';\n\nexport function schedulePromise<T>(input: PromiseLike<T>, scheduler: SchedulerLike) {\n  return innerFrom(input).pipe(subscribeOn(scheduler), observeOn(scheduler));\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { isFunction } from '../util/isFunction';\nimport { executeSchedule } from '../util/executeSchedule';\n\n/**\n * Used in {@link scheduled} to create an observable from an Iterable.\n * @param input The iterable to create an observable from\n * @param scheduler The scheduler to use\n */\nexport function scheduleIterable<T>(input: Iterable<T>, scheduler: SchedulerLike) {\n  return new Observable<T>((subscriber) => {\n    let iterator: Iterator<T, T>;\n\n    // Schedule the initial creation of the iterator from\n    // the iterable. This is so the code in the iterable is\n    // not called until the scheduled job fires.\n    executeSchedule(subscriber, scheduler, () => {\n      // Create the iterator.\n      iterator = (input as any)[Symbol_iterator]();\n\n      executeSchedule(\n        subscriber,\n        scheduler,\n        () => {\n          let value: T;\n          let done: boolean | undefined;\n          try {\n            // Pull the value out of the iterator\n            ({ value, done } = iterator.next());\n          } catch (err) {\n            // We got an error while pulling from the iterator\n            subscriber.error(err);\n            return;\n          }\n\n          if (done) {\n            // If it is \"done\" we just complete. This mimics the\n            // behavior of JavaScript's `for..of` consumption of\n            // iterables, which will not emit the value from an iterator\n            // result of `{ done: true: value: 'here' }`.\n            subscriber.complete();\n          } else {\n            // The iterable is not done, emit the value.\n            subscriber.next(value);\n          }\n        },\n        0,\n        true\n      );\n    });\n\n    // During finalization, if we see this iterator has a `return` method,\n    // then we know it is a Generator, and not just an Iterator. So we call\n    // the `return()` function. This will ensure that any `finally { }` blocks\n    // inside of the generator we can hit will be hit properly.\n    return () => isFunction(iterator?.return) && iterator.return();\n  });\n}\n","import { SchedulerLike, ReadableStreamLike } from '../types';\nimport { Observable } from '../Observable';\nimport { scheduleAsyncIterable } from './scheduleAsyncIterable';\nimport { readableStreamLikeToAsyncGenerator } from '../util/isReadableStreamLike';\n\nexport function scheduleReadableStreamLike<T>(input: ReadableStreamLike<T>, scheduler: SchedulerLike): Observable<T> {\n  return scheduleAsyncIterable(readableStreamLikeToAsyncGenerator(input), scheduler);\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput, SchedulerLike, ObservedValueOf } from '../types';\nimport { scheduled } from '../scheduled/scheduled';\nimport { innerFrom } from './innerFrom';\n\nexport function from<O extends ObservableInput<any>>(input: O): Observable<ObservedValueOf<O>>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function from<O extends ObservableInput<any>>(input: O, scheduler: SchedulerLike | undefined): Observable<ObservedValueOf<O>>;\n\n/**\n * Creates an Observable from an Array, an array-like object, a Promise, an iterable object, or an Observable-like object.\n *\n * <span class=\"informal\">Converts almost anything to an Observable.</span>\n *\n * ![](from.png)\n *\n * `from` converts various other objects and data types into Observables. It also converts a Promise, an array-like, or an\n * <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterable\" target=\"_blank\">iterable</a>\n * object into an Observable that emits the items in that promise, array, or iterable. A String, in this context, is treated\n * as an array of characters. Observable-like objects (contains a function named with the ES2015 Symbol for Observable) can also be\n * converted through this operator.\n *\n * ## Examples\n *\n * Converts an array to an Observable\n *\n * ```ts\n * import { from } from 'rxjs';\n *\n * const array = [10, 20, 30];\n * const result = from(array);\n *\n * result.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 10\n * // 20\n * // 30\n * ```\n *\n * Convert an infinite iterable (from a generator) to an Observable\n *\n * ```ts\n * import { from, take } from 'rxjs';\n *\n * function* generateDoubles(seed) {\n *    let i = seed;\n *    while (true) {\n *      yield i;\n *      i = 2 * i; // double it\n *    }\n * }\n *\n * const iterator = generateDoubles(3);\n * const result = from(iterator).pipe(take(10));\n *\n * result.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 3\n * // 6\n * // 12\n * // 24\n * // 48\n * // 96\n * // 192\n * // 384\n * // 768\n * // 1536\n * ```\n *\n * With `asyncScheduler`\n *\n * ```ts\n * import { from, asyncScheduler } from 'rxjs';\n *\n * console.log('start');\n *\n * const array = [10, 20, 30];\n * const result = from(array, asyncScheduler);\n *\n * result.subscribe(x => console.log(x));\n *\n * console.log('end');\n *\n * // Logs:\n * // 'start'\n * // 'end'\n * // 10\n * // 20\n * // 30\n * ```\n *\n * @see {@link fromEvent}\n * @see {@link fromEventPattern}\n *\n * @param {ObservableInput<T>} A subscription object, a Promise, an Observable-like,\n * an Array, an iterable, or an array-like object to be converted.\n * @param {SchedulerLike} An optional {@link SchedulerLike} on which to schedule the emission of values.\n * @return {Observable<T>}\n */\nexport function from<T>(input: ObservableInput<T>, scheduler?: SchedulerLike): Observable<T> {\n  return scheduler ? scheduled(input, scheduler) : innerFrom(input);\n}\n","import { Observable } from '../Observable';\nimport { ObservableInputTuple, SchedulerLike } from '../types';\nimport { concatAll } from '../operators/concatAll';\nimport { popScheduler } from '../util/args';\nimport { from } from './from';\n\nexport function concat<T extends readonly unknown[]>(...inputs: [...ObservableInputTuple<T>]): Observable<T[number]>;\nexport function concat<T extends readonly unknown[]>(\n  ...inputsAndScheduler: [...ObservableInputTuple<T>, SchedulerLike]\n): Observable<T[number]>;\n\n/**\n * Creates an output Observable which sequentially emits all values from the first given\n * Observable and then moves on to the next.\n *\n * <span class=\"informal\">Concatenates multiple Observables together by\n * sequentially emitting their values, one Observable after the other.</span>\n *\n * ![](concat.png)\n *\n * `concat` joins multiple Observables together, by subscribing to them one at a time and\n * merging their results into the output Observable. You can pass either an array of\n * Observables, or put them directly as arguments. Passing an empty array will result\n * in Observable that completes immediately.\n *\n * `concat` will subscribe to first input Observable and emit all its values, without\n * changing or affecting them in any way. When that Observable completes, it will\n * subscribe to then next Observable passed and, again, emit its values. This will be\n * repeated, until the operator runs out of Observables. When last input Observable completes,\n * `concat` will complete as well. At any given moment only one Observable passed to operator\n * emits values. If you would like to emit values from passed Observables concurrently, check out\n * {@link merge} instead, especially with optional `concurrent` parameter. As a matter of fact,\n * `concat` is an equivalent of `merge` operator with `concurrent` parameter set to `1`.\n *\n * Note that if some input Observable never completes, `concat` will also never complete\n * and Observables following the one that did not complete will never be subscribed. On the other\n * hand, if some Observable simply completes immediately after it is subscribed, it will be\n * invisible for `concat`, which will just move on to the next Observable.\n *\n * If any Observable in chain errors, instead of passing control to the next Observable,\n * `concat` will error immediately as well. Observables that would be subscribed after\n * the one that emitted error, never will.\n *\n * If you pass to `concat` the same Observable many times, its stream of values\n * will be \"replayed\" on every subscription, which means you can repeat given Observable\n * as many times as you like. If passing the same Observable to `concat` 1000 times becomes tedious,\n * you can always use {@link repeat}.\n *\n * ## Examples\n *\n * Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10\n *\n * ```ts\n * import { interval, take, range, concat } from 'rxjs';\n *\n * const timer = interval(1000).pipe(take(4));\n * const sequence = range(1, 10);\n * const result = concat(timer, sequence);\n * result.subscribe(x => console.log(x));\n *\n * // results in:\n * // 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3 -immediate-> 1 ... 10\n * ```\n *\n * Concatenate 3 Observables\n *\n * ```ts\n * import { interval, take, concat } from 'rxjs';\n *\n * const timer1 = interval(1000).pipe(take(10));\n * const timer2 = interval(2000).pipe(take(6));\n * const timer3 = interval(500).pipe(take(10));\n *\n * const result = concat(timer1, timer2, timer3);\n * result.subscribe(x => console.log(x));\n *\n * // results in the following:\n * // (Prints to console sequentially)\n * // -1000ms-> 0 -1000ms-> 1 -1000ms-> ... 9\n * // -2000ms-> 0 -2000ms-> 1 -2000ms-> ... 5\n * // -500ms-> 0 -500ms-> 1 -500ms-> ... 9\n * ```\n *\n * Concatenate the same Observable to repeat it\n *\n * ```ts\n * import { interval, take, concat } from 'rxjs';\n *\n * const timer = interval(1000).pipe(take(2));\n *\n * concat(timer, timer) // concatenating the same Observable!\n *   .subscribe({\n *     next: value => console.log(value),\n *     complete: () => console.log('...and it is done!')\n *   });\n *\n * // Logs:\n * // 0 after 1s\n * // 1 after 2s\n * // 0 after 3s\n * // 1 after 4s\n * // '...and it is done!' also after 4s\n * ```\n *\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n * @see {@link startWith}\n * @see {@link endWith}\n *\n * @param args Input Observables to concatenate.\n */\nexport function concat(...args: any[]): Observable<unknown> {\n  return concatAll()(from(args, popScheduler(args)));\n}\n","import { mergeAll } from './mergeAll';\nimport { OperatorFunction, ObservableInput, ObservedValueOf } from '../types';\n\n/**\n * Converts a higher-order Observable into a first-order Observable by\n * concatenating the inner Observables in order.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by putting one\n * inner Observable after the other.</span>\n *\n * ![](concatAll.svg)\n *\n * Joins every Observable emitted by the source (a higher-order Observable), in\n * a serial fashion. It subscribes to each inner Observable only after the\n * previous inner Observable has completed, and merges all of their values into\n * the returned observable.\n *\n * __Warning:__ If the source Observable emits Observables quickly and\n * endlessly, and the inner Observables it emits generally complete slower than\n * the source emits, you can run into memory issues as the incoming Observables\n * collect in an unbounded buffer.\n *\n * Note: `concatAll` is equivalent to `mergeAll` with concurrency parameter set\n * to `1`.\n *\n * ## Example\n *\n * For each click event, tick every second from 0 to 3, with no concurrency\n *\n * ```ts\n * import { fromEvent, map, interval, take, concatAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(\n *   map(() => interval(1000).pipe(take(4)))\n * );\n * const firstOrder = higherOrder.pipe(concatAll());\n * firstOrder.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n * ```\n *\n * @see {@link combineLatestAll}\n * @see {@link concat}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n * @see {@link exhaustAll}\n * @see {@link mergeAll}\n * @see {@link switchAll}\n * @see {@link switchMap}\n * @see {@link zipAll}\n *\n * @return A function that returns an Observable emitting values from all the\n * inner Observables concatenated.\n */\nexport function concatAll<O extends ObservableInput<any>>(): OperatorFunction<O, ObservedValueOf<O>> {\n  return mergeAll(1);\n}\n","import { concat } from '../observable/concat';\nimport { OperatorFunction, SchedulerLike, ValueFromArray } from '../types';\nimport { popScheduler } from '../util/args';\nimport { operate } from '../util/lift';\n\n// Devs are more likely to pass null or undefined than they are a scheduler\n// without accompanying values. To make things easier for (naughty) devs who\n// use the `strictNullChecks: false` TypeScript compiler option, these\n// overloads with explicit null and undefined values are included.\n\nexport function startWith<T>(value: null): OperatorFunction<T, T | null>;\nexport function startWith<T>(value: undefined): OperatorFunction<T, T | undefined>;\n\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `concatAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function startWith<T, A extends readonly unknown[] = T[]>(\n  ...valuesAndScheduler: [...A, SchedulerLike]\n): OperatorFunction<T, T | ValueFromArray<A>>;\nexport function startWith<T, A extends readonly unknown[] = T[]>(...values: A): OperatorFunction<T, T | ValueFromArray<A>>;\n\n/**\n * Returns an observable that, at the moment of subscription, will synchronously emit all\n * values provided to this operator, then subscribe to the source and mirror all of its emissions\n * to subscribers.\n *\n * This is a useful way to know when subscription has occurred on an existing observable.\n *\n * <span class=\"informal\">First emits its arguments in order, and then any\n * emissions from the source.</span>\n *\n * ![](startWith.png)\n *\n * ## Examples\n *\n * Emit a value when a timer starts.\n *\n * ```ts\n * import { timer, map, startWith } from 'rxjs';\n *\n * timer(1000)\n *   .pipe(\n *     map(() => 'timer emit'),\n *     startWith('timer start')\n *   )\n *   .subscribe(x => console.log(x));\n *\n * // results:\n * // 'timer start'\n * // 'timer emit'\n * ```\n *\n * @param values Items you want the modified Observable to emit first.\n * @return A function that returns an Observable that synchronously emits\n * provided values before subscribing to the source Observable.\n *\n * @see {@link endWith}\n * @see {@link finalize}\n * @see {@link concat}\n */\nexport function startWith<T, D>(...values: D[]): OperatorFunction<T, T | D> {\n  const scheduler = popScheduler(values);\n  return operate((source, subscriber) => {\n    // Here we can't pass `undefined` as a scheduler, because if we did, the\n    // code inside of `concat` would be confused by the `undefined`, and treat it\n    // like an invalid observable. So we have to split it two different ways.\n    (scheduler ? concat(values, source, scheduler) : concat(values, source)).subscribe(subscriber);\n  });\n}\n","import { MonoTypeOperatorFunction } from '../types';\nimport { identity } from '../util/identity';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\nexport function distinctUntilChanged<T>(comparator?: (previous: T, current: T) => boolean): MonoTypeOperatorFunction<T>;\nexport function distinctUntilChanged<T, K>(\n  comparator: (previous: K, current: K) => boolean,\n  keySelector: (value: T) => K\n): MonoTypeOperatorFunction<T>;\n\n/**\n * Returns a result {@link Observable} that emits all values pushed by the source observable if they\n * are distinct in comparison to the last value the result observable emitted.\n *\n * When provided without parameters or with the first parameter (`{@link distinctUntilChanged#comparator comparator}`),\n * it behaves like this:\n *\n * 1. It will always emit the first value from the source.\n * 2. For all subsequent values pushed by the source, they will be compared to the previously emitted values\n *    using the provided `comparator` or an `===` equality check.\n * 3. If the value pushed by the source is determined to be unequal by this check, that value is emitted and\n *    becomes the new \"previously emitted value\" internally.\n *\n * When the second parameter (`{@link distinctUntilChanged#keySelector keySelector}`) is provided, the behavior\n * changes:\n *\n * 1. It will always emit the first value from the source.\n * 2. The `keySelector` will be run against all values, including the first value.\n * 3. For all values after the first, the selected key will be compared against the key selected from\n *    the previously emitted value using the `comparator`.\n * 4. If the keys are determined to be unequal by this check, the value (not the key), is emitted\n *    and the selected key from that value is saved for future comparisons against other keys.\n *\n * ## Examples\n *\n * A very basic example with no `{@link distinctUntilChanged#comparator comparator}`. Note that `1` is emitted more than once,\n * because it's distinct in comparison to the _previously emitted_ value,\n * not in comparison to _all other emitted values_.\n *\n * ```ts\n * import { of, distinctUntilChanged } from 'rxjs';\n *\n * of(1, 1, 1, 2, 2, 2, 1, 1, 3, 3)\n *   .pipe(distinctUntilChanged())\n *   .subscribe(console.log);\n * // Logs: 1, 2, 1, 3\n * ```\n *\n * With a `{@link distinctUntilChanged#comparator comparator}`, you can do custom comparisons. Let's say\n * you only want to emit a value when all of its components have\n * changed:\n *\n * ```ts\n * import { of, distinctUntilChanged } from 'rxjs';\n *\n * const totallyDifferentBuilds$ = of(\n *   { engineVersion: '1.1.0', transmissionVersion: '1.2.0' },\n *   { engineVersion: '1.1.0', transmissionVersion: '1.4.0' },\n *   { engineVersion: '1.3.0', transmissionVersion: '1.4.0' },\n *   { engineVersion: '1.3.0', transmissionVersion: '1.5.0' },\n *   { engineVersion: '2.0.0', transmissionVersion: '1.5.0' }\n * ).pipe(\n *   distinctUntilChanged((prev, curr) => {\n *     return (\n *       prev.engineVersion === curr.engineVersion ||\n *       prev.transmissionVersion === curr.transmissionVersion\n *     );\n *   })\n * );\n *\n * totallyDifferentBuilds$.subscribe(console.log);\n *\n * // Logs:\n * // { engineVersion: '1.1.0', transmissionVersion: '1.2.0' }\n * // { engineVersion: '1.3.0', transmissionVersion: '1.4.0' }\n * // { engineVersion: '2.0.0', transmissionVersion: '1.5.0' }\n * ```\n *\n * You can also provide a custom `{@link distinctUntilChanged#comparator comparator}` to check that emitted\n * changes are only in one direction. Let's say you only want to get\n * the next record temperature:\n *\n * ```ts\n * import { of, distinctUntilChanged } from 'rxjs';\n *\n * const temps$ = of(30, 31, 20, 34, 33, 29, 35, 20);\n *\n * const recordHighs$ = temps$.pipe(\n *   distinctUntilChanged((prevHigh, temp) => {\n *     // If the current temp is less than\n *     // or the same as the previous record,\n *     // the record hasn't changed.\n *     return temp <= prevHigh;\n *   })\n * );\n *\n * recordHighs$.subscribe(console.log);\n * // Logs: 30, 31, 34, 35\n * ```\n *\n * Selecting update events only when the `updatedBy` field shows\n * the account changed hands.\n *\n * ```ts\n * import { of, distinctUntilChanged } from 'rxjs';\n *\n * // A stream of updates to a given account\n * const accountUpdates$ = of(\n *   { updatedBy: 'blesh', data: [] },\n *   { updatedBy: 'blesh', data: [] },\n *   { updatedBy: 'ncjamieson', data: [] },\n *   { updatedBy: 'ncjamieson', data: [] },\n *   { updatedBy: 'blesh', data: [] }\n * );\n *\n * // We only want the events where it changed hands\n * const changedHands$ = accountUpdates$.pipe(\n *   distinctUntilChanged(undefined, update => update.updatedBy)\n * );\n *\n * changedHands$.subscribe(console.log);\n * // Logs:\n * // { updatedBy: 'blesh', data: Array[0] }\n * // { updatedBy: 'ncjamieson', data: Array[0] }\n * // { updatedBy: 'blesh', data: Array[0] }\n * ```\n *\n * @see {@link distinct}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param comparator A function used to compare the previous and current keys for\n * equality. Defaults to a `===` check.\n * @param keySelector Used to select a key value to be passed to the `comparator`.\n *\n * @return A function that returns an Observable that emits items from the\n * source Observable with distinct values.\n */\nexport function distinctUntilChanged<T, K>(\n  comparator?: (previous: K, current: K) => boolean,\n  keySelector: (value: T) => K = identity as (value: T) => K\n): MonoTypeOperatorFunction<T> {\n  // We've been allowing `null` do be passed as the `compare`, so we can't do\n  // a default value for the parameter, because that will only work\n  // for `undefined`.\n  comparator = comparator ?? defaultCompare;\n\n  return operate((source, subscriber) => {\n    // The previous key, used to compare against keys selected\n    // from new arrivals to determine \"distinctiveness\".\n    let previousKey: K;\n    // Whether or not this is the first value we've gotten.\n    let first = true;\n\n    source.subscribe(\n      createOperatorSubscriber(subscriber, (value) => {\n        // We always call the key selector.\n        const currentKey = keySelector(value);\n\n        // If it's the first value, we always emit it.\n        // Otherwise, we compare this key to the previous key, and\n        // if the comparer returns false, we emit.\n        if (first || !comparator!(previousKey, currentKey)) {\n          // Update our state *before* we emit the value\n          // as emission can be the source of re-entrant code\n          // in functional libraries like this. We only really\n          // need to do this if it's the first value, or if the\n          // key we're tracking in previous needs to change.\n          first = false;\n          previousKey = currentKey;\n\n          // Emit the value!\n          subscriber.next(value);\n        }\n      })\n    );\n  });\n}\n\nfunction defaultCompare(a: any, b: any) {\n  return a === b;\n}\n","import { createErrorClass } from './createErrorClass';\n\nexport interface ObjectUnsubscribedError extends Error {}\n\nexport interface ObjectUnsubscribedErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (): ObjectUnsubscribedError;\n}\n\n/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nexport const ObjectUnsubscribedError: ObjectUnsubscribedErrorCtor = createErrorClass(\n  (_super) =>\n    function ObjectUnsubscribedErrorImpl(this: any) {\n      _super(this);\n      this.name = 'ObjectUnsubscribedError';\n      this.message = 'object unsubscribed';\n    }\n);\n","import { Operator } from './Operator';\nimport { Observable } from './Observable';\nimport { Subscriber } from './Subscriber';\nimport { Subscription, EMPTY_SUBSCRIPTION } from './Subscription';\nimport { Observer, SubscriptionLike, TeardownLogic } from './types';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { arrRemove } from './util/arrRemove';\nimport { errorContext } from './util/errorContext';\n\n/**\n * A Subject is a special type of Observable that allows values to be\n * multicasted to many Observers. Subjects are like EventEmitters.\n *\n * Every Subject is an Observable and an Observer. You can subscribe to a\n * Subject, and you can call next to feed values as well as error and complete.\n */\nexport class Subject<T> extends Observable<T> implements SubscriptionLike {\n  closed = false;\n\n  private currentObservers: Observer<T>[] | null = null;\n\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  observers: Observer<T>[] = [];\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  isStopped = false;\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  hasError = false;\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  thrownError: any = null;\n\n  /**\n   * Creates a \"subject\" by basically gluing an observer to an observable.\n   *\n   * @nocollapse\n   * @deprecated Recommended you do not use. Will be removed at some point in the future. Plans for replacement still under discussion.\n   */\n  static create: (...args: any[]) => any = <T>(destination: Observer<T>, source: Observable<T>): AnonymousSubject<T> => {\n    return new AnonymousSubject<T>(destination, source);\n  };\n\n  constructor() {\n    // NOTE: This must be here to obscure Observable's constructor.\n    super();\n  }\n\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const subject = new AnonymousSubject(this, this);\n    subject.operator = operator as any;\n    return subject as any;\n  }\n\n  /** @internal */\n  protected _throwIfClosed() {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n  }\n\n  next(value: T) {\n    errorContext(() => {\n      this._throwIfClosed();\n      if (!this.isStopped) {\n        if (!this.currentObservers) {\n          this.currentObservers = Array.from(this.observers);\n        }\n        for (const observer of this.currentObservers) {\n          observer.next(value);\n        }\n      }\n    });\n  }\n\n  error(err: any) {\n    errorContext(() => {\n      this._throwIfClosed();\n      if (!this.isStopped) {\n        this.hasError = this.isStopped = true;\n        this.thrownError = err;\n        const { observers } = this;\n        while (observers.length) {\n          observers.shift()!.error(err);\n        }\n      }\n    });\n  }\n\n  complete() {\n    errorContext(() => {\n      this._throwIfClosed();\n      if (!this.isStopped) {\n        this.isStopped = true;\n        const { observers } = this;\n        while (observers.length) {\n          observers.shift()!.complete();\n        }\n      }\n    });\n  }\n\n  unsubscribe() {\n    this.isStopped = this.closed = true;\n    this.observers = this.currentObservers = null!;\n  }\n\n  get observed() {\n    return this.observers?.length > 0;\n  }\n\n  /** @internal */\n  protected _trySubscribe(subscriber: Subscriber<T>): TeardownLogic {\n    this._throwIfClosed();\n    return super._trySubscribe(subscriber);\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    this._throwIfClosed();\n    this._checkFinalizedStatuses(subscriber);\n    return this._innerSubscribe(subscriber);\n  }\n\n  /** @internal */\n  protected _innerSubscribe(subscriber: Subscriber<any>) {\n    const { hasError, isStopped, observers } = this;\n    if (hasError || isStopped) {\n      return EMPTY_SUBSCRIPTION;\n    }\n    this.currentObservers = null;\n    observers.push(subscriber);\n    return new Subscription(() => {\n      this.currentObservers = null;\n      arrRemove(observers, subscriber);\n    });\n  }\n\n  /** @internal */\n  protected _checkFinalizedStatuses(subscriber: Subscriber<any>) {\n    const { hasError, thrownError, isStopped } = this;\n    if (hasError) {\n      subscriber.error(thrownError);\n    } else if (isStopped) {\n      subscriber.complete();\n    }\n  }\n\n  /**\n   * Creates a new Observable with this Subject as the source. You can do this\n   * to create custom Observer-side logic of the Subject and conceal it from\n   * code that uses the Observable.\n   * @return {Observable} Observable that the Subject casts to\n   */\n  asObservable(): Observable<T> {\n    const observable: any = new Observable<T>();\n    observable.source = this;\n    return observable;\n  }\n}\n\n/**\n * @class AnonymousSubject<T>\n */\nexport class AnonymousSubject<T> extends Subject<T> {\n  constructor(\n    /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n    public destination?: Observer<T>,\n    source?: Observable<T>\n  ) {\n    super();\n    this.source = source;\n  }\n\n  next(value: T) {\n    this.destination?.next?.(value);\n  }\n\n  error(err: any) {\n    this.destination?.error?.(err);\n  }\n\n  complete() {\n    this.destination?.complete?.();\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    return this.source?.subscribe(subscriber) ?? EMPTY_SUBSCRIPTION;\n  }\n}\n","import { TimestampProvider } from '../types';\n\ninterface DateTimestampProvider extends TimestampProvider {\n  delegate: TimestampProvider | undefined;\n}\n\nexport const dateTimestampProvider: DateTimestampProvider = {\n  now() {\n    // Use the variable rather than `this` so that the function can be called\n    // without being bound to the provider.\n    return (dateTimestampProvider.delegate || Date).now();\n  },\n  delegate: undefined,\n};\n","import { Subject } from './Subject';\nimport { TimestampProvider } from './types';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { dateTimestampProvider } from './scheduler/dateTimestampProvider';\n\n/**\n * A variant of {@link Subject} that \"replays\" old values to new subscribers by emitting them when they first subscribe.\n *\n * `ReplaySubject` has an internal buffer that will store a specified number of values that it has observed. Like `Subject`,\n * `ReplaySubject` \"observes\" values by having them passed to its `next` method. When it observes a value, it will store that\n * value for a time determined by the configuration of the `ReplaySubject`, as passed to its constructor.\n *\n * When a new subscriber subscribes to the `ReplaySubject` instance, it will synchronously emit all values in its buffer in\n * a First-In-First-Out (FIFO) manner. The `ReplaySubject` will also complete, if it has observed completion; and it will\n * error if it has observed an error.\n *\n * There are two main configuration items to be concerned with:\n *\n * 1. `bufferSize` - This will determine how many items are stored in the buffer, defaults to infinite.\n * 2. `windowTime` - The amount of time to hold a value in the buffer before removing it from the buffer.\n *\n * Both configurations may exist simultaneously. So if you would like to buffer a maximum of 3 values, as long as the values\n * are less than 2 seconds old, you could do so with a `new ReplaySubject(3, 2000)`.\n *\n * ### Differences with BehaviorSubject\n *\n * `BehaviorSubject` is similar to `new ReplaySubject(1)`, with a couple of exceptions:\n *\n * 1. `BehaviorSubject` comes \"primed\" with a single value upon construction.\n * 2. `ReplaySubject` will replay values, even after observing an error, where `BehaviorSubject` will not.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n * @see {@link shareReplay}\n */\nexport class ReplaySubject<T> extends Subject<T> {\n  private _buffer: (T | number)[] = [];\n  private _infiniteTimeWindow = true;\n\n  /**\n   * @param bufferSize The size of the buffer to replay on subscription\n   * @param windowTime The amount of time the buffered items will stay buffered\n   * @param timestampProvider An object with a `now()` method that provides the current timestamp. This is used to\n   * calculate the amount of time something has been buffered.\n   */\n  constructor(\n    private _bufferSize = Infinity,\n    private _windowTime = Infinity,\n    private _timestampProvider: TimestampProvider = dateTimestampProvider\n  ) {\n    super();\n    this._infiniteTimeWindow = _windowTime === Infinity;\n    this._bufferSize = Math.max(1, _bufferSize);\n    this._windowTime = Math.max(1, _windowTime);\n  }\n\n  next(value: T): void {\n    const { isStopped, _buffer, _infiniteTimeWindow, _timestampProvider, _windowTime } = this;\n    if (!isStopped) {\n      _buffer.push(value);\n      !_infiniteTimeWindow && _buffer.push(_timestampProvider.now() + _windowTime);\n    }\n    this._trimBuffer();\n    super.next(value);\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    this._throwIfClosed();\n    this._trimBuffer();\n\n    const subscription = this._innerSubscribe(subscriber);\n\n    const { _infiniteTimeWindow, _buffer } = this;\n    // We use a copy here, so reentrant code does not mutate our array while we're\n    // emitting it to a new subscriber.\n    const copy = _buffer.slice();\n    for (let i = 0; i < copy.length && !subscriber.closed; i += _infiniteTimeWindow ? 1 : 2) {\n      subscriber.next(copy[i] as T);\n    }\n\n    this._checkFinalizedStatuses(subscriber);\n\n    return subscription;\n  }\n\n  private _trimBuffer() {\n    const { _bufferSize, _timestampProvider, _buffer, _infiniteTimeWindow } = this;\n    // If we don't have an infinite buffer size, and we're over the length,\n    // use splice to truncate the old buffer values off. Note that we have to\n    // double the size for instances where we're not using an infinite time window\n    // because we're storing the values and the timestamps in the same array.\n    const adjustedBufferSize = (_infiniteTimeWindow ? 1 : 2) * _bufferSize;\n    _bufferSize < Infinity && adjustedBufferSize < _buffer.length && _buffer.splice(0, _buffer.length - adjustedBufferSize);\n\n    // Now, if we're not in an infinite time window, remove all values where the time is\n    // older than what is allowed.\n    if (!_infiniteTimeWindow) {\n      const now = _timestampProvider.now();\n      let last = 0;\n      // Search the array for the first timestamp that isn't expired and\n      // truncate the buffer up to that point.\n      for (let i = 1; i < _buffer.length && (_buffer[i] as number) <= now; i += 2) {\n        last = i;\n      }\n      last && _buffer.splice(0, last + 1);\n    }\n  }\n}\n","import { innerFrom } from '../observable/innerFrom';\nimport { Subject } from '../Subject';\nimport { SafeSubscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { MonoTypeOperatorFunction, SubjectLike, ObservableInput } from '../types';\nimport { operate } from '../util/lift';\n\nexport interface ShareConfig<T> {\n  /**\n   * The factory used to create the subject that will connect the source observable to\n   * multicast consumers.\n   */\n  connector?: () => SubjectLike<T>;\n  /**\n   * If `true`, the resulting observable will reset internal state on error from source and return to a \"cold\" state. This\n   * allows the resulting observable to be \"retried\" in the event of an error.\n   * If `false`, when an error comes from the source it will push the error into the connecting subject, and the subject\n   * will remain the connecting subject, meaning the resulting observable will not go \"cold\" again, and subsequent retries\n   * or resubscriptions will resubscribe to that same subject. In all cases, RxJS subjects will emit the same error again, however\n   * {@link ReplaySubject} will also push its buffered values before pushing the error.\n   * It is also possible to pass a notifier factory returning an `ObservableInput` instead which grants more fine-grained\n   * control over how and when the reset should happen. This allows behaviors like conditional or delayed resets.\n   */\n  resetOnError?: boolean | ((error: any) => ObservableInput<any>);\n  /**\n   * If `true`, the resulting observable will reset internal state on completion from source and return to a \"cold\" state. This\n   * allows the resulting observable to be \"repeated\" after it is done.\n   * If `false`, when the source completes, it will push the completion through the connecting subject, and the subject\n   * will remain the connecting subject, meaning the resulting observable will not go \"cold\" again, and subsequent repeats\n   * or resubscriptions will resubscribe to that same subject.\n   * It is also possible to pass a notifier factory returning an `ObservableInput` instead which grants more fine-grained\n   * control over how and when the reset should happen. This allows behaviors like conditional or delayed resets.\n   */\n  resetOnComplete?: boolean | (() => ObservableInput<any>);\n  /**\n   * If `true`, when the number of subscribers to the resulting observable reaches zero due to those subscribers unsubscribing, the\n   * internal state will be reset and the resulting observable will return to a \"cold\" state. This means that the next\n   * time the resulting observable is subscribed to, a new subject will be created and the source will be subscribed to\n   * again.\n   * If `false`, when the number of subscribers to the resulting observable reaches zero due to unsubscription, the subject\n   * will remain connected to the source, and new subscriptions to the result will be connected through that same subject.\n   * It is also possible to pass a notifier factory returning an `ObservableInput` instead which grants more fine-grained\n   * control over how and when the reset should happen. This allows behaviors like conditional or delayed resets.\n   */\n  resetOnRefCountZero?: boolean | (() => ObservableInput<any>);\n}\n\nexport function share<T>(): MonoTypeOperatorFunction<T>;\n\nexport function share<T>(options: ShareConfig<T>): MonoTypeOperatorFunction<T>;\n\n/**\n * Returns a new Observable that multicasts (shares) the original Observable. As long as there is at least one\n * Subscriber this Observable will be subscribed and emitting data. When all subscribers have unsubscribed it will\n * unsubscribe from the source Observable. Because the Observable is multicasting it makes the stream `hot`.\n * This is an alias for `multicast(() => new Subject()), refCount()`.\n *\n * The subscription to the underlying source Observable can be reset (unsubscribe and resubscribe for new subscribers),\n * if the subscriber count to the shared observable drops to 0, or if the source Observable errors or completes. It is\n * possible to use notifier factories for the resets to allow for behaviors like conditional or delayed resets. Please\n * note that resetting on error or complete of the source Observable does not behave like a transparent retry or restart\n * of the source because the error or complete will be forwarded to all subscribers and their subscription will be\n * closed. Only new subscribers after a reset on error or complete happened will cause a fresh subscription to the\n * source. To achieve transparent retries or restarts pipe the source through appropriate operators before sharing.\n *\n * ![](share.png)\n *\n * ## Example\n *\n * Generate new multicast Observable from the `source` Observable value\n *\n * ```ts\n * import { interval, tap, map, take, share } from 'rxjs';\n *\n * const source = interval(1000).pipe(\n *   tap(x => console.log('Processing: ', x)),\n *   map(x => x * x),\n *   take(6),\n *   share()\n * );\n *\n * source.subscribe(x => console.log('subscription 1: ', x));\n * source.subscribe(x => console.log('subscription 2: ', x));\n *\n * // Logs:\n * // Processing: 0\n * // subscription 1: 0\n * // subscription 2: 0\n * // Processing: 1\n * // subscription 1: 1\n * // subscription 2: 1\n * // Processing: 2\n * // subscription 1: 4\n * // subscription 2: 4\n * // Processing: 3\n * // subscription 1: 9\n * // subscription 2: 9\n * // Processing: 4\n * // subscription 1: 16\n * // subscription 2: 16\n * // Processing: 5\n * // subscription 1: 25\n * // subscription 2: 25\n * ```\n *\n * ## Example with notifier factory: Delayed reset\n *\n * ```ts\n * import { interval, take, share, timer } from 'rxjs';\n *\n * const source = interval(1000).pipe(\n *   take(3),\n *   share({\n *     resetOnRefCountZero: () => timer(1000)\n *   })\n * );\n *\n * const subscriptionOne = source.subscribe(x => console.log('subscription 1: ', x));\n * setTimeout(() => subscriptionOne.unsubscribe(), 1300);\n *\n * setTimeout(() => source.subscribe(x => console.log('subscription 2: ', x)), 1700);\n *\n * setTimeout(() => source.subscribe(x => console.log('subscription 3: ', x)), 5000);\n *\n * // Logs:\n * // subscription 1:  0\n * // (subscription 1 unsubscribes here)\n * // (subscription 2 subscribes here ~400ms later, source was not reset)\n * // subscription 2:  1\n * // subscription 2:  2\n * // (subscription 2 unsubscribes here)\n * // (subscription 3 subscribes here ~2000ms later, source did reset before)\n * // subscription 3:  0\n * // subscription 3:  1\n * // subscription 3:  2\n * ```\n *\n * @see {@link shareReplay}\n *\n * @return A function that returns an Observable that mirrors the source.\n */\nexport function share<T>(options: ShareConfig<T> = {}): MonoTypeOperatorFunction<T> {\n  const { connector = () => new Subject<T>(), resetOnError = true, resetOnComplete = true, resetOnRefCountZero = true } = options;\n  // It's necessary to use a wrapper here, as the _operator_ must be\n  // referentially transparent. Otherwise, it cannot be used in calls to the\n  // static `pipe` function - to create a partial pipeline.\n  //\n  // The _operator function_ - the function returned by the _operator_ - will\n  // not be referentially transparent - as it shares its source - but the\n  // _operator function_ is called when the complete pipeline is composed via a\n  // call to a source observable's `pipe` method - not when the static `pipe`\n  // function is called.\n  return (wrapperSource) => {\n    let connection: SafeSubscriber<T> | undefined;\n    let resetConnection: Subscription | undefined;\n    let subject: SubjectLike<T> | undefined;\n    let refCount = 0;\n    let hasCompleted = false;\n    let hasErrored = false;\n\n    const cancelReset = () => {\n      resetConnection?.unsubscribe();\n      resetConnection = undefined;\n    };\n    // Used to reset the internal state to a \"cold\"\n    // state, as though it had never been subscribed to.\n    const reset = () => {\n      cancelReset();\n      connection = subject = undefined;\n      hasCompleted = hasErrored = false;\n    };\n    const resetAndUnsubscribe = () => {\n      // We need to capture the connection before\n      // we reset (if we need to reset).\n      const conn = connection;\n      reset();\n      conn?.unsubscribe();\n    };\n\n    return operate<T, T>((source, subscriber) => {\n      refCount++;\n      if (!hasErrored && !hasCompleted) {\n        cancelReset();\n      }\n\n      // Create the subject if we don't have one yet. Grab a local reference to\n      // it as well, which avoids non-null assertions when using it and, if we\n      // connect to it now, then error/complete need a reference after it was\n      // reset.\n      const dest = (subject = subject ?? connector());\n\n      // Add the finalization directly to the subscriber - instead of returning it -\n      // so that the handling of the subscriber's unsubscription will be wired\n      // up _before_ the subscription to the source occurs. This is done so that\n      // the assignment to the source connection's `closed` property will be seen\n      // by synchronous firehose sources.\n      subscriber.add(() => {\n        refCount--;\n\n        // If we're resetting on refCount === 0, and it's 0, we only want to do\n        // that on \"unsubscribe\", really. Resetting on error or completion is a different\n        // configuration.\n        if (refCount === 0 && !hasErrored && !hasCompleted) {\n          resetConnection = handleReset(resetAndUnsubscribe, resetOnRefCountZero);\n        }\n      });\n\n      // The following line adds the subscription to the subscriber passed.\n      // Basically, `subscriber === dest.subscribe(subscriber)` is `true`.\n      dest.subscribe(subscriber);\n\n      if (\n        !connection &&\n        // Check this shareReplay is still activate - it can be reset to 0\n        // and be \"unsubscribed\" _before_ it actually subscribes.\n        // If we were to subscribe then, it'd leak and get stuck.\n        refCount > 0\n      ) {\n        // We need to create a subscriber here - rather than pass an observer and\n        // assign the returned subscription to connection - because it's possible\n        // for reentrant subscriptions to the shared observable to occur and in\n        // those situations we want connection to be already-assigned so that we\n        // don't create another connection to the source.\n        connection = new SafeSubscriber({\n          next: (value) => dest.next(value),\n          error: (err) => {\n            hasErrored = true;\n            cancelReset();\n            resetConnection = handleReset(reset, resetOnError, err);\n            dest.error(err);\n          },\n          complete: () => {\n            hasCompleted = true;\n            cancelReset();\n            resetConnection = handleReset(reset, resetOnComplete);\n            dest.complete();\n          },\n        });\n        innerFrom(source).subscribe(connection);\n      }\n    })(wrapperSource);\n  };\n}\n\nfunction handleReset<T extends unknown[] = never[]>(\n  reset: () => void,\n  on: boolean | ((...args: T) => ObservableInput<any>),\n  ...args: T\n): Subscription | undefined {\n  if (on === true) {\n    reset();\n    return;\n  }\n\n  if (on === false) {\n    return;\n  }\n\n  const onSubscriber = new SafeSubscriber({\n    next: () => {\n      onSubscriber.unsubscribe();\n      reset();\n    },\n  });\n\n  return innerFrom(on(...args)).subscribe(onSubscriber);\n}\n","import { ReplaySubject } from '../ReplaySubject';\nimport { MonoTypeOperatorFunction, SchedulerLike } from '../types';\nimport { share } from './share';\n\nexport interface ShareReplayConfig {\n  bufferSize?: number;\n  windowTime?: number;\n  refCount: boolean;\n  scheduler?: SchedulerLike;\n}\n\nexport function shareReplay<T>(config: ShareReplayConfig): MonoTypeOperatorFunction<T>;\nexport function shareReplay<T>(bufferSize?: number, windowTime?: number, scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\n\n/**\n * Share source and replay specified number of emissions on subscription.\n *\n * This operator is a specialization of `replay` that connects to a source observable\n * and multicasts through a `ReplaySubject` constructed with the specified arguments.\n * A successfully completed source will stay cached in the `shareReplay`ed observable forever,\n * but an errored source can be retried.\n *\n * ## Why use `shareReplay`?\n *\n * You generally want to use `shareReplay` when you have side-effects or taxing computations\n * that you do not wish to be executed amongst multiple subscribers.\n * It may also be valuable in situations where you know you will have late subscribers to\n * a stream that need access to previously emitted values.\n * This ability to replay values on subscription is what differentiates {@link share} and `shareReplay`.\n *\n * ## Reference counting\n *\n * By default `shareReplay` will use `refCount` of false, meaning that it will _not_ unsubscribe the\n * source when the reference counter drops to zero, i.e. the inner `ReplaySubject` will _not_ be unsubscribed\n * (and potentially run for ever).\n * This is the default as it is expected that `shareReplay` is often used to keep around expensive to setup\n * observables which we want to keep running instead of having to do the expensive setup again.\n *\n * As of RXJS version 6.4.0 a new overload signature was added to allow for manual control over what\n * happens when the operators internal reference counter drops to zero.\n * If `refCount` is true, the source will be unsubscribed from once the reference count drops to zero, i.e.\n * the inner `ReplaySubject` will be unsubscribed. All new subscribers will receive value emissions from a\n * new `ReplaySubject` which in turn will cause a new subscription to the source observable.\n *\n * ## Examples\n *\n * Example with a third subscriber coming late to the party\n *\n * ```ts\n * import { interval, take, shareReplay } from 'rxjs';\n *\n * const shared$ = interval(2000).pipe(\n *   take(6),\n *   shareReplay(3)\n * );\n *\n * shared$.subscribe(x => console.log('sub A: ', x));\n * shared$.subscribe(y => console.log('sub B: ', y));\n *\n * setTimeout(() => {\n *   shared$.subscribe(y => console.log('sub C: ', y));\n * }, 11000);\n *\n * // Logs:\n * // (after ~2000 ms)\n * // sub A: 0\n * // sub B: 0\n * // (after ~4000 ms)\n * // sub A: 1\n * // sub B: 1\n * // (after ~6000 ms)\n * // sub A: 2\n * // sub B: 2\n * // (after ~8000 ms)\n * // sub A: 3\n * // sub B: 3\n * // (after ~10000 ms)\n * // sub A: 4\n * // sub B: 4\n * // (after ~11000 ms, sub C gets the last 3 values)\n * // sub C: 2\n * // sub C: 3\n * // sub C: 4\n * // (after ~12000 ms)\n * // sub A: 5\n * // sub B: 5\n * // sub C: 5\n * ```\n *\n * Example for `refCount` usage\n *\n * ```ts\n * import { Observable, tap, interval, shareReplay, take } from 'rxjs';\n *\n * const log = <T>(name: string, source: Observable<T>) => source.pipe(\n *   tap({\n *     subscribe: () => console.log(`${ name }: subscribed`),\n *     next: value => console.log(`${ name }: ${ value }`),\n *     complete: () => console.log(`${ name }: completed`),\n *     finalize: () => console.log(`${ name }: unsubscribed`)\n *   })\n * );\n *\n * const obs$ = log('source', interval(1000));\n *\n * const shared$ = log('shared', obs$.pipe(\n *   shareReplay({ bufferSize: 1, refCount: true }),\n *   take(2)\n * ));\n *\n * shared$.subscribe(x => console.log('sub A: ', x));\n * shared$.subscribe(y => console.log('sub B: ', y));\n *\n * // PRINTS:\n * // shared: subscribed <-- reference count = 1\n * // source: subscribed\n * // shared: subscribed <-- reference count = 2\n * // source: 0\n * // shared: 0\n * // sub A: 0\n * // shared: 0\n * // sub B: 0\n * // source: 1\n * // shared: 1\n * // sub A: 1\n * // shared: completed <-- take(2) completes the subscription for sub A\n * // shared: unsubscribed <-- reference count = 1\n * // shared: 1\n * // sub B: 1\n * // shared: completed <-- take(2) completes the subscription for sub B\n * // shared: unsubscribed <-- reference count = 0\n * // source: unsubscribed <-- replaySubject unsubscribes from source observable because the reference count dropped to 0 and refCount is true\n *\n * // In case of refCount being false, the unsubscribe is never called on the source and the source would keep on emitting, even if no subscribers\n * // are listening.\n * // source: 2\n * // source: 3\n * // source: 4\n * // ...\n * ```\n *\n * @see {@link publish}\n * @see {@link share}\n * @see {@link publishReplay}\n *\n * @param configOrBufferSize Maximum element count of the replay buffer or {@link ShareReplayConfig configuration}\n * object.\n * @param windowTime Maximum time length of the replay buffer in milliseconds.\n * @param scheduler Scheduler where connected observers within the selector function\n * will be invoked on.\n * @return A function that returns an Observable sequence that contains the\n * elements of a sequence produced by multicasting the source sequence within a\n * selector function.\n */\nexport function shareReplay<T>(\n  configOrBufferSize?: ShareReplayConfig | number,\n  windowTime?: number,\n  scheduler?: SchedulerLike\n): MonoTypeOperatorFunction<T> {\n  let bufferSize: number;\n  let refCount = false;\n  if (configOrBufferSize && typeof configOrBufferSize === 'object') {\n    ({ bufferSize = Infinity, windowTime = Infinity, refCount = false, scheduler } = configOrBufferSize);\n  } else {\n    bufferSize = (configOrBufferSize ?? Infinity) as number;\n  }\n  return share<T>({\n    connector: () => new ReplaySubject(bufferSize, windowTime, scheduler),\n    resetOnError: true,\n    resetOnComplete: false,\n    resetOnRefCountZero: refCount,\n  });\n}\n","export function runXTimes(xTimes: number, fn: (idx: number) => void) {\n    new Array(xTimes).fill(0).forEach((_v, idx) => fn(idx));\n}\n\nexport function ensureNotFalsy<T>(obj: T | false | undefined | null, message?: string): T {\n    if (!obj) {\n        if (!message) {\n            message = '';\n        }\n        throw new Error('ensureNotFalsy() is falsy: ' + message);\n    }\n    return obj;\n}\n\nexport function ensureInteger(obj: unknown): number {\n    if (!Number.isInteger(obj)) {\n        throw new Error('ensureInteger() is falsy');\n    }\n    return obj as number;\n}\n\n/**\n * Using shareReplay() without settings will not unsubscribe\n * if there are no more subscribers.\n * So we use these defaults.\n * @link https://cartant.medium.com/rxjs-whats-changed-with-sharereplay-65c098843e95\n */\nexport const RXJS_SHARE_REPLAY_DEFAULTS = {\n    bufferSize: 1,\n    refCount: true\n};\n","/**\n * returns a promise that resolves on the next tick\n */\nexport function nextTick(): Promise<void> {\n    return new Promise(res => setTimeout(res, 0));\n}\n\nexport function promiseWait(ms: number = 0): Promise<void> {\n    return new Promise(res => setTimeout(res, ms));\n}\n\nexport function toPromise<T>(maybePromise: Promise<T> | T): Promise<T> {\n    if (maybePromise && typeof (maybePromise as any).then === 'function') {\n        // is promise\n        return maybePromise as any;\n    } else {\n        return Promise.resolve(maybePromise);\n    }\n}\n\n/**\n * returns true if promise is given\n */\nexport function isPromise(value: any): boolean {\n    if (\n        typeof value !== 'undefined' &&\n        typeof value.then === 'function'\n    ) {\n        return true;\n    }\n    return false;\n}\n\n/**\n * Reusing resolved promises has a better\n * performance than creating new ones each time.\n */\nexport const PROMISE_RESOLVE_TRUE: Promise<true> = Promise.resolve(true);\nexport const PROMISE_RESOLVE_FALSE: Promise<false> = Promise.resolve(false);\nexport const PROMISE_RESOLVE_NULL: Promise<null> = Promise.resolve(null);\nexport const PROMISE_RESOLVE_VOID: Promise<void> = Promise.resolve();\n\n\nexport function requestIdlePromiseNoQueue(\n    /**\n     * We always set a timeout!\n     * RxDB might be used on the server side where the\n     * server runs 24/4 on 99% CPU. So without a timeout\n     * this would never resolve which could cause a memory leak.\n     */\n    timeout: number | undefined = 10000\n) {\n    /**\n     * Do not use window.requestIdleCallback\n     * because some javascript runtimes like react-native,\n     * do not have a window object, but still have a global\n     * requestIdleCallback function.\n     * @link https://github.com/pubkey/rxdb/issues/4804\n    */\n    if (\n        typeof requestIdleCallback === 'function'\n    ) {\n        return new Promise<void>(res => {\n            requestIdleCallback(\n                () => res(),\n                {\n                    timeout\n                }\n            );\n        });\n    } else {\n        return promiseWait(0);\n    }\n}\n\n/**\n * If multiple operations wait for an requestIdlePromise\n * we do not want them to resolve all at the same time.\n * So we have to queue the calls.\n */\nlet idlePromiseQueue = PROMISE_RESOLVE_VOID;\nexport function requestIdlePromise(\n    timeout: number | undefined = undefined\n) {\n    idlePromiseQueue = idlePromiseQueue.then(() => {\n        return requestIdlePromiseNoQueue(timeout);\n    });\n    return idlePromiseQueue;\n}\n\n\n/**\n * run the callback if requestIdleCallback available\n * do nothing if not\n * @link https://developer.mozilla.org/de/docs/Web/API/Window/requestIdleCallback\n */\nexport function requestIdleCallbackIfAvailable(fun: Function): void {\n    /**\n     * Do not use window.requestIdleCallback\n     * because some javascript runtimes like react-native,\n     * do not have a window object, but still have a global\n     * requestIdleCallback function.\n     * @link https://github.com/pubkey/rxdb/issues/4804\n    */\n    if (\n        typeof requestIdleCallback === 'function'\n    ) {\n        requestIdleCallback(() => {\n            fun();\n        });\n    }\n}\n\n\n/**\n * like Promise.all() but runs in series instead of parallel\n * @link https://github.com/egoist/promise.series/blob/master/index.js\n * @param tasks array with functions that return a promise\n */\nexport function promiseSeries(\n    tasks: Function[],\n    initial?: any\n): Promise<any[]> {\n    return tasks\n        .reduce(\n            (current, next) => (current as any).then(next),\n            Promise.resolve(initial)\n        );\n}\n","\n\n\nexport function getFromMapOrThrow<K, V>(map: Map<K, V> | WeakMap<any, V>, key: K): V {\n    const val = map.get(key);\n    if (typeof val === 'undefined') {\n        throw new Error('missing value from map ' + key);\n    }\n    return val;\n}\n\nexport function getFromMapOrCreate<MapIndex, MapValue>(\n    map: Map<MapIndex, MapValue> | WeakMap<any, MapValue>,\n    index: MapIndex,\n    creator: () => MapValue,\n    ifWasThere?: (value: MapValue) => void\n): MapValue {\n    let value = map.get(index);\n    if (typeof value === 'undefined') {\n        value = creator();\n        map.set(index, value);\n    } else if (ifWasThere) {\n        ifWasThere(value);\n    }\n    return value;\n}\n","import type {\n    PlainJsonError,\n    RxError,\n    RxTypeError\n} from '../../types/index.d.ts';\nimport { ucfirst } from './utils-string.ts';\n\n\n\n/**\n * Returns an error that indicates that a plugin is missing\n * We do not throw a RxError because this should not be handled\n * programmatically but by using the correct import\n */\nexport function pluginMissing(\n    pluginKey: string\n): Error {\n    const keyParts = pluginKey.split('-');\n    let pluginName = 'RxDB';\n    keyParts.forEach(part => {\n        pluginName += ucfirst(part);\n    });\n    pluginName += 'Plugin';\n    return new Error(\n        `You are using a function which must be overwritten by a plugin.\n        You should either prevent the usage of this function or add the plugin via:\n            import { ${pluginName} } from 'rxdb/plugins/${pluginKey}';\n            addRxPlugin(${pluginName});\n        `\n    );\n}\n\n\n\nexport function errorToPlainJson(err: Error | TypeError | RxError | RxTypeError): PlainJsonError {\n    const ret: PlainJsonError = {\n        name: err.name,\n        message: err.message,\n        rxdb: (err as any).rxdb,\n        parameters: (err as RxError).parameters,\n        extensions: (err as any).extensions,\n        code: (err as RxError).code,\n        url: (err as RxError).url,\n        /**\n         * stack must be last to make it easier to read the json in a console.\n         * Also we ensure that each linebreak is spaced so that the chrome devtools\n         * shows urls to the source code that can be clicked to inspect\n         * the correct place in the code.\n         */\n        stack: !err.stack ? undefined : err.stack.replace(/\\n/g, ' \\n ')\n    };\n    return ret;\n}\n","\n/**\n * Returns the current unix time in milliseconds (with two decimals!)\n * Because the accuracy of getTime() in javascript is bad,\n * and we cannot rely on performance.now() on all platforms,\n * this method implements a way to never return the same value twice.\n * This ensures that when now() is called often, we do not loose the information\n * about which call came first and which came after.\n *\n * We had to move from having no decimals, to having two decimal\n * because it turned out that some storages are such fast that\n * calling this method too often would return 'the future'.\n */\nlet _lastNow: number = 0;\n/**\n * Returns the current time in milliseconds,\n * also ensures to not return the same value twice.\n */\nexport function now(): number {\n    let ret = Date.now();\n    ret = ret + 0.01;\n    if (ret <= _lastNow) {\n        ret = _lastNow + 0.01;\n    }\n\n    /**\n     * Strip the returned number to max two decimals.\n     * In theory we would not need this but\n     * in practice JavaScript has no such good number precision\n     * so rounding errors could add another decimal place.\n     */\n    const twoDecimals = parseFloat(ret.toFixed(2));\n\n    _lastNow = twoDecimals;\n    return twoDecimals;\n}\n","import type {\n    RxDocumentData\n} from '../../types/index.d.ts';\n\n/**\n * Parses the full revision.\n * Do NOT use this if you only need the revision height,\n * then use getHeightOfRevision() instead which is faster.\n */\nexport function parseRevision(revision: string): { height: number; hash: string; } {\n    const split = revision.split('-');\n    if (split.length !== 2) {\n        throw new Error('malformatted revision: ' + revision);\n    }\n    return {\n        height: parseInt(split[0], 10),\n        hash: split[1]\n    };\n}\n\n/**\n * @hotPath Performance is very important here\n * because we need to parse the revision height very often.\n * Do not use `parseInt(revision.split('-')[0], 10)` because\n * only fetching the start-number chars is faster.\n */\nexport function getHeightOfRevision(revision: string): number {\n    let useChars = '';\n    for (let index = 0; index < revision.length; index++) {\n        const char = revision[index];\n        if (char === '-') {\n            return parseInt(useChars, 10);\n        }\n        useChars += char;\n    }\n    throw new Error('malformatted revision: ' + revision);\n}\n\n\n/**\n * Creates the next write revision for a given document.\n */\nexport function createRevision<RxDocType>(\n    databaseInstanceToken: string,\n    previousDocData?: RxDocumentData<RxDocType>\n): string {\n    const newRevisionHeight = !previousDocData ? 1 : getHeightOfRevision(previousDocData._rev) + 1\n    return newRevisionHeight + '-' + databaseInstanceToken;\n}\n\n","/**\n * Helper functions for accessing the RxStorage instances.\n */\n\nimport { overwritable } from './overwritable.ts';\nimport { newRxError } from './rx-error.ts';\nimport {\n    getPrimaryFieldOfPrimaryKey\n} from './rx-schema-helper.ts';\nimport type {\n    BulkWriteRow,\n    BulkWriteRowProcessed,\n    CategorizeBulkWriteRowsOutput,\n    EventBulk,\n    RxAttachmentData,\n    RxAttachmentWriteData,\n    RxCollection,\n    RxDatabase,\n    RxDocumentData,\n    RxDocumentWriteData,\n    RxJsonSchema,\n    RxStorageWriteError,\n    RxStorageChangeEvent,\n    RxStorageInstance,\n    RxStorageInstanceCreationParams,\n    StringKeys,\n    RxStorageWriteErrorConflict,\n    RxStorageWriteErrorAttachment,\n    RxStorage,\n    RxStorageDefaultCheckpoint,\n    FilledMangoQuery,\n    RxStorageBulkWriteResponse\n} from './types/index.d.ts';\nimport {\n    PROMISE_RESOLVE_TRUE,\n    RXDB_VERSION,\n    RX_META_LWT_MINIMUM,\n    appendToArray,\n    createRevision,\n    ensureNotFalsy,\n    flatClone,\n    getDefaultRevision,\n    getDefaultRxDocumentMeta,\n    lastOfArray,\n    now,\n    promiseWait,\n    randomCouchString\n} from './plugins/utils/index.ts';\nimport { Observable, filter, map, startWith, switchMap } from 'rxjs';\nimport { prepareQuery } from './rx-query.ts';\nimport { normalizeMangoQuery } from './rx-query-helper.ts';\nimport { runPluginHooks } from './hooks.ts';\n\nexport const INTERNAL_STORAGE_NAME = '_rxdb_internal';\nexport const RX_DATABASE_LOCAL_DOCS_STORAGE_NAME = 'rxdatabase_storage_local';\n\nexport async function getSingleDocument<RxDocType>(\n    storageInstance: RxStorageInstance<RxDocType, any, any>,\n    documentId: string\n): Promise<RxDocumentData<RxDocType> | undefined> {\n    const results = await storageInstance.findDocumentsById([documentId], false);\n    const doc = results[0];\n    if (doc) {\n        return doc;\n    } else {\n        return undefined;\n    }\n}\n\n/**\n * Writes a single document,\n * throws RxStorageBulkWriteError on failure\n */\nexport async function writeSingle<RxDocType>(\n    instance: RxStorageInstance<RxDocType, any, any>,\n    writeRow: BulkWriteRow<RxDocType>,\n    context: string\n): Promise<RxDocumentData<RxDocType>> {\n    const writeResult = await instance.bulkWrite(\n        [writeRow],\n        context\n    );\n    if (writeResult.error.length > 0) {\n        const error = writeResult.error[0];\n        throw error;\n    } else {\n        const primaryPath = getPrimaryFieldOfPrimaryKey(instance.schema.primaryKey);\n        const success = getWrittenDocumentsFromBulkWriteResponse(primaryPath, [writeRow], writeResult);\n        const ret = success[0];\n        return ret;\n    }\n}\n\n/**\n * Observe the plain document data of a single document.\n * Do not forget to unsubscribe.\n */\nexport function observeSingle<RxDocType>(\n    storageInstance: RxStorageInstance<RxDocType, any, any>,\n    documentId: string\n): Observable<RxDocumentData<RxDocType>> {\n    const firstFindPromise = getSingleDocument(storageInstance, documentId);\n    const ret = storageInstance\n        .changeStream()\n        .pipe(\n            map(evBulk => evBulk.events.find(ev => ev.documentId === documentId)),\n            filter(ev => !!ev),\n            map(ev => Promise.resolve(ensureNotFalsy(ev).documentData)),\n            startWith(firstFindPromise),\n            switchMap(v => v),\n            filter(v => !!v)\n        ) as any;\n    return ret;\n}\n\n/**\n * Checkpoints must be stackable over another.\n * This is required form some RxStorage implementations\n * like the sharding plugin, where a checkpoint only represents\n * the document state from some, but not all shards.\n */\nexport function stackCheckpoints<CheckpointType>(\n    checkpoints: CheckpointType[]\n): CheckpointType {\n    return Object.assign(\n        {},\n        ...checkpoints\n    );\n}\n\nexport function throwIfIsStorageWriteError<RxDocType>(\n    collection: RxCollection<RxDocType, any, any>,\n    documentId: string,\n    writeData: RxDocumentWriteData<RxDocType> | RxDocType,\n    error: RxStorageWriteError<RxDocType> | undefined\n) {\n    if (error) {\n        if (error.status === 409) {\n            throw newRxError('CONFLICT', {\n                collection: collection.name,\n                id: documentId,\n                writeError: error,\n                data: writeData\n            });\n        } else if (error.status === 422) {\n            throw newRxError('VD2', {\n                collection: collection.name,\n                id: documentId,\n                writeError: error,\n                data: writeData\n            });\n        } else {\n            throw error;\n        }\n    }\n}\n\n\n/**\n * Analyzes a list of BulkWriteRows and determines\n * which documents must be inserted, updated or deleted\n * and which events must be emitted and which documents cause a conflict\n * and must not be written.\n * Used as helper inside of some RxStorage implementations.\n * @hotPath The performance of this function is critical\n */\nexport function categorizeBulkWriteRows<RxDocType>(\n    storageInstance: RxStorageInstance<any, any, any>,\n    primaryPath: StringKeys<RxDocType>,\n    /**\n     * Current state of the documents\n     * inside of the storage. Used to determine\n     * which writes cause conflicts.\n     * This must be a Map for better performance.\n     */\n    docsInDb: Map<RxDocumentData<RxDocType>[StringKeys<RxDocType>] | string, RxDocumentData<RxDocType>>,\n    /**\n     * The write rows that are passed to\n     * RxStorageInstance().bulkWrite().\n     */\n    bulkWriteRows: BulkWriteRow<RxDocType>[],\n    context: string,\n    /**\n     * Used by some storages for better performance.\n     * For example when get-by-id and insert/update can run in parallel.\n     */\n    onInsert?: (docData: RxDocumentData<RxDocType>) => void,\n    onUpdate?: (docData: RxDocumentData<RxDocType>) => void\n): CategorizeBulkWriteRowsOutput<RxDocType> {\n    const hasAttachments = !!storageInstance.schema.attachments;\n    const bulkInsertDocs: BulkWriteRowProcessed<RxDocType>[] = [];\n    const bulkUpdateDocs: BulkWriteRowProcessed<RxDocType>[] = [];\n    const errors: RxStorageWriteError<RxDocType>[] = [];\n    const eventBulkId = randomCouchString(10);\n    const eventBulk: EventBulk<RxStorageChangeEvent<RxDocumentData<RxDocType>>, any> = {\n        id: eventBulkId,\n        events: [],\n        checkpoint: null,\n        context,\n        startTime: now(),\n        endTime: 0\n    };\n    const eventBulkEvents = eventBulk.events;\n\n    const attachmentsAdd: {\n        documentId: string;\n        attachmentId: string;\n        attachmentData: RxAttachmentWriteData;\n        digest: string;\n    }[] = [];\n    const attachmentsRemove: {\n        documentId: string;\n        attachmentId: string;\n        digest: string;\n    }[] = [];\n    const attachmentsUpdate: {\n        documentId: string;\n        attachmentId: string;\n        attachmentData: RxAttachmentWriteData;\n        digest: string;\n    }[] = [];\n\n    const hasDocsInDb = docsInDb.size > 0;\n    let newestRow: BulkWriteRowProcessed<RxDocType> | undefined;\n\n    /**\n     * @performance is really important in this loop!\n     */\n    const rowAmount = bulkWriteRows.length;\n    for (let rowId = 0; rowId < rowAmount; rowId++) {\n        const writeRow = bulkWriteRows[rowId];\n\n        // use these variables to have less property accesses\n        const document = writeRow.document;\n        const previous = writeRow.previous;\n        const docId = document[primaryPath] as string;\n        const documentDeleted = document._deleted;\n        const previousDeleted = previous && previous._deleted;\n\n        let documentInDb: RxDocumentData<RxDocType> | undefined = undefined as any;\n        if (hasDocsInDb) {\n            documentInDb = docsInDb.get(docId);\n        }\n        let attachmentError: RxStorageWriteErrorAttachment<RxDocType> | undefined;\n\n        if (!documentInDb) {\n            /**\n             * It is possible to insert already deleted documents,\n             * this can happen on replication.\n             */\n            const insertedIsDeleted = documentDeleted ? true : false;\n            if (hasAttachments) {\n                Object\n                    .entries(document._attachments)\n                    .forEach(([attachmentId, attachmentData]) => {\n                        if (\n                            !(attachmentData as RxAttachmentWriteData).data\n                        ) {\n                            attachmentError = {\n                                documentId: docId,\n                                isError: true,\n                                status: 510,\n                                writeRow,\n                                attachmentId\n                            };\n                            errors.push(attachmentError);\n                        } else {\n                            attachmentsAdd.push({\n                                documentId: docId,\n                                attachmentId,\n                                attachmentData: attachmentData as any,\n                                digest: attachmentData.digest\n                            });\n                        }\n                    });\n            }\n            if (!attachmentError) {\n                if (hasAttachments) {\n                    bulkInsertDocs.push(stripAttachmentsDataFromRow(writeRow));\n                    if (onInsert) {\n                        onInsert(document);\n                    }\n                } else {\n                    bulkInsertDocs.push(writeRow as any);\n                    if (onInsert) {\n                        onInsert(document);\n                    }\n                }\n\n                newestRow = writeRow as any;\n            }\n\n            if (!insertedIsDeleted) {\n                const event = {\n                    documentId: docId,\n                    operation: 'INSERT' as const,\n                    documentData: hasAttachments ? stripAttachmentsDataFromDocument(document) : document as any,\n                    previousDocumentData: hasAttachments && previous ? stripAttachmentsDataFromDocument(previous) : previous as any\n                };\n                eventBulkEvents.push(event);\n            }\n        } else {\n            // update existing document\n            const revInDb: string = documentInDb._rev;\n\n            /**\n             * Check for conflict\n             */\n            if (\n                (\n                    !previous\n                ) ||\n                (\n                    !!previous &&\n                    revInDb !== previous._rev\n                )\n            ) {\n                // is conflict error\n                const err: RxStorageWriteError<RxDocType> = {\n                    isError: true,\n                    status: 409,\n                    documentId: docId,\n                    writeRow: writeRow,\n                    documentInDb\n                };\n                errors.push(err);\n                continue;\n            }\n\n            // handle attachments data\n\n            const updatedRow: BulkWriteRowProcessed<RxDocType> = hasAttachments ? stripAttachmentsDataFromRow(writeRow) : writeRow as any;\n            if (hasAttachments) {\n                if (documentDeleted) {\n                    /**\n                     * Deleted documents must have cleared all their attachments.\n                     */\n                    if (previous) {\n                        Object\n                            .keys(previous._attachments)\n                            .forEach(attachmentId => {\n                                attachmentsRemove.push({\n                                    documentId: docId,\n                                    attachmentId,\n                                    digest: ensureNotFalsy(previous)._attachments[attachmentId].digest\n                                });\n                            });\n                    }\n                } else {\n                    // first check for errors\n                    Object\n                        .entries(document._attachments)\n                        .find(([attachmentId, attachmentData]) => {\n                            const previousAttachmentData = previous ? previous._attachments[attachmentId] : undefined;\n                            if (\n                                !previousAttachmentData &&\n                                !(attachmentData as RxAttachmentWriteData).data\n                            ) {\n                                attachmentError = {\n                                    documentId: docId,\n                                    documentInDb: documentInDb as any,\n                                    isError: true,\n                                    status: 510,\n                                    writeRow,\n                                    attachmentId\n                                };\n                            }\n                            return true;\n                        });\n                    if (!attachmentError) {\n                        Object\n                            .entries(document._attachments)\n                            .forEach(([attachmentId, attachmentData]) => {\n                                const previousAttachmentData = previous ? previous._attachments[attachmentId] : undefined;\n                                if (!previousAttachmentData) {\n                                    attachmentsAdd.push({\n                                        documentId: docId,\n                                        attachmentId,\n                                        attachmentData: attachmentData as any,\n                                        digest: attachmentData.digest\n                                    });\n                                } else {\n                                    const newDigest = updatedRow.document._attachments[attachmentId].digest;\n                                    if (\n                                        (attachmentData as RxAttachmentWriteData).data &&\n                                        /**\n                                         * Performance shortcut,\n                                         * do not update the attachment data if it did not change.\n                                         */\n                                        previousAttachmentData.digest !== newDigest\n                                    ) {\n                                        attachmentsUpdate.push({\n                                            documentId: docId,\n                                            attachmentId,\n                                            attachmentData: attachmentData as RxAttachmentWriteData,\n                                            digest: attachmentData.digest\n                                        });\n                                    }\n                                }\n                            });\n                    }\n                }\n            }\n\n            if (attachmentError) {\n                errors.push(attachmentError);\n            } else {\n                if (hasAttachments) {\n                    bulkUpdateDocs.push(stripAttachmentsDataFromRow(updatedRow));\n                    if (onUpdate) {\n                        onUpdate(document);\n                    }\n                } else {\n                    bulkUpdateDocs.push(updatedRow);\n                    if (onUpdate) {\n                        onUpdate(document);\n                    }\n                }\n                newestRow = updatedRow as any;\n            }\n\n            let eventDocumentData: RxDocumentData<RxDocType> | undefined = null as any;\n            let previousEventDocumentData: RxDocumentData<RxDocType> | undefined = null as any;\n            let operation: 'INSERT' | 'UPDATE' | 'DELETE' = null as any;\n\n            if (previousDeleted && !documentDeleted) {\n                operation = 'INSERT';\n                eventDocumentData = hasAttachments ? stripAttachmentsDataFromDocument(document) : document as any;\n            } else if (previous && !previousDeleted && !documentDeleted) {\n                operation = 'UPDATE';\n                eventDocumentData = hasAttachments ? stripAttachmentsDataFromDocument(document) : document as any;\n                previousEventDocumentData = previous;\n            } else if (documentDeleted) {\n                operation = 'DELETE';\n                eventDocumentData = ensureNotFalsy(document) as any;\n                previousEventDocumentData = previous;\n            } else {\n                throw newRxError('SNH', { args: { writeRow } });\n            }\n\n            const event = {\n                documentId: docId,\n                documentData: eventDocumentData as RxDocumentData<RxDocType>,\n                previousDocumentData: previousEventDocumentData,\n                operation: operation\n            };\n            eventBulkEvents.push(event);\n        }\n    }\n\n    return {\n        bulkInsertDocs,\n        bulkUpdateDocs,\n        newestRow,\n        errors,\n        eventBulk,\n        attachmentsAdd,\n        attachmentsRemove,\n        attachmentsUpdate\n    };\n}\n\nexport function stripAttachmentsDataFromRow<RxDocType>(writeRow: BulkWriteRow<RxDocType>): BulkWriteRowProcessed<RxDocType> {\n    return {\n        previous: writeRow.previous,\n        document: stripAttachmentsDataFromDocument(writeRow.document)\n    };\n}\n\nexport function getAttachmentSize(\n    attachmentBase64String: string\n): number {\n    return atob(attachmentBase64String).length;\n}\n\n/**\n * Used in custom RxStorage implementations.\n */\nexport function attachmentWriteDataToNormalData(writeData: RxAttachmentData | RxAttachmentWriteData): RxAttachmentData {\n    const data = (writeData as RxAttachmentWriteData).data;\n    if (!data) {\n        return writeData as any;\n    }\n    const ret: RxAttachmentData = {\n        length: getAttachmentSize(data),\n        digest: writeData.digest,\n        type: writeData.type\n    };\n    return ret;\n}\n\nexport function stripAttachmentsDataFromDocument<RxDocType>(doc: RxDocumentWriteData<RxDocType>): RxDocumentData<RxDocType> {\n    if (!doc._attachments || Object.keys(doc._attachments).length === 0) {\n        return doc;\n    }\n\n    const useDoc: RxDocumentData<RxDocType> = flatClone(doc) as any;\n    useDoc._attachments = {};\n    Object\n        .entries(doc._attachments)\n        .forEach(([attachmentId, attachmentData]) => {\n            useDoc._attachments[attachmentId] = attachmentWriteDataToNormalData(attachmentData);\n        });\n    return useDoc;\n}\n\n/**\n * Flat clone the document data\n * and also the _meta field.\n * Used many times when we want to change the meta\n * during replication etc.\n */\nexport function flatCloneDocWithMeta<RxDocType>(\n    doc: RxDocumentData<RxDocType>\n): RxDocumentData<RxDocType> {\n    return Object.assign(\n        {},\n        doc,\n        {\n            _meta: flatClone(doc._meta)\n        }\n    );\n}\n\nexport type WrappedRxStorageInstance<RxDocumentType, Internals, InstanceCreationOptions> = RxStorageInstance<RxDocumentType, any, InstanceCreationOptions> & {\n    originalStorageInstance: RxStorageInstance<RxDocumentType, Internals, InstanceCreationOptions>;\n};\n\n\nconst BULK_WRITE_SUCCESS_MAP = new WeakMap<RxStorageBulkWriteResponse<any>, RxDocumentData<any>>();\n\n/**\n * Wraps the normal storageInstance of a RxCollection\n * to ensure that all access is properly using the hooks\n * and other data transformations and also ensure that database.lockedRun()\n * is used properly.\n */\nexport function getWrappedStorageInstance<\n    RxDocType,\n    Internals,\n    InstanceCreationOptions,\n    CheckpointType\n>(\n    database: RxDatabase<{}, Internals, InstanceCreationOptions, any>,\n    storageInstance: RxStorageInstance<RxDocType, Internals, InstanceCreationOptions, CheckpointType>,\n    /**\n     * The original RxJsonSchema\n     * before it was mutated by hooks.\n     */\n    rxJsonSchema: RxJsonSchema<RxDocumentData<RxDocType>>\n): WrappedRxStorageInstance<RxDocType, Internals, InstanceCreationOptions> {\n    overwritable.deepFreezeWhenDevMode(rxJsonSchema);\n\n    const primaryPath = getPrimaryFieldOfPrimaryKey(storageInstance.schema.primaryKey);\n\n    const ret: WrappedRxStorageInstance<RxDocType, Internals, InstanceCreationOptions> = {\n        originalStorageInstance: storageInstance,\n        schema: storageInstance.schema,\n        internals: storageInstance.internals,\n        collectionName: storageInstance.collectionName,\n        databaseName: storageInstance.databaseName,\n        options: storageInstance.options,\n        bulkWrite(\n            rows: BulkWriteRow<RxDocType>[],\n            context: string\n        ) {\n            const databaseToken = database.token;\n            const toStorageWriteRows: BulkWriteRow<RxDocType>[] = new Array(rows.length);\n            /**\n             * Use the same timestamp for all docs of this rows-set.\n             * This improves performance because calling Date.now() inside of the now() function\n             * is too costly.\n             */\n            const time = now();\n            for (let index = 0; index < rows.length; index++) {\n                const writeRow = rows[index];\n                const document = flatCloneDocWithMeta(writeRow.document);\n                document._meta.lwt = time;\n\n                /**\n                 * Yes we really want to set the revision here.\n                 * If you make a plugin that relies on having its own revision\n                 * stored into the storage, use this.originalStorageInstance.bulkWrite() instead.\n                 */\n                const previous = writeRow.previous;\n                document._rev = createRevision(\n                    databaseToken,\n                    previous\n                );\n                toStorageWriteRows[index] = {\n                    document,\n                    previous\n                };\n            }\n\n            runPluginHooks('preStorageWrite', {\n                storageInstance: this.originalStorageInstance,\n                rows: toStorageWriteRows\n            });\n\n            return database.lockedRun(\n                () => storageInstance.bulkWrite(\n                    toStorageWriteRows,\n                    context\n                )\n            )\n                /**\n                 * The RxStorageInstance MUST NOT allow to insert already _deleted documents,\n                 * without sending the previous document version.\n                 * But for better developer experience, RxDB does allow to re-insert deleted documents.\n                 * We do this by automatically fixing the conflict errors for that case\n                 * by running another bulkWrite() and merging the results.\n                 * @link https://github.com/pubkey/rxdb/pull/3839\n                 */\n                .then(writeResult => {\n                    const useWriteResult: typeof writeResult = {\n                        error: []\n                    };\n\n                    /**\n                     * TODO do we really have to build up the successArray\n                     * here directly? Maybe we only need it when it is really accessed.\n                     */\n                    const successArray = getWrittenDocumentsFromBulkWriteResponse(\n                        primaryPath,\n                        toStorageWriteRows,\n                        writeResult\n                    );\n                    BULK_WRITE_SUCCESS_MAP.set(useWriteResult, successArray);\n\n                    const reInsertErrors: RxStorageWriteErrorConflict<RxDocType>[] = writeResult.error.length === 0\n                        ? []\n                        : writeResult.error\n                            .filter((error) => {\n                                if (\n                                    error.status === 409 &&\n                                    !error.writeRow.previous &&\n                                    !error.writeRow.document._deleted &&\n                                    ensureNotFalsy(error.documentInDb)._deleted\n                                ) {\n                                    return true;\n                                }\n\n                                // add the \"normal\" errors to the parent error array.\n                                useWriteResult.error.push(error);\n                                return false;\n                            }) as any;\n                    if (reInsertErrors.length > 0) {\n                        const reInserts: BulkWriteRow<RxDocType>[] = reInsertErrors\n                            .map((error) => {\n                                return {\n                                    previous: error.documentInDb,\n                                    document: Object.assign(\n                                        {},\n                                        error.writeRow.document,\n                                        {\n                                            _rev: createRevision(\n                                                database.token,\n                                                error.documentInDb\n                                            )\n                                        }\n                                    )\n                                };\n                            });\n\n                        return database.lockedRun(\n                            () => storageInstance.bulkWrite(\n                                reInserts,\n                                context\n                            )\n                        ).then(subResult => {\n                            appendToArray(useWriteResult.error, subResult.error);\n\n                            const subSuccess = getWrittenDocumentsFromBulkWriteResponse(\n                                primaryPath,\n                                reInserts,\n                                subResult\n                            );\n                            appendToArray(successArray, subSuccess);\n\n                            return useWriteResult;\n                        });\n                    }\n                    return useWriteResult;\n                });\n        },\n        query(preparedQuery) {\n            return database.lockedRun(\n                () => storageInstance.query(preparedQuery)\n            );\n        },\n        count(preparedQuery) {\n            return database.lockedRun(\n                () => storageInstance.count(preparedQuery)\n            );\n        },\n        findDocumentsById(ids, deleted) {\n            return database.lockedRun(\n                () => storageInstance.findDocumentsById(ids, deleted)\n            );\n        },\n        getAttachmentData(\n            documentId: string,\n            attachmentId: string,\n            digest: string\n        ) {\n            return database.lockedRun(\n                () => storageInstance.getAttachmentData(documentId, attachmentId, digest)\n            );\n        },\n        getChangedDocumentsSince: !storageInstance.getChangedDocumentsSince ? undefined : (limit: number, checkpoint?: any) => {\n            return database.lockedRun(\n                () => ((storageInstance as any).getChangedDocumentsSince)(ensureNotFalsy(limit), checkpoint)\n            );\n        },\n        cleanup(minDeletedTime: number) {\n            return database.lockedRun(\n                () => storageInstance.cleanup(minDeletedTime)\n            );\n        },\n        remove() {\n            database.storageInstances.delete(ret);\n            return database.lockedRun(\n                () => storageInstance.remove()\n            );\n        },\n        close() {\n            database.storageInstances.delete(ret);\n            return database.lockedRun(\n                () => storageInstance.close()\n            );\n        },\n        changeStream() {\n            return storageInstance.changeStream();\n        },\n        conflictResultionTasks() {\n            return storageInstance.conflictResultionTasks();\n        },\n        resolveConflictResultionTask(taskSolution) {\n            if (taskSolution.output.isEqual) {\n                return storageInstance.resolveConflictResultionTask(taskSolution);\n            }\n\n            const doc = Object.assign(\n                {},\n                taskSolution.output.documentData,\n                {\n                    _meta: getDefaultRxDocumentMeta(),\n                    _rev: getDefaultRevision(),\n                    _attachments: {}\n                }\n            );\n\n            const documentData = flatClone(doc);\n            delete (documentData as any)._meta;\n            delete (documentData as any)._rev;\n            delete (documentData as any)._attachments;\n\n            return storageInstance.resolveConflictResultionTask({\n                id: taskSolution.id,\n                output: {\n                    isEqual: false,\n                    documentData\n                }\n            });\n        }\n    };\n\n    database.storageInstances.add(ret);\n    return ret;\n}\n\n/**\n * Each RxStorage implementation should\n * run this method at the first step of createStorageInstance()\n * to ensure that the configuration is correct.\n */\nexport function ensureRxStorageInstanceParamsAreCorrect(\n    params: RxStorageInstanceCreationParams<any, any>\n) {\n    if (params.schema.keyCompression) {\n        throw newRxError('UT5', { args: { params } });\n    }\n    if (hasEncryption(params.schema)) {\n        throw newRxError('UT6', { args: { params } });\n    }\n    if (\n        params.schema.attachments &&\n        params.schema.attachments.compression\n    ) {\n        throw newRxError('UT7', { args: { params } });\n    }\n}\n\nexport function hasEncryption(jsonSchema: RxJsonSchema<any>): boolean {\n    if (\n        (!!jsonSchema.encrypted && jsonSchema.encrypted.length > 0) ||\n        (jsonSchema.attachments && jsonSchema.attachments.encrypted)\n    ) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nexport function getChangedDocumentsSinceQuery<RxDocType, CheckpointType>(\n    storageInstance: RxStorageInstance<RxDocType, any, any, CheckpointType>,\n    limit: number,\n    checkpoint?: CheckpointType\n): FilledMangoQuery<RxDocType> {\n    const primaryPath = getPrimaryFieldOfPrimaryKey(storageInstance.schema.primaryKey);\n    const sinceLwt = checkpoint ? (checkpoint as unknown as RxStorageDefaultCheckpoint).lwt : RX_META_LWT_MINIMUM;\n    const sinceId = checkpoint ? (checkpoint as unknown as RxStorageDefaultCheckpoint).id : '';\n    return normalizeMangoQuery(storageInstance.schema, {\n        selector: {\n            $or: [\n                {\n                    '_meta.lwt': {\n                        $gt: sinceLwt\n                    }\n                },\n                {\n                    '_meta.lwt': {\n                        $eq: sinceLwt\n                    },\n                    [primaryPath]: {\n                        $gt: checkpoint ? sinceId : ''\n                    }\n                }\n            ],\n            // add this hint for better index usage\n            '_meta.lwt': {\n                $gte: sinceLwt\n            }\n        } as any,\n        sort: [\n            { '_meta.lwt': 'asc' },\n            { [primaryPath]: 'asc' }\n        ] as any,\n        skip: 0,\n        limit,\n        /**\n         * DO NOT SET A SPECIFIC INDEX HERE!\n         * The query might be modified by some plugin\n         * before sending it to the storage.\n         * We can be sure that in the end the query planner\n         * will find the best index.\n         */\n        // index: ['_meta.lwt', primaryPath]\n    });\n}\n\nexport async function getChangedDocumentsSince<RxDocType, CheckpointType>(\n    storageInstance: RxStorageInstance<RxDocType, any, any, CheckpointType>,\n    limit: number,\n    checkpoint?: CheckpointType\n): Promise<{\n    documents: RxDocumentData<RxDocType>[];\n    /**\n     * The checkpoint contains data so that another\n     * call to getChangedDocumentsSince() will continue\n     * from exactly the last document that was returned before.\n     */\n    checkpoint: CheckpointType;\n}> {\n    if (storageInstance.getChangedDocumentsSince) {\n        return storageInstance.getChangedDocumentsSince(limit, checkpoint);\n    }\n\n    const primaryPath = getPrimaryFieldOfPrimaryKey(storageInstance.schema.primaryKey);\n    const query = prepareQuery<RxDocumentData<any>>(\n        storageInstance.schema,\n        getChangedDocumentsSinceQuery(\n            storageInstance,\n            limit,\n            checkpoint\n        )\n    );\n\n    const result = await storageInstance.query(query);\n    const documents = result.documents;\n    const lastDoc = lastOfArray(documents);\n\n    return {\n        documents: documents,\n        checkpoint: lastDoc ? {\n            id: (lastDoc as any)[primaryPath],\n            lwt: lastDoc._meta.lwt\n        } as any : checkpoint ? checkpoint : {\n            id: '',\n            lwt: 0\n        }\n    };\n}\n\n\nexport function getWrittenDocumentsFromBulkWriteResponse<RxDocType>(\n    primaryPath: string,\n    writeRows: BulkWriteRow<RxDocType>[],\n    response: RxStorageBulkWriteResponse<RxDocType>\n): RxDocumentData<RxDocType>[] {\n    const fromMap = BULK_WRITE_SUCCESS_MAP.get(response);\n    if (fromMap) {\n        return fromMap;\n    }\n\n    const ret: RxDocumentData<RxDocType>[] = new Array(writeRows.length - response.error.length);\n    if (response.error.length > 0) {\n        const errorIds = new Set();\n        for (let index = 0; index < response.error.length; index++) {\n            const error = response.error[index];\n            errorIds.add(error.documentId);\n        }\n\n        for (let index = 0; index < writeRows.length; index++) {\n            const doc = writeRows[index].document;\n            if (!errorIds.has((doc as any)[primaryPath])) {\n                ret[index] = stripAttachmentsDataFromDocument(doc);\n            }\n        }\n    } else {\n        for (let index = 0; index < writeRows.length; index++) {\n            const doc = writeRows[index].document;\n            ret[index] = stripAttachmentsDataFromDocument(doc);\n        }\n    }\n\n    return ret;\n}\n\n\n/**\n * Wraps the storage and simluates\n * delays. Mostly used in tests.\n */\nexport function randomDelayStorage<Internals, InstanceCreationOptions>(\n    input: {\n        storage: RxStorage<Internals, InstanceCreationOptions>;\n        delayTimeBefore: () => number;\n        delayTimeAfter: () => number;\n    }\n): RxStorage<Internals, InstanceCreationOptions> {\n    /**\n     * Ensure writes to a delay storage\n     * are still correctly run in order.\n     */\n    let randomDelayStorageWriteQueue: Promise<any> = PROMISE_RESOLVE_TRUE;\n\n    const retStorage: RxStorage<Internals, InstanceCreationOptions> = {\n        name: 'random-delay-' + input.storage.name,\n        rxdbVersion: RXDB_VERSION,\n        async createStorageInstance(params) {\n            await promiseWait(input.delayTimeBefore());\n            const storageInstance = await input.storage.createStorageInstance(params);\n            await promiseWait(input.delayTimeAfter());\n\n            return {\n                databaseName: storageInstance.databaseName,\n                internals: storageInstance.internals,\n                options: storageInstance.options,\n                schema: storageInstance.schema,\n                collectionName: storageInstance.collectionName,\n                bulkWrite(a, b) {\n                    randomDelayStorageWriteQueue = randomDelayStorageWriteQueue.then(async () => {\n                        await promiseWait(input.delayTimeBefore());\n                        const response = await storageInstance.bulkWrite(a, b);\n                        await promiseWait(input.delayTimeAfter());\n                        return response;\n                    });\n                    const ret = randomDelayStorageWriteQueue;\n                    return ret;\n                },\n                async findDocumentsById(a, b) {\n                    await promiseWait(input.delayTimeBefore());\n                    const ret = await storageInstance.findDocumentsById(a, b);\n                    await promiseWait(input.delayTimeAfter());\n                    return ret;\n                },\n                async query(a) {\n                    await promiseWait(input.delayTimeBefore());\n                    const ret = await storageInstance.query(a);\n                    return ret;\n                },\n                async count(a) {\n                    await promiseWait(input.delayTimeBefore());\n                    const ret = await storageInstance.count(a);\n                    await promiseWait(input.delayTimeAfter());\n                    return ret;\n\n                },\n                async getAttachmentData(a, b, c) {\n                    await promiseWait(input.delayTimeBefore());\n                    const ret = await storageInstance.getAttachmentData(a, b, c);\n                    await promiseWait(input.delayTimeAfter());\n                    return ret;\n\n                },\n                getChangedDocumentsSince: !storageInstance.getChangedDocumentsSince ? undefined : async (a, b) => {\n                    await promiseWait(input.delayTimeBefore());\n                    const ret = await ensureNotFalsy(storageInstance.getChangedDocumentsSince)(a, b);\n                    await promiseWait(input.delayTimeAfter());\n                    return ret;\n\n                },\n                changeStream() {\n                    return storageInstance.changeStream();\n                },\n                conflictResultionTasks() {\n                    return storageInstance.conflictResultionTasks();\n                },\n                resolveConflictResultionTask(a) {\n                    return storageInstance.resolveConflictResultionTask(a);\n                },\n                async cleanup(a) {\n                    await promiseWait(input.delayTimeBefore());\n                    const ret = await storageInstance.cleanup(a);\n                    await promiseWait(input.delayTimeAfter());\n                    return ret;\n\n                },\n                async close() {\n                    await promiseWait(input.delayTimeBefore());\n                    const ret = await storageInstance.close();\n                    await promiseWait(input.delayTimeAfter());\n                    return ret;\n\n                },\n                async remove() {\n                    await promiseWait(input.delayTimeBefore());\n                    const ret = await storageInstance.remove();\n                    await promiseWait(input.delayTimeAfter());\n                    return ret;\n                },\n            };\n\n\n        }\n    };\n    return retStorage;\n}\n","import {\n    isBulkWriteConflictError,\n    rxStorageWriteErrorToRxError\n} from './rx-error.ts';\nimport type {\n    ModifyFunction,\n    BulkWriteRow,\n    MaybePromise,\n    RxDocumentData,\n    RxDocumentWriteData,\n    RxError,\n    RxStorageBulkWriteResponse,\n    RxStorageInstance,\n    StringKeys,\n    WithDeleted\n} from './types/index.d.ts';\nimport {\n    clone,\n    ensureNotFalsy,\n    getFromMapOrCreate,\n    getFromMapOrThrow,\n    getHeightOfRevision,\n    stripMetaDataFromDocument\n} from './plugins/utils/index.ts';\nimport { getWrittenDocumentsFromBulkWriteResponse } from './rx-storage-helper.ts';\n\n\n\nexport type IncrementalWriteModifier<RxDocType> = (\n    doc: RxDocumentData<RxDocType>\n) => MaybePromise<RxDocumentData<RxDocType>> | MaybePromise<RxDocumentWriteData<RxDocType>>;\n\n\ntype IncrementalWriteQueueItem<RxDocType> = {\n    lastKnownDocumentState: RxDocumentData<RxDocType>;\n    modifier: IncrementalWriteModifier<RxDocType>;\n    resolve: (d: RxDocumentData<RxDocType>) => void;\n    reject: (error: RxError) => void;\n};\n\n/**\n * The incremental write queue\n * batches up all incremental writes to a collection\n * so that performance can be improved by:\n * - Running only one write even when there are multiple modifications to the same document.\n * - Run all writes ins a single bulkWrite() call even when there are writes to many documents.\n */\nexport class IncrementalWriteQueue<RxDocType> {\n    public queueByDocId = new Map<string, IncrementalWriteQueueItem<RxDocType>[]>();\n    public isRunning: boolean = false;\n\n    constructor(\n        public readonly storageInstance: RxStorageInstance<RxDocType, any, any>,\n        public readonly primaryPath: StringKeys<RxDocumentData<RxDocType>>,\n        // can be used to run hooks etc.\n        public readonly preWrite: (newData: RxDocumentData<RxDocType>, oldData: RxDocumentData<RxDocType>) => MaybePromise<void>,\n        public readonly postWrite: (docData: RxDocumentData<RxDocType>) => void\n\n    ) { }\n\n    addWrite(\n        lastKnownDocumentState: RxDocumentData<RxDocType>,\n        modifier: IncrementalWriteModifier<RxDocType>\n    ): Promise<RxDocumentData<RxDocType>> {\n        const docId: string = lastKnownDocumentState[this.primaryPath] as any;\n        const ar = getFromMapOrCreate(this.queueByDocId, docId, () => []);\n        const ret = new Promise<RxDocumentData<RxDocType>>((resolve, reject) => {\n            const item: IncrementalWriteQueueItem<RxDocType> = {\n                lastKnownDocumentState,\n                modifier,\n                resolve,\n                reject\n            };\n            ensureNotFalsy(ar).push(item);\n            this.triggerRun();\n        });\n        return ret;\n    }\n\n    async triggerRun(): Promise<void> {\n        if (\n            this.isRunning === true ||\n            this.queueByDocId.size === 0\n        ) {\n            // already running\n            return;\n        }\n        this.isRunning = true;\n        const writeRows: BulkWriteRow<RxDocType>[] = [];\n\n        /**\n         * 'take over' so that while the async functions runs,\n         * new incremental updates could be added from the outside.\n         */\n        const itemsById = this.queueByDocId;\n        this.queueByDocId = new Map();\n        await Promise.all(\n            Array.from(itemsById.entries())\n                .map(async ([_docId, items]) => {\n                    const oldData = findNewestOfDocumentStates(\n                        items.map(i => i.lastKnownDocumentState)\n                    );\n                    let newData = oldData;\n                    for (const item of items) {\n                        try {\n                            newData = await item.modifier(\n                                /**\n                                 * We have to clone() each time because the modifier\n                                 * might throw while it already changed some properties\n                                 * of the document.\n                                 */\n                                clone(newData)\n                            ) as any;\n                        } catch (err: any) {\n                            item.reject(err);\n                            item.reject = () => { };\n                            item.resolve = () => { };\n                        }\n                    }\n\n                    try {\n                        await this.preWrite(newData, oldData);\n                    } catch (err: any) {\n                        /**\n                         * If the before-hooks fail,\n                         * we reject all of the writes because it is\n                         * not possible to determine which one is to blame.\n                         */\n                        items.forEach(item => item.reject(err));\n                        return;\n                    }\n                    writeRows.push({\n                        previous: oldData,\n                        document: newData\n                    });\n                })\n        );\n        const writeResult: RxStorageBulkWriteResponse<RxDocType> = writeRows.length > 0 ?\n            await this.storageInstance.bulkWrite(writeRows, 'incremental-write') :\n            { error: [] };\n\n        // process success\n        await Promise.all(\n            getWrittenDocumentsFromBulkWriteResponse(this.primaryPath, writeRows, writeResult).map(result => {\n                const docId = result[this.primaryPath] as string;\n                this.postWrite(result);\n                const items = getFromMapOrThrow(itemsById, docId);\n                items.forEach(item => item.resolve(result));\n            })\n        );\n\n        // process errors\n        writeResult.error\n            .forEach(error => {\n                const docId = error.documentId;\n                const items = getFromMapOrThrow(itemsById, docId);\n                const isConflict = isBulkWriteConflictError<RxDocType>(error);\n                if (isConflict) {\n                    // had conflict -> retry afterwards\n                    const ar = getFromMapOrCreate(this.queueByDocId, docId, () => []);\n                    /**\n                     * Add the items back to this.queueByDocId\n                     * by maintaining the original order.\n                     */\n                    items\n                        .reverse()\n                        .forEach(item => {\n                            item.lastKnownDocumentState = ensureNotFalsy(isConflict.documentInDb);\n                            ensureNotFalsy(ar).unshift(item);\n                        });\n                } else {\n                    // other error -> must be thrown\n                    const rxError = rxStorageWriteErrorToRxError(error);\n                    items.forEach(item => item.reject(rxError));\n                }\n            });\n        this.isRunning = false;\n\n        /**\n         * Always trigger another run\n         * because in between there might be new items\n         * been added to the queue.\n         */\n        return this.triggerRun();\n    }\n}\n\n\nexport function modifierFromPublicToInternal<RxDocType>(\n    publicModifier: ModifyFunction<RxDocType>\n): IncrementalWriteModifier<RxDocType> {\n    const ret = async (docData: RxDocumentData<RxDocType>) => {\n        const withoutMeta: WithDeleted<RxDocType> = stripMetaDataFromDocument(docData) as any;\n        withoutMeta._deleted = docData._deleted;\n        const modified = await publicModifier(withoutMeta);\n        const reattachedMeta: RxDocumentData<RxDocType> = Object.assign({}, modified, {\n            _meta: docData._meta,\n            _attachments: docData._attachments,\n            _rev: docData._rev,\n            _deleted: typeof (modified as WithDeleted<RxDocType>)._deleted !== 'undefined' ?\n                (modified as WithDeleted<RxDocType>)._deleted :\n                docData._deleted\n        });\n        if (typeof reattachedMeta._deleted === 'undefined') {\n            reattachedMeta._deleted = false;\n        }\n        return reattachedMeta;\n    };\n    return ret;\n}\n\n\nexport function findNewestOfDocumentStates<RxDocType>(\n    docs: RxDocumentData<RxDocType>[]\n): RxDocumentData<RxDocType> {\n\n    let newest = docs[0];\n    let newestRevisionHeight = getHeightOfRevision(newest._rev);\n    docs.forEach(doc => {\n        const height = getHeightOfRevision(doc._rev);\n        if (height > newestRevisionHeight) {\n            newest = doc;\n            newestRevisionHeight = height;\n        }\n    });\n    return newest;\n}\n","import {\n    Observable\n} from 'rxjs';\nimport {\n    distinctUntilChanged,\n    filter,\n    map,\n    shareReplay,\n    startWith\n} from 'rxjs/operators';\nimport {\n    clone,\n    trimDots,\n    pluginMissing,\n    flatClone,\n    PROMISE_RESOLVE_NULL,\n    RXJS_SHARE_REPLAY_DEFAULTS,\n    getProperty,\n    getFromMapOrCreate\n} from './plugins/utils/index.ts';\nimport {\n    newRxError\n} from './rx-error.ts';\nimport {\n    runPluginHooks\n} from './hooks.ts';\n\nimport type {\n    RxDocument,\n    RxCollection,\n    RxDocumentData,\n    RxDocumentWriteData,\n    UpdateQuery,\n    CRDTEntry,\n    ModifyFunction\n} from './types/index.d.ts';\nimport { getDocumentDataOfRxChangeEvent } from './rx-change-event.ts';\nimport { overwritable } from './overwritable.ts';\nimport { getSchemaByObjectPath } from './rx-schema-helper.ts';\nimport { getWrittenDocumentsFromBulkWriteResponse, throwIfIsStorageWriteError } from './rx-storage-helper.ts';\nimport { modifierFromPublicToInternal } from './incremental-write.ts';\n\nexport const basePrototype = {\n    get primaryPath() {\n        const _this: RxDocument = this as any;\n        if (!_this.isInstanceOfRxDocument) {\n            return undefined;\n        }\n        return _this.collection.schema.primaryPath;\n    },\n    get primary() {\n        const _this: RxDocument = this as any;\n        if (!_this.isInstanceOfRxDocument) {\n            return undefined;\n        }\n        return (_this._data as any)[_this.primaryPath];\n    },\n    get revision() {\n        const _this: RxDocument = this as any;\n        if (!_this.isInstanceOfRxDocument) {\n            return undefined;\n        }\n        return _this._data._rev;\n    },\n    get deleted$() {\n        const _this: RxDocument<any> = this as any;\n        if (!_this.isInstanceOfRxDocument) {\n            return undefined;\n        }\n        return _this.$.pipe(\n            map((d: any) => d._data._deleted)\n        );\n    },\n    get deleted$$() {\n        const _this: RxDocument = this as any;\n        const reactivity = _this.collection.database.getReactivityFactory();\n        return reactivity.fromObservable(\n            _this.deleted$,\n            _this.getLatest().deleted,\n            _this.collection.database\n        );\n    },\n    get deleted() {\n        const _this: RxDocument = this as any;\n        if (!_this.isInstanceOfRxDocument) {\n            return undefined;\n        }\n        return _this._data._deleted;\n    },\n\n    getLatest(this: RxDocument): RxDocument {\n        const latestDocData = this.collection._docCache.getLatestDocumentData(this.primary);\n        return this.collection._docCache.getCachedRxDocument(latestDocData);\n    },\n\n    /**\n     * returns the observable which emits the plain-data of this document\n     */\n    get $(): Observable<RxDocumentData<any>> {\n        const _this: RxDocument<{}, {}, {}> = this as any;\n        return _this.collection.$.pipe(\n            filter(changeEvent => !changeEvent.isLocal),\n            filter(changeEvent => changeEvent.documentId === this.primary),\n            map(changeEvent => getDocumentDataOfRxChangeEvent(changeEvent)),\n            startWith(_this.collection._docCache.getLatestDocumentData(this.primary)),\n            distinctUntilChanged((prev, curr) => prev._rev === curr._rev),\n            map(docData => (this as RxDocument<any>).collection._docCache.getCachedRxDocument(docData)),\n            shareReplay(RXJS_SHARE_REPLAY_DEFAULTS)\n        );\n    },\n    get $$(): any {\n        const _this: RxDocument = this as any;\n        const reactivity = _this.collection.database.getReactivityFactory();\n        return reactivity.fromObservable(\n            _this.$,\n            _this.getLatest()._data,\n            _this.collection.database\n        );\n    },\n\n    /**\n     * returns observable of the value of the given path\n     */\n    get$(this: RxDocument, path: string): Observable<any> {\n        if (overwritable.isDevMode()) {\n            if (path.includes('.item.')) {\n                throw newRxError('DOC1', {\n                    path\n                });\n            }\n\n            if (path === this.primaryPath) {\n                throw newRxError('DOC2');\n            }\n\n            // final fields cannot be modified and so also not observed\n            if (this.collection.schema.finalFields.includes(path)) {\n                throw newRxError('DOC3', {\n                    path\n                });\n            }\n\n            const schemaObj = getSchemaByObjectPath(\n                this.collection.schema.jsonSchema,\n                path\n            );\n\n            if (!schemaObj) {\n                throw newRxError('DOC4', {\n                    path\n                });\n            }\n        }\n\n        return this.$\n            .pipe(\n                map(data => getProperty(data, path)),\n                distinctUntilChanged()\n            );\n    },\n    get$$(this: RxDocument, path: string) {\n        const obs = this.get$(path);\n        const reactivity = this.collection.database.getReactivityFactory();\n        return reactivity.fromObservable(\n            obs,\n            this.getLatest().get(path),\n            this.collection.database\n        );\n    },\n\n    /**\n     * populate the given path\n     */\n    populate(this: RxDocument, path: string): Promise<RxDocument | null> {\n        const schemaObj = getSchemaByObjectPath(\n            this.collection.schema.jsonSchema,\n            path\n        );\n        const value = this.get(path);\n        if (!value) {\n            return PROMISE_RESOLVE_NULL;\n        }\n        if (!schemaObj) {\n            throw newRxError('DOC5', {\n                path\n            });\n        }\n        if (!schemaObj.ref) {\n            throw newRxError('DOC6', {\n                path,\n                schemaObj\n            });\n        }\n\n        const refCollection: RxCollection = this.collection.database.collections[schemaObj.ref];\n        if (!refCollection) {\n            throw newRxError('DOC7', {\n                ref: schemaObj.ref,\n                path,\n                schemaObj\n            });\n        }\n\n        if (schemaObj.type === 'array') {\n            return refCollection.findByIds(value).exec().then(res => {\n                const valuesIterator = res.values();\n                return Array.from(valuesIterator) as any;\n            });\n        } else {\n            return refCollection.findOne(value).exec();\n        }\n    },\n    /**\n     * get data by objectPath\n     * @hotPath Performance here is really important,\n     * run some tests before changing anything.\n     */\n    get(this: RxDocument, objPath: string): any | null {\n        return getFromMapOrCreate(\n            this._propertyCache,\n            objPath,\n            () => {\n                const valueObj = getProperty(this._data, objPath);\n\n                // direct return if array or non-object\n                if (\n                    typeof valueObj !== 'object' ||\n                    valueObj === null ||\n                    Array.isArray(valueObj)\n                ) {\n                    return overwritable.deepFreezeWhenDevMode(valueObj);\n                }\n                const _this = this;\n                const proxy = new Proxy(\n                    /**\n                     * In dev-mode, the _data is deep-frozen\n                     * so we have to flat clone here so that\n                     * the proxy can work.\n                     */\n                    flatClone(valueObj),\n                    {\n                        get(target, property: any) {\n                            if (typeof property !== 'string') {\n                                return target[property];\n                            }\n                            const lastChar = property.charAt(property.length - 1);\n                            if (property.endsWith('$$')) {\n                                const key = property.slice(0, -2);\n                                return _this.get$$(trimDots(objPath + '.' + key));\n                            } else if (lastChar === '$') {\n                                const key = property.slice(0, -1);\n                                return _this.get$(trimDots(objPath + '.' + key));\n                            } else if (lastChar === '_') {\n                                const key = property.slice(0, -1);\n                                return _this.populate(trimDots(objPath + '.' + key));\n                            } else {\n                                return _this.get(trimDots(objPath + '.' + property));\n                            }\n                        }\n                    });\n                return proxy;\n            }\n        );\n\n    },\n\n    toJSON(this: RxDocument, withMetaFields = false) {\n        if (!withMetaFields) {\n            const data = flatClone(this._data);\n            delete (data as any)._rev;\n            delete (data as any)._attachments;\n            delete (data as any)._deleted;\n            delete (data as any)._meta;\n            return overwritable.deepFreezeWhenDevMode(data);\n        } else {\n            return overwritable.deepFreezeWhenDevMode(this._data);\n        }\n    },\n    toMutableJSON(this: RxDocument, withMetaFields = false) {\n        return clone(this.toJSON(withMetaFields as any));\n    },\n\n    /**\n     * updates document\n     * @overwritten by plugin (optional)\n     * @param updateObj mongodb-like syntax\n     */\n    update(_updateObj: UpdateQuery<any>) {\n        throw pluginMissing('update');\n    },\n    incrementalUpdate(_updateObj: UpdateQuery<any>) {\n        throw pluginMissing('update');\n    },\n    updateCRDT(_updateObj: CRDTEntry<any> | CRDTEntry<any>[]) {\n        throw pluginMissing('crdt');\n    },\n    putAttachment() {\n        throw pluginMissing('attachments');\n    },\n    getAttachment() {\n        throw pluginMissing('attachments');\n    },\n    allAttachments() {\n        throw pluginMissing('attachments');\n    },\n    get allAttachments$() {\n        throw pluginMissing('attachments');\n    },\n\n    async modify<RxDocType>(\n        this: RxDocument<RxDocType>,\n        mutationFunction: ModifyFunction<RxDocType>,\n        // used by some plugins that wrap the method\n        _context?: string\n    ): Promise<RxDocument> {\n        const oldData = this._data;\n        const newData: RxDocumentData<RxDocType> = await modifierFromPublicToInternal<RxDocType>(mutationFunction)(oldData) as any;\n        return this._saveData(newData, oldData) as any;\n    },\n\n    /**\n     * runs an incremental update over the document\n     * @param function that takes the document-data and returns a new data-object\n     */\n    incrementalModify(\n        this: RxDocument,\n        mutationFunction: ModifyFunction<any>,\n        // used by some plugins that wrap the method\n        _context?: string\n    ): Promise<RxDocument> {\n        return this.collection.incrementalWriteQueue.addWrite(\n            this._data,\n            modifierFromPublicToInternal(mutationFunction)\n        ).then(result => this.collection._docCache.getCachedRxDocument(result));\n    },\n\n    patch<RxDocType>(\n        this: RxDocument<RxDocType>,\n        patch: Partial<RxDocType>\n    ) {\n        const oldData = this._data;\n        const newData = clone(oldData);\n        Object\n            .entries(patch)\n            .forEach(([k, v]) => {\n                (newData as any)[k] = v;\n            });\n        return this._saveData(newData, oldData);\n    },\n\n    /**\n     * patches the given properties\n     */\n    incrementalPatch<RxDocumentType = any>(\n        this: RxDocument<RxDocumentType>,\n        patch: Partial<RxDocumentType>\n    ): Promise<RxDocument<RxDocumentType>> {\n        return this.incrementalModify((docData) => {\n            Object\n                .entries(patch)\n                .forEach(([k, v]) => {\n                    (docData as any)[k] = v;\n                });\n            return docData;\n        });\n    },\n\n    /**\n     * saves the new document-data\n     * and handles the events\n     */\n    async _saveData<RxDocType>(\n        this: RxDocument<RxDocType>,\n        newData: RxDocumentWriteData<RxDocType>,\n        oldData: RxDocumentData<RxDocType>\n    ): Promise<RxDocument<RxDocType>> {\n        newData = flatClone(newData);\n\n        // deleted documents cannot be changed\n        if (this._data._deleted) {\n            throw newRxError('DOC11', {\n                id: this.primary,\n                document: this\n            });\n        }\n        await beforeDocumentUpdateWrite(this.collection, newData, oldData);\n        const writeRows = [{\n            previous: oldData,\n            document: newData\n        }];\n        const writeResult = await this.collection.storageInstance.bulkWrite(writeRows, 'rx-document-save-data');\n\n        const isError = writeResult.error[0];\n        throwIfIsStorageWriteError(this.collection, this.primary, newData, isError);\n\n        await this.collection._runHooks('post', 'save', newData, this);\n        return this.collection._docCache.getCachedRxDocument(\n            getWrittenDocumentsFromBulkWriteResponse(\n                this.collection.schema.primaryPath,\n                writeRows,\n                writeResult\n            )[0]\n        );\n    },\n\n    /**\n     * Remove the document.\n     * Notice that there is no hard delete,\n     * instead deleted documents get flagged with _deleted=true.\n     */\n    remove(this: RxDocument): Promise<RxDocument> {\n        const collection = this.collection;\n        if (this.deleted) {\n            return Promise.reject(newRxError('DOC13', {\n                document: this,\n                id: this.primary\n            }));\n        }\n\n        const deletedData = flatClone(this._data);\n        let removedDocData: RxDocumentData<any>;\n        return collection._runHooks('pre', 'remove', deletedData, this)\n            .then(async () => {\n                deletedData._deleted = true;\n                const writeRows = [{\n                    previous: this._data,\n                    document: deletedData\n                }];\n                const writeResult = await collection.storageInstance.bulkWrite(writeRows, 'rx-document-remove');\n                const isError = writeResult.error[0];\n                throwIfIsStorageWriteError(collection, this.primary, deletedData, isError);\n                return getWrittenDocumentsFromBulkWriteResponse(\n                    this.collection.schema.primaryPath,\n                    writeRows,\n                    writeResult\n                )[0];\n            })\n            .then((removed) => {\n                removedDocData = removed;\n                return this.collection._runHooks('post', 'remove', deletedData, this);\n            })\n            .then(() => {\n                return this.collection._docCache.getCachedRxDocument(removedDocData);\n            });\n    },\n    incrementalRemove(this: RxDocument): Promise<RxDocument> {\n        return this.incrementalModify(async (docData) => {\n            await this.collection._runHooks('pre', 'remove', docData, this);\n            docData._deleted = true;\n            return docData;\n        }).then(async (newDoc) => {\n            await this.collection._runHooks('post', 'remove', newDoc._data, newDoc);\n            return newDoc;\n        });\n    },\n    destroy() {\n        throw newRxError('DOC14');\n    }\n};\n\nexport function createRxDocumentConstructor(proto = basePrototype) {\n    const constructor = function RxDocumentConstructor(\n        this: RxDocument,\n        collection: RxCollection,\n        docData: RxDocumentData<any>\n    ) {\n        this.collection = collection;\n\n        // assume that this is always equal to the doc-data in the database\n        this._data = docData;\n        this._propertyCache = new Map<string, any>();\n\n        /**\n         * because of the prototype-merge,\n         * we can not use the native instanceof operator\n         */\n        this.isInstanceOfRxDocument = true;\n    };\n    constructor.prototype = proto;\n    return constructor;\n}\n\nexport function createWithConstructor<RxDocType>(\n    constructor: any,\n    collection: RxCollection<RxDocType>,\n    jsonData: RxDocumentData<RxDocType>\n): RxDocument<RxDocType> | null {\n    const doc = new constructor(collection, jsonData);\n    runPluginHooks('createRxDocument', doc);\n    return doc;\n}\n\nexport function isRxDocument(obj: any): boolean {\n    return typeof obj === 'object' && obj !== null && 'isInstanceOfRxDocument' in obj;\n}\n\n\nexport function beforeDocumentUpdateWrite<RxDocType>(\n    collection: RxCollection<RxDocType>,\n    newData: RxDocumentWriteData<RxDocType>,\n    oldData: RxDocumentData<RxDocType>\n): Promise<any> {\n    /**\n     * Meta values must always be merged\n     * instead of overwritten.\n     * This ensures that different plugins do not overwrite\n     * each others meta properties.\n     */\n    newData._meta = Object.assign(\n        {},\n        oldData._meta,\n        newData._meta\n    );\n\n    // ensure modifications are ok\n    if (overwritable.isDevMode()) {\n        collection.schema.validateChange(oldData, newData);\n    }\n    return collection._runHooks('pre', 'save', newData, oldData);\n}\n\n","/**\n * RxChangeEvents a emitted when something in the database changes\n * they can be grabbed by the observables of database, collection and document\n */\n\nimport type {\n    ChangeEvent as EventReduceChangeEvent,\n} from 'event-reduce-js';\nimport { overwritable } from './overwritable.ts';\n\nimport type {\n    EventBulk,\n    RxChangeEvent,\n    RxDocumentData\n} from './types/index.d.ts';\nimport { appendToArray } from './plugins/utils/index.ts';\n\nexport function getDocumentDataOfRxChangeEvent<T>(\n    rxChangeEvent: RxChangeEvent<T>\n): RxDocumentData<T> {\n    if ((rxChangeEvent as any).documentData) {\n        return (rxChangeEvent as any).documentData;\n    } else {\n        return (rxChangeEvent as any).previousDocumentData;\n    }\n}\n\n/**\n * Might return null which means an\n * already deleted document got modified but still is deleted.\n * These kind of events are not relevant for the event-reduce algorithm\n * and must be filtered out.\n */\nexport function rxChangeEventToEventReduceChangeEvent<DocType>(\n    rxChangeEvent: RxChangeEvent<DocType>\n): EventReduceChangeEvent<DocType> | null {\n    switch (rxChangeEvent.operation) {\n        case 'INSERT':\n            return {\n                operation: rxChangeEvent.operation,\n                id: rxChangeEvent.documentId,\n                doc: rxChangeEvent.documentData as any,\n                previous: null\n            };\n        case 'UPDATE':\n            return {\n                operation: rxChangeEvent.operation,\n                id: rxChangeEvent.documentId,\n                doc: overwritable.deepFreezeWhenDevMode(rxChangeEvent.documentData) as any,\n                previous: rxChangeEvent.previousDocumentData ? rxChangeEvent.previousDocumentData as any : 'UNKNOWN'\n            };\n        case 'DELETE':\n            return {\n                operation: rxChangeEvent.operation,\n                id: rxChangeEvent.documentId,\n                doc: null,\n                previous: rxChangeEvent.previousDocumentData as DocType\n            };\n    }\n}\n\n/**\n * Flattens the given events into a single array of events.\n * Used mostly in tests.\n */\nexport function flattenEvents<EventType>(\n    input: EventBulk<EventType, any> | EventBulk<EventType, any>[] | EventType | EventType[]\n): EventType[] {\n    const output: EventType[] = [];\n    if (Array.isArray(input)) {\n        input.forEach(inputItem => {\n            const add = flattenEvents(inputItem);\n            appendToArray(output, add);\n        });\n    } else {\n        if ((input as any).id && (input as any).events) {\n            // is bulk\n            (input as EventBulk<EventType, any>)\n                .events\n                .forEach(ev => output.push(ev));\n        } else {\n            output.push(input as any);\n        }\n    }\n\n    const usedIds = new Set<string>();\n    const nonDuplicate: EventType[] = [];\n\n    function getEventId(ev: any): string {\n        return [\n            ev.documentId,\n            ev.documentData ? ev.documentData._rev : '',\n            ev.previousDocumentData ? ev.previousDocumentData._rev : ''\n        ].join('|');\n    }\n\n    output.forEach(ev => {\n        const eventId = getEventId(ev);\n        if (!usedIds.has(eventId)) {\n            usedIds.add(eventId);\n            nonDuplicate.push(ev);\n        }\n    });\n\n    return nonDuplicate;\n}\n","import { Subject } from './Subject';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\n\n/**\n * A variant of Subject that requires an initial value and emits its current\n * value whenever it is subscribed to.\n *\n * @class BehaviorSubject<T>\n */\nexport class BehaviorSubject<T> extends Subject<T> {\n  constructor(private _value: T) {\n    super();\n  }\n\n  get value(): T {\n    return this.getValue();\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    const subscription = super._subscribe(subscriber);\n    !subscription.closed && subscriber.next(this._value);\n    return subscription;\n  }\n\n  getValue(): T {\n    const { hasError, thrownError, _value } = this;\n    if (hasError) {\n      throw thrownError;\n    }\n    this._throwIfClosed();\n    return _value;\n  }\n\n  next(value: T): void {\n    super.next((this._value = value));\n  }\n}\n","import { createErrorClass } from './createErrorClass';\n\nexport interface EmptyError extends Error {}\n\nexport interface EmptyErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (): EmptyError;\n}\n\n/**\n * An error thrown when an Observable or a sequence was queried but has no\n * elements.\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link single}\n * @see {@link firstValueFrom}\n * @see {@link lastValueFrom}\n *\n * @class EmptyError\n */\nexport const EmptyError: EmptyErrorCtor = createErrorClass((_super) => function EmptyErrorImpl(this: any) {\n  _super(this);\n  this.name = 'EmptyError';\n  this.message = 'no elements in sequence';\n});\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\n\n/**\n * A simple Observable that emits no items to the Observer and immediately\n * emits a complete notification.\n *\n * <span class=\"informal\">Just emits 'complete', and nothing else.</span>\n *\n * ![](empty.png)\n *\n * A simple Observable that only emits the complete notification. It can be used\n * for composing with other Observables, such as in a {@link mergeMap}.\n *\n * ## Examples\n *\n * Log complete notification\n *\n * ```ts\n * import { EMPTY } from 'rxjs';\n *\n * EMPTY.subscribe({\n *   next: () => console.log('Next'),\n *   complete: () => console.log('Complete!')\n * });\n *\n * // Outputs\n * // Complete!\n * ```\n *\n * Emit the number 7, then complete\n *\n * ```ts\n * import { EMPTY, startWith } from 'rxjs';\n *\n * const result = EMPTY.pipe(startWith(7));\n * result.subscribe(x => console.log(x));\n *\n * // Outputs\n * // 7\n * ```\n *\n * Map and flatten only odd numbers to the sequence `'a'`, `'b'`, `'c'`\n *\n * ```ts\n * import { interval, mergeMap, of, EMPTY } from 'rxjs';\n *\n * const interval$ = interval(1000);\n * const result = interval$.pipe(\n *   mergeMap(x => x % 2 === 1 ? of('a', 'b', 'c') : EMPTY),\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following to the console:\n * // x is equal to the count on the interval, e.g. (0, 1, 2, 3, ...)\n * // x will occur every 1000ms\n * // if x % 2 is equal to 1, print a, b, c (each on its own)\n * // if x % 2 is not equal to 1, nothing will be output\n * ```\n *\n * @see {@link Observable}\n * @see {@link NEVER}\n * @see {@link of}\n * @see {@link throwError}\n */\nexport const EMPTY = new Observable<never>((subscriber) => subscriber.complete());\n\n/**\n * @param scheduler A {@link SchedulerLike} to use for scheduling\n * the emission of the complete notification.\n * @deprecated Replaced with the {@link EMPTY} constant or {@link scheduled} (e.g. `scheduled([], scheduler)`). Will be removed in v8.\n */\nexport function empty(scheduler?: SchedulerLike) {\n  return scheduler ? emptyScheduled(scheduler) : EMPTY;\n}\n\nfunction emptyScheduled(scheduler: SchedulerLike) {\n  return new Observable<never>((subscriber) => scheduler.schedule(() => subscriber.complete()));\n}\n","import {\n    pushAtSortPosition\n} from 'array-push-at-sort-position';\n\nimport type { ActionFunction } from '../types/index.js';\n\nexport const doNothing: ActionFunction<any> = (_input) => { };\n\nexport const insertFirst: ActionFunction<any> = (input) => {\n    input.previousResults.unshift(input.changeEvent.doc);\n    if (input.keyDocumentMap) {\n        input.keyDocumentMap.set(\n            input.changeEvent.id,\n            input.changeEvent.doc\n        );\n    }\n};\nexport const insertLast: ActionFunction<any> = (input) => {\n    input.previousResults.push(input.changeEvent.doc);\n    if (input.keyDocumentMap) {\n        input.keyDocumentMap.set(\n            input.changeEvent.id,\n            input.changeEvent.doc\n        );\n    }\n};\nexport const removeFirstItem: ActionFunction<any> = (input) => {\n    const first = input.previousResults.shift();\n    if (input.keyDocumentMap && first) {\n        input.keyDocumentMap.delete(\n            first[input.queryParams.primaryKey]\n        );\n    }\n};\n\nexport const removeLastItem: ActionFunction<any> = (input) => {\n    const last = input.previousResults.pop();\n    if (input.keyDocumentMap && last) {\n        input.keyDocumentMap.delete(\n            last[input.queryParams.primaryKey]\n        );\n    }\n};\n\nexport const removeFirstInsertLast: ActionFunction<any> = (input) => {\n    removeFirstItem(input);\n    insertLast(input);\n};\n\nexport const removeLastInsertFirst: ActionFunction<any> = (input) => {\n    removeLastItem(input);\n    insertFirst(input);\n};\n\nexport const removeFirstInsertFirst: ActionFunction<any> = (input) => {\n    removeFirstItem(input);\n    insertFirst(input);\n};\n\nexport const removeLastInsertLast: ActionFunction<any> = (input) => {\n    removeLastItem(input);\n    insertLast(input);\n};\n\nexport const removeExisting: ActionFunction<any> = (input) => {\n    if (input.keyDocumentMap) {\n        input.keyDocumentMap.delete(\n            input.changeEvent.id\n        );\n    }\n\n    // find index of document\n    const primary = input.queryParams.primaryKey;\n    const results = input.previousResults;\n    for (let i = 0; i < results.length; i++) {\n        const item = results[i];\n        // remove\n        if (item[primary] === input.changeEvent.id) {\n            results.splice(i, 1);\n            break;\n        }\n    }\n};\n\nexport const replaceExisting: ActionFunction<any> = (input) => {\n    // find index of document\n    const doc = input.changeEvent.doc;\n    const primary = input.queryParams.primaryKey;\n    const results = input.previousResults;\n    for (let i = 0; i < results.length; i++) {\n        const item = results[i];\n        // replace\n        if (item[primary] === input.changeEvent.id) {\n            results[i] = doc;\n            if (input.keyDocumentMap) {\n                input.keyDocumentMap.set(\n                    input.changeEvent.id,\n                    doc\n                );\n            }\n            break;\n        }\n    }\n};\n\n/**\n * this function always returns wrong results\n * it must be later optimised out\n * otherwise there is something broken\n */\nexport const alwaysWrong: ActionFunction<any> = (input) => {\n    const wrongHuman = {\n        _id: 'wrongHuman' + new Date().getTime()\n    };\n    input.previousResults.length = 0; // clear array\n    input.previousResults.push(wrongHuman);\n    if (input.keyDocumentMap) {\n        input.keyDocumentMap.clear();\n        input.keyDocumentMap.set(\n            wrongHuman._id,\n            wrongHuman\n        );\n    }\n};\n\nexport const insertAtSortPosition: ActionFunction<any> = (input) => {\n    const docId = input.changeEvent.id;\n    const doc = input.changeEvent.doc;\n    if (input.keyDocumentMap) {\n\n        if (input.keyDocumentMap.has(docId)) {\n            /**\n             * If document is already in results,\n             * we cannot add it again because it would throw on non-deterministic ordering.\n             */\n            return;\n        }\n\n        input.keyDocumentMap.set(\n            docId,\n            doc\n        );\n    } else {\n        const isDocInResults = input.previousResults.find((d: any) => d[input.queryParams.primaryKey] === docId);\n        /**\n         * If document is already in results,\n         * we cannot add it again because it would throw on non-deterministic ordering.\n         */\n        if (isDocInResults) {\n            return;\n        }\n    }\n\n    pushAtSortPosition(\n        input.previousResults,\n        doc,\n        input.queryParams.sortComparator,\n        0\n    );\n};\n\nexport const removeExistingAndInsertAtSortPosition: ActionFunction<any> = (input) => {\n    removeExisting(input);\n    insertAtSortPosition(input);\n};\n\nexport const runFullQueryAgain: ActionFunction<any> = (_input) => {\n    throw new Error('Action runFullQueryAgain must be implemented by yourself');\n};\n\nexport const unknownAction: ActionFunction<any> = (_input) => {\n    throw new Error('Action unknownAction should never be called');\n};\n","/**\n * copied and adapted from npm 'binary-search-insert'\n * @link https://www.npmjs.com/package/binary-search-insert\n */\nexport function pushAtSortPosition(array, item, compareFunction, low) {\n  var length = array.length;\n  var high = length - 1;\n  var mid = 0;\n\n  /**\n   * Optimization shortcut.\n   */\n  if (length === 0) {\n    array.push(item);\n    return 0;\n  }\n\n  /**\n   * So we do not have to get the ret[mid] doc again\n   * at the last we store it here.\n   */\n  var lastMidDoc;\n  while (low <= high) {\n    // https://github.com/darkskyapp/binary-search\n    // http://googleresearch.blogspot.com/2006/06/extra-extra-read-all-about-it-nearly.html\n    mid = low + (high - low >> 1);\n    lastMidDoc = array[mid];\n    if (compareFunction(lastMidDoc, item) <= 0.0) {\n      // searching too low\n      low = mid + 1;\n    } else {\n      // searching too high\n      high = mid - 1;\n    }\n  }\n  if (compareFunction(lastMidDoc, item) <= 0.0) {\n    mid++;\n  }\n\n  /**\n   * Insert at correct position\n   */\n  array.splice(mid, 0, item);\n  return mid;\n}","import type {\n    ActionName,\n    ActionFunction\n} from '../types/index.js';\n\nimport {\n    doNothing,\n    insertFirst,\n    insertLast,\n    removeFirstItem,\n    removeLastItem,\n    removeFirstInsertLast,\n    removeLastInsertFirst,\n    removeExisting,\n    replaceExisting,\n    alwaysWrong,\n    insertAtSortPosition,\n    removeExistingAndInsertAtSortPosition,\n    runFullQueryAgain,\n    unknownAction,\n    removeFirstInsertFirst,\n    removeLastInsertLast\n} from './action-functions.js';\n\nexport * from './action-functions.js';\n\n/**\n * all actions ordered by performance-cost\n * cheapest first\n * TODO run tests on which is really the fastest\n */\nexport const orderedActionList: ActionName[] = [\n    'doNothing',\n    'insertFirst',\n    'insertLast',\n    'removeFirstItem',\n    'removeLastItem',\n    'removeFirstInsertLast',\n    'removeLastInsertFirst',\n    'removeFirstInsertFirst',\n    'removeLastInsertLast',\n    'removeExisting',\n    'replaceExisting',\n    'alwaysWrong',\n    'insertAtSortPosition',\n    'removeExistingAndInsertAtSortPosition',\n    'runFullQueryAgain',\n    'unknownAction'\n];\n\n\nexport const actionFunctions: {\n    [k in ActionName]: ActionFunction<any>\n} = {\n    doNothing,\n    insertFirst,\n    insertLast,\n    removeFirstItem,\n    removeLastItem,\n    removeFirstInsertLast,\n    removeLastInsertFirst,\n    removeFirstInsertFirst,\n    removeLastInsertLast,\n    removeExisting,\n    replaceExisting,\n    alwaysWrong,\n    insertAtSortPosition,\n    removeExistingAndInsertAtSortPosition,\n    runFullQueryAgain,\n    unknownAction\n};\n","import type { BooleanString } from './types.ts';\n\nexport function booleanStringToBoolean(str: BooleanString): boolean {\n    if (str === '1') {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nexport function booleanToBooleanString(b: boolean): BooleanString {\n    if (b) {\n        return '1';\n    } else {\n        return '0';\n    }\n}\n\nexport function oppositeBoolean(input: BooleanString): BooleanString {\n    if (input === '1') {\n        return '0';\n    } else {\n        return '1';\n    }\n}\n\nexport function lastChar(str: string): string {\n    return str.slice(-1);\n}\n\n/**\n * @link https://stackoverflow.com/a/1349426\n */\nfunction makeid(length: number = 6): string {\n    let result = '';\n    const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    const charactersLength = characters.length;\n    for (let i = 0; i < length; i++) {\n        result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n}\n\nconst nodeIdPrefix = makeid(4);\nlet lastIdGen = 0;\nexport function nextNodeId(): string {\n    const ret = 'node_' + nodeIdPrefix + '_' + lastIdGen;\n    lastIdGen++;\n    return ret;\n}\n\n/**\n * @link https://stackoverflow.com/a/16155417\n */\nexport function decimalToPaddedBinary(\n    decimal: number,\n    padding: number\n) {\n    const binary = (decimal >>> 0).toString(2);\n    const padded = binary.padStart(padding, '0');\n    return padded;\n}\n\nexport function oppositeBinary(i: string): string {\n    if (i === '1') {\n        return '0';\n    } else if (i === '0') {\n        return '1';\n    } else {\n        throw new Error('non-binary given');\n    }\n}\n\nexport function binaryToDecimal(binary: string): number {\n    return parseInt(binary, 2);\n}\n\nexport function minBinaryWithLength(length: number): string {\n    return new Array(length).fill(0).map(() => '0').join('');\n}\n\nexport function maxBinaryWithLength(length: number): string {\n    return new Array(length).fill(0).map(() => '1').join('');\n}\n\nexport function getNextStateSet(\n    stateSet: string\n): string {\n    const decimal = binaryToDecimal(stateSet);\n    const increase = decimal + 1;\n    const binary = decimalToPaddedBinary(increase, stateSet.length);\n    return binary;\n}\n\nexport function firstKeyOfMap(map: Map<string, any>): string {\n    const iterator1 = map.keys();\n    return iterator1.next().value;\n}\n\n/**\n * Shuffles array in place. ES6 version\n * @link https://stackoverflow.com/a/6274381\n */\nexport function shuffleArray<T>(a: T[]): T[] {\n    for (let i = a.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [a[i], a[j]] = [a[j], a[i]];\n    }\n    return a;\n}\n\nexport function lastOfArray<T>(ar: T[]): T {\n    return ar[ar.length - 1];\n}\n\n/**\n * @link https://stackoverflow.com/a/6259536\n */\nexport function splitStringToChunks(str: string, chunkSize: number): string[] {\n    const chunks: string[] = [];\n\n    for (let i = 0, charsLength = str.length; i < charsLength; i += chunkSize) {\n        chunks.push(str.substring(i, i + chunkSize));\n    }\n    return chunks;\n}\n","/*\nlet t = 0;\nwhile (t < 10000) {\n    const char = String.fromCharCode(t);\n    console.log(t + ' : ' + char);\n    t++;\n}\n*/\n\n/*\n\nTo have a really small string representation, we have to hack some stuff\nwhich makes is complicated but effective.\n\nRules for the string:\n- The string starts with a number like '23' that defines how many leaf-nodes we have\n- leaf nodes consist of two chars like 'ab'\n    - the first char is the id\n    - the second the value is a number you can get via String.charCodeAt()\n- Internal nodes have four chars like 'abcd'\n    - the first char is the id\n    - the second char is the id of the 0-branch\n    - the third char is the id of the 1-branch\n    - the last char is the id of the boolean-function (= level)\n- The last 3 chars of the string is the root node like 'abc'\n    - it looks like the internal-node but without the id (first char)\n\n*/\n\n// we use this because 39 is the quotes which causes problems\nexport const CHAR_CODE_OFFSET = 40; // String.fromCharCode(33) === ')'\n\n\nexport function getCharOfLevel(level: number): string {\n    const charCode = CHAR_CODE_OFFSET + level;\n    return String.fromCharCode(charCode);\n}\n\nexport function getNumberOfChar(char: string): number {\n    const charCode = char.charCodeAt(0);\n    return charCode - CHAR_CODE_OFFSET;\n}\n\nexport function getCharOfValue(value: number): string {\n    const charCode = CHAR_CODE_OFFSET + value;\n    return String.fromCharCode(charCode);\n}\n\n\nexport const FIRST_CHAR_CODE_FOR_ID = 97; // String.fromCharCode(97) === 'a'\n\nexport function getNextCharId(lastCode: number): {\n    char: string,\n    nextCode: number\n} {\n\n    // jump these codes because they look strange\n    if (lastCode >= 128 && lastCode <= 160) {\n        lastCode = 161;\n    }\n\n    const char = String.fromCharCode(lastCode);\n    return {\n        char,\n        nextCode: lastCode + 1\n    };\n}\n","import type {\n    MongoQuery,\n    DeepReadonlyObject\n} from './types/index.js';\n\n\nexport function lastOfArray<T>(ar: T[]): T {\n    return ar[ar.length - 1];\n}\n\n/**\n * @link https://stackoverflow.com/a/5915122\n */\nexport function randomOfArray<T>(items: T[]): T {\n    return items[Math.floor(Math.random() * items.length)];\n}\n\nexport function shuffleArray<T>(arr: T[]): T[] {\n    return arr.slice().sort(() => (Math.random() - 0.5));\n}\n\n/**\n * normalizes sort-field\n * in: '-age'\n * out: 'age'\n */\nexport function normalizeSortField(field: string): string {\n    if (field.startsWith('-')) {\n        return field.substr(1);\n    } else {\n        return field;\n    }\n}\n\nexport function getSortFieldsOfQuery(query: MongoQuery): string[] {\n    if (!query.sort) {\n        // if no sort-order is set, use the primary key\n        return ['_id'];\n    }\n    return query.sort.map(maybeArray => {\n        if (Array.isArray(maybeArray)) {\n            return maybeArray[0].map((field: any) => normalizeSortField(field));\n        } else {\n            return normalizeSortField(maybeArray);\n        }\n    });\n}\n\n/**\n *  @link https://stackoverflow.com/a/1431113\n */\nexport function replaceCharAt(str: string, index: number, replacement: string) {\n    return str.substr(0, index) + replacement + str.substr(index + replacement.length);\n}\n\nexport function mapToObject<K, V>(map: Map<K, V>): {\n    [k: string]: V\n} {\n    const ret: any = {};\n    map.forEach(\n        (value: V, key: K) => {\n            ret[key as any] = value;\n        }\n    );\n    return ret;\n}\n\nexport function objectToMap<K, V>(object: {\n    [k: string]: V\n}): Map<K, V> {\n    const ret = new Map();\n    Object.entries(object).forEach(([k, v]) => {\n        ret.set(k, v);\n    });\n    return ret;\n}\n\nexport function cloneMap<K, V>(map: Map<K, V>): Map<K, V> {\n    const ret: any = new Map();\n    map.forEach(\n        (value: V, key: K) => {\n            ret[key as any] = value;\n        }\n    );\n    return ret;\n}\n\n/**\n * does a flat copy on the objects,\n * is about 3 times faster then using deepClone\n * @link https://jsperf.com/object-rest-spread-vs-clone/2\n */\nexport function flatClone<T>(obj: T | DeepReadonlyObject<T>): T {\n    return Object.assign({}, obj) as any;\n}\n\nexport function ensureNotFalsy<T>(obj: T | false | undefined | null): T {\n    if (!obj) {\n        throw new Error('ensureNotFalsy() is falsy');\n    }\n    return obj;\n}\n\nexport function mergeSets<T>(sets: Set<T>[]): Set<T> {\n    let ret: Set<T> = new Set();\n    sets.forEach(set => {\n        ret = new Set([...ret, ...set]);\n    });\n    return ret;\n}\n\n/**\n * @link https://stackoverflow.com/a/12830454/3443137\n */\nexport function roundToTwoDecimals(num: number): number {\n    return parseFloat(num.toFixed(2));\n}\n\n\nexport function isObject(value: null) {\n    const type = typeof value;\n    return value !== null && (type === 'object' || type === 'function');\n}\n\nexport function getProperty(object: any, path: string | string[], value?: any) {\n    if (Array.isArray(path)) {\n        path = path.join('.');\n    }\n\n    if (!isObject(object as any) || typeof path !== 'string') {\n        return value === undefined ? object : value;\n    }\n\n    const pathArray = path.split('.');\n    if (pathArray.length === 0) {\n        return value;\n    }\n\n    for (let index = 0; index < pathArray.length; index++) {\n        const key = pathArray[index];\n\n        if (isStringIndex(object as any, key as any)) {\n            object = index === pathArray.length - 1 ? undefined : null;\n        } else {\n            object = (object as any)[key];\n        }\n\n        if (object === undefined || object === null) {\n            // `object` is either `undefined` or `null` so we want to stop the loop, and\n            // if this is not the last bit of the path, and\n            // if it didn't return `undefined`\n            // it would return `null` if `object` is `null`\n            // but we want `get({foo: null}, 'foo.bar')` to equal `undefined`, or the supplied value, not `null`\n            if (index !== pathArray.length - 1) {\n                return value;\n            }\n\n            break;\n        }\n    }\n\n    return object === undefined ? value : object;\n}\n\nfunction isStringIndex(object: any[], key: string) {\n    if (typeof key !== 'number' && Array.isArray(object)) {\n        const index = Number.parseInt(key, 10);\n        return Number.isInteger(index) && object[index] === object[key as any];\n    }\n\n    return false;\n}\n","import type { StateResolveFunction } from '../types/index.js';\nimport { getProperty, lastOfArray } from '../util.js';\n\nexport const hasLimit: StateResolveFunction<any> = (input) => {\n    return !!input.queryParams.limit;\n};\n\nexport const isFindOne: StateResolveFunction<any> = (input) => {\n    return input.queryParams.limit === 1;\n};\n\nexport const hasSkip: StateResolveFunction<any> = (input) => {\n    if (input.queryParams.skip && input.queryParams.skip > 0) {\n        return true;\n    } else {\n        return false;\n    }\n};\n\nexport const isDelete: StateResolveFunction<any> = (input) => {\n    return input.changeEvent.operation === 'DELETE';\n};\n\nexport const isInsert: StateResolveFunction<any> = (input) => {\n    return input.changeEvent.operation === 'INSERT';\n};\n\nexport const isUpdate: StateResolveFunction<any> = (input) => {\n    return input.changeEvent.operation === 'UPDATE';\n};\n\n\nexport const wasLimitReached: StateResolveFunction<any> = (input) => {\n    return hasLimit(input) && input.previousResults.length >= (input.queryParams.limit as number);\n};\n\nexport const sortParamsChanged: StateResolveFunction<any> = (input) => {\n    const sortFields = input.queryParams.sortFields;\n    const prev = input.changeEvent.previous;\n    const doc = input.changeEvent.doc;\n    if (!doc) {\n        return false;\n    }\n    if (!prev) {\n        return true;\n    }\n\n    for (let i = 0; i < sortFields.length; i++) {\n        const field = sortFields[i];\n        const beforeData = getProperty(prev, field);\n        const afterData = getProperty(doc, field);\n        if (beforeData !== afterData) {\n            return true;\n        }\n    }\n    return false;\n};\n\nexport const wasInResult: StateResolveFunction<any> = (input) => {\n    const id = input.changeEvent.id;\n    if (input.keyDocumentMap) {\n        const has = input.keyDocumentMap.has(id);\n        return has;\n    } else {\n        const primary = input.queryParams.primaryKey;\n        const results = input.previousResults;\n        for (let i = 0; i < results.length; i++) {\n            const item = results[i];\n            if (item[primary] === id) {\n                return true;\n            }\n        }\n        return false;\n    }\n};\n\nexport const wasFirst: StateResolveFunction<any> = (input) => {\n    const first = input.previousResults[0];\n    if (first && first[input.queryParams.primaryKey] === input.changeEvent.id) {\n        return true;\n    } else {\n        return false;\n    }\n};\n\nexport const wasLast: StateResolveFunction<any> = (input) => {\n    const last = lastOfArray(input.previousResults);\n    if (last && last[input.queryParams.primaryKey] === input.changeEvent.id) {\n        return true;\n    } else {\n        return false;\n    }\n};\n\n\nexport const wasSortedBeforeFirst: StateResolveFunction<any> = (input) => {\n    const prev = input.changeEvent.previous;\n    if (!prev) {\n        return false;\n    }\n\n    const first = input.previousResults[0];\n    if (!first) {\n        return false;\n    }\n\n    /**\n     * If the changed document is the same as the first,\n     * we cannot sort-compare them, because it might end in a non-deterministic\n     * sort order. Because both document could be equal.\n     * So instead we have to return true.\n     */\n    if (first[input.queryParams.primaryKey] === input.changeEvent.id) {\n        return true;\n    }\n\n    const comp = input.queryParams.sortComparator(\n        prev,\n        first\n    );\n    return comp < 0;\n};\n\nexport const wasSortedAfterLast: StateResolveFunction<any> = (input) => {\n    const prev = input.changeEvent.previous;\n    if (!prev) {\n        return false;\n    }\n\n    const last = lastOfArray(input.previousResults);\n    if (!last) {\n        return false;\n    }\n\n    if (last[input.queryParams.primaryKey] === input.changeEvent.id) {\n        return true;\n    }\n\n    const comp = input.queryParams.sortComparator(\n        prev,\n        last\n    );\n    return comp > 0;\n};\n\nexport const isSortedBeforeFirst: StateResolveFunction<any> = (input) => {\n    const doc = input.changeEvent.doc;\n    if (!doc) {\n        return false;\n    }\n\n    const first = input.previousResults[0];\n    if (!first) {\n        return false;\n    }\n\n    if (first[input.queryParams.primaryKey] === input.changeEvent.id) {\n        return true;\n    }\n\n    const comp = input.queryParams.sortComparator(\n        doc,\n        first\n    );\n    return comp < 0;\n};\n\nexport const isSortedAfterLast: StateResolveFunction<any> = (input) => {\n    const doc = input.changeEvent.doc;\n    if (!doc) {\n        return false;\n    }\n\n    const last = lastOfArray(input.previousResults);\n    if (!last) {\n        return false;\n    }\n\n    if (last[input.queryParams.primaryKey] === input.changeEvent.id) {\n        return true;\n    }\n\n    const comp = input.queryParams.sortComparator(\n        doc,\n        last\n    );\n    return comp > 0;\n};\n\n\nexport const wasMatching: StateResolveFunction<any> = (input) => {\n    const prev = input.changeEvent.previous;\n    if (!prev) {\n        return false;\n    }\n    return input.queryParams.queryMatcher(\n        prev\n    );\n};\n\nexport const doesMatchNow: StateResolveFunction<any> = (input) => {\n    const doc = input.changeEvent.doc;\n    if (!doc) {\n        return false;\n    }\n    const ret = input.queryParams.queryMatcher(\n        doc\n    );\n    return ret;\n};\n\n\nexport const wasResultsEmpty: StateResolveFunction<any> = (input) => {\n    return input.previousResults.length === 0;\n};\n","import { ResolverFunctions } from 'binary-decision-diagram';\n\nimport type {\n    StateName,\n    StateResolveFunction,\n    StateSet,\n    StateResolveFunctionInput\n} from '../types/index.js';\n\nimport {\n    hasLimit,\n    isFindOne,\n    hasSkip,\n    wasResultsEmpty,\n    isDelete,\n    isInsert,\n    isUpdate,\n    wasLimitReached,\n    sortParamsChanged,\n    wasInResult,\n    wasFirst,\n    wasLast,\n    wasSortedBeforeFirst,\n    wasSortedAfterLast,\n    isSortedBeforeFirst,\n    isSortedAfterLast,\n    wasMatching,\n    doesMatchNow\n} from './state-resolver.js';\n\nexport * from './state-resolver.js';\n\n/**\n * all states ordered by performance-cost\n * cheapest first\n * TODO run tests on which is really the fastest\n */\nexport const orderedStateList: StateName[] = [\n    'isInsert',\n    'isUpdate',\n    'isDelete',\n    'hasLimit',\n    'isFindOne',\n    'hasSkip',\n    'wasResultsEmpty',\n    'wasLimitReached',\n    'wasFirst',\n    'wasLast',\n    'sortParamsChanged',\n    'wasInResult',\n    'wasSortedBeforeFirst',\n    'wasSortedAfterLast',\n    'isSortedBeforeFirst',\n    'isSortedAfterLast',\n    'wasMatching',\n    'doesMatchNow'\n];\n\nexport const stateResolveFunctions: {\n    readonly [k in StateName]: StateResolveFunction<any>\n} = {\n    isInsert,\n    isUpdate,\n    isDelete,\n    hasLimit,\n    isFindOne,\n    hasSkip,\n    wasResultsEmpty,\n    wasLimitReached,\n    wasFirst,\n    wasLast,\n    sortParamsChanged,\n    wasInResult,\n    wasSortedBeforeFirst,\n    wasSortedAfterLast,\n    isSortedBeforeFirst,\n    isSortedAfterLast,\n    wasMatching,\n    doesMatchNow\n};\n\nexport const stateResolveFunctionByIndex: ResolverFunctions<\n    StateResolveFunctionInput<any>\n> = {\n    0: isInsert,\n    1: isUpdate,\n    2: isDelete,\n    3: hasLimit,\n    4: isFindOne,\n    5: hasSkip,\n    6: wasResultsEmpty,\n    7: wasLimitReached,\n    8: wasFirst,\n    9: wasLast,\n    10: sortParamsChanged,\n    11: wasInResult,\n    12: wasSortedBeforeFirst,\n    13: wasSortedAfterLast,\n    14: isSortedBeforeFirst,\n    15: isSortedAfterLast,\n    16: wasMatching,\n    17: doesMatchNow\n};\n\nexport function resolveState<DocType>(\n    stateName: StateName,\n    input: StateResolveFunctionInput<DocType>\n): boolean {\n    const fn: StateResolveFunction<DocType> = stateResolveFunctions[stateName];\n    if (!fn) {\n        throw new Error('resolveState() has no function for ' + stateName);\n    }\n    return fn(input);\n}\n\nexport function getStateSet<DocType>(\n    input: StateResolveFunctionInput<DocType>\n): StateSet {\n    let set: StateSet = '';\n    for (let i = 0; i < orderedStateList.length; i++) {\n        const name: StateName = orderedStateList[i];\n        const value = resolveState(name, input);\n        const add = value ? '1' : '0';\n        set += add;\n    }\n    return set;\n}\n\nexport function logStateSet(stateSet: StateSet) {\n    orderedStateList.forEach((state, index) => {\n        console.log('state: ' + state + ' : ' + stateSet[index]);\n    });\n}\n","import {\n    SimpleBdd,\n    minimalStringToSimpleBdd,\n    resolveWithSimpleBdd\n} from 'binary-decision-diagram';\nimport type { StateResolveFunctionInput } from '../types/index.js';\nimport { stateResolveFunctionByIndex } from '../states/index.js';\n\nexport const minimalBddString = '14a1b,c+d2e5f0g/h.i4j*k-l)m(n6oeh6pnm6qen6ril6snh6tin6ubo9vce9wmh9xns9yne9zmi9{cm9|ad9}cp9~aq9ae9¡bf9¢bq9£cg9¤ck9¥cn9¦nd9§np9¨nq9©nf9ªng9«nm9¬nk9­mr9®ms9¯mt9°mj9±mk9²ml9³mn9´mc8µ³{8¶¯}8·°¤8¸³§8¹mn8º³«8»³m8¼m´4½z²4¾³w4¿zµ4À¯¶4Á°·4Â³º4Ã³¸4Äm¹4Åv¤7Æyn7ÇÀÁ7È~7É¥¤7ÊÃÄ7Ë¨n7Ìº¹7Í­°7Î®m7Ï¯°7Ð±m7Ñ³m7Ò¼m5ÓÄm5Ô¹m5Õ½°5Ö¾m5×¿°5ØÇÏ5ÙÂm5ÚÊÑ5Û±m5Üºm5ÝÌÑ5ÞÕÍ2ß|2à¡u2á£Å2âÖÎ2ã¦Æ2ä©x2åªÆ2æ×Ø2ç|È2è¡¢2é£É2ê¤¥2ëÙÚ2ì¦Ë2í©n2îªn2ïÛÐ2ðÜÝ2ñ¬n2òÒÓ/óan/ôbn/õcn/öÞâ/÷ßã/øàä/ùáå/úæë/ûçì/üèí/ýéî/þÍÎ/ÿÏÑ/ĀòÔ,ācn,Ăöï,ă¤ñ,Ąúð,ąêñ,ĆþÐ,ćÿÑ,Ĉac0ĉbc0Ċóõ0ċôā0Čßá0čà¤0Ďçé0ďèê0Đ÷ù0đøă0Ēûý0ēüą0ĔmÒ-ĕmĀ-ĖÞæ-ėČĎ-Ęčď-ęĂĄ-ĚĐĒ-ěđē-Ĝ²»-ĝÍÏ-ĞĆć-ğ²³-ĠĔĈ3ġĕĊ3ĢĖė3ģęĚ3ĤĢĝ(ĥĜğ(ĦģĞ(ħĠġ+Ĩĉċ+ĩĤĦ+ĪĘě+īħĨ1ĬĩĪ1ĭĬī*Įĥm*ĭĮ.';\n\nlet simpleBdd: SimpleBdd | undefined;\nexport function getSimpleBdd() {\n    if (!simpleBdd) {\n        simpleBdd = minimalStringToSimpleBdd(minimalBddString);\n    }\n    return simpleBdd;\n}\n\nexport const resolveInput = (input: StateResolveFunctionInput<any>) => {\n    return resolveWithSimpleBdd(\n        getSimpleBdd(),\n        stateResolveFunctionByIndex,\n        input\n    );\n};\n","import {\n    SimpleBdd,\n    SimpleBddLeafNode\n} from '../types.js';\nimport { splitStringToChunks } from '../util.js';\nimport { getNumberOfChar } from './string-format.js';\n\nexport function minimalStringToSimpleBdd(\n    str: string\n): SimpleBdd {\n    const nodesById: Map<string, SimpleBdd | SimpleBddLeafNode> = new Map();\n\n    // parse leaf nodes\n    const leafNodeAmount = parseInt(str.charAt(0) + str.charAt(1), 10);\n    const lastLeafNodeChar = (2 + leafNodeAmount * 2);\n    const leafNodeChars = str.substring(2, lastLeafNodeChar);\n    const leafNodeChunks = splitStringToChunks(leafNodeChars, 2);\n    for (let i = 0; i < leafNodeChunks.length; i++) {\n        const chunk = leafNodeChunks[i];\n        const id = chunk.charAt(0);\n        const value: SimpleBddLeafNode = getNumberOfChar(chunk.charAt(1));\n        nodesById.set(id, value);\n    }\n\n    // parse internal nodes\n    const internalNodeChars = str.substring(lastLeafNodeChar, str.length - 3);\n    const internalNodeChunks = splitStringToChunks(internalNodeChars, 4);\n    for (let i = 0; i < internalNodeChunks.length; i++) {\n        const chunk = internalNodeChunks[i];\n        const id = chunk.charAt(0);\n        const idOf0Branch = chunk.charAt(1);\n        const idOf1Branch = chunk.charAt(2);\n        const level = getNumberOfChar(chunk.charAt(3));\n\n\n        if (!nodesById.has(idOf0Branch)) {\n            throw new Error('missing node with id ' + idOf0Branch);\n        }\n        if (!nodesById.has(idOf1Branch)) {\n            throw new Error('missing node with id ' + idOf1Branch);\n        }\n\n        const node0 = nodesById.get(idOf0Branch) as SimpleBdd;\n        const node1 = nodesById.get(idOf1Branch) as SimpleBdd;\n        const node: SimpleBdd = {\n            l: level, // level is first for prettier json output\n            0: node0,\n            1: node1\n        };\n        nodesById.set(id, node);\n    }\n\n    // parse root node\n    const last3 = str.slice(-3);\n    const idOf0 = last3.charAt(0);\n    const idOf1 = last3.charAt(1);\n    const levelOfRoot = getNumberOfChar(last3.charAt(2));\n    const nodeOf0 = nodesById.get(idOf0) as SimpleBdd;\n    const nodeOf1 = nodesById.get(idOf1) as SimpleBdd;\n    const rootNode: SimpleBdd = {\n        l: levelOfRoot,\n        0: nodeOf0,\n        1: nodeOf1,\n    };\n\n    return rootNode;\n}\n","import {\n    SimpleBdd,\n    ResolverFunctions,\n    SimpleBddLeafNode\n} from '../types.js';\nimport { booleanToBooleanString } from '../util.js';\n\nexport function resolveWithSimpleBdd(\n    simpleBdd: SimpleBdd,\n    fns: ResolverFunctions,\n    input: any\n): number {\n    let currentNode: SimpleBdd | SimpleBddLeafNode = simpleBdd;\n    let currentLevel: number = simpleBdd.l;\n    while (true) {\n        const booleanResult = fns[currentLevel](input);\n        const branchKey = booleanToBooleanString(booleanResult);\n        currentNode = currentNode[branchKey];\n        if (typeof currentNode === 'number' || typeof currentNode === 'string') {\n            return currentNode as any;\n        } else {\n            currentLevel = currentNode.l;\n        }\n    }\n}\n","import type {\n    ChangeEvent,\n    ActionName,\n    ResultKeyDocumentMap,\n    QueryParams,\n    StateSetToActionMap,\n    StateSet,\n    ActionFunction,\n    StateResolveFunctionInput\n} from './types/index.js';\nimport { getStateSet } from './states/index.js';\nimport { actionFunctions, orderedActionList } from './actions/index.js';\nimport { resolveInput } from './bdd/bdd.generated.js';\n\n/**\n * Export as type to ensure we do not\n * end with an import statement in the build output\n * which would increase the build size.\n */\nexport type {\n    ActionFunction,\n    ActionFunctionInput,\n    ActionName,\n    ChangeEvent,\n    ChangeEventBase,\n    ChangeEventDelete,\n    ChangeEventInsert,\n    ChangeEventUpdate,\n    MongoQuery,\n    QueryMatcher,\n    QueryParams,\n    ResultKeyDocumentMap,\n    DeterministicSortComparator,\n    StateName,\n    StateResolveFunction,\n    StateResolveFunctionInput,\n    StateSet,\n    StateSetToActionMap,\n    WriteOperation\n} from './types/index.js';\n\nexport * from './states/index.js';\nexport * from './util.js';\nexport * from './actions/index.js';\n\nexport function calculateActionFromMap<DocType>(\n    stateSetToActionMap: StateSetToActionMap,\n    input: StateResolveFunctionInput<DocType>\n): {\n    action: ActionName,\n    stateSet: StateSet\n} {\n    const stateSet: StateSet = getStateSet(input);\n    const actionName = stateSetToActionMap.get(stateSet);\n    if (!actionName) {\n        return {\n            action: 'runFullQueryAgain',\n            stateSet\n        };\n    } else {\n        return {\n            action: actionName,\n            stateSet\n        };\n    }\n}\n\nexport function calculateActionName<DocType>(\n    input: StateResolveFunctionInput<DocType>\n): ActionName {\n    const resolvedActionId = resolveInput(\n        input\n    );\n    return orderedActionList[resolvedActionId];\n}\n\nexport function calculateActionFunction<DocType>(\n    input: StateResolveFunctionInput<DocType>\n): ActionFunction<DocType> {\n    const actionName = calculateActionName(input);\n    return actionFunctions[actionName];\n}\n\n/**\n * for performance reasons,\n * @mutates the input\n * @returns the new results\n */\nexport function runAction<DocType>(\n    action: ActionName,\n    queryParams: QueryParams<DocType>,\n    changeEvent: ChangeEvent<DocType>,\n    previousResults: DocType[],\n    keyDocumentMap?: ResultKeyDocumentMap<DocType>\n): DocType[] {\n    const fn: ActionFunction<DocType> = actionFunctions[action];\n    fn({\n        queryParams,\n        changeEvent,\n        previousResults,\n        keyDocumentMap\n    });\n    return previousResults;\n}\n","import { countUntilNotMatching } from './plugins/utils/index.ts';\nimport { newRxError } from './rx-error.ts';\nimport { getSchemaByObjectPath } from './rx-schema-helper.ts';\nimport type {\n    FilledMangoQuery,\n    MangoQuerySelector,\n    RxDocumentData,\n    RxJsonSchema,\n    RxQueryPlan,\n    RxQueryPlanKey,\n    RxQueryPlanerOpts\n} from './types/index.d.ts';\n\nexport const INDEX_MAX = String.fromCharCode(65535);\n\n/**\n * Do not use -Infinity here because it would be\n * transformed to null on JSON.stringify() which can break things\n * when the query plan is send to the storage as json.\n * @link https://stackoverflow.com/a/16644751\n * Notice that for IndexedDB IDBKeyRange we have\n * to transform the value back to -Infinity\n * before we can use it in IDBKeyRange.bound.\n */\nexport const INDEX_MIN = Number.MIN_SAFE_INTEGER;\n\n/**\n * Returns the query plan which contains\n * information about how to run the query\n * and which indexes to use.\n *\n * This is used in some storage like Memory, dexie.js and IndexedDB.\n */\nexport function getQueryPlan<RxDocType>(\n    schema: RxJsonSchema<RxDocumentData<RxDocType>>,\n    query: FilledMangoQuery<RxDocType>\n): RxQueryPlan {\n    const selector = query.selector;\n\n    let indexes: string[][] = schema.indexes ? schema.indexes.slice(0) as any : [];\n    if (query.index) {\n        indexes = [query.index];\n    }\n\n    /**\n     * Most storages do not support descending indexes\n     * so having a 'desc' in the sorting, means we always have to re-sort the results.\n     */\n    const hasDescSorting = !!query.sort.find(sortField => Object.values(sortField)[0] === 'desc');\n\n    /**\n     * Some fields can be part of the selector while not being relevant for sorting\n     * because their selector operators specify that in all cases all matching docs\n     * would have the same value.\n     * For example the boolean field _deleted.\n     * TODO similar thing could be done for enums.\n     */\n    const sortIrrelevevantFields = new Set();\n    Object.keys(selector).forEach(fieldName => {\n        const schemaPart = getSchemaByObjectPath(schema, fieldName);\n        if (\n            schemaPart &&\n            schemaPart.type === 'boolean' &&\n            Object.prototype.hasOwnProperty.call((selector as any)[fieldName], '$eq')\n        ) {\n            sortIrrelevevantFields.add(fieldName);\n        }\n    });\n\n\n    const optimalSortIndex = query.sort.map(sortField => Object.keys(sortField)[0]);\n    const optimalSortIndexCompareString = optimalSortIndex\n        .filter(f => !sortIrrelevevantFields.has(f))\n        .join(',');\n\n    let currentBestQuality = -1;\n    let currentBestQueryPlan: RxQueryPlan | undefined;\n\n    /**\n     * Calculate one query plan for each index\n     * and then test which of the plans is best.\n     */\n    indexes.forEach((index) => {\n        let inclusiveEnd = true;\n        let inclusiveStart = true;\n        const opts: RxQueryPlanerOpts[] = index.map(indexField => {\n            const matcher = (selector as any)[indexField];\n            const operators = matcher ? Object.keys(matcher) : [];\n\n            let matcherOpts: RxQueryPlanerOpts = {} as any;\n            if (\n                !matcher ||\n                !operators.length\n            ) {\n                const startKey = inclusiveStart ? INDEX_MIN : INDEX_MAX;\n                matcherOpts = {\n                    startKey,\n                    endKey: inclusiveEnd ? INDEX_MAX : INDEX_MIN,\n                    inclusiveStart: true,\n                    inclusiveEnd: true\n                };\n            } else {\n                operators.forEach(operator => {\n                    if (LOGICAL_OPERATORS.has(operator)) {\n                        const operatorValue = matcher[operator];\n                        const partialOpts = getMatcherQueryOpts(operator, operatorValue);\n                        matcherOpts = Object.assign(matcherOpts, partialOpts);\n                    }\n                });\n            }\n\n            // fill missing attributes\n            if (typeof matcherOpts.startKey === 'undefined') {\n                matcherOpts.startKey = INDEX_MIN;\n            }\n            if (typeof matcherOpts.endKey === 'undefined') {\n                matcherOpts.endKey = INDEX_MAX;\n            }\n            if (typeof matcherOpts.inclusiveStart === 'undefined') {\n                matcherOpts.inclusiveStart = true;\n            }\n            if (typeof matcherOpts.inclusiveEnd === 'undefined') {\n                matcherOpts.inclusiveEnd = true;\n            }\n\n            if (inclusiveStart && !matcherOpts.inclusiveStart) {\n                inclusiveStart = false;\n            }\n            if (inclusiveEnd && !matcherOpts.inclusiveEnd) {\n                inclusiveEnd = false;\n            }\n\n            return matcherOpts;\n        });\n\n\n        const startKeys = opts.map(opt => opt.startKey);\n        const endKeys = opts.map(opt => opt.endKey);\n        const queryPlan: RxQueryPlan = {\n            index,\n            startKeys,\n            endKeys,\n            inclusiveEnd,\n            inclusiveStart,\n            sortSatisfiedByIndex: !hasDescSorting && optimalSortIndexCompareString === index.filter(f => !sortIrrelevevantFields.has(f)).join(','),\n            selectorSatisfiedByIndex: isSelectorSatisfiedByIndex(index, query.selector, startKeys, endKeys)\n        };\n        const quality = rateQueryPlan(\n            schema,\n            query,\n            queryPlan\n        );\n        if (\n            (\n                quality >= currentBestQuality\n            ) ||\n            query.index\n        ) {\n            currentBestQuality = quality;\n            currentBestQueryPlan = queryPlan;\n        }\n    });\n\n    /**\n     * In all cases and index must be found\n     */\n    if (!currentBestQueryPlan) {\n        throw newRxError('SNH', {\n            query\n        });\n    }\n\n    return currentBestQueryPlan;\n}\n\nexport const LOGICAL_OPERATORS = new Set(['$eq', '$gt', '$gte', '$lt', '$lte']);\nexport const LOWER_BOUND_LOGICAL_OPERATORS = new Set(['$eq', '$gt', '$gte']);\nexport const UPPER_BOUND_LOGICAL_OPERATORS = new Set(['$eq', '$lt', '$lte']);\n\n\nexport function isSelectorSatisfiedByIndex(\n    index: string[],\n    selector: MangoQuerySelector<any>,\n    startKeys: RxQueryPlanKey[],\n    endKeys: RxQueryPlanKey[]\n): boolean {\n\n\n    /**\n     * Not satisfied if one or more operators are non-logical\n     * operators that can never be satisfied by an index.\n     */\n    const selectorEntries = Object.entries(selector);\n    const hasNonMatchingOperator = selectorEntries\n        .find(([fieldName, operation]) => {\n            if (!index.includes(fieldName)) {\n                return true;\n            }\n            const hasNonLogicOperator = Object.entries(operation as any)\n                .find(([op, _value]) => !LOGICAL_OPERATORS.has(op));\n            return hasNonLogicOperator;\n        });\n\n    if (hasNonMatchingOperator) {\n        return false;\n    }\n\n    /**\n     * Not satisfied if contains $and or $or operations.\n     */\n    if (selector.$and || selector.$or) {\n        return false;\n    }\n\n\n\n    // ensure all lower bound in index\n    const satisfieldLowerBound: string[] = [];\n    const lowerOperatorFieldNames = new Set<string>();\n    for (const [fieldName, operation] of Object.entries(selector)) {\n        if (!index.includes(fieldName)) {\n            return false;\n        }\n\n        // If more then one logic op on the same field, we have to selector-match.\n        const lowerLogicOps = Object.keys(operation as any).filter(key => LOWER_BOUND_LOGICAL_OPERATORS.has(key));\n        if (lowerLogicOps.length > 1) {\n            return false;\n        }\n\n        const hasLowerLogicOp = lowerLogicOps[0];\n        if (hasLowerLogicOp) {\n            lowerOperatorFieldNames.add(fieldName);\n        }\n        if (hasLowerLogicOp !== '$eq') {\n            if (satisfieldLowerBound.length > 0) {\n                return false;\n            } else {\n                satisfieldLowerBound.push(hasLowerLogicOp);\n            }\n        }\n    }\n\n    // ensure all upper bound in index\n    const satisfieldUpperBound: string[] = [];\n    const upperOperatorFieldNames = new Set<string>();\n    for (const [fieldName, operation] of Object.entries(selector)) {\n        if (!index.includes(fieldName)) {\n            return false;\n        }\n\n        // If more then one logic op on the same field, we have to selector-match.\n        const upperLogicOps = Object.keys(operation as any).filter(key => UPPER_BOUND_LOGICAL_OPERATORS.has(key));\n        if (upperLogicOps.length > 1) {\n            return false;\n        }\n\n        const hasUperLogicOp = upperLogicOps[0];\n        if (hasUperLogicOp) {\n            upperOperatorFieldNames.add(fieldName);\n        }\n        if (hasUperLogicOp !== '$eq') {\n            if (satisfieldUpperBound.length > 0) {\n                return false;\n            } else {\n                satisfieldUpperBound.push(hasUperLogicOp);\n            }\n        }\n    }\n\n\n    /**\n     * If the index contains a non-relevant field between\n     * the relevant fields, then the index is not satisfying.\n     */\n    let i = 0;\n    for (const fieldName of index) {\n        for (const set of [\n            lowerOperatorFieldNames,\n            upperOperatorFieldNames\n        ]) {\n            if (\n                !set.has(fieldName) &&\n                set.size > 0\n            ) {\n                return false;\n            }\n            set.delete(fieldName);\n        }\n\n        const startKey = startKeys[i];\n        const endKey = endKeys[i];\n\n        if (\n            startKey !== endKey && (\n                lowerOperatorFieldNames.size > 0 &&\n                upperOperatorFieldNames.size > 0\n            )\n        ) {\n            return false;\n        }\n\n        i++;\n    }\n\n    return true;\n}\n\nexport function getMatcherQueryOpts(\n    operator: string,\n    operatorValue: any\n): Partial<RxQueryPlanerOpts> {\n    switch (operator) {\n        case '$eq':\n            return {\n                startKey: operatorValue,\n                endKey: operatorValue,\n                inclusiveEnd: true,\n                inclusiveStart: true\n            };\n        case '$lte':\n            return {\n                endKey: operatorValue,\n                inclusiveEnd: true\n            };\n        case '$gte':\n            return {\n                startKey: operatorValue,\n                inclusiveStart: true\n            };\n        case '$lt':\n            return {\n                endKey: operatorValue,\n                inclusiveEnd: false\n            };\n        case '$gt':\n            return {\n                startKey: operatorValue,\n                inclusiveStart: false\n            };\n        default:\n            throw new Error('SNH');\n    }\n}\n\n\n/**\n * Returns a number that determines the quality of the query plan.\n * Higher number means better query plan.\n */\nexport function rateQueryPlan<RxDocType>(\n    schema: RxJsonSchema<RxDocumentData<RxDocType>>,\n    query: FilledMangoQuery<RxDocType>,\n    queryPlan: RxQueryPlan\n): number {\n    let quality: number = 0;\n    const addQuality = (value: number) => {\n        if (value > 0) {\n            quality = quality + value;\n        }\n    };\n\n    const pointsPerMatchingKey = 10;\n\n    const nonMinKeyCount = countUntilNotMatching(queryPlan.startKeys, keyValue => keyValue !== INDEX_MIN && keyValue !== INDEX_MAX);\n    addQuality(nonMinKeyCount * pointsPerMatchingKey);\n\n    const nonMaxKeyCount = countUntilNotMatching(queryPlan.startKeys, keyValue => keyValue !== INDEX_MAX && keyValue !== INDEX_MIN);\n    addQuality(nonMaxKeyCount * pointsPerMatchingKey);\n\n    const equalKeyCount = countUntilNotMatching(queryPlan.startKeys, (keyValue, idx) => {\n        if (keyValue === queryPlan.endKeys[idx]) {\n            return true;\n        } else {\n            return false;\n        }\n    });\n    addQuality(equalKeyCount * pointsPerMatchingKey * 1.5);\n\n    const pointsIfNoReSortMustBeDone = queryPlan.sortSatisfiedByIndex ? 5 : 0;\n    addQuality(pointsIfNoReSortMustBeDone);\n\n    return quality;\n}\n","/** Represents an error reported by the mingo library. */\nexport class MingoError extends Error {\n}\n","/**\n * Utility constants and functions\n */\nimport { MingoError } from \"./types\";\nexport const MAX_INT = 2147483647;\nexport const MIN_INT = -2147483648;\nexport const MAX_LONG = Number.MAX_SAFE_INTEGER;\nexport const MIN_LONG = Number.MIN_SAFE_INTEGER;\n// special value to identify missing items. treated differently from undefined\nconst MISSING = Symbol(\"missing\");\nconst CYCLE_FOUND_ERROR = Object.freeze(new Error(\"mingo: cycle detected while processing object/array\"));\nconst ARRAY_PROTO = Object.getPrototypeOf([]);\nconst OBJECT_PROTO = Object.getPrototypeOf({});\nconst OBJECT_TAG = \"[object Object]\";\nconst OBJECT_TYPE_RE = /^\\[object ([a-zA-Z0-9]+)\\]$/;\nclass Null {\n}\nclass Undefined {\n}\nconst getConstructor = (v) => {\n    if (v === null)\n        return Null;\n    if (v === undefined)\n        return Undefined;\n    return v.constructor;\n};\n/**\n * Uses the simple hash method as described in Effective Java.\n * @see https://stackoverflow.com/a/113600/1370481\n * @param value The value to hash\n * @returns {number}\n */\nconst DEFAULT_HASH_FUNCTION = (value) => {\n    const s = stringify(value);\n    let hash = 0;\n    let i = s.length;\n    while (i)\n        hash = ((hash << 5) - hash) ^ s.charCodeAt(--i);\n    return hash >>> 0;\n};\n// no array, object, or function types\nconst JS_SIMPLE_TYPES = new Set([\n    \"null\",\n    \"undefined\",\n    \"boolean\",\n    \"number\",\n    \"string\",\n    \"date\",\n    \"regexp\"\n]);\nconst IMMUTABLE_TYPES_SET = new Set([Undefined, Null, Boolean, String, Number]);\n/** Convert simple value to string representation. */\nconst toString = (v) => v.toString(); // eslint-disable-line @typescript-eslint/no-base-to-string\n/** Convert a typed array to string representation. */\nconst typedArrayToString = (v) => `${getConstructor(v).name}[${v.toString()}]`; // eslint-disable-line @typescript-eslint/no-base-to-string\n/** Map of constructors to string converter functions */\nconst STRING_CONVERTERS = new Map([\n    [Number, toString],\n    [Boolean, toString],\n    [RegExp, toString],\n    [Function, toString],\n    [Symbol, toString],\n    [Date, (d) => d.toISOString()],\n    [String, JSON.stringify],\n    [Null, (_) => \"null\"],\n    [Undefined, (_) => \"undefined\"],\n    [Int8Array, typedArrayToString],\n    [Uint8Array, typedArrayToString],\n    [Uint8ClampedArray, typedArrayToString],\n    [Int16Array, typedArrayToString],\n    [Uint16Array, typedArrayToString],\n    [Int32Array, typedArrayToString],\n    [Uint32Array, typedArrayToString],\n    [Float32Array, typedArrayToString],\n    [Float64Array, typedArrayToString]\n]);\n/**\n * Some types like BigInt are not available on more exotic\n * JavaScript runtimes like ReactNative or QuickJS.\n * So we fill them in only if they exist so that it does not throw an error.\n */\nif (typeof BigInt !== \"undefined\") {\n    STRING_CONVERTERS.set(BigInt, (n) => \"0x\" + n.toString(16));\n}\nif (typeof BigInt64Array !== \"undefined\") {\n    STRING_CONVERTERS.set(BigInt64Array, typedArrayToString);\n}\nif (typeof BigUint64Array !== \"undefined\") {\n    STRING_CONVERTERS.set(BigUint64Array, typedArrayToString);\n}\n/** MongoDB sort comparison order. https://www.mongodb.com/docs/manual/reference/bson-type-comparison-order */\nconst SORT_ORDER_BY_TYPE = {\n    null: 0,\n    undefined: 0,\n    number: 1,\n    string: 2,\n    object: 3,\n    array: 4,\n    boolean: 5,\n    date: 6,\n    regexp: 7,\n    function: 8\n};\n/**\n * Compare function which adheres to MongoDB comparison order.\n *\n * @param a The first value\n * @param b The second value\n * @returns {Number}\n */\nexport const compare = (a, b) => {\n    if (a === MISSING)\n        a = undefined;\n    if (b === MISSING)\n        b = undefined;\n    const [u, v] = [a, b].map(n => SORT_ORDER_BY_TYPE[getType(n).toLowerCase()]);\n    if (u !== v)\n        return u - v;\n    // number | string | date\n    if (u === 1 || u === 2 || u === 6) {\n        if (a < b)\n            return -1;\n        if (a > b)\n            return 1;\n        return 0;\n    }\n    // check for equivalence equality\n    if (isEqual(a, b))\n        return 0;\n    if (a < b)\n        return -1;\n    if (a > b)\n        return 1;\n    // if we get here we are comparing a type that does not make sense.\n    return 0;\n};\nexport function assert(condition, message) {\n    if (!condition)\n        throw new MingoError(message);\n}\nconst isTypedArray = (v) => {\n    const proto = Object.getPrototypeOf(getConstructor(v));\n    return proto && proto.name === \"TypedArray\";\n};\n/**\n * Deep clone an object. Value types and immutable objects are returned as is.\n */\nexport const cloneDeep = (obj) => {\n    if (IMMUTABLE_TYPES_SET.has(getConstructor(obj)))\n        return obj;\n    const cycle = new Set();\n    const clone = (val) => {\n        if (cycle.has(val))\n            throw CYCLE_FOUND_ERROR;\n        const ctor = getConstructor(val);\n        if (IMMUTABLE_TYPES_SET.has(ctor))\n            return val;\n        try {\n            // arrays\n            if (isArray(val)) {\n                cycle.add(val);\n                return val.map(clone);\n            }\n            // object literals\n            if (isObject(val)) {\n                cycle.add(val);\n                const res = {};\n                for (const k in val)\n                    res[k] = clone(val[k]);\n                return res;\n            }\n        }\n        finally {\n            cycle.delete(val);\n        }\n        // dates, regex, typed arrays\n        if (ctor === Date || ctor === RegExp || isTypedArray(val)) {\n            return new ctor(val);\n        }\n        return val;\n    };\n    return clone(obj);\n};\n/**\n * Returns the name of type as specified in the tag returned by a call to Object.prototype.toString\n * @param v A value\n */\nexport const getType = (v) => OBJECT_TYPE_RE.exec(Object.prototype.toString.call(v))[1];\nexport const isBoolean = (v) => typeof v === \"boolean\";\nexport const isString = (v) => typeof v === \"string\";\nexport const isSymbol = (v) => typeof v === \"symbol\";\nexport const isNumber = (v) => !isNaN(v) && typeof v === \"number\";\nexport const isBigInt = (v) => !isNaN(v) && typeof v === \"bigint\";\nexport const isNotNaN = (v) => !(isNaN(v) && typeof v === \"number\");\nexport const isArray = Array.isArray;\nexport const isObject = (v) => {\n    if (!v)\n        return false;\n    const proto = Object.getPrototypeOf(v);\n    return ((proto === OBJECT_PROTO || proto === null) &&\n        OBJECT_TAG === Object.prototype.toString.call(v));\n};\n//  objects, arrays, functions, date, custom object\nexport const isObjectLike = (v) => v === Object(v);\nexport const isDate = (v) => v instanceof Date;\nexport const isRegExp = (v) => v instanceof RegExp;\nexport const isFunction = (v) => typeof v === \"function\";\nexport const isNil = (v) => v === null || v === undefined;\nexport const inArray = (arr, item) => arr.includes(item);\nexport const notInArray = (arr, item) => !inArray(arr, item);\nexport const truthy = (arg, strict = true) => !!arg || (strict && arg === \"\");\nexport const isEmpty = (x) => isNil(x) ||\n    (isString(x) && !x) ||\n    (x instanceof Array && x.length === 0) ||\n    (isObject(x) && Object.keys(x).length === 0);\nexport const isMissing = (v) => v === MISSING;\n/** ensure a value is an array or wrapped within one. */\nexport const ensureArray = (x) => x instanceof Array ? x : [x];\nexport const has = (obj, prop) => !!obj && Object.prototype.hasOwnProperty.call(obj, prop);\nconst mergeable = (left, right) => (isObject(left) && isObject(right)) || (isArray(left) && isArray(right));\n/**\n * Deep merge objects or arrays.\n * When the inputs have unmergeable types, the  right hand value is returned.\n * If inputs are arrays and options.flatten is set, elements in the same position are merged together. Remaining elements are appended to the target object.\n * If options.flatten is false, the right hand value is just appended to the left-hand value.\n * @param target {Object|Array} the target to merge into\n * @param obj {Object|Array} the source object\n */\nexport function merge(target, obj, options) {\n    // default options\n    options = options || { flatten: false };\n    // take care of missing inputs\n    if (isMissing(target) || isNil(target))\n        return obj;\n    if (isMissing(obj) || isNil(obj))\n        return target;\n    // fail only on initial input.\n    if (!mergeable(target, obj)) {\n        if (options.skipValidation)\n            return obj || target;\n        throw Error(\"mismatched types. must both be array or object\");\n    }\n    // skip validation after initial input.\n    options.skipValidation = true;\n    if (isArray(target)) {\n        const result = target;\n        const input = obj;\n        if (options.flatten) {\n            let i = 0;\n            let j = 0;\n            while (i < result.length && j < input.length) {\n                result[i] = merge(result[i++], input[j++], options);\n            }\n            while (j < input.length) {\n                result.push(obj[j++]);\n            }\n        }\n        else {\n            into(result, input);\n        }\n    }\n    else {\n        for (const k in obj) {\n            target[k] = merge(target[k], obj[k], options);\n        }\n    }\n    return target;\n}\nfunction buildHashIndex(arr, hashFunction = DEFAULT_HASH_FUNCTION) {\n    const map = new Map();\n    arr.forEach((o, i) => {\n        const h = hashCode(o, hashFunction);\n        if (map.has(h)) {\n            if (!map.get(h).some(j => isEqual(arr[j], o))) {\n                map.get(h).push(i);\n            }\n        }\n        else {\n            map.set(h, [i]);\n        }\n    });\n    return map;\n}\n/**\n * Returns the intersection of multiple arrays.\n *\n * @param  {Array} input An array of arrays from which to find intersection.\n * @param  {Function} hashFunction Custom function to hash values, default the hashCode method\n * @return {Array} Array of intersecting values.\n */\nexport function intersection(input, hashFunction = DEFAULT_HASH_FUNCTION) {\n    // if any array is empty, there is no intersection\n    if (input.some(arr => arr.length == 0))\n        return [];\n    if (input.length === 1)\n        return Array.from(input);\n    // sort input arrays by to get smallest array\n    // const sorted = sortBy(input, (a: RawArray) => a.length) as RawArray[];\n    const sortedIndex = sortBy(input.map((a, i) => [i, a.length]), (a) => a[1]);\n    // get the smallest\n    const smallest = input[sortedIndex[0][0]];\n    // get hash index of smallest array\n    const map = buildHashIndex(smallest, hashFunction);\n    // hashIndex for remaining arrays.\n    const rmap = new Map();\n    // final intersection results and index of first occurrence.\n    const results = new Array();\n    map.forEach((v, k) => {\n        const lhs = v.map(j => smallest[j]);\n        const res = lhs.map(_ => 0);\n        // used to track first occurence of value in order of the original input array.\n        const stable = lhs.map(_ => [sortedIndex[0][0], 0]);\n        let found = false;\n        for (let i = 1; i < input.length; i++) {\n            const [currIndex, _] = sortedIndex[i];\n            const arr = input[currIndex];\n            if (!rmap.has(i))\n                rmap.set(i, buildHashIndex(arr));\n            // we found a match. let's confirm.\n            if (rmap.get(i).has(k)) {\n                const rhs = rmap\n                    .get(i)\n                    .get(k)\n                    .map(j => arr[j]);\n                // confirm the intersection with an equivalence check.\n                found = lhs\n                    .map((s, n) => rhs.some((t, m) => {\n                    // we expect only one to match here since these are just collisions.\n                    const p = res[n];\n                    if (isEqual(s, t)) {\n                        res[n]++;\n                        // track position of value ordering for stability.\n                        if (currIndex < stable[n][0]) {\n                            stable[n] = [currIndex, rmap.get(i).get(k)[m]];\n                        }\n                    }\n                    return p < res[n];\n                }))\n                    .some(Boolean);\n            }\n            // found nothing, so exclude value. this was just a hash collision.\n            if (!found)\n                return;\n        }\n        // extract value into result if we found an intersection.\n        // we find an intersection if the frequency counter matches the count of the remaining arrays.\n        if (found) {\n            into(results, res\n                .map((n, i) => {\n                return n === input.length - 1 ? [lhs[i], stable[i]] : MISSING;\n            })\n                .filter(n => n !== MISSING));\n        }\n    });\n    return results\n        .sort((a, b) => {\n        const [_i, [u, m]] = a;\n        const [_j, [v, n]] = b;\n        const r = compare(u, v);\n        if (r !== 0)\n            return r;\n        return compare(m, n);\n    })\n        .map(v => v[0]);\n}\n/**\n * Flatten the array\n *\n * @param {Array} xs The array to flatten\n * @param {Number} depth The number of nested lists to iterate\n */\nexport function flatten(xs, depth = 0) {\n    const arr = new Array();\n    function flatten2(ys, n) {\n        for (let i = 0, len = ys.length; i < len; i++) {\n            if (isArray(ys[i]) && (n > 0 || n < 0)) {\n                flatten2(ys[i], Math.max(-1, n - 1));\n            }\n            else {\n                arr.push(ys[i]);\n            }\n        }\n    }\n    flatten2(xs, depth);\n    return arr;\n}\n/** Returns all members of the value in an object literal. */\nconst getMembersOf = (value) => {\n    let [proto, names] = [\n        Object.getPrototypeOf(value),\n        Object.getOwnPropertyNames(value)\n    ];\n    // save effective prototype\n    let activeProto = proto;\n    // traverse the prototype hierarchy until we get property names or hit the bottom prototype.\n    while (!names.length && proto !== OBJECT_PROTO && proto !== ARRAY_PROTO) {\n        activeProto = proto;\n        names = Object.getOwnPropertyNames(proto);\n        proto = Object.getPrototypeOf(proto);\n    }\n    const o = {};\n    names.forEach(k => (o[k] = value[k]));\n    return [o, activeProto];\n};\n/**\n * Determine whether two values are the same or strictly equivalent.\n * Checking whether values are the same only applies to built in objects.\n * For user-defined objects this checks for only referential equality so\n * two different instances with the same values are not equal.\n *\n * @param  {*}  a The first value\n * @param  {*}  b The second value\n * @return {Boolean}   Result of comparison\n */\nexport function isEqual(a, b) {\n    const args = [[a, b]];\n    while (args.length > 0) {\n        [a, b] = args.pop();\n        // strictly equal must be equal. matches referentially equal values.\n        if (a === b)\n            continue;\n        // unequal types and functions (unless referentially equivalent) cannot be equal.\n        const ctor = getConstructor(a);\n        if (ctor !== getConstructor(b) || isFunction(a))\n            return false;\n        // string convertable types\n        if (STRING_CONVERTERS.has(ctor)) {\n            const str = STRING_CONVERTERS.get(ctor);\n            // eslint-disable-next-line @typescript-eslint/no-base-to-string\n            if (str(a) !== str(b))\n                return false;\n            // values are equal, so move next\n            continue;\n        }\n        // handle array and object types\n        if (ctor === Array || ctor === Object) {\n            const ka = Object.keys(a);\n            const kb = Object.keys(b);\n            if (ka.length !== kb.length)\n                return false;\n            if (new Set(ka.concat(kb)).size != ka.length)\n                return false;\n            for (const k of ka)\n                args.push([a[k], b[k]]);\n            // move next\n            continue;\n        }\n        // user-defined type detected.\n        // we don't try to compare user-defined types (even though we could...shhhh).\n        return false;\n    }\n    // nothing left to compare\n    return !args.length;\n}\n/**\n * Return a new unique version of the collection\n * @param  {Array} input The input collection\n * @return {Array}\n */\nexport function unique(input, hashFunction = DEFAULT_HASH_FUNCTION) {\n    const result = input.map(_ => MISSING);\n    buildHashIndex(input, hashFunction).forEach((v, _) => {\n        v.forEach(i => (result[i] = input[i]));\n    });\n    return result.filter(v => v !== MISSING);\n}\n/**\n * Encode value to string using a simple non-colliding stable scheme.\n * Handles user-defined types by processing keys on first non-empty prototype.\n * If a user-defined type provides a \"toJSON\" function, it is used.\n *\n * @param value The value to convert to a string representation.\n * @returns {String}\n */\nexport function stringify(value) {\n    const cycle = new Set();\n    // stringify with cycle check\n    const str = (v) => {\n        const ctor = getConstructor(v);\n        // string convertable types\n        if (STRING_CONVERTERS.has(ctor)) {\n            return STRING_CONVERTERS.get(ctor)(v);\n        }\n        const tag = ctor === Object ? \"\" : ctor.name;\n        // handle JSONable objects.\n        if (isFunction(v[\"toJSON\"])) {\n            return `${tag}(${JSON.stringify(v)})`;\n        }\n        // handle cycles\n        if (cycle.has(v))\n            throw CYCLE_FOUND_ERROR;\n        cycle.add(v);\n        try {\n            // handle array\n            if (ctor === Array) {\n                return \"[\" + v.map(str).join(\",\") + \"]\";\n            }\n            // handle user-defined object\n            if (ctor !== Object) {\n                // handle user-defined types or object literals.\n                const [members, _] = getMembersOf(v);\n                // custom type derived from array.\n                if (isArray(v)) {\n                    // include other members as part of array elements.\n                    return `${tag}${str([...v, members])}`;\n                }\n                // get members as literal\n                v = members;\n            }\n            const objKeys = Object.keys(v);\n            objKeys.sort();\n            return (`${tag}{` +\n                objKeys.map(k => `${k}:${str(v[k])}`).join(\",\") +\n                \"}\");\n        }\n        finally {\n            cycle.delete(v);\n        }\n    };\n    // convert to string\n    return str(value);\n}\n/**\n * Generate hash code\n * This selected function is the result of benchmarking various hash functions.\n * This version performs well and can hash 10^6 documents in ~3s with on average 100 collisions.\n *\n * @param value\n * @returns {number|null}\n */\nexport function hashCode(value, hashFunction) {\n    hashFunction = hashFunction || DEFAULT_HASH_FUNCTION;\n    if (isNil(value))\n        return null;\n    return hashFunction(value).toString();\n}\n/**\n * Returns a (stably) sorted copy of list, ranked in ascending order by the results of running each value through iteratee\n *\n * This implementation treats null/undefined sort keys as less than every other type\n *\n * @param {Array}   collection\n * @param {Function} keyFn The sort key function used to resolve sort keys\n * @param {Function} comparator The comparator function to use for comparing keys. Defaults to standard comparison via `compare(...)`\n * @return {Array} Returns a new sorted array by the given key and comparator function\n */\nexport function sortBy(collection, keyFn, comparator = compare) {\n    if (isEmpty(collection))\n        return collection;\n    const sorted = new Array();\n    const result = new Array();\n    for (let i = 0; i < collection.length; i++) {\n        const obj = collection[i];\n        const key = keyFn(obj, i);\n        if (isNil(key)) {\n            result.push(obj);\n        }\n        else {\n            sorted.push([key, obj]);\n        }\n    }\n    // use native array sorting but enforce stableness\n    sorted.sort((a, b) => comparator(a[0], b[0]));\n    return into(result, sorted.map((o) => o[1]));\n}\n/**\n * Groups the collection into sets by the returned key\n *\n * @param collection\n * @param keyFn {Function} to compute the group key of an item in the collection\n * @returns {GroupByOutput}\n */\nexport function groupBy(collection, keyFn, hashFunction = DEFAULT_HASH_FUNCTION) {\n    if (collection.length < 1)\n        return new Map();\n    // map of hash to collided values\n    const lookup = new Map();\n    // map of raw key values to objects.\n    const result = new Map();\n    for (let i = 0; i < collection.length; i++) {\n        const obj = collection[i];\n        const key = keyFn(obj, i);\n        const hash = hashCode(key, hashFunction);\n        if (hash === null) {\n            if (result.has(null)) {\n                result.get(null).push(obj);\n            }\n            else {\n                result.set(null, [obj]);\n            }\n        }\n        else {\n            // find if we can match a hash for which the value is equivalent.\n            // this is used to deal with collisions.\n            const existingKey = lookup.has(hash)\n                ? lookup.get(hash).find(k => isEqual(k, key))\n                : null;\n            // collision detected or first time seeing key\n            if (isNil(existingKey)) {\n                // collision detected or first entry so we create a new group.\n                result.set(key, [obj]);\n                // upload the lookup with the collided key\n                if (lookup.has(hash)) {\n                    lookup.get(hash).push(key);\n                }\n                else {\n                    lookup.set(hash, [key]);\n                }\n            }\n            else {\n                // key exists\n                result.get(existingKey).push(obj);\n            }\n        }\n    }\n    return result;\n}\n// max elements to push.\n// See argument limit https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/apply\nconst MAX_ARRAY_PUSH = 50000;\n/**\n * Merge elements into the dest\n *\n * @param {*} target The target object\n * @param {*} rest The array of elements to merge into dest\n */\nexport function into(target, ...rest) {\n    if (target instanceof Array) {\n        return rest.reduce(((acc, arr) => {\n            // push arrary in batches to handle large inputs\n            let i = Math.ceil(arr.length / MAX_ARRAY_PUSH);\n            let begin = 0;\n            while (i-- > 0) {\n                Array.prototype.push.apply(acc, arr.slice(begin, begin + MAX_ARRAY_PUSH));\n                begin += MAX_ARRAY_PUSH;\n            }\n            return acc;\n        }), target);\n    }\n    else {\n        // merge objects. same behaviour as Object.assign\n        return rest.filter(isObjectLike).reduce((acc, item) => {\n            Object.assign(acc, item);\n            return acc;\n        }, target);\n    }\n}\n/**\n * This is a generic memoization function\n *\n * This implementation uses a cache independent of the function being memoized\n * to allow old values to be garbage collected when the memoized function goes out of scope.\n *\n * @param {*} fn The function object to memoize\n */\nexport function memoize(fn, hashFunction = DEFAULT_HASH_FUNCTION) {\n    return ((memo) => {\n        return (...args) => {\n            const key = hashCode(args, hashFunction) || \"\";\n            if (!has(memo, key)) {\n                memo[key] = fn.apply(this, args);\n            }\n            return memo[key];\n        };\n    })({\n    /* storage */\n    });\n}\n// mingo internal\n/**\n * Retrieve the value of a given key on an object\n * @param obj\n * @param key\n * @returns {*}\n * @private\n */\nfunction getValue(obj, key) {\n    return isObjectLike(obj) ? obj[key] : undefined;\n}\n/**\n * Unwrap a single element array to specified depth\n * @param {Array} arr\n * @param {Number} depth\n */\nfunction unwrap(arr, depth) {\n    if (depth < 1)\n        return arr;\n    while (depth-- && arr.length === 1)\n        arr = arr[0];\n    return arr;\n}\n/**\n * Resolve the value of the field (dot separated) on the given object\n * @param obj {Object} the object context\n * @param selector {String} dot separated path to field\n * @returns {*}\n */\nexport function resolve(obj, selector, options) {\n    let depth = 0;\n    function resolve2(o, path) {\n        let value = o;\n        for (let i = 0; i < path.length; i++) {\n            const field = path[i];\n            const isText = /^\\d+$/.exec(field) === null;\n            // using instanceof to aid typescript compiler\n            if (isText && value instanceof Array) {\n                // On the first iteration, we check if we received a stop flag.\n                // If so, we stop to prevent iterating over a nested array value\n                // on consecutive object keys in the selector.\n                if (i === 0 && depth > 0)\n                    break;\n                depth += 1;\n                // only look at the rest of the path\n                const subpath = path.slice(i);\n                value = value.reduce((acc, item) => {\n                    const v = resolve2(item, subpath);\n                    if (v !== undefined)\n                        acc.push(v);\n                    return acc;\n                }, []);\n                break;\n            }\n            else {\n                value = getValue(value, field);\n            }\n            if (value === undefined)\n                break;\n        }\n        return value;\n    }\n    const result = JS_SIMPLE_TYPES.has(getType(obj).toLowerCase())\n        ? obj\n        : resolve2(obj, selector.split(\".\"));\n    return result instanceof Array && (options === null || options === void 0 ? void 0 : options.unwrapArray)\n        ? unwrap(result, depth)\n        : result;\n}\n/**\n * Returns the full object to the resolved value given by the selector.\n * This function excludes empty values as they aren't practically useful.\n *\n * @param obj {Object} the object context\n * @param selector {String} dot separated path to field\n */\nexport function resolveGraph(obj, selector, options) {\n    const names = selector.split(\".\");\n    const key = names[0];\n    // get the next part of the selector\n    const next = names.slice(1).join(\".\");\n    const isIndex = /^\\d+$/.exec(key) !== null;\n    const hasNext = names.length > 1;\n    let result;\n    let value;\n    if (obj instanceof Array) {\n        if (isIndex) {\n            result = getValue(obj, Number(key));\n            if (hasNext) {\n                result = resolveGraph(result, next, options);\n            }\n            result = [result];\n        }\n        else {\n            result = [];\n            for (const item of obj) {\n                value = resolveGraph(item, selector, options);\n                if (options === null || options === void 0 ? void 0 : options.preserveMissing) {\n                    if (value === undefined) {\n                        value = MISSING;\n                    }\n                    result.push(value);\n                }\n                else if (value !== undefined) {\n                    result.push(value);\n                }\n            }\n        }\n    }\n    else {\n        value = getValue(obj, key);\n        if (hasNext) {\n            value = resolveGraph(value, next, options);\n        }\n        if (value === undefined)\n            return undefined;\n        result = (options === null || options === void 0 ? void 0 : options.preserveKeys) ? Object.assign({}, obj) : {};\n        result[key] = value;\n    }\n    return result;\n}\n/**\n * Filter out all MISSING values from the object in-place\n *\n * @param obj The object to filter\n */\nexport function filterMissing(obj) {\n    if (obj instanceof Array) {\n        for (let i = obj.length - 1; i >= 0; i--) {\n            if (obj[i] === MISSING) {\n                obj.splice(i, 1);\n            }\n            else {\n                filterMissing(obj[i]);\n            }\n        }\n    }\n    else if (isObject(obj)) {\n        for (const k in obj) {\n            if (has(obj, k)) {\n                filterMissing(obj[k]);\n            }\n        }\n    }\n}\nconst NUMBER_RE = /^\\d+$/;\n/**\n * Walk the object graph and execute the given transform function\n *\n * @param  {Object|Array} obj   The object to traverse.\n * @param  {String} selector    The selector to navigate.\n * @param  {Callback} fn Callback to execute for value at the end the traversal.\n * @param  {WalkOptions} options The opetions to use for the function.\n * @return {*}\n */\nexport function walk(obj, selector, fn, options) {\n    const names = selector.split(\".\");\n    const key = names[0];\n    const next = names.slice(1).join(\".\");\n    if (names.length === 1) {\n        if (isObject(obj) || (isArray(obj) && NUMBER_RE.test(key))) {\n            fn(obj, key);\n        }\n    }\n    else {\n        // force the rest of the graph while traversing\n        if ((options === null || options === void 0 ? void 0 : options.buildGraph) && isNil(obj[key])) {\n            obj[key] = {};\n        }\n        // get the next item\n        const item = obj[key];\n        // nothing more to do\n        if (!item)\n            return;\n        // we peek to see if next key is an array index.\n        const isNextArrayIndex = !!(names.length > 1 && NUMBER_RE.test(names[1]));\n        // if we have an array value but the next key is not an index and the 'descendArray' option is set,\n        // we walk each item in the array separately. This allows for handling traversing keys for objects\n        // nested within an array.\n        //\n        // Eg: Given { array: [ {k:1}, {k:2}, {k:3} ] }\n        //  - individual objecs can be traversed with \"array.k\"\n        //  - a specific object can be traversed with \"array.1\"\n        if (item instanceof Array && (options === null || options === void 0 ? void 0 : options.descendArray) && !isNextArrayIndex) {\n            item.forEach(((e) => walk(e, next, fn, options)));\n        }\n        else {\n            walk(item, next, fn, options);\n        }\n    }\n}\n/**\n * Set the value of the given object field\n *\n * @param obj {Object|Array} the object context\n * @param selector {String} path to field\n * @param value {*} the value to set. if it is function, it is invoked with the old value and must return the new value.\n */\nexport function setValue(obj, selector, value) {\n    walk(obj, selector, ((item, key) => {\n        item[key] = isFunction(value) ? value(item[key]) : value;\n    }), { buildGraph: true });\n}\n/**\n * Removes an element from the container.\n * If the selector resolves to an array and the leaf is a non-numeric key,\n * the remove operation will be performed on objects of the array.\n *\n * @param obj {ArrayOrObject} object or array\n * @param selector {String} dot separated path to element to remove\n */\nexport function removeValue(obj, selector, options) {\n    walk(obj, selector, ((item, key) => {\n        if (item instanceof Array) {\n            if (/^\\d+$/.test(key)) {\n                item.splice(parseInt(key), 1);\n            }\n            else if (options && options.descendArray) {\n                for (const elem of item) {\n                    if (isObject(elem)) {\n                        delete elem[key];\n                    }\n                }\n            }\n        }\n        else if (isObject(item)) {\n            delete item[key];\n        }\n    }), options);\n}\nconst OPERATOR_NAME_PATTERN = /^\\$[a-zA-Z0-9_]+$/;\n/**\n * Check whether the given name passes for an operator. We assume AnyVal field name starting with '$' is an operator.\n * This is cheap and safe to do since keys beginning with '$' should be reserved for internal use.\n * @param {String} name\n */\nexport function isOperator(name) {\n    return OPERATOR_NAME_PATTERN.test(name);\n}\n/**\n * Simplify expression for easy evaluation with query operators map\n * @param expr\n * @returns {*}\n */\nexport function normalize(expr) {\n    // normalized primitives\n    if (JS_SIMPLE_TYPES.has(getType(expr).toLowerCase())) {\n        return isRegExp(expr) ? { $regex: expr } : { $eq: expr };\n    }\n    // normalize object expression. using ObjectLike handles custom types\n    if (isObjectLike(expr)) {\n        const exprObj = expr;\n        // no valid query operator found, so we do simple comparison\n        if (!Object.keys(exprObj).some(isOperator)) {\n            return { $eq: expr };\n        }\n        // ensure valid regex\n        if (has(expr, \"$regex\")) {\n            const newExpr = Object.assign({}, expr);\n            newExpr[\"$regex\"] = new RegExp(expr[\"$regex\"], expr[\"$options\"]);\n            delete newExpr[\"$options\"];\n            return newExpr;\n        }\n    }\n    return expr;\n}\n/**\n * Find the insert index for the given key in a sorted array.\n *\n * @param {*} sorted The sorted array to search\n * @param {*} item The search key\n */\nexport function findInsertIndex(sorted, item) {\n    // uses binary search\n    let lo = 0;\n    let hi = sorted.length - 1;\n    while (lo <= hi) {\n        const mid = Math.round(lo + (hi - lo) / 2);\n        if (compare(item, sorted[mid]) < 0) {\n            hi = mid - 1;\n        }\n        else if (compare(item, sorted[mid]) > 0) {\n            lo = mid + 1;\n        }\n        else {\n            return mid;\n        }\n    }\n    return lo;\n}\n","import { MingoError } from \"./types\";\nimport { assert, has, isArray, isFunction, isNil, isObject, isObjectLike, isOperator, isString, resolve } from \"./util\";\n/**\n * This controls how input and output documents are processed to meet different application needs.\n * Each mode has different trade offs for; immutability, reference sharing, and performance.\n */\nexport var ProcessingMode;\n(function (ProcessingMode) {\n    /**\n     * Clone inputs prior to processing, and the outputs if some objects graphs may be shared.\n     * Use this option to keep input collection immutable and to get distinct output objects.\n     *\n     * Note: This option is expensive and reduces performance.\n     */\n    ProcessingMode[\"CLONE_ALL\"] = \"CLONE_ALL\";\n    /**\n     * Clones inputs prior to processing.\n     * This option will return output objects with shared graphs in their path if specific operators are used.\n     * Use this option to keep the input collection immutable.\n     *\n     */\n    ProcessingMode[\"CLONE_INPUT\"] = \"CLONE_INPUT\";\n    /**\n     * Clones the output to return distinct objects with no shared paths.\n     * This option modifies the input collection and during processing.\n     */\n    ProcessingMode[\"CLONE_OUTPUT\"] = \"CLONE_OUTPUT\";\n    /**\n     * Turn off cloning and modifies the input collection as needed.\n     * This option will also return output objects with shared paths in their graph when specific operators are used.\n     * This option provides the greatest speedup for the biggest tradeoff.\n     * When using the aggregation pipeline, you can use the \"$out\" operator to collect immutable intermediate results.\n     *\n     * @default\n     */\n    ProcessingMode[\"CLONE_OFF\"] = \"CLONE_OFF\";\n})(ProcessingMode || (ProcessingMode = {}));\n/** Custom type to facilitate type checking for global options */\nexport class ComputeOptions {\n    constructor(_opts, \n    /** Reference to the root object when processing subgraphs of the object. */\n    _root, _local, \n    /** The current time in milliseconds. Remains the same throughout all stages of the aggregation pipeline. */\n    timestamp = Date.now()) {\n        this._opts = _opts;\n        this._root = _root;\n        this._local = _local;\n        this.timestamp = timestamp;\n        this.update(_root, _local);\n    }\n    /**\n     * Initialize new ComputeOptions.\n     *\n     * @param options\n     * @param root\n     * @param local\n     * @returns {ComputeOptions}\n     */\n    static init(options, root, local) {\n        return options instanceof ComputeOptions\n            ? new ComputeOptions(options._opts, isNil(options.root) ? root : options.root, Object.assign({}, options.local, local))\n            : new ComputeOptions(options, root, local);\n    }\n    /** Updates the internal mutable state. */\n    update(root, local) {\n        var _a;\n        // NOTE: this is done for efficiency to avoid creating too many intermediate options objects.\n        this._root = root;\n        this._local = local\n            ? Object.assign({}, local, {\n                variables: Object.assign({}, (_a = this._local) === null || _a === void 0 ? void 0 : _a.variables, local === null || local === void 0 ? void 0 : local.variables)\n            })\n            : local;\n        return this;\n    }\n    getOptions() {\n        return Object.freeze(Object.assign(Object.assign({}, this._opts), { context: Context.from(this._opts.context) }));\n    }\n    get root() {\n        return this._root;\n    }\n    get local() {\n        return this._local;\n    }\n    get idKey() {\n        return this._opts.idKey;\n    }\n    get collation() {\n        var _a;\n        return (_a = this._opts) === null || _a === void 0 ? void 0 : _a.collation;\n    }\n    get processingMode() {\n        var _a;\n        return ((_a = this._opts) === null || _a === void 0 ? void 0 : _a.processingMode) || ProcessingMode.CLONE_OFF;\n    }\n    get useStrictMode() {\n        var _a;\n        return (_a = this._opts) === null || _a === void 0 ? void 0 : _a.useStrictMode;\n    }\n    get scriptEnabled() {\n        var _a;\n        return (_a = this._opts) === null || _a === void 0 ? void 0 : _a.scriptEnabled;\n    }\n    get useGlobalContext() {\n        var _a;\n        return (_a = this._opts) === null || _a === void 0 ? void 0 : _a.useGlobalContext;\n    }\n    get hashFunction() {\n        var _a;\n        return (_a = this._opts) === null || _a === void 0 ? void 0 : _a.hashFunction;\n    }\n    get collectionResolver() {\n        var _a;\n        return (_a = this._opts) === null || _a === void 0 ? void 0 : _a.collectionResolver;\n    }\n    get jsonSchemaValidator() {\n        var _a;\n        return (_a = this._opts) === null || _a === void 0 ? void 0 : _a.jsonSchemaValidator;\n    }\n    get variables() {\n        var _a;\n        return (_a = this._opts) === null || _a === void 0 ? void 0 : _a.variables;\n    }\n    get context() {\n        var _a;\n        return (_a = this._opts) === null || _a === void 0 ? void 0 : _a.context;\n    }\n}\n/**\n * Creates an Option from another where required keys are initialized.\n * @param options Options\n */\nexport function initOptions(options) {\n    return options instanceof ComputeOptions\n        ? options.getOptions()\n        : Object.freeze(Object.assign(Object.assign({ idKey: \"_id\", scriptEnabled: true, useStrictMode: true, useGlobalContext: true, processingMode: ProcessingMode.CLONE_OFF }, options), { context: (options === null || options === void 0 ? void 0 : options.context)\n                ? Context.from(options === null || options === void 0 ? void 0 : options.context)\n                : Context.init({}) }));\n}\n/**\n * The different groups of operators\n */\nexport var OperatorType;\n(function (OperatorType) {\n    OperatorType[\"ACCUMULATOR\"] = \"accumulator\";\n    OperatorType[\"EXPRESSION\"] = \"expression\";\n    OperatorType[\"PIPELINE\"] = \"pipeline\";\n    OperatorType[\"PROJECTION\"] = \"projection\";\n    OperatorType[\"QUERY\"] = \"query\";\n    OperatorType[\"WINDOW\"] = \"window\";\n})(OperatorType || (OperatorType = {}));\nexport class Context {\n    constructor(ops) {\n        this.operators = {\n            [OperatorType.ACCUMULATOR]: {},\n            [OperatorType.EXPRESSION]: {},\n            [OperatorType.PIPELINE]: {},\n            [OperatorType.PROJECTION]: {},\n            [OperatorType.QUERY]: {},\n            [OperatorType.WINDOW]: {}\n        };\n        for (const [type, operators] of Object.entries(ops)) {\n            this.addOperators(type, operators);\n        }\n    }\n    static init(ops = {}) {\n        return new Context(ops);\n    }\n    static from(ctx) {\n        return new Context(ctx.operators);\n    }\n    addOperators(type, ops) {\n        for (const [name, fn] of Object.entries(ops)) {\n            if (!this.getOperator(type, name)) {\n                this.operators[type][name] = fn;\n            }\n        }\n        return this;\n    }\n    // register\n    addAccumulatorOps(ops) {\n        return this.addOperators(OperatorType.ACCUMULATOR, ops);\n    }\n    addExpressionOps(ops) {\n        return this.addOperators(OperatorType.EXPRESSION, ops);\n    }\n    addQueryOps(ops) {\n        return this.addOperators(OperatorType.QUERY, ops);\n    }\n    addPipelineOps(ops) {\n        return this.addOperators(OperatorType.PIPELINE, ops);\n    }\n    addProjectionOps(ops) {\n        return this.addOperators(OperatorType.PROJECTION, ops);\n    }\n    addWindowOps(ops) {\n        return this.addOperators(OperatorType.WINDOW, ops);\n    }\n    // getters\n    getOperator(type, name) {\n        return type in this.operators ? this.operators[type][name] || null : null;\n    }\n}\n// global context\nconst GLOBAL_CONTEXT = Context.init();\n/**\n * Register fully specified operators for the given operator class.\n *\n * @param type The operator type\n * @param operators Map of the operators\n */\nexport function useOperators(type, operators) {\n    for (const [name, fn] of Object.entries(operators)) {\n        assert(isFunction(fn) && isOperator(name), `'${name}' is not a valid operator`);\n        const currentFn = getOperator(type, name, null);\n        assert(!currentFn || fn === currentFn, `${name} already exists for '${type}' operators. Cannot change operator function once registered.`);\n    }\n    // toss the operator salad :)\n    switch (type) {\n        case OperatorType.ACCUMULATOR:\n            GLOBAL_CONTEXT.addAccumulatorOps(operators);\n            break;\n        case OperatorType.EXPRESSION:\n            GLOBAL_CONTEXT.addExpressionOps(operators);\n            break;\n        case OperatorType.PIPELINE:\n            GLOBAL_CONTEXT.addPipelineOps(operators);\n            break;\n        case OperatorType.PROJECTION:\n            GLOBAL_CONTEXT.addProjectionOps(operators);\n            break;\n        case OperatorType.QUERY:\n            GLOBAL_CONTEXT.addQueryOps(operators);\n            break;\n        case OperatorType.WINDOW:\n            GLOBAL_CONTEXT.addWindowOps(operators);\n            break;\n    }\n}\n/**\n * Overrides the current global context with this new one.\n *\n * @param context The new context to override the global one with.\n */\n// export const setGlobalContext = (context: Context): void => {\n//   GLOBAL_CONTEXT = context;\n// };\n/**\n * Returns the operator function or undefined if it is not found\n * @param type Type of operator\n * @param operator Name of the operator\n */\nexport function getOperator(type, operator, options) {\n    const { context: ctx, useGlobalContext: fallback } = options || {};\n    const fn = ctx ? ctx.getOperator(type, operator) : null;\n    return !fn && fallback ? GLOBAL_CONTEXT.getOperator(type, operator) : fn;\n}\n/* eslint-disable unused-imports/no-unused-vars-ts */\n/**\n * Implementation of system variables\n * @type {Object}\n */\nconst systemVariables = {\n    $$ROOT(_obj, _expr, options) {\n        return options.root;\n    },\n    $$CURRENT(obj, _expr, _options) {\n        return obj;\n    },\n    $$REMOVE(_obj, _expr, _options) {\n        return undefined;\n    },\n    $$NOW(_obj, _expr, options) {\n        return new Date(options.timestamp);\n    }\n};\n/**\n * Implementation of $redact variables\n *\n * Each function accepts 3 arguments (obj, expr, options)\n *\n * @type {Object}\n */\nconst redactVariables = {\n    $$KEEP(obj, _expr, _options) {\n        return obj;\n    },\n    $$PRUNE(_obj, _expr, _options) {\n        return undefined;\n    },\n    $$DESCEND(obj, expr, options) {\n        // traverse nested documents iff there is a $cond\n        if (!has(expr, \"$cond\"))\n            return obj;\n        let result;\n        for (const [key, current] of Object.entries(obj)) {\n            if (isObjectLike(current)) {\n                if (current instanceof Array) {\n                    const array = [];\n                    for (let elem of current) {\n                        if (isObject(elem)) {\n                            elem = redact(elem, expr, options.update(elem));\n                        }\n                        if (!isNil(elem)) {\n                            array.push(elem);\n                        }\n                    }\n                    result = array;\n                }\n                else {\n                    result = redact(current, expr, options.update(current));\n                }\n                if (isNil(result)) {\n                    delete obj[key]; // pruned result\n                }\n                else {\n                    obj[key] = result;\n                }\n            }\n        }\n        return obj;\n    }\n};\n/* eslint-enable unused-imports/no-unused-vars-ts */\n/**\n * Computes the value of the expression on the object for the given operator\n *\n * @param obj the current object from the collection\n * @param expr the expression for the given field\n * @param operator the operator to resolve the field with\n * @param options {Object} extra options\n * @returns {*}\n */\nexport function computeValue(obj, expr, operator, options) {\n    var _a;\n    // ensure valid options exist on first invocation\n    const copts = ComputeOptions.init(options, obj);\n    operator = operator || \"\";\n    if (isOperator(operator)) {\n        // if the field of the object is a valid operator\n        const callExpression = getOperator(OperatorType.EXPRESSION, operator, options);\n        if (callExpression)\n            return callExpression(obj, expr, copts);\n        // we also handle $group accumulator operators\n        const callAccumulator = getOperator(OperatorType.ACCUMULATOR, operator, options);\n        if (callAccumulator) {\n            // if object is not an array, first try to compute using the expression\n            if (!(obj instanceof Array)) {\n                obj = computeValue(obj, expr, null, copts);\n                expr = null;\n            }\n            // validate that we have an array\n            assert(obj instanceof Array, `'${operator}' target must be an array.`);\n            // for accumulators, we use the global options since the root is specific to each element within array.\n            return callAccumulator(obj, expr, \n            // reset the root object for accumulators.\n            copts.update(null, copts.local));\n        }\n        // operator was not found\n        throw new MingoError(`operator '${operator}' is not registered`);\n    }\n    // if expr is a string and begins with \"$$\", then we have a variable.\n    //  this can be one of; redact variable, system variable, user-defined variable.\n    //  we check and process them in that order.\n    //\n    // if expr begins only a single \"$\", then it is a path to a field on the object.\n    if (isString(expr) && expr.length > 0 && expr[0] === \"$\") {\n        // we return redact variables as literals\n        if (has(redactVariables, expr)) {\n            return expr;\n        }\n        // default to root for resolving path.\n        let context = copts.root;\n        // handle selectors with explicit prefix\n        const arr = expr.split(\".\");\n        if (has(systemVariables, arr[0])) {\n            // set 'root' only the first time it is required to be used for all subsequent calls\n            // if it already available on the options, it will be used\n            context = systemVariables[arr[0]](obj, null, copts);\n            expr = expr.slice(arr[0].length + 1); //  +1 for '.'\n        }\n        else if (arr[0].slice(0, 2) === \"$$\") {\n            // handle user-defined variables\n            context = Object.assign({}, copts.variables, // global vars\n            // current item is added before local variables because the binding may be changed.\n            { this: obj }, (_a = copts.local) === null || _a === void 0 ? void 0 : _a.variables // local vars\n            );\n            const prefix = arr[0].slice(2);\n            assert(has(context, prefix), `Use of undefined variable: ${prefix}`);\n            expr = expr.slice(2);\n        }\n        else {\n            // 'expr' is a path to a field on the object.\n            expr = expr.slice(1);\n        }\n        if (expr === \"\")\n            return context;\n        return resolve(context, expr);\n    }\n    // check and return value if already in a resolved state\n    if (isArray(expr)) {\n        return expr.map((item) => computeValue(obj, item, null, copts));\n    }\n    else if (isObject(expr)) {\n        const result = {};\n        for (const [key, val] of Object.entries(expr)) {\n            result[key] = computeValue(obj, val, key, copts);\n            // must run ONLY one aggregate operator per expression\n            // if so, return result of the computed value\n            if ([OperatorType.EXPRESSION, OperatorType.ACCUMULATOR].some(t => !!getOperator(t, key, options))) {\n                // there should be only one operator\n                assert(Object.keys(expr).length === 1, \"Invalid aggregation expression '\" + JSON.stringify(expr) + \"'\");\n                return result[key];\n            }\n        }\n        return result;\n    }\n    return expr;\n}\n/**\n * Redact an object\n * @param  {Object} obj The object to redact\n * @param  {*} expr The redact expression\n * @param  {*} options  Options for value\n * @return {*} returns the result of the redacted object\n */\nexport function redact(obj, expr, options) {\n    const result = computeValue(obj, expr, null, options);\n    return has(redactVariables, result)\n        ? redactVariables[result](obj, expr, options)\n        : result;\n}\n","import { MingoError } from \"./types\";\n/**\n * Returns an iterator\n * @param {*} source An iterable source (Array, Function, Generator, or Iterator)\n */\nexport function Lazy(source) {\n    return source instanceof Iterator ? source : new Iterator(source);\n}\nexport function compose(...iterators) {\n    let index = 0;\n    return Lazy(() => {\n        while (index < iterators.length) {\n            const o = iterators[index].next();\n            if (!o.done)\n                return o;\n            index++;\n        }\n        return { done: true };\n    });\n}\n/**\n * Checks whether the given object is compatible with a generator i.e Object{next:Function}\n * @param {*} o An object\n */\nfunction isGenerator(o) {\n    return (!!o && typeof o === \"object\" && (o === null || o === void 0 ? void 0 : o.next) instanceof Function);\n}\nfunction dropItem(array, i) {\n    const rest = array.slice(i + 1);\n    array.splice(i);\n    Array.prototype.push.apply(array, rest);\n}\n// stop iteration error\nconst DONE = new Error();\n// Lazy function actions\nvar Action;\n(function (Action) {\n    Action[Action[\"MAP\"] = 0] = \"MAP\";\n    Action[Action[\"FILTER\"] = 1] = \"FILTER\";\n    Action[Action[\"TAKE\"] = 2] = \"TAKE\";\n    Action[Action[\"DROP\"] = 3] = \"DROP\";\n})(Action || (Action = {}));\nfunction createCallback(nextFn, iteratees, buffer) {\n    let done = false;\n    let index = -1;\n    let bufferIndex = 0; // index for the buffer\n    return function (storeResult) {\n        // special hack to collect all values into buffer\n        try {\n            outer: while (!done) {\n                let o = nextFn();\n                index++;\n                let i = -1;\n                const size = iteratees.length;\n                let innerDone = false;\n                while (++i < size) {\n                    const r = iteratees[i];\n                    switch (r.action) {\n                        case Action.MAP:\n                            o = r.func(o, index);\n                            break;\n                        case Action.FILTER:\n                            if (!r.func(o, index))\n                                continue outer;\n                            break;\n                        case Action.TAKE:\n                            --r.count;\n                            if (!r.count)\n                                innerDone = true;\n                            break;\n                        case Action.DROP:\n                            --r.count;\n                            if (!r.count)\n                                dropItem(iteratees, i);\n                            continue outer;\n                        default:\n                            break outer;\n                    }\n                }\n                done = innerDone;\n                if (storeResult) {\n                    buffer[bufferIndex++] = o;\n                }\n                else {\n                    return { value: o, done: false };\n                }\n            }\n        }\n        catch (e) {\n            if (e !== DONE)\n                throw e;\n        }\n        done = true;\n        return { done };\n    };\n}\n/**\n * A lazy collection iterator yields a single value at a time upon request.\n */\nexport class Iterator {\n    /**\n     * @param {*} source An iterable object or function.\n     *    Array - return one element per cycle\n     *    Object{next:Function} - call next() for the next value (this also handles generator functions)\n     *    Function - call to return the next value\n     * @param {Function} fn An optional transformation function\n     */\n    constructor(source) {\n        this.iteratees = [];\n        this.yieldedValues = [];\n        this.isDone = false;\n        let nextVal;\n        if (source instanceof Function) {\n            // make iterable\n            source = { next: source };\n        }\n        if (isGenerator(source)) {\n            const src = source;\n            nextVal = () => {\n                const o = src.next();\n                if (o.done)\n                    throw DONE;\n                return o.value;\n            };\n        }\n        else if (source instanceof Array) {\n            const data = source;\n            const size = data.length;\n            let index = 0;\n            nextVal = () => {\n                if (index < size)\n                    return data[index++];\n                throw DONE;\n            };\n        }\n        else if (!(source instanceof Function)) {\n            throw new MingoError(`Lazy must be initialized with an array, generator, or function.`);\n        }\n        // create next function\n        this.getNext = createCallback(nextVal, this.iteratees, this.yieldedValues);\n    }\n    /**\n     * Add an iteratee to this lazy sequence\n     */\n    push(action, value) {\n        if (typeof value === \"function\") {\n            this.iteratees.push({ action, func: value });\n        }\n        else if (typeof value === \"number\") {\n            this.iteratees.push({ action, count: value });\n        }\n        return this;\n    }\n    next() {\n        return this.getNext();\n    }\n    // Iteratees methods\n    /**\n     * Transform each item in the sequence to a new value\n     * @param {Function} f\n     */\n    map(f) {\n        return this.push(Action.MAP, f);\n    }\n    /**\n     * Select only items matching the given predicate\n     * @param {Function} pred\n     */\n    filter(predicate) {\n        return this.push(Action.FILTER, predicate);\n    }\n    /**\n     * Take given numbe for values from sequence\n     * @param {Number} n A number greater than 0\n     */\n    take(n) {\n        return n > 0 ? this.push(Action.TAKE, n) : this;\n    }\n    /**\n     * Drop a number of values from the sequence\n     * @param {Number} n Number of items to drop greater than 0\n     */\n    drop(n) {\n        return n > 0 ? this.push(Action.DROP, n) : this;\n    }\n    // Transformations\n    /**\n     * Returns a new lazy object with results of the transformation\n     * The entire sequence is realized.\n     *\n     * @param {Callback<Source, RawArray>} fn Tranform function of type (Array) => (Any)\n     */\n    transform(fn) {\n        const self = this;\n        let iter;\n        return Lazy(() => {\n            if (!iter) {\n                iter = Lazy(fn(self.value()));\n            }\n            return iter.next();\n        });\n    }\n    // Terminal methods\n    /**\n     * Returns the fully realized values of the iterators.\n     * The return value will be an array unless `lazy.first()` was used.\n     * The realized values are cached for subsequent calls.\n     */\n    value() {\n        if (!this.isDone) {\n            this.isDone = this.getNext(true).done;\n        }\n        return this.yieldedValues;\n    }\n    /**\n     * Execute the funcion for each value. Will stop when an execution returns false.\n     * @param {Function} f\n     * @returns {Boolean} false iff `f` return false for AnyVal execution, otherwise true\n     */\n    each(f) {\n        for (;;) {\n            const o = this.next();\n            if (o.done)\n                break;\n            if (f(o.value) === false)\n                return false;\n        }\n        return true;\n    }\n    /**\n     * Returns the reduction of sequence according the reducing function\n     *\n     * @param {*} f a reducing function\n     * @param {*} initialValue\n     */\n    reduce(f, initialValue) {\n        let o = this.next();\n        if (initialValue === undefined && !o.done) {\n            initialValue = o.value;\n            o = this.next();\n        }\n        while (!o.done) {\n            initialValue = f(initialValue, o.value);\n            o = this.next();\n        }\n        return initialValue;\n    }\n    /**\n     * Returns the number of matched items in the sequence\n     */\n    size() {\n        return this.reduce(((acc, _) => ++acc), 0);\n    }\n    [Symbol.iterator]() {\n        /* eslint-disable @typescript-eslint/no-unsafe-return */\n        return this;\n    }\n}\n","import { getOperator, initOptions, OperatorType, ProcessingMode } from \"./core\";\nimport { Lazy } from \"./lazy\";\nimport { assert, cloneDeep, intersection, isEmpty } from \"./util\";\n/**\n * Provides functionality for the mongoDB aggregation pipeline\n *\n * @param pipeline an Array of pipeline operators\n * @param options An optional Options to pass the aggregator\n * @constructor\n */\nexport class Aggregator {\n    constructor(pipeline, options) {\n        this.pipeline = pipeline;\n        this.options = initOptions(options);\n    }\n    /**\n     * Returns an `Lazy` iterator for processing results of pipeline\n     *\n     * @param {*} collection An array or iterator object\n     * @returns {Iterator} an iterator object\n     */\n    stream(collection) {\n        let iterator = Lazy(collection);\n        const mode = this.options.processingMode;\n        if (mode == ProcessingMode.CLONE_ALL ||\n            mode == ProcessingMode.CLONE_INPUT) {\n            iterator.map(cloneDeep);\n        }\n        const pipelineOperators = new Array();\n        if (!isEmpty(this.pipeline)) {\n            // run aggregation pipeline\n            for (const operator of this.pipeline) {\n                const operatorKeys = Object.keys(operator);\n                const opName = operatorKeys[0];\n                const call = getOperator(OperatorType.PIPELINE, opName, this.options);\n                assert(operatorKeys.length === 1 && !!call, `invalid pipeline operator ${opName}`);\n                pipelineOperators.push(opName);\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                iterator = call(iterator, operator[opName], this.options);\n            }\n        }\n        // operators that may share object graphs of inputs.\n        // we only need to clone the output for these since the objects will already be distinct for other operators.\n        if (mode == ProcessingMode.CLONE_OUTPUT ||\n            (mode == ProcessingMode.CLONE_ALL &&\n                !!intersection([[\"$group\", \"$unwind\"], pipelineOperators]).length)) {\n            iterator.map(cloneDeep);\n        }\n        return iterator;\n    }\n    /**\n     * Return the results of the aggregation as an array.\n     *\n     * @param {*} collection\n     * @param {*} query\n     */\n    run(collection) {\n        return this.stream(collection).value();\n    }\n}\n","import { Aggregator } from \"./aggregator\";\nimport { compose, Lazy } from \"./lazy\";\nimport { isObject } from \"./util\";\n/**\n * Cursor to iterate and perform filtering on matched objects.\n * This object must not be used directly. A cursor may be obtaine from calling `find()` on an instance of `Query`.\n *\n * @param collection The input source of the collection\n * @param predicate A predicate function to test documents\n * @param projection A projection criteria\n * @param options Options\n * @constructor\n */\nexport class Cursor {\n    constructor(source, predicate, projection, options) {\n        this.source = source;\n        this.predicate = predicate;\n        this.projection = projection;\n        this.options = options;\n        this.operators = [];\n        this.result = null;\n        this.buffer = [];\n    }\n    /** Returns the iterator from running the query */\n    fetch() {\n        if (this.result)\n            return this.result;\n        // add projection operator\n        if (isObject(this.projection)) {\n            this.operators.push({ $project: this.projection });\n        }\n        // filter collection\n        this.result = Lazy(this.source).filter(this.predicate);\n        if (this.operators.length > 0) {\n            this.result = new Aggregator(this.operators, this.options).stream(this.result);\n        }\n        return this.result;\n    }\n    /** Returns an iterator with the buffered data included */\n    fetchAll() {\n        const buffered = Lazy([...this.buffer]);\n        this.buffer = [];\n        return compose(buffered, this.fetch());\n    }\n    /**\n     * Return remaining objects in the cursor as an array. This method exhausts the cursor\n     * @returns {Array}\n     */\n    all() {\n        return this.fetchAll().value();\n    }\n    /**\n     * Returns the number of objects return in the cursor. This method exhausts the cursor\n     * @returns {Number}\n     */\n    count() {\n        return this.all().length;\n    }\n    /**\n     * Returns a cursor that begins returning results only after passing or skipping a number of documents.\n     * @param {Number} n the number of results to skip.\n     * @return {Cursor} Returns the cursor, so you can chain this call.\n     */\n    skip(n) {\n        this.operators.push({ $skip: n });\n        return this;\n    }\n    /**\n     * Constrains the size of a cursor's result set.\n     * @param {Number} n the number of results to limit to.\n     * @return {Cursor} Returns the cursor, so you can chain this call.\n     */\n    limit(n) {\n        this.operators.push({ $limit: n });\n        return this;\n    }\n    /**\n     * Returns results ordered according to a sort specification.\n     * @param {Object} modifier an object of key and values specifying the sort order. 1 for ascending and -1 for descending\n     * @return {Cursor} Returns the cursor, so you can chain this call.\n     */\n    sort(modifier) {\n        this.operators.push({ $sort: modifier });\n        return this;\n    }\n    /**\n     * Specifies the collation for the cursor returned by the `mingo.Query.find`\n     * @param {*} spec\n     */\n    collation(spec) {\n        this.options = Object.assign(Object.assign({}, this.options), { collation: spec });\n        return this;\n    }\n    /**\n     * Returns the next document in a cursor.\n     * @returns {Object | Boolean}\n     */\n    next() {\n        // yield value obtains in hasNext()\n        if (this.buffer.length > 0) {\n            return this.buffer.pop();\n        }\n        const o = this.fetch().next();\n        if (o.done)\n            return;\n        return o.value;\n    }\n    /**\n     * Returns true if the cursor has documents and can be iterated.\n     * @returns {boolean}\n     */\n    hasNext() {\n        // there is a value in the buffer\n        if (this.buffer.length > 0)\n            return true;\n        const o = this.fetch().next();\n        if (o.done)\n            return false;\n        this.buffer.push(o.value);\n        return true;\n    }\n    /**\n     * Applies a function to each document in a cursor and collects the return values in an array.\n     * @param fn\n     * @returns {Array}\n     */\n    map(fn) {\n        return this.all().map(fn);\n    }\n    /**\n     * Applies a JavaScript function for every document in a cursor.\n     * @param fn\n     */\n    forEach(fn) {\n        this.all().forEach(fn);\n    }\n    [Symbol.iterator]() {\n        return this.fetchAll();\n    }\n}\n","import { getOperator, initOptions, OperatorType } from \"./core\";\nimport { Cursor } from \"./cursor\";\nimport { MingoError } from \"./types\";\nimport { assert, inArray, isObject, isOperator, normalize } from \"./util\";\n/**\n * An object used to filter input documents\n *\n * @param {Object} condition The condition for constructing predicates\n * @param {Options} options Options for use by operators\n * @constructor\n */\nexport class Query {\n    constructor(condition, options) {\n        this.condition = condition;\n        this.options = initOptions(options);\n        this.compiled = [];\n        this.compile();\n    }\n    compile() {\n        assert(isObject(this.condition), `query criteria must be an object: ${JSON.stringify(this.condition)}`);\n        const whereOperator = {};\n        for (const [field, expr] of Object.entries(this.condition)) {\n            if (\"$where\" === field) {\n                Object.assign(whereOperator, { field: field, expr: expr });\n            }\n            else if (inArray([\"$and\", \"$or\", \"$nor\", \"$expr\", \"$jsonSchema\"], field)) {\n                this.processOperator(field, field, expr);\n            }\n            else {\n                // normalize expression\n                assert(!isOperator(field), `unknown top level operator: ${field}`);\n                for (const [operator, val] of Object.entries(normalize(expr))) {\n                    this.processOperator(field, operator, val);\n                }\n            }\n            if (whereOperator.field) {\n                this.processOperator(whereOperator.field, whereOperator.field, whereOperator.expr);\n            }\n        }\n    }\n    processOperator(field, operator, value) {\n        const call = getOperator(OperatorType.QUERY, operator, this.options);\n        if (!call) {\n            throw new MingoError(`unknown query operator ${operator}`);\n        }\n        const fn = call(field, value, this.options);\n        this.compiled.push(fn);\n    }\n    /**\n     * Checks if the object passes the query criteria. Returns true if so, false otherwise.\n     *\n     * @param obj The object to test\n     * @returns {boolean} True or false\n     */\n    test(obj) {\n        for (let i = 0, len = this.compiled.length; i < len; i++) {\n            if (!this.compiled[i](obj)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    /**\n     * Returns a cursor to select matching documents from the input source.\n     *\n     * @param source A source providing a sequence of documents\n     * @param projection An optional projection criteria\n     * @returns {Cursor} A Cursor for iterating over the results\n     */\n    find(collection, projection) {\n        return new Cursor(collection, ((x) => this.test(x)), projection || {}, this.options);\n    }\n    /**\n     * Remove matched documents from the collection returning the remainder\n     *\n     * @param collection An array of documents\n     * @returns {Array} A new array with matching elements removed\n     */\n    remove(collection) {\n        return collection.reduce((acc, obj) => {\n            if (!this.test(obj))\n                acc.push(obj);\n            return acc;\n        }, []);\n    }\n}\n","import { MingoError } from \"../../types\";\nimport { groupBy, isEqual } from \"../../util\";\nimport { $push } from \"../accumulator\";\nimport { MILLIS_PER_DAY } from \"../expression/date/_internal\";\nimport { isUnbounded } from \"../pipeline/_internal\";\n// millis map to diffirent time units\nexport const MILLIS_PER_UNIT = {\n    week: MILLIS_PER_DAY * 7,\n    day: MILLIS_PER_DAY,\n    hour: MILLIS_PER_DAY / 24,\n    minute: 60000,\n    second: 1000,\n    millisecond: 1\n};\n// internal cache to store precomputed series once to avoid O(N^2) calls to over the collection\nconst memo = new WeakMap();\n/**\n * Caches all computed values in a window sequence for reuse.\n * This is only useful for operations with unbounded documents.\n */\nexport function withMemo(collection, expr, cacheFn, fn) {\n    // no caching done for bounded inputs\n    if (!isUnbounded(expr.parentExpr.output[expr.field].window)) {\n        return fn(cacheFn());\n    }\n    // first time using collection\n    if (!memo.has(collection)) {\n        memo.set(collection, { [expr.field]: cacheFn() });\n    }\n    const data = memo.get(collection);\n    // subsequent computations over the same collection.\n    if (data[expr.field] === undefined) {\n        data[expr.field] = cacheFn();\n    }\n    let failed = false;\n    try {\n        return fn(data[expr.field]);\n    }\n    catch (e) {\n        failed = true;\n    }\n    finally {\n        // cleanup on failure or last element in collection.\n        if (failed || expr.documentNumber === collection.length) {\n            delete data[expr.field];\n            if (Object.keys(data).length === 0)\n                memo.delete(collection);\n        }\n    }\n}\n/** Returns the position of a document in the $setWindowFields stage partition. */\nexport function rank(_, collection, expr, options, dense) {\n    return withMemo(collection, expr, () => {\n        const sortKey = \"$\" + Object.keys(expr.parentExpr.sortBy)[0];\n        const values = $push(collection, sortKey, options);\n        const groups = groupBy(values, ((_, n) => values[n]), options.hashFunction);\n        return { values, groups };\n    }, input => {\n        const { values, groups: partitions } = input;\n        // same number of paritions as length means all sort keys are unique\n        if (partitions.size == collection.length) {\n            return expr.documentNumber;\n        }\n        const current = values[expr.documentNumber - 1];\n        let i = 0;\n        let offset = 0;\n        // partition keys are already dense so just return the value on match\n        for (const key of partitions.keys()) {\n            if (isEqual(current, key)) {\n                return dense ? i + 1 : offset + 1;\n            }\n            i++;\n            offset += partitions.get(key).length;\n        }\n        // should be unreachable\n        throw new MingoError(\"rank: invalid return value. please submit a bug report.\");\n    });\n}\n","import { ComputeOptions, computeValue } from \"../../core\";\nimport { assert, groupBy, has } from \"../../util\";\n// lookup key for grouping\nconst ID_KEY = \"_id\";\n/**\n * Groups documents together for the purpose of calculating aggregate values based on a collection of documents.\n *\n * @param collection\n * @param expr\n * @param options\n * @returns {Array}\n */\nexport const $group = (collection, expr, options) => {\n    assert(has(expr, ID_KEY), \"a group specification must include an _id\");\n    const idExpr = expr[ID_KEY];\n    const copts = ComputeOptions.init(options);\n    return collection.transform(((coll) => {\n        const partitions = groupBy(coll, obj => computeValue(obj, idExpr, null, options), options.hashFunction);\n        // remove the group key\n        expr = Object.assign({}, expr);\n        delete expr[ID_KEY];\n        let i = -1;\n        const partitionKeys = Array.from(partitions.keys());\n        const size = partitions.size;\n        return () => {\n            if (++i === size)\n                return { done: true };\n            const groupId = partitionKeys[i];\n            const obj = {};\n            // exclude undefined key value\n            if (groupId !== undefined) {\n                obj[ID_KEY] = groupId;\n            }\n            // compute remaining keys in expression\n            for (const [key, val] of Object.entries(expr)) {\n                obj[key] = computeValue(partitions.get(groupId), val, key, copts.update(null, { groupId }));\n            }\n            return { value: obj, done: false };\n        };\n    }));\n};\n","import { compare, groupBy, into, isEmpty, isObject, isString, resolve } from \"../../util\";\n/**\n * Takes all input documents and returns them in a stream of sorted documents.\n *\n * @param collection\n * @param sortKeys\n * @param  {Object} options\n * @returns {*}\n */\nexport const $sort = (collection, sortKeys, options) => {\n    if (isEmpty(sortKeys) || !isObject(sortKeys))\n        return collection;\n    let cmp = compare;\n    // check for collation spec on the options\n    const collationSpec = options.collation;\n    // use collation comparator if provided\n    if (isObject(collationSpec) && isString(collationSpec.locale)) {\n        cmp = collationComparator(collationSpec);\n    }\n    return collection.transform((coll) => {\n        const modifiers = Object.keys(sortKeys);\n        for (const key of modifiers.reverse()) {\n            const groups = groupBy(coll, (obj) => resolve(obj, key), options.hashFunction);\n            const sortedKeys = Array.from(groups.keys()).sort(cmp);\n            if (sortKeys[key] === -1)\n                sortedKeys.reverse();\n            // reuse collection so the data is available for the next iteration of the sort modifiers.\n            coll = [];\n            sortedKeys.reduce((acc, key) => into(acc, groups.get(key)), coll);\n        }\n        return coll;\n    });\n};\n// MongoDB collation strength to JS localeCompare sensitivity mapping.\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/localeCompare\nconst COLLATION_STRENGTH = {\n    // Only strings that differ in base letters compare as unequal. Examples: a ≠ b, a = á, a = A.\n    1: \"base\",\n    //  Only strings that differ in base letters or accents and other diacritic marks compare as unequal.\n    // Examples: a ≠ b, a ≠ á, a = A.\n    2: \"accent\",\n    // Strings that differ in base letters, accents and other diacritic marks, or case compare as unequal.\n    // Other differences may also be taken into consideration. Examples: a ≠ b, a ≠ á, a ≠ A\n    3: \"variant\"\n    // case - Only strings that differ in base letters or case compare as unequal. Examples: a ≠ b, a = á, a ≠ A.\n};\n/**\n * Creates a comparator function for the given collation spec. See https://docs.mongodb.com/manual/reference/collation/\n *\n * @param spec {Object} The MongoDB collation spec.\n * {\n *   locale: string,\n *   caseLevel: boolean,\n *   caseFirst: string,\n *   strength: int,\n *   numericOrdering: boolean,\n *   alternate: string,\n *   maxVariable: never, // unsupported\n *   backwards: never // unsupported\n * }\n */\nfunction collationComparator(spec) {\n    const localeOpt = {\n        sensitivity: COLLATION_STRENGTH[spec.strength || 3],\n        caseFirst: spec.caseFirst === \"off\" ? \"false\" : spec.caseFirst || \"false\",\n        numeric: spec.numericOrdering || false,\n        ignorePunctuation: spec.alternate === \"shifted\"\n    };\n    // when caseLevel is true for strength  1:base and 2:accent, bump sensitivity to the nearest that supports case comparison\n    if ((spec.caseLevel || false) === true) {\n        if (localeOpt.sensitivity === \"base\")\n            localeOpt.sensitivity = \"case\";\n        if (localeOpt.sensitivity === \"accent\")\n            localeOpt.sensitivity = \"variant\";\n    }\n    const collator = new Intl.Collator(spec.locale, localeOpt);\n    return (a, b) => {\n        // non strings\n        if (!isString(a) || !isString(b))\n            return compare(a, b);\n        // only for strings\n        const i = collator.compare(a, b);\n        if (i < 0)\n            return -1;\n        if (i > 0)\n            return 1;\n        return 0;\n    };\n}\n","// $setWindowFields -  https://docs.mongodb.com/manual/reference/operator/aggregation/setWindowFields/\nimport { getOperator, initOptions, OperatorType } from \"../../core\";\nimport { compose, Lazy } from \"../../lazy\";\nimport { assert, isNumber, isOperator, isString } from \"../../util\";\nimport { $function } from \"../expression/custom/function\";\nimport { $dateAdd } from \"../expression/date/dateAdd\";\nimport { isUnbounded } from \"./_internal\";\nimport { $addFields } from \"./addFields\";\nimport { $group } from \"./group\";\nimport { $sort } from \"./sort\";\n// Operators that require 'sortBy' option.\nconst SORT_REQUIRED_OPS = new Set([\n    \"$denseRank\",\n    \"$documentNumber\",\n    \"$first\",\n    \"$last\",\n    \"$linearFill\",\n    \"$rank\",\n    \"$shift\"\n]);\n// Operators that require unbounded 'window' option.\nconst WINDOW_UNBOUNDED_OPS = new Set([\n    \"$denseRank\",\n    \"$expMovingAvg\",\n    \"$linearFill\",\n    \"$locf\",\n    \"$rank\",\n    \"$shift\"\n]);\n/**\n * Randomly selects the specified number of documents from its input. The given iterator must have finite values\n *\n * @param  {Iterator} collection\n * @param  {Object} expr\n * @param  {Options} options\n * @return {*}\n */\nexport const $setWindowFields = (collection, expr, options) => {\n    options = initOptions(options);\n    options.context.addExpressionOps({ $function });\n    // validate inputs early since this can be an expensive operation.\n    for (const outputExpr of Object.values(expr.output)) {\n        const keys = Object.keys(outputExpr);\n        const op = keys.find(isOperator);\n        assert(!!getOperator(OperatorType.WINDOW, op, options) ||\n            !!getOperator(OperatorType.ACCUMULATOR, op, options), `'${op}' is not a valid window operator`);\n        assert(keys.length > 0 &&\n            keys.length <= 2 &&\n            (keys.length == 1 || keys.includes(\"window\")), \"'output' option should have a single window operator.\");\n        if (outputExpr === null || outputExpr === void 0 ? void 0 : outputExpr.window) {\n            const { documents, range } = outputExpr.window;\n            assert((!!documents && !range) ||\n                (!documents && !!range) ||\n                (!documents && !range), \"'window' option supports only one of 'documents' or 'range'.\");\n        }\n    }\n    // we sort first if required\n    if (expr.sortBy) {\n        collection = $sort(collection, expr.sortBy, options);\n    }\n    // then partition collection\n    collection = $group(collection, {\n        _id: expr.partitionBy,\n        items: { $push: \"$$CURRENT\" }\n    }, options);\n    // transform values\n    return collection.transform(((partitions) => {\n        // let iteratorIndex = 0;\n        const iterators = [];\n        const outputConfig = [];\n        for (const [field, outputExpr] of Object.entries(expr.output)) {\n            const op = Object.keys(outputExpr).find(isOperator);\n            const config = {\n                operatorName: op,\n                func: {\n                    left: getOperator(OperatorType.ACCUMULATOR, op, options),\n                    right: getOperator(OperatorType.WINDOW, op, options)\n                },\n                args: outputExpr[op],\n                field: field,\n                window: outputExpr.window\n            };\n            // sortBy option required for specific operators or bounded window.\n            assert(!!expr.sortBy || !(SORT_REQUIRED_OPS.has(op) || !config.window), `${SORT_REQUIRED_OPS.has(op) ? `'${op}'` : \"bounded window operation\"} requires a sortBy.`);\n            // window must be unbounded for specific operators.\n            assert(!config.window || !WINDOW_UNBOUNDED_OPS.has(op), `${op} does not accept a 'window' field.`);\n            outputConfig.push(config);\n        }\n        // each parition maintains its own closure to process the documents in the window.\n        partitions.forEach(((group) => {\n            // get the items to process\n            const items = group.items;\n            // create an iterator per group.\n            // we need the index of each document so we track it using a special field.\n            let iterator = Lazy(items);\n            // results map\n            const windowResultMap = {};\n            for (const config of outputConfig) {\n                const { func, args, field, window } = config;\n                const makeResultFunc = (getItemsFn) => {\n                    // closure for object index within the partition\n                    let index = -1;\n                    return (obj) => {\n                        ++index;\n                        // process accumulator function\n                        if (func.left) {\n                            return func.left(getItemsFn(obj, index), args, options);\n                        }\n                        else if (func.right) {\n                            // OR process 'window' function\n                            return func.right(obj, getItemsFn(obj, index), {\n                                parentExpr: expr,\n                                inputExpr: args,\n                                documentNumber: index + 1,\n                                field\n                            }, \n                            // must use raw options only since it operates over a collection.\n                            options);\n                        }\n                    };\n                };\n                if (window) {\n                    const { documents, range, unit } = window;\n                    // TODO: fix the meaning of numeric values in range.\n                    //  See definition: https://www.mongodb.com/docs/manual/reference/operator/aggregation/setWindowFields/#std-label-setWindowFields-range\n                    //  - A number to add to the value of the sortBy field for the current document.\n                    //  - A document is in the window if the sortBy field value is inclusively within the lower and upper boundaries.\n                    // TODO: Need to reconcile the two above statments from the doc to implement 'range' option correctly.\n                    const boundary = documents || range;\n                    if (!isUnbounded(window)) {\n                        const [begin, end] = boundary;\n                        const toBeginIndex = (currentIndex) => {\n                            if (begin == \"current\")\n                                return currentIndex;\n                            if (begin == \"unbounded\")\n                                return 0;\n                            return Math.max(begin + currentIndex, 0);\n                        };\n                        const toEndIndex = (currentIndex) => {\n                            if (end == \"current\")\n                                return currentIndex + 1;\n                            if (end == \"unbounded\")\n                                return items.length;\n                            return end + currentIndex + 1;\n                        };\n                        const getItems = (current, index) => {\n                            // handle string boundaries or documents\n                            if (!!documents || boundary.every(isString)) {\n                                return items.slice(toBeginIndex(index), toEndIndex(index));\n                            }\n                            // handle range with numeric boundary values\n                            const sortKey = Object.keys(expr.sortBy)[0];\n                            let lower;\n                            let upper;\n                            if (unit) {\n                                // we are dealing with datetimes\n                                const getTime = (amount) => {\n                                    return $dateAdd(current, {\n                                        startDate: new Date(current[sortKey]),\n                                        unit,\n                                        amount\n                                    }, options).getTime();\n                                };\n                                lower = isNumber(begin) ? getTime(begin) : -Infinity;\n                                upper = isNumber(end) ? getTime(end) : Infinity;\n                            }\n                            else {\n                                const currentValue = current[sortKey];\n                                lower = isNumber(begin) ? currentValue + begin : -Infinity;\n                                upper = isNumber(end) ? currentValue + end : Infinity;\n                            }\n                            let array = items;\n                            if (begin == \"current\")\n                                array = items.slice(index);\n                            if (end == \"current\")\n                                array = items.slice(0, index + 1);\n                            // look within the boundary and filter down\n                            return array.filter((o) => {\n                                const n = +o[sortKey];\n                                return n >= lower && n <= upper;\n                            });\n                        };\n                        windowResultMap[field] = makeResultFunc(getItems);\n                    }\n                }\n                // default action is to utilize the entire set of items\n                if (!windowResultMap[field]) {\n                    windowResultMap[field] = makeResultFunc(_ => items);\n                }\n                // invoke add fields to get the desired behaviour using a custom function.\n                iterator = $addFields(iterator, {\n                    [field]: {\n                        $function: {\n                            body: (obj) => windowResultMap[field](obj),\n                            args: [\"$$CURRENT\"]\n                        }\n                    }\n                }, options);\n            }\n            // add to iterator list\n            iterators.push(iterator);\n        }));\n        return compose(...iterators);\n    }));\n};\n","/**\n * Predicates used for Query and Expression operators.\n */\nimport { computeValue } from \"../core\";\nimport { Query } from \"../query\";\nimport { MingoError } from \"../types\";\nimport { compare as mingoCmp, ensureArray, flatten, getType, inArray, intersection, isArray, isBoolean, isDate, isEmpty, isEqual, isNil, isNumber, isObject, isOperator, isRegExp, isString, MAX_INT, MAX_LONG, MIN_INT, MIN_LONG, resolve, truthy } from \"../util\";\n/**\n * Returns a query operator created from the predicate\n *\n * @param predicate Predicate function\n */\nexport function createQueryOperator(predicate) {\n    const f = (selector, value, options) => {\n        const opts = { unwrapArray: true };\n        const depth = Math.max(1, selector.split(\".\").length - 1);\n        return (obj) => {\n            // value of field must be fully resolved.\n            const lhs = resolve(obj, selector, opts);\n            return predicate(lhs, value, Object.assign(Object.assign({}, options), { depth }));\n        };\n    };\n    f.op = \"query\";\n    return f; // as QueryOperator;\n}\n/**\n * Returns an expression operator created from the predicate\n *\n * @param predicate Predicate function\n */\nexport function createExpressionOperator(predicate) {\n    return (obj, expr, options) => {\n        const args = computeValue(obj, expr, null, options);\n        return predicate(...args);\n    };\n}\n/**\n * Checks that two values are equal.\n *\n * @param a         The lhs operand as resolved from the object by the given selector\n * @param b         The rhs operand provided by the user\n * @returns {*}\n */\nexport function $eq(a, b, options) {\n    // start with simple equality check\n    if (isEqual(a, b))\n        return true;\n    // https://docs.mongodb.com/manual/tutorial/query-for-null-fields/\n    if (isNil(a) && isNil(b))\n        return true;\n    // check\n    if (a instanceof Array) {\n        const eq = isEqual.bind(null, b);\n        return a.some(eq) || flatten(a, options === null || options === void 0 ? void 0 : options.depth).some(eq);\n    }\n    return false;\n}\n/**\n * Matches all values that are not equal to the value specified in the query.\n *\n * @param a\n * @param b\n * @returns {boolean}\n */\nexport function $ne(a, b, options) {\n    return !$eq(a, b, options);\n}\n/**\n * Matches any of the values that exist in an array specified in the query.\n *\n * @param a\n * @param b\n * @returns {*}\n */\nexport function $in(a, b, options) {\n    // queries for null should be able to find undefined fields\n    if (isNil(a))\n        return b.some(v => v === null);\n    return intersection([ensureArray(a), b], options === null || options === void 0 ? void 0 : options.hashFunction).length > 0;\n}\n/**\n * Matches values that do not exist in an array specified to the query.\n *\n * @param a\n * @param b\n * @returns {*|boolean}\n */\nexport function $nin(a, b, options) {\n    return !$in(a, b, options);\n}\n/**\n * Matches values that are less than the value specified in the query.\n *\n * @param a\n * @param b\n * @returns {boolean}\n */\nexport function $lt(a, b, _options) {\n    return compare(a, b, (x, y) => mingoCmp(x, y) < 0);\n}\n/**\n * Matches values that are less than or equal to the value specified in the query.\n *\n * @param a\n * @param b\n * @returns {boolean}\n */\nexport function $lte(a, b, _options) {\n    return compare(a, b, (x, y) => mingoCmp(x, y) <= 0);\n}\n/**\n * Matches values that are greater than the value specified in the query.\n *\n * @param a\n * @param b\n * @returns {boolean}\n */\nexport function $gt(a, b, _options) {\n    return compare(a, b, (x, y) => mingoCmp(x, y) > 0);\n}\n/**\n * Matches values that are greater than or equal to the value specified in the query.\n *\n * @param a\n * @param b\n * @returns {boolean}\n */\nexport function $gte(a, b, _options) {\n    return compare(a, b, (x, y) => mingoCmp(x, y) >= 0);\n}\n/**\n * Performs a modulo operation on the value of a field and selects documents with a specified result.\n *\n * @param a\n * @param b\n * @returns {boolean}\n */\nexport function $mod(a, b, _options) {\n    return ensureArray(a).some(((x) => b.length === 2 && x % b[0] === b[1]));\n}\n/**\n * Selects documents where values match a specified regular expression.\n *\n * @param a\n * @param b\n * @returns {boolean}\n */\nexport function $regex(a, b, options) {\n    const lhs = ensureArray(a);\n    const match = (x) => isString(x) && truthy(b.exec(x), options === null || options === void 0 ? void 0 : options.useStrictMode);\n    return lhs.some(match) || flatten(lhs, 1).some(match);\n}\n/**\n * Matches documents that have the specified field.\n *\n * @param a\n * @param b\n * @returns {boolean}\n */\nexport function $exists(a, b, _options) {\n    return (((b === false || b === 0) && a === undefined) ||\n        ((b === true || b === 1) && a !== undefined));\n}\n/**\n * Matches arrays that contain all elements specified in the query.\n *\n * @param values\n * @param queries\n * @returns boolean\n */\nexport function $all(values, queries, options) {\n    if (!isArray(values) ||\n        !isArray(queries) ||\n        !values.length ||\n        !queries.length) {\n        return false;\n    }\n    let matched = true;\n    for (const query of queries) {\n        // no need to check all the queries.\n        if (!matched)\n            break;\n        if (isObject(query) && inArray(Object.keys(query), \"$elemMatch\")) {\n            matched = $elemMatch(values, query[\"$elemMatch\"], options);\n        }\n        else if (query instanceof RegExp) {\n            matched = values.some(s => typeof s === \"string\" && query.test(s));\n        }\n        else {\n            matched = values.some(v => isEqual(query, v));\n        }\n    }\n    return matched;\n}\n/**\n * Selects documents if the array field is a specified size.\n *\n * @param a\n * @param b\n * @returns {*|boolean}\n */\nexport function $size(a, b, _options) {\n    return Array.isArray(a) && a.length === b;\n}\nfunction isNonBooleanOperator(name) {\n    return isOperator(name) && [\"$and\", \"$or\", \"$nor\"].indexOf(name) === -1;\n}\n/**\n * Selects documents if element in the array field matches all the specified $elemMatch condition.\n *\n * @param a {Array} element to match against\n * @param b {Object} subquery\n */\nexport function $elemMatch(a, b, options) {\n    // should return false for non-matching input\n    if (isArray(a) && !isEmpty(a)) {\n        let format = (x) => x;\n        let criteria = b;\n        // If we find a boolean operator in the subquery, we fake a field to point to it. This is an\n        // attempt to ensure that it is a valid criteria. We cannot make this substitution for operators\n        // like $and/$or/$nor; as otherwise, this faking will break our query.\n        if (Object.keys(b).every(isNonBooleanOperator)) {\n            criteria = { temp: b };\n            format = x => ({ temp: x });\n        }\n        const query = new Query(criteria, options);\n        for (let i = 0, len = a.length; i < len; i++) {\n            if (query.test(format(a[i]))) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n// helper functions\nconst isNull = (a) => a === null;\nconst isInt = (a) => isNumber(a) &&\n    a >= MIN_INT &&\n    a <= MAX_INT &&\n    a.toString().indexOf(\".\") === -1;\nconst isLong = (a) => isNumber(a) &&\n    a >= MIN_LONG &&\n    a <= MAX_LONG &&\n    a.toString().indexOf(\".\") === -1;\n/** Mapping of type to predicate */\nconst compareFuncs = {\n    array: isArray,\n    bool: isBoolean,\n    boolean: isBoolean,\n    date: isDate,\n    decimal: isNumber,\n    double: isNumber,\n    int: isInt,\n    long: isLong,\n    number: isNumber,\n    null: isNull,\n    object: isObject,\n    regex: isRegExp,\n    regexp: isRegExp,\n    string: isString,\n    // added for completeness\n    undefined: isNil, // deprecated\n    function: (_) => {\n        throw new MingoError(\"unsupported type key `function`.\");\n    },\n    // Mongo identifiers\n    1: isNumber, //double\n    2: isString,\n    3: isObject,\n    4: isArray,\n    6: isNil, // deprecated\n    8: isBoolean,\n    9: isDate,\n    10: isNull,\n    11: isRegExp,\n    16: isInt,\n    18: isLong,\n    19: isNumber //decimal\n};\n/**\n * Selects documents if a field is of the specified type.\n *\n * @param a\n * @param b\n * @returns {boolean}\n */\nfunction compareType(a, b, _) {\n    const f = compareFuncs[b];\n    return f ? f(a) : false;\n}\n/**\n * Selects documents if a field is of the specified type.\n *\n * @param a\n * @param b\n * @returns {boolean}\n */\nexport function $type(a, b, options) {\n    return Array.isArray(b)\n        ? b.findIndex(t => compareType(a, t, options)) >= 0\n        : compareType(a, b, options);\n}\nfunction compare(a, b, f) {\n    return ensureArray(a).some(x => getType(x) === getType(b) && f(x, b));\n}\n","// Array Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#array-expression-operators\nimport { $nin as __nin, createExpressionOperator } from \"../../_predicates\";\n/**\n * Returns a boolean indicating whether a specified value is not an array.\n * Note: This expression operator is missing from the documentation\n *\n * @param {Object} obj\n * @param {Array} expr\n */\nexport const $nin = createExpressionOperator(__nin);\n","import { computeValue } from \"../../../core\";\nimport { assert, isArray, isNil, isNumber } from \"../../../util\";\nexport const bitwise = (op, compute) => (obj, expr, options) => {\n    assert(isArray(expr), `${op}: expression must be an array.`);\n    const nums = computeValue(obj, expr, null, options);\n    if (nums.some(isNil))\n        return null;\n    assert(nums.every(isNumber), `${op}: expression must evalue to array of numbers.`);\n    return compute(nums);\n};\n","// Bitwise Operators: https://www.mongodb.com/docs/manual/reference/operator/aggregation/bitAnd/#mongodb-expression-exp\nimport { bitwise } from \"./_internal\";\n/**\n * Returns the result of a bitwise and operation on an array of int or long values.\n *\n * @param obj RawObject from collection\n * @param expr Right hand side expression of operator\n * @returns {Number}\n */\nexport const $bitAnd = bitwise(\"$bitAnd\", nums => nums.reduce((a, b) => a & b, -1));\n","// Bitwise Operators: https://www.mongodb.com/docs/manual/reference/operator/aggregation/bitOr/#mongodb-expression-exp\nimport { bitwise } from \"./_internal\";\n/**\n * Returns the result of a bitwise or operation on an array of int or long values.\n *\n * @param obj RawObject from collection\n * @param expr Right hand side expression of operator\n * @returns {Number}\n */\nexport const $bitOr = bitwise(\"$bitOr\", nums => nums.reduce((a, b) => a | b, 0));\n","// Bitwise Operators: https://www.mongodb.com/docs/manual/reference/operator/aggregation/bitNot/#mongodb-expression-exp\nimport { bitwise } from \"./_internal\";\n/**\n * Returns the result of a bitwise xor (exclusive or) operation on an array of int and long values.\n *\n * @param obj RawObject from collection\n * @param expr Right hand side expression of operator\n * @returns {Number}\n */\nexport const $bitXor = bitwise(\"$bitXor\", nums => nums.reduce((a, b) => a ^ b, 0));\n","// Comparison Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#comparison-expression-operators\nimport { $eq as __eq, createExpressionOperator } from \"../../_predicates\";\n/**\n * Matches values that are equal to a specified value.\n */\nexport const $eq = createExpressionOperator(__eq);\n","// Comparison Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#comparison-expression-operators\nimport { $gt as __gt, createExpressionOperator } from \"../../_predicates\";\n/**\n * Matches values that are greater than a specified value.\n */\nexport const $gt = createExpressionOperator(__gt);\n","// Comparison Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#comparison-expression-operators\nimport { $gte as __gte, createExpressionOperator } from \"../../_predicates\";\n/**\n * \tMatches values that are greater than or equal to a specified value.\n */\nexport const $gte = createExpressionOperator(__gte);\n","// Comparison Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#comparison-expression-operators\nimport { $lt as __lt, createExpressionOperator } from \"../../_predicates\";\n/**\n * Matches values that are less than the value specified in the query.\n */\nexport const $lt = createExpressionOperator(__lt);\n","// Comparison Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#comparison-expression-operators\nimport { $lte as __lte, createExpressionOperator } from \"../../_predicates\";\n/**\n * Matches values that are less than or equal to the value specified in the query.\n */\nexport const $lte = createExpressionOperator(__lte);\n","// Comparison Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#comparison-expression-operators\nimport { $ne as __ne, createExpressionOperator } from \"../../_predicates\";\n/**\n * Matches all values that are not equal to the value specified in the query.\n */\nexport const $ne = createExpressionOperator(__ne);\n","// Date Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#date-expression-operators\nimport { computeValue } from \"../../../core\";\nimport { DATE_PART_INTERVAL, isLeapYear, MINUTES_PER_HOUR, parseTimezone } from \"./_internal\";\nconst DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nconst getDaysInMonth = (date) => {\n    return date.month == 2 && isLeapYear(date.year)\n        ? 29\n        : DAYS_IN_MONTH[date.month - 1];\n};\n/**\n * Constructs and returns a Date object given the date’s constituent properties.\n *\n * @param obj The document\n * @param expr The date expression\n * @param options Options\n */\nexport const $dateFromParts = (obj, expr, options) => {\n    const args = computeValue(obj, expr, null, options);\n    const minuteOffset = parseTimezone(args.timezone);\n    // assign default and adjust value ranges of the different parts\n    for (let i = DATE_PART_INTERVAL.length - 1, remainder = 0; i >= 0; i--) {\n        const datePartInterval = DATE_PART_INTERVAL[i];\n        const k = datePartInterval[0];\n        const min = datePartInterval[1];\n        const max = datePartInterval[2];\n        // add remainder from previous part. units should already be correct\n        let part = (args[k] || 0) + remainder;\n        // reset remainder now that it's been used.\n        remainder = 0;\n        // 1. compute the remainder for the next part\n        // 2. adjust the current part to a valid range\n        // 3. assign back to 'args'\n        const limit = max + 1;\n        // invert timezone to adjust the hours to UTC\n        if (k == \"hour\")\n            part += Math.floor(minuteOffset / MINUTES_PER_HOUR) * -1;\n        if (k == \"minute\")\n            part += (minuteOffset % MINUTES_PER_HOUR) * -1;\n        // smaller than lower bound\n        if (part < min) {\n            const delta = min - part;\n            remainder = -1 * Math.ceil(delta / limit);\n            part = limit - (delta % limit);\n        }\n        else if (part > max) {\n            // offset with the 'min' value to adjust non-zero date parts correctly\n            part += min;\n            remainder = Math.trunc(part / limit);\n            part %= limit;\n        }\n        // reassign\n        args[k] = part;\n    }\n    // adjust end of month to correctly handle overflows\n    args.day = Math.min(args.day, getDaysInMonth(args));\n    return new Date(Date.UTC(args.year, args.month - 1, args.day, args.hour, args.minute, args.second, args.millisecond));\n};\n","// Date Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#date-expression-operators\nimport { computeValue } from \"../../../core\";\nimport { assert, isNil, isObject } from \"../../../util\";\nimport { adjustDate, DATE_FORMAT, DATE_SYM_TABLE, MINUTES_PER_HOUR, parseTimezone, regexQuote, regexStrip } from \"./_internal\";\nconst buildMap = (letters, sign) => {\n    const h = {};\n    letters.split(\"\").forEach((v, i) => (h[v] = sign * (i + 1)));\n    return h;\n};\nconst TZ_LETTER_OFFSETS = Object.assign(Object.assign(Object.assign({}, buildMap(\"ABCDEFGHIKLM\", 1)), buildMap(\"NOPQRSTUVWXY\", -1)), { Z: 0 });\n/**\n * Converts a date/time string to a date object.\n * @param obj\n * @param expr\n */\nexport const $dateFromString = (obj, expr, options) => {\n    const args = computeValue(obj, expr, null, options);\n    args.format = args.format || DATE_FORMAT;\n    args.onNull = args.onNull || null;\n    let dateString = args.dateString;\n    if (isNil(dateString))\n        return args.onNull;\n    // collect all separators of the format string\n    const separators = args.format.split(/%[YGmdHMSLuVzZ]/);\n    separators.reverse();\n    const matches = args.format.match(/(%%|%Y|%G|%m|%d|%H|%M|%S|%L|%u|%V|%z|%Z)/g);\n    const dateParts = {};\n    // holds the valid regex of parts that matches input date string\n    let expectedPattern = \"\";\n    for (let i = 0, len = matches.length; i < len; i++) {\n        const formatSpecifier = matches[i];\n        const props = DATE_SYM_TABLE[formatSpecifier];\n        if (isObject(props)) {\n            // get pattern and alias from table\n            const m = props.re.exec(dateString);\n            // get the next separtor\n            const delimiter = separators.pop() || \"\";\n            if (m !== null) {\n                // store and cut out matched part\n                dateParts[props.name] = /^\\d+$/.exec(m[0]) ? parseInt(m[0]) : m[0];\n                dateString =\n                    dateString.substr(0, m.index) +\n                        dateString.substr(m.index + m[0].length);\n                // construct expected pattern\n                expectedPattern +=\n                    regexQuote(delimiter) + regexStrip(props.re.toString());\n            }\n            else {\n                dateParts[props.name] = null;\n            }\n        }\n    }\n    // 1. validate all required date parts exists\n    // 2. validate original dateString against expected pattern.\n    if (isNil(dateParts.year) ||\n        isNil(dateParts.month) ||\n        isNil(dateParts.day) ||\n        !new RegExp(\"^\" + expectedPattern + \"[A-Z]?$\").exec(args.dateString)) {\n        return args.onError;\n    }\n    const m = args.dateString.match(/([A-Z])$/);\n    assert(\n    // only one of in-date timeone or timezone argument but not both.\n    !(m && args.timezone), `$dateFromString: you cannot pass in a date/time string with time zone information ('${m && m[0]}') together with a timezone argument`);\n    const minuteOffset = m\n        ? TZ_LETTER_OFFSETS[m[0]] * MINUTES_PER_HOUR\n        : parseTimezone(args.timezone);\n    // create the date. month is 0-based in Date\n    const d = new Date(Date.UTC(dateParts.year, dateParts.month - 1, dateParts.day, 0, 0, 0));\n    if (!isNil(dateParts.hour))\n        d.setUTCHours(dateParts.hour);\n    if (!isNil(dateParts.minute))\n        d.setUTCMinutes(dateParts.minute);\n    if (!isNil(dateParts.second))\n        d.setUTCSeconds(dateParts.second);\n    if (!isNil(dateParts.millisecond))\n        d.setUTCMilliseconds(dateParts.millisecond);\n    // adjust to the correct represention for UTC\n    adjustDate(d, -minuteOffset);\n    return d;\n};\n","/**\n * String Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#string-expression-operators\n */\nimport { computeValue } from \"../../../core\";\nimport { assert, isNumber, isString } from \"../../../util\";\nconst UTF8_MASK = [0xc0, 0xe0, 0xf0];\n// encodes a unicode code point to a utf8 byte sequence\n// https://encoding.spec.whatwg.org/#utf-8\nfunction toUtf8(n) {\n    if (n < 0x80)\n        return [n];\n    let count = (n < 0x0800 && 1) || (n < 0x10000 && 2) || 3;\n    const offset = UTF8_MASK[count - 1];\n    const utf8 = [(n >> (6 * count)) + offset];\n    while (count > 0)\n        utf8.push(0x80 | ((n >> (6 * --count)) & 0x3f));\n    return utf8;\n}\nfunction utf8Encode(s) {\n    const buf = [];\n    for (let i = 0, len = s.length; i < len; i++) {\n        buf.push(toUtf8(s.codePointAt(i)));\n    }\n    return buf;\n}\n/**\n * Returns a substring of a string, starting at a specified index position and including the specified number of characters.\n * The index is zero-based.\n *\n * @param obj\n * @param expr\n * @returns {string}\n */\nexport const $substrBytes = (obj, expr, options) => {\n    const args = computeValue(obj, expr, null, options);\n    const s = args[0];\n    const index = args[1];\n    const count = args[2];\n    assert(isString(s) &&\n        isNumber(index) &&\n        index >= 0 &&\n        isNumber(count) &&\n        count >= 0, \"$substrBytes: invalid arguments\");\n    const buf = utf8Encode(s);\n    const validIndex = [];\n    let acc = 0;\n    for (let i = 0; i < buf.length; i++) {\n        validIndex.push(acc);\n        acc += buf[i].length;\n    }\n    const begin = validIndex.indexOf(index);\n    const end = validIndex.indexOf(index + count);\n    assert(begin > -1 && end > -1, \"$substrBytes: invalid range, start or end index is a UTF-8 continuation byte.\");\n    return s.substring(begin, end);\n};\n","// Trignometry Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#trigonometry-expression-operators\nimport { computeValue } from \"../../../core\";\nimport { MingoError } from \"../../../types\";\nconst FIXED_POINTS = {\n    undefined: null,\n    null: null,\n    NaN: NaN,\n    Infinity: new Error(),\n    \"-Infinity\": new Error()\n};\n/**\n * Returns an operator for a given trignometric function\n *\n * @param f The trignometric function\n */\nexport function createTrignometryOperator(f, fixedPoints = FIXED_POINTS) {\n    const fp = Object.assign({}, FIXED_POINTS, fixedPoints);\n    const keySet = new Set(Object.keys(fp));\n    return (obj, expr, options) => {\n        const n = computeValue(obj, expr, null, options);\n        if (keySet.has(`${n}`)) {\n            const res = fp[`${n}`];\n            if (res instanceof Error) {\n                throw new MingoError(`cannot apply $${f.name} to -inf, value must in (-inf,inf)`);\n            }\n            return res;\n        }\n        return f(n);\n    };\n}\n","// Trignometry Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#trigonometry-expression-operators\nimport { createTrignometryOperator } from \"./_internal\";\n/** Returns the inverse cosine (arc cosine) of a value in radians. */\nexport const $acos = createTrignometryOperator(Math.acos, {\n    Infinity: Infinity,\n    0: new Error(),\n});\n","// Trignometry Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#trigonometry-expression-operators\nimport { createTrignometryOperator } from \"./_internal\";\n/** Returns the inverse hyperbolic cosine (hyperbolic arc cosine) of a value in radians. */\nexport const $acosh = createTrignometryOperator(Math.acosh, {\n    Infinity: Infinity,\n    0: new Error(),\n});\n","// Trignometry Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#trigonometry-expression-operators\nimport { createTrignometryOperator } from \"./_internal\";\n/** Returns the inverse sin (arc sine) of a value in radians. */\nexport const $asin = createTrignometryOperator(Math.asin);\n","// Trignometry Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#trigonometry-expression-operators\nimport { createTrignometryOperator } from \"./_internal\";\n/** Returns the inverse hyperbolic sine (hyperbolic arc sine) of a value in radians. */\nexport const $asinh = createTrignometryOperator(Math.asinh, {\n    Infinity: Infinity,\n    \"-Infinity\": -Infinity,\n});\n","// Trignometry Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#trigonometry-expression-operators\nimport { createTrignometryOperator } from \"./_internal\";\n/** Returns the inverse tangent (arc tangent) of a value in radians. */\nexport const $atan = createTrignometryOperator(Math.atan);\n","// Trignometry Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#trigonometry-expression-operators\nimport { createTrignometryOperator } from \"./_internal\";\n/** Returns the inverse hyperbolic tangent (hyperbolic arc tangent) of a value in radians. */\nexport const $atanh = createTrignometryOperator(Math.atanh, {\n    1: Infinity,\n    \"-1\": -Infinity,\n});\n","// Trignometry Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#trigonometry-expression-operators\nimport { createTrignometryOperator } from \"./_internal\";\n/** Returns the cosine of a value that is measured in radians. */\nexport const $cos = createTrignometryOperator(Math.cos);\n","// Trignometry Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#trigonometry-expression-operators\nimport { createTrignometryOperator } from \"./_internal\";\n/** Returns the hyperbolic cosine of a value that is measured in radians. */\nexport const $cosh = createTrignometryOperator(Math.cosh, {\n    \"-Infinity\": Infinity,\n    Infinity: Infinity,\n    // [Math.PI]: -1,\n});\n","// Trignometry Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#trigonometry-expression-operators\nimport { createTrignometryOperator } from \"./_internal\";\nconst RADIANS_FACTOR = Math.PI / 180;\n/** Converts a value from degrees to radians. */\nexport const $degreesToRadians = createTrignometryOperator((n) => n * RADIANS_FACTOR, {\n    Infinity: Infinity,\n    \"-Infinity\": Infinity,\n});\n","// Trignometry Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#trigonometry-expression-operators\nimport { createTrignometryOperator } from \"./_internal\";\nconst DEGREES_FACTOR = 180 / Math.PI;\n/** Converts a value from radians to degrees. */\nexport const $radiansToDegrees = createTrignometryOperator((n) => n * DEGREES_FACTOR, {\n    Infinity: Infinity,\n    \"-Infinity\": -Infinity,\n});\n","// Trignometry Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#trigonometry-expression-operators\nimport { createTrignometryOperator } from \"./_internal\";\n/** Returns the sine of a value that is measured in radians. */\nexport const $sin = createTrignometryOperator(Math.sin);\n","// Trignometry Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#trigonometry-expression-operators\nimport { createTrignometryOperator } from \"./_internal\";\n/** Returns the hyperbolic sine of a value that is measured in radians. */\nexport const $sinh = createTrignometryOperator(Math.sinh, {\n    \"-Infinity\": -Infinity,\n    Infinity: Infinity,\n});\n","// Trignometry Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#trigonometry-expression-operators\nimport { createTrignometryOperator } from \"./_internal\";\n/** Returns the tangent of a value that is measured in radians. */\nexport const $tan = createTrignometryOperator(Math.tan);\n","import { computeValue } from \"../../../core\";\nimport { isNil, isNumber, isString } from \"../../../util\";\nexport class TypeConvertError extends Error {\n    constructor(message) {\n        super(message);\n    }\n}\nexport function toInteger(obj, expr, options, max, min, typename) {\n    const val = computeValue(obj, expr, null, options);\n    if (isNil(val))\n        return null;\n    if (val instanceof Date)\n        return val.getTime();\n    if (val === true)\n        return 1;\n    if (val === false)\n        return 0;\n    const n = Number(val);\n    if (isNumber(n) && n >= min && n <= max) {\n        // weirdly a decimal in string format cannot be converted to int.\n        // so we must check input if not string or if it is, not in decimal format\n        if (!isString(val) || n.toString().indexOf(\".\") === -1) {\n            return Math.trunc(n);\n        }\n    }\n    throw new TypeConvertError(`cannot convert '${val}' to ${typename}`);\n}\n","/**\n * Type Expression Operators: https://docs.mongodb.com/manual/reference/operator/aggregation/#type-expression-operators\n */\nimport { computeValue } from \"../../../core\";\nimport { isNil, isString } from \"../../../util\";\n/**\n * Converts a value to a boolean.\n *\n * @param obj\n * @param expr\n */\nexport const $toBool = (obj, expr, options) => {\n    const val = computeValue(obj, expr, null, options);\n    if (isNil(val))\n        return null;\n    if (isString(val))\n        return true;\n    return Boolean(val);\n};\n","import { ComputeOptions, computeValue, getOperator, OperatorType } from \"../../core\";\nimport { assert, ensureArray, filterMissing, has, inArray, into, isEmpty, isNil, isNumber, isObject, isOperator, isString, merge, notInArray, removeValue, resolveGraph, setValue } from \"../../util\";\n/**\n * Reshapes a document stream.\n * $project can rename, add, or remove fields as well as create computed values and sub-documents.\n *\n * @param collection\n * @param expr\n * @param opt\n * @returns {Array}\n */\nexport const $project = (collection, expr, options) => {\n    if (isEmpty(expr))\n        return collection;\n    // result collection\n    let expressionKeys = Object.keys(expr);\n    let idOnlyExcluded = false;\n    // validate inclusion and exclusion\n    validateExpression(expr, options);\n    const ID_KEY = options.idKey;\n    if (inArray(expressionKeys, ID_KEY)) {\n        const id = expr[ID_KEY];\n        if (id === 0 || id === false) {\n            expressionKeys = expressionKeys.filter(notInArray.bind(null, [ID_KEY]));\n            idOnlyExcluded = expressionKeys.length == 0;\n        }\n    }\n    else {\n        // if not specified the add the ID field\n        expressionKeys.push(ID_KEY);\n    }\n    const copts = ComputeOptions.init(options);\n    return collection.map(((obj) => processObject(obj, expr, copts.update(obj), expressionKeys, idOnlyExcluded)));\n};\n/**\n * Process the expression value for $project operators\n *\n * @param {Object} obj The object to use as options\n * @param {Object} expr The experssion object of $project operator\n * @param {Array} expressionKeys The key in the 'expr' object\n * @param {Boolean} idOnlyExcluded Boolean value indicating whether only the ID key is excluded\n */\nfunction processObject(obj, expr, options, expressionKeys, idOnlyExcluded) {\n    let newObj = {};\n    let foundSlice = false;\n    let foundExclusion = false;\n    const dropKeys = [];\n    if (idOnlyExcluded) {\n        dropKeys.push(options.idKey);\n    }\n    for (const key of expressionKeys) {\n        // final computed value of the key\n        let value = undefined;\n        // expression to associate with key\n        const subExpr = expr[key];\n        if (key !== options.idKey && inArray([0, false], subExpr)) {\n            foundExclusion = true;\n        }\n        if (key === options.idKey && isEmpty(subExpr)) {\n            // tiny optimization here to skip over id\n            value = obj[key];\n        }\n        else if (isString(subExpr)) {\n            value = computeValue(obj, subExpr, key, options);\n        }\n        else if (inArray([1, true], subExpr)) {\n            // For direct projections, we use the resolved object value\n        }\n        else if (subExpr instanceof Array) {\n            value = subExpr.map(v => {\n                const r = computeValue(obj, v, null, options);\n                if (isNil(r))\n                    return null;\n                return r;\n            });\n        }\n        else if (isObject(subExpr)) {\n            const subExprObj = subExpr;\n            const subExprKeys = Object.keys(subExpr);\n            const operator = subExprKeys.length == 1 ? subExprKeys[0] : \"\";\n            // first try a projection operator\n            const call = getOperator(OperatorType.PROJECTION, operator, options);\n            if (call) {\n                // apply the projection operator on the operator expression for the key\n                if (operator === \"$slice\") {\n                    // $slice is handled differently for aggregation and projection operations\n                    if (ensureArray(subExprObj[operator]).every(isNumber)) {\n                        // $slice for projection operation\n                        value = call(obj, subExprObj[operator], key, options);\n                        foundSlice = true;\n                    }\n                    else {\n                        // $slice for aggregation operation\n                        value = computeValue(obj, subExprObj, key, options);\n                    }\n                }\n                else {\n                    value = call(obj, subExprObj[operator], key, options);\n                }\n            }\n            else if (isOperator(operator)) {\n                // compute if operator key\n                value = computeValue(obj, subExprObj[operator], operator, options);\n            }\n            else if (has(obj, key)) {\n                // compute the value for the sub expression for the key\n                validateExpression(subExprObj, options);\n                let target = obj[key];\n                if (target instanceof Array) {\n                    value = target.map((o) => processObject(o, subExprObj, options, subExprKeys, false));\n                }\n                else {\n                    target = isObject(target) ? target : obj;\n                    value = processObject(target, subExprObj, options, subExprKeys, false);\n                }\n            }\n            else {\n                // compute the value for the sub expression for the key\n                value = computeValue(obj, subExpr, null, options);\n            }\n        }\n        else {\n            dropKeys.push(key);\n            continue;\n        }\n        // get value with object graph\n        const objPathGraph = resolveGraph(obj, key, {\n            preserveMissing: true\n        });\n        // add the value at the path\n        if (objPathGraph !== undefined) {\n            merge(newObj, objPathGraph, {\n                flatten: true\n            });\n        }\n        // if computed add/or remove accordingly\n        if (notInArray([0, 1, false, true], subExpr)) {\n            if (value === undefined) {\n                removeValue(newObj, key, { descendArray: true });\n            }\n            else {\n                setValue(newObj, key, value);\n            }\n        }\n    }\n    // filter out all missing values preserved to support correct merging\n    filterMissing(newObj);\n    // For the following cases we include all keys on the object that were not explicitly excluded.\n    //\n    // 1. projection included $slice operator\n    // 2. some fields were explicitly excluded\n    // 3. only the id field was excluded\n    if (foundSlice || foundExclusion || idOnlyExcluded) {\n        newObj = into({}, obj, newObj);\n        if (dropKeys.length > 0) {\n            for (const k of dropKeys) {\n                removeValue(newObj, k, { descendArray: true });\n            }\n        }\n    }\n    return newObj;\n}\n/**\n * Validate inclusion and exclusion values in expression\n *\n * @param {Object} expr The expression given for the projection\n */\nfunction validateExpression(expr, options) {\n    const check = [false, false];\n    for (const [k, v] of Object.entries(expr)) {\n        if (k === (options === null || options === void 0 ? void 0 : options.idKey))\n            return;\n        if (v === 0 || v === false) {\n            check[0] = true;\n        }\n        else if (v === 1 || v === true) {\n            check[1] = true;\n        }\n        assert(!(check[0] && check[1]), \"Projection cannot have a mix of inclusion and exclusion.\");\n    }\n}\n","import { ComputeOptions, redact } from \"../../core\";\n/**\n * Restricts the contents of the documents based on information stored in the documents themselves.\n *\n * https://docs.mongodb.com/manual/reference/operator/aggregation/redact/\n */\nexport const $redact = (collection, expr, options) => {\n    const copts = ComputeOptions.init(options);\n    return collection.map(((obj) => redact(obj, expr, copts.update(obj))));\n};\n","// Query Logical Operators: https://docs.mongodb.com/manual/reference/operator/query-logical/\nimport { Query } from \"../../../query\";\nimport { assert, isArray } from \"../../../util\";\n/**\n * Joins query clauses with a logical AND returns all documents that match the conditions of both clauses.\n *\n * @param selector\n * @param rhs\n * @returns {Function}\n */\nexport const $and = (_, rhs, options) => {\n    assert(isArray(rhs), \"Invalid expression: $and expects value to be an Array.\");\n    const queries = rhs.map(expr => new Query(expr, options));\n    return (obj) => queries.every(q => q.test(obj));\n};\n","// Query Logical Operators: https://docs.mongodb.com/manual/reference/operator/query-logical/\nimport { Query } from \"../../../query\";\nimport { assert, isArray } from \"../../../util\";\n/**\n * Joins query clauses with a logical OR returns all documents that match the conditions of either clause.\n *\n * @param selector\n * @param rhs\n * @returns {Function}\n */\nexport const $or = (_, rhs, options) => {\n    assert(isArray(rhs), \"Invalid expression. $or expects value to be an Array\");\n    const queries = rhs.map(expr => new Query(expr, options));\n    return (obj) => queries.some(q => q.test(obj));\n};\n","// Query Logical Operators: https://docs.mongodb.com/manual/reference/operator/query-logical/\nimport { assert, isArray } from \"../../../util\";\nimport { $or } from \"./or\";\n/**\n * Joins query clauses with a logical NOR returns all documents that fail to match both clauses.\n *\n * @param selector\n * @param rhs\n * @returns {Function}\n */\nexport const $nor = (_, rhs, options) => {\n    assert(isArray(rhs), \"Invalid expression. $nor expects value to be an array.\");\n    const f = $or(\"$or\", rhs, options);\n    return (obj) => !f(obj);\n};\n","// Query Logical Operators: https://docs.mongodb.com/manual/reference/operator/query-logical/\nimport { Query } from \"../../../query\";\nimport { normalize } from \"../../../util\";\n/**\n * Inverts the effect of a query expression and returns documents that do not match the query expression.\n *\n * @param selector\n * @param rhs\n * @returns {Function}\n */\nexport const $not = (selector, rhs, options) => {\n    const criteria = {};\n    criteria[selector] = normalize(rhs);\n    const query = new Query(criteria, options);\n    return (obj) => !query.test(obj);\n};\n","// Query Comparison Operators: https://docs.mongodb.com/manual/reference/operator/query-comparison/\nimport { $eq as __eq, createQueryOperator } from \"../../_predicates\";\n/**\n * Matches values that are equal to a specified value.\n */\nexport const $eq = createQueryOperator(__eq);\n","// Query Comparison Operators: https://docs.mongodb.com/manual/reference/operator/query-comparison/\nimport { $gt as __gt, createQueryOperator } from \"../../_predicates\";\n/**\n * Matches values that are greater than a specified value.\n */\nexport const $gt = createQueryOperator(__gt);\n","// Query Comparison Operators: https://docs.mongodb.com/manual/reference/operator/query-comparison/\nimport { $gte as __gte, createQueryOperator } from \"../../_predicates\";\n/**\n * \tMatches values that are greater than or equal to a specified value.\n */\nexport const $gte = createQueryOperator(__gte);\n","// Query Comparison Operators: https://docs.mongodb.com/manual/reference/operator/query-comparison/\nimport { $in as __in, createQueryOperator } from \"../../_predicates\";\n/**\n * Matches any of the values that exist in an array specified in the query.\n */\nexport const $in = createQueryOperator(__in);\n","// Query Comparison Operators: https://docs.mongodb.com/manual/reference/operator/query-comparison/\nimport { $lt as __lt, createQueryOperator } from \"../../_predicates\";\n/**\n * Matches values that are less than the value specified in the query.\n */\nexport const $lt = createQueryOperator(__lt);\n","// Query Comparison Operators: https://docs.mongodb.com/manual/reference/operator/query-comparison/\nimport { $lte as __lte, createQueryOperator } from \"../../_predicates\";\n/**\n * Matches values that are less than or equal to the value specified in the query.\n */\nexport const $lte = createQueryOperator(__lte);\n","// Query Comparison Operators: https://docs.mongodb.com/manual/reference/operator/query-comparison/\nimport { $ne as __ne, createQueryOperator } from \"../../_predicates\";\n/**\n * Matches all values that are not equal to the value specified in the query.\n */\nexport const $ne = createQueryOperator(__ne);\n","// Query Comparison Operators: https://docs.mongodb.com/manual/reference/operator/query-comparison/\nimport { $nin as __nin, createQueryOperator } from \"../../_predicates\";\n/**\n * Matches values that do not exist in an array specified to the query.\n */\nexport const $nin = createQueryOperator(__nin);\n","// Query Evaluation Operators: https://docs.mongodb.com/manual/reference/operator/query-evaluation/\nimport { $mod as __mod, createQueryOperator } from \"../../_predicates\";\n/**\n * Performs a modulo operation on the value of a field and selects documents with a specified result.\n */\nexport const $mod = createQueryOperator(__mod);\n","// Query Evaluation Operators: https://docs.mongodb.com/manual/reference/operator/query-evaluation/\nimport { $regex as __regex, createQueryOperator } from \"../../_predicates\";\n/**\n * Selects documents where values match a specified regular expression.\n */\nexport const $regex = createQueryOperator(__regex);\n","// Query Array Operators: https://docs.mongodb.com/manual/reference/operator/query-array/\nimport { $all as __all, createQueryOperator } from \"../../_predicates\";\n/**\n * Matches arrays that contain all elements specified in the query.\n */\nexport const $all = createQueryOperator(__all);\n","// Query Array Operators: https://docs.mongodb.com/manual/reference/operator/query-array/\nimport { $elemMatch as __elemMatch, createQueryOperator, } from \"../../_predicates\";\n/**\n * Selects documents if element in the array field matches all the specified $elemMatch conditions.\n */\nexport const $elemMatch = createQueryOperator(__elemMatch);\n","// Query Array Operators: https://docs.mongodb.com/manual/reference/operator/query-array/\nimport { $size as __size, createQueryOperator } from \"../../_predicates\";\n/**\n * Selects documents if the array field is a specified size.\n */\nexport const $size = createQueryOperator(__size);\n","// Query Element Operators: https://docs.mongodb.com/manual/reference/operator/query-element/\nimport { $exists as __exists, createQueryOperator } from \"../../_predicates\";\n/**\n * Matches documents that have the specified field.\n */\nexport const $exists = createQueryOperator(__exists);\n","// Query Element Operators: https://docs.mongodb.com/manual/reference/operator/query-element/\nimport { $type as __type, createQueryOperator } from \"../../_predicates\";\n/**\n * Selects documents if a field is of the specified type.\n */\nexport const $type = createQueryOperator(__type);\n","import { useOperators, OperatorType } from 'mingo/core';\nimport { Query } from 'mingo/query';\nimport type { MangoQuerySelector } from './types/index.d.ts';\nimport {\n    $project,\n    $sort\n} from 'mingo/operators/pipeline';\nimport {\n    $and,\n    $not,\n    $or,\n    $nor\n} from 'mingo/operators/query/logical';\nimport {\n    $eq,\n    $ne,\n    $gt,\n    $gte,\n    $lt,\n    $lte,\n    $nin,\n    $in\n} from 'mingo/operators/query/comparison';\nimport {\n    $regex,\n    $mod\n} from 'mingo/operators/query/evaluation';\nimport {\n    $elemMatch,\n    $size\n} from 'mingo/operators/query/array';\nimport {\n    $exists,\n    $type\n} from 'mingo/operators/query/element';\n\nlet mingoInitDone = false;\n\n\n/**\n * The MongoDB query library is huge and we do not need all the operators.\n * If you add an operator here, make sure that you properly add a test in\n * the file /test/unit/rx-storage-query-correctness.test.ts\n *\n * @link https://github.com/kofrasa/mingo#es6\n */\nexport function getMingoQuery<RxDocType>(\n    selector?: MangoQuerySelector<RxDocType>\n) {\n    if (!mingoInitDone) {\n        useOperators(OperatorType.PIPELINE, {\n            $sort,\n            $project\n        } as any);\n        useOperators(OperatorType.QUERY, {\n            $and,\n            $eq,\n            $elemMatch,\n            $exists,\n            $gt,\n            $gte,\n            $in,\n            $lt,\n            $lte,\n            $ne,\n            $nin,\n            $mod,\n            $nor,\n            $not,\n            $or,\n            $regex,\n            $size,\n            $type,\n        } as any);\n        mingoInitDone = true;\n    }\n    return new Query(selector as any);\n}\n","import { LOGICAL_OPERATORS } from './query-planner.ts';\nimport { getPrimaryFieldOfPrimaryKey } from './rx-schema-helper.ts';\nimport type {\n    DeepReadonly,\n    DeterministicSortComparator,\n    FilledMangoQuery,\n    MangoQuery,\n    MangoQuerySortDirection,\n    QueryMatcher,\n    RxDocument,\n    RxDocumentData,\n    RxJsonSchema,\n    RxQuery\n} from './types/index.d.ts';\nimport {\n    clone,\n    firstPropertyNameOfObject,\n    toArray,\n    isMaybeReadonlyArray,\n    flatClone,\n    objectPathMonad,\n    ObjectPathMonadFunction\n} from './plugins/utils/index.ts';\nimport {\n    compare as mingoSortComparator\n} from 'mingo/util';\nimport { newRxError } from './rx-error.ts';\nimport { getMingoQuery } from './rx-query-mingo.ts';\n\n/**\n * Normalize the query to ensure we have all fields set\n * and queries that represent the same query logic are detected as equal by the caching.\n */\nexport function normalizeMangoQuery<RxDocType>(\n    schema: RxJsonSchema<RxDocumentData<RxDocType>>,\n    mangoQuery: MangoQuery<RxDocType>\n): FilledMangoQuery<RxDocType> {\n    const primaryKey: string = getPrimaryFieldOfPrimaryKey(schema.primaryKey);\n    mangoQuery = flatClone(mangoQuery);\n\n    const normalizedMangoQuery: FilledMangoQuery<RxDocType> = clone(mangoQuery) as any;\n    if (typeof normalizedMangoQuery.skip !== 'number') {\n        normalizedMangoQuery.skip = 0;\n    }\n\n    if (!normalizedMangoQuery.selector) {\n        normalizedMangoQuery.selector = {};\n    } else {\n        normalizedMangoQuery.selector = normalizedMangoQuery.selector;\n        /**\n         * In mango query, it is possible to have an\n         * equals comparison by directly assigning a value\n         * to a property, without the '$eq' operator.\n         * Like:\n         * selector: {\n         *   foo: 'bar'\n         * }\n         * For normalization, we have to normalize this\n         * so our checks can perform properly.\n         *\n         *\n         * TODO this must work recursive with nested queries that\n         * contain multiple selectors via $and or $or etc.\n         */\n        Object\n            .entries(normalizedMangoQuery.selector)\n            .forEach(([field, matcher]) => {\n                if (typeof matcher !== 'object' || matcher === null) {\n                    (normalizedMangoQuery as any).selector[field] = {\n                        $eq: matcher\n                    };\n                }\n            });\n    }\n\n    /**\n     * Ensure that if an index is specified,\n     * the primaryKey is inside of it.\n     */\n    if (normalizedMangoQuery.index) {\n        const indexAr = toArray(normalizedMangoQuery.index);\n        if (!indexAr.includes(primaryKey)) {\n            indexAr.push(primaryKey);\n        }\n        normalizedMangoQuery.index = indexAr;\n    }\n\n    /**\n     * To ensure a deterministic sorting,\n     * we have to ensure the primary key is always part\n     * of the sort query.\n     * Primary sorting is added as last sort parameter,\n     * similar to how we add the primary key to indexes that do not have it.\n     *\n     */\n    if (!normalizedMangoQuery.sort) {\n        /**\n         * If no sort is given at all,\n         * we can assume that the user does not care about sort order at al.\n         *\n         * we cannot just use the primary key as sort parameter\n         * because it would likely cause the query to run over the primary key index\n         * which has a bad performance in most cases.\n         */\n        if (normalizedMangoQuery.index) {\n            normalizedMangoQuery.sort = normalizedMangoQuery.index.map((field: string) => {\n                return { [field as any]: 'asc' } as any;\n            });\n        } else {\n            /**\n             * Find the index that best matches the fields with the logical operators\n             */\n            if (schema.indexes) {\n                const fieldsWithLogicalOperator: Set<string> = new Set();\n                Object.entries(normalizedMangoQuery.selector).forEach(([field, matcher]) => {\n                    let hasLogical = false;\n                    if (typeof matcher === 'object' && matcher !== null) {\n                        hasLogical = !!Object.keys(matcher).find(operator => LOGICAL_OPERATORS.has(operator));\n                    } else {\n                        hasLogical = true;\n                    }\n                    if (hasLogical) {\n                        fieldsWithLogicalOperator.add(field);\n                    }\n                });\n\n\n                let currentFieldsAmount = -1;\n                let currentBestIndexForSort: string[] | readonly string[] | undefined;\n                schema.indexes.forEach(index => {\n                    const useIndex = isMaybeReadonlyArray(index) ? index : [index];\n                    const firstWrongIndex = useIndex.findIndex(indexField => !fieldsWithLogicalOperator.has(indexField));\n                    if (\n                        firstWrongIndex > 0 &&\n                        firstWrongIndex > currentFieldsAmount\n                    ) {\n                        currentFieldsAmount = firstWrongIndex;\n                        currentBestIndexForSort = useIndex;\n                    }\n                });\n                if (currentBestIndexForSort) {\n                    normalizedMangoQuery.sort = currentBestIndexForSort.map((field: string) => {\n                        return { [field as any]: 'asc' } as any;\n                    });\n                }\n\n            }\n\n            /**\n             * Fall back to the primary key as sort order\n             * if no better one has been found\n             */\n            if (!normalizedMangoQuery.sort) {\n                normalizedMangoQuery.sort = [{ [primaryKey]: 'asc' }] as any;\n            }\n        }\n    } else {\n        const isPrimaryInSort = normalizedMangoQuery.sort\n            .find(p => firstPropertyNameOfObject(p) === primaryKey);\n        if (!isPrimaryInSort) {\n            normalizedMangoQuery.sort = normalizedMangoQuery.sort.slice(0);\n            normalizedMangoQuery.sort.push({ [primaryKey]: 'asc' } as any);\n        }\n    }\n\n    return normalizedMangoQuery;\n}\n\n/**\n * Returns the sort-comparator,\n * which is able to sort documents in the same way\n * a query over the db would do.\n */\nexport function getSortComparator<RxDocType>(\n    schema: RxJsonSchema<RxDocumentData<RxDocType>>,\n    query: FilledMangoQuery<RxDocType>\n): DeterministicSortComparator<RxDocType> {\n    if (!query.sort) {\n        throw newRxError('SNH', { query });\n    }\n    const sortParts: {\n        key: string;\n        direction: MangoQuerySortDirection;\n        getValueFn: ObjectPathMonadFunction<RxDocType>;\n    }[] = [];\n    query.sort.forEach(sortBlock => {\n        const key = Object.keys(sortBlock)[0];\n        const direction = Object.values(sortBlock)[0];\n        sortParts.push({\n            key,\n            direction,\n            getValueFn: objectPathMonad(key)\n        });\n    });\n    const fun: DeterministicSortComparator<RxDocType> = (a: RxDocType, b: RxDocType) => {\n        for (let i = 0; i < sortParts.length; ++i) {\n            const sortPart = sortParts[i];\n            const valueA = sortPart.getValueFn(a);\n            const valueB = sortPart.getValueFn(b);\n            if (valueA !== valueB) {\n                const ret = sortPart.direction === 'asc' ? mingoSortComparator(valueA, valueB) : mingoSortComparator(valueB, valueA);\n                return ret as any;\n            }\n        }\n    };\n\n    return fun;\n}\n\n\n/**\n * Returns a function\n * that can be used to check if a document\n * matches the query.\n */\nexport function getQueryMatcher<RxDocType>(\n    _schema: RxJsonSchema<RxDocType> | RxJsonSchema<RxDocumentData<RxDocType>>,\n    query: FilledMangoQuery<RxDocType>\n): QueryMatcher<RxDocumentData<RxDocType>> {\n    if (!query.sort) {\n        throw newRxError('SNH', { query });\n    }\n\n    const mingoQuery = getMingoQuery(query.selector as any);\n    const fun: QueryMatcher<RxDocumentData<RxDocType>> = (doc: RxDocumentData<RxDocType> | DeepReadonly<RxDocumentData<RxDocType>>) => {\n        return mingoQuery.test(doc);\n    };\n    return fun;\n}\n\n\nexport async function runQueryUpdateFunction<RxDocType, RxQueryResult>(\n    rxQuery: RxQuery<RxDocType, RxQueryResult>,\n    fn: (doc: RxDocument<RxDocType>) => Promise<RxDocument<RxDocType>>\n): Promise<RxQueryResult> {\n    const docs = await rxQuery.exec();\n    if (!docs) {\n        // only findOne() queries can return null\n        return null as any;\n    }\n    if (Array.isArray(docs)) {\n        return Promise.all(\n            docs.map(doc => fn(doc))\n        ) as any;\n    } else {\n        // via findOne()\n        const result = await fn(docs as any);\n        return result as any;\n    }\n}\n","import {\n    ActionName,\n    calculateActionName,\n    runAction,\n    QueryParams,\n    QueryMatcher,\n    DeterministicSortComparator,\n    StateResolveFunctionInput,\n    ChangeEvent\n} from 'event-reduce-js';\nimport type {\n    RxQuery,\n    MangoQuery,\n    RxChangeEvent,\n    StringKeys,\n    RxDocumentData\n} from './types/index.d.ts';\nimport { rxChangeEventToEventReduceChangeEvent } from './rx-change-event.ts';\nimport {\n    arrayFilterNotEmpty,\n    clone,\n    ensureNotFalsy,\n    getFromMapOrCreate\n} from './plugins/utils/index.ts';\nimport { getQueryMatcher, getSortComparator, normalizeMangoQuery } from './rx-query-helper.ts';\n\nexport type EventReduceResultNeg = {\n    runFullQueryAgain: true;\n};\nexport type EventReduceResultPos<RxDocumentType> = {\n    runFullQueryAgain: false;\n    changed: boolean;\n    newResults: RxDocumentType[];\n};\nexport type EventReduceResult<RxDocumentType> = EventReduceResultNeg | EventReduceResultPos<RxDocumentType>;\n\n\nexport function getSortFieldsOfQuery<RxDocType>(\n    primaryKey: StringKeys<RxDocumentData<RxDocType>>,\n    query: MangoQuery<RxDocType>\n): (string | StringKeys<RxDocType>)[] {\n    if (!query.sort || query.sort.length === 0) {\n        return [primaryKey];\n    } else {\n        return query.sort.map(part => Object.keys(part)[0]);\n    }\n}\n\n\n\nexport const RXQUERY_QUERY_PARAMS_CACHE: WeakMap<RxQuery, QueryParams<any>> = new WeakMap();\nexport function getQueryParams<RxDocType>(\n    rxQuery: RxQuery<RxDocType>\n): QueryParams<RxDocType> {\n    return getFromMapOrCreate(\n        RXQUERY_QUERY_PARAMS_CACHE,\n        rxQuery,\n        () => {\n            const collection = rxQuery.collection;\n            const normalizedMangoQuery = normalizeMangoQuery(\n                collection.storageInstance.schema,\n                clone(rxQuery.mangoQuery)\n            );\n            const primaryKey = collection.schema.primaryPath;\n\n            /**\n             * Create a custom sort comparator\n             * that uses the hooks to ensure\n             * we send for example compressed documents to be sorted by compressed queries.\n             */\n            const sortComparator = getSortComparator(\n                collection.schema.jsonSchema,\n                normalizedMangoQuery\n            );\n\n            const useSortComparator: DeterministicSortComparator<RxDocType> = (docA: RxDocType, docB: RxDocType) => {\n                const sortComparatorData = {\n                    docA,\n                    docB,\n                    rxQuery\n                };\n                return sortComparator(sortComparatorData.docA, sortComparatorData.docB);\n            };\n\n            /**\n             * Create a custom query matcher\n             * that uses the hooks to ensure\n             * we send for example compressed documents to match compressed queries.\n             */\n            const queryMatcher = getQueryMatcher(\n                collection.schema.jsonSchema,\n                normalizedMangoQuery\n            );\n            const useQueryMatcher: QueryMatcher<RxDocumentData<RxDocType>> = (doc: RxDocumentData<RxDocType>) => {\n                const queryMatcherData = {\n                    doc,\n                    rxQuery\n                };\n                return queryMatcher(queryMatcherData.doc);\n            };\n\n            const ret: QueryParams<any> = {\n                primaryKey: rxQuery.collection.schema.primaryPath as any,\n                skip: normalizedMangoQuery.skip,\n                limit: normalizedMangoQuery.limit,\n                sortFields: getSortFieldsOfQuery(primaryKey, normalizedMangoQuery) as string[],\n                sortComparator: useSortComparator,\n                queryMatcher: useQueryMatcher\n            };\n            return ret;\n        }\n    );\n}\n\n\nexport function calculateNewResults<RxDocumentType>(\n    rxQuery: RxQuery<RxDocumentType>,\n    rxChangeEvents: RxChangeEvent<RxDocumentType>[]\n): EventReduceResult<RxDocumentType> {\n    if (!rxQuery.collection.database.eventReduce) {\n        return {\n            runFullQueryAgain: true\n        };\n    }\n    const queryParams = getQueryParams(rxQuery);\n    const previousResults: RxDocumentType[] = ensureNotFalsy(rxQuery._result).docsData.slice(0);\n    const previousResultsMap: Map<string, RxDocumentType> = ensureNotFalsy(rxQuery._result).docsDataMap;\n    let changed: boolean = false;\n\n    const eventReduceEvents: ChangeEvent<RxDocumentType>[] = rxChangeEvents\n        .map(cE => rxChangeEventToEventReduceChangeEvent(cE))\n        .filter(arrayFilterNotEmpty);\n\n    const foundNonOptimizeable = eventReduceEvents.find(eventReduceEvent => {\n        const stateResolveFunctionInput: StateResolveFunctionInput<RxDocumentType> = {\n            queryParams,\n            changeEvent: eventReduceEvent,\n            previousResults,\n            keyDocumentMap: previousResultsMap\n        };\n\n        const actionName: ActionName = calculateActionName(stateResolveFunctionInput);\n        if (actionName === 'runFullQueryAgain') {\n            return true;\n        } else if (actionName !== 'doNothing') {\n            changed = true;\n            runAction(\n                actionName,\n                queryParams,\n                eventReduceEvent,\n                previousResults,\n                previousResultsMap\n            );\n            return false;\n        }\n    });\n    if (foundNonOptimizeable) {\n        return {\n            runFullQueryAgain: true,\n        };\n    } else {\n        return {\n            runFullQueryAgain: false,\n            changed,\n            newResults: previousResults\n        };\n    }\n}\n","/**\n * the query-cache makes sure that on every query-state, exactly one instance can exist\n * if you use the same mango-query more then once, it will reuse the first RxQuery\n */\nimport type {\n    RxQuery,\n    RxCacheReplacementPolicy,\n    RxCollection\n} from './types/index.d.ts';\nimport {\n    getFromMapOrCreate,\n    nextTick,\n    now,\n    requestIdlePromise\n} from './plugins/utils/index.ts';\n\nexport class QueryCache {\n    public _map: Map<string, RxQuery> = new Map();\n\n    /**\n     * check if an equal query is in the cache,\n     * if true, return the cached one,\n     * if false, save the given one and return it\n     */\n    getByQuery(rxQuery: RxQuery): RxQuery {\n        const stringRep = rxQuery.toString();\n        return getFromMapOrCreate(\n            this._map,\n            stringRep,\n            () => rxQuery\n        );\n    }\n}\n\nexport function createQueryCache() {\n    return new QueryCache();\n}\n\n\nexport function uncacheRxQuery(queryCache: QueryCache, rxQuery: RxQuery) {\n    rxQuery.uncached = true;\n    const stringRep = rxQuery.toString();\n    queryCache._map.delete(stringRep);\n\n}\n\n\nexport function countRxQuerySubscribers(rxQuery: RxQuery): number {\n    return rxQuery.refCount$.observers.length;\n}\n\n\nexport const DEFAULT_TRY_TO_KEEP_MAX = 100;\nexport const DEFAULT_UNEXECUTED_LIFETIME = 30 * 1000;\n\n/**\n * The default cache replacement policy\n * See docs-src/query-cache.md to learn how it should work.\n * Notice that this runs often and should block the cpu as less as possible\n * This is a monad which makes it easier to unit test\n */\nexport const defaultCacheReplacementPolicyMonad: (\n    tryToKeepMax: number,\n    unExecutedLifetime: number\n) => RxCacheReplacementPolicy = (\n    tryToKeepMax,\n    unExecutedLifetime\n) => (\n    _collection: RxCollection,\n    queryCache: QueryCache\n) => {\n            if (queryCache._map.size < tryToKeepMax) {\n                return;\n            }\n\n            const minUnExecutedLifetime = now() - unExecutedLifetime;\n            const maybeUncache: RxQuery[] = [];\n\n            const queriesInCache = Array.from(queryCache._map.values());\n            for (const rxQuery of queriesInCache) {\n                // filter out queries with subscribers\n                if (countRxQuerySubscribers(rxQuery) > 0) {\n                    continue;\n                }\n                // directly uncache queries that never executed and are older then unExecutedLifetime\n                if (rxQuery._lastEnsureEqual === 0 && rxQuery._creationTime < minUnExecutedLifetime) {\n                    uncacheRxQuery(queryCache, rxQuery);\n                    continue;\n                }\n                maybeUncache.push(rxQuery);\n            }\n\n            const mustUncache = maybeUncache.length - tryToKeepMax;\n            if (mustUncache <= 0) {\n                return;\n            }\n\n            const sortedByLastUsage = maybeUncache.sort((a, b) => a._lastEnsureEqual - b._lastEnsureEqual);\n            const toRemove = sortedByLastUsage.slice(0, mustUncache);\n            toRemove.forEach(rxQuery => uncacheRxQuery(queryCache, rxQuery));\n        };\n\n\nexport const defaultCacheReplacementPolicy: RxCacheReplacementPolicy = defaultCacheReplacementPolicyMonad(\n    DEFAULT_TRY_TO_KEEP_MAX,\n    DEFAULT_UNEXECUTED_LIFETIME\n);\n\nexport const COLLECTIONS_WITH_RUNNING_CLEANUP: WeakSet<RxCollection> = new WeakSet();\n\n/**\n * Triggers the cache replacement policy after waitTime has passed.\n * We do not run this directly because at exactly the time a query is created,\n * we need all CPU to minimize latency.\n * Also this should not be triggered multiple times when waitTime is still waiting.\n */\nexport function triggerCacheReplacement(\n    rxCollection: RxCollection\n) {\n    if (COLLECTIONS_WITH_RUNNING_CLEANUP.has(rxCollection)) {\n        // already started\n        return;\n    }\n\n    COLLECTIONS_WITH_RUNNING_CLEANUP.add(rxCollection);\n\n    /**\n     * Do not run directly to not reduce result latency of a new query\n     */\n    nextTick() // wait at least one tick\n        .then(() => requestIdlePromise(200)) // and then wait for the CPU to be idle\n        .then(() => {\n            if (!rxCollection.destroyed) {\n                rxCollection.cacheReplacementPolicy(rxCollection, rxCollection._queryCache);\n            }\n            COLLECTIONS_WITH_RUNNING_CLEANUP.delete(rxCollection);\n        });\n}\n","import type {\n    RxChangeEvent,\n    RxDocument,\n    RxDocumentData\n} from './types/index.d.ts';\nimport {\n    getFromMapOrThrow,\n    getHeightOfRevision,\n    overwriteGetterForCaching,\n    requestIdlePromiseNoQueue\n} from './plugins/utils/index.ts';\nimport {\n    overwritable\n} from './overwritable.ts';\nimport { Observable } from 'rxjs';\n\n/**\n * Because we have to create many cache items,\n * we use an array instead of an object with properties\n * for better performance and less memory usage.\n * @link https://stackoverflow.com/questions/17295056/array-vs-object-efficiency-in-javascript\n */\ndeclare type CacheItem<RxDocType, OrmMethods> = [\n    /**\n     * Store the different document states of time\n     * based on their revision height (rev height = array index).\n     * We store WeakRefs so that we can later clean up\n     * document states that are no longer needed.\n     */\n    Map<number, WeakRef<RxDocument<RxDocType, OrmMethods>>>,\n\n    /**\n     * Store the latest known document state.\n     * As long as any state of the document is in the cache,\n     * we observe the changestream and update the latestDoc accordingly.\n     * This makes it easier to optimize performance on other parts\n     * because for each known document we can always get the current state\n     * in the storage.\n     * Also it makes it possible to call RxDocument.latest() in a non-async way\n     * to retrieve the latest document state or to observe$ some property.\n     *\n     * To not prevent the whole cacheItem from being garbage collected,\n     * we store only the document data here, but not the RxDocument.\n     */\n    RxDocumentData<RxDocType>\n];\n\n\n/**\n * @link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/FinalizationRegistry\n */\ndeclare type FinalizationRegistryValue = {\n    docId: string;\n    revisionHeight: number;\n};\n\n/**\n * The DocumentCache stores RxDocument objects\n * by their primary key and revision.\n * This is useful on client side applications where\n * it is not known how much memory can be used, so\n * we de-duplicate RxDocument states to save memory.\n * To not fill up the memory with old document states, the DocumentCache\n * only contains weak references to the RxDocuments themself.\n * @link https://caniuse.com/?search=weakref\n */\nexport class DocumentCache<RxDocType, OrmMethods> {\n    public readonly cacheItemByDocId = new Map<string, CacheItem<RxDocType, OrmMethods>>();\n\n    /**\n     * Process stuff lazy to not block the CPU\n     * on critical paths.\n     */\n    public readonly tasks = new Set<Function>();\n\n    /**\n     * Some JavaScript runtimes like QuickJS,\n     * so not have a FinalizationRegistry or WeakRef.\n     * Therefore we need a workaround which might waste a lot of memory,\n     * but at least works.\n     */\n    public readonly registry?: FinalizationRegistry<FinalizationRegistryValue> = typeof FinalizationRegistry === 'function' ?\n        new FinalizationRegistry<FinalizationRegistryValue>(docMeta => {\n            const docId = docMeta.docId;\n            const cacheItem = this.cacheItemByDocId.get(docId);\n            if (cacheItem) {\n                cacheItem[0].delete(docMeta.revisionHeight);\n                if (cacheItem[0].size === 0) {\n                    /**\n                     * No state of the document is cached anymore,\n                     * so we can clean up.\n                     */\n                    this.cacheItemByDocId.delete(docId);\n                }\n            }\n        }) :\n        undefined;\n\n    constructor(\n        public readonly primaryPath: string,\n        public readonly changes$: Observable<RxChangeEvent<RxDocType>[]>,\n        /**\n         * A method that can create a RxDocument by the given document data.\n         */\n        public documentCreator: (docData: RxDocumentData<RxDocType>) => RxDocument<RxDocType, OrmMethods>\n    ) {\n        changes$.subscribe(events => {\n            this.tasks.add(() => {\n                const cacheItemByDocId = this.cacheItemByDocId;\n                for (let index = 0; index < events.length; index++) {\n                    const event = events[index];\n                    const cacheItem = cacheItemByDocId.get(event.documentId);\n                    if (cacheItem) {\n                        let documentData = event.documentData;\n                        if (!documentData) {\n                            documentData = event.previousDocumentData as any;\n                        }\n                        cacheItem[1] = documentData;\n                    }\n                }\n            });\n            if (this.tasks.size <= 1) {\n                requestIdlePromiseNoQueue().then(() => {\n                    this.processTasks();\n                });\n            }\n        });\n    }\n\n    public processTasks() {\n        if (this.tasks.size === 0) {\n            return;\n        }\n        const tasks = Array.from(this.tasks);\n        tasks.forEach(task => task());\n        this.tasks.clear();\n    }\n\n    /**\n     * Get the RxDocument from the cache\n     * and create a new one if not exits before.\n     * @overwrites itself with the actual function\n     * because this is @performance relevant.\n     * It is called on each document row for each write and read.\n     */\n    get getCachedRxDocuments(): (docsData: RxDocumentData<RxDocType>[]) => RxDocument<RxDocType, OrmMethods>[] {\n        const fn = getCachedRxDocumentMonad(this);\n        return overwriteGetterForCaching(\n            this,\n            'getCachedRxDocuments',\n            fn\n        );\n    }\n\n    get getCachedRxDocument(): (docData: RxDocumentData<RxDocType>) => RxDocument<RxDocType, OrmMethods> {\n        const fn = getCachedRxDocumentMonad(this);\n        return overwriteGetterForCaching(\n            this,\n            'getCachedRxDocument',\n            doc => fn([doc])[0]\n        );\n    }\n\n    /**\n     * Throws if not exists\n     */\n    public getLatestDocumentData(docId: string): RxDocumentData<RxDocType> {\n        this.processTasks();\n        const cacheItem = getFromMapOrThrow(this.cacheItemByDocId, docId);\n        return cacheItem[1];\n    }\n\n    public getLatestDocumentDataIfExists(docId: string): RxDocumentData<RxDocType> | undefined {\n        this.processTasks();\n        const cacheItem = this.cacheItemByDocId.get(docId);\n        if (cacheItem) {\n            return cacheItem[1];\n        }\n    }\n}\n\n/**\n * This function is called very very often.\n * This is likely the most important function for RxDB overall performance\n * @hotPath This is one of the most important methods for performance.\n * It is used in many places to transform the raw document data into RxDocuments.\n */\nfunction getCachedRxDocumentMonad<RxDocType, OrmMethods>(\n    docCache: DocumentCache<RxDocType, OrmMethods>\n): (docsData: RxDocumentData<RxDocType>[]) => RxDocument<RxDocType, OrmMethods>[] {\n    const primaryPath = docCache.primaryPath;\n    const cacheItemByDocId = docCache.cacheItemByDocId;\n    const registry = docCache.registry;\n    const deepFreezeWhenDevMode = overwritable.deepFreezeWhenDevMode;\n    const documentCreator = docCache.documentCreator;\n    const fn: (docsData: RxDocumentData<RxDocType>[]) => RxDocument<RxDocType, OrmMethods>[] = (docsData: RxDocumentData<RxDocType>[]) => {\n        const ret: RxDocument<RxDocType, OrmMethods>[] = new Array(docsData.length);\n        const registryTasks: RxDocument<RxDocType, OrmMethods>[] = [];\n        for (let index = 0; index < docsData.length; index++) {\n            let docData = docsData[index];\n            const docId: string = (docData as any)[primaryPath];\n            const revisionHeight = getHeightOfRevision(docData._rev);\n\n            let byRev: Map<number, WeakRef<RxDocument<RxDocType, OrmMethods>>>;\n            let cachedRxDocumentWeakRef: WeakRef<RxDocument<RxDocType, OrmMethods>> | undefined;\n            let cacheItem = cacheItemByDocId.get(docId);\n            if (!cacheItem) {\n                byRev = new Map();\n                cacheItem = [\n                    byRev,\n                    docData\n                ];\n                cacheItemByDocId.set(docId, cacheItem);\n            } else {\n                byRev = cacheItem[0];\n                cachedRxDocumentWeakRef = byRev.get(revisionHeight);\n            }\n            let cachedRxDocument = cachedRxDocumentWeakRef ? cachedRxDocumentWeakRef.deref() : undefined;\n            if (!cachedRxDocument) {\n                docData = deepFreezeWhenDevMode(docData) as any;\n                cachedRxDocument = documentCreator(docData) as RxDocument<RxDocType, OrmMethods>;\n                byRev.set(revisionHeight, createWeakRefWithFallback(cachedRxDocument));\n                if (registry) {\n                    registryTasks.push(cachedRxDocument);\n                }\n            }\n            ret[index] = cachedRxDocument;\n        }\n        if (registryTasks.length > 0 && registry) {\n            /**\n             * Calling registry.register() has shown to have\n             * really bad performance. So we add the cached documents\n             * lazily.\n             */\n            docCache.tasks.add(() => {\n                for (let index = 0; index < registryTasks.length; index++) {\n                    const doc = registryTasks[index];\n                    registry.register(doc, {\n                        docId: doc.primary,\n                        revisionHeight: getHeightOfRevision(doc.revision)\n                    });\n                }\n            });\n            if (docCache.tasks.size <= 1) {\n                requestIdlePromiseNoQueue().then(() => {\n                    docCache.processTasks();\n                });\n            }\n        }\n        return ret;\n    };\n    return fn;\n}\n\nexport function mapDocumentsDataToCacheDocs<RxDocType, OrmMethods>(\n    docCache: DocumentCache<RxDocType, OrmMethods>,\n    docsData: RxDocumentData<RxDocType>[]\n) {\n    const getCachedRxDocuments = docCache.getCachedRxDocuments;\n    return getCachedRxDocuments(docsData);\n}\n\n/**\n * Fallback for JavaScript runtimes that do not support WeakRef.\n * The fallback will keep the items in cache forever,\n * but at least works.\n */\nconst HAS_WEAK_REF = typeof WeakRef === 'function';\nconst createWeakRefWithFallback = HAS_WEAK_REF ? createWeakRef : createWeakRefFallback;\nfunction createWeakRef<T extends object>(obj: T): WeakRef<T> {\n    return new WeakRef(obj) as any;\n}\nfunction createWeakRefFallback<T extends object>(obj: T): WeakRef<T> {\n    return {\n        deref() {\n            return obj;\n        }\n    } as any;\n}\n","import { mapDocumentsDataToCacheDocs } from './doc-cache.ts';\nimport { now, overwriteGetterForCaching } from './plugins/utils/index.ts';\nimport type {\n    RxCollection,\n    RxDocument,\n    RxDocumentData\n} from './types';\n\n/**\n * RxDB needs the query results in multiple formats.\n * Sometimes as a Map or an array with only the documentData.\n * For better performance we work with this class\n * that initializes stuff lazily so that\n * we can directly work with the query results after RxQuery.exec()\n */\nexport class RxQuerySingleResult<RxDocType>{\n    /**\n     * Time at which the current _result state was created.\n     * Used to determine if the result set has changed since X\n     * so that we do not emit the same result multiple times on subscription.\n     */\n    public readonly time = now();\n    public readonly documents: RxDocument<RxDocType>[];\n    constructor(\n        public readonly collection: RxCollection<RxDocType>,\n        // only used internally, do not use outside, use this.docsData instead\n        docsDataFromStorageInstance: RxDocumentData<RxDocType>[],\n        // can be overwritten for count-queries\n        public readonly count: number,\n    ) {\n        this.documents = mapDocumentsDataToCacheDocs<RxDocType, any>(this.collection._docCache, docsDataFromStorageInstance);\n    }\n\n\n    /**\n     * Instead of using the newResultData in the result cache,\n     * we directly use the objects that are stored in the RxDocument\n     * to ensure we do not store the same data twice and fill up the memory.\n     * @overwrites itself with the actual value\n     */\n    get docsData(): RxDocumentData<RxDocType>[] {\n        return overwriteGetterForCaching(\n            this,\n            'docsData',\n            this.documents.map(d => d._data)\n        );\n    }\n\n\n    // A key->document map, used in the event reduce optimization.\n    get docsDataMap(): Map<string, RxDocumentData<RxDocType>> {\n        const map = new Map<string, RxDocumentData<RxDocType>>();\n        this.documents.forEach(d => {\n            map.set(d.primary, d._data);\n        });\n        return overwriteGetterForCaching(\n            this,\n            'docsDataMap',\n            map\n        );\n    }\n\n    get docsMap(): Map<string, RxDocument<RxDocType>> {\n        const map = new Map<string, RxDocument<RxDocType>>();\n        const documents = this.documents;\n        for (let i = 0; i < documents.length; i++) {\n            const doc = documents[i];\n            map.set(doc.primary, doc);\n        }\n        return overwriteGetterForCaching(\n            this,\n            'docsMap',\n            map\n        );\n    }\n}\n","import {\n    BehaviorSubject,\n    firstValueFrom,\n    Observable,\n    merge\n} from 'rxjs';\nimport {\n    mergeMap,\n    filter,\n    map,\n    startWith,\n    distinctUntilChanged,\n    shareReplay\n} from 'rxjs/operators';\nimport {\n    sortObject,\n    pluginMissing,\n    overwriteGetterForCaching,\n    now,\n    PROMISE_RESOLVE_FALSE,\n    RXJS_SHARE_REPLAY_DEFAULTS,\n    ensureNotFalsy,\n    areRxDocumentArraysEqual,\n    appendToArray\n} from './plugins/utils/index.ts';\nimport {\n    newRxError\n} from './rx-error.ts';\nimport {\n    runPluginHooks\n} from './hooks.ts';\nimport type {\n    RxCollection,\n    RxDocument,\n    RxQueryOP,\n    RxQuery,\n    MangoQuery,\n    MangoQuerySortPart,\n    MangoQuerySelector,\n    PreparedQuery,\n    RxChangeEvent,\n    RxDocumentWriteData,\n    RxDocumentData,\n    QueryMatcher,\n    RxJsonSchema,\n    FilledMangoQuery,\n    ModifyFunction\n} from './types/index.d.ts';\nimport { calculateNewResults } from './event-reduce.ts';\nimport { triggerCacheReplacement } from './query-cache.ts';\nimport {\n    getQueryMatcher,\n    normalizeMangoQuery,\n    runQueryUpdateFunction\n\n} from './rx-query-helper.ts';\nimport { RxQuerySingleResult } from './rx-query-single-result.ts';\nimport { getQueryPlan } from './query-planner.ts';\n\nlet _queryCount = 0;\nconst newQueryID = function (): number {\n    return ++_queryCount;\n};\n\nexport class RxQueryBase<\n    RxDocType,\n    RxQueryResult,\n    OrmMethods = {},\n    Reactivity = unknown,\n> {\n\n    public id: number = newQueryID();\n\n    /**\n     * Some stats then are used for debugging and cache replacement policies\n     */\n    public _execOverDatabaseCount: number = 0;\n    public _creationTime = now();\n\n    // used in the query-cache to determine if the RxQuery can be cleaned up.\n    public _lastEnsureEqual = 0;\n\n    public uncached = false;\n\n    // used to count the subscribers to the query\n    public refCount$ = new BehaviorSubject(null);\n\n    public isFindOneByIdQuery: false | string | string[];\n\n\n    /**\n     * Contains the current result state\n     * or null if query has not run yet.\n     */\n    public _result: RxQuerySingleResult<RxDocType> | null = null;\n\n\n    constructor(\n        public op: RxQueryOP,\n        public mangoQuery: Readonly<MangoQuery<RxDocType>>,\n        public collection: RxCollection<RxDocType>,\n        // used by some plugins\n        public other: any = {}\n    ) {\n        if (!mangoQuery) {\n            this.mangoQuery = _getDefaultQuery();\n        }\n\n        this.isFindOneByIdQuery = isFindOneByIdQuery(\n            this.collection.schema.primaryPath as string,\n            mangoQuery\n        );\n    }\n    get $(): BehaviorSubject<RxQueryResult> {\n        if (!this._$) {\n\n            const results$ = this.collection.$.pipe(\n                /**\n                 * Performance shortcut.\n                 * Changes to local documents are not relevant for the query.\n                 */\n                filter(changeEvent => !changeEvent.isLocal),\n                /**\n                 * Start once to ensure the querying also starts\n                 * when there where no changes.\n                 */\n                startWith(null),\n                // ensure query results are up to date.\n                mergeMap(() => _ensureEqual(this as any)),\n                // use the current result set, written by _ensureEqual().\n                map(() => this._result),\n                // do not run stuff above for each new subscriber, only once.\n                shareReplay(RXJS_SHARE_REPLAY_DEFAULTS),\n                // do not proceed if result set has not changed.\n                distinctUntilChanged((prev, curr) => {\n                    if (prev && prev.time === ensureNotFalsy(curr).time) {\n                        return true;\n                    } else {\n                        return false;\n                    }\n                }),\n                filter(result => !!result),\n                /**\n                 * Map the result set to a single RxDocument or an array,\n                 * depending on query type\n                 */\n                map((result) => {\n                    const useResult = ensureNotFalsy(result);\n                    if (this.op === 'count') {\n                        return useResult.count;\n                    } else if (this.op === 'findOne') {\n                        // findOne()-queries emit RxDocument or null\n                        return useResult.documents.length === 0 ? null : useResult.documents[0];\n                    } else if (this.op === 'findByIds') {\n                        return useResult.docsMap;\n                    } else {\n                        // find()-queries emit RxDocument[]\n                        // Flat copy the array so it won't matter if the user modifies it.\n                        return useResult.documents.slice(0);\n                    }\n                })\n            );\n\n            this._$ = merge<any>(\n                results$,\n                /**\n                 * Also add the refCount$ to the query observable\n                 * to allow us to count the amount of subscribers.\n                 */\n                this.refCount$.pipe(\n                    filter(() => false)\n                )\n            );\n        }\n        return this._$ as any;\n    }\n\n    get $$(): Reactivity {\n        const reactivity = this.collection.database.getReactivityFactory();\n        return reactivity.fromObservable(\n            this.$,\n            undefined,\n            this.collection.database\n        ) as any;\n    }\n\n    // stores the changeEvent-number of the last handled change-event\n    public _latestChangeEvent: -1 | number = -1;\n\n    // time stamps on when the last full exec over the database has run\n    // used to properly handle events that happen while the find-query is running\n    public _lastExecStart: number = 0;\n    public _lastExecEnd: number = 0;\n\n    /**\n     * ensures that the exec-runs\n     * are not run in parallel\n     */\n    public _ensureEqualQueue: Promise<boolean> = PROMISE_RESOLVE_FALSE;\n\n    /**\n     * Returns an observable that emits the results\n     * This should behave like an rxjs-BehaviorSubject which means:\n     * - Emit the current result-set on subscribe\n     * - Emit the new result-set when an RxChangeEvent comes in\n     * - Do not emit anything before the first result-set was created (no null)\n     */\n    public _$?: Observable<RxQueryResult>;\n\n    /**\n     * set the new result-data as result-docs of the query\n     * @param newResultData json-docs that were received from the storage\n     */\n    _setResultData(newResultData: RxDocumentData<RxDocType>[] | number | Map<string, RxDocumentData<RxDocType>>): void {\n        if (typeof newResultData === 'number') {\n            this._result = new RxQuerySingleResult<RxDocType>(\n                this.collection,\n                [],\n                newResultData\n            );\n            return;\n        } else if (newResultData instanceof Map) {\n            newResultData = Array.from((newResultData as Map<string, RxDocumentData<RxDocType>>).values());\n        }\n\n        const newQueryResult = new RxQuerySingleResult<RxDocType>(\n            this.collection,\n            newResultData,\n            newResultData.length\n        );\n        this._result = newQueryResult;\n    }\n\n    /**\n     * executes the query on the database\n     * @return results-array with document-data\n     */\n    async _execOverDatabase(): Promise<RxDocumentData<RxDocType>[] | number> {\n        this._execOverDatabaseCount = this._execOverDatabaseCount + 1;\n        this._lastExecStart = now();\n\n\n        if (this.op === 'count') {\n            const preparedQuery = this.getPreparedQuery();\n            const result = await this.collection.storageInstance.count(preparedQuery);\n            if (result.mode === 'slow' && !this.collection.database.allowSlowCount) {\n                throw newRxError('QU14', {\n                    collection: this.collection,\n                    queryObj: this.mangoQuery\n                });\n            } else {\n                return result.count;\n            }\n        }\n\n        if (this.op === 'findByIds') {\n            const ids: string[] = ensureNotFalsy(this.mangoQuery.selector as any)[this.collection.schema.primaryPath].$in;\n            const ret = new Map<string, RxDocument<RxDocType>>();\n            const mustBeQueried: string[] = [];\n            // first try to fill from docCache\n            ids.forEach(id => {\n                const docData = this.collection._docCache.getLatestDocumentDataIfExists(id);\n                if (docData) {\n                    if (!docData._deleted) {\n                        const doc = this.collection._docCache.getCachedRxDocument(docData);\n                        ret.set(id, doc);\n                    }\n                } else {\n                    mustBeQueried.push(id);\n                }\n            });\n            // everything which was not in docCache must be fetched from the storage\n            if (mustBeQueried.length > 0) {\n                const docs = await this.collection.storageInstance.findDocumentsById(mustBeQueried, false);\n                docs.forEach(docData => {\n                    const doc = this.collection._docCache.getCachedRxDocument(docData);\n                    ret.set(doc.primary, doc);\n                });\n            }\n            return ret as any;\n        }\n\n\n        const docsPromise = queryCollection<RxDocType>(this as any);\n        return docsPromise.then(docs => {\n            this._lastExecEnd = now();\n            return docs;\n        });\n    }\n\n    /**\n     * Execute the query\n     * To have an easier implementations,\n     * just subscribe and use the first result\n     */\n    public exec(throwIfMissing: true): Promise<RxDocument<RxDocType, OrmMethods, Reactivity>>;\n    public exec(): Promise<RxQueryResult>;\n    public exec(throwIfMissing?: boolean): Promise<any> {\n        if (throwIfMissing && this.op !== 'findOne') {\n            throw newRxError('QU9', {\n                collection: this.collection.name,\n                query: this.mangoQuery,\n                op: this.op\n            });\n        }\n\n\n        /**\n         * run _ensureEqual() here,\n         * this will make sure that errors in the query which throw inside of the RxStorage,\n         * will be thrown at this execution context and not in the background.\n         */\n        return _ensureEqual(this as any)\n            .then(() => firstValueFrom(this.$))\n            .then(result => {\n                if (!result && throwIfMissing) {\n                    throw newRxError('QU10', {\n                        collection: this.collection.name,\n                        query: this.mangoQuery,\n                        op: this.op\n                    });\n                } else {\n                    return result;\n                }\n            });\n    }\n\n\n\n    /**\n     * cached call to get the queryMatcher\n     * @overwrites itself with the actual value\n     */\n    get queryMatcher(): QueryMatcher<RxDocumentWriteData<RxDocType>> {\n        const schema = this.collection.schema.jsonSchema;\n        const normalizedQuery = normalizeMangoQuery(\n            this.collection.schema.jsonSchema,\n            this.mangoQuery\n        );\n        return overwriteGetterForCaching(\n            this,\n            'queryMatcher',\n            getQueryMatcher(\n                schema,\n                normalizedQuery\n            ) as any\n        );\n    }\n\n    /**\n     * returns a string that is used for equal-comparisons\n     * @overwrites itself with the actual value\n     */\n    toString(): string {\n        const stringObj = sortObject({\n            op: this.op,\n            query: this.mangoQuery,\n            other: this.other\n        }, true);\n        const value = JSON.stringify(stringObj);\n        this.toString = () => value;\n        return value;\n    }\n\n    /**\n     * returns the prepared query\n     * which can be send to the storage instance to query for documents.\n     * @overwrites itself with the actual value.\n     */\n    getPreparedQuery(): PreparedQuery<RxDocType> {\n        const hookInput = {\n            rxQuery: this,\n            // can be mutated by the hooks so we have to deep clone first.\n            mangoQuery: normalizeMangoQuery<RxDocType>(\n                this.collection.schema.jsonSchema,\n                this.mangoQuery\n            )\n        };\n        (hookInput.mangoQuery.selector as any)._deleted = { $eq: false };\n        if (hookInput.mangoQuery.index) {\n            hookInput.mangoQuery.index.unshift('_deleted');\n        }\n        runPluginHooks('prePrepareQuery', hookInput);\n\n        const value = prepareQuery(\n            this.collection.schema.jsonSchema,\n            hookInput.mangoQuery as any\n        );\n\n        this.getPreparedQuery = () => value;\n        return value;\n    }\n\n    /**\n     * returns true if the document matches the query,\n     * does not use the 'skip' and 'limit'\n     */\n    doesDocumentDataMatch(docData: RxDocType | any): boolean {\n        // if doc is deleted, it cannot match\n        if (docData._deleted) {\n            return false;\n        }\n\n        return this.queryMatcher(docData);\n    }\n\n    /**\n     * deletes all found documents\n     * @return promise with deleted documents\n     */\n    remove(): Promise<RxQueryResult> {\n        return this\n            .exec()\n            .then(docs => {\n                if (Array.isArray(docs)) {\n                    // TODO use a bulk operation instead of running .remove() on each document\n                    return Promise.all(docs.map(doc => doc.remove()));\n                } else {\n                    return (docs as any).remove();\n                }\n            });\n    }\n    incrementalRemove(): Promise<RxQueryResult> {\n        return runQueryUpdateFunction(\n            this.asRxQuery,\n            (doc) => doc.incrementalRemove(),\n        );\n    }\n\n\n    /**\n     * helper function to transform RxQueryBase to RxQuery type\n     */\n    get asRxQuery(): RxQuery<RxDocType, RxQueryResult> {\n        return this as any;\n    }\n\n    /**\n     * updates all found documents\n     * @overwritten by plugin (optional)\n     */\n    update(_updateObj: any): Promise<RxQueryResult> {\n        throw pluginMissing('update');\n    }\n\n    patch(patch: Partial<RxDocType>): Promise<RxQueryResult> {\n        return runQueryUpdateFunction(\n            this.asRxQuery,\n            (doc) => doc.patch(patch),\n        );\n    }\n    incrementalPatch(patch: Partial<RxDocType>): Promise<RxQueryResult> {\n        return runQueryUpdateFunction(\n            this.asRxQuery,\n            (doc) => doc.incrementalPatch(patch),\n        );\n    }\n    modify(mutationFunction: ModifyFunction<RxDocType>): Promise<RxQueryResult> {\n        return runQueryUpdateFunction(\n            this.asRxQuery,\n            (doc) => doc.modify(mutationFunction),\n        );\n    }\n    incrementalModify(mutationFunction: ModifyFunction<RxDocType>): Promise<RxQueryResult> {\n        return runQueryUpdateFunction(\n            this.asRxQuery,\n            (doc) => doc.incrementalModify(mutationFunction),\n        );\n    }\n\n\n    // we only set some methods of query-builder here\n    // because the others depend on these ones\n    where(_queryObj: MangoQuerySelector<RxDocType> | keyof RxDocType | string): RxQuery<RxDocType, RxQueryResult> {\n        throw pluginMissing('query-builder');\n    }\n    sort(_params: string | MangoQuerySortPart<RxDocType>): RxQuery<RxDocType, RxQueryResult> {\n        throw pluginMissing('query-builder');\n    }\n    skip(_amount: number | null): RxQuery<RxDocType, RxQueryResult> {\n        throw pluginMissing('query-builder');\n    }\n    limit(_amount: number | null): RxQuery<RxDocType, RxQueryResult> {\n        throw pluginMissing('query-builder');\n    }\n}\n\nexport function _getDefaultQuery<RxDocType>(): MangoQuery<RxDocType> {\n    return {\n        selector: {}\n    };\n}\n\n/**\n * run this query through the QueryCache\n */\nexport function tunnelQueryCache<RxDocumentType, RxQueryResult>(\n    rxQuery: RxQueryBase<RxDocumentType, RxQueryResult>\n): RxQuery<RxDocumentType, RxQueryResult> {\n    return rxQuery.collection._queryCache.getByQuery(rxQuery as any);\n}\n\nexport function createRxQuery<RxDocType>(\n    op: RxQueryOP,\n    queryObj: MangoQuery<RxDocType>,\n    collection: RxCollection<RxDocType>,\n    other?: any\n) {\n    runPluginHooks('preCreateRxQuery', {\n        op,\n        queryObj,\n        collection,\n        other\n    });\n\n    let ret = new RxQueryBase<RxDocType, any>(op, queryObj, collection, other);\n\n    // ensure when created with same params, only one is created\n    ret = tunnelQueryCache(ret);\n    triggerCacheReplacement(collection);\n\n    return ret;\n}\n\n/**\n * Check if the current results-state is in sync with the database\n * which means that no write event happened since the last run.\n * @return false if not which means it should re-execute\n */\nfunction _isResultsInSync(rxQuery: RxQueryBase<any, any>): boolean {\n    const currentLatestEventNumber = rxQuery.asRxQuery.collection._changeEventBuffer.getCounter();\n    if (rxQuery._latestChangeEvent >= currentLatestEventNumber) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n\n/**\n * wraps __ensureEqual()\n * to ensure it does not run in parallel\n * @return true if has changed, false if not\n */\nfunction _ensureEqual(rxQuery: RxQueryBase<any, any>): Promise<boolean> {\n    // Optimisation shortcut\n    if (\n        rxQuery.collection.database.destroyed ||\n        _isResultsInSync(rxQuery)\n    ) {\n        return PROMISE_RESOLVE_FALSE;\n    }\n\n    rxQuery._ensureEqualQueue = rxQuery._ensureEqualQueue\n        .then(() => __ensureEqual(rxQuery));\n    return rxQuery._ensureEqualQueue;\n}\n\n/**\n * ensures that the results of this query is equal to the results which a query over the database would give\n * @return true if results have changed\n */\nfunction __ensureEqual<RxDocType>(rxQuery: RxQueryBase<RxDocType, any>): Promise<boolean> {\n    rxQuery._lastEnsureEqual = now();\n\n    /**\n     * Optimisation shortcuts\n     */\n    if (\n        // db is closed\n        rxQuery.collection.database.destroyed ||\n        // nothing happened since last run\n        _isResultsInSync(rxQuery)\n    ) {\n        return PROMISE_RESOLVE_FALSE;\n    }\n\n    let ret = false;\n    let mustReExec = false; // if this becomes true, a whole execution over the database is made\n    if (rxQuery._latestChangeEvent === -1) {\n        // have not executed yet -> must run\n        mustReExec = true;\n    }\n\n    /**\n     * try to use EventReduce to calculate the new results\n     */\n    if (!mustReExec) {\n        const missedChangeEvents = rxQuery.asRxQuery.collection._changeEventBuffer.getFrom(rxQuery._latestChangeEvent + 1);\n        if (missedChangeEvents === null) {\n            // changeEventBuffer is of bounds -> we must re-execute over the database\n            mustReExec = true;\n        } else {\n            rxQuery._latestChangeEvent = rxQuery.asRxQuery.collection._changeEventBuffer.getCounter();\n\n            const runChangeEvents: RxChangeEvent<RxDocType>[] = rxQuery.asRxQuery.collection\n                ._changeEventBuffer\n                .reduceByLastOfDoc(missedChangeEvents);\n\n            if (rxQuery.op === 'count') {\n                // 'count' query\n                const previousCount = ensureNotFalsy(rxQuery._result).count;\n                let newCount = previousCount;\n                runChangeEvents.forEach(cE => {\n                    const didMatchBefore = cE.previousDocumentData && rxQuery.doesDocumentDataMatch(cE.previousDocumentData);\n                    const doesMatchNow = rxQuery.doesDocumentDataMatch(cE.documentData);\n\n                    if (!didMatchBefore && doesMatchNow) {\n                        newCount++;\n                    }\n                    if (didMatchBefore && !doesMatchNow) {\n                        newCount--;\n                    }\n                });\n                if (newCount !== previousCount) {\n                    ret = true; // true because results changed\n                    rxQuery._setResultData(newCount as any);\n                }\n            } else {\n                // 'find' or 'findOne' query\n                const eventReduceResult = calculateNewResults(\n                    rxQuery as any,\n                    runChangeEvents\n                );\n                if (eventReduceResult.runFullQueryAgain) {\n                    // could not calculate the new results, execute must be done\n                    mustReExec = true;\n                } else if (eventReduceResult.changed) {\n                    // we got the new results, we do not have to re-execute, mustReExec stays false\n                    ret = true; // true because results changed\n                    rxQuery._setResultData(eventReduceResult.newResults as any);\n                }\n            }\n        }\n    }\n\n    // oh no we have to re-execute the whole query over the database\n    if (mustReExec) {\n        return rxQuery._execOverDatabase()\n            .then(newResultData => {\n\n                /**\n                 * The RxStorage is defined to always first emit events and then return\n                 * on bulkWrite() calls. So here we have to use the counter AFTER the execOverDatabase()\n                 * has been run, not the one from before.\n                 */\n                rxQuery._latestChangeEvent = rxQuery.collection._changeEventBuffer.getCounter();\n\n                // A count query needs a different has-changed check.\n                if (typeof newResultData === 'number') {\n                    if (\n                        !rxQuery._result ||\n                        newResultData !== rxQuery._result.count\n                    ) {\n                        ret = true;\n                        rxQuery._setResultData(newResultData as any);\n                    }\n                    return ret;\n                }\n                if (\n                    !rxQuery._result ||\n                    !areRxDocumentArraysEqual(\n                        rxQuery.collection.schema.primaryPath,\n                        newResultData,\n                        rxQuery._result.docsData\n                    )\n                ) {\n                    ret = true; // true because results changed\n                    rxQuery._setResultData(newResultData as any);\n                }\n                return ret;\n            });\n    }\n    return Promise.resolve(ret); // true if results have changed\n}\n\n/**\n * @returns a format of the query that can be used with the storage\n * when calling RxStorageInstance().query()\n */\nexport function prepareQuery<RxDocType>(\n    schema: RxJsonSchema<RxDocumentData<RxDocType>>,\n    mutateableQuery: FilledMangoQuery<RxDocType>\n): PreparedQuery<RxDocType> {\n    if (!mutateableQuery.sort) {\n        throw newRxError('SNH', {\n            query: mutateableQuery\n        });\n    }\n\n    /**\n     * Store the query plan together with the\n     * prepared query to save performance.\n     */\n    const queryPlan = getQueryPlan(\n        schema,\n        mutateableQuery\n    );\n\n    return {\n        query: mutateableQuery,\n        queryPlan\n    };\n}\n\n/**\n * Runs the query over the storage instance\n * of the collection.\n * Does some optimizations to ensure findById is used\n * when specific queries are used.\n */\nexport async function queryCollection<RxDocType>(\n    rxQuery: RxQuery<RxDocType> | RxQueryBase<RxDocType, any>\n): Promise<RxDocumentData<RxDocType>[]> {\n    let docs: RxDocumentData<RxDocType>[] = [];\n    const collection = rxQuery.collection;\n\n    /**\n     * Optimizations shortcut.\n     * If query is find-one-document-by-id,\n     * then we do not have to use the slow query() method\n     * but instead can use findDocumentsById()\n     */\n    if (rxQuery.isFindOneByIdQuery) {\n        if (Array.isArray(rxQuery.isFindOneByIdQuery)) {\n            let docIds = rxQuery.isFindOneByIdQuery;\n            docIds = docIds.filter(docId => {\n                // first try to fill from docCache\n                const docData = rxQuery.collection._docCache.getLatestDocumentDataIfExists(docId);\n                if (docData) {\n                    if (!docData._deleted) {\n                        docs.push(docData);\n                    }\n                    return false;\n                } else {\n                    return true;\n                }\n            });\n            // otherwise get from storage\n            if (docIds.length > 0) {\n                const docsFromStorage = await collection.storageInstance.findDocumentsById(docIds, false);\n                appendToArray(docs, docsFromStorage);\n            }\n        } else {\n            const docId = rxQuery.isFindOneByIdQuery;\n\n            // first try to fill from docCache\n            let docData = rxQuery.collection._docCache.getLatestDocumentDataIfExists(docId);\n            if (!docData) {\n                // otherwise get from storage\n                const fromStorageList = await collection.storageInstance.findDocumentsById([docId], false);\n                if (fromStorageList[0]) {\n                    docData = fromStorageList[0];\n                }\n            }\n            if (docData && !docData._deleted) {\n                docs.push(docData);\n            }\n        }\n    } else {\n        const preparedQuery = rxQuery.getPreparedQuery();\n        const queryResult = await collection.storageInstance.query(preparedQuery);\n        docs = queryResult.documents;\n    }\n    return docs;\n\n}\n\n/**\n * Returns true if the given query\n * selects exactly one document by its id.\n * Used to optimize performance because these kind of\n * queries do not have to run over an index and can use get-by-id instead.\n * Returns false if no query of that kind.\n * Returns the document id otherwise.\n */\nexport function isFindOneByIdQuery(\n    primaryPath: string,\n    query: MangoQuery<any>\n): false | string | string[] {\n    // must have exactly one operator which must be $eq || $in\n    if (\n        !query.skip &&\n        query.selector &&\n        Object.keys(query.selector).length === 1 &&\n        query.selector[primaryPath]\n    ) {\n        const value: any = query.selector[primaryPath];\n        if (typeof value === 'string') {\n            return value;\n        } else if (\n            Object.keys(value).length === 1 &&\n            typeof value.$eq === 'string'\n        ) {\n            return value.$eq;\n        }\n\n        // same with $in string arrays\n        if (\n            Object.keys(value).length === 1 &&\n            Array.isArray(value.$eq) &&\n            // must only contain strings\n            !(value.$eq as any[]).find(r => typeof r !== 'string')\n        ) {\n            return value.$eq;\n        }\n    }\n    return false;\n}\n\n\n\nexport function isRxQuery(obj: any): boolean {\n    return obj instanceof RxQueryBase;\n}\n","import { Observable } from './Observable';\nimport { EmptyError } from './util/EmptyError';\nimport { SafeSubscriber } from './Subscriber';\n\nexport interface FirstValueFromConfig<T> {\n  defaultValue: T;\n}\n\nexport function firstValueFrom<T, D>(source: Observable<T>, config: FirstValueFromConfig<D>): Promise<T | D>;\nexport function firstValueFrom<T>(source: Observable<T>): Promise<T>;\n\n/**\n * Converts an observable to a promise by subscribing to the observable,\n * and returning a promise that will resolve as soon as the first value\n * arrives from the observable. The subscription will then be closed.\n *\n * If the observable stream completes before any values were emitted, the\n * returned promise will reject with {@link EmptyError} or will resolve\n * with the default value if a default was specified.\n *\n * If the observable stream emits an error, the returned promise will reject\n * with that error.\n *\n * **WARNING**: Only use this with observables you *know* will emit at least one value,\n * *OR* complete. If the source observable does not emit one value or complete, you will\n * end up with a promise that is hung up, and potentially all of the state of an\n * async function hanging out in memory. To avoid this situation, look into adding\n * something like {@link timeout}, {@link take}, {@link takeWhile}, or {@link takeUntil}\n * amongst others.\n *\n * ## Example\n *\n * Wait for the first value from a stream and emit it from a promise in\n * an async function\n *\n * ```ts\n * import { interval, firstValueFrom } from 'rxjs';\n *\n * async function execute() {\n *   const source$ = interval(2000);\n *   const firstNumber = await firstValueFrom(source$);\n *   console.log(`The first number is ${ firstNumber }`);\n * }\n *\n * execute();\n *\n * // Expected output:\n * // 'The first number is 0'\n * ```\n *\n * @see {@link lastValueFrom}\n *\n * @param source the observable to convert to a promise\n * @param config a configuration object to define the `defaultValue` to use if the source completes without emitting a value\n */\nexport function firstValueFrom<T, D>(source: Observable<T>, config?: FirstValueFromConfig<D>): Promise<T | D> {\n  const hasConfig = typeof config === 'object';\n  return new Promise<T | D>((resolve, reject) => {\n    const subscriber = new SafeSubscriber<T>({\n      next: (value) => {\n        resolve(value);\n        subscriber.unsubscribe();\n      },\n      error: reject,\n      complete: () => {\n        if (hasConfig) {\n          resolve(config!.defaultValue);\n        } else {\n          reject(new EmptyError());\n        }\n      },\n    });\n    source.subscribe(subscriber);\n  });\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput, ObservableInputTuple, SchedulerLike } from '../types';\nimport { mergeAll } from '../operators/mergeAll';\nimport { innerFrom } from './innerFrom';\nimport { EMPTY } from './empty';\nimport { popNumber, popScheduler } from '../util/args';\nimport { from } from './from';\n\nexport function merge<A extends readonly unknown[]>(...sources: [...ObservableInputTuple<A>]): Observable<A[number]>;\nexport function merge<A extends readonly unknown[]>(...sourcesAndConcurrency: [...ObservableInputTuple<A>, number?]): Observable<A[number]>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `mergeAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function merge<A extends readonly unknown[]>(\n  ...sourcesAndScheduler: [...ObservableInputTuple<A>, SchedulerLike?]\n): Observable<A[number]>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `mergeAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function merge<A extends readonly unknown[]>(\n  ...sourcesAndConcurrencyAndScheduler: [...ObservableInputTuple<A>, number?, SchedulerLike?]\n): Observable<A[number]>;\n\n/**\n * Creates an output Observable which concurrently emits all values from every\n * given input Observable.\n *\n * <span class=\"informal\">Flattens multiple Observables together by blending\n * their values into one Observable.</span>\n *\n * ![](merge.png)\n *\n * `merge` subscribes to each given input Observable (as arguments), and simply\n * forwards (without doing any transformation) all the values from all the input\n * Observables to the output Observable. The output Observable only completes\n * once all input Observables have completed. Any error delivered by an input\n * Observable will be immediately emitted on the output Observable.\n *\n * ## Examples\n *\n * Merge together two Observables: 1s interval and clicks\n *\n * ```ts\n * import { merge, fromEvent, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const timer = interval(1000);\n * const clicksOrTimer = merge(clicks, timer);\n * clicksOrTimer.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // timer will emit ascending values, one every second(1000ms) to console\n * // clicks logs MouseEvents to console every time the \"document\" is clicked\n * // Since the two streams are merged you see these happening\n * // as they occur.\n * ```\n *\n * Merge together 3 Observables, but run only 2 concurrently\n *\n * ```ts\n * import { interval, take, merge } from 'rxjs';\n *\n * const timer1 = interval(1000).pipe(take(10));\n * const timer2 = interval(2000).pipe(take(6));\n * const timer3 = interval(500).pipe(take(10));\n *\n * const concurrent = 2; // the argument\n * const merged = merge(timer1, timer2, timer3, concurrent);\n * merged.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - First timer1 and timer2 will run concurrently\n * // - timer1 will emit a value every 1000ms for 10 iterations\n * // - timer2 will emit a value every 2000ms for 6 iterations\n * // - after timer1 hits its max iteration, timer2 will\n * //   continue, and timer3 will start to run concurrently with timer2\n * // - when timer2 hits its max iteration it terminates, and\n * //   timer3 will continue to emit a value every 500ms until it is complete\n * ```\n *\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n *\n * @param {...ObservableInput} observables Input Observables to merge together.\n * @param {number} [concurrent=Infinity] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {SchedulerLike} [scheduler=null] The {@link SchedulerLike} to use for managing\n * concurrency of input Observables.\n * @return {Observable} an Observable that emits items that are the result of\n * every input Observable.\n */\nexport function merge(...args: (ObservableInput<unknown> | number | SchedulerLike)[]): Observable<unknown> {\n  const scheduler = popScheduler(args);\n  const concurrent = popNumber(args, Infinity);\n  const sources = args as ObservableInput<unknown>[];\n  return !sources.length\n    ? // No source provided\n      EMPTY\n    : sources.length === 1\n    ? // One source? Just return it.\n      innerFrom(sources[0])\n    : // Merge all sources\n      mergeAll(concurrent)(from(sources, scheduler));\n}\n","import {\n    isBulkWriteConflictError,\n    newRxError\n} from './rx-error.ts';\nimport {\n    fillWithDefaultSettings,\n    getComposedPrimaryKeyOfDocumentData\n} from './rx-schema-helper.ts';\nimport { getSingleDocument, getWrittenDocumentsFromBulkWriteResponse, writeSingle } from './rx-storage-helper.ts';\nimport type {\n    CollectionsOfDatabase,\n    InternalStoreCollectionDocType,\n    InternalStoreDocType,\n    InternalStoreStorageTokenDocType,\n    RxCollection,\n    RxDatabase,\n    RxDocumentData,\n    RxJsonSchema,\n    RxStorageInstance,\n    RxStorageWriteErrorConflict\n} from './types/index.d.ts';\nimport {\n    clone,\n    ensureNotFalsy,\n    getDefaultRevision,\n    getDefaultRxDocumentMeta,\n    randomCouchString\n} from './plugins/utils/index.ts';\nimport { prepareQuery } from './rx-query.ts';\n\nexport const INTERNAL_CONTEXT_COLLECTION = 'collection';\nexport const INTERNAL_CONTEXT_STORAGE_TOKEN = 'storage-token';\nexport const INTERNAL_CONTEXT_MIGRATION_STATUS = 'rx-migration-status';\n\n/**\n * Do not change the title,\n * we have to flag the internal schema so that\n * some RxStorage implementations are able\n * to detect if the created RxStorageInstance\n * is from the internals or not,\n * to do some optimizations in some cases.\n */\nexport const INTERNAL_STORE_SCHEMA_TITLE = 'RxInternalDocument';\n\nexport const INTERNAL_STORE_SCHEMA: RxJsonSchema<RxDocumentData<InternalStoreDocType<any>>> = fillWithDefaultSettings({\n    version: 0,\n    title: INTERNAL_STORE_SCHEMA_TITLE,\n    primaryKey: {\n        key: 'id',\n        fields: [\n            'context',\n            'key'\n        ],\n        separator: '|'\n    },\n    type: 'object',\n    properties: {\n        id: {\n            type: 'string',\n            maxLength: 200\n        },\n        key: {\n            type: 'string'\n        },\n        context: {\n            type: 'string',\n            enum: [\n                INTERNAL_CONTEXT_COLLECTION,\n                INTERNAL_CONTEXT_STORAGE_TOKEN,\n                INTERNAL_CONTEXT_MIGRATION_STATUS,\n                'OTHER'\n            ]\n        },\n        data: {\n            type: 'object',\n            additionalProperties: true\n        }\n    },\n    indexes: [],\n    required: [\n        'key',\n        'context',\n        'data'\n    ],\n    additionalProperties: false,\n    /**\n     * If the sharding plugin is used,\n     * it must not shard on the internal RxStorageInstance\n     * because that one anyway has only a small amount of documents\n     * and also its creation is in the hot path of the initial page load,\n     * so we should spend less time creating multiple RxStorageInstances.\n     */\n    sharding: {\n        shards: 1,\n        mode: 'collection'\n    }\n});\n\n\nexport function getPrimaryKeyOfInternalDocument(\n    key: string,\n    context: string\n): string {\n    return getComposedPrimaryKeyOfDocumentData<InternalStoreDocType>(\n        INTERNAL_STORE_SCHEMA,\n        {\n            key,\n            context\n        }\n    );\n}\n\n/**\n * Returns all internal documents\n * with context 'collection'\n */\nexport async function getAllCollectionDocuments(\n    storageInstance: RxStorageInstance<InternalStoreDocType<any>, any, any>\n): Promise<RxDocumentData<InternalStoreCollectionDocType>[]> {\n    const getAllQueryPrepared = prepareQuery<InternalStoreDocType<any>>(\n        storageInstance.schema,\n        {\n            selector: {\n                context: INTERNAL_CONTEXT_COLLECTION,\n                _deleted: {\n                    $eq: false\n                }\n            },\n            sort: [{ id: 'asc' }],\n            skip: 0\n        }\n    );\n    const queryResult = await storageInstance.query(getAllQueryPrepared);\n    const allDocs = queryResult.documents;\n    return allDocs;\n}\n\n/**\n * to not confuse multiInstance-messages with other databases that have the same\n * name and adapter, but do not share state with this one (for example in-memory-instances),\n * we set a storage-token and use it in the broadcast-channel\n */\nexport const STORAGE_TOKEN_DOCUMENT_KEY = 'storageToken';\n\nexport const STORAGE_TOKEN_DOCUMENT_ID = getPrimaryKeyOfInternalDocument(\n    STORAGE_TOKEN_DOCUMENT_KEY,\n    INTERNAL_CONTEXT_STORAGE_TOKEN\n);\n\nexport async function ensureStorageTokenDocumentExists<Collections extends CollectionsOfDatabase = any>(\n    rxDatabase: RxDatabase<Collections>\n): Promise<RxDocumentData<InternalStoreStorageTokenDocType>> {\n\n    /**\n     * To have less read-write cycles,\n     * we just try to insert a new document\n     * and only fetch the existing one if a conflict happened.\n     */\n    const storageToken = randomCouchString(10);\n\n    const passwordHash = rxDatabase.password ?\n        await rxDatabase.hashFunction(JSON.stringify(rxDatabase.password)) :\n        undefined;\n\n    const docData: RxDocumentData<InternalStoreStorageTokenDocType> = {\n        id: STORAGE_TOKEN_DOCUMENT_ID,\n        context: INTERNAL_CONTEXT_STORAGE_TOKEN,\n        key: STORAGE_TOKEN_DOCUMENT_KEY,\n        data: {\n            rxdbVersion: rxDatabase.rxdbVersion,\n            token: storageToken,\n            /**\n             * We add the instance token here\n             * to be able to detect if a given RxDatabase instance\n             * is the first instance that was ever created\n             * or if databases have existed earlier on that storage\n             * with the same database name.\n             */\n            instanceToken: rxDatabase.token,\n            passwordHash\n        },\n        _deleted: false,\n        _meta: getDefaultRxDocumentMeta(),\n        _rev: getDefaultRevision(),\n        _attachments: {}\n    };\n\n    const writeRows = [{ document: docData }];\n    const writeResult = await rxDatabase.internalStore.bulkWrite(\n        writeRows,\n        'internal-add-storage-token'\n    );\n    if (!writeResult.error[0]) {\n        return getWrittenDocumentsFromBulkWriteResponse(\n            'id',\n            writeRows,\n            writeResult\n        )[0];\n    }\n\n    /**\n     * If we get a 409 error,\n     * it means another instance already inserted the storage token.\n     * So we get that token from the database and return that one.\n     */\n    const error = ensureNotFalsy(writeResult.error[0]);\n    if (\n        error.isError &&\n        isBulkWriteConflictError(error)\n    ) {\n        const conflictError = (error as RxStorageWriteErrorConflict<InternalStoreStorageTokenDocType>);\n\n        if (\n            !isDatabaseStateVersionCompatibleWithDatabaseCode(\n                conflictError.documentInDb.data.rxdbVersion,\n                rxDatabase.rxdbVersion\n            )\n        ) {\n            throw newRxError('DM5', {\n                args: {\n                    database: rxDatabase.name,\n                    databaseStateVersion: conflictError.documentInDb.data.rxdbVersion,\n                    codeVersion: rxDatabase.rxdbVersion\n                }\n            });\n        }\n\n        if (\n            passwordHash &&\n            passwordHash !== conflictError.documentInDb.data.passwordHash\n        ) {\n            throw newRxError('DB1', {\n                passwordHash,\n                existingPasswordHash: conflictError.documentInDb.data.passwordHash\n            });\n        }\n\n        const storageTokenDocInDb = conflictError.documentInDb;\n        return ensureNotFalsy(storageTokenDocInDb);\n    }\n    throw error;\n}\n\n\nexport function isDatabaseStateVersionCompatibleWithDatabaseCode(\n    databaseStateVersion: string,\n    codeVersion: string\n): boolean {\n    if (!databaseStateVersion) {\n        return false;\n    }\n\n    if (\n        codeVersion.includes('beta') &&\n        codeVersion !== databaseStateVersion\n    ) {\n        return false;\n    }\n\n    const stateMajor = databaseStateVersion.split('.')[0];\n    const codeMajor = codeVersion.split('.')[0];\n    if (stateMajor !== codeMajor) {\n        return false;\n    }\n    return true;\n}\n\n\n\n\n\nexport async function addConnectedStorageToCollection(\n    collection: RxCollection<any>,\n    storageCollectionName: string,\n    schema: RxJsonSchema<any>\n) {\n\n    if (collection.schema.version !== schema.version) {\n        throw newRxError('SNH', {\n            schema,\n            version: collection.schema.version,\n            name: collection.name,\n            collection,\n            args: {\n                storageCollectionName\n            }\n        });\n    }\n\n    const collectionNameWithVersion = _collectionNamePrimary(collection.name, collection.schema.jsonSchema);\n    const collectionDocId = getPrimaryKeyOfInternalDocument(\n        collectionNameWithVersion,\n        INTERNAL_CONTEXT_COLLECTION\n    );\n\n    while (true) {\n        const collectionDoc = await getSingleDocument(\n            collection.database.internalStore,\n            collectionDocId\n        );\n        const saveData: RxDocumentData<InternalStoreCollectionDocType> = clone(ensureNotFalsy(collectionDoc));\n\n        // do nothing if already in array\n        const alreadyThere = saveData.data.connectedStorages\n            .find(row => row.collectionName === storageCollectionName && row.schema.version === schema.version);\n        if (alreadyThere) {\n            return;\n        }\n\n        // otherwise add to array and save\n        saveData.data.connectedStorages.push({\n            collectionName: storageCollectionName,\n            schema\n        });\n        try {\n            await writeSingle(\n                collection.database.internalStore,\n                {\n                    previous: ensureNotFalsy(collectionDoc),\n                    document: saveData\n                },\n                'add-connected-storage-to-collection'\n            );\n        } catch (err) {\n            if (!isBulkWriteConflictError(err)) {\n                throw err;\n            }\n            // retry on conflict\n        }\n    }\n}\n\nexport async function removeConnectedStorageFromCollection(\n    collection: RxCollection<any>,\n    storageCollectionName: string,\n    schema: RxJsonSchema<any>\n) {\n    if (collection.schema.version !== schema.version) {\n        throw newRxError('SNH', {\n            schema,\n            version: collection.schema.version,\n            name: collection.name,\n            collection,\n            args: {\n                storageCollectionName\n            }\n        });\n    }\n\n    const collectionNameWithVersion = _collectionNamePrimary(collection.name, collection.schema.jsonSchema);\n    const collectionDocId = getPrimaryKeyOfInternalDocument(\n        collectionNameWithVersion,\n        INTERNAL_CONTEXT_COLLECTION\n    );\n\n    while (true) {\n        const collectionDoc = await getSingleDocument(\n            collection.database.internalStore,\n            collectionDocId\n        );\n        const saveData: RxDocumentData<InternalStoreCollectionDocType> = clone(ensureNotFalsy(collectionDoc));\n\n        // do nothing if not there\n        const isThere = saveData.data.connectedStorages\n            .find(row => row.collectionName === storageCollectionName && row.schema.version === schema.version);\n        if (!isThere) {\n            return;\n        }\n\n        // otherwise remove from array and save\n        saveData.data.connectedStorages = saveData.data.connectedStorages.filter(item => item.collectionName !== storageCollectionName);\n        try {\n            await writeSingle(\n                collection.database.internalStore,\n                {\n                    previous: ensureNotFalsy(collectionDoc),\n                    document: saveData\n                },\n                'remove-connected-storage-from-collection'\n            );\n        } catch (err) {\n            if (!isBulkWriteConflictError(err)) {\n                throw err;\n            }\n            // retry on conflict\n        }\n    }\n}\n\n\n\n/**\n * returns the primary for a given collection-data\n * used in the internal store of a RxDatabase\n */\nexport function _collectionNamePrimary(name: string, schema: RxJsonSchema<any>) {\n    return name + '-' + schema.version;\n}\n","import type {\n    HashFunction,\n    InternalStoreDocType,\n    RxCollection,\n    RxDatabase,\n    RxDocumentData,\n    RxJsonSchema,\n    RxStorage,\n    RxStorageInstance,\n    RxStorageInstanceCreationParams\n} from './types/index.d.ts';\nimport {\n    createRevision,\n    flatClone,\n    getDefaultRevision,\n    getDefaultRxDocumentMeta,\n    now\n} from './plugins/utils/index.ts';\nimport {\n    fillObjectWithDefaults,\n    fillPrimaryKey\n} from './rx-schema-helper.ts';\nimport type { RxSchema } from './rx-schema.ts';\nimport { runAsyncPluginHooks } from './hooks.ts';\nimport { getAllCollectionDocuments } from './rx-database-internal-store.ts';\nimport { flatCloneDocWithMeta } from './rx-storage-helper.ts';\nimport { overwritable } from './overwritable.ts';\nimport type { RxCollectionBase } from './rx-collection.ts';\nimport { newRxError } from './rx-error.ts';\n\n/**\n * fills in the default data.\n * This also clones the data.\n */\nexport function fillObjectDataBeforeInsert<RxDocType>(\n    schema: RxSchema<RxDocType>,\n    data: Partial<RxDocumentData<RxDocType>> | any\n): RxDocumentData<RxDocType> {\n    data = flatClone(data);\n    data = fillObjectWithDefaults(schema, data);\n    if (typeof schema.jsonSchema.primaryKey !== 'string') {\n        data = fillPrimaryKey(\n            schema.primaryPath,\n            schema.jsonSchema,\n            data\n        );\n    }\n    data._meta = getDefaultRxDocumentMeta();\n    if (!Object.prototype.hasOwnProperty.call(data, '_deleted')) {\n        data._deleted = false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(data, '_attachments')) {\n        data._attachments = {};\n    }\n    if (!Object.prototype.hasOwnProperty.call(data, '_rev')) {\n        data._rev = getDefaultRevision();\n    }\n    return data;\n}\n\n/**\n * Creates the storage instances that are used internally in the collection\n */\nexport async function createRxCollectionStorageInstance<RxDocumentType, Internals, InstanceCreationOptions>(\n    rxDatabase: RxDatabase<{}, Internals, InstanceCreationOptions>,\n    storageInstanceCreationParams: RxStorageInstanceCreationParams<RxDocumentType, InstanceCreationOptions>\n): Promise<RxStorageInstance<RxDocumentType, Internals, InstanceCreationOptions>> {\n    storageInstanceCreationParams.multiInstance = rxDatabase.multiInstance;\n    const storageInstance = await rxDatabase.storage.createStorageInstance<RxDocumentType>(\n        storageInstanceCreationParams\n    );\n    return storageInstance;\n}\n\n/**\n * Removes the main storage of the collection\n * and all connected storages like the ones from the replication meta etc.\n */\nexport async function removeCollectionStorages(\n    storage: RxStorage<any, any>,\n    databaseInternalStorage: RxStorageInstance<InternalStoreDocType<any>, any, any>,\n    databaseInstanceToken: string,\n    databaseName: string,\n    collectionName: string,\n    password?: string,\n    /**\n     * If no hash function is provided,\n     * we assume that the whole internal store is removed anyway\n     * so we do not have to delete the meta documents.\n     */\n    hashFunction?: HashFunction,\n) {\n    const allCollectionMetaDocs = await getAllCollectionDocuments(\n        databaseInternalStorage\n    );\n    const relevantCollectionMetaDocs = allCollectionMetaDocs\n        .filter(metaDoc => metaDoc.data.name === collectionName);\n\n    let removeStorages: {\n        collectionName: string;\n        schema: RxJsonSchema<any>;\n        isCollection: boolean;\n    }[] = [];\n    relevantCollectionMetaDocs.forEach(metaDoc => {\n        removeStorages.push({\n            collectionName: metaDoc.data.name,\n            schema: metaDoc.data.schema,\n            isCollection: true\n        });\n        metaDoc.data.connectedStorages.forEach(row => removeStorages.push({\n            collectionName: row.collectionName,\n            isCollection: false,\n            schema: row.schema\n        }));\n    });\n\n    // ensure uniqueness\n    const alreadyAdded = new Set<string>();\n    removeStorages = removeStorages.filter(row => {\n        const key = row.collectionName + '||' + row.schema.version;\n        if (alreadyAdded.has(key)) {\n            return false;\n        } else {\n            alreadyAdded.add(key);\n            return true;\n        }\n    });\n\n    // remove all the storages\n    await Promise.all(\n        removeStorages\n            .map(async (row) => {\n                const storageInstance = await storage.createStorageInstance<any>({\n                    collectionName: row.collectionName,\n                    databaseInstanceToken,\n                    databaseName,\n                    multiInstance: false,\n                    options: {},\n                    schema: row.schema,\n                    password,\n                    devMode: overwritable.isDevMode()\n                });\n                await storageInstance.remove();\n                if (row.isCollection) {\n                    await runAsyncPluginHooks('postRemoveRxCollection', {\n                        storage,\n                        databaseName: databaseName,\n                        collectionName\n                    });\n                }\n            })\n    );\n\n    // remove the meta documents\n    if (hashFunction) {\n        const writeRows = relevantCollectionMetaDocs.map(doc => {\n            const writeDoc = flatCloneDocWithMeta(doc);\n            writeDoc._deleted = true;\n            writeDoc._meta.lwt = now();\n            writeDoc._rev = createRevision(\n                databaseInstanceToken,\n                doc\n            );\n            return {\n                previous: doc,\n                document: writeDoc\n            };\n        });\n        await databaseInternalStorage.bulkWrite(\n            writeRows,\n            'rx-database-remove-collection-all'\n        );\n    }\n}\n\n\nexport function ensureRxCollectionIsNotDestroyed(\n    collection: RxCollection | RxCollectionBase<any, any, any, any, any>\n) {\n    if (collection.destroyed) {\n        throw newRxError(\n            'COL21',\n            {\n                collection: collection.name,\n                version: collection.schema.version\n            }\n        );\n    }\n}\n","/**\n * a buffer-cache which holds the last X changeEvents of the collection\n */\nimport {\n    Subscription\n} from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport type {\n    RxChangeEvent,\n    RxCollection\n} from './types/index.d.ts';\nimport { appendToArray, requestIdlePromiseNoQueue } from './plugins/utils/index.ts';\n\n/**\n * This buffer rembemers previous change events\n * so that queries can use them on .exec()\n * to calculate the new result set via event-reduce instead\n * of running the query against the storage.\n */\nexport class ChangeEventBuffer<RxDocType> {\n    /**\n     * These properties are private to ensure they cannot\n     * be read without first processing the lazy tasks.\n     */\n    private subs: Subscription[] = [];\n    private counter: number = 0;\n    private eventCounterMap: WeakMap<\n        RxChangeEvent<RxDocType>, number\n    > = new WeakMap();\n    /**\n     * array with changeEvents\n     * starts with oldest known event, ends with newest\n    */\n    private buffer: RxChangeEvent<RxDocType>[] = [];\n\n    public limit: number = 100;\n\n\n\n    private tasks = new Set<Function>();\n\n    constructor(\n        public collection: RxCollection\n    ) {\n        this.subs.push(\n            this.collection.database.eventBulks$.pipe(\n                filter(changeEventBulk => changeEventBulk.collectionName === this.collection.name),\n                filter(bulk => {\n                    const first = bulk.events[0];\n                    return !first.isLocal;\n                })\n            ).subscribe(eventBulk => {\n                this.tasks.add(() => this._handleChangeEvents(eventBulk.events));\n                if (this.tasks.size <= 1) {\n                    requestIdlePromiseNoQueue().then(() => {\n                        this.processTasks();\n                    });\n                }\n            })\n        );\n    }\n\n    private processTasks() {\n        if (this.tasks.size === 0) {\n            return;\n        }\n        const tasks = Array.from(this.tasks);\n        tasks.forEach(task => task());\n        this.tasks.clear();\n    }\n\n    private _handleChangeEvents(events: RxChangeEvent<RxDocType>[]) {\n        const counterBefore = this.counter;\n        this.counter = this.counter + events.length;\n        if (events.length > this.limit) {\n            this.buffer = events.slice(events.length * -1);\n        } else {\n            appendToArray(this.buffer, events);\n            this.buffer = this.buffer.slice(this.limit * -1);\n        }\n        const counterBase = counterBefore + 1;\n        const eventCounterMap = this.eventCounterMap;\n        for (let index = 0; index < events.length; index++) {\n            const event = events[index];\n            eventCounterMap.set(event, counterBase + index);\n        }\n    }\n\n    getCounter() {\n        this.processTasks();\n        return this.counter;\n    }\n    getBuffer() {\n        this.processTasks();\n        return this.buffer;\n    }\n\n    /**\n     * gets the array-index for the given pointer\n     * @return arrayIndex which can be used to iterate from there. If null, pointer is out of lower bound\n     */\n    getArrayIndexByPointer(pointer: number): number | null {\n        this.processTasks();\n        const oldestEvent = this.buffer[0];\n        const oldestCounter = this.eventCounterMap.get(\n            oldestEvent\n        ) as number;\n\n        if (pointer < oldestCounter)\n            return null; // out of bounds\n\n        const rest = pointer - oldestCounter;\n        return rest;\n    }\n\n    /**\n     * get all changeEvents which came in later than the pointer-event\n     * @return array with change-events. If null, pointer out of bounds\n     */\n    getFrom(pointer: number): RxChangeEvent<RxDocType>[] | null {\n        this.processTasks();\n        const ret = [];\n        let currentIndex = this.getArrayIndexByPointer(pointer);\n        if (currentIndex === null) // out of bounds\n            return null;\n\n        while (true) {\n            const nextEvent = this.buffer[currentIndex];\n            currentIndex++;\n            if (!nextEvent) {\n                return ret;\n            } else {\n                ret.push(nextEvent);\n            }\n        }\n    }\n\n    runFrom(pointer: number, fn: Function) {\n        this.processTasks();\n        const ret = this.getFrom(pointer);\n        if (ret === null) {\n            throw new Error('out of bounds');\n        } else {\n            ret.forEach(cE => fn(cE));\n        }\n    }\n\n    /**\n     * no matter how many operations are done on one document,\n     * only the last operation has to be checked to calculate the new state\n     * this function reduces the events to the last ChangeEvent of each doc\n     */\n    reduceByLastOfDoc(changeEvents: RxChangeEvent<RxDocType>[]): RxChangeEvent<RxDocType>[] {\n        this.processTasks();\n        return changeEvents.slice(0);\n        // TODO the old implementation was wrong\n        // because it did not correctly reassigned the previousData of the changeevents\n        // this should be added to the event-reduce library and not be done in RxDB\n        const docEventMap: any = {};\n        changeEvents.forEach(changeEvent => {\n            docEventMap[changeEvent.documentId] = changeEvent;\n        });\n        return Object.values(docEventMap);\n    }\n\n    destroy() {\n        this.tasks.clear();\n        this.subs.forEach(sub => sub.unsubscribe());\n    }\n}\n\nexport function createChangeEventBuffer<RxdocType>(\n    collection: RxCollection<RxdocType, any>\n) {\n    return new ChangeEventBuffer<RxdocType>(collection);\n}\n","/**\n * For the ORM capabilities,\n * we have to merge the document prototype\n * with the ORM functions and the data\n * We do this iterating over the properties and\n * adding them to a new object.\n * In the future we should do this by chaining the __proto__ objects\n */\n\nimport type {\n    RxCollection,\n    RxDocument,\n    RxDocumentData\n} from './types/index.d.ts';\nimport {\n    createRxDocumentConstructor,\n    basePrototype,\n    createWithConstructor as createRxDocumentWithConstructor\n} from './rx-document.ts';\nimport {\n    runPluginHooks\n} from './hooks.ts';\nimport { overwritable } from './overwritable.ts';\nimport { getFromMapOrCreate } from './plugins/utils/index.ts';\n\nconst constructorForCollection = new WeakMap();\n\nexport function getDocumentPrototype(\n    rxCollection: RxCollection\n): any {\n    const schemaProto = rxCollection.schema.getDocumentPrototype();\n    const ormProto = getDocumentOrmPrototype(rxCollection);\n    const baseProto = basePrototype;\n    const proto = {};\n    [\n        schemaProto,\n        ormProto,\n        baseProto\n    ].forEach(obj => {\n        const props = Object.getOwnPropertyNames(obj);\n        props.forEach(key => {\n            const desc: any = Object.getOwnPropertyDescriptor(obj, key);\n            /**\n             * When enumerable is true, it will show on console dir(instance)\n             * To not pollute the output, only getters and methods are enumerable\n             */\n            let enumerable = true;\n            if (\n                key.startsWith('_') ||\n                key.endsWith('_') ||\n                key.startsWith('$') ||\n                key.endsWith('$')\n            ) enumerable = false;\n\n            if (typeof desc.value === 'function') {\n                // when getting a function, we automatically do a .bind(this)\n                Object.defineProperty(proto, key, {\n                    get() {\n                        return desc.value.bind(this);\n                    },\n                    enumerable,\n                    configurable: false\n                });\n\n            } else {\n                desc.enumerable = enumerable;\n                desc.configurable = false;\n                if (desc.writable)\n                    desc.writable = false;\n                Object.defineProperty(proto, key, desc);\n            }\n        });\n    });\n    return proto;\n}\n\nexport function getRxDocumentConstructor<RxDocType, ORM>(\n    rxCollection: RxCollection<RxDocType, ORM>\n) {\n    return getFromMapOrCreate(\n        constructorForCollection,\n        rxCollection,\n        () => createRxDocumentConstructor(\n            getDocumentPrototype(rxCollection as any)\n        )\n    );\n}\n\n/**\n * Create a RxDocument-instance from the jsonData\n * and the prototype merge.\n * You should never call this method directly,\n * instead you should get the document from collection._docCache.getCachedRxDocument().\n */\nexport function createNewRxDocument<RxDocType, ORM, Reactivity>(\n    rxCollection: RxCollection<RxDocType, ORM, {}, {}, Reactivity>,\n    documentConstructor: any,\n    docData: RxDocumentData<RxDocType>\n): RxDocument<RxDocType, ORM, Reactivity> {\n    const doc = createRxDocumentWithConstructor(\n        documentConstructor,\n        rxCollection as any,\n        overwritable.deepFreezeWhenDevMode(docData as any)\n    );\n    rxCollection._runHooksSync('post', 'create', docData, doc);\n    runPluginHooks('postCreateRxDocument', doc);\n    return doc as any;\n}\n\n\n/**\n * returns the prototype-object\n * that contains the orm-methods,\n * used in the proto-merge\n */\nexport function getDocumentOrmPrototype(rxCollection: RxCollection): any {\n    const proto: any = {};\n    Object\n        .entries(rxCollection.methods)\n        .forEach(([k, v]) => {\n            proto[k] = v;\n        });\n    return proto;\n}\n","import type {\n    RxConflictHandler,\n    RxConflictHandlerInput,\n    RxConflictHandlerOutput,\n    RxDocumentData,\n    RxStorageInstanceReplicationState\n} from '../types/index.d.ts';\nimport {\n    getDefaultRevision,\n    createRevision,\n    now,\n    flatClone,\n    deepEqual\n} from '../plugins/utils/index.ts';\nimport { stripAttachmentsDataFromDocument } from '../rx-storage-helper.ts';\n\nexport const defaultConflictHandler: RxConflictHandler<any> = function (\n    i: RxConflictHandlerInput<any>,\n    _context: string\n): Promise<RxConflictHandlerOutput<any>> {\n    const newDocumentState = stripAttachmentsDataFromDocument(i.newDocumentState);\n    const realMasterState = stripAttachmentsDataFromDocument(i.realMasterState);\n\n    /**\n     * If the documents are deep equal,\n     * we have no conflict.\n     * On your custom conflict handler you might only\n     * check some properties, like the updatedAt time,\n     * for better performance, because deepEqual is expensive.\n     */\n    if (deepEqual(\n        newDocumentState,\n        realMasterState\n    )) {\n        return Promise.resolve({\n            isEqual: true\n        });\n    }\n\n    /**\n     * The default conflict handler will always\n     * drop the fork state and use the master state instead.\n     */\n    return Promise.resolve({\n        isEqual: false,\n        documentData: i.realMasterState\n    });\n};\n\n\n/**\n * Resolves a conflict error or determines that the given document states are equal.\n * Returns the resolved document that must be written to the fork.\n * Then the new document state can be pushed upstream.\n * If document is not in conflict, returns undefined.\n * If error is non-409, it throws an error.\n * Conflicts are only solved in the upstream, never in the downstream.\n */\nexport async function resolveConflictError<RxDocType>(\n    state: RxStorageInstanceReplicationState<RxDocType>,\n    input: RxConflictHandlerInput<RxDocType>,\n    forkState: RxDocumentData<RxDocType>\n): Promise<{\n    resolvedDoc: RxDocumentData<RxDocType>;\n    output: RxConflictHandlerOutput<RxDocType>;\n} | undefined> {\n    const conflictHandler: RxConflictHandler<RxDocType> = state.input.conflictHandler;\n    const conflictHandlerOutput = await conflictHandler(input, 'replication-resolve-conflict');\n\n    if (conflictHandlerOutput.isEqual) {\n        /**\n         * Documents are equal,\n         * so this is not a conflict -> do nothing.\n         */\n        return undefined;\n    } else {\n        /**\n         * We have a resolved conflict,\n         * use the resolved document data.\n         */\n        const resolvedDoc: RxDocumentData<RxDocType> = Object.assign(\n            {},\n            conflictHandlerOutput.documentData,\n            {\n                /**\n                 * Because the resolved conflict is written to the fork,\n                 * we have to keep/update the forks _meta data, not the masters.\n                 */\n                _meta: flatClone(forkState._meta),\n                _rev: getDefaultRevision(),\n                _attachments: flatClone(forkState._attachments)\n            }\n        ) as any;\n        resolvedDoc._meta.lwt = now();\n        resolvedDoc._rev = createRevision(\n            await state.checkpointKey,\n            forkState\n        );\n        return {\n            resolvedDoc,\n            output: conflictHandlerOutput\n        };\n    }\n}\n","import {\n    filter,\n    map,\n    mergeMap\n} from 'rxjs';\n\nimport {\n    ucfirst,\n    flatClone,\n    promiseSeries,\n    pluginMissing,\n    ensureNotFalsy,\n    getFromMapOrThrow,\n    PROMISE_RESOLVE_FALSE,\n    PROMISE_RESOLVE_VOID\n} from './plugins/utils/index.ts';\nimport {\n    fillObjectDataBeforeInsert,\n    createRxCollectionStorageInstance,\n    removeCollectionStorages,\n    ensureRxCollectionIsNotDestroyed\n} from './rx-collection-helper.ts';\nimport {\n    createRxQuery,\n    _getDefaultQuery\n} from './rx-query.ts';\nimport {\n    newRxError,\n    newRxTypeError\n} from './rx-error.ts';\nimport type {\n    RxMigrationState\n} from './plugins/migration-schema/index.ts';\nimport {\n    DocumentCache,\n    mapDocumentsDataToCacheDocs\n} from './doc-cache.ts';\nimport {\n    QueryCache,\n    createQueryCache,\n    defaultCacheReplacementPolicy\n} from './query-cache.ts';\nimport {\n    ChangeEventBuffer,\n    createChangeEventBuffer\n} from './change-event-buffer.ts';\nimport {\n    runAsyncPluginHooks,\n    runPluginHooks\n} from './hooks.ts';\n\nimport {\n    Subscription,\n    Observable\n} from 'rxjs';\n\nimport type {\n    KeyFunctionMap,\n    RxCollection,\n    RxDatabase,\n    RxQuery,\n    RxDocument,\n    RxDumpCollection,\n    RxDumpCollectionAny,\n    MangoQuery,\n    MangoQueryNoLimit,\n    RxCacheReplacementPolicy,\n    RxStorageWriteError,\n    RxDocumentData,\n    RxStorageInstanceCreationParams,\n    BulkWriteRow,\n    RxChangeEvent,\n    RxChangeEventInsert,\n    RxChangeEventUpdate,\n    RxChangeEventDelete,\n    RxStorageInstance,\n    CollectionsOfDatabase,\n    RxChangeEventBulk,\n    RxLocalDocumentData,\n    RxDocumentBase,\n    RxConflictHandler,\n    MaybePromise,\n    CRDTEntry,\n    MangoQuerySelectorAndIndex,\n    MigrationStrategies\n} from './types/index.d.ts';\n\nimport {\n    RxSchema\n} from './rx-schema.ts';\n\nimport {\n    createNewRxDocument,\n    getRxDocumentConstructor\n} from './rx-document-prototype-merge.ts';\nimport {\n    getWrappedStorageInstance,\n    getWrittenDocumentsFromBulkWriteResponse,\n    throwIfIsStorageWriteError,\n    WrappedRxStorageInstance\n} from './rx-storage-helper.ts';\nimport { defaultConflictHandler } from './replication-protocol/index.ts';\nimport { IncrementalWriteQueue } from './incremental-write.ts';\nimport { beforeDocumentUpdateWrite } from './rx-document.ts';\nimport { overwritable } from './overwritable.ts';\n\nconst HOOKS_WHEN = ['pre', 'post'] as const;\ntype HookWhenType = typeof HOOKS_WHEN[number];\nconst HOOKS_KEYS = ['insert', 'save', 'remove', 'create'] as const;\ntype HookKeyType = typeof HOOKS_KEYS[number];\nlet hooksApplied = false;\n\nexport class RxCollectionBase<\n    InstanceCreationOptions,\n    RxDocumentType = { [prop: string]: any; },\n    OrmMethods = {},\n    StaticMethods = { [key: string]: any; },\n    Reactivity = any\n> {\n\n\n    /**\n     * Stores all 'normal' documents\n     */\n    public storageInstance: WrappedRxStorageInstance<RxDocumentType, any, InstanceCreationOptions> = {} as any;\n    public readonly timeouts: Set<ReturnType<typeof setTimeout>> = new Set();\n    public incrementalWriteQueue: IncrementalWriteQueue<RxDocumentType> = {} as any;\n\n    constructor(\n        public database: RxDatabase<CollectionsOfDatabase, any, InstanceCreationOptions, Reactivity>,\n        public name: string,\n        public schema: RxSchema<RxDocumentType>,\n        public internalStorageInstance: RxStorageInstance<RxDocumentType, any, InstanceCreationOptions>,\n        public instanceCreationOptions: InstanceCreationOptions = {} as any,\n        public migrationStrategies: MigrationStrategies = {},\n        public methods: KeyFunctionMap = {},\n        public attachments: KeyFunctionMap = {},\n        public options: any = {},\n        public cacheReplacementPolicy: RxCacheReplacementPolicy = defaultCacheReplacementPolicy,\n        public statics: KeyFunctionMap = {},\n        public conflictHandler: RxConflictHandler<RxDocumentType> = defaultConflictHandler\n    ) {\n        _applyHookFunctions(this.asRxCollection);\n    }\n\n    get insert$(): Observable<RxChangeEventInsert<RxDocumentType>> {\n        return this.$.pipe(\n            filter(cE => cE.operation === 'INSERT')\n        ) as any;\n    }\n    get update$(): Observable<RxChangeEventUpdate<RxDocumentType>> {\n        return this.$.pipe(\n            filter(cE => cE.operation === 'UPDATE')\n        ) as any;\n    }\n    get remove$(): Observable<RxChangeEventDelete<RxDocumentType>> {\n        return this.$.pipe(\n            filter(cE => cE.operation === 'DELETE')\n        ) as any;\n    }\n\n    public _incrementalUpsertQueues: Map<string, Promise<any>> = new Map();\n    // defaults\n    public synced: boolean = false;\n    public hooks: {\n        [key in HookKeyType]: {\n            [when in HookWhenType]: {\n                series: Function[];\n                parallel: Function[];\n            };\n        }\n    } = {} as any;\n    public _subs: Subscription[] = [];\n\n    public _docCache: DocumentCache<RxDocumentType, OrmMethods> = {} as any;\n\n    public _queryCache: QueryCache = createQueryCache();\n    public $: Observable<RxChangeEvent<RxDocumentType>> = {} as any;\n    public checkpoint$: Observable<any> = {} as any;\n    public _changeEventBuffer: ChangeEventBuffer<RxDocumentType> = {} as ChangeEventBuffer<RxDocumentType>;\n\n\n\n    /**\n     * When the collection is destroyed,\n     * these functions will be called an awaited.\n     * Used to automatically clean up stuff that\n     * belongs to this collection.\n    */\n    public onDestroy: (() => MaybePromise<any>)[] = [];\n    public destroyed = false;\n\n    public onRemove: (() => MaybePromise<any>)[] = [];\n\n    public async prepare(): Promise<void> {\n        this.storageInstance = getWrappedStorageInstance(\n            this.database,\n            this.internalStorageInstance,\n            this.schema.jsonSchema\n        );\n        this.incrementalWriteQueue = new IncrementalWriteQueue<RxDocumentType>(\n            this.storageInstance,\n            this.schema.primaryPath,\n            (newData, oldData) => beforeDocumentUpdateWrite(this as any, newData, oldData),\n            result => this._runHooks('post', 'save', result)\n        );\n\n        const collectionEventBulks$ = this.database.eventBulks$.pipe(\n            filter(changeEventBulk => changeEventBulk.collectionName === this.name),\n        );\n        this.$ = collectionEventBulks$.pipe(\n            mergeMap(changeEventBulk => changeEventBulk.events),\n        );\n        this.checkpoint$ = collectionEventBulks$.pipe(\n            map(changeEventBulk => changeEventBulk.checkpoint),\n        );\n\n        this._changeEventBuffer = createChangeEventBuffer<RxDocumentType>(this.asRxCollection);\n        let documentConstructor: any;\n        this._docCache = new DocumentCache(\n            this.schema.primaryPath,\n            this.database.eventBulks$.pipe(\n                filter(changeEventBulk => changeEventBulk.collectionName === this.name && !changeEventBulk.events[0].isLocal),\n                map(b => b.events)\n            ),\n            docData => {\n                if (!documentConstructor) {\n                    documentConstructor = getRxDocumentConstructor(this.asRxCollection);\n                }\n                return createNewRxDocument(this.asRxCollection, documentConstructor, docData);\n            }\n        );\n\n\n        const listenToRemoveSub = this.database.internalStore.changeStream().pipe(\n            filter(bulk => {\n                const key = this.name + '-' + this.schema.version;\n                const found = bulk.events.find(event => {\n                    return (\n                        event.documentData.context === 'collection' &&\n                        event.documentData.key === key &&\n                        event.operation === 'DELETE'\n                    );\n                });\n                return !!found;\n            })\n        ).subscribe(async () => {\n            await this.destroy();\n            await Promise.all(this.onRemove.map(fn => fn()));\n        });\n        this._subs.push(listenToRemoveSub);\n\n\n        /**\n         * TODO Instead of resolving the EventBulk array here and spit it into\n         * single events, we should fully work with event bulks internally\n         * to save performance.\n         */\n        const databaseStorageToken = await this.database.storageToken;\n        const subDocs = this.storageInstance.changeStream().subscribe(eventBulk => {\n            const events = new Array(eventBulk.events.length);\n            const rawEvents = eventBulk.events;\n            const collectionName = this.name;\n            const deepFreezeWhenDevMode = overwritable.deepFreezeWhenDevMode;\n            for (let index = 0; index < rawEvents.length; index++) {\n                const event = rawEvents[index];\n                events[index] = {\n                    documentId: event.documentId,\n                    collectionName,\n                    isLocal: false,\n                    operation: event.operation,\n                    documentData: deepFreezeWhenDevMode(event.documentData) as any,\n                    previousDocumentData: deepFreezeWhenDevMode(event.previousDocumentData) as any\n                };\n            }\n            const changeEventBulk: RxChangeEventBulk<RxDocumentType | RxLocalDocumentData> = {\n                id: eventBulk.id,\n                internal: false,\n                collectionName: this.name,\n                storageToken: databaseStorageToken,\n                events,\n                databaseToken: this.database.token,\n                checkpoint: eventBulk.checkpoint,\n                context: eventBulk.context,\n                endTime: eventBulk.endTime,\n                startTime: eventBulk.startTime\n            };\n            this.database.$emit(changeEventBulk);\n        });\n        this._subs.push(subDocs);\n\n        /**\n         * Resolve the conflict tasks\n         * of the RxStorageInstance\n         */\n        this._subs.push(\n            this.storageInstance\n                .conflictResultionTasks()\n                .subscribe(task => {\n                    this\n                        .conflictHandler(task.input, task.context)\n                        .then(output => {\n                            this.storageInstance.resolveConflictResultionTask({\n                                id: task.id,\n                                output\n                            });\n                        });\n                })\n        );\n\n        return PROMISE_RESOLVE_VOID;\n    }\n\n\n    /**\n     * Manually call the cleanup function of the storage.\n     * @link https://rxdb.info/cleanup.html\n     */\n    cleanup(_minimumDeletedTime?: number): Promise<boolean> {\n        ensureRxCollectionIsNotDestroyed(this);\n        throw pluginMissing('cleanup');\n    }\n\n    // overwritten by migration-plugin\n    migrationNeeded(): Promise<boolean> {\n        throw pluginMissing('migration-schema');\n    }\n    getMigrationState(): RxMigrationState {\n        throw pluginMissing('migration-schema');\n    }\n    startMigration(batchSize: number = 10): Promise<void> {\n        ensureRxCollectionIsNotDestroyed(this);\n        return this.getMigrationState().startMigration(batchSize);\n    }\n    migratePromise(batchSize: number = 10): Promise<any> {\n        return this.getMigrationState().migratePromise(batchSize);\n    }\n\n    async insert(\n        json: RxDocumentType | RxDocument\n    ): Promise<RxDocument<RxDocumentType, OrmMethods>> {\n        ensureRxCollectionIsNotDestroyed(this);\n        const writeResult = await this.bulkInsert([json as any]);\n\n        const isError = writeResult.error[0];\n        throwIfIsStorageWriteError(this as any, (json as any)[this.schema.primaryPath] as any, json, isError);\n        const insertResult = ensureNotFalsy(writeResult.success[0]);\n        return insertResult;\n    }\n\n    async bulkInsert(\n        docsData: RxDocumentType[]\n    ): Promise<{\n        success: RxDocument<RxDocumentType, OrmMethods>[];\n        error: RxStorageWriteError<RxDocumentType>[];\n    }> {\n        ensureRxCollectionIsNotDestroyed(this);\n        /**\n         * Optimization shortcut,\n         * do nothing when called with an empty array\n        */\n        if (docsData.length === 0) {\n            return {\n                success: [],\n                error: []\n            };\n        }\n\n        const primaryPath = this.schema.primaryPath;\n\n\n        /**\n         * This code is a bit redundant for better performance.\n         * Instead of iterating multiple times,\n         * we directly transform the input to a write-row array.\n         */\n        let insertRows: BulkWriteRow<RxDocumentType>[];\n        if (this.hasHooks('pre', 'insert')) {\n            insertRows = await Promise.all(\n                docsData.map(docData => {\n                    const useDocData = fillObjectDataBeforeInsert(this.schema, docData);\n                    return this._runHooks('pre', 'insert', useDocData)\n                        .then(() => {\n                            return { document: useDocData };\n                        });\n                })\n            );\n        } else {\n            insertRows = new Array(docsData.length);\n            const schema = this.schema;\n            for (let index = 0; index < docsData.length; index++) {\n                const docData = docsData[index];\n                const useDocData = fillObjectDataBeforeInsert(schema, docData);\n                insertRows[index] = { document: useDocData };\n            }\n        }\n\n        const results = await this.storageInstance.bulkWrite(\n            insertRows,\n            'rx-collection-bulk-insert'\n        );\n\n\n        /**\n         * Often the user does not need to access the RxDocuments of the bulkInsert() call.\n         * So we transform the data to RxDocuments only if needed to use less CPU performance.\n         */\n        let rxDocuments: RxDocument<RxDocumentType, OrmMethods>[];\n        const collection = this;\n        const ret = {\n            get success() {\n                if (!rxDocuments) {\n                    const success = getWrittenDocumentsFromBulkWriteResponse(\n                        collection.schema.primaryPath,\n                        insertRows,\n                        results\n                    );\n                    rxDocuments = mapDocumentsDataToCacheDocs<RxDocumentType, OrmMethods>(collection._docCache, success);\n                }\n                return rxDocuments;\n            },\n            error: results.error\n        };\n\n        if (this.hasHooks('post', 'insert')) {\n            const docsMap: Map<string, RxDocumentType> = new Map();\n            insertRows.forEach(row => {\n                const doc = row.document;\n                docsMap.set((doc as any)[primaryPath] as any, doc);\n            });\n            await Promise.all(\n                ret.success.map(doc => {\n                    return this._runHooks(\n                        'post',\n                        'insert',\n                        docsMap.get(doc.primary),\n                        doc\n                    );\n                })\n            );\n        }\n\n        return ret;\n    }\n\n    async bulkRemove(\n        ids: string[]\n    ): Promise<{\n        success: RxDocument<RxDocumentType, OrmMethods>[];\n        error: RxStorageWriteError<RxDocumentType>[];\n    }> {\n        ensureRxCollectionIsNotDestroyed(this);\n        const primaryPath = this.schema.primaryPath;\n        /**\n         * Optimization shortcut,\n         * do nothing when called with an empty array\n         */\n        if (ids.length === 0) {\n            return {\n                success: [],\n                error: []\n            };\n        }\n\n        const rxDocumentMap = await this.findByIds(ids).exec();\n        const docsData: RxDocumentData<RxDocumentType>[] = [];\n        const docsMap: Map<string, RxDocumentData<RxDocumentType>> = new Map();\n        Array.from(rxDocumentMap.values()).forEach(rxDocument => {\n            const data: RxDocumentData<RxDocumentType> = rxDocument.toMutableJSON(true) as any;\n            docsData.push(data);\n            docsMap.set(rxDocument.primary, data);\n        });\n\n        await Promise.all(\n            docsData.map(doc => {\n                const primary = (doc as any)[this.schema.primaryPath];\n                return this._runHooks('pre', 'remove', doc, rxDocumentMap.get(primary));\n            })\n        );\n        const removeDocs: BulkWriteRow<RxDocumentType>[] = docsData.map(doc => {\n            const writeDoc = flatClone(doc);\n            writeDoc._deleted = true;\n            return {\n                previous: doc,\n                document: writeDoc\n            };\n        });\n        const results = await this.storageInstance.bulkWrite(\n            removeDocs,\n            'rx-collection-bulk-remove'\n        );\n\n\n        const success = getWrittenDocumentsFromBulkWriteResponse(\n            this.schema.primaryPath,\n            removeDocs,\n            results\n        );\n        const successIds: string[] = success.map(d => d[primaryPath] as string);\n\n        // run hooks\n        await Promise.all(\n            successIds.map(id => {\n                return this._runHooks(\n                    'post',\n                    'remove',\n                    docsMap.get(id),\n                    rxDocumentMap.get(id)\n                );\n            })\n        );\n\n        const rxDocuments = successIds.map(id => getFromMapOrThrow(rxDocumentMap, id));\n\n        return {\n            success: rxDocuments,\n            error: results.error\n        };\n    }\n\n    /**\n     * same as bulkInsert but overwrites existing document with same primary\n     */\n    async bulkUpsert(docsData: Partial<RxDocumentType>[]): Promise<{\n        success: RxDocument<RxDocumentType, OrmMethods>[];\n        error: RxStorageWriteError<RxDocumentType>[];\n    }> {\n        ensureRxCollectionIsNotDestroyed(this);\n        const insertData: RxDocumentType[] = [];\n        const useJsonByDocId: Map<string, RxDocumentType> = new Map();\n        docsData.forEach(docData => {\n            const useJson = fillObjectDataBeforeInsert(this.schema, docData);\n            const primary: string = useJson[this.schema.primaryPath] as any;\n            if (!primary) {\n                throw newRxError('COL3', {\n                    primaryPath: this.schema.primaryPath as string,\n                    data: useJson,\n                    schema: this.schema.jsonSchema\n                });\n            }\n            useJsonByDocId.set(primary, useJson);\n            insertData.push(useJson);\n        });\n\n        const insertResult = await this.bulkInsert(insertData);\n        const success = insertResult.success.slice(0);\n        const error: RxStorageWriteError<RxDocumentType>[] = [];\n\n        // update the ones that existed already\n        await Promise.all(\n            insertResult.error.map(async (err) => {\n                if (err.status !== 409) {\n                    error.push(err);\n                } else {\n                    const id = err.documentId;\n                    const writeData = getFromMapOrThrow(useJsonByDocId, id);\n                    const docDataInDb = ensureNotFalsy(err.documentInDb);\n                    const doc = this._docCache.getCachedRxDocuments([docDataInDb])[0];\n                    const newDoc = await doc.incrementalModify(() => writeData);\n                    success.push(newDoc);\n                }\n            })\n        );\n        return {\n            error,\n            success\n        };\n    }\n\n    /**\n     * same as insert but overwrites existing document with same primary\n     */\n    async upsert(json: Partial<RxDocumentType>): Promise<RxDocument<RxDocumentType, OrmMethods>> {\n        ensureRxCollectionIsNotDestroyed(this);\n        const bulkResult = await this.bulkUpsert([json]);\n        throwIfIsStorageWriteError<RxDocumentType>(\n            this.asRxCollection,\n            (json as any)[this.schema.primaryPath],\n            json as any,\n            bulkResult.error[0]\n        );\n        return bulkResult.success[0];\n    }\n\n    /**\n     * upserts to a RxDocument, uses incrementalModify if document already exists\n     */\n    incrementalUpsert(json: Partial<RxDocumentType>): Promise<RxDocument<RxDocumentType, OrmMethods>> {\n        ensureRxCollectionIsNotDestroyed(this);\n        const useJson = fillObjectDataBeforeInsert(this.schema, json);\n        const primary: string = useJson[this.schema.primaryPath] as any;\n        if (!primary) {\n            throw newRxError('COL4', {\n                data: json\n            });\n        }\n\n        // ensure that it won't try 2 parallel runs\n        let queue = this._incrementalUpsertQueues.get(primary);\n        if (!queue) {\n            queue = PROMISE_RESOLVE_VOID;\n        }\n        queue = queue\n            .then(() => _incrementalUpsertEnsureRxDocumentExists(this as any, primary as any, useJson))\n            .then((wasInserted) => {\n                if (!wasInserted.inserted) {\n                    return _incrementalUpsertUpdate(wasInserted.doc, useJson);\n                } else {\n                    return wasInserted.doc;\n                }\n            });\n        this._incrementalUpsertQueues.set(primary, queue);\n        return queue;\n    }\n\n    find(queryObj?: MangoQuery<RxDocumentType>): RxQuery<\n        RxDocumentType,\n        RxDocument<RxDocumentType, OrmMethods>[],\n        OrmMethods,\n        Reactivity\n    > {\n        ensureRxCollectionIsNotDestroyed(this);\n        if (typeof queryObj === 'string') {\n            throw newRxError('COL5', {\n                queryObj\n            });\n        }\n\n        if (!queryObj) {\n            queryObj = _getDefaultQuery();\n        }\n\n        const query = createRxQuery('find', queryObj, this as any);\n        return query as any;\n    }\n\n    findOne(\n        queryObj?: MangoQueryNoLimit<RxDocumentType> | string\n    ): RxQuery<\n        RxDocumentType,\n        RxDocument<RxDocumentType, OrmMethods> | null,\n        OrmMethods,\n        Reactivity\n    > {\n        ensureRxCollectionIsNotDestroyed(this);\n\n        // TODO move this check to dev-mode plugin\n        if (\n            typeof queryObj === 'number' ||\n            Array.isArray(queryObj)\n        ) {\n            throw newRxTypeError('COL6', {\n                queryObj\n            });\n        }\n\n        let query;\n\n        if (typeof queryObj === 'string') {\n            query = createRxQuery('findOne', {\n                selector: {\n                    [this.schema.primaryPath]: queryObj\n                },\n                limit: 1\n            }, this as any);\n        } else {\n            if (!queryObj) {\n                queryObj = _getDefaultQuery();\n            }\n\n\n            // cannot have limit on findOne queries because it will be overwritten\n            if ((queryObj as MangoQuery).limit) {\n                throw newRxError('QU6');\n            }\n\n            queryObj = flatClone(queryObj);\n            (queryObj as any).limit = 1;\n            query = createRxQuery<RxDocumentType>('findOne', queryObj, this as any);\n        }\n\n\n        return query as any;\n    }\n\n    count(queryObj?: MangoQuerySelectorAndIndex<RxDocumentType>): RxQuery<\n        RxDocumentType,\n        number,\n        OrmMethods,\n        Reactivity\n    > {\n        ensureRxCollectionIsNotDestroyed(this);\n        if (!queryObj) {\n            queryObj = _getDefaultQuery();\n        }\n        const query = createRxQuery('count', queryObj, this as any);\n        return query as any;\n    }\n\n    /**\n     * find a list documents by their primary key\n     * has way better performance then running multiple findOne() or a find() with a complex $or-selected\n     */\n    findByIds(\n        ids: string[]\n    ): RxQuery<\n        RxDocumentType,\n        Map<string, RxDocument<RxDocumentType, OrmMethods>>,\n        OrmMethods,\n        Reactivity\n    > {\n        ensureRxCollectionIsNotDestroyed(this);\n        const mangoQuery: MangoQuery<RxDocumentType> = {\n            selector: {\n                [this.schema.primaryPath]: {\n                    $in: ids.slice(0)\n                }\n            } as any\n        };\n        const query = createRxQuery('findByIds', mangoQuery, this as any);\n        return query as any;\n    }\n\n    /**\n     * Export collection to a JSON friendly format.\n     */\n    exportJSON(): Promise<RxDumpCollection<RxDocumentType>>;\n    exportJSON(): Promise<RxDumpCollectionAny<RxDocumentType>>;\n    exportJSON(): Promise<any> {\n        throw pluginMissing('json-dump');\n    }\n\n    /**\n     * Import the parsed JSON export into the collection.\n     * @param _exportedJSON The previously exported data from the `<collection>.exportJSON()` method.\n     */\n    importJSON(_exportedJSON: RxDumpCollectionAny<RxDocumentType>): Promise<void> {\n        throw pluginMissing('json-dump');\n    }\n\n    insertCRDT(_updateObj: CRDTEntry<any> | CRDTEntry<any>[]): RxDocument<RxDocumentType, OrmMethods> {\n        throw pluginMissing('crdt');\n    }\n\n    /**\n     * HOOKS\n     */\n    addHook(when: HookWhenType, key: HookKeyType, fun: any, parallel = false) {\n        if (typeof fun !== 'function') {\n            throw newRxTypeError('COL7', {\n                key,\n                when\n            });\n        }\n\n        if (!HOOKS_WHEN.includes(when)) {\n            throw newRxTypeError('COL8', {\n                key,\n                when\n            });\n        }\n\n        if (!HOOKS_KEYS.includes(key)) {\n            throw newRxError('COL9', {\n                key\n            });\n        }\n\n        if (when === 'post' && key === 'create' && parallel === true) {\n            throw newRxError('COL10', {\n                when,\n                key,\n                parallel\n            });\n        }\n\n        // bind this-scope to hook-function\n        const boundFun = fun.bind(this);\n\n        const runName = parallel ? 'parallel' : 'series';\n\n        this.hooks[key] = this.hooks[key] || {};\n        this.hooks[key][when] = this.hooks[key][when] || {\n            series: [],\n            parallel: []\n        };\n        this.hooks[key][when][runName].push(boundFun);\n    }\n\n    getHooks(when: HookWhenType, key: HookKeyType) {\n        if (\n            !this.hooks[key] ||\n            !this.hooks[key][when]\n        ) {\n            return {\n                series: [],\n                parallel: []\n            };\n        }\n        return this.hooks[key][when];\n    }\n\n    hasHooks(when: HookWhenType, key: HookKeyType) {\n        /**\n         * Performance shortcut\n         * so that we not have to build the empty object.\n         */\n        if (\n            !this.hooks[key] ||\n            !this.hooks[key][when]\n        ) {\n            return false;\n        }\n\n        const hooks = this.getHooks(when, key);\n        if (!hooks) {\n            return false;\n        }\n        return hooks.series.length > 0 || hooks.parallel.length > 0;\n    }\n\n    _runHooks(when: HookWhenType, key: HookKeyType, data: any, instance?: any): Promise<any> {\n        const hooks = this.getHooks(when, key);\n\n        if (!hooks) {\n            return PROMISE_RESOLVE_VOID;\n        }\n\n        // run parallel: false\n        const tasks = hooks.series.map((hook: any) => () => hook(data, instance));\n        return promiseSeries(tasks)\n            // run parallel: true\n            .then(() => Promise.all(\n                hooks.parallel\n                    .map((hook: any) => hook(data, instance))\n            ));\n    }\n\n    /**\n     * does the same as ._runHooks() but with non-async-functions\n     */\n    _runHooksSync(when: HookWhenType, key: HookKeyType, data: any, instance: any) {\n        if (!this.hasHooks(when, key)) {\n            return;\n        }\n        const hooks = this.getHooks(when, key);\n        if (!hooks) return;\n        hooks.series.forEach((hook: any) => hook(data, instance));\n    }\n\n    /**\n     * Returns a promise that resolves after the given time.\n     * Ensures that is properly cleans up when the collection is destroyed\n     * so that no running timeouts prevent the exit of the JavaScript process.\n     */\n    promiseWait(time: number): Promise<void> {\n        const ret = new Promise<void>(res => {\n            const timeout = setTimeout(() => {\n                this.timeouts.delete(timeout);\n                res();\n            }, time);\n            this.timeouts.add(timeout);\n        });\n        return ret;\n    }\n\n    async destroy(): Promise<boolean> {\n        if (this.destroyed) {\n            return PROMISE_RESOLVE_FALSE;\n        }\n\n\n        await Promise.all(this.onDestroy.map(fn => fn()));\n\n        /**\n         * Settings destroyed = true\n         * must be the first thing to do,\n         * so for example the replication can directly stop\n         * instead of sending requests to a closed storage.\n         */\n        this.destroyed = true;\n\n\n        Array.from(this.timeouts).forEach(timeout => clearTimeout(timeout));\n        if (this._changeEventBuffer) {\n            this._changeEventBuffer.destroy();\n        }\n        /**\n         * First wait until the whole database is idle.\n         * This ensures that the storage does not get closed\n         * while some operation is running.\n         * It is important that we do not intercept a running call\n         * because it might lead to undefined behavior like when a doc is written\n         * but the change is not added to the changes collection.\n         */\n        return this.database.requestIdlePromise()\n            .then(() => this.storageInstance.close())\n            .then(() => {\n                /**\n                 * Unsubscribing must be done AFTER the storageInstance.close()\n                 * Because the conflict handling is part of the subscriptions and\n                 * otherwise there might be open conflicts to be resolved which\n                 * will then stuck and never resolve.\n                 */\n                this._subs.forEach(sub => sub.unsubscribe());\n\n                delete this.database.collections[this.name];\n                return runAsyncPluginHooks('postDestroyRxCollection', this).then(() => true);\n            });\n    }\n\n    /**\n     * remove all data of the collection\n     */\n    async remove(): Promise<any> {\n        await this.destroy();\n        await Promise.all(this.onRemove.map(fn => fn()));\n        await removeCollectionStorages(\n            this.database.storage,\n            this.database.internalStore,\n            this.database.token,\n            this.database.name,\n            this.name,\n            this.database.password,\n            this.database.hashFunction\n        );\n    }\n\n    get asRxCollection(): RxCollection<RxDocumentType, OrmMethods, StaticMethods, any, Reactivity> {\n        return this as any;\n    }\n}\n\n/**\n * adds the hook-functions to the collections prototype\n * this runs only once\n */\nfunction _applyHookFunctions(\n    collection: RxCollection<any, any>\n) {\n    if (hooksApplied) return; // already run\n    hooksApplied = true;\n    const colProto = Object.getPrototypeOf(collection);\n    HOOKS_KEYS.forEach(key => {\n        HOOKS_WHEN.map(when => {\n            const fnName = when + ucfirst(key);\n            colProto[fnName] = function (fun: string, parallel: boolean) {\n                return this.addHook(when, key, fun, parallel);\n            };\n        });\n    });\n}\n\nfunction _incrementalUpsertUpdate<RxDocType>(\n    doc: RxDocumentBase<RxDocType>,\n    json: RxDocumentData<RxDocType>\n): Promise<RxDocumentBase<RxDocType>> {\n    return doc.incrementalModify((_innerDoc) => {\n        return json;\n    });\n}\n\n/**\n * ensures that the given document exists\n * @return promise that resolves with new doc and flag if inserted\n */\nfunction _incrementalUpsertEnsureRxDocumentExists<RxDocType>(\n    rxCollection: RxCollection<RxDocType>,\n    primary: string,\n    json: any\n): Promise<\n    {\n        doc: RxDocument<RxDocType>;\n        inserted: boolean;\n    }\n> {\n    /**\n     * Optimisation shortcut,\n     * first try to find the document in the doc-cache\n     */\n    const docDataFromCache = rxCollection._docCache.getLatestDocumentDataIfExists(primary);\n    if (docDataFromCache) {\n        return Promise.resolve({\n            doc: rxCollection._docCache.getCachedRxDocuments([docDataFromCache])[0],\n            inserted: false\n        });\n    }\n    return rxCollection.findOne(primary).exec()\n        .then(doc => {\n            if (!doc) {\n                return rxCollection.insert(json).then(newDoc => ({\n                    doc: newDoc,\n                    inserted: true\n                }));\n            } else {\n                return {\n                    doc,\n                    inserted: false\n                };\n            }\n        });\n}\n\n/**\n * creates and prepares a new collection\n */\nexport function createRxCollection(\n    {\n        database,\n        name,\n        schema,\n        instanceCreationOptions = {},\n        migrationStrategies = {},\n        autoMigrate = true,\n        statics = {},\n        methods = {},\n        attachments = {},\n        options = {},\n        localDocuments = false,\n        cacheReplacementPolicy = defaultCacheReplacementPolicy,\n        conflictHandler = defaultConflictHandler\n    }: any\n): Promise<RxCollection> {\n    const storageInstanceCreationParams: RxStorageInstanceCreationParams<any, any> = {\n        databaseInstanceToken: database.token,\n        databaseName: database.name,\n        collectionName: name,\n        schema: schema.jsonSchema,\n        options: instanceCreationOptions,\n        multiInstance: database.multiInstance,\n        password: database.password,\n        devMode: overwritable.isDevMode()\n    };\n\n    runPluginHooks(\n        'preCreateRxStorageInstance',\n        storageInstanceCreationParams\n    );\n\n    return createRxCollectionStorageInstance(\n        database,\n        storageInstanceCreationParams\n    ).then(storageInstance => {\n        const collection = new RxCollectionBase(\n            database,\n            name,\n            schema,\n            storageInstance,\n            instanceCreationOptions,\n            migrationStrategies,\n            methods,\n            attachments,\n            options,\n            cacheReplacementPolicy,\n            statics,\n            conflictHandler\n        );\n\n        return collection\n            .prepare()\n            .then(() => {\n                // ORM add statics\n                Object\n                    .entries(statics)\n                    .forEach(([funName, fun]) => {\n                        Object.defineProperty(collection, funName, {\n                            get: () => (fun as any).bind(collection)\n                        });\n                    });\n\n                let ret = PROMISE_RESOLVE_VOID;\n                if (autoMigrate && collection.schema.version !== 0) {\n                    ret = collection.migratePromise();\n                }\n                return ret;\n            })\n            .then(() => {\n                runPluginHooks('createRxCollection', {\n                    collection,\n                    creator: {\n                        name,\n                        schema,\n                        storageInstance,\n                        instanceCreationOptions,\n                        migrationStrategies,\n                        methods,\n                        attachments,\n                        options,\n                        cacheReplacementPolicy,\n                        localDocuments,\n                        statics\n                    }\n                });\n                return collection as any;\n            })\n            /**\n             * If the collection creation fails,\n             * we yet have to close the storage instances.\n             */\n            .catch(err => {\n                return storageInstance.close()\n                    .then(() => Promise.reject(err));\n            });\n    });\n}\n\nexport function isRxCollection(obj: any): boolean {\n    return obj instanceof RxCollectionBase;\n}\n","/**\n * Creates a new Idle-Queue\n * @constructor\n * @param {number} [parallels=1] amount of parrallel runs of the limited-ressource\n */\nexport var IdleQueue = function IdleQueue() {\n  var parallels = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n  this._parallels = parallels || 1;\n  /**\n   * _queueCounter\n   * each lock() increased this number\n   * each unlock() decreases this number\n   * If _qC==0, the state is in idle\n   * @type {Number}\n   */\n\n  this._qC = 0;\n  /**\n   * _idleCalls\n   * contains all promises that where added via requestIdlePromise()\n   * and not have been resolved\n   * @type {Set<Promise>} _iC with oldest promise first\n   */\n\n  this._iC = new Set();\n  /**\n   * _lastHandleNumber\n   * @type {Number}\n   */\n\n  this._lHN = 0;\n  /**\n   * _handlePromiseMap\n   * Contains the handleNumber on the left\n   * And the assigned promise on the right.\n   * This is stored so you can use cancelIdleCallback(handleNumber)\n   * to stop executing the callback.\n   * @type {Map<Number><Promise>}\n   */\n\n  this._hPM = new Map();\n  this._pHM = new Map(); // _promiseHandleMap\n};\nIdleQueue.prototype = {\n  isIdle: function isIdle() {\n    return this._qC < this._parallels;\n  },\n\n  /**\n   * creates a lock in the queue\n   * and returns an unlock-function to remove the lock from the queue\n   * @return {function} unlock function than must be called afterwards\n   */\n  lock: function lock() {\n    this._qC++;\n  },\n  unlock: function unlock() {\n    this._qC--;\n\n    _tryIdleCall(this);\n  },\n\n  /**\n   * wraps a function with lock/unlock and runs it\n   * @param  {function}  fun\n   * @return {Promise<any>}\n   */\n  wrapCall: function wrapCall(fun) {\n    var _this = this;\n\n    this.lock();\n    var maybePromise;\n\n    try {\n      maybePromise = fun();\n    } catch (err) {\n      this.unlock();\n      throw err;\n    }\n\n    if (!maybePromise.then || typeof maybePromise.then !== 'function') {\n      // no promise\n      this.unlock();\n      return maybePromise;\n    } else {\n      // promise\n      return maybePromise.then(function (ret) {\n        // sucessfull -> unlock before return\n        _this.unlock();\n\n        return ret;\n      })[\"catch\"](function (err) {\n        // not sucessfull -> unlock before throwing\n        _this.unlock();\n\n        throw err;\n      });\n    }\n  },\n\n  /**\n   * does the same as requestIdleCallback() but uses promises instead of the callback\n   * @param {{timeout?: number}} options like timeout\n   * @return {Promise<void>} promise that resolves when the database is in idle-mode\n   */\n  requestIdlePromise: function requestIdlePromise(options) {\n    var _this2 = this;\n\n    options = options || {};\n    var resolve;\n    var prom = new Promise(function (res) {\n      return resolve = res;\n    });\n\n    var resolveFromOutside = function resolveFromOutside() {\n      _removeIdlePromise(_this2, prom);\n\n      resolve();\n    };\n\n    prom._manRes = resolveFromOutside;\n\n    if (options.timeout) {\n      // if timeout has passed, resolve promise even if not idle\n      var timeoutObj = setTimeout(function () {\n        prom._manRes();\n      }, options.timeout);\n      prom._timeoutObj = timeoutObj;\n    }\n\n    this._iC.add(prom);\n\n    _tryIdleCall(this);\n\n    return prom;\n  },\n\n  /**\n   * remove the promise so it will never be resolved\n   * @param  {Promise} promise from requestIdlePromise()\n   * @return {void}\n   */\n  cancelIdlePromise: function cancelIdlePromise(promise) {\n    _removeIdlePromise(this, promise);\n  },\n\n  /**\n   * api equal to\n   * @link https://developer.mozilla.org/en-US/docs/Web/API/Window/requestIdleCallback\n   * @param  {Function} callback\n   * @param  {options}   options  [description]\n   * @return {number} handle which can be used with cancelIdleCallback()\n   */\n  requestIdleCallback: function requestIdleCallback(callback, options) {\n    var handle = this._lHN++;\n    var promise = this.requestIdlePromise(options);\n\n    this._hPM.set(handle, promise);\n\n    this._pHM.set(promise, handle);\n\n    promise.then(function () {\n      return callback();\n    });\n    return handle;\n  },\n\n  /**\n   * API equal to\n   * @link https://developer.mozilla.org/en-US/docs/Web/API/Window/cancelIdleCallback\n   * @param  {number} handle returned from requestIdleCallback()\n   * @return {void}\n   */\n  cancelIdleCallback: function cancelIdleCallback(handle) {\n    var promise = this._hPM.get(handle);\n\n    this.cancelIdlePromise(promise);\n  },\n\n  /**\n   * clears and resets everything\n   * @return {void}\n   */\n  clear: function clear() {\n    var _this3 = this;\n\n    // remove all non-cleared\n    this._iC.forEach(function (promise) {\n      return _removeIdlePromise(_this3, promise);\n    });\n\n    this._qC = 0;\n\n    this._iC.clear();\n\n    this._hPM = new Map();\n    this._pHM = new Map();\n  }\n};\n/**\n * processes the oldest call of the idleCalls-queue\n * @return {Promise<void>}\n */\n\nfunction _resolveOneIdleCall(idleQueue) {\n  if (idleQueue._iC.size === 0) return;\n\n  var iterator = idleQueue._iC.values();\n\n  var oldestPromise = iterator.next().value;\n\n  oldestPromise._manRes(); // try to call the next tick\n\n\n  setTimeout(function () {\n    return _tryIdleCall(idleQueue);\n  }, 0);\n}\n/**\n * removes the promise from the queue and maps and also its corresponding handle-number\n * @param  {Promise} promise from requestIdlePromise()\n * @return {void}\n */\n\n\nfunction _removeIdlePromise(idleQueue, promise) {\n  if (!promise) return; // remove timeout if exists\n\n  if (promise._timeoutObj) clearTimeout(promise._timeoutObj); // remove handle-nr if exists\n\n  if (idleQueue._pHM.has(promise)) {\n    var handle = idleQueue._pHM.get(promise);\n\n    idleQueue._hPM[\"delete\"](handle);\n\n    idleQueue._pHM[\"delete\"](promise);\n  } // remove from queue\n\n\n  idleQueue._iC[\"delete\"](promise);\n}\n/**\n * resolves the last entry of this._iC\n * but only if the queue is empty\n * @return {Promise}\n */\n\n\nfunction _tryIdleCall(idleQueue) {\n  // ensure this does not run in parallel\n  if (idleQueue._tryIR || idleQueue._iC.size === 0) return;\n  idleQueue._tryIR = true; // w8 one tick\n\n  setTimeout(function () {\n    // check if queue empty\n    if (!idleQueue.isIdle()) {\n      idleQueue._tryIR = false;\n      return;\n    }\n    /**\n     * wait 1 tick here\n     * because many functions do IO->CPU->IO\n     * which means the queue is empty for a short time\n     * but the ressource is not idle\n     */\n\n\n    setTimeout(function () {\n      // check if queue still empty\n      if (!idleQueue.isIdle()) {\n        idleQueue._tryIR = false;\n        return;\n      } // ressource is idle\n\n\n      _resolveOneIdleCall(idleQueue);\n\n      idleQueue._tryIR = false;\n    }, 0);\n  }, 0);\n}","/**\n * This file is replaced in the 'npm run build:version' script.\n */\nexport const RXDB_VERSION = '15.28.0';\n","const defaults = Object.freeze({\n  ignoreUnknown: false,\n  respectType: false,\n  respectFunctionNames: false,\n  respectFunctionProperties: false,\n  unorderedObjects: true,\n  unorderedArrays: false,\n  unorderedSets: false,\n  excludeKeys: void 0,\n  excludeValues: void 0,\n  replacer: void 0\n});\nfunction objectHash(object, options) {\n  if (options) {\n    options = { ...defaults, ...options };\n  } else {\n    options = defaults;\n  }\n  const hasher = createHasher(options);\n  hasher.dispatch(object);\n  return hasher.toString();\n}\nconst defaultPrototypesKeys = Object.freeze([\n  \"prototype\",\n  \"__proto__\",\n  \"constructor\"\n]);\nfunction createHasher(options) {\n  let buff = \"\";\n  let context = /* @__PURE__ */ new Map();\n  const write = (str) => {\n    buff += str;\n  };\n  return {\n    toString() {\n      return buff;\n    },\n    getContext() {\n      return context;\n    },\n    dispatch(value) {\n      if (options.replacer) {\n        value = options.replacer(value);\n      }\n      const type = value === null ? \"null\" : typeof value;\n      return this[type](value);\n    },\n    object(object) {\n      if (object && typeof object.toJSON === \"function\") {\n        return this.object(object.toJSON());\n      }\n      const objString = Object.prototype.toString.call(object);\n      let objType = \"\";\n      const objectLength = objString.length;\n      if (objectLength < 10) {\n        objType = \"unknown:[\" + objString + \"]\";\n      } else {\n        objType = objString.slice(8, objectLength - 1);\n      }\n      objType = objType.toLowerCase();\n      let objectNumber = null;\n      if ((objectNumber = context.get(object)) === void 0) {\n        context.set(object, context.size);\n      } else {\n        return this.dispatch(\"[CIRCULAR:\" + objectNumber + \"]\");\n      }\n      if (typeof Buffer !== \"undefined\" && Buffer.isBuffer && Buffer.isBuffer(object)) {\n        write(\"buffer:\");\n        return write(object.toString(\"utf8\"));\n      }\n      if (objType !== \"object\" && objType !== \"function\" && objType !== \"asyncfunction\") {\n        if (this[objType]) {\n          this[objType](object);\n        } else if (!options.ignoreUnknown) {\n          this.unkown(object, objType);\n        }\n      } else {\n        let keys = Object.keys(object);\n        if (options.unorderedObjects) {\n          keys = keys.sort();\n        }\n        let extraKeys = [];\n        if (options.respectType !== false && !isNativeFunction(object)) {\n          extraKeys = defaultPrototypesKeys;\n        }\n        if (options.excludeKeys) {\n          keys = keys.filter((key) => {\n            return !options.excludeKeys(key);\n          });\n          extraKeys = extraKeys.filter((key) => {\n            return !options.excludeKeys(key);\n          });\n        }\n        write(\"object:\" + (keys.length + extraKeys.length) + \":\");\n        const dispatchForKey = (key) => {\n          this.dispatch(key);\n          write(\":\");\n          if (!options.excludeValues) {\n            this.dispatch(object[key]);\n          }\n          write(\",\");\n        };\n        for (const key of keys) {\n          dispatchForKey(key);\n        }\n        for (const key of extraKeys) {\n          dispatchForKey(key);\n        }\n      }\n    },\n    array(arr, unordered) {\n      unordered = unordered === void 0 ? options.unorderedArrays !== false : unordered;\n      write(\"array:\" + arr.length + \":\");\n      if (!unordered || arr.length <= 1) {\n        for (const entry of arr) {\n          this.dispatch(entry);\n        }\n        return;\n      }\n      const contextAdditions = /* @__PURE__ */ new Map();\n      const entries = arr.map((entry) => {\n        const hasher = createHasher(options);\n        hasher.dispatch(entry);\n        for (const [key, value] of hasher.getContext()) {\n          contextAdditions.set(key, value);\n        }\n        return hasher.toString();\n      });\n      context = contextAdditions;\n      entries.sort();\n      return this.array(entries, false);\n    },\n    date(date) {\n      return write(\"date:\" + date.toJSON());\n    },\n    symbol(sym) {\n      return write(\"symbol:\" + sym.toString());\n    },\n    unkown(value, type) {\n      write(type);\n      if (!value) {\n        return;\n      }\n      write(\":\");\n      if (value && typeof value.entries === \"function\") {\n        return this.array(\n          Array.from(value.entries()),\n          true\n          /* ordered */\n        );\n      }\n    },\n    error(err) {\n      return write(\"error:\" + err.toString());\n    },\n    boolean(bool) {\n      return write(\"bool:\" + bool);\n    },\n    string(string) {\n      write(\"string:\" + string.length + \":\");\n      write(string);\n    },\n    function(fn) {\n      write(\"fn:\");\n      if (isNativeFunction(fn)) {\n        this.dispatch(\"[native]\");\n      } else {\n        this.dispatch(fn.toString());\n      }\n      if (options.respectFunctionNames !== false) {\n        this.dispatch(\"function-name:\" + String(fn.name));\n      }\n      if (options.respectFunctionProperties) {\n        this.object(fn);\n      }\n    },\n    number(number) {\n      return write(\"number:\" + number);\n    },\n    xml(xml) {\n      return write(\"xml:\" + xml.toString());\n    },\n    null() {\n      return write(\"Null\");\n    },\n    undefined() {\n      return write(\"Undefined\");\n    },\n    regexp(regex) {\n      return write(\"regex:\" + regex.toString());\n    },\n    uint8array(arr) {\n      write(\"uint8array:\");\n      return this.dispatch(Array.prototype.slice.call(arr));\n    },\n    uint8clampedarray(arr) {\n      write(\"uint8clampedarray:\");\n      return this.dispatch(Array.prototype.slice.call(arr));\n    },\n    int8array(arr) {\n      write(\"int8array:\");\n      return this.dispatch(Array.prototype.slice.call(arr));\n    },\n    uint16array(arr) {\n      write(\"uint16array:\");\n      return this.dispatch(Array.prototype.slice.call(arr));\n    },\n    int16array(arr) {\n      write(\"int16array:\");\n      return this.dispatch(Array.prototype.slice.call(arr));\n    },\n    uint32array(arr) {\n      write(\"uint32array:\");\n      return this.dispatch(Array.prototype.slice.call(arr));\n    },\n    int32array(arr) {\n      write(\"int32array:\");\n      return this.dispatch(Array.prototype.slice.call(arr));\n    },\n    float32array(arr) {\n      write(\"float32array:\");\n      return this.dispatch(Array.prototype.slice.call(arr));\n    },\n    float64array(arr) {\n      write(\"float64array:\");\n      return this.dispatch(Array.prototype.slice.call(arr));\n    },\n    arraybuffer(arr) {\n      write(\"arraybuffer:\");\n      return this.dispatch(new Uint8Array(arr));\n    },\n    url(url) {\n      return write(\"url:\" + url.toString());\n    },\n    map(map) {\n      write(\"map:\");\n      const arr = [...map];\n      return this.array(arr, options.unorderedSets !== false);\n    },\n    set(set) {\n      write(\"set:\");\n      const arr = [...set];\n      return this.array(arr, options.unorderedSets !== false);\n    },\n    file(file) {\n      write(\"file:\");\n      return this.dispatch([file.name, file.size, file.type, file.lastModfied]);\n    },\n    blob() {\n      if (options.ignoreUnknown) {\n        return write(\"[blob]\");\n      }\n      throw new Error(\n        'Hashing Blob objects is currently not supported\\nUse \"options.replacer\" or \"options.ignoreUnknown\"\\n'\n      );\n    },\n    domwindow() {\n      return write(\"domwindow\");\n    },\n    bigint(number) {\n      return write(\"bigint:\" + number.toString());\n    },\n    /* Node.js standard native objects */\n    process() {\n      return write(\"process\");\n    },\n    timer() {\n      return write(\"timer\");\n    },\n    pipe() {\n      return write(\"pipe\");\n    },\n    tcp() {\n      return write(\"tcp\");\n    },\n    udp() {\n      return write(\"udp\");\n    },\n    tty() {\n      return write(\"tty\");\n    },\n    statwatcher() {\n      return write(\"statwatcher\");\n    },\n    securecontext() {\n      return write(\"securecontext\");\n    },\n    connection() {\n      return write(\"connection\");\n    },\n    zlib() {\n      return write(\"zlib\");\n    },\n    context() {\n      return write(\"context\");\n    },\n    nodescript() {\n      return write(\"nodescript\");\n    },\n    httpparser() {\n      return write(\"httpparser\");\n    },\n    dataview() {\n      return write(\"dataview\");\n    },\n    signal() {\n      return write(\"signal\");\n    },\n    fsevent() {\n      return write(\"fsevent\");\n    },\n    tlswrap() {\n      return write(\"tlswrap\");\n    }\n  };\n}\nconst nativeFunc = \"[native code] }\";\nconst nativeFuncLength = nativeFunc.length;\nfunction isNativeFunction(f) {\n  if (typeof f !== \"function\") {\n    return false;\n  }\n  return Function.prototype.toString.call(f).slice(-nativeFuncLength) === nativeFunc;\n}\n\nclass WordArray {\n  constructor(words, sigBytes) {\n    words = this.words = words || [];\n    this.sigBytes = sigBytes === void 0 ? words.length * 4 : sigBytes;\n  }\n  toString(encoder) {\n    return (encoder || Hex).stringify(this);\n  }\n  concat(wordArray) {\n    this.clamp();\n    if (this.sigBytes % 4) {\n      for (let i = 0; i < wordArray.sigBytes; i++) {\n        const thatByte = wordArray.words[i >>> 2] >>> 24 - i % 4 * 8 & 255;\n        this.words[this.sigBytes + i >>> 2] |= thatByte << 24 - (this.sigBytes + i) % 4 * 8;\n      }\n    } else {\n      for (let j = 0; j < wordArray.sigBytes; j += 4) {\n        this.words[this.sigBytes + j >>> 2] = wordArray.words[j >>> 2];\n      }\n    }\n    this.sigBytes += wordArray.sigBytes;\n    return this;\n  }\n  clamp() {\n    this.words[this.sigBytes >>> 2] &= 4294967295 << 32 - this.sigBytes % 4 * 8;\n    this.words.length = Math.ceil(this.sigBytes / 4);\n  }\n  clone() {\n    return new WordArray([...this.words]);\n  }\n}\nconst Hex = {\n  stringify(wordArray) {\n    const hexChars = [];\n    for (let i = 0; i < wordArray.sigBytes; i++) {\n      const bite = wordArray.words[i >>> 2] >>> 24 - i % 4 * 8 & 255;\n      hexChars.push((bite >>> 4).toString(16), (bite & 15).toString(16));\n    }\n    return hexChars.join(\"\");\n  }\n};\nconst Base64 = {\n  stringify(wordArray) {\n    const keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n    const base64Chars = [];\n    for (let i = 0; i < wordArray.sigBytes; i += 3) {\n      const byte1 = wordArray.words[i >>> 2] >>> 24 - i % 4 * 8 & 255;\n      const byte2 = wordArray.words[i + 1 >>> 2] >>> 24 - (i + 1) % 4 * 8 & 255;\n      const byte3 = wordArray.words[i + 2 >>> 2] >>> 24 - (i + 2) % 4 * 8 & 255;\n      const triplet = byte1 << 16 | byte2 << 8 | byte3;\n      for (let j = 0; j < 4 && i * 8 + j * 6 < wordArray.sigBytes * 8; j++) {\n        base64Chars.push(keyStr.charAt(triplet >>> 6 * (3 - j) & 63));\n      }\n    }\n    return base64Chars.join(\"\");\n  }\n};\nconst Latin1 = {\n  parse(latin1Str) {\n    const latin1StrLength = latin1Str.length;\n    const words = [];\n    for (let i = 0; i < latin1StrLength; i++) {\n      words[i >>> 2] |= (latin1Str.charCodeAt(i) & 255) << 24 - i % 4 * 8;\n    }\n    return new WordArray(words, latin1StrLength);\n  }\n};\nconst Utf8 = {\n  parse(utf8Str) {\n    return Latin1.parse(unescape(encodeURIComponent(utf8Str)));\n  }\n};\nclass BufferedBlockAlgorithm {\n  constructor() {\n    this._data = new WordArray();\n    this._nDataBytes = 0;\n    this._minBufferSize = 0;\n    this.blockSize = 512 / 32;\n  }\n  reset() {\n    this._data = new WordArray();\n    this._nDataBytes = 0;\n  }\n  _append(data) {\n    if (typeof data === \"string\") {\n      data = Utf8.parse(data);\n    }\n    this._data.concat(data);\n    this._nDataBytes += data.sigBytes;\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  _doProcessBlock(_dataWords, _offset) {\n  }\n  _process(doFlush) {\n    let processedWords;\n    let nBlocksReady = this._data.sigBytes / (this.blockSize * 4);\n    if (doFlush) {\n      nBlocksReady = Math.ceil(nBlocksReady);\n    } else {\n      nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);\n    }\n    const nWordsReady = nBlocksReady * this.blockSize;\n    const nBytesReady = Math.min(nWordsReady * 4, this._data.sigBytes);\n    if (nWordsReady) {\n      for (let offset = 0; offset < nWordsReady; offset += this.blockSize) {\n        this._doProcessBlock(this._data.words, offset);\n      }\n      processedWords = this._data.words.splice(0, nWordsReady);\n      this._data.sigBytes -= nBytesReady;\n    }\n    return new WordArray(processedWords, nBytesReady);\n  }\n}\nclass Hasher extends BufferedBlockAlgorithm {\n  update(messageUpdate) {\n    this._append(messageUpdate);\n    this._process();\n    return this;\n  }\n  finalize(messageUpdate) {\n    if (messageUpdate) {\n      this._append(messageUpdate);\n    }\n  }\n}\n\nconst H = [\n  1779033703,\n  -1150833019,\n  1013904242,\n  -1521486534,\n  1359893119,\n  -1694144372,\n  528734635,\n  1541459225\n];\nconst K = [\n  1116352408,\n  1899447441,\n  -1245643825,\n  -373957723,\n  961987163,\n  1508970993,\n  -1841331548,\n  -1424204075,\n  -670586216,\n  310598401,\n  607225278,\n  1426881987,\n  1925078388,\n  -2132889090,\n  -1680079193,\n  -1046744716,\n  -459576895,\n  -272742522,\n  264347078,\n  604807628,\n  770255983,\n  1249150122,\n  1555081692,\n  1996064986,\n  -1740746414,\n  -1473132947,\n  -1341970488,\n  -1084653625,\n  -958395405,\n  -710438585,\n  113926993,\n  338241895,\n  666307205,\n  773529912,\n  1294757372,\n  1396182291,\n  1695183700,\n  1986661051,\n  -2117940946,\n  -1838011259,\n  -1564481375,\n  -1474664885,\n  -1035236496,\n  -949202525,\n  -778901479,\n  -694614492,\n  -200395387,\n  275423344,\n  430227734,\n  506948616,\n  659060556,\n  883997877,\n  958139571,\n  1322822218,\n  1537002063,\n  1747873779,\n  1955562222,\n  2024104815,\n  -2067236844,\n  -1933114872,\n  -1866530822,\n  -1538233109,\n  -1090935817,\n  -965641998\n];\nconst W = [];\nclass SHA256 extends Hasher {\n  constructor() {\n    super(...arguments);\n    this._hash = new WordArray([...H]);\n  }\n  reset() {\n    super.reset();\n    this._hash = new WordArray([...H]);\n  }\n  _doProcessBlock(M, offset) {\n    const H2 = this._hash.words;\n    let a = H2[0];\n    let b = H2[1];\n    let c = H2[2];\n    let d = H2[3];\n    let e = H2[4];\n    let f = H2[5];\n    let g = H2[6];\n    let h = H2[7];\n    for (let i = 0; i < 64; i++) {\n      if (i < 16) {\n        W[i] = M[offset + i] | 0;\n      } else {\n        const gamma0x = W[i - 15];\n        const gamma0 = (gamma0x << 25 | gamma0x >>> 7) ^ (gamma0x << 14 | gamma0x >>> 18) ^ gamma0x >>> 3;\n        const gamma1x = W[i - 2];\n        const gamma1 = (gamma1x << 15 | gamma1x >>> 17) ^ (gamma1x << 13 | gamma1x >>> 19) ^ gamma1x >>> 10;\n        W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16];\n      }\n      const ch = e & f ^ ~e & g;\n      const maj = a & b ^ a & c ^ b & c;\n      const sigma0 = (a << 30 | a >>> 2) ^ (a << 19 | a >>> 13) ^ (a << 10 | a >>> 22);\n      const sigma1 = (e << 26 | e >>> 6) ^ (e << 21 | e >>> 11) ^ (e << 7 | e >>> 25);\n      const t1 = h + sigma1 + ch + K[i] + W[i];\n      const t2 = sigma0 + maj;\n      h = g;\n      g = f;\n      f = e;\n      e = d + t1 | 0;\n      d = c;\n      c = b;\n      b = a;\n      a = t1 + t2 | 0;\n    }\n    H2[0] = H2[0] + a | 0;\n    H2[1] = H2[1] + b | 0;\n    H2[2] = H2[2] + c | 0;\n    H2[3] = H2[3] + d | 0;\n    H2[4] = H2[4] + e | 0;\n    H2[5] = H2[5] + f | 0;\n    H2[6] = H2[6] + g | 0;\n    H2[7] = H2[7] + h | 0;\n  }\n  finalize(messageUpdate) {\n    super.finalize(messageUpdate);\n    const nBitsTotal = this._nDataBytes * 8;\n    const nBitsLeft = this._data.sigBytes * 8;\n    this._data.words[nBitsLeft >>> 5] |= 128 << 24 - nBitsLeft % 32;\n    this._data.words[(nBitsLeft + 64 >>> 9 << 4) + 14] = Math.floor(\n      nBitsTotal / 4294967296\n    );\n    this._data.words[(nBitsLeft + 64 >>> 9 << 4) + 15] = nBitsTotal;\n    this._data.sigBytes = this._data.words.length * 4;\n    this._process();\n    return this._hash;\n  }\n}\nfunction sha256(message) {\n  return new SHA256().finalize(message).toString();\n}\nfunction sha256base64(message) {\n  return new SHA256().finalize(message).toString(Base64);\n}\n\nfunction hash(object, options = {}) {\n  const hashed = typeof object === \"string\" ? object : objectHash(object, options);\n  return sha256base64(hashed).slice(0, 10);\n}\n\nfunction murmurHash(key, seed = 0) {\n  if (typeof key === \"string\") {\n    key = createBuffer(key);\n  }\n  let i = 0;\n  let h1 = seed;\n  let k1;\n  let h1b;\n  const remainder = key.length & 3;\n  const bytes = key.length - remainder;\n  const c1 = 3432918353;\n  const c2 = 461845907;\n  while (i < bytes) {\n    k1 = key[i] & 255 | (key[++i] & 255) << 8 | (key[++i] & 255) << 16 | (key[++i] & 255) << 24;\n    ++i;\n    k1 = (k1 & 65535) * c1 + (((k1 >>> 16) * c1 & 65535) << 16) & 4294967295;\n    k1 = k1 << 15 | k1 >>> 17;\n    k1 = (k1 & 65535) * c2 + (((k1 >>> 16) * c2 & 65535) << 16) & 4294967295;\n    h1 ^= k1;\n    h1 = h1 << 13 | h1 >>> 19;\n    h1b = (h1 & 65535) * 5 + (((h1 >>> 16) * 5 & 65535) << 16) & 4294967295;\n    h1 = (h1b & 65535) + 27492 + (((h1b >>> 16) + 58964 & 65535) << 16);\n  }\n  k1 = 0;\n  switch (remainder) {\n    case 3: {\n      k1 ^= (key[i + 2] & 255) << 16;\n      break;\n    }\n    case 2: {\n      k1 ^= (key[i + 1] & 255) << 8;\n      break;\n    }\n    case 1: {\n      k1 ^= key[i] & 255;\n      k1 = (k1 & 65535) * c1 + (((k1 >>> 16) * c1 & 65535) << 16) & 4294967295;\n      k1 = k1 << 15 | k1 >>> 17;\n      k1 = (k1 & 65535) * c2 + (((k1 >>> 16) * c2 & 65535) << 16) & 4294967295;\n      h1 ^= k1;\n    }\n  }\n  h1 ^= key.length;\n  h1 ^= h1 >>> 16;\n  h1 = (h1 & 65535) * 2246822507 + (((h1 >>> 16) * 2246822507 & 65535) << 16) & 4294967295;\n  h1 ^= h1 >>> 13;\n  h1 = (h1 & 65535) * 3266489909 + (((h1 >>> 16) * 3266489909 & 65535) << 16) & 4294967295;\n  h1 ^= h1 >>> 16;\n  return h1 >>> 0;\n}\nfunction createBuffer(val) {\n  return new TextEncoder().encode(val);\n}\n\nfunction isEqual(object1, object2, hashOptions = {}) {\n  if (object1 === object2) {\n    return true;\n  }\n  if (objectHash(object1, hashOptions) === objectHash(object2, hashOptions)) {\n    return true;\n  }\n  return false;\n}\n\nfunction diff(obj1, obj2, opts = {}) {\n  const h1 = _toHashedObject(obj1, opts);\n  const h2 = _toHashedObject(obj2, opts);\n  return _diff(h1, h2, opts);\n}\nfunction _diff(h1, h2, opts = {}) {\n  const diffs = [];\n  const allProps = /* @__PURE__ */ new Set([\n    ...Object.keys(h1.props || {}),\n    ...Object.keys(h2.props || {})\n  ]);\n  if (h1.props && h2.props) {\n    for (const prop of allProps) {\n      const p1 = h1.props[prop];\n      const p2 = h2.props[prop];\n      if (p1 && p2) {\n        diffs.push(..._diff(h1.props?.[prop], h2.props?.[prop], opts));\n      } else if (p1 || p2) {\n        diffs.push(\n          new DiffEntry((p2 || p1).key, p1 ? \"removed\" : \"added\", p2, p1)\n        );\n      }\n    }\n  }\n  if (allProps.size === 0 && h1.hash !== h2.hash) {\n    diffs.push(new DiffEntry((h2 || h1).key, \"changed\", h2, h1));\n  }\n  return diffs;\n}\nfunction _toHashedObject(obj, opts, key = \"\") {\n  if (obj && typeof obj !== \"object\") {\n    return new DiffHashedObject(key, obj, objectHash(obj, opts));\n  }\n  const props = {};\n  const hashes = [];\n  for (const _key in obj) {\n    props[_key] = _toHashedObject(\n      obj[_key],\n      opts,\n      key ? `${key}.${_key}` : _key\n    );\n    hashes.push(props[_key].hash);\n  }\n  return new DiffHashedObject(key, obj, `{${hashes.join(\":\")}}`, props);\n}\nclass DiffEntry {\n  // eslint-disable-next-line no-useless-constructor\n  constructor(key, type, newValue, oldValue) {\n    this.key = key;\n    this.type = type;\n    this.newValue = newValue;\n    this.oldValue = oldValue;\n  }\n  toString() {\n    return this.toJSON();\n  }\n  toJSON() {\n    switch (this.type) {\n      case \"added\": {\n        return `Added   \\`${this.key}\\``;\n      }\n      case \"removed\": {\n        return `Removed \\`${this.key}\\``;\n      }\n      case \"changed\": {\n        return `Changed \\`${this.key}\\` from \\`${this.oldValue?.toString() || \"-\"}\\` to \\`${this.newValue.toString()}\\``;\n      }\n    }\n  }\n}\nclass DiffHashedObject {\n  // eslint-disable-next-line no-useless-constructor\n  constructor(key, value, hash, props) {\n    this.key = key;\n    this.value = value;\n    this.hash = hash;\n    this.props = props;\n  }\n  toString() {\n    if (this.props) {\n      return `{${Object.keys(this.props).join(\",\")}}`;\n    } else {\n      return JSON.stringify(this.value);\n    }\n  }\n  toJSON() {\n    const k = this.key || \".\";\n    if (this.props) {\n      return `${k}({${Object.keys(this.props).join(\",\")}})`;\n    }\n    return `${k}(${this.value})`;\n  }\n}\n\nexport { diff, hash, isEqual, murmurHash, objectHash, sha256, sha256base64 };\n","import { sha256 } from 'ohash';\nimport type { HashFunction } from '../../types/index.d.ts';\n\n\n/**\n * TODO in the future we should no longer provide a\n * fallback to crypto.subtle.digest.\n * Instead users without crypto.subtle.digest support, should have to provide their own\n * hash function.\n */\nexport function jsSha256(input: string) {\n    return Promise.resolve(sha256(input));\n}\n\nexport async function nativeSha256(input: string) {\n    const data = new TextEncoder().encode(input);\n    const hashBuffer = await crypto.subtle.digest('SHA-256', data);\n    /**\n     * @link https://jameshfisher.com/2017/10/30/web-cryptography-api-hello-world/\n     */\n    const hash = Array.prototype.map.call(\n        new Uint8Array(hashBuffer),\n        x => (('00' + x.toString(16)).slice(-2))\n    ).join('');\n    return hash;\n}\n\n\nexport const canUseCryptoSubtle = typeof crypto !== 'undefined' &&\n    typeof crypto.subtle !== 'undefined' &&\n    typeof crypto.subtle.digest === 'function';\n\n/**\n * Default hash method used to hash\n * strings and do equal comparisons.\n *\n * IMPORTANT: Changing the default hashing method\n * requires a BREAKING change!\n */\n\nexport const defaultHashSha256: HashFunction = canUseCryptoSubtle ? nativeSha256 : jsSha256;\n\n\nexport function hashStringToNumber(str: string): number {\n    let nr = 0;\n    const len = str.length;\n    for (let i = 0; i < len; i++) {\n        nr = nr + str.charCodeAt(i);\n        nr |= 0; // Convert to 32bit integer, improves performance\n    }\n    return nr;\n}\n","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperty(e, r, t) {\n  return (r = toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nexport { _defineProperty as default };","\n/**\n * this is a set which automatically forgets\n * a given entry when a new entry is set and the ttl\n * of the old one is over\n */\nexport class ObliviousSet<T = any> {\n    public readonly map = new Map();\n\n    /**\n     * Creating calls to setTimeout() is expensive,\n     * so we only do that if there is not timeout already open.\n     */\n    public _to: boolean = false;\n    constructor(\n        public readonly ttl: number\n    ) { }\n\n    has(value: T): boolean {\n        return this.map.has(value);\n    }\n\n    add(value: T): void {\n        this.map.set(value, now());\n\n        /**\n         * When a new value is added,\n         * start the cleanup at the next tick\n         * to not block the cpu for more important stuff\n         * that might happen.\n         */\n        if (!this._to) {\n            this._to = true;\n            setTimeout(() => {\n                this._to = false;\n                removeTooOldValues(this);\n            }, 0);\n        }\n    }\n\n    clear() {\n        this.map.clear();\n    }\n}\n\n\n/**\n * Removes all entries from the set\n * where the TTL has expired\n */\nexport function removeTooOldValues(\n    obliviousSet: ObliviousSet\n) {\n    const olderThen = now() - obliviousSet.ttl;\n    const iterator = obliviousSet.map[Symbol.iterator]();\n\n    /**\n     * Because we can assume the new values are added at the bottom,\n     * we start from the top and stop as soon as we reach a non-too-old value.\n     */\n    while (true) {\n\n        const next = iterator.next().value;\n\n        if (!next) {\n            return; // no more elements\n        }\n        const value = next[0];\n        const time = next[1];\n        if (time < olderThen) {\n            obliviousSet.map.delete(value);\n        } else {\n            // We reached a value that is not old enough\n            return;\n        }\n    }\n}\n\nexport function now(): number {\n    return Date.now();\n}\n\n\n","import { IdleQueue } from 'custom-idle-queue';\nimport type {\n    LeaderElector\n} from 'broadcast-channel';\nimport type {\n    CollectionsOfDatabase,\n    RxDatabase,\n    RxCollectionCreator,\n    RxJsonSchema,\n    RxCollection,\n    RxDumpDatabase,\n    RxDumpDatabaseAny,\n    BackupOptions,\n    RxStorage,\n    RxStorageInstance,\n    BulkWriteRow,\n    RxChangeEvent,\n    RxDatabaseCreator,\n    RxChangeEventBulk,\n    RxDocumentData,\n    RxCleanupPolicy,\n    InternalStoreDocType,\n    InternalStoreStorageTokenDocType,\n    InternalStoreCollectionDocType,\n    RxTypeError,\n    RxError,\n    HashFunction,\n    MaybePromise,\n    RxState\n} from './types/index.d.ts';\n\nimport {\n    pluginMissing,\n    flatClone,\n    PROMISE_RESOLVE_FALSE,\n    randomCouchString,\n    ensureNotFalsy,\n    getDefaultRevision,\n    getDefaultRxDocumentMeta,\n    defaultHashSha256,\n    RXDB_VERSION\n} from './plugins/utils/index.ts';\nimport {\n    newRxError\n} from './rx-error.ts';\nimport {\n    createRxSchema,\n    RxSchema\n} from './rx-schema.ts';\nimport {\n    runPluginHooks,\n    runAsyncPluginHooks\n} from './hooks.ts';\nimport {\n    Subject,\n    Subscription,\n    Observable\n} from 'rxjs';\nimport {\n    mergeMap\n} from 'rxjs/operators';\nimport {\n    createRxCollection\n} from './rx-collection.ts';\nimport {\n    flatCloneDocWithMeta,\n    getSingleDocument,\n    getWrappedStorageInstance,\n    INTERNAL_STORAGE_NAME,\n    WrappedRxStorageInstance\n} from './rx-storage-helper.ts';\nimport type { RxBackupState } from './plugins/backup/index.ts';\nimport { ObliviousSet } from 'oblivious-set';\nimport {\n    ensureStorageTokenDocumentExists,\n    getAllCollectionDocuments,\n    getPrimaryKeyOfInternalDocument,\n    INTERNAL_CONTEXT_COLLECTION,\n    INTERNAL_STORE_SCHEMA,\n    _collectionNamePrimary\n} from './rx-database-internal-store.ts';\nimport { removeCollectionStorages } from './rx-collection-helper.ts';\nimport { overwritable } from './overwritable.ts';\nimport type { RxMigrationState } from './plugins/migration-schema/index.ts';\nimport type { RxReactivityFactory } from './types/plugins/reactivity.d.ts';\n\n/**\n * stores the used database names+storage names\n * so we can throw when the same database is created more then once.\n */\nconst USED_DATABASE_NAMES: Set<string> = new Set();\n\nlet DB_COUNT = 0;\n\nexport class RxDatabaseBase<\n    Internals,\n    InstanceCreationOptions,\n    Collections = CollectionsOfDatabase,\n    Reactivity = unknown\n> {\n\n    public readonly idleQueue: IdleQueue = new IdleQueue();\n    public readonly rxdbVersion = RXDB_VERSION;\n\n    /**\n     * Contains all known non-closed storage instances\n     * that belong to this database.\n     * Used in plugins and unit tests.\n     */\n    public readonly storageInstances = new Set<WrappedRxStorageInstance<any, Internals, InstanceCreationOptions>>();\n\n    constructor(\n        public readonly name: string,\n        /**\n         * Uniquely identifies the instance\n         * of this RxDatabase.\n         */\n        public readonly token: string,\n        public readonly storage: RxStorage<Internals, InstanceCreationOptions>,\n        public readonly instanceCreationOptions: InstanceCreationOptions,\n        public readonly password: any,\n        public readonly multiInstance: boolean,\n        public readonly eventReduce: boolean = false,\n        public options: any = {},\n        /**\n         * Stores information documents about the collections of the database\n         */\n        public readonly internalStore: RxStorageInstance<InternalStoreDocType, Internals, InstanceCreationOptions>,\n        public readonly hashFunction: HashFunction,\n        public readonly cleanupPolicy?: Partial<RxCleanupPolicy>,\n        public readonly allowSlowCount?: boolean,\n        public readonly reactivity?: RxReactivityFactory<any>\n    ) {\n        DB_COUNT++;\n\n        /**\n         * In the dev-mode, we create a pseudoInstance\n         * to get all properties of RxDatabase and ensure they do not\n         * conflict with the collection names etc.\n         * So only if it is not pseudoInstance,\n         * we have all values to prepare a real RxDatabase.\n         *\n         * TODO this is ugly, we should use a different way in the dev-mode\n         * so that all non-dev-mode code can be cleaner.\n         */\n        if (this.name !== 'pseudoInstance') {\n            /**\n             * Wrap the internal store\n             * to ensure that calls to it also end up in\n             * calculation of the idle state and the hooks.\n             */\n            this.internalStore = getWrappedStorageInstance(\n                this.asRxDatabase,\n                internalStore,\n                INTERNAL_STORE_SCHEMA\n            );\n\n            /**\n             * Start writing the storage token.\n             * Do not await the creation because it would run\n             * in a critical path that increases startup time.\n             *\n             * Writing the token takes about 20 milliseconds\n             * even on a fast adapter, so this is worth it.\n             */\n            this.storageTokenDocument = ensureStorageTokenDocumentExists(this.asRxDatabase)\n                .catch(err => this.startupErrors.push(err) as any);\n            this.storageToken = this.storageTokenDocument\n                .then(doc => doc.data.token)\n                .catch(err => this.startupErrors.push(err) as any);\n        }\n    }\n\n    get $(): Observable<RxChangeEvent<any>> {\n        return this.observable$;\n    }\n\n    public getReactivityFactory(): RxReactivityFactory<Reactivity> {\n        if (!this.reactivity) {\n            throw newRxError('DB14', { database: this.name });\n        }\n        return this.reactivity;\n    }\n\n    public _subs: Subscription[] = [];\n\n    /**\n     * Because having unhandled exceptions would fail,\n     * we have to store the async errors of the constructor here\n     * so we can throw them later.\n     */\n    public startupErrors: (RxError | RxTypeError)[] = [];\n\n    /**\n     * When the database is destroyed,\n     * these functions will be called an awaited.\n     * Used to automatically clean up stuff that\n     * belongs to this collection.\n     */\n    public onDestroy: (() => MaybePromise<any>)[] = [];\n    public destroyed: boolean = false;\n    public collections: Collections = {} as any;\n    public states: { [name: string]: RxState<any, Reactivity>; } = {};\n    public readonly eventBulks$: Subject<RxChangeEventBulk<any>> = new Subject();\n    private observable$: Observable<RxChangeEvent<any>> = this.eventBulks$\n        .pipe(\n            mergeMap(changeEventBulk => changeEventBulk.events)\n        );\n\n    /**\n     * Unique token that is stored with the data.\n     * Used to detect if the dataset has been deleted\n     * and if two RxDatabase instances work on the same dataset or not.\n     *\n     * Because reading and writing the storageToken runs in the hot path\n     * of database creation, we do not await the storageWrites but instead\n     * work with the promise when we need the value.\n     */\n    public storageToken: Promise<string> = PROMISE_RESOLVE_FALSE as any;\n    /**\n     * Stores the whole state of the internal storage token document.\n     * We need this in some plugins.\n     */\n    public storageTokenDocument: Promise<RxDocumentData<InternalStoreStorageTokenDocType>> = PROMISE_RESOLVE_FALSE as any;\n\n    /**\n     * Contains the ids of all event bulks that have been emitted\n     * by the database.\n     * Used to detect duplicates that come in again via BroadcastChannel\n     * or other streams.\n     * TODO instead of having this here, we should add a test to ensure each RxStorage\n     * behaves equal and does never emit duplicate eventBulks.\n     */\n    public emittedEventBulkIds: ObliviousSet<string> = new ObliviousSet(60 * 1000);\n\n    /**\n     * This is the main handle-point for all change events\n     * ChangeEvents created by this instance go:\n     * RxDocument -> RxCollection -> RxDatabase.$emit -> MultiInstance\n     * ChangeEvents created by other instances go:\n     * MultiInstance -> RxDatabase.$emit -> RxCollection -> RxDatabase\n     */\n    $emit(changeEventBulk: RxChangeEventBulk<any>) {\n        if (this.emittedEventBulkIds.has(changeEventBulk.id)) {\n            return;\n        }\n        this.emittedEventBulkIds.add(changeEventBulk.id);\n\n        // emit into own stream\n        this.eventBulks$.next(changeEventBulk);\n    }\n\n    /**\n     * removes the collection-doc from the internalStore\n     */\n    async removeCollectionDoc(name: string, schema: any): Promise<void> {\n        const doc = await getSingleDocument(\n            this.internalStore,\n            getPrimaryKeyOfInternalDocument(\n                _collectionNamePrimary(name, schema),\n                INTERNAL_CONTEXT_COLLECTION\n            )\n        );\n        if (!doc) {\n            throw newRxError('SNH', { name, schema });\n        }\n        const writeDoc = flatCloneDocWithMeta(doc);\n        writeDoc._deleted = true;\n\n        await this.internalStore.bulkWrite([{\n            document: writeDoc,\n            previous: doc\n        }], 'rx-database-remove-collection');\n    }\n\n    /**\n     * creates multiple RxCollections at once\n     * to be much faster by saving db txs and doing stuff in bulk-operations\n     * This function is not called often, but mostly in the critical path at the initial page load\n     * So it must be as fast as possible.\n     */\n    async addCollections<CreatedCollections = Partial<Collections>>(collectionCreators: {\n        [key in keyof CreatedCollections]: RxCollectionCreator<any>\n    }): Promise<{ [key in keyof CreatedCollections]: RxCollection<any, {}, {}, {}, Reactivity> }> {\n        const jsonSchemas: { [key in keyof CreatedCollections]: RxJsonSchema<any> } = {} as any;\n        const schemas: { [key in keyof CreatedCollections]: RxSchema<any> } = {} as any;\n        const bulkPutDocs: BulkWriteRow<InternalStoreCollectionDocType>[] = [];\n        const useArgsByCollectionName: any = {};\n\n        await Promise.all(\n            Object.entries(collectionCreators).map(async ([name, args]) => {\n                const collectionName: keyof CreatedCollections = name as any;\n                const rxJsonSchema = (args as RxCollectionCreator<any>).schema;\n                jsonSchemas[collectionName] = rxJsonSchema;\n                const schema = createRxSchema(rxJsonSchema, this.hashFunction);\n                schemas[collectionName] = schema;\n\n                // collection already exists\n                if ((this.collections as any)[name]) {\n                    throw newRxError('DB3', {\n                        name\n                    });\n                }\n\n                const collectionNameWithVersion = _collectionNamePrimary(name, rxJsonSchema);\n                const collectionDocData: RxDocumentData<InternalStoreCollectionDocType> = {\n                    id: getPrimaryKeyOfInternalDocument(\n                        collectionNameWithVersion,\n                        INTERNAL_CONTEXT_COLLECTION\n                    ),\n                    key: collectionNameWithVersion,\n                    context: INTERNAL_CONTEXT_COLLECTION,\n                    data: {\n                        name: collectionName as any,\n                        schemaHash: await schema.hash,\n                        schema: schema.jsonSchema,\n                        version: schema.version,\n                        connectedStorages: []\n                    },\n                    _deleted: false,\n                    _meta: getDefaultRxDocumentMeta(),\n                    _rev: getDefaultRevision(),\n                    _attachments: {}\n                };\n                bulkPutDocs.push({\n                    document: collectionDocData\n                });\n\n                const useArgs: any = Object.assign(\n                    {},\n                    args,\n                    {\n                        name: collectionName,\n                        schema,\n                        database: this\n                    }\n                );\n\n                // run hooks\n                const hookData: RxCollectionCreator<any> & { name: string; } = flatClone(args) as any;\n                (hookData as any).database = this;\n                hookData.name = name;\n                runPluginHooks('preCreateRxCollection', hookData);\n                useArgs.conflictHandler = hookData.conflictHandler;\n\n                useArgsByCollectionName[collectionName] = useArgs;\n            })\n        );\n\n\n        const putDocsResult = await this.internalStore.bulkWrite(\n            bulkPutDocs,\n            'rx-database-add-collection'\n        );\n\n        await ensureNoStartupErrors(this);\n\n        await Promise.all(\n            putDocsResult.error.map(async (error) => {\n                if (error.status !== 409) {\n                    throw newRxError('DB12', {\n                        database: this.name,\n                        writeError: error\n                    });\n                }\n                const docInDb: RxDocumentData<InternalStoreCollectionDocType> = ensureNotFalsy(error.documentInDb);\n                const collectionName = docInDb.data.name;\n                const schema = (schemas as any)[collectionName];\n                // collection already exists but has different schema\n                if (docInDb.data.schemaHash !== await schema.hash) {\n                    throw newRxError('DB6', {\n                        database: this.name,\n                        collection: collectionName,\n                        previousSchemaHash: docInDb.data.schemaHash,\n                        schemaHash: await schema.hash,\n                        previousSchema: docInDb.data.schema,\n                        schema: ensureNotFalsy((jsonSchemas as any)[collectionName])\n                    });\n                }\n            })\n        );\n\n        const ret: { [key in keyof CreatedCollections]: RxCollection<any, {}, {}, {}, Reactivity> } = {} as any;\n        await Promise.all(\n            Object.keys(collectionCreators).map(async (collectionName) => {\n                const useArgs = useArgsByCollectionName[collectionName];\n                const collection = await createRxCollection(useArgs);\n                (ret as any)[collectionName] = collection;\n\n                // set as getter to the database\n                (this.collections as any)[collectionName] = collection;\n                if (!(this as any)[collectionName]) {\n                    Object.defineProperty(this, collectionName, {\n                        get: () => (this.collections as any)[collectionName]\n                    });\n                }\n            })\n        );\n\n        return ret;\n    }\n\n    /**\n     * runs the given function between idleQueue-locking\n     */\n    lockedRun<T>(fn: (...args: any[]) => T): T extends Promise<any> ? T : Promise<T> {\n        return this.idleQueue.wrapCall(fn) as any;\n    }\n\n    requestIdlePromise() {\n        return this.idleQueue.requestIdlePromise();\n    }\n\n    /**\n     * Export database to a JSON friendly format.\n     */\n    exportJSON(_collections?: string[]): Promise<RxDumpDatabase<Collections>>;\n    exportJSON(_collections?: string[]): Promise<RxDumpDatabaseAny<Collections>>;\n    exportJSON(_collections?: string[]): Promise<any> {\n        throw pluginMissing('json-dump');\n    }\n\n    addState<T = any>(_name?: string): Promise<RxState<T, Reactivity>> {\n        throw pluginMissing('state');\n    }\n\n    /**\n     * Import the parsed JSON export into the collection.\n     * @param _exportedJSON The previously exported data from the `<db>.exportJSON()` method.\n     * @note When an interface is loaded in this collection all base properties of the type are typed as `any`\n     * since data could be encrypted.\n     */\n    importJSON(_exportedJSON: RxDumpDatabaseAny<Collections>): Promise<void> {\n        throw pluginMissing('json-dump');\n    }\n\n    backup(_options: BackupOptions): RxBackupState {\n        throw pluginMissing('backup');\n    }\n\n    public leaderElector(): LeaderElector {\n        throw pluginMissing('leader-election');\n    }\n\n    public isLeader(): boolean {\n        throw pluginMissing('leader-election');\n    }\n    /**\n     * returns a promise which resolves when the instance becomes leader\n     */\n    public waitForLeadership(): Promise<boolean> {\n        throw pluginMissing('leader-election');\n    }\n\n    public migrationStates(): Observable<RxMigrationState[]> {\n        throw pluginMissing('migration-schema');\n    }\n\n    /**\n     * destroys the database-instance and all collections\n     */\n    public async destroy(): Promise<boolean> {\n        if (this.destroyed) {\n            return PROMISE_RESOLVE_FALSE;\n        }\n\n        // settings destroyed = true must be the first thing to do.\n        this.destroyed = true;\n\n        await runAsyncPluginHooks('preDestroyRxDatabase', this);\n        /**\n         * Complete the event stream\n         * to stop all subscribers who forgot to unsubscribe.\n         */\n        this.eventBulks$.complete();\n\n        DB_COUNT--;\n        this._subs.map(sub => sub.unsubscribe());\n\n        /**\n         * Destroying the pseudo instance will throw\n         * because stuff is missing\n         * TODO we should not need the pseudo instance on runtime.\n         * we should generate the property list on build time.\n         */\n        if (this.name === 'pseudoInstance') {\n            return PROMISE_RESOLVE_FALSE;\n        }\n\n        /**\n         * First wait until the database is idle\n         */\n        return this.requestIdlePromise()\n            .then(() => Promise.all(this.onDestroy.map(fn => fn())))\n            // destroy all collections\n            .then(() => Promise.all(\n                Object.keys(this.collections as any)\n                    .map(key => (this.collections as any)[key])\n                    .map(col => col.destroy())\n            ))\n            // destroy internal storage instances\n            .then(() => this.internalStore.close())\n            // remove combination from USED_COMBINATIONS-map\n            .then(() => USED_DATABASE_NAMES.delete(this.storage.name + '|' + this.name))\n            .then(() => true);\n    }\n\n    /**\n     * deletes the database and its stored data.\n     * Returns the names of all removed collections.\n     */\n    remove(): Promise<string[]> {\n        return this\n            .destroy()\n            .then(() => removeRxDatabase(this.name, this.storage, this.password));\n    }\n\n    get asRxDatabase(): RxDatabase<\n        {},\n        Internals,\n        InstanceCreationOptions,\n        Reactivity\n    > {\n        return this as any;\n    }\n}\n\n/**\n * checks if an instance with same name and storage already exists\n * @throws {RxError} if used\n */\nfunction throwIfDatabaseNameUsed(\n    name: string,\n    storage: RxStorage<any, any>\n) {\n    const key = storage.name + '|' + name;\n    if (!USED_DATABASE_NAMES.has(key)) {\n        return;\n    } else {\n        throw newRxError('DB8', {\n            name,\n            storage: storage.name,\n            link: 'https://rxdb.info/rx-database.html#ignoreduplicate'\n        });\n    }\n}\n\n/**\n * Creates the storage instances that are used internally in the database\n * to store schemas and other configuration stuff.\n */\nexport async function createRxDatabaseStorageInstance<Internals, InstanceCreationOptions>(\n    databaseInstanceToken: string,\n    storage: RxStorage<Internals, InstanceCreationOptions>,\n    databaseName: string,\n    options: InstanceCreationOptions,\n    multiInstance: boolean,\n    password?: string\n): Promise<RxStorageInstance<InternalStoreDocType, Internals, InstanceCreationOptions>> {\n    const internalStore = await storage.createStorageInstance<InternalStoreDocType>(\n        {\n            databaseInstanceToken,\n            databaseName,\n            collectionName: INTERNAL_STORAGE_NAME,\n            schema: INTERNAL_STORE_SCHEMA,\n            options,\n            multiInstance,\n            password,\n            devMode: overwritable.isDevMode()\n        }\n    );\n    return internalStore;\n}\n\nexport function createRxDatabase<\n    Collections = { [key: string]: RxCollection; },\n    Internals = any,\n    InstanceCreationOptions = any,\n    Reactivity = unknown\n>(\n    {\n        storage,\n        instanceCreationOptions,\n        name,\n        password,\n        multiInstance = true,\n        eventReduce = true,\n        ignoreDuplicate = false,\n        options = {},\n        cleanupPolicy,\n        allowSlowCount = false,\n        localDocuments = false,\n        hashFunction = defaultHashSha256,\n        reactivity\n    }: RxDatabaseCreator<Internals, InstanceCreationOptions, Reactivity>\n): Promise<\n    RxDatabase<Collections, Internals, InstanceCreationOptions, Reactivity>\n> {\n    runPluginHooks('preCreateRxDatabase', {\n        storage,\n        instanceCreationOptions,\n        name,\n        password,\n        multiInstance,\n        eventReduce,\n        ignoreDuplicate,\n        options,\n        localDocuments\n    });\n    // check if combination already used\n    if (!ignoreDuplicate) {\n        throwIfDatabaseNameUsed(name, storage);\n    }\n    USED_DATABASE_NAMES.add(storage.name + '|' + name);\n\n    const databaseInstanceToken = randomCouchString(10);\n\n    return createRxDatabaseStorageInstance<\n        Internals,\n        InstanceCreationOptions\n    >(\n        databaseInstanceToken,\n        storage,\n        name,\n        instanceCreationOptions as any,\n        multiInstance,\n        password\n    )\n        /**\n         * Creating the internal store might fail\n         * if some RxStorage wrapper is used that does some checks\n         * and then throw.\n         * In that case we have to properly clean up the database.\n         */\n        .catch(err => {\n            USED_DATABASE_NAMES.delete(storage.name + '|' + name);\n            throw err;\n        })\n        .then(storageInstance => {\n            const rxDatabase: RxDatabase<Collections> = new RxDatabaseBase(\n                name,\n                databaseInstanceToken,\n                storage,\n                instanceCreationOptions,\n                password,\n                multiInstance,\n                eventReduce,\n                options,\n                storageInstance,\n                hashFunction,\n                cleanupPolicy,\n                allowSlowCount,\n                reactivity\n            ) as any;\n\n            return runAsyncPluginHooks('createRxDatabase', {\n                database: rxDatabase,\n                creator: {\n                    storage,\n                    instanceCreationOptions,\n                    name,\n                    password,\n                    multiInstance,\n                    eventReduce,\n                    ignoreDuplicate,\n                    options,\n                    localDocuments\n                }\n            }).then(() => rxDatabase);\n        });\n}\n\n/**\n * Removes the database and all its known data\n * with all known collections and all internal meta data.\n *\n * Returns the names of the removed collections.\n */\nexport async function removeRxDatabase(\n    databaseName: string,\n    storage: RxStorage<any, any>,\n    password?: string\n): Promise<string[]> {\n    const databaseInstanceToken = randomCouchString(10);\n    const dbInternalsStorageInstance = await createRxDatabaseStorageInstance(\n        databaseInstanceToken,\n        storage,\n        databaseName,\n        {},\n        false,\n        password\n    );\n    const collectionDocs = await getAllCollectionDocuments(dbInternalsStorageInstance);\n    const collectionNames = new Set<string>();\n    collectionDocs.forEach(doc => collectionNames.add(doc.data.name));\n    const removedCollectionNames: string[] = Array.from(collectionNames);\n\n    await Promise.all(\n        removedCollectionNames.map(collectionName => removeCollectionStorages(\n            storage,\n            dbInternalsStorageInstance,\n            databaseInstanceToken,\n            databaseName,\n            collectionName,\n            password\n        ))\n    );\n\n    await runAsyncPluginHooks('postRemoveRxDatabase', {\n        databaseName,\n        storage\n    });\n\n    await dbInternalsStorageInstance.remove();\n    return removedCollectionNames;\n}\n\nexport function isRxDatabase(obj: any) {\n    return obj instanceof RxDatabaseBase;\n}\n\nexport function dbCount(): number {\n    return DB_COUNT;\n}\n\n\n/**\n * Returns true if the given RxDatabase was the first\n * instance that was created on the storage with this name.\n *\n * Can be used for some optimizations because on the first instantiation,\n * we can assume that no data was written before.\n */\nexport async function isRxDatabaseFirstTimeInstantiated(\n    database: RxDatabase\n): Promise<boolean> {\n    const tokenDoc = await database.storageTokenDocument;\n    return tokenDoc.data.instanceToken === database.token;\n}\n\n\n/**\n * For better performance some tasks run async\n * and are awaited later.\n * But we still have to ensure that there have been no errors\n * on database creation.\n */\nexport async function ensureNoStartupErrors(\n    rxDatabase: RxDatabaseBase<any, any, any, any>\n) {\n    await rxDatabase.storageToken;\n    if (rxDatabase.startupErrors[0]) {\n        throw rxDatabase.startupErrors[0];\n    }\n}\n","/**\n * this handles how plugins are added to rxdb\n * basically it changes the internal prototypes\n * by passing them to the plugins-functions\n */\nimport {\n    RxSchema\n} from './rx-schema.ts';\nimport {\n    basePrototype as RxDocumentPrototype\n} from './rx-document.ts';\nimport {\n    RxQueryBase\n} from './rx-query.ts';\nimport {\n    RxCollectionBase\n} from './rx-collection.ts';\nimport {\n    RxDatabaseBase\n} from './rx-database.ts';\nimport type {\n    RxPlugin\n} from './types/index.d.ts';\n\nimport { overwritable } from './overwritable.ts';\nimport {\n    HOOKS,\n    runPluginHooks\n} from './hooks.ts';\nimport { newRxError, newRxTypeError } from './rx-error.ts';\n\n/**\n * prototypes that can be manipulated with a plugin\n */\nconst PROTOTYPES: { [k: string]: any; } = {\n    RxSchema: RxSchema.prototype,\n    RxDocument: RxDocumentPrototype,\n    RxQuery: RxQueryBase.prototype,\n    RxCollection: RxCollectionBase.prototype,\n    RxDatabase: RxDatabaseBase.prototype\n};\n\nconst ADDED_PLUGINS: Set<RxPlugin | any> = new Set();\nconst ADDED_PLUGIN_NAMES: Set<string> = new Set();\n\n/**\n * Add a plugin to the RxDB library.\n * Plugins are added globally and cannot be removed.\n */\nexport function addRxPlugin(plugin: RxPlugin) {\n    runPluginHooks('preAddRxPlugin', { plugin, plugins: ADDED_PLUGINS });\n\n    // do nothing if added before\n    if (ADDED_PLUGINS.has(plugin)) {\n        return;\n    } else {\n\n        // ensure no other plugin with the same name was already added\n        if (ADDED_PLUGIN_NAMES.has(plugin.name)) {\n            throw newRxError('PL3', {\n                name: plugin.name,\n                plugin,\n            });\n        }\n\n        ADDED_PLUGINS.add(plugin);\n        ADDED_PLUGIN_NAMES.add(plugin.name);\n    }\n\n    /**\n     * To identify broken configurations,\n     * we only allow RxDB plugins to be passed into addRxPlugin().\n     */\n    if (!plugin.rxdb) {\n        throw newRxTypeError('PL1', {\n            plugin\n        });\n    }\n\n    if (plugin.init) {\n        plugin.init();\n    }\n\n    // prototype-overwrites\n    if (plugin.prototypes) {\n        Object\n            .entries(plugin.prototypes)\n            .forEach(([name, fun]) => {\n                return (fun as any)(PROTOTYPES[name]);\n            });\n    }\n    // overwritable-overwrites\n    if (plugin.overwritable) {\n        Object.assign(\n            overwritable,\n            plugin.overwritable\n        );\n    }\n    // extend-hooks\n    if (plugin.hooks) {\n        Object\n            .entries(plugin.hooks)\n            .forEach(([name, hooksObj]) => {\n                if (hooksObj.after) {\n                    HOOKS[name].push(hooksObj.after);\n                }\n                if (hooksObj.before) {\n                    HOOKS[name].unshift(hooksObj.before);\n                }\n            });\n    }\n}\n\n","/**\n * this plugin adds the error-messages\n * without it, only error-codes will be shown\n * This is mainly because error-string are hard to compress and we need a smaller build\n */\n\n\nexport const ERROR_MESSAGES = {\n    // util.js / config\n    UT1: 'given name is no string or empty',\n    UT2: `collection- and database-names must match the regex to be compatible with couchdb databases.\n    See https://neighbourhood.ie/blog/2020/10/13/everything-you-need-to-know-about-couchdb-database-names/\n    info: if your database-name specifies a folder, the name must contain the slash-char '/' or '\\\\'`,\n    UT3: 'replication-direction must either be push or pull or both. But not none',\n    UT4: 'given leveldown is no valid adapter',\n    UT5: 'keyCompression is set to true in the schema but no key-compression handler is used in the storage',\n    UT6: 'schema contains encrypted fields but no encryption handler is used in the storage',\n    UT7: 'attachments.compression is enabled but no attachment-compression plugin is used',\n\n    // plugins\n    PL1: 'Given plugin is not RxDB plugin.',\n    // removed in 14.0.0 - PouchDB RxStorage was removed - PL2: 'You tried importing a RxDB plugin to pouchdb. Use addRxPlugin() instead.',\n    PL3: 'A plugin with the same name was already added but it was not the exact same JavaScript object',\n\n    // pouch-db.js\n    // removed in 12.0.0 - P1: 'PouchDB.getBatch: limit must be > 2',\n    P2: 'bulkWrite() cannot be called with an empty array',\n    // removed in 12.0.0 - P3: 'bulkAddRevisions cannot be called with an empty array',\n\n    // rx-query\n    QU1: 'RxQuery._execOverDatabase(): op not known',\n    // removed in 9.0.0 - QU2: 'limit() must get a number',\n    // removed in 9.0.0 - QU3: 'skip() must get a number',\n    QU4: 'RxQuery.regex(): You cannot use .regex() on the primary field',\n    QU5: 'RxQuery.sort(): does not work because key is not defined in the schema',\n    QU6: 'RxQuery.limit(): cannot be called on .findOne()',\n    // removed in 12.0.0 (should by ensured by the typings) - QU7: 'query must be an object',\n    // removed in 12.0.0 (should by ensured by the typings) - QU8: 'query cannot be an array',\n    QU9: 'throwIfMissing can only be used in findOne queries',\n    QU10: 'result empty and throwIfMissing: true',\n    QU11: 'RxQuery: no valid query params given',\n    QU12: 'Given index is not in schema',\n    QU13: 'A top level field of the query is not included in the schema',\n    QU14: 'Running a count() query in slow mode is now allowed. Either run a count() query with a selector that fully matches an index ' +\n        'or set allowSlowCount=true when calling the createRxDatabase',\n    QU15: 'For count queries it is not allowed to use skip or limit',\n    QU16: '$regex queries must be defined by a string, not an RegExp instance. ' +\n        'This is because RegExp objects cannot be JSON stringified and also they are mutable which would be dangerous',\n    QU17: 'Chained queries cannot be used on findByIds() RxQuery instances',\n\n    // mquery.js\n    MQ1: 'path must be a string or object',\n    MQ2: 'Invalid argument',\n    MQ3: 'Invalid sort() argument. Must be a string, object, or array',\n    MQ4: 'Invalid argument. Expected instanceof mquery or plain object',\n    MQ5: 'method must be used after where() when called with these arguments',\n    MQ6: 'Can\\'t mix sort syntaxes. Use either array or object | .sort([[\\'field\\', 1], [\\'test\\', -1]]) | .sort({ field: 1, test: -1 })',\n    MQ7: 'Invalid sort value',\n    MQ8: 'Can\\'t mix sort syntaxes. Use either array or object',\n\n    // rx-database\n    DB1: 'RxDocument.prepare(): another instance on this adapter has a different password',\n    DB2: 'RxDatabase.addCollections(): collection-names cannot start with underscore _',\n    DB3: 'RxDatabase.addCollections(): collection already exists. use myDatabase[collectionName] to get it',\n    DB4: 'RxDatabase.addCollections(): schema is missing',\n    DB5: 'RxDatabase.addCollections(): collection-name not allowed',\n    DB6: 'RxDatabase.addCollections(): another instance created this collection with a different schema. Read this https://rxdb.info/questions-answers.html?console=qa#cant-change-the-schema ',\n    // removed in 13.0.0 (now part of the encryption plugin) DB7: 'RxDatabase.addCollections(): schema encrypted but no password given',\n    DB8: 'createRxDatabase(): A RxDatabase with the same name and adapter already exists.\\n' +\n        'Make sure to use this combination only once or set ignoreDuplicate to true if you do this intentional-\\n' +\n        'This often happens in react projects with hot reload that reloads the code without reloading the process.',\n    // removed in 14.0.0 - PouchDB RxStorage is removed - DB9: 'createRxDatabase(): Adapter not added. Use addPouchPlugin(require(\\'pouchdb-adapter-[adaptername]\\'));',\n    // removed in 14.0.0 - PouchDB RxStorage is removed DB10: 'createRxDatabase(): To use leveldown-adapters, you have to add the leveldb-plugin. Use addPouchPlugin(require(\\'pouchdb-adapter-leveldb\\'));',\n    DB11: 'createRxDatabase(): Invalid db-name, folder-paths must not have an ending slash',\n    DB12: 'RxDatabase.addCollections(): could not write to internal store',\n    DB13: 'createRxDatabase(): Invalid db-name or collection name, name contains the dollar sign',\n    DB14: 'no custom reactivity factory added on database creation',\n\n    // rx-collection\n    COL1: 'RxDocument.insert() You cannot insert an existing document',\n    COL2: 'RxCollection.insert() fieldName ._id can only be used as primaryKey',\n    COL3: 'RxCollection.upsert() does not work without primary',\n    COL4: 'RxCollection.incrementalUpsert() does not work without primary',\n    COL5: 'RxCollection.find() if you want to search by _id, use .findOne(_id)',\n    COL6: 'RxCollection.findOne() needs a queryObject or string',\n    COL7: 'hook must be a function',\n    COL8: 'hooks-when not known',\n    COL9: 'RxCollection.addHook() hook-name not known',\n    COL10: 'RxCollection .postCreate-hooks cannot be async',\n    COL11: 'migrationStrategies must be an object',\n    COL12: 'A migrationStrategy is missing or too much',\n    COL13: 'migrationStrategy must be a function',\n    COL14: 'given static method-name is not a string',\n    COL15: 'static method-names cannot start with underscore _',\n    COL16: 'given static method is not a function',\n    COL17: 'RxCollection.ORM: statics-name not allowed',\n    COL18: 'collection-method not allowed because fieldname is in the schema',\n    // removed in 14.0.0, use CONFLICT instead - COL19: 'Document update conflict. When changing a document you must work on the previous revision',\n    COL20: 'Storage write error',\n    COL21: 'The RxCollection is destroyed or removed already, either from this JavaScript realm or from another, like a browser tab',\n    CONFLICT: 'Document update conflict. When changing a document you must work on the previous revision',\n\n    // rx-document.js\n    DOC1: 'RxDocument.get$ cannot get observable of in-array fields because order cannot be guessed',\n    DOC2: 'cannot observe primary path',\n    DOC3: 'final fields cannot be observed',\n    DOC4: 'RxDocument.get$ cannot observe a non-existed field',\n    DOC5: 'RxDocument.populate() cannot populate a non-existed field',\n    DOC6: 'RxDocument.populate() cannot populate because path has no ref',\n    DOC7: 'RxDocument.populate() ref-collection not in database',\n    DOC8: 'RxDocument.set(): primary-key cannot be modified',\n    DOC9: 'final fields cannot be modified',\n    DOC10: 'RxDocument.set(): cannot set childpath when rootPath not selected',\n    DOC11: 'RxDocument.save(): can\\'t save deleted document',\n    // removed in 10.0.0 DOC12: 'RxDocument.save(): error',\n    DOC13: 'RxDocument.remove(): Document is already deleted',\n    DOC14: 'RxDocument.destroy() does not exist',\n    DOC15: 'query cannot be an array',\n    DOC16: 'Since version 8.0.0 RxDocument.set() can only be called on temporary RxDocuments',\n    DOC17: 'Since version 8.0.0 RxDocument.save() can only be called on non-temporary documents',\n    DOC18: 'Document property for composed primary key is missing',\n    DOC19: 'Value of primary key(s) cannot be changed',\n    DOC20: 'PrimaryKey missing',\n    DOC21: 'PrimaryKey must be equal to PrimaryKey.trim(). It cannot start or end with a whitespace',\n    DOC22: 'PrimaryKey must not contain a linebreak',\n    DOC23: 'PrimaryKey must not contain a double-quote [\"]',\n    DOC24: 'Given document data could not be structured cloned. This happens if you pass non-plain-json data into it, like a Date() object or a Function. ' +\n        'In vue.js this happens if you use ref() on the document data which transforms it into a Proxy object.',\n\n    // data-migrator.js\n    DM1: 'migrate() Migration has already run',\n    DM2: 'migration of document failed final document does not match final schema',\n    DM3: 'migration already running',\n    DM4: 'Migration errored',\n    DM5: 'Cannot open database state with newer RxDB version. You have to migrate your database state first. See https://rxdb.info/migration-storage.html?console=storage ',\n\n    // plugins/attachments.js\n    AT1: 'to use attachments, please define this in your schema',\n\n    // plugins/encryption-crypto-js.js\n    EN1: 'password is not valid',\n    EN2: 'validatePassword: min-length of password not complied',\n    EN3: 'Schema contains encrypted properties but no password is given',\n    EN4: 'Password not valid',\n\n    // plugins/json-dump.js\n    JD1: 'You must create the collections before you can import their data',\n    JD2: 'RxCollection.importJSON(): the imported json relies on a different schema',\n    JD3: 'RxCollection.importJSON(): json.passwordHash does not match the own',\n\n    // plugins/leader-election.js\n\n    // plugins/local-documents.js\n    LD1: 'RxDocument.allAttachments$ can\\'t use attachments on local documents',\n    LD2: 'RxDocument.get(): objPath must be a string',\n    LD3: 'RxDocument.get$ cannot get observable of in-array fields because order cannot be guessed',\n    LD4: 'cannot observe primary path',\n    LD5: 'RxDocument.set() id cannot be modified',\n    LD6: 'LocalDocument: Function is not usable on local documents',\n    LD7: 'Local document already exists',\n    LD8: 'localDocuments not activated. Set localDocuments=true on creation, when you want to store local documents on the RxDatabase or RxCollection.',\n\n    // plugins/replication.js\n    RC1: 'Replication: already added',\n    RC2: 'replicateCouchDB() query must be from the same RxCollection',\n    // removed in 14.0.0 - PouchDB RxStorage is removed RC3: 'RxCollection.syncCouchDB() Do not use a collection\\'s pouchdb as remote, use the collection instead',\n    RC4: 'RxCouchDBReplicationState.awaitInitialReplication() cannot await initial replication when live: true',\n    RC5: 'RxCouchDBReplicationState.awaitInitialReplication() cannot await initial replication if multiInstance because the replication might run on another instance',\n    RC6: 'syncFirestore() serverTimestampField MUST NOT be part of the collections schema and MUST NOT be nested.',\n    RC7: 'SimplePeer requires to have process.nextTick() polyfilled, see https://rxdb.info/replication-webrtc.html?console=webrtc ',\n    RC_PULL: 'RxReplication pull handler threw an error - see .errors for more details',\n    RC_STREAM: 'RxReplication pull stream$ threw an error - see .errors for more details',\n    RC_PUSH: 'RxReplication push handler threw an error - see .errors for more details',\n    RC_PUSH_NO_AR: 'RxReplication push handler did not return an array with the conflicts',\n    RC_WEBRTC_PEER: 'RxReplication WebRTC Peer has error',\n    RC_COUCHDB_1: 'replicateCouchDB() url must end with a slash like \\'https://example.com/mydatabase/\\'',\n    RC_COUCHDB_2: 'replicateCouchDB() did not get valid result with rows.',\n    RC_OUTDATED: 'Outdated client, update required. Replication was canceled',\n    RC_UNAUTHORIZED: 'Unauthorized client, update the replicationState.headers to set correct auth data',\n    RC_FORBIDDEN: 'Client behaves wrong so the replication was canceled. Mostly happens if the client tries to write data that it is not allowed to',\n\n    // plugins/dev-mode/check-schema.js\n    SC1: 'fieldnames do not match the regex',\n    SC2: 'SchemaCheck: name \\'item\\' reserved for array-fields',\n    SC3: 'SchemaCheck: fieldname has a ref-array but items-type is not string',\n    SC4: 'SchemaCheck: fieldname has a ref but is not type string, [string,null] or array<string>',\n    SC6: 'SchemaCheck: primary can only be defined at top-level',\n    SC7: 'SchemaCheck: default-values can only be defined at top-level',\n    SC8: 'SchemaCheck: first level-fields cannot start with underscore _',\n    SC10: 'SchemaCheck: schema defines ._rev, this will be done automatically',\n    SC11: 'SchemaCheck: schema needs a number >=0 as version',\n    // removed in 10.0.0 - SC12: 'SchemaCheck: primary can only be defined once',\n    SC13: 'SchemaCheck: primary is always index, do not declare it as index',\n    SC14: 'SchemaCheck: primary is always unique, do not declare it as index',\n    SC15: 'SchemaCheck: primary cannot be encrypted',\n    SC16: 'SchemaCheck: primary must have type: string',\n    SC17: 'SchemaCheck: top-level fieldname is not allowed',\n    SC18: 'SchemaCheck: indexes must be an array',\n    SC19: 'SchemaCheck: indexes must contain strings or arrays of strings',\n    SC20: 'SchemaCheck: indexes.array must contain strings',\n    SC21: 'SchemaCheck: given index is not defined in schema',\n    SC22: 'SchemaCheck: given indexKey is not type:string',\n    SC23: 'SchemaCheck: fieldname is not allowed',\n    SC24: 'SchemaCheck: required fields must be set via array. See https://spacetelescope.github.io/understanding-json-schema/reference/object.html#required',\n    SC25: 'SchemaCheck: compoundIndexes needs to be specified in the indexes field',\n    SC26: 'SchemaCheck: indexes needs to be specified at collection schema level',\n    SC27: 'SchemaCheck: encrypted fields need to be specified at collection schema level',\n    SC28: 'SchemaCheck: encrypted fields is not defined in the schema',\n    SC29: 'SchemaCheck: missing object key \\'properties\\'',\n    SC30: 'SchemaCheck: primaryKey is required',\n    SC32: 'SchemaCheck: primary field must have the type string/number/integer',\n    SC33: 'SchemaCheck: used primary key is not a property in the schema',\n    SC34: 'Fields of type string that are used in an index, must have set the maxLength attribute in the schema',\n    SC35: 'Fields of type number/integer that are used in an index, must have set the multipleOf attribute in the schema',\n    SC36: 'A field of this type cannot be used as index',\n    SC37: 'Fields of type number that are used in an index, must have set the minimum and maximum attribute in the schema',\n    SC38: 'Fields of type boolean that are used in an index, must be required in the schema',\n    SC39: 'The primary key must have the maxLength attribute set',\n    SC40: '$ref fields in the schema are not allowed. RxDB cannot resolve related schemas because it would have a negative performance impact.' +\n        'It would have to run http requests on runtime. $ref fields should be resolved during build time.',\n    SC41: 'minimum, maximum and maxLength values for indexes must be real numbers, not Infinity or -Infinity',\n\n    // plugins/dev-mode\n    // removed in 13.9.0, use PL3 instead - DEV1: 'dev-mode added multiple times',\n\n    // plugins/validate.js\n    VD1: 'Sub-schema not found, does the schemaPath exists in your schema?',\n    VD2: 'object does not match schema',\n\n    // plugins/in-memory.js\n    // removed in 14.0.0 - PouchDB RxStorage is removed IM1: 'InMemory: Memory-Adapter must be added. Use addPouchPlugin(require(\\'pouchdb-adapter-memory\\'));',\n    // removed in 14.0.0 - PouchDB RxStorage is removed IM2: 'inMemoryCollection.sync(): Do not replicate with the in-memory instance. Replicate with the parent instead',\n\n    // plugins/server.js\n    S1: 'You cannot create collections after calling RxDatabase.server()',\n\n    // plugins/replication-graphql.js\n    GQL1: 'GraphQL replication: cannot find sub schema by key',\n    // removed in 13.0.0, use RC_PULL instead - GQL2: 'GraphQL replication: unknown errors occurred in replication pull - see innerErrors for more details',\n    GQL3: 'GraphQL replication: pull returns more documents then batchSize',\n    // removed in 13.0.0, use RC_PUSH instead - GQL4: 'GraphQL replication: unknown errors occurred in replication push - see innerErrors for more details',\n\n    // plugins/crdt/\n    CRDT1: 'CRDT operations cannot be used because the crdt options are not set in the schema.',\n    CRDT2: 'RxDocument.incrementalModify() cannot be used when CRDTs are activated.',\n    CRDT3: 'To use CRDTs you MUST NOT set a conflictHandler because the default CRDT conflict handler must be used',\n\n    // plugins/storage-dexie/\n    // removed in 15.0.0, added boolean index support to dexie storage - DXE1: 'The dexie.js RxStorage does not support boolean indexes, see https://rxdb.info/rx-storage-dexie.html#boolean-index',\n\n    /**\n     * Should never be thrown, use this for\n     * null checks etc. so you do not have to increase the\n     * build size with error message strings.\n     */\n    SNH: 'This should never happen'\n};\n","import { RxCollectionBase } from '../../rx-collection.ts';\nimport { RxDatabaseBase } from '../../rx-database.ts';\nimport { createRxDocumentConstructor, basePrototype } from '../../rx-document.ts';\n\n/**\n * returns all possible properties of a RxCollection-instance\n */\nlet _rxCollectionProperties: string[];\nexport function rxCollectionProperties(): string[] {\n    if (!_rxCollectionProperties) {\n        const pseudoInstance = new (RxCollectionBase as any)();\n        const ownProperties = Object.getOwnPropertyNames(pseudoInstance);\n        const prototypeProperties = Object.getOwnPropertyNames(\n            Object.getPrototypeOf(pseudoInstance)\n        );\n        _rxCollectionProperties = [...ownProperties, ...prototypeProperties];\n    }\n    return _rxCollectionProperties;\n}\n\n\n/**\n * returns all possible properties of a RxDatabase-instance\n */\nlet _rxDatabaseProperties: string[];\nexport function rxDatabaseProperties(): string[] {\n    if (!_rxDatabaseProperties) {\n        const pseudoInstance: RxDatabaseBase<any, any> = new (RxDatabaseBase as any)(\n            'pseudoInstance',\n            'memory'\n        );\n        const ownProperties = Object.getOwnPropertyNames(pseudoInstance);\n        const prototypeProperties = Object.getOwnPropertyNames(\n            Object.getPrototypeOf(pseudoInstance)\n        );\n        _rxDatabaseProperties = [...ownProperties, ...prototypeProperties];\n        pseudoInstance.destroy();\n    }\n    return _rxDatabaseProperties;\n}\n\n/**\n * returns all possible properties of a RxDocument\n */\nconst pseudoConstructor = createRxDocumentConstructor(basePrototype);\nconst pseudoRxDocument = new (pseudoConstructor as any)();\nlet _rxDocumentProperties: string[];\nexport function rxDocumentProperties(): string[] {\n    if (!_rxDocumentProperties) {\n        const reserved = ['deleted', 'synced'];\n        const ownProperties = Object.getOwnPropertyNames(pseudoRxDocument);\n        const prototypeProperties = Object.getOwnPropertyNames(basePrototype);\n        _rxDocumentProperties = [...ownProperties, ...prototypeProperties, ...reserved];\n    }\n    return _rxDocumentProperties;\n}\n","/**\n * does additional checks over the schema-json\n * to ensure nothing is broken or not supported\n */\nimport {\n    newRxError\n} from '../../rx-error.ts';\nimport { getPrimaryFieldOfPrimaryKey, getSchemaByObjectPath } from '../../rx-schema-helper.ts';\nimport type {\n    CompositePrimaryKey,\n    JsonSchema,\n    JsonSchemaTypes,\n    RxJsonSchema,\n    TopLevelProperty\n} from '../../types/index.d.ts';\nimport {\n    appendToArray,\n    flattenObject, getProperty, isMaybeReadonlyArray,\n    trimDots\n} from '../../plugins/utils/index.ts';\nimport { rxDocumentProperties } from './entity-properties.ts';\n\n/**\n * checks if the fieldname is allowed\n * this makes sure that the fieldnames can be transformed into javascript-vars\n * and does not conquer the observe$ and populate_ fields\n * @throws {Error}\n */\nexport function checkFieldNameRegex(fieldName: string) {\n    if (fieldName === '_deleted') {\n        return;\n    }\n\n    if (['properties'].includes(fieldName)) {\n        throw newRxError('SC23', {\n            fieldName\n        });\n    }\n\n    const regexStr = '^[a-zA-Z](?:[[a-zA-Z0-9_]*]?[a-zA-Z0-9])?$';\n    const regex = new RegExp(regexStr);\n    if (\n        /**\n         * It must be allowed to set _id as primaryKey.\n         * This makes it sometimes easier to work with RxDB+CouchDB\n         * @link https://github.com/pubkey/rxdb/issues/681\n         */\n        fieldName !== '_id' &&\n        !fieldName.match(regex)\n    ) {\n        throw newRxError('SC1', {\n            regex: regexStr,\n            fieldName\n        });\n    }\n}\n\n/**\n * validate that all schema-related things are ok\n */\nexport function validateFieldsDeep(rxJsonSchema: RxJsonSchema<any>): true {\n\n    const primaryPath = getPrimaryFieldOfPrimaryKey(rxJsonSchema.primaryKey);\n\n    function checkField(\n        fieldName: string,\n        schemaObj: JsonSchema<any>,\n        path: string\n    ) {\n        if (\n            typeof fieldName === 'string' &&\n            typeof schemaObj === 'object' &&\n            !Array.isArray(schemaObj) &&\n            path.split('.').pop() !== 'patternProperties'\n        ) checkFieldNameRegex(fieldName);\n\n        // 'item' only allowed it type=='array'\n        if (Object.prototype.hasOwnProperty.call(schemaObj, 'item') && schemaObj.type !== 'array') {\n            throw newRxError('SC2', {\n                fieldName\n            });\n        }\n\n        /**\n         * required fields cannot be set via 'required: true',\n         * but must be set via required: []\n         */\n        if (\n            Object.prototype.hasOwnProperty.call(schemaObj, 'required') &&\n            typeof schemaObj.required === 'boolean'\n        ) {\n            throw newRxError('SC24', {\n                fieldName\n            });\n        }\n\n        // $ref is not allowed\n        if (Object.prototype.hasOwnProperty.call(schemaObj, '$ref')) {\n            throw newRxError('SC40', {\n                fieldName\n            });\n        }\n\n\n        // if ref given, must be type=='string', type=='array' with string-items or type==['string','null']\n        if (Object.prototype.hasOwnProperty.call(schemaObj, 'ref')) {\n            if (Array.isArray(schemaObj.type)) {\n                if (schemaObj.type.length > 2 || !schemaObj.type.includes('string') || !schemaObj.type.includes('null')) {\n                    throw newRxError('SC4', {\n                        fieldName\n                    });\n                }\n            } else {\n                switch (schemaObj.type) {\n                    case 'string':\n                        break;\n                    case 'array':\n                        if (\n                            !schemaObj.items ||\n                            !(schemaObj.items as any).type ||\n                            (schemaObj.items as any).type !== 'string'\n                        ) {\n                            throw newRxError('SC3', {\n                                fieldName\n                            });\n                        }\n                        break;\n                    default:\n                        throw newRxError('SC4', {\n                            fieldName\n                        });\n                }\n            }\n        }\n\n        const isNested = path.split('.').length >= 2;\n\n        // nested only\n        if (isNested) {\n            if ((schemaObj as any).default) {\n                throw newRxError('SC7', {\n                    path\n                });\n            }\n        }\n\n        // first level\n        if (!isNested) {\n\n            // if _id is used, it must be primaryKey\n            if (\n                fieldName === '_id' &&\n                primaryPath !== '_id'\n            ) {\n                throw newRxError('COL2', {\n                    fieldName\n                });\n            }\n\n            // check underscore fields\n            if (fieldName.charAt(0) === '_') {\n                if (\n                    // exceptional allow underscore on these fields.\n                    fieldName === '_id' ||\n                    fieldName === '_deleted'\n                ) {\n                    return;\n                }\n                throw newRxError('SC8', {\n                    fieldName\n                });\n            }\n        }\n    }\n\n    function traverse(currentObj: any, currentPath: any) {\n        if (!currentObj || typeof currentObj !== 'object') {\n            return;\n        }\n        Object.keys(currentObj).forEach(attributeName => {\n            const schemaObj = currentObj[attributeName];\n            if (\n                !currentObj.properties &&\n                schemaObj &&\n                typeof schemaObj === 'object' &&\n                !Array.isArray(currentObj)\n            ) {\n                checkField(\n                    attributeName,\n                    schemaObj,\n                    currentPath\n                );\n            }\n            let nextPath = currentPath;\n            if (attributeName !== 'properties') nextPath = nextPath + '.' + attributeName;\n            traverse(schemaObj, nextPath);\n        });\n    }\n    traverse(rxJsonSchema, '');\n    return true;\n}\n\nexport function checkPrimaryKey(\n    jsonSchema: RxJsonSchema<any>\n) {\n    if (!jsonSchema.primaryKey) {\n        throw newRxError('SC30', { schema: jsonSchema });\n    }\n\n\n\n    function validatePrimarySchemaPart(\n        schemaPart: JsonSchema | TopLevelProperty\n    ) {\n        if (!schemaPart) {\n            throw newRxError('SC33', { schema: jsonSchema });\n        }\n\n        const type: string = schemaPart.type as any;\n        if (\n            !type ||\n            !['string', 'number', 'integer'].includes(type)\n        ) {\n            throw newRxError('SC32', { schema: jsonSchema, args: { schemaPart } });\n        }\n    }\n\n    if (typeof jsonSchema.primaryKey === 'string') {\n        const key = jsonSchema.primaryKey;\n        const schemaPart = jsonSchema.properties[key];\n        validatePrimarySchemaPart(schemaPart);\n    } else {\n        const compositePrimaryKey: CompositePrimaryKey<any> = jsonSchema.primaryKey as any;\n\n        const keySchemaPart = getSchemaByObjectPath(jsonSchema, compositePrimaryKey.key);\n        validatePrimarySchemaPart(keySchemaPart);\n\n        compositePrimaryKey.fields.forEach(field => {\n            const schemaPart = getSchemaByObjectPath(jsonSchema, field);\n            validatePrimarySchemaPart(schemaPart);\n        });\n    }\n\n\n    /**\n     * The primary key must have a maxLength set\n     * which is required by some RxStorage implementations\n     * to ensure we can craft custom index strings.\n     */\n    const primaryPath = getPrimaryFieldOfPrimaryKey(jsonSchema.primaryKey);\n    const primaryPathSchemaPart = jsonSchema.properties[primaryPath];\n    if (!primaryPathSchemaPart.maxLength) {\n        throw newRxError('SC39', { schema: jsonSchema, args: { primaryPathSchemaPart } });\n    } else if (!isFinite(primaryPathSchemaPart.maxLength)) {\n        throw newRxError('SC41', { schema: jsonSchema, args: { primaryPathSchemaPart } });\n    }\n}\n\n/**\n * computes real path of the object path in the collection schema\n */\nfunction getSchemaPropertyRealPath(shortPath: string) {\n    const pathParts = shortPath.split('.');\n    let realPath = '';\n    for (let i = 0; i < pathParts.length; i += 1) {\n        if (pathParts[i] !== '[]') {\n            realPath = realPath.concat('.properties.'.concat(pathParts[i]));\n        } else {\n            realPath = realPath.concat('.items');\n        }\n    }\n    return trimDots(realPath);\n}\n\n/**\n * does the checking\n * @throws {Error} if something is not ok\n */\nexport function checkSchema(jsonSchema: RxJsonSchema<any>) {\n\n    if (!jsonSchema.primaryKey) {\n        throw newRxError('SC30', {\n            schema: jsonSchema\n        });\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(jsonSchema, 'properties')) {\n        throw newRxError('SC29', {\n            schema: jsonSchema\n        });\n    }\n\n    // _rev MUST NOT exist, it is added by RxDB\n    if (jsonSchema.properties._rev) {\n        throw newRxError('SC10', {\n            schema: jsonSchema\n        });\n    }\n\n    // check version\n    if (!Object.prototype.hasOwnProperty.call(jsonSchema, 'version') ||\n        typeof jsonSchema.version !== 'number' ||\n        jsonSchema.version < 0\n    ) {\n        throw newRxError('SC11', {\n            version: jsonSchema.version\n        });\n    }\n\n    validateFieldsDeep(jsonSchema);\n    checkPrimaryKey(jsonSchema);\n\n    Object.keys(jsonSchema.properties).forEach(key => {\n        const value: any = jsonSchema.properties[key];\n        // check primary\n        if (key === jsonSchema.primaryKey) {\n            if (jsonSchema.indexes && jsonSchema.indexes.includes(key)) {\n                throw newRxError('SC13', {\n                    value,\n                    schema: jsonSchema\n                });\n            }\n            if (value.unique) {\n                throw newRxError('SC14', {\n                    value,\n                    schema: jsonSchema\n                });\n            }\n            if (jsonSchema.encrypted && jsonSchema.encrypted.includes(key)) {\n                throw newRxError('SC15', {\n                    value,\n                    schema: jsonSchema\n                });\n            }\n            if (value.type !== 'string') {\n                throw newRxError('SC16', {\n                    value,\n                    schema: jsonSchema\n                });\n            }\n        }\n\n        // check if RxDocument-property\n        if (rxDocumentProperties().includes(key)) {\n            throw newRxError('SC17', {\n                key,\n                schema: jsonSchema\n            });\n        }\n    });\n\n    // check format of jsonSchema.indexes\n    if (jsonSchema.indexes) {\n        // should be an array\n        if (!isMaybeReadonlyArray(jsonSchema.indexes)) {\n            throw newRxError('SC18', {\n                indexes: jsonSchema.indexes,\n                schema: jsonSchema\n            });\n        }\n\n        jsonSchema.indexes.forEach(index => {\n            // should contain strings or array of strings\n            if (!(typeof index === 'string' || Array.isArray(index))) {\n                throw newRxError('SC19', { index, schema: jsonSchema });\n            }\n            // if is a compound index it must contain strings\n            if (Array.isArray(index)) {\n                for (let i = 0; i < index.length; i += 1) {\n                    if (typeof index[i] !== 'string') {\n                        throw newRxError('SC20', { index, schema: jsonSchema });\n                    }\n                }\n            }\n\n            /**\n             * To be able to craft custom indexable string with compound fields,\n             * we need to know the maximum fieldlength of the fields values\n             * when they are transformed to strings.\n             * Therefore we need to enforce some properties inside of the schema.\n             */\n            const indexAsArray = isMaybeReadonlyArray(index) ? index : [index];\n            indexAsArray.forEach(fieldName => {\n                const schemaPart = getSchemaByObjectPath(\n                    jsonSchema,\n                    fieldName\n                );\n\n\n                const type: JsonSchemaTypes = schemaPart.type as any;\n                switch (type) {\n                    case 'string':\n                        const maxLength = schemaPart.maxLength;\n                        if (!maxLength) {\n                            throw newRxError('SC34', {\n                                index,\n                                field: fieldName,\n                                schema: jsonSchema\n                            });\n                        }\n                        break;\n                    case 'number':\n                    case 'integer':\n                        const multipleOf = schemaPart.multipleOf;\n                        if (!multipleOf) {\n                            throw newRxError('SC35', {\n                                index,\n                                field: fieldName,\n                                schema: jsonSchema\n                            });\n                        }\n                        const maximum = schemaPart.maximum;\n                        const minimum = schemaPart.minimum;\n                        if (\n                            typeof maximum === 'undefined' ||\n                            typeof minimum === 'undefined'\n                        ) {\n                            throw newRxError('SC37', {\n                                index,\n                                field: fieldName,\n                                schema: jsonSchema\n                            });\n                        }\n\n                        if (\n                            !isFinite(maximum) ||\n                            !isFinite(minimum)\n                        ) {\n                            throw newRxError('SC41', {\n                                index,\n                                field: fieldName,\n                                schema: jsonSchema\n                            });\n                        }\n\n                        break;\n                    case 'boolean':\n                        /**\n                         * If a boolean field is used as an index,\n                         * it must be required.\n                         */\n                        let parentPath = '';\n                        let lastPathPart = fieldName;\n                        if (fieldName.includes('.')) {\n                            const partParts = fieldName.split('.');\n                            lastPathPart = partParts.pop();\n                            parentPath = partParts.join('.');\n                        }\n                        const parentSchemaPart = parentPath === '' ? jsonSchema : getSchemaByObjectPath(\n                            jsonSchema,\n                            parentPath\n                        );\n\n                        if (\n                            !parentSchemaPart.required ||\n                            !parentSchemaPart.required.includes(lastPathPart)\n                        ) {\n                            throw newRxError('SC38', {\n                                index,\n                                field: fieldName,\n                                schema: jsonSchema\n                            });\n                        }\n                        break;\n\n                    default:\n                        throw newRxError('SC36', {\n                            fieldName,\n                            type: schemaPart.type as any,\n                            schema: jsonSchema,\n                        });\n                }\n            });\n\n        });\n    }\n\n    // remove backward-compatibility for index: true\n    Object.keys(flattenObject(jsonSchema))\n        .map(key => {\n            // flattenObject returns only ending paths, we need all paths pointing to an object\n            const split = key.split('.');\n            split.pop(); // all but last\n            return split.join('.');\n        })\n        .filter(key => key !== '')\n        .filter((elem, pos, arr) => arr.indexOf(elem) === pos) // unique\n        .filter(key => { // check if this path defines an index\n            const value = getProperty(jsonSchema, key);\n            return value && !!value.index;\n        })\n        .forEach(key => { // replace inner properties\n            key = key.replace('properties.', ''); // first\n            key = key.replace(/\\.properties\\./g, '.'); // middle\n            throw newRxError('SC26', {\n                index: trimDots(key),\n                schema: jsonSchema\n            });\n        });\n\n    /* check types of the indexes */\n    (jsonSchema.indexes || [])\n        .reduce((indexPaths: string[], currentIndex) => {\n            if (isMaybeReadonlyArray(currentIndex)) {\n                appendToArray(indexPaths, currentIndex);\n            } else {\n                indexPaths.push(currentIndex);\n            }\n            return indexPaths;\n        }, [])\n        .filter((elem, pos, arr) => arr.indexOf(elem) === pos) // from now on working only with unique indexes\n        .map(indexPath => {\n            const realPath = getSchemaPropertyRealPath(indexPath); // real path in the collection schema\n            const schemaObj = getProperty(jsonSchema, realPath); // get the schema of the indexed property\n            if (!schemaObj || typeof schemaObj !== 'object') {\n                throw newRxError('SC21', {\n                    index: indexPath,\n                    schema: jsonSchema\n                });\n            }\n            return { indexPath, schemaObj };\n        })\n        .filter(index =>\n            index.schemaObj.type !== 'string' &&\n            index.schemaObj.type !== 'integer' &&\n            index.schemaObj.type !== 'number' &&\n            index.schemaObj.type !== 'boolean'\n        )\n        .forEach(index => {\n            throw newRxError('SC22', {\n                key: index.indexPath,\n                type: index.schemaObj.type,\n                schema: jsonSchema\n            });\n        });\n\n\n    /**\n     * TODO\n     * in 9.0.0 we changed the way encrypted fields are defined\n     * This check ensures people do not oversee the breaking change\n     * Remove this check in the future\n     */\n    Object.keys(flattenObject(jsonSchema))\n        .map(key => {\n            // flattenObject returns only ending paths, we need all paths pointing to an object\n            const split = key.split('.');\n            split.pop(); // all but last\n            return split.join('.');\n        })\n        .filter(key => key !== '' && key !== 'attachments')\n        .filter((elem, pos, arr) => arr.indexOf(elem) === pos) // unique\n        .filter(key => {\n            // check if this path defines an encrypted field\n            const value = getProperty(jsonSchema, key);\n            return value && !!value.encrypted;\n        })\n        .forEach(key => { // replace inner properties\n            key = key.replace('properties.', ''); // first\n            key = key.replace(/\\.properties\\./g, '.'); // middle\n            throw newRxError('SC27', {\n                index: trimDots(key),\n                schema: jsonSchema\n            });\n        });\n\n    /* ensure encrypted fields exist in the schema */\n    if (jsonSchema.encrypted) {\n        jsonSchema.encrypted\n            .forEach(propPath => {\n                // real path in the collection schema\n                const realPath = getSchemaPropertyRealPath(propPath);\n                // get the schema of the indexed property\n                const schemaObj = getProperty(jsonSchema, realPath);\n                if (!schemaObj || typeof schemaObj !== 'object') {\n                    throw newRxError('SC28', {\n                        field: propPath,\n                        schema: jsonSchema\n                    });\n                }\n            });\n    }\n}\n","import {\n    newRxError,\n    newRxTypeError\n} from '../../rx-error.ts';\nimport type { KeyFunctionMap, RxJsonSchema } from '../../types/index.d.ts';\nimport { rxCollectionProperties, rxDocumentProperties } from './entity-properties.ts';\n\n/**\n * checks if the given static methods are allowed\n * @throws if not allowed\n */\nexport function checkOrmMethods(statics?: KeyFunctionMap) {\n    if (!statics) {\n        return;\n    }\n    Object\n        .entries(statics)\n        .forEach(([k, v]) => {\n            if (typeof k !== 'string') {\n                throw newRxTypeError('COL14', {\n                    name: k\n                });\n            }\n\n            if (k.startsWith('_')) {\n                throw newRxTypeError('COL15', {\n                    name: k\n                });\n            }\n\n            if (typeof v !== 'function') {\n                throw newRxTypeError('COL16', {\n                    name: k,\n                    type: typeof k\n                });\n            }\n\n            if (\n                rxCollectionProperties().includes(k) ||\n                rxDocumentProperties().includes(k)\n            ) {\n                throw newRxError('COL17', {\n                    name: k\n                });\n            }\n        });\n}\n\n\nexport function checkOrmDocumentMethods<RxDocType>(\n    schema: RxJsonSchema<RxDocType>,\n    methods?: any,\n) {\n    const topLevelFields = Object.keys(schema.properties) as (keyof RxDocType)[];\n    if (!methods) {\n        return;\n    }\n    Object.keys(methods)\n        .filter(funName => topLevelFields.includes(funName as any))\n        .forEach(funName => {\n            throw newRxError('COL18', {\n                funName\n            });\n        });\n}\n","import type { RxJsonSchema, NumberFunctionMap } from '../../types/index.d.ts';\nimport { newRxTypeError, newRxError } from '../../rx-error.ts';\nimport { getPreviousVersions } from '../../rx-schema.ts';\n\n\n/**\n * checks if the migrationStrategies are ok, throws if not\n * @throws {Error|TypeError} if not ok\n */\nexport function checkMigrationStrategies(\n    schema: RxJsonSchema<any>,\n    migrationStrategies: NumberFunctionMap\n): boolean {\n    // migrationStrategies must be object not array\n    if (\n        typeof migrationStrategies !== 'object' ||\n        Array.isArray(migrationStrategies)\n    ) {\n        throw newRxTypeError('COL11', {\n            schema\n        });\n    }\n\n    const previousVersions = getPreviousVersions(schema);\n\n    // for every previousVersion there must be strategy\n    if (\n        previousVersions.length !== Object\n            .keys(migrationStrategies).length\n    ) {\n        throw newRxError('COL12', {\n            have: Object.keys(migrationStrategies),\n            should: previousVersions\n        });\n    }\n\n    // every strategy must have number as property and be a function\n    previousVersions\n        .map(vNr => ({\n            v: vNr,\n            s: migrationStrategies[(vNr + 1)]\n        }))\n        .filter(strategy => typeof strategy.s !== 'function')\n        .forEach(strategy => {\n            throw newRxTypeError('COL13', {\n                version: strategy.v,\n                type: typeof strategy,\n                schema\n            });\n        });\n\n    return true;\n}\n","import type { RxCollectionCreator, RxDatabaseCreator } from '../../types/index.d.ts';\nimport { newRxError, newRxTypeError } from '../../rx-error.ts';\nimport { rxDatabaseProperties } from './entity-properties.ts';\nimport { isFolderPath } from '../../plugins/utils/index.ts';\n\n/**\n * if the name of a collection\n * clashes with a property of RxDatabase,\n * we get problems so this function prohibits this\n */\nexport function ensureCollectionNameValid(\n    args: RxCollectionCreator & { name: string; }\n) {\n    if (rxDatabaseProperties().includes(args.name)) {\n        throw newRxError('DB5', {\n            name: args.name\n        });\n    }\n    validateDatabaseName(args.name);\n}\n\nexport function ensureDatabaseNameIsValid(args: RxDatabaseCreator<any, any>) {\n\n    validateDatabaseName(args.name);\n\n    if(args.name.includes('$')){\n        throw newRxError('DB13', {\n            name: args.name,\n        });\n    }\n\n    /**\n     * The server-plugin has problems when a path with and ending slash is given\n     * So we do not allow this.\n     * @link https://github.com/pubkey/rxdb/issues/2251\n     */\n    if (isFolderPath(args.name)) {\n        if (args.name.endsWith('/') || args.name.endsWith('\\\\')) {\n            throw newRxError('DB11', {\n                name: args.name,\n            });\n        }\n    }\n}\n\n\n\nconst validCouchDBStringRegexStr = '^[a-z][_$a-z0-9\\\\-]*$';\nconst validCouchDBStringRegex = new RegExp(validCouchDBStringRegexStr);\n\n/**\n * Validates that a given string is ok to be used with couchdb-collection-names.\n * We only allow these strings as database- or collection names because it ensures\n * that you later do not get in trouble when you want to use the database together witch couchdb.\n *\n * @link https://docs.couchdb.org/en/stable/api/database/common.html\n * @link https://neighbourhood.ie/blog/2020/10/13/everything-you-need-to-know-about-couchdb-database-names/\n * @throws  {RxError}\n */\nexport function validateDatabaseName(name: string): true {\n    if (\n        typeof name !== 'string' ||\n        name.length === 0\n    ) {\n        throw newRxTypeError('UT1', {\n            name\n        });\n    }\n\n\n    // do not check, if foldername is given\n    if (isFolderPath(name)) {\n        return true;\n    }\n\n    if (\n        !name.match(validCouchDBStringRegex) &&\n        /**\n         * The string ':memory:' is used in the SQLite RxStorage\n         * to persist data into a memory state. Often used in tests.\n         */\n        name !== ':memory:'\n    ) {\n        throw newRxError('UT2', {\n            regex: validCouchDBStringRegexStr,\n            givenName: name,\n        });\n    }\n\n    return true;\n}\n","import type {\n    RxPluginPreCreateRxQueryArgs,\n    MangoQuery,\n    RxPluginPrePrepareQueryArgs,\n    FilledMangoQuery,\n    RxJsonSchema,\n    RxDocumentData,\n    MangoQuerySelector,\n    PreparedQuery\n} from '../../types/index.d.ts';\nimport { newRxError, newRxTypeError } from '../../rx-error.ts';\nimport { deepEqual } from '../utils/index.ts';\nimport { prepareQuery } from '../../rx-query.ts';\n\n/**\n * accidentally passing a non-valid object into the query params\n * is very hard to debug especially when queries are observed\n * This is why we do some checks here in dev-mode\n */\nexport function checkQuery(args: RxPluginPreCreateRxQueryArgs) {\n    const isPlainObject = Object.prototype.toString.call(args.queryObj) === '[object Object]';\n    if (!isPlainObject) {\n        throw newRxTypeError('QU11', {\n            op: args.op,\n            collection: args.collection.name,\n            queryObj: args.queryObj\n        });\n    }\n\n    const validKeys: (keyof MangoQuery)[] = [\n        'selector',\n        'limit',\n        'skip',\n        'sort',\n        'index'\n    ];\n    Object.keys(args.queryObj).forEach(key => {\n        if (!(validKeys as string[]).includes(key)) {\n            throw newRxTypeError('QU11', {\n                op: args.op,\n                collection: args.collection.name,\n                queryObj: args.queryObj,\n                key,\n                args: {\n                    validKeys\n                }\n            });\n        }\n    });\n\n    // do not allow skip or limit for count queries\n    if (\n        args.op === 'count' &&\n        (\n            args.queryObj.limit ||\n            args.queryObj.skip\n        )\n    ) {\n        throw newRxError(\n            'QU15',\n            {\n                collection: args.collection.name,\n                query: args.queryObj\n            }\n        );\n    }\n\n    ensureObjectDoesNotContainRegExp(args.queryObj);\n}\n\n\nexport function checkMangoQuery(args: RxPluginPrePrepareQueryArgs) {\n    const schema = args.rxQuery.collection.schema.jsonSchema;\n\n    /**\n     * Ensure that all top level fields are included in the schema.\n     * TODO this check can be augmented to also check sub-fields.\n     */\n    const massagedSelector: MangoQuerySelector<any> = args.mangoQuery.selector;\n    const schemaTopLevelFields = Object.keys(schema.properties);\n    Object.keys(massagedSelector)\n        // do not check operators\n        .filter(fieldOrOperator => !fieldOrOperator.startsWith('$'))\n        // skip this check on non-top-level fields\n        .filter(field => !field.includes('.'))\n        .forEach(field => {\n            if (!schemaTopLevelFields.includes(field)) {\n                throw newRxError('QU13', {\n                    schema,\n                    field,\n                    query: args.mangoQuery,\n                });\n            }\n        });\n\n    /**\n     * ensure if custom index is set,\n     * it is also defined in the schema\n     */\n    const schemaIndexes = schema.indexes ? schema.indexes : [];\n    const index = args.mangoQuery.index;\n    if (index) {\n        const isInSchema = schemaIndexes.find(schemaIndex => deepEqual(schemaIndex, index));\n        if (!isInSchema) {\n            throw newRxError(\n                'QU12',\n                {\n                    collection: args.rxQuery.collection.name,\n                    query: args.mangoQuery,\n                    schema\n                }\n            );\n        }\n    }\n\n\n    /**\n     * Ensure that a count() query can only be used\n     * with selectors that are fully satisfied by the used index.\n     */\n    if (args.rxQuery.op === 'count') {\n        if (\n            !areSelectorsSatisfiedByIndex(\n                args.rxQuery.collection.schema.jsonSchema,\n                args.mangoQuery\n            ) &&\n            !args.rxQuery.collection.database.allowSlowCount\n        ) {\n            throw newRxError('QU14', {\n                collection: args.rxQuery.collection,\n                query: args.mangoQuery\n            });\n        }\n    }\n\n    /**\n     * Ensure that sort only runs on known fields\n     * TODO also check nested fields\n     */\n    if (args.mangoQuery.sort) {\n        args.mangoQuery.sort\n            .map(sortPart => Object.keys(sortPart)[0])\n            .filter(field => !field.includes('.'))\n            .forEach(field => {\n                if (!schemaTopLevelFields.includes(field)) {\n                    throw newRxError('QU13', {\n                        schema,\n                        field,\n                        query: args.mangoQuery,\n                    });\n                }\n            });\n    }\n\n    // Do not allow RexExp instances\n    ensureObjectDoesNotContainRegExp(args.mangoQuery);\n}\n\n\nexport function areSelectorsSatisfiedByIndex<RxDocType>(\n    schema: RxJsonSchema<RxDocumentData<RxDocType>>,\n    query: FilledMangoQuery<RxDocType>\n): boolean {\n    const preparedQuery: PreparedQuery<any> = prepareQuery(\n        schema,\n        query\n    );\n    return preparedQuery.queryPlan.selectorSatisfiedByIndex;\n}\n\n/**\n * Ensures that the selector does not contain any RegExp instance.\n * @recursive\n */\nexport function ensureObjectDoesNotContainRegExp(selector: any) {\n    if (typeof selector !== 'object' || selector === null) {\n        return;\n    }\n    const keys = Object.keys(selector);\n    keys.forEach(key => {\n        const value: any = selector[key];\n        if (value instanceof RegExp) {\n            throw newRxError('QU16', {\n                field: key,\n                query: selector,\n            });\n        } else if (Array.isArray(value)) {\n            value.forEach(item => ensureObjectDoesNotContainRegExp(item));\n        } else {\n            ensureObjectDoesNotContainRegExp(value);\n        }\n    });\n}\n","import { newRxError } from '../../rx-error.ts';\nimport { fillPrimaryKey, getPrimaryFieldOfPrimaryKey } from '../../rx-schema-helper.ts';\nimport type { BulkWriteRow, RxDocumentData, RxStorageInstance } from '../../types/index.d.ts';\n\nexport function ensurePrimaryKeyValid(\n    primaryKey: string,\n    docData: RxDocumentData<any>\n) {\n    if (!primaryKey) {\n        throw newRxError('DOC20', {\n            primaryKey,\n            document: docData\n        });\n    }\n\n\n    /**\n     * This is required so that we can left-pad\n     * the primaryKey and we are still able to de-left-pad\n     * it to get again the original key.\n     */\n    if (\n        primaryKey !== primaryKey.trim()\n    ) {\n        throw newRxError('DOC21', {\n            primaryKey,\n            document: docData\n        });\n    }\n    if (\n        primaryKey.includes('\\r') ||\n        primaryKey.includes('\\n')\n    ) {\n        throw newRxError('DOC22', {\n            primaryKey,\n            document: docData\n        });\n    }\n    if (\n        primaryKey.includes('\"')\n    ) {\n        throw newRxError('DOC23', {\n            primaryKey,\n            document: docData\n        });\n    }\n}\n\n/**\n * Deeply checks if the object contains an\n * instance of the JavaScript Date class.\n * @recursive\n */\nexport function containsDateInstance(obj: any): boolean {\n    if (typeof obj !== 'object' || obj === null) {\n        return false;\n    }\n    for (let key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            if (obj[key] instanceof Date) {\n                return true;\n            }\n            if (typeof obj[key] === 'object' && containsDateInstance(obj[key])) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n\n\nexport function checkWriteRows<RxDocType>(\n    storageInstance: RxStorageInstance<RxDocType, any, any, any>,\n    rows: BulkWriteRow<RxDocType>[]\n) {\n    const primaryPath = getPrimaryFieldOfPrimaryKey(storageInstance.schema.primaryKey);\n    for (const writeRow of rows) {\n        // ensure that the primary key has not been changed\n        writeRow.document = fillPrimaryKey(\n            primaryPath,\n            storageInstance.schema,\n            writeRow.document\n        );\n\n\n\n        /**\n         * Ensure that _meta fields have been merged\n         * and not replaced.\n         * This is important so that when one plugin A\n         * sets a _meta field and another plugin B does a write\n         * to the document, it must be ensured that the\n         * field of plugin A was not removed.\n         */\n        if (writeRow.previous) {\n            Object.keys(writeRow.previous._meta)\n                .forEach(metaFieldName => {\n                    if (!Object.prototype.hasOwnProperty.call(writeRow.document._meta, metaFieldName)) {\n                        throw newRxError('SNH', {\n                            dataBefore: writeRow.previous,\n                            dataAfter: writeRow.document,\n                            args: {\n                                metaFieldName\n                            }\n                        });\n                    }\n                });\n        }\n\n        /**\n         * Ensure it can be structured cloned\n         */\n        try {\n            /**\n             * Notice that structuredClone() is not available\n             * in ReactNative, so we test for JSON.stringify() instead\n             * @link https://github.com/pubkey/rxdb/issues/5046#issuecomment-1827374498\n             */\n            if (typeof structuredClone === 'function') {\n                structuredClone(writeRow);\n            } else {\n                JSON.parse(JSON.stringify(writeRow));\n            }\n        } catch (err) {\n            throw newRxError('DOC24', {\n                collection: storageInstance.collectionName,\n                document: writeRow.document\n            });\n        }\n\n\n        /**\n         * Ensure it does not contain a Date() object\n         */\n        if (containsDateInstance(writeRow.document)) {\n            throw newRxError('DOC24', {\n                collection: storageInstance.collectionName,\n                document: writeRow.document\n            });\n        }\n    }\n\n}\n","/**\n * Can be used by some plugins to have a \"global\" object that\n * can be imported and mutated at will.\n */\nexport const RXDB_UTILS_GLOBAL: any = {};\n\n\nexport const PREMIUM_FLAG_HASH = '6da4936d1425ff3a5c44c02342c6daf791d266be3ae8479b8ec59e261df41b93';\n","import { isRxDatabaseFirstTimeInstantiated } from '../../rx-database.ts';\nimport type { RxDatabase } from '../../types';\nimport {\n    PREMIUM_FLAG_HASH,\n    RXDB_UTILS_GLOBAL,\n    RXDB_VERSION,\n    defaultHashSha256\n} from '../utils/index.ts';\n\n\nlet iframeShown = false;\n\n\n/**\n * Adds an iframe to track the results of marketing efforts.\n */\nexport async function addDevModeTrackingIframe(db: RxDatabase) {\n    /**\n     * Only run this in browser AND localhost AND dev-mode.\n     * Make sure this is never used in production by someone.\n     */\n    if (\n        iframeShown ||\n        typeof window === 'undefined' ||\n        typeof location === 'undefined' ||\n        !isLocalHost()\n    ) {\n        return;\n    }\n\n\n    // do not show if premium flag is set.\n    if (\n        RXDB_UTILS_GLOBAL.premium &&\n        typeof RXDB_UTILS_GLOBAL.premium === 'string' &&\n        (await defaultHashSha256(RXDB_UTILS_GLOBAL.premium) === PREMIUM_FLAG_HASH)\n    ) {\n        return;\n    }\n\n\n    // Only run if db was created for the first time.\n    const isFirstTime = await isRxDatabaseFirstTimeInstantiated(db);\n    if (!isFirstTime) {\n        return;\n    }\n\n    iframeShown = true;\n\n    const iframe = document.createElement('iframe');\n    iframe.style.display = 'none';\n    iframe.src = 'https://rxdb.info/html/dev-mode-iframe.html?version=' + RXDB_VERSION;\n    document.body.appendChild(iframe);\n}\n\n\nfunction isLocalHost() {\n    return (\n        location.hostname === 'localhost' ||\n        location.hostname === '127.0.0.1' ||\n        location.hostname === '0.0.0.0' ||\n        location.hostname === '[::1]'  // IPv6\n    );\n}\n","import type {\n    RxPlugin,\n    RxCollectionCreator,\n    RxDatabaseCreator,\n    RxErrorKey,\n    RxDocument,\n    RxDatabase\n} from '../../types/index.d.ts';\n\nimport {\n    ERROR_MESSAGES\n} from './error-messages.ts';\nimport {\n    checkSchema\n} from './check-schema.ts';\nimport {\n    checkOrmDocumentMethods,\n    checkOrmMethods\n} from './check-orm.ts';\nimport { checkMigrationStrategies } from './check-migration-strategies.ts';\nimport {\n    ensureCollectionNameValid,\n    ensureDatabaseNameIsValid\n} from './unallowed-properties.ts';\nimport { checkMangoQuery, checkQuery } from './check-query.ts';\nimport { newRxError } from '../../rx-error.ts';\nimport { DeepReadonly } from '../../types/util.ts';\nimport { deepFreeze } from '../../plugins/utils/index.ts';\nimport { checkWriteRows, ensurePrimaryKeyValid } from './check-document.ts';\nimport { addDevModeTrackingIframe } from './dev-mode-tracking.ts';\n\nexport * from './check-schema.ts';\nexport * from './unallowed-properties.ts';\nexport * from './check-query.ts';\n\nlet showDevModeWarning = true;\n\n/**\n * Suppresses the warning message shown in the console, typically invoked once the developer (hello!) \n * has acknowledged it.\n */\nexport function disableWarnings() {\n    showDevModeWarning = false;\n}\n\n/**\n * Deep freezes and object when in dev-mode.\n * Deep-Freezing has the same performance as deep-cloning, so we only do that in dev-mode.\n * Also we can ensure the readonly state via typescript\n * @link https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze\n */\nexport function deepFreezeWhenDevMode<T>(obj: T): DeepReadonly<T> {\n    // direct return if not suitable for deepFreeze()\n    if (\n        !obj ||\n        typeof obj === 'string' ||\n        typeof obj === 'number'\n    ) {\n        return obj as any;\n    }\n\n    return deepFreeze(obj) as any;\n}\n\n\nexport const DEV_MODE_PLUGIN_NAME = 'dev-mode';\nexport const RxDBDevModePlugin: RxPlugin = {\n    name: DEV_MODE_PLUGIN_NAME,\n    rxdb: true,\n    init: () => {\n        if (showDevModeWarning) {\n            console.warn(\n                [\n                    '-------------- RxDB dev-mode warning -------------------------------',\n                    'you are seeing this because you use the RxDB dev-mode plugin https://rxdb.info/dev-mode.html?console=dev-mode ',\n                    'This is great in development mode, because it will run many checks to ensure',\n                    'that you use RxDB correct. If you see this in production mode,',\n                    'you did something wrong because the dev-mode plugin will decrease the performance.',\n                    '',\n                    '🤗 Hint: To get the most out of RxDB, check out the Premium Plugins',\n                    'to get access to faster storages and more professional features: https://rxdb.info/premium?console=dev-mode ',\n                    '',\n                    'You can disable this warning by calling disableWarnings() from the dev-mode plugin.',\n                    // '',\n                    // 'Also take part in the RxDB User Survey: https://rxdb.info/survey.html',\n                    '---------------------------------------------------------------------'\n                ].join('\\n')\n            );\n        }\n    },\n    overwritable: {\n        isDevMode() {\n            return true;\n        },\n        deepFreezeWhenDevMode,\n        tunnelErrorMessage(code: RxErrorKey) {\n            if (!ERROR_MESSAGES[code]) {\n                console.error('RxDB: Error-Code not known: ' + code);\n                throw new Error('Error-Code ' + code + ' not known, contact the maintainer');\n            }\n            return ERROR_MESSAGES[code];\n        }\n    },\n    hooks: {\n        preCreateRxSchema: {\n            after: checkSchema\n        },\n        preCreateRxDatabase: {\n            after: function (args: RxDatabaseCreator<any, any>) {\n                ensureDatabaseNameIsValid(args);\n            }\n        },\n        createRxDatabase: {\n            after: async function (args) {\n                addDevModeTrackingIframe(args.database);\n            }\n        },\n        preCreateRxCollection: {\n            after: function (args: RxCollectionCreator<any> & { name: string; }) {\n                ensureCollectionNameValid(args);\n                checkOrmDocumentMethods(args.schema as any, args.methods);\n                if (args.name.charAt(0) === '_') {\n                    throw newRxError('DB2', {\n                        name: args.name\n                    });\n                }\n                if (!args.schema) {\n                    throw newRxError('DB4', {\n                        name: args.name,\n                        args\n                    });\n                }\n            }\n        },\n        createRxDocument: {\n            before: function (doc: RxDocument) {\n                ensurePrimaryKeyValid(doc.primary, doc.toJSON(true));\n            }\n        },\n        preCreateRxQuery: {\n            after: function (args) {\n                checkQuery(args);\n            }\n        },\n        prePrepareQuery: {\n            after: (args) => {\n                checkMangoQuery(args);\n            }\n        },\n        preStorageWrite: {\n            before: (args) => {\n                checkWriteRows(args.storageInstance, args.rows);\n            }\n        },\n        createRxCollection: {\n            after: (args) => {\n                // check ORM-methods\n                checkOrmMethods(args.creator.statics);\n                checkOrmMethods(args.creator.methods);\n                checkOrmMethods(args.creator.attachments);\n\n                // check migration strategies\n                if (args.creator.schema && args.creator.migrationStrategies) {\n                    checkMigrationStrategies(\n                        args.creator.schema,\n                        args.creator.migrationStrategies\n                    );\n                }\n            }\n        }\n    }\n};\n","// Making the module version consumable via require - to prohibit\n// multiple occurrancies of the same module in the same app\n// (dual package hazard, https://nodejs.org/api/packages.html#dual-package-hazard)\nimport _Dexie from \"./dist/dexie.min.js\";\nconst DexieSymbol = Symbol.for(\"Dexie\");\nconst Dexie = globalThis[DexieSymbol] || (globalThis[DexieSymbol] = _Dexie);\nif (_Dexie.semVer !== Dexie.semVer) {\n    throw new Error(`Two different versions of Dexie loaded in the same app: ${_Dexie.semVer} and ${Dexie.semVer}`);\n}\nconst {\n    liveQuery, mergeRanges, rangesOverlap, RangeSet, cmp, Entity,\n    PropModSymbol, PropModification, replacePrefix, add, remove } = Dexie;\nexport { liveQuery, mergeRanges, rangesOverlap, RangeSet, cmp, Dexie, Entity,\n    PropModSymbol, PropModification, replacePrefix, add, remove };\nexport default Dexie;\n","import type {\n    DexieStorageInternals,\n    RxDocumentData,\n    RxJsonSchema\n} from '../../types/index.d.ts';\nimport { Dexie } from 'dexie';\nimport type { DexieSettings } from '../../types/index.d.ts';\nimport { flatClone, getFromMapOrCreate, getProperty, setProperty, toArray, uniqueArray } from '../utils/index.ts';\nimport {\n    getPrimaryFieldOfPrimaryKey,\n    getSchemaByObjectPath\n} from '../../rx-schema-helper.ts';\n\nexport const DEXIE_DOCS_TABLE_NAME = 'docs';\nexport const DEXIE_CHANGES_TABLE_NAME = 'changes';\nexport const DEXIE_ATTACHMENTS_TABLE_NAME = 'attachments';\n\nexport const RX_STORAGE_NAME_DEXIE = 'dexie';\n\nconst DEXIE_STATE_DB_BY_NAME: Map<string, DexieStorageInternals> = new Map();\nconst REF_COUNT_PER_DEXIE_DB: Map<DexieStorageInternals, number> = new Map();\nexport function getDexieDbWithTables(\n    databaseName: string,\n    collectionName: string,\n    settings: DexieSettings,\n    schema: RxJsonSchema<any>\n): DexieStorageInternals {\n    const dexieDbName = 'rxdb-dexie-' + databaseName + '--' + schema.version + '--' + collectionName;\n\n    const state = getFromMapOrCreate(\n        DEXIE_STATE_DB_BY_NAME,\n        dexieDbName,\n        () => {\n            const value = (async () => {\n                /**\n                 * IndexedDB was not designed for dynamically adding tables on the fly,\n                 * so we create one dexie database per RxDB storage instance.\n                 * @link https://github.com/dexie/Dexie.js/issues/684#issuecomment-373224696\n                 */\n                const useSettings = flatClone(settings);\n                useSettings.autoOpen = false;\n                const dexieDb = new Dexie(dexieDbName, useSettings);\n                const dexieStoresSettings = {\n                    [DEXIE_DOCS_TABLE_NAME]: getDexieStoreSchema(schema),\n                    [DEXIE_CHANGES_TABLE_NAME]: '++sequence, id',\n                    [DEXIE_ATTACHMENTS_TABLE_NAME]: 'id'\n                };\n\n                dexieDb.version(1).stores(dexieStoresSettings);\n                await dexieDb.open();\n\n                return {\n                    dexieDb,\n                    dexieTable: (dexieDb as any)[DEXIE_DOCS_TABLE_NAME],\n                    dexieAttachmentsTable: (dexieDb as any)[DEXIE_ATTACHMENTS_TABLE_NAME],\n                    booleanIndexes: getBooleanIndexes(schema)\n                };\n            })();\n            DEXIE_STATE_DB_BY_NAME.set(dexieDbName, state);\n            REF_COUNT_PER_DEXIE_DB.set(state, 0);\n            return value;\n        }\n    );\n    return state;\n}\n\nexport async function closeDexieDb(statePromise: DexieStorageInternals) {\n    const state = await statePromise;\n    const prevCount = REF_COUNT_PER_DEXIE_DB.get(statePromise);\n    const newCount = (prevCount as any) - 1;\n    if (newCount === 0) {\n        state.dexieDb.close();\n        REF_COUNT_PER_DEXIE_DB.delete(statePromise);\n    } else {\n        REF_COUNT_PER_DEXIE_DB.set(statePromise, newCount);\n    }\n}\n\n\n\n/**\n * It is not possible to set non-javascript-variable-syntax\n * keys as IndexedDB indexes. So we have to substitute the pipe-char\n * which comes from the key-compression plugin.\n */\nexport const DEXIE_PIPE_SUBSTITUTE = '__';\nexport function dexieReplaceIfStartsWithPipe(str: string): string {\n    const split = str.split('.');\n    if (split.length > 1) {\n        return split.map(part => dexieReplaceIfStartsWithPipe(part)).join('.');\n    }\n\n    if (str.startsWith('|')) {\n        const withoutFirst = str.substring(1);\n        return DEXIE_PIPE_SUBSTITUTE + withoutFirst;\n    } else {\n        return str;\n    }\n}\n\nexport function dexieReplaceIfStartsWithPipeRevert(str: string): string {\n    const split = str.split('.');\n    if (split.length > 1) {\n        return split.map(part => dexieReplaceIfStartsWithPipeRevert(part)).join('.');\n    }\n\n    if (str.startsWith(DEXIE_PIPE_SUBSTITUTE)) {\n        const withoutFirst = str.substring(DEXIE_PIPE_SUBSTITUTE.length);\n        return '|' + withoutFirst;\n    } else {\n        return str;\n    }\n}\n\n\n/**\n * IndexedDB does not support boolean indexing.\n * So we have to replace true/false with '1'/'0'\n * @param d \n */\nexport function fromStorageToDexie<RxDocType>(\n    booleanIndexes: string[],\n    d: RxDocumentData<RxDocType>\n): any {\n    if (!d) {\n        return d;\n    }\n    d = flatClone(d);\n    d = fromStorageToDexieField(d);\n\n    booleanIndexes.forEach(idx => {\n        const val = getProperty(d, idx);\n        const newVal = val ? '1' : '0';\n        setProperty(d, idx, newVal);\n    });\n\n    return d;\n}\nexport function fromDexieToStorage<RxDocType>(\n    booleanIndexes: string[],\n    d: any\n): RxDocumentData<RxDocType> {\n    if (!d) {\n        return d;\n    }\n\n    d = flatClone(d);\n    d = fromDexieToStorageField(d);\n\n    booleanIndexes.forEach(idx => {\n        const val = getProperty(d, idx);\n        const newVal = val === '1' ? true : false;\n        setProperty(d, idx, newVal);\n    });\n\n    return d;\n}\n\n/**\n * @recursive\n */\nexport function fromStorageToDexieField(documentData: RxDocumentData<any>): any {\n    if (\n        !documentData ||\n        typeof documentData === 'string' ||\n        typeof documentData === 'number' ||\n        typeof documentData === 'boolean'\n    ) {\n        return documentData;\n    } else if (Array.isArray(documentData)) {\n        return documentData.map(row => fromStorageToDexieField(row));\n    } else if (typeof documentData === 'object') {\n        const ret: any = {};\n        Object.entries(documentData).forEach(([key, value]) => {\n            if (typeof value === 'object') {\n                value = fromStorageToDexieField(value);\n            }\n            ret[dexieReplaceIfStartsWithPipe(key)] = value;\n        });\n        return ret;\n    }\n}\n\nexport function fromDexieToStorageField(documentData: any): RxDocumentData<any> {\n    if (!documentData || typeof documentData === 'string' || typeof documentData === 'number' || typeof documentData === 'boolean') {\n        return documentData;\n    } else if (Array.isArray(documentData)) {\n        return documentData.map(row => fromDexieToStorageField(row));\n    } else if (typeof documentData === 'object') {\n        const ret: any = {};\n        Object.entries(documentData).forEach(([key, value]) => {\n            if (typeof value === 'object' || Array.isArray(documentData)) {\n                value = fromDexieToStorageField(value);\n            }\n            ret[dexieReplaceIfStartsWithPipeRevert(key)] = value;\n        });\n        return ret;\n    }\n}\n\n\n/**\n * Creates a string that can be used to create the dexie store.\n * @link https://dexie.org/docs/API-Reference#quick-reference\n */\nexport function getDexieStoreSchema(\n    rxJsonSchema: RxJsonSchema<any>\n): string {\n    let parts: string[][] = [];\n\n    /**\n     * First part must be the primary key\n     * @link https://github.com/dexie/Dexie.js/issues/1307#issuecomment-846590912\n     */\n    const primaryKey = getPrimaryFieldOfPrimaryKey(rxJsonSchema.primaryKey);\n    parts.push([primaryKey]);\n    parts.push(['_deleted', primaryKey]);\n\n    // add other indexes\n    if (rxJsonSchema.indexes) {\n        rxJsonSchema.indexes.forEach(index => {\n            const arIndex = toArray(index);\n            parts.push(arIndex);\n        });\n    }\n\n    // we also need the _meta.lwt+primaryKey index for the getChangedDocumentsSince() method.\n    parts.push(['_meta.lwt', primaryKey]);\n\n    // and this one for the cleanup()\n    parts.push(['_meta.lwt']);\n\n    /**\n     * It is not possible to set non-javascript-variable-syntax\n     * keys as IndexedDB indexes. So we have to substitute the pipe-char\n     * which comes from the key-compression plugin.\n     */\n    parts = parts.map(part => {\n        return part.map(str => dexieReplaceIfStartsWithPipe(str));\n    });\n\n    let dexieSchemaRows = parts.map(part => {\n        if (part.length === 1) {\n            return part[0];\n        } else {\n            return '[' + part.join('+') + ']';\n        }\n    });\n    dexieSchemaRows = dexieSchemaRows.filter((elem: any, pos: any, arr: any) => arr.indexOf(elem) === pos); // unique;\n    const dexieSchema = dexieSchemaRows.join(', ');\n\n    return dexieSchema;\n}\n\n/**\n * Returns all documents in the database.\n * Non-deleted plus deleted ones.\n */\nexport async function getDocsInDb<RxDocType>(\n    internals: DexieStorageInternals,\n    docIds: string[]\n): Promise<RxDocumentData<RxDocType>[]> {\n    const state = await internals;\n    const docsInDb = await state.dexieTable.bulkGet(docIds);\n    return docsInDb.map(d => fromDexieToStorage(state.booleanIndexes, d));\n}\n\n\nexport function attachmentObjectId(documentId: string, attachmentId: string): string {\n    return documentId + '||' + attachmentId;\n}\n\n\nexport function getBooleanIndexes(schema: RxJsonSchema<any>): string[] {\n    const checkedFields = new Set<string>();\n    const ret: string[] = [];\n    if (!schema.indexes) {\n        return ret;\n    }\n    schema.indexes.forEach(index => {\n        const fields = toArray(index);\n        fields.forEach(field => {\n            if (checkedFields.has(field)) {\n                return;\n            }\n            checkedFields.add(field);\n            const schemaObj = getSchemaByObjectPath(schema, field);\n            if (schemaObj.type === 'boolean') {\n                ret.push(field);\n            }\n        });\n    });\n    ret.push('_deleted');\n\n    return uniqueArray(ret);\n}\n\n","import { INDEX_MAX, INDEX_MIN } from '../../query-planner.ts';\nimport { getQueryMatcher, getSortComparator } from '../../rx-query-helper.ts';\nimport type {\n    PreparedQuery,\n    QueryMatcher,\n    RxDocumentData,\n    RxQueryPlan,\n    RxStorageQueryResult\n} from '../../types/index.d.ts';\nimport {\n    dexieReplaceIfStartsWithPipe,\n    DEXIE_DOCS_TABLE_NAME,\n    fromDexieToStorage\n} from './dexie-helper.ts';\nimport type { RxStorageInstanceDexie } from './rx-storage-instance-dexie.ts';\n\nexport function mapKeyForKeyRange(k: any) {\n    if (k === INDEX_MIN) {\n        return -Infinity;\n    } else {\n        return k;\n    }\n}\n\nfunction rangeFieldToBooleanSubstitute(\n    booleanIndexes: string[],\n    fieldName: string,\n    value: any\n) {\n    if (booleanIndexes.includes(fieldName)) {\n        const newValue = value === INDEX_MAX || value === true ? '1' : '0';\n        return newValue;\n    } else {\n        return value;\n    }\n}\n\nexport function getKeyRangeByQueryPlan(\n    booleanIndexes: string[],\n    queryPlan: RxQueryPlan,\n    IDBKeyRange?: any\n) {\n    if (!IDBKeyRange) {\n        if (typeof window === 'undefined') {\n            throw new Error('IDBKeyRange missing');\n        } else {\n            IDBKeyRange = window.IDBKeyRange;\n        }\n    }\n\n\n    const startKeys = queryPlan.startKeys\n        .map((v, i) => {\n            const fieldName = queryPlan.index[i];\n            return rangeFieldToBooleanSubstitute(booleanIndexes, fieldName, v);\n        })\n        .map(mapKeyForKeyRange);\n    const endKeys = queryPlan.endKeys\n        .map((v, i) => {\n            const fieldName = queryPlan.index[i];\n            return rangeFieldToBooleanSubstitute(booleanIndexes, fieldName, v);\n        })\n        .map(mapKeyForKeyRange);\n\n    const keyRange = IDBKeyRange.bound(\n        startKeys,\n        endKeys,\n        !queryPlan.inclusiveStart,\n        !queryPlan.inclusiveEnd\n    );\n    return keyRange;\n}\n\n\n/**\n * Runs mango queries over the Dexie.js database.\n */\nexport async function dexieQuery<RxDocType>(\n    instance: RxStorageInstanceDexie<RxDocType>,\n    preparedQuery: PreparedQuery<RxDocType>\n): Promise<RxStorageQueryResult<RxDocType>> {\n    const state = await instance.internals;\n    const query = preparedQuery.query;\n\n    const skip = query.skip ? query.skip : 0;\n    const limit = query.limit ? query.limit : Infinity;\n    const skipPlusLimit = skip + limit;\n    const queryPlan = preparedQuery.queryPlan;\n\n    let queryMatcher: QueryMatcher<RxDocumentData<RxDocType>> | false = false;\n    if (!queryPlan.selectorSatisfiedByIndex) {\n        queryMatcher = getQueryMatcher(\n            instance.schema,\n            preparedQuery.query\n        );\n    }\n    const keyRange = getKeyRangeByQueryPlan(\n        state.booleanIndexes,\n        queryPlan,\n        (state.dexieDb as any)._options.IDBKeyRange\n    );\n\n    const queryPlanFields: string[] = queryPlan.index;\n\n    let rows: any[] = [];\n    await state.dexieDb.transaction(\n        'r',\n        state.dexieTable,\n        async (dexieTx) => {\n            /**\n             * TODO here we use the native IndexedDB transaction\n             * to get the cursor.\n             * Instead we should not leave Dexie.js API and find\n             * a way to create the cursor with Dexie.js.\n             */\n            const tx = (dexieTx as any).idbtrans;\n\n            // const nativeIndexedDB = state.dexieDb.backendDB();\n            // const trans = nativeIndexedDB.transaction([DEXIE_DOCS_TABLE_NAME], 'readonly');\n\n            const store = tx.objectStore(DEXIE_DOCS_TABLE_NAME);\n            let index: any;\n            let indexName: string;\n            indexName = '[' +\n                queryPlanFields\n                    .map(field => dexieReplaceIfStartsWithPipe(field))\n                    .join('+')\n                + ']';\n            index = store.index(indexName);\n\n\n            const cursorReq = index.openCursor(keyRange);\n            await new Promise<void>(res => {\n                cursorReq.onsuccess = function (e: any) {\n                    const cursor = e.target.result;\n                    if (cursor) {\n                        // We have a record in cursor.value\n                        const docData = fromDexieToStorage<RxDocType>(state.booleanIndexes, cursor.value);\n                        if (!queryMatcher || queryMatcher(docData)) {\n                            rows.push(docData);\n                        }\n\n                        /**\n                         * If we do not have to manually sort\n                         * and have enough documents,\n                         * we can abort iterating over the cursor\n                         * because we already have every relevant document.\n                         */\n                        if (\n                            queryPlan.sortSatisfiedByIndex &&\n                            rows.length === skipPlusLimit\n                        ) {\n                            res();\n                        } else {\n                            cursor.continue();\n                        }\n                    } else {\n                        // Iteration complete\n                        res();\n                    }\n                };\n            });\n\n\n        }\n    );\n\n\n    if (!queryPlan.sortSatisfiedByIndex) {\n        const sortComparator = getSortComparator(instance.schema, preparedQuery.query);\n        rows = rows.sort(sortComparator);\n    }\n\n    // apply skip and limit boundaries.\n    rows = rows.slice(skip, skipPlusLimit);\n\n    /**\n     * Comment this in for debugging to check all fields in the database.\n     */\n    // const docsInDb = await state.dexieTable.filter(queryMatcher).toArray();\n    // let documents = docsInDb\n    //     .map(docData => stripDexieKey(docData))\n    //     .sort(sortComparator);\n    // if (preparedQuery.skip) {\n    //     documents = documents.slice(preparedQuery.skip);\n    // }\n    // if (preparedQuery.limit && documents.length > preparedQuery.limit) {\n    //     documents = documents.slice(0, preparedQuery.limit);\n    // }\n\n\n\n    return {\n        documents: rows\n    };\n}\n\n\nexport async function dexieCount<RxDocType>(\n    instance: RxStorageInstanceDexie<RxDocType>,\n    preparedQuery: PreparedQuery<RxDocType>\n): Promise<number> {\n    const state = await instance.internals;\n    const queryPlan = preparedQuery.queryPlan;\n    const queryPlanFields: string[] = queryPlan.index;\n\n    const keyRange = getKeyRangeByQueryPlan(\n        state.booleanIndexes,\n        queryPlan,\n        (state.dexieDb as any)._options.IDBKeyRange\n    );\n    let count: number = -1;\n    await state.dexieDb.transaction(\n        'r',\n        state.dexieTable,\n        async (dexieTx) => {\n            const tx = (dexieTx as any).idbtrans;\n            const store = tx.objectStore(DEXIE_DOCS_TABLE_NAME);\n            let index: any;\n            let indexName: string;\n            indexName = '[' +\n                queryPlanFields\n                    .map(field => dexieReplaceIfStartsWithPipe(field))\n                    .join('+')\n                + ']';\n            index = store.index(indexName);\n            const request = index.count(keyRange);\n            count = await new Promise<number>((res, rej) => {\n                request.onsuccess = function () {\n                    res(request.result);\n                };\n                request.onerror = (err: any) => rej(err);\n            });\n        }\n    );\n    return count;\n}\n","const { isArray } = Array;\n\n/**\n * Used in operators and functions that accept either a list of arguments, or an array of arguments\n * as a single argument.\n */\nexport function argsOrArgArray<T>(args: (T | T[])[]): T[] {\n  return args.length === 1 && isArray(args[0]) ? args[0] : (args as T[]);\n}\n","import { ObservableInput, ObservableInputTuple, OperatorFunction, SchedulerLike } from '../types';\nimport { operate } from '../util/lift';\nimport { argsOrArgArray } from '../util/argsOrArgArray';\nimport { mergeAll } from './mergeAll';\nimport { popNumber, popScheduler } from '../util/args';\nimport { from } from '../observable/from';\n\n/** @deprecated Replaced with {@link mergeWith}. Will be removed in v8. */\nexport function merge<T, A extends readonly unknown[]>(...sources: [...ObservableInputTuple<A>]): OperatorFunction<T, T | A[number]>;\n/** @deprecated Replaced with {@link mergeWith}. Will be removed in v8. */\nexport function merge<T, A extends readonly unknown[]>(\n  ...sourcesAndConcurrency: [...ObservableInputTuple<A>, number]\n): OperatorFunction<T, T | A[number]>;\n/** @deprecated Replaced with {@link mergeWith}. Will be removed in v8. */\nexport function merge<T, A extends readonly unknown[]>(\n  ...sourcesAndScheduler: [...ObservableInputTuple<A>, SchedulerLike]\n): OperatorFunction<T, T | A[number]>;\n/** @deprecated Replaced with {@link mergeWith}. Will be removed in v8. */\nexport function merge<T, A extends readonly unknown[]>(\n  ...sourcesAndConcurrencyAndScheduler: [...ObservableInputTuple<A>, number, SchedulerLike]\n): OperatorFunction<T, T | A[number]>;\n\nexport function merge<T>(...args: unknown[]): OperatorFunction<T, unknown> {\n  const scheduler = popScheduler(args);\n  const concurrent = popNumber(args, Infinity);\n  args = argsOrArgArray(args);\n\n  return operate((source, subscriber) => {\n    mergeAll(concurrent)(from([source, ...(args as ObservableInput<T>[])], scheduler)).subscribe(subscriber);\n  });\n}\n","/**\n * returns true if the given object is a promise\n */\nexport function isPromise(obj) {\n  return obj && typeof obj.then === 'function';\n}\nexport var PROMISE_RESOLVED_FALSE = Promise.resolve(false);\nexport var PROMISE_RESOLVED_TRUE = Promise.resolve(true);\nexport var PROMISE_RESOLVED_VOID = Promise.resolve();\nexport function sleep(time, resolveWith) {\n  if (!time) time = 0;\n  return new Promise(function (res) {\n    return setTimeout(function () {\n      return res(resolveWith);\n    }, time);\n  });\n}\nexport function randomInt(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\n/**\n * https://stackoverflow.com/a/8084248\n */\nexport function randomToken() {\n  return Math.random().toString(36).substring(2);\n}\nvar lastMs = 0;\n\n/**\n * Returns the current unix time in micro-seconds,\n * WARNING: This is a pseudo-function\n * Performance.now is not reliable in webworkers, so we just make sure to never return the same time.\n * This is enough in browsers, and this function will not be used in nodejs.\n * The main reason for this hack is to ensure that BroadcastChannel behaves equal to production when it is used in fast-running unit tests.\n */\nexport function microSeconds() {\n  var ret = Date.now() * 1000; // milliseconds to microseconds\n  if (ret <= lastMs) {\n    ret = lastMs + 1;\n  }\n  lastMs = ret;\n  return ret;\n}\n\n/**\n * Check if WebLock API is supported.\n * @link https://developer.mozilla.org/en-US/docs/Web/API/Web_Locks_API\n */\nexport function supportsWebLockAPI() {\n  if (typeof navigator !== 'undefined' && typeof navigator.locks !== 'undefined' && typeof navigator.locks.request === 'function') {\n    return true;\n  } else {\n    return false;\n  }\n}","import { microSeconds as micro, PROMISE_RESOLVED_VOID } from '../util.js';\nexport var microSeconds = micro;\nexport var type = 'native';\nexport function create(channelName) {\n  var state = {\n    time: micro(),\n    messagesCallback: null,\n    bc: new BroadcastChannel(channelName),\n    subFns: [] // subscriberFunctions\n  };\n\n  state.bc.onmessage = function (msgEvent) {\n    if (state.messagesCallback) {\n      state.messagesCallback(msgEvent.data);\n    }\n  };\n  return state;\n}\nexport function close(channelState) {\n  channelState.bc.close();\n  channelState.subFns = [];\n}\nexport function postMessage(channelState, messageJson) {\n  try {\n    channelState.bc.postMessage(messageJson, false);\n    return PROMISE_RESOLVED_VOID;\n  } catch (err) {\n    return Promise.reject(err);\n  }\n}\nexport function onMessage(channelState, fn) {\n  channelState.messagesCallback = fn;\n}\nexport function canBeUsed() {\n  // Deno runtime\n  // eslint-disable-next-line\n  if (typeof globalThis !== 'undefined' && globalThis.Deno && globalThis.Deno.args) {\n    return true;\n  }\n\n  // Browser runtime\n  if ((typeof window !== 'undefined' || typeof self !== 'undefined') && typeof BroadcastChannel === 'function') {\n    if (BroadcastChannel._pubkey) {\n      throw new Error('BroadcastChannel: Do not overwrite window.BroadcastChannel with this module, this is not a polyfill');\n    }\n    return true;\n  } else {\n    return false;\n  }\n}\nexport function averageResponseTime() {\n  return 150;\n}\nexport var NativeMethod = {\n  create: create,\n  close: close,\n  onMessage: onMessage,\n  postMessage: postMessage,\n  canBeUsed: canBeUsed,\n  type: type,\n  averageResponseTime: averageResponseTime,\n  microSeconds: microSeconds\n};","export function fillOptionsWithDefaults() {\n  var originalOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var options = JSON.parse(JSON.stringify(originalOptions));\n\n  // main\n  if (typeof options.webWorkerSupport === 'undefined') options.webWorkerSupport = true;\n\n  // indexed-db\n  if (!options.idb) options.idb = {};\n  //  after this time the messages get deleted\n  if (!options.idb.ttl) options.idb.ttl = 1000 * 45;\n  if (!options.idb.fallbackInterval) options.idb.fallbackInterval = 150;\n  //  handles abrupt db onclose events.\n  if (originalOptions.idb && typeof originalOptions.idb.onclose === 'function') options.idb.onclose = originalOptions.idb.onclose;\n\n  // localstorage\n  if (!options.localstorage) options.localstorage = {};\n  if (!options.localstorage.removeTimeout) options.localstorage.removeTimeout = 1000 * 60;\n\n  // custom methods\n  if (originalOptions.methods) options.methods = originalOptions.methods;\n\n  // node\n  if (!options.node) options.node = {};\n  if (!options.node.ttl) options.node.ttl = 1000 * 60 * 2; // 2 minutes;\n  /**\n   * On linux use 'ulimit -Hn' to get the limit of open files.\n   * On ubuntu this was 4096 for me, so we use half of that as maxParallelWrites default.\n   */\n  if (!options.node.maxParallelWrites) options.node.maxParallelWrites = 2048;\n  if (typeof options.node.useFastPath === 'undefined') options.node.useFastPath = true;\n  return options;\n}","/**\n * this method uses indexeddb to store the messages\n * There is currently no observerAPI for idb\n * @link https://github.com/w3c/IndexedDB/issues/51\n * \n * When working on this, ensure to use these performance optimizations:\n * @link https://rxdb.info/slow-indexeddb.html\n */\n\nimport { sleep, randomInt, randomToken, microSeconds as micro, PROMISE_RESOLVED_VOID } from '../util.js';\nexport var microSeconds = micro;\nimport { ObliviousSet } from 'oblivious-set';\nimport { fillOptionsWithDefaults } from '../options.js';\nvar DB_PREFIX = 'pubkey.broadcast-channel-0-';\nvar OBJECT_STORE_ID = 'messages';\n\n/**\n * Use relaxed durability for faster performance on all transactions.\n * @link https://nolanlawson.com/2021/08/22/speeding-up-indexeddb-reads-and-writes/\n */\nexport var TRANSACTION_SETTINGS = {\n  durability: 'relaxed'\n};\nexport var type = 'idb';\nexport function getIdb() {\n  if (typeof indexedDB !== 'undefined') return indexedDB;\n  if (typeof window !== 'undefined') {\n    if (typeof window.mozIndexedDB !== 'undefined') return window.mozIndexedDB;\n    if (typeof window.webkitIndexedDB !== 'undefined') return window.webkitIndexedDB;\n    if (typeof window.msIndexedDB !== 'undefined') return window.msIndexedDB;\n  }\n  return false;\n}\n\n/**\n * If possible, we should explicitly commit IndexedDB transactions\n * for better performance.\n * @link https://nolanlawson.com/2021/08/22/speeding-up-indexeddb-reads-and-writes/\n */\nexport function commitIndexedDBTransaction(tx) {\n  if (tx.commit) {\n    tx.commit();\n  }\n}\nexport function createDatabase(channelName) {\n  var IndexedDB = getIdb();\n\n  // create table\n  var dbName = DB_PREFIX + channelName;\n\n  /**\n   * All IndexedDB databases are opened without version\n   * because it is a bit faster, especially on firefox\n   * @link http://nparashuram.com/IndexedDB/perf/#Open%20Database%20with%20version\n   */\n  var openRequest = IndexedDB.open(dbName);\n  openRequest.onupgradeneeded = function (ev) {\n    var db = ev.target.result;\n    db.createObjectStore(OBJECT_STORE_ID, {\n      keyPath: 'id',\n      autoIncrement: true\n    });\n  };\n  return new Promise(function (res, rej) {\n    openRequest.onerror = function (ev) {\n      return rej(ev);\n    };\n    openRequest.onsuccess = function () {\n      res(openRequest.result);\n    };\n  });\n}\n\n/**\n * writes the new message to the database\n * so other readers can find it\n */\nexport function writeMessage(db, readerUuid, messageJson) {\n  var time = Date.now();\n  var writeObject = {\n    uuid: readerUuid,\n    time: time,\n    data: messageJson\n  };\n  var tx = db.transaction([OBJECT_STORE_ID], 'readwrite', TRANSACTION_SETTINGS);\n  return new Promise(function (res, rej) {\n    tx.oncomplete = function () {\n      return res();\n    };\n    tx.onerror = function (ev) {\n      return rej(ev);\n    };\n    var objectStore = tx.objectStore(OBJECT_STORE_ID);\n    objectStore.add(writeObject);\n    commitIndexedDBTransaction(tx);\n  });\n}\nexport function getAllMessages(db) {\n  var tx = db.transaction(OBJECT_STORE_ID, 'readonly', TRANSACTION_SETTINGS);\n  var objectStore = tx.objectStore(OBJECT_STORE_ID);\n  var ret = [];\n  return new Promise(function (res) {\n    objectStore.openCursor().onsuccess = function (ev) {\n      var cursor = ev.target.result;\n      if (cursor) {\n        ret.push(cursor.value);\n        //alert(\"Name for SSN \" + cursor.key + \" is \" + cursor.value.name);\n        cursor[\"continue\"]();\n      } else {\n        commitIndexedDBTransaction(tx);\n        res(ret);\n      }\n    };\n  });\n}\nexport function getMessagesHigherThan(db, lastCursorId) {\n  var tx = db.transaction(OBJECT_STORE_ID, 'readonly', TRANSACTION_SETTINGS);\n  var objectStore = tx.objectStore(OBJECT_STORE_ID);\n  var ret = [];\n  var keyRangeValue = IDBKeyRange.bound(lastCursorId + 1, Infinity);\n\n  /**\n   * Optimization shortcut,\n   * if getAll() can be used, do not use a cursor.\n   * @link https://rxdb.info/slow-indexeddb.html\n   */\n  if (objectStore.getAll) {\n    var getAllRequest = objectStore.getAll(keyRangeValue);\n    return new Promise(function (res, rej) {\n      getAllRequest.onerror = function (err) {\n        return rej(err);\n      };\n      getAllRequest.onsuccess = function (e) {\n        res(e.target.result);\n      };\n    });\n  }\n  function openCursor() {\n    // Occasionally Safari will fail on IDBKeyRange.bound, this\n    // catches that error, having it open the cursor to the first\n    // item. When it gets data it will advance to the desired key.\n    try {\n      keyRangeValue = IDBKeyRange.bound(lastCursorId + 1, Infinity);\n      return objectStore.openCursor(keyRangeValue);\n    } catch (e) {\n      return objectStore.openCursor();\n    }\n  }\n  return new Promise(function (res, rej) {\n    var openCursorRequest = openCursor();\n    openCursorRequest.onerror = function (err) {\n      return rej(err);\n    };\n    openCursorRequest.onsuccess = function (ev) {\n      var cursor = ev.target.result;\n      if (cursor) {\n        if (cursor.value.id < lastCursorId + 1) {\n          cursor[\"continue\"](lastCursorId + 1);\n        } else {\n          ret.push(cursor.value);\n          cursor[\"continue\"]();\n        }\n      } else {\n        commitIndexedDBTransaction(tx);\n        res(ret);\n      }\n    };\n  });\n}\nexport function removeMessagesById(channelState, ids) {\n  if (channelState.closed) {\n    return Promise.resolve([]);\n  }\n  var tx = channelState.db.transaction(OBJECT_STORE_ID, 'readwrite', TRANSACTION_SETTINGS);\n  var objectStore = tx.objectStore(OBJECT_STORE_ID);\n  return Promise.all(ids.map(function (id) {\n    var deleteRequest = objectStore[\"delete\"](id);\n    return new Promise(function (res) {\n      deleteRequest.onsuccess = function () {\n        return res();\n      };\n    });\n  }));\n}\nexport function getOldMessages(db, ttl) {\n  var olderThen = Date.now() - ttl;\n  var tx = db.transaction(OBJECT_STORE_ID, 'readonly', TRANSACTION_SETTINGS);\n  var objectStore = tx.objectStore(OBJECT_STORE_ID);\n  var ret = [];\n  return new Promise(function (res) {\n    objectStore.openCursor().onsuccess = function (ev) {\n      var cursor = ev.target.result;\n      if (cursor) {\n        var msgObk = cursor.value;\n        if (msgObk.time < olderThen) {\n          ret.push(msgObk);\n          //alert(\"Name for SSN \" + cursor.key + \" is \" + cursor.value.name);\n          cursor[\"continue\"]();\n        } else {\n          // no more old messages,\n          commitIndexedDBTransaction(tx);\n          res(ret);\n        }\n      } else {\n        res(ret);\n      }\n    };\n  });\n}\nexport function cleanOldMessages(channelState) {\n  return getOldMessages(channelState.db, channelState.options.idb.ttl).then(function (tooOld) {\n    return removeMessagesById(channelState, tooOld.map(function (msg) {\n      return msg.id;\n    }));\n  });\n}\nexport function create(channelName, options) {\n  options = fillOptionsWithDefaults(options);\n  return createDatabase(channelName).then(function (db) {\n    var state = {\n      closed: false,\n      lastCursorId: 0,\n      channelName: channelName,\n      options: options,\n      uuid: randomToken(),\n      /**\n       * emittedMessagesIds\n       * contains all messages that have been emitted before\n       * @type {ObliviousSet}\n       */\n      eMIs: new ObliviousSet(options.idb.ttl * 2),\n      // ensures we do not read messages in parallel\n      writeBlockPromise: PROMISE_RESOLVED_VOID,\n      messagesCallback: null,\n      readQueuePromises: [],\n      db: db\n    };\n\n    /**\n     * Handle abrupt closes that do not originate from db.close().\n     * This could happen, for example, if the underlying storage is\n     * removed or if the user clears the database in the browser's\n     * history preferences.\n     */\n    db.onclose = function () {\n      state.closed = true;\n      if (options.idb.onclose) options.idb.onclose();\n    };\n\n    /**\n     * if service-workers are used,\n     * we have no 'storage'-event if they post a message,\n     * therefore we also have to set an interval\n     */\n    _readLoop(state);\n    return state;\n  });\n}\nfunction _readLoop(state) {\n  if (state.closed) return;\n  readNewMessages(state).then(function () {\n    return sleep(state.options.idb.fallbackInterval);\n  }).then(function () {\n    return _readLoop(state);\n  });\n}\nfunction _filterMessage(msgObj, state) {\n  if (msgObj.uuid === state.uuid) return false; // send by own\n  if (state.eMIs.has(msgObj.id)) return false; // already emitted\n  if (msgObj.data.time < state.messagesCallbackTime) return false; // older then onMessageCallback\n  return true;\n}\n\n/**\n * reads all new messages from the database and emits them\n */\nfunction readNewMessages(state) {\n  // channel already closed\n  if (state.closed) return PROMISE_RESOLVED_VOID;\n\n  // if no one is listening, we do not need to scan for new messages\n  if (!state.messagesCallback) return PROMISE_RESOLVED_VOID;\n  return getMessagesHigherThan(state.db, state.lastCursorId).then(function (newerMessages) {\n    var useMessages = newerMessages\n    /**\n     * there is a bug in iOS where the msgObj can be undefined sometimes\n     * so we filter them out\n     * @link https://github.com/pubkey/broadcast-channel/issues/19\n     */.filter(function (msgObj) {\n      return !!msgObj;\n    }).map(function (msgObj) {\n      if (msgObj.id > state.lastCursorId) {\n        state.lastCursorId = msgObj.id;\n      }\n      return msgObj;\n    }).filter(function (msgObj) {\n      return _filterMessage(msgObj, state);\n    }).sort(function (msgObjA, msgObjB) {\n      return msgObjA.time - msgObjB.time;\n    }); // sort by time\n    useMessages.forEach(function (msgObj) {\n      if (state.messagesCallback) {\n        state.eMIs.add(msgObj.id);\n        state.messagesCallback(msgObj.data);\n      }\n    });\n    return PROMISE_RESOLVED_VOID;\n  });\n}\nexport function close(channelState) {\n  channelState.closed = true;\n  channelState.db.close();\n}\nexport function postMessage(channelState, messageJson) {\n  channelState.writeBlockPromise = channelState.writeBlockPromise.then(function () {\n    return writeMessage(channelState.db, channelState.uuid, messageJson);\n  }).then(function () {\n    if (randomInt(0, 10) === 0) {\n      /* await (do not await) */\n      cleanOldMessages(channelState);\n    }\n  });\n  return channelState.writeBlockPromise;\n}\nexport function onMessage(channelState, fn, time) {\n  channelState.messagesCallbackTime = time;\n  channelState.messagesCallback = fn;\n  readNewMessages(channelState);\n}\nexport function canBeUsed() {\n  return !!getIdb();\n}\nexport function averageResponseTime(options) {\n  return options.idb.fallbackInterval * 2;\n}\nexport var IndexedDBMethod = {\n  create: create,\n  close: close,\n  onMessage: onMessage,\n  postMessage: postMessage,\n  canBeUsed: canBeUsed,\n  type: type,\n  averageResponseTime: averageResponseTime,\n  microSeconds: microSeconds\n};","/**\n * A localStorage-only method which uses localstorage and its 'storage'-event\n * This does not work inside webworkers because they have no access to localstorage\n * This is basically implemented to support IE9 or your grandmother's toaster.\n * @link https://caniuse.com/#feat=namevalue-storage\n * @link https://caniuse.com/#feat=indexeddb\n */\n\nimport { ObliviousSet } from 'oblivious-set';\nimport { fillOptionsWithDefaults } from '../options.js';\nimport { sleep, randomToken, microSeconds as micro } from '../util.js';\nexport var microSeconds = micro;\nvar KEY_PREFIX = 'pubkey.broadcastChannel-';\nexport var type = 'localstorage';\n\n/**\n * copied from crosstab\n * @link https://github.com/tejacques/crosstab/blob/master/src/crosstab.js#L32\n */\nexport function getLocalStorage() {\n  var localStorage;\n  if (typeof window === 'undefined') return null;\n  try {\n    localStorage = window.localStorage;\n    localStorage = window['ie8-eventlistener/storage'] || window.localStorage;\n  } catch (e) {\n    // New versions of Firefox throw a Security exception\n    // if cookies are disabled. See\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1028153\n  }\n  return localStorage;\n}\nexport function storageKey(channelName) {\n  return KEY_PREFIX + channelName;\n}\n\n/**\n* writes the new message to the storage\n* and fires the storage-event so other readers can find it\n*/\nexport function postMessage(channelState, messageJson) {\n  return new Promise(function (res) {\n    sleep().then(function () {\n      var key = storageKey(channelState.channelName);\n      var writeObj = {\n        token: randomToken(),\n        time: Date.now(),\n        data: messageJson,\n        uuid: channelState.uuid\n      };\n      var value = JSON.stringify(writeObj);\n      getLocalStorage().setItem(key, value);\n\n      /**\n       * StorageEvent does not fire the 'storage' event\n       * in the window that changes the state of the local storage.\n       * So we fire it manually\n       */\n      var ev = document.createEvent('Event');\n      ev.initEvent('storage', true, true);\n      ev.key = key;\n      ev.newValue = value;\n      window.dispatchEvent(ev);\n      res();\n    });\n  });\n}\nexport function addStorageEventListener(channelName, fn) {\n  var key = storageKey(channelName);\n  var listener = function listener(ev) {\n    if (ev.key === key) {\n      fn(JSON.parse(ev.newValue));\n    }\n  };\n  window.addEventListener('storage', listener);\n  return listener;\n}\nexport function removeStorageEventListener(listener) {\n  window.removeEventListener('storage', listener);\n}\nexport function create(channelName, options) {\n  options = fillOptionsWithDefaults(options);\n  if (!canBeUsed()) {\n    throw new Error('BroadcastChannel: localstorage cannot be used');\n  }\n  var uuid = randomToken();\n\n  /**\n   * eMIs\n   * contains all messages that have been emitted before\n   * @type {ObliviousSet}\n   */\n  var eMIs = new ObliviousSet(options.localstorage.removeTimeout);\n  var state = {\n    channelName: channelName,\n    uuid: uuid,\n    eMIs: eMIs // emittedMessagesIds\n  };\n\n  state.listener = addStorageEventListener(channelName, function (msgObj) {\n    if (!state.messagesCallback) return; // no listener\n    if (msgObj.uuid === uuid) return; // own message\n    if (!msgObj.token || eMIs.has(msgObj.token)) return; // already emitted\n    if (msgObj.data.time && msgObj.data.time < state.messagesCallbackTime) return; // too old\n\n    eMIs.add(msgObj.token);\n    state.messagesCallback(msgObj.data);\n  });\n  return state;\n}\nexport function close(channelState) {\n  removeStorageEventListener(channelState.listener);\n}\nexport function onMessage(channelState, fn, time) {\n  channelState.messagesCallbackTime = time;\n  channelState.messagesCallback = fn;\n}\nexport function canBeUsed() {\n  var ls = getLocalStorage();\n  if (!ls) return false;\n  try {\n    var key = '__broadcastchannel_check';\n    ls.setItem(key, 'works');\n    ls.removeItem(key);\n  } catch (e) {\n    // Safari 10 in private mode will not allow write access to local\n    // storage and fail with a QuotaExceededError. See\n    // https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API#Private_Browsing_Incognito_modes\n    return false;\n  }\n  return true;\n}\nexport function averageResponseTime() {\n  var defaultTime = 120;\n  var userAgent = navigator.userAgent.toLowerCase();\n  if (userAgent.includes('safari') && !userAgent.includes('chrome')) {\n    // safari is much slower so this time is higher\n    return defaultTime * 2;\n  }\n  return defaultTime;\n}\nexport var LocalstorageMethod = {\n  create: create,\n  close: close,\n  onMessage: onMessage,\n  postMessage: postMessage,\n  canBeUsed: canBeUsed,\n  type: type,\n  averageResponseTime: averageResponseTime,\n  microSeconds: microSeconds\n};","import { microSeconds as micro } from '../util.js';\nexport var microSeconds = micro;\nexport var type = 'simulate';\nvar SIMULATE_CHANNELS = new Set();\nexport function create(channelName) {\n  var state = {\n    time: microSeconds(),\n    name: channelName,\n    messagesCallback: null\n  };\n  SIMULATE_CHANNELS.add(state);\n  return state;\n}\nexport function close(channelState) {\n  SIMULATE_CHANNELS[\"delete\"](channelState);\n}\nexport var SIMULATE_DELAY_TIME = 5;\nexport function postMessage(channelState, messageJson) {\n  return new Promise(function (res) {\n    return setTimeout(function () {\n      var channelArray = Array.from(SIMULATE_CHANNELS);\n      channelArray.forEach(function (channel) {\n        if (channel.name === channelState.name &&\n        // has same name\n        channel !== channelState &&\n        // not own channel\n        !!channel.messagesCallback &&\n        // has subscribers\n        channel.time < messageJson.time // channel not created after postMessage() call\n        ) {\n          channel.messagesCallback(messageJson);\n        }\n      });\n      res();\n    }, SIMULATE_DELAY_TIME);\n  });\n}\nexport function onMessage(channelState, fn) {\n  channelState.messagesCallback = fn;\n}\nexport function canBeUsed() {\n  return true;\n}\nexport function averageResponseTime() {\n  return SIMULATE_DELAY_TIME;\n}\nexport var SimulateMethod = {\n  create: create,\n  close: close,\n  onMessage: onMessage,\n  postMessage: postMessage,\n  canBeUsed: canBeUsed,\n  type: type,\n  averageResponseTime: averageResponseTime,\n  microSeconds: microSeconds\n};","import { NativeMethod } from './methods/native.js';\nimport { IndexedDBMethod } from './methods/indexed-db.js';\nimport { LocalstorageMethod } from './methods/localstorage.js';\nimport { SimulateMethod } from './methods/simulate.js';\n// the line below will be removed from es5/browser builds\n\n// order is important\nvar METHODS = [NativeMethod,\n// fastest\nIndexedDBMethod, LocalstorageMethod];\nexport function chooseMethod(options) {\n  var chooseMethods = [].concat(options.methods, METHODS).filter(Boolean);\n\n  // the line below will be removed from es5/browser builds\n\n  // directly chosen\n  if (options.type) {\n    if (options.type === 'simulate') {\n      // only use simulate-method if directly chosen\n      return SimulateMethod;\n    }\n    var ret = chooseMethods.find(function (m) {\n      return m.type === options.type;\n    });\n    if (!ret) throw new Error('method-type ' + options.type + ' not found');else return ret;\n  }\n\n  /**\n   * if no webworker support is needed,\n   * remove idb from the list so that localstorage will be chosen\n   */\n  if (!options.webWorkerSupport) {\n    chooseMethods = chooseMethods.filter(function (m) {\n      return m.type !== 'idb';\n    });\n  }\n  var useMethod = chooseMethods.find(function (method) {\n    return method.canBeUsed();\n  });\n  if (!useMethod) {\n    throw new Error(\"No usable method found in \" + JSON.stringify(METHODS.map(function (m) {\n      return m.type;\n    })));\n  } else {\n    return useMethod;\n  }\n}","import { isPromise, PROMISE_RESOLVED_FALSE, PROMISE_RESOLVED_VOID } from './util.js';\nimport { chooseMethod } from './method-chooser.js';\nimport { fillOptionsWithDefaults } from './options.js';\n\n/**\n * Contains all open channels,\n * used in tests to ensure everything is closed.\n */\nexport var OPEN_BROADCAST_CHANNELS = new Set();\nvar lastId = 0;\nexport var BroadcastChannel = function BroadcastChannel(name, options) {\n  // identifier of the channel to debug stuff\n  this.id = lastId++;\n  OPEN_BROADCAST_CHANNELS.add(this);\n  this.name = name;\n  if (ENFORCED_OPTIONS) {\n    options = ENFORCED_OPTIONS;\n  }\n  this.options = fillOptionsWithDefaults(options);\n  this.method = chooseMethod(this.options);\n\n  // isListening\n  this._iL = false;\n\n  /**\n   * _onMessageListener\n   * setting onmessage twice,\n   * will overwrite the first listener\n   */\n  this._onML = null;\n\n  /**\n   * _addEventListeners\n   */\n  this._addEL = {\n    message: [],\n    internal: []\n  };\n\n  /**\n   * Unsent message promises\n   * where the sending is still in progress\n   * @type {Set<Promise>}\n   */\n  this._uMP = new Set();\n\n  /**\n   * _beforeClose\n   * array of promises that will be awaited\n   * before the channel is closed\n   */\n  this._befC = [];\n\n  /**\n   * _preparePromise\n   */\n  this._prepP = null;\n  _prepareChannel(this);\n};\n\n// STATICS\n\n/**\n * used to identify if someone overwrites\n * window.BroadcastChannel with this\n * See methods/native.js\n */\nBroadcastChannel._pubkey = true;\n\n/**\n * clears the tmp-folder if is node\n * @return {Promise<boolean>} true if has run, false if not node\n */\nexport function clearNodeFolder(options) {\n  options = fillOptionsWithDefaults(options);\n  var method = chooseMethod(options);\n  if (method.type === 'node') {\n    return method.clearNodeFolder().then(function () {\n      return true;\n    });\n  } else {\n    return PROMISE_RESOLVED_FALSE;\n  }\n}\n\n/**\n * if set, this method is enforced,\n * no mather what the options are\n */\nvar ENFORCED_OPTIONS;\nexport function enforceOptions(options) {\n  ENFORCED_OPTIONS = options;\n}\n\n// PROTOTYPE\nBroadcastChannel.prototype = {\n  postMessage: function postMessage(msg) {\n    if (this.closed) {\n      throw new Error('BroadcastChannel.postMessage(): ' + 'Cannot post message after channel has closed ' +\n      /**\n       * In the past when this error appeared, it was really hard to debug.\n       * So now we log the msg together with the error so it at least\n       * gives some clue about where in your application this happens.\n       */\n      JSON.stringify(msg));\n    }\n    return _post(this, 'message', msg);\n  },\n  postInternal: function postInternal(msg) {\n    return _post(this, 'internal', msg);\n  },\n  set onmessage(fn) {\n    var time = this.method.microSeconds();\n    var listenObj = {\n      time: time,\n      fn: fn\n    };\n    _removeListenerObject(this, 'message', this._onML);\n    if (fn && typeof fn === 'function') {\n      this._onML = listenObj;\n      _addListenerObject(this, 'message', listenObj);\n    } else {\n      this._onML = null;\n    }\n  },\n  addEventListener: function addEventListener(type, fn) {\n    var time = this.method.microSeconds();\n    var listenObj = {\n      time: time,\n      fn: fn\n    };\n    _addListenerObject(this, type, listenObj);\n  },\n  removeEventListener: function removeEventListener(type, fn) {\n    var obj = this._addEL[type].find(function (obj) {\n      return obj.fn === fn;\n    });\n    _removeListenerObject(this, type, obj);\n  },\n  close: function close() {\n    var _this = this;\n    if (this.closed) {\n      return;\n    }\n    OPEN_BROADCAST_CHANNELS[\"delete\"](this);\n    this.closed = true;\n    var awaitPrepare = this._prepP ? this._prepP : PROMISE_RESOLVED_VOID;\n    this._onML = null;\n    this._addEL.message = [];\n    return awaitPrepare\n    // wait until all current sending are processed\n    .then(function () {\n      return Promise.all(Array.from(_this._uMP));\n    })\n    // run before-close hooks\n    .then(function () {\n      return Promise.all(_this._befC.map(function (fn) {\n        return fn();\n      }));\n    })\n    // close the channel\n    .then(function () {\n      return _this.method.close(_this._state);\n    });\n  },\n  get type() {\n    return this.method.type;\n  },\n  get isClosed() {\n    return this.closed;\n  }\n};\n\n/**\n * Post a message over the channel\n * @returns {Promise} that resolved when the message sending is done\n */\nfunction _post(broadcastChannel, type, msg) {\n  var time = broadcastChannel.method.microSeconds();\n  var msgObj = {\n    time: time,\n    type: type,\n    data: msg\n  };\n  var awaitPrepare = broadcastChannel._prepP ? broadcastChannel._prepP : PROMISE_RESOLVED_VOID;\n  return awaitPrepare.then(function () {\n    var sendPromise = broadcastChannel.method.postMessage(broadcastChannel._state, msgObj);\n\n    // add/remove to unsent messages list\n    broadcastChannel._uMP.add(sendPromise);\n    sendPromise[\"catch\"]().then(function () {\n      return broadcastChannel._uMP[\"delete\"](sendPromise);\n    });\n    return sendPromise;\n  });\n}\nfunction _prepareChannel(channel) {\n  var maybePromise = channel.method.create(channel.name, channel.options);\n  if (isPromise(maybePromise)) {\n    channel._prepP = maybePromise;\n    maybePromise.then(function (s) {\n      // used in tests to simulate slow runtime\n      /*if (channel.options.prepareDelay) {\n           await new Promise(res => setTimeout(res, this.options.prepareDelay));\n      }*/\n      channel._state = s;\n    });\n  } else {\n    channel._state = maybePromise;\n  }\n}\nfunction _hasMessageListeners(channel) {\n  if (channel._addEL.message.length > 0) return true;\n  if (channel._addEL.internal.length > 0) return true;\n  return false;\n}\nfunction _addListenerObject(channel, type, obj) {\n  channel._addEL[type].push(obj);\n  _startListening(channel);\n}\nfunction _removeListenerObject(channel, type, obj) {\n  channel._addEL[type] = channel._addEL[type].filter(function (o) {\n    return o !== obj;\n  });\n  _stopListening(channel);\n}\nfunction _startListening(channel) {\n  if (!channel._iL && _hasMessageListeners(channel)) {\n    // someone is listening, start subscribing\n\n    var listenerFn = function listenerFn(msgObj) {\n      channel._addEL[msgObj.type].forEach(function (listenerObject) {\n        if (msgObj.time >= listenerObject.time) {\n          listenerObject.fn(msgObj.data);\n        }\n      });\n    };\n    var time = channel.method.microSeconds();\n    if (channel._prepP) {\n      channel._prepP.then(function () {\n        channel._iL = true;\n        channel.method.onMessage(channel._state, listenerFn, time);\n      });\n    } else {\n      channel._iL = true;\n      channel.method.onMessage(channel._state, listenerFn, time);\n    }\n  }\n}\nfunction _stopListening(channel) {\n  if (channel._iL && !_hasMessageListeners(channel)) {\n    // no one is listening, stop subscribing\n    channel._iL = false;\n    var time = channel.method.microSeconds();\n    channel.method.onMessage(channel._state, null, time);\n  }\n}","/**\n * When a persistent RxStorage is used in more the one JavaScript process,\n * the even stream of the changestream() function must be broadcasted to the other\n * RxStorageInstances of the same databaseName+collectionName.\n *\n * In the past this was done by RxDB but it makes more sense to do this\n * at the RxStorage level so that the broadcasting etc can all happen inside of a WebWorker\n * and not on the main thread.\n * Also it makes it less complex to stack up different RxStorages onto each other\n * like what we do with the in-memory plugin.\n *\n * This is intended to be used inside of createStorageInstance() of a storage.\n * Do not use this if the storage anyway broadcasts the events like when using MongoDB\n * or in the future W3C might introduce a way to listen to IndexedDB changes.\n */\n\nimport { Observable, Subject } from 'rxjs';\nimport { mergeWith } from 'rxjs/operators';\nimport type {\n    EventBulk,\n    RxStorageChangeEvent,\n    RxStorageInstance,\n    RxStorageInstanceCreationParams\n} from './types/index.d.ts';\n\nimport {\n    BroadcastChannel\n} from 'broadcast-channel';\n\n/**\n * The broadcast-channel is reused by the databaseInstanceToken.\n * This is required so that it is easy to simulate multi-tab usage\n * in the test where different instances of the same RxDatabase must\n * have different broadcast channels.\n * But also it ensures that for each RxDatabase we only create a single\n * broadcast channel that can even be reused in the leader election plugin.\n *\n * TODO at the end of the unit tests,\n * we should ensure that all channels are closed and cleaned up.\n * Otherwise we have forgot something.\n */\nexport const BROADCAST_CHANNEL_BY_TOKEN: Map<string, {\n    bc: BroadcastChannel<RxStorageMultiInstanceBroadcastType>;\n    /**\n     * Contains all context objects that currently use the channel.\n     * If this becomes empty, we can close the channel\n     */\n    refs: Set<any>;\n}> = new Map();\n\n\nexport type RxStorageMultiInstanceBroadcastType = {\n    storageName: string;\n    collectionName: string;\n    /**\n     * collection.schema.version\n     */\n    version: number;\n    databaseName: string;\n    eventBulk: EventBulk<any, any>;\n};\n\nexport function getBroadcastChannelReference(\n    storageName: string,\n    databaseInstanceToken: string,\n    databaseName: string,\n    refObject: any\n): BroadcastChannel<RxStorageMultiInstanceBroadcastType> {\n    let state = BROADCAST_CHANNEL_BY_TOKEN.get(databaseInstanceToken);\n    if (!state) {\n        state = {\n            /**\n             * We have to use the databaseName instead of the databaseInstanceToken\n             * in the BroadcastChannel name because different instances must end with the same\n             * channel name to be able to broadcast messages between each other.\n             */\n            bc: new BroadcastChannel(['RxDB:', storageName, databaseName].join('|')),\n            refs: new Set<any>()\n        };\n        BROADCAST_CHANNEL_BY_TOKEN.set(databaseInstanceToken, state);\n    }\n    state.refs.add(refObject);\n    return state.bc;\n}\n\nexport function removeBroadcastChannelReference(\n    databaseInstanceToken: string,\n    refObject: any\n) {\n    const state = BROADCAST_CHANNEL_BY_TOKEN.get(databaseInstanceToken);\n    if (!state) {\n        return;\n    }\n    state.refs.delete(refObject);\n    if (state.refs.size === 0) {\n        BROADCAST_CHANNEL_BY_TOKEN.delete(databaseInstanceToken);\n        return state.bc.close();\n    }\n}\n\n\nexport function addRxStorageMultiInstanceSupport<RxDocType>(\n    storageName: string,\n    instanceCreationParams: RxStorageInstanceCreationParams<RxDocType, any>,\n    instance: RxStorageInstance<RxDocType, any, any>,\n    /**\n     * If provided, that channel will be used\n     * instead of an own one.\n     */\n    providedBroadcastChannel?: BroadcastChannel<any>\n) {\n    if (!instanceCreationParams.multiInstance) {\n        return;\n    }\n\n    type Emit = EventBulk<RxStorageChangeEvent<RxDocType>, any>;\n\n    const broadcastChannel = providedBroadcastChannel ?\n        providedBroadcastChannel :\n        getBroadcastChannelReference(\n            storageName,\n            instanceCreationParams.databaseInstanceToken,\n            instance.databaseName,\n            instance\n        );\n\n    const changesFromOtherInstances$: Subject<Emit> = new Subject();\n\n\n    const eventListener = (msg: RxStorageMultiInstanceBroadcastType) => {\n        if (\n            msg.storageName === storageName &&\n            msg.databaseName === instanceCreationParams.databaseName &&\n            msg.collectionName === instanceCreationParams.collectionName &&\n            msg.version === instanceCreationParams.schema.version\n        ) {\n            changesFromOtherInstances$.next(msg.eventBulk);\n        }\n    };\n\n    broadcastChannel.addEventListener('message', eventListener);\n\n    const oldChangestream$ = instance.changeStream();\n\n    let closed = false;\n    const sub = oldChangestream$.subscribe(eventBulk => {\n        if (closed) {\n            return;\n        }\n        broadcastChannel.postMessage({\n            storageName: storageName,\n            databaseName: instanceCreationParams.databaseName,\n            collectionName: instanceCreationParams.collectionName,\n            version: instanceCreationParams.schema.version,\n            eventBulk\n        });\n    });\n\n    instance.changeStream = function (): Observable<Emit> {\n        return changesFromOtherInstances$.asObservable().pipe(\n            mergeWith(oldChangestream$)\n        );\n    };\n\n    const oldClose = instance.close.bind(instance);\n    instance.close = async function () {\n        closed = true;\n        sub.unsubscribe();\n        broadcastChannel.removeEventListener('message', eventListener);\n        if (!providedBroadcastChannel) {\n            await removeBroadcastChannelReference(\n                instanceCreationParams.databaseInstanceToken,\n                instance\n            );\n        }\n        return oldClose();\n    };\n\n    const oldRemove = instance.remove.bind(instance);\n    instance.remove = async function () {\n        closed = true;\n        sub.unsubscribe();\n        broadcastChannel.removeEventListener('message', eventListener);\n        if (!providedBroadcastChannel) {\n            await removeBroadcastChannelReference(\n                instanceCreationParams.databaseInstanceToken,\n                instance\n            );\n        }\n        return oldRemove();\n    };\n}\n","import { ObservableInputTuple, OperatorFunction } from '../types';\nimport { merge } from './merge';\n\n/**\n * Merge the values from all observables to a single observable result.\n *\n * Creates an observable, that when subscribed to, subscribes to the source\n * observable, and all other sources provided as arguments. All values from\n * every source are emitted from the resulting subscription.\n *\n * When all sources complete, the resulting observable will complete.\n *\n * When any source errors, the resulting observable will error.\n *\n * ## Example\n *\n * Joining all outputs from multiple user input event streams\n *\n * ```ts\n * import { fromEvent, map, mergeWith } from 'rxjs';\n *\n * const clicks$ = fromEvent(document, 'click').pipe(map(() => 'click'));\n * const mousemoves$ = fromEvent(document, 'mousemove').pipe(map(() => 'mousemove'));\n * const dblclicks$ = fromEvent(document, 'dblclick').pipe(map(() => 'dblclick'));\n *\n * mousemoves$\n *   .pipe(mergeWith(clicks$, dblclicks$))\n *   .subscribe(x => console.log(x));\n *\n * // result (assuming user interactions)\n * // 'mousemove'\n * // 'mousemove'\n * // 'mousemove'\n * // 'click'\n * // 'click'\n * // 'dblclick'\n * ```\n *\n * @see {@link merge}\n *\n * @param otherSources the sources to combine the current source with.\n * @return A function that returns an Observable that merges the values from\n * all given Observables.\n */\nexport function mergeWith<T, A extends readonly unknown[]>(\n  ...otherSources: [...ObservableInputTuple<A>]\n): OperatorFunction<T, T | A[number]> {\n  return merge(...otherSources);\n}\n","import {\n    Subject,\n    Observable\n} from 'rxjs';\nimport {\n    now,\n    ensureNotFalsy,\n    defaultHashSha256,\n    RXDB_UTILS_GLOBAL,\n    PREMIUM_FLAG_HASH\n} from '../utils/index.ts';\nimport type {\n    RxStorageInstance,\n    RxStorageChangeEvent,\n    RxDocumentData,\n    BulkWriteRow,\n    RxStorageBulkWriteResponse,\n    RxStorageQueryResult,\n    RxJsonSchema,\n    RxStorageInstanceCreationParams,\n    EventBulk,\n    StringKeys,\n    RxConflictResultionTask,\n    RxConflictResultionTaskSolution,\n    RxStorageDefaultCheckpoint,\n    CategorizeBulkWriteRowsOutput,\n    RxStorageCountResult,\n    PreparedQuery\n} from '../../types/index.d.ts';\nimport type {\n    DexieSettings,\n    DexieStorageInternals\n} from '../../types/plugins/dexie.d.ts';\nimport { RxStorageDexie } from './rx-storage-dexie.ts';\nimport {\n    attachmentObjectId,\n    closeDexieDb,\n    fromStorageToDexie,\n    getDexieDbWithTables,\n    getDocsInDb,\n    RX_STORAGE_NAME_DEXIE\n} from './dexie-helper.ts';\nimport { dexieCount, dexieQuery } from './dexie-query.ts';\nimport { getPrimaryFieldOfPrimaryKey } from '../../rx-schema-helper.ts';\nimport { categorizeBulkWriteRows, flatCloneDocWithMeta } from '../../rx-storage-helper.ts';\nimport { addRxStorageMultiInstanceSupport } from '../../rx-storage-multiinstance.ts';\nimport { newRxError } from '../../rx-error.ts';\n\nlet instanceId = now();\n\nlet shownNonPremiumLog = false;\n\n\nexport class RxStorageInstanceDexie<RxDocType> implements RxStorageInstance<\n    RxDocType,\n    DexieStorageInternals,\n    DexieSettings,\n    RxStorageDefaultCheckpoint\n> {\n    public readonly primaryPath: StringKeys<RxDocumentData<RxDocType>>;\n    private changes$: Subject<EventBulk<RxStorageChangeEvent<RxDocumentData<RxDocType>>, RxStorageDefaultCheckpoint>> = new Subject();\n    public readonly instanceId = instanceId++;\n    public closed?: Promise<void>;\n\n    constructor(\n        public readonly storage: RxStorageDexie,\n        public readonly databaseName: string,\n        public readonly collectionName: string,\n        public readonly schema: Readonly<RxJsonSchema<RxDocumentData<RxDocType>>>,\n        public readonly internals: DexieStorageInternals,\n        public readonly options: Readonly<DexieSettings>,\n        public readonly settings: DexieSettings,\n        public readonly devMode: boolean\n    ) {\n        this.primaryPath = getPrimaryFieldOfPrimaryKey(this.schema.primaryKey);\n    }\n\n    async bulkWrite(\n        documentWrites: BulkWriteRow<RxDocType>[],\n        context: string\n    ): Promise<RxStorageBulkWriteResponse<RxDocType>> {\n        ensureNotClosed(this);\n\n\n        if (\n            !shownNonPremiumLog &&\n            (\n                !RXDB_UTILS_GLOBAL.premium ||\n                typeof RXDB_UTILS_GLOBAL.premium !== 'string' ||\n                (await defaultHashSha256(RXDB_UTILS_GLOBAL.premium) !== PREMIUM_FLAG_HASH)\n            )\n        ) {\n            console.warn(\n                [\n                    '-------------- RxDB Open Core RxStorage -------------------------------',\n                    'You are using the free Dexie.js based RxStorage implementation from RxDB https://rxdb.info/rx-storage-dexie.html?console=dexie ',\n                    'While this is a great option, we want to let you know that there are faster storage solutions available in our premium plugins.',\n                    'For professional users and production environments, we highly recommend considering these premium options to enhance performance and reliability.',\n                    ' https://rxdb.info/premium?console=dexie ',\n                    'If you already purchased premium access you can disable this log by calling the setPremiumFlag() function from rxdb-premium/plugins/shared.',\n                    '---------------------------------------------------------------------'\n                ].join('\\n')\n            );\n            shownNonPremiumLog = true;\n        } else {\n            shownNonPremiumLog = true;\n        }\n\n\n        /**\n         * Check some assumptions to ensure RxDB\n         * does not call the storage with an invalid write.\n         */\n        documentWrites.forEach(row => {\n            // ensure revision is set\n            if (\n                !row.document._rev ||\n                (\n                    row.previous &&\n                    !row.previous._rev\n                )\n            ) {\n                throw newRxError('SNH', { args: { row } });\n            }\n        });\n\n        const state = await this.internals;\n        const ret: RxStorageBulkWriteResponse<RxDocType> = {\n            error: []\n        };\n\n        /**\n         * Some storages might add any _meta fields\n         * internally. To ensure RxDB can work with that in the\n         * test suite, we add a random field here.\n         * To ensure \n         */\n        if (this.devMode) {\n            documentWrites = documentWrites.map(row => {\n                const doc = flatCloneDocWithMeta(row.document);\n                return {\n                    previous: row.previous,\n                    document: doc\n                }\n            })\n        }\n\n\n        const documentKeys: string[] = documentWrites.map(writeRow => writeRow.document[this.primaryPath] as any);\n        let categorized: CategorizeBulkWriteRowsOutput<RxDocType> | undefined;\n        await state.dexieDb.transaction(\n            'rw',\n            state.dexieTable,\n            state.dexieAttachmentsTable,\n            async () => {\n                const docsInDbMap = new Map<string, RxDocumentData<RxDocType>>();\n                const docsInDbWithInternals = await getDocsInDb<RxDocType>(this.internals, documentKeys);\n                docsInDbWithInternals.forEach(docWithDexieInternals => {\n                    const doc = docWithDexieInternals;\n                    if (doc) {\n                        docsInDbMap.set((doc as any)[this.primaryPath], doc as any);\n                    }\n                    return doc;\n                });\n\n                categorized = categorizeBulkWriteRows<RxDocType>(\n                    this,\n                    this.primaryPath as any,\n                    docsInDbMap,\n                    documentWrites,\n                    context\n                );\n                ret.error = categorized.errors;\n\n                /**\n                 * Batch up the database operations\n                 * so we can later run them in bulk.\n                 */\n                let bulkPutDocs: any[] = [];\n                categorized.bulkInsertDocs.forEach(row => {\n                    bulkPutDocs.push(row.document);\n                });\n                categorized.bulkUpdateDocs.forEach(row => {\n                    bulkPutDocs.push(row.document);\n                });\n                bulkPutDocs = bulkPutDocs.map(d => fromStorageToDexie(state.booleanIndexes, d));\n                if (bulkPutDocs.length > 0) {\n                    await state.dexieTable.bulkPut(bulkPutDocs);\n                }\n\n                // handle attachments\n                const putAttachments: { id: string, data: string }[] = [];\n                categorized.attachmentsAdd.forEach(attachment => {\n                    putAttachments.push({\n                        id: attachmentObjectId(attachment.documentId, attachment.attachmentId),\n                        data: attachment.attachmentData.data\n                    });\n                });\n                categorized.attachmentsUpdate.forEach(attachment => {\n                    putAttachments.push({\n                        id: attachmentObjectId(attachment.documentId, attachment.attachmentId),\n                        data: attachment.attachmentData.data\n                    });\n                });\n                await state.dexieAttachmentsTable.bulkPut(putAttachments);\n                await state.dexieAttachmentsTable.bulkDelete(\n                    categorized.attachmentsRemove.map(attachment => attachmentObjectId(attachment.documentId, attachment.attachmentId))\n                );\n\n            });\n\n        categorized = ensureNotFalsy(categorized);\n        if (categorized.eventBulk.events.length > 0) {\n            const lastState = ensureNotFalsy(categorized.newestRow).document;\n            categorized.eventBulk.checkpoint = {\n                id: lastState[this.primaryPath],\n                lwt: lastState._meta.lwt\n            };\n            categorized.eventBulk.endTime = now();\n            this.changes$.next(categorized.eventBulk);\n        }\n\n        return ret;\n    }\n\n    async findDocumentsById(\n        ids: string[],\n        deleted: boolean\n    ): Promise<RxDocumentData<RxDocType>[]> {\n        ensureNotClosed(this);\n        const state = await this.internals;\n        const ret: RxDocumentData<RxDocType>[] = [];\n\n        await state.dexieDb.transaction(\n            'r',\n            state.dexieTable,\n            async () => {\n                const docsInDb = await getDocsInDb<RxDocType>(this.internals, ids);\n                docsInDb.forEach(documentInDb => {\n                    if (\n                        documentInDb &&\n                        (!documentInDb._deleted || deleted)\n                    ) {\n                        ret.push(documentInDb);\n                    }\n                });\n            });\n        return ret;\n    }\n\n    query(preparedQuery: PreparedQuery<RxDocType>): Promise<RxStorageQueryResult<RxDocType>> {\n        ensureNotClosed(this);\n        return dexieQuery(\n            this,\n            preparedQuery\n        );\n    }\n    async count(\n        preparedQuery: PreparedQuery<RxDocType>\n    ): Promise<RxStorageCountResult> {\n        if (preparedQuery.queryPlan.selectorSatisfiedByIndex) {\n            const result = await dexieCount(this, preparedQuery);\n            return {\n                count: result,\n                mode: 'fast'\n            };\n        } else {\n            const result = await dexieQuery(this, preparedQuery);\n            return {\n                count: result.documents.length,\n                mode: 'slow'\n            };\n        }\n    }\n\n    changeStream(): Observable<EventBulk<RxStorageChangeEvent<RxDocumentData<RxDocType>>, RxStorageDefaultCheckpoint>> {\n        ensureNotClosed(this);\n        return this.changes$.asObservable();\n    }\n\n    async cleanup(minimumDeletedTime: number): Promise<boolean> {\n        ensureNotClosed(this);\n        const state = await this.internals;\n        await state.dexieDb.transaction(\n            'rw',\n            state.dexieTable,\n            async () => {\n                const maxDeletionTime = now() - minimumDeletedTime;\n                /**\n                 * TODO only fetch _deleted=true\n                 */\n                const toRemove = await state.dexieTable\n                    .where('_meta.lwt')\n                    .below(maxDeletionTime)\n                    .toArray();\n                const removeIds: string[] = [];\n                toRemove.forEach(doc => {\n                    if (doc._deleted === '1') {\n                        removeIds.push(doc[this.primaryPath]);\n                    }\n                });\n                await state.dexieTable.bulkDelete(removeIds);\n            }\n        );\n\n        /**\n         * TODO instead of deleting all deleted docs at once,\n         * only clean up some of them and return false if there are more documents to clean up.\n         * This ensures that when many documents have to be purged,\n         * we do not block the more important tasks too long.\n         */\n        return true;\n    }\n\n    async getAttachmentData(documentId: string, attachmentId: string, _digest: string): Promise<string> {\n        ensureNotClosed(this);\n        const state = await this.internals;\n        const id = attachmentObjectId(documentId, attachmentId);\n        return await state.dexieDb.transaction(\n            'r',\n            state.dexieAttachmentsTable,\n            async () => {\n\n                const attachment = await state.dexieAttachmentsTable.get(id);\n                if (attachment) {\n                    return attachment.data;\n                } else {\n                    throw new Error('attachment missing documentId: ' + documentId + ' attachmentId: ' + attachmentId);\n                }\n            });\n    }\n\n    async remove(): Promise<void> {\n        ensureNotClosed(this);\n        const state = await this.internals;\n        await state.dexieTable.clear()\n        return this.close();\n    }\n\n\n    close(): Promise<void> {\n        if (this.closed) {\n            return this.closed;\n        }\n        this.closed = (async () => {\n            this.changes$.complete();\n            await closeDexieDb(this.internals);\n        })();\n        return this.closed;\n    }\n\n    conflictResultionTasks(): Observable<RxConflictResultionTask<RxDocType>> {\n        return new Subject();\n    }\n    async resolveConflictResultionTask(_taskSolution: RxConflictResultionTaskSolution<RxDocType>): Promise<void> { }\n\n}\n\n\nexport async function createDexieStorageInstance<RxDocType>(\n    storage: RxStorageDexie,\n    params: RxStorageInstanceCreationParams<RxDocType, DexieSettings>,\n    settings: DexieSettings\n): Promise<RxStorageInstanceDexie<RxDocType>> {\n    const internals = getDexieDbWithTables(\n        params.databaseName,\n        params.collectionName,\n        settings,\n        params.schema\n    );\n\n    const instance = new RxStorageInstanceDexie(\n        storage,\n        params.databaseName,\n        params.collectionName,\n        params.schema,\n        internals,\n        params.options,\n        settings,\n        params.devMode\n    );\n\n    await addRxStorageMultiInstanceSupport(\n        RX_STORAGE_NAME_DEXIE,\n        params,\n        instance\n    );\n\n    return Promise.resolve(instance);\n}\n\n\n\nfunction ensureNotClosed(\n    instance: RxStorageInstanceDexie<any>\n) {\n    if (instance.closed) {\n        throw new Error('RxStorageInstanceDexie is closed ' + instance.databaseName + '-' + instance.collectionName);\n    }\n}\n","import type {\n    RxStorage,\n    RxStorageInstanceCreationParams\n} from '../../types/index.d.ts';\nimport {\n    RX_STORAGE_NAME_DEXIE\n} from './dexie-helper.ts';\nimport type {\n    DexieSettings,\n    DexieStorageInternals\n} from '../../types/plugins/dexie.d.ts';\nimport {\n    createDexieStorageInstance,\n    RxStorageInstanceDexie\n} from './rx-storage-instance-dexie.ts';\nimport { ensureRxStorageInstanceParamsAreCorrect } from '../../rx-storage-helper.ts';\nimport { RXDB_VERSION } from '../utils/utils-rxdb-version.ts';\n\n\n\nexport class RxStorageDexie implements RxStorage<DexieStorageInternals, DexieSettings> {\n    public name = RX_STORAGE_NAME_DEXIE;\n    public readonly rxdbVersion = RXDB_VERSION;\n    constructor(\n        public settings: DexieSettings\n    ) { }\n\n    public createStorageInstance<RxDocType>(\n        params: RxStorageInstanceCreationParams<RxDocType, DexieSettings>\n    ): Promise<RxStorageInstanceDexie<RxDocType>> {\n        ensureRxStorageInstanceParamsAreCorrect(params);\n        return createDexieStorageInstance(this, params, this.settings);\n    }\n}\n\n\nexport function getRxStorageDexie(\n    settings: DexieSettings = {}\n): RxStorageDexie {\n    const storage = new RxStorageDexie(settings);\n    return storage;\n}\n","import { createRxDatabase, addRxPlugin } from 'rxdb';\nimport { RxDBDevModePlugin } from 'rxdb/plugins/dev-mode';\nimport { getRxStorageDexie } from 'rxdb/plugins/storage-dexie';\n\naddRxPlugin(RxDBDevModePlugin);\n\nconst todoSchema = {\n    version: 0,\n    primaryKey: 'id',\n    type: 'object',\n    properties: {\n        id: {\n            type: 'string',\n            maxLength: 100 // <- the primary key must have set maxLength\n        },\n        name: {\n            type: 'string'\n        },\n        done: {\n            type: 'boolean'\n        },\n        timestamp: {\n            type: 'string',\n            format: 'date-time'\n        }\n    },\n    required: ['id', 'name', 'done', 'timestamp']\n};\n\nconst createDatabase = async () => {\n    const db = await createRxDatabase({\n        name: 'mydatabase',\n        storage: getRxStorageDexie(),\n        ignoreDuplicate: true \n    });\n\n    await db.addCollections({\n        todos: {\n            schema: todoSchema\n        }\n    });\n\n    return db;\n};\n\nexport { createDatabase };","import React, { useState, useEffect } from \"react\";\nimport { createDatabase } from \"./dexie\";\nimport \"./TodoList.css\";\n\nconst TodoList = () => {\n  const [todos, setTodos] = useState([]);\n  const [name, setName] = useState(\"\");\n  const [db, setDb] = useState(null);\n\n  useEffect(() => {\n    const initializeDatabase = async () => {\n      const database = await createDatabase();\n      setDb(database);\n      const todosList = await database.todos.find().exec();\n      setTodos(todosList);\n    };\n    initializeDatabase();\n  }, []);\n\n  const addTodo = async () => {\n    if (!name.trim()) {\n      alert('Please enter a valid todo item.');\n      return;\n    }\n    if (db) {\n    const id = todos.length + 1;\n      await db.todos.insert({\n        id: id.toString(),\n        name,\n        done: false,\n        timestamp: new Date().toISOString(),\n      });\n      const todoList = await db.todos.find().exec();\n      setTodos(todoList);\n      setName(\"\");\n    }\n  };\n\n  const deleteTodo = async (id) => {\n    if (db) {\n      const todo = await db.todos.findOne(id).exec();\n      await todo.remove();\n      const todoList = await db.todos.find().exec();\n      setTodos(todoList);\n    }\n  };\n\n  const toggleTodo = async (id) => {\n    if (db) {\n      const todo = await db.todos.findOne(id).exec();\n      await todo.patch({\n        done: !todo.done, // Toggle the 'done' status\n      });\n      const updatedTodos = await db.todos.find().exec();\n      updatedTodos.sort((a, b) => {\n        if (a.done && !b.done) return 1; // a is done, b is not done (move a to bottom)\n        if (!a.done && b.done) return -1; // a is not done, b is done (keep a above)\n        return 0;\n      });\n      setTodos(updatedTodos);\n    }\n  };\n\n  return (\n    <div className=\"todo-list\">\n      <h2>Todo List (RxDB Example)</h2>\n      <div className=\"add-todo\">\n        <input\n          type=\"text\"\n          placeholder=\"Add a todo\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}/>\n        <button onClick={addTodo}>Add Todo</button>\n      </div>\n      <div>\n        {todos.map((todo) => (\n          <li key={todo.id} className=\"todo-item\">\n            <span\n              className={todo.done ? \"todo-name done\" : \"todo-name\"}\n              onClick={() => toggleTodo(todo.id)}>\n              {todo.name}\n            </span>\n            <div className=\"todo-buttons\">\n              <button\n                className=\"delete-btn\"\n                onClick={() => deleteTodo(todo.id)}>\n                Delete\n              </button>\n              <button className=\"done-btn\" onClick={() => toggleTodo(todo.id)}>\n                {todo.done ? \"Undo\" : \"Done\"}\n              </button>\n            </div>\n          </li>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default TodoList;","import React, { useState } from 'react';\nimport { ApolloProvider } from '@apollo/client';\nimport client from './graphql/apolloClient';\nimport Countries from './graphql/Countries';\nimport TodoList from './rxdb/TodoList';\nimport './App.css';\n\nconst App = () => {\n  const [activeTab, setActiveTab] = useState('tab1');\n\n  const renderTabContent = () => {\n    switch (activeTab) {\n      case 'tab1':\n        return <Countries />;\n      case 'tab2':\n        return <TodoList />;\n      default:\n        return <Countries />;\n    }\n  };\n\n  return (\n    <ApolloProvider client={client}>\n    <div className=\"app\">\n      <div className=\"tabs\">\n        <div className={`tab ${activeTab === 'tab1' ? 'active' : ''}`} onClick={() => setActiveTab('tab1')}>\n          Tab 1\n        </div>\n        <div className={`tab ${activeTab === 'tab2' ? 'active' : ''}`} onClick={() => setActiveTab('tab2')}>\n          Tab 2\n        </div>\n      </div>\n      <div className=\"tab-content\">\n        {renderTabContent()}\n      </div>\n    </div>\n    </ApolloProvider>\n  );\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"names":["module","exports","s","e","t","Object","setPrototypeOf","__proto__","Array","n","prototype","hasOwnProperty","call","w","assign","r","arguments","length","i","apply","this","o","slice","concat","f","globalThis","self","window","global","_","keys","x","isArray","a","forEach","Promise","c","getPrototypeOf","m","Reflect","ownKeys","l","u","defineProperty","get","set","configurable","value","writable","from","create","extend","bind","h","getOwnPropertyDescriptor","d","b","p","y","Error","v","setImmediate","setTimeout","k","push","indexOf","substr","P","isFrozen","isNaN","parseInt","splice","g","O","split","map","filter","E","Set","K","S","WeakMap","has","constructor","j","toString","A","C","Symbol","iterator","D","T","q","I","next","done","B","toStringTag","F","R","M","VersionChanged","DatabaseClosed","Abort","TransactionInactive","MissingAPI","N","name","message","L","join","U","failures","failedKeys","successCount","z","failuresByPos","V","reduce","W","Y","inner","Syntax","SyntaxError","Type","TypeError","Range","RangeError","$","Q","G","X","H","J","Z","onsuccess","onerror","ee","te","ne","re","then","ModifyError","DexieError","BulkError","ie","location","test","href","oe","ae","ue","resolve","crypto","subtle","digest","Uint8Array","se","ce","le","be","he","queueMicrotask","Se","fe","de","pe","ye","ve","id","ref","unhandleds","onunhandled","pgp","env","finalize","me","ge","we","_e","_listeners","_lib","_PSD","_state","_value","Oe","je","_then","Pe","Ae","xe","Fe","Ue","Ee","ke","Qe","_consoleTask","onFulfilled","onRejected","reject","psd","some","Ce","Ke","run","$e","De","Te","We","catch","finally","timeout","Timeout","clearTimeout","Ye","all","ze","race","PSD","totalEchoes","newPSD","Ne","usePSD","scheduler","rejectionMapper","follow","allSettled","status","reason","any","AggregateError","qe","awaits","echoes","Ie","Be","Re","Me","parent","PromiseProp","Le","Xe","Ve","pop","Ge","enqueueNativeMicroTask","He","String","fromCharCode","Je","Ze","et","tt","nt","rt","it","ot","type","lower","lowerOpen","upper","upperOpen","at","ut","st","ct","NaN","lt","ArrayBuffer","isView","buffer","byteOffset","byteLength","ft","ht","_trans","_tx","trans","console","createTask","schema","NotFound","idbtrans","db","_novip","_promise","transless","idbdb","openComplete","letThrough","_vip","_createTransaction","_dbSchema","PR1398_maxLoop","InvalidState","isOpen","warn","close","disableAutoOpen","open","commit","_completion","dbOpenError","isBeingOpened","autoOpen","dbReadyPromise","trace","where","first","core","key","hook","reading","fire","WhereClause","equals","indexes","primKey","compound","every","keyPath","sort","_maxKey","JSON","stringify","idxByName","_deps","indexedDB","cmp","multi","toCollection","and","count","offset","limit","each","toArray","Collection","orderBy","reverse","mapToClass","mappedClass","enumerable","table","getOwnPropertyNames","add","readHook","unsubscribe","defineClass","auto","mutate","values","numFailures","lastResult","update","modify","InvalidArgument","put","delete","clear","range","bulkGet","getMany","bulkAdd","allKeys","wantResults","results","bulkPut","bulkUpdate","changes","cache","Constraint","updates","changeSpecs","Number","bulkDelete","dt","subscribe","addEventType","subscribers","pt","yt","algorithm","or","justLimit","replayFilter","vt","mt","bt","isPrimKey","primaryKey","getIndexByKeyPath","index","Schema","gt","openCursor","keysOnly","dir","unique","query","wt","stop","fail","_iterate","_t","valueMapper","start","continue","xt","kt","execute","BigInt","remove","includes","replacePrefix","startsWith","substring","Ot","Pt","_read","_ctx","error","_write","_addAlgorithm","clone","raw","Math","min","sortBy","result","advance","until","last","isMatch","_ondirectionchange","desc","eachKey","eachUniqueKey","eachPrimaryKey","primaryKeys","uniqueKeys","firstKey","lastKey","distinct","outbound","extractKey","_options","modifyChunkSize","criteria","changeSpec","isAdditionalChunk","Et","Kt","St","jt","qt","At","Tt","Ct","toUpperCase","toLowerCase","Dt","It","between","_cmp","above","aboveOrEqual","below","belowOrEqual","startsWithIgnoreCase","equalsIgnoreCase","anyOfIgnoreCase","startsWithAnyOfIgnoreCase","anyOf","_ascending","_descending","notEqual","inAnyRange","includeLowers","includeUppers","noneOf","_min","_max","startsWithAnyOf","Bt","Rt","target","stopPropagation","preventDefault","Ft","Mt","Nt","Lt","Ut","_lock","_reculock","lockOwnerFor","_unlock","_blockedFuncs","_locked","shift","mode","OpenFailed","active","transaction","storeNames","durability","chromeTransactionDurability","_reject","onabort","on","oncomplete","_resolve","storagemutated","mutatedParts","ReadOnly","_root","waitFor","_waitingFor","_waitingQueue","objectStore","_spinCount","abort","_memoizedTables","Table","zt","src","Vt","Wt","Yt","only","$t","Qt","Gt","Xt","Ht","upperBound","lowerBound","bound","_pos","isPrimaryKey","getAll","getAllKeys","openKeyCursor","___id","continuePrimaryKey","objectStoreNames","tables","autoIncrement","indexNames","multiEntry","hasGetAll","navigator","userAgent","match","stack","MIN_KEY","MAX_KEY","Jt","IDBKeyRange","dbcore","Zt","_middlewares","en","Transaction","tn","nn","_cfg","version","rn","contains","$meta","hn","_storeNames","_versions","ln","dbschema","fn","an","un","change","recreate","Upgrade","cn","deleteIndex","del","contentUpgrade","deleteObjectStore","ceil","sn","populate","createObjectStore","debug","def","createIndex","_hasGetAll","WorkerGlobalScope","trim","replace","dn","pn","_parseStoresSpec","stores","storesSource","_allTables","upgrade","yn","_dbNamesDB","er","addons","dbnames","vn","databases","mn","bn","gn","to","wn","On","_n","xn","kn","up","Pn","max","En","Kn","addKey","addKeys","Sn","jn","An","Cn","Dn","Tn","exec","entries","queries","obsSet","qn","openCanceller","round","verno","autoSchema","onblocked","_fireOnBlocked","onupgradeneeded","allowEmptyDB","deleteDatabase","NoSuchDatabase","oldVersion","pow","onversionchange","vcFired","onclose","dbReadyResolve","userAgentData","setInterval","clearInterval","onReadyBeingFired","ready","vip","_close","In","throw","Bn","Rn","level","lowLevelIndex","isVirtual","keyTail","keyLength","Fn","Mn","Nn","deleting","creating","updating","Ln","Un","_cache","zn","subscr","explicit","Vn","Wn","querier","findIndex","Yn","$n","Qn","freeze","dirty","Gn","Xn","Hn","addEventListener","size","Jn","AbortController","signal","optimisticOps","_explicit","res","req","promise","requery","find","objs","Map","unsignaledParts","Zn","Proxy","tr","Version","_whenReady","use","unuse","cancelOpen","backendDB","hasBeenClosed","hasFailed","dynamicallyOpened","_transaction","SubTransaction","PrematureCommit","InvalidTable","dependencies","complete","_IDBKeyRange","newVersion","observable","nr","rr","ir","_subscribe","mozIndexedDB","webkitIndexedDB","msIndexedDB","webkitIDBKeyRange","closed","aborted","hasValue","getValue","ar","ur","cr","exists","getDatabaseNames","ignoreTransaction","async","spawn","currentTransaction","derive","props","override","Events","liveQuery","extendObservabilitySet","getByKeyPath","setByKeyPath","delByKeyPath","shallowClone","deepClone","getObjectDiff","asap","minKey","connections","errnames","semVer","maxKey","dispatchEvent","CustomEvent","detail","sr","lr","BroadcastChannel","onmessage","data","unref","postMessage","disableBfCache","persisted","Dexie","Entity","PropModSymbol","PropModification","default","RangeSet","mergeRanges","rangesOverlap","aa","require","ca","encodeURIComponent","da","ea","fa","ha","ia","document","createElement","ja","ka","la","ma","acceptsBooleans","attributeName","attributeNamespace","mustUseProperty","propertyName","sanitizeURL","removeEmptyString","ra","sa","ta","pa","qa","oa","removeAttribute","setAttribute","setAttributeNS","xlinkHref","ua","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","va","for","wa","ya","za","Aa","Ba","Ca","Da","Ea","Fa","Ga","Ha","Ia","Ja","Ka","La","Ma","Na","Oa","prepareStackTrace","construct","displayName","Pa","tag","render","Qa","$$typeof","_context","_payload","_init","Ra","Sa","Ta","nodeName","Va","_valueTracker","setValue","stopTracking","Ua","Wa","checked","Xa","activeElement","body","Ya","defaultChecked","defaultValue","_wrapperState","initialChecked","Za","initialValue","controlled","ab","bb","cb","ownerDocument","eb","fb","options","selected","defaultSelected","disabled","gb","dangerouslySetInnerHTML","children","hb","ib","jb","textContent","kb","lb","mb","nb","namespaceURI","innerHTML","valueOf","firstChild","removeChild","appendChild","MSApp","execUnsafeLocalFunction","ob","lastChild","nodeType","nodeValue","pb","animationIterationCount","aspectRatio","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridArea","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","qb","rb","sb","style","setProperty","charAt","tb","menuitem","area","base","br","col","embed","hr","img","input","keygen","link","meta","param","source","track","wbr","ub","vb","is","wb","xb","srcElement","correspondingUseElement","parentNode","yb","zb","Ab","Bb","Cb","stateNode","Db","Eb","Fb","Gb","Hb","Ib","Jb","Kb","Lb","Mb","removeEventListener","Nb","onError","Ob","Pb","Qb","Rb","Sb","Tb","Vb","alternate","return","flags","Wb","memoizedState","dehydrated","Xb","Zb","child","sibling","current","Yb","$b","ac","unstable_scheduleCallback","bc","unstable_cancelCallback","cc","unstable_shouldYield","dc","unstable_requestPaint","unstable_now","ec","unstable_getCurrentPriorityLevel","fc","unstable_ImmediatePriority","gc","unstable_UserBlockingPriority","hc","unstable_NormalPriority","ic","unstable_LowPriority","jc","unstable_IdlePriority","kc","lc","oc","clz32","pc","qc","log","LN2","rc","sc","tc","uc","pendingLanes","suspendedLanes","pingedLanes","entangledLanes","entanglements","vc","xc","yc","zc","Ac","eventTimes","Cc","Dc","Ec","Fc","Gc","Hc","Ic","Jc","Kc","Lc","Mc","Nc","Oc","Pc","Qc","Rc","Sc","pointerId","Tc","nativeEvent","blockedOn","domEventName","eventSystemFlags","targetContainers","Vc","Wc","priority","isDehydrated","containerInfo","Xc","Yc","Zc","$c","ad","bd","cd","ReactCurrentBatchConfig","dd","ed","transition","fd","gd","hd","Uc","jd","kd","ld","md","nd","od","keyCode","charCode","pd","qd","rd","_reactName","_targetInst","currentTarget","isDefaultPrevented","defaultPrevented","returnValue","isPropagationStopped","cancelBubble","persist","isPersistent","wd","xd","yd","sd","eventPhase","bubbles","cancelable","timeStamp","Date","now","isTrusted","td","ud","view","vd","Ad","screenX","screenY","clientX","clientY","pageX","pageY","ctrlKey","shiftKey","altKey","metaKey","getModifierState","zd","button","buttons","relatedTarget","fromElement","toElement","movementX","movementY","Bd","Dd","dataTransfer","Fd","Hd","animationName","elapsedTime","pseudoElement","Id","clipboardData","Jd","Ld","Md","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","Nd","Od","Alt","Control","Meta","Shift","Pd","Qd","code","repeat","locale","which","Rd","Td","width","height","pressure","tangentialPressure","tiltX","tiltY","twist","pointerType","isPrimary","Vd","touches","targetTouches","changedTouches","Xd","Yd","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","Zd","$d","documentMode","color","date","datetime","email","month","number","password","search","tel","text","time","url","week","event","listeners","oninput","detachEvent","attachEvent","node","nextSibling","compareDocumentPosition","HTMLIFrameElement","contentWindow","contentEditable","focusedElem","selectionRange","documentElement","end","selectionStart","selectionEnd","defaultView","getSelection","rangeCount","anchorNode","anchorOffset","focusNode","focusOffset","createRange","setStart","removeAllRanges","addRange","setEnd","element","left","scrollLeft","top","scrollTop","focus","animationend","animationiteration","animationstart","transitionend","animation","af","bf","cf","df","ef","ff","gf","hf","lf","mf","nf","Ub","instance","listener","of","pf","qf","rf","random","sf","capture","passive","tf","uf","parentWindow","vf","wf","na","xa","$a","ba","char","unshift","xf","yf","zf","Af","Bf","Cf","Df","Ef","__html","Ff","Gf","Hf","Jf","If","Kf","Lf","Mf","previousSibling","Nf","Of","Pf","Qf","Rf","Sf","Tf","Uf","Vf","Wf","Xf","Yf","contextTypes","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","Zf","childContextTypes","$f","ag","bg","getChildContext","cg","__reactInternalMemoizedMergedChildContext","dg","eg","fg","gg","hg","jg","kg","lg","mg","ng","og","pg","qg","rg","sg","tg","ug","vg","wg","xg","yg","zg","Ag","Bg","elementType","deletions","Cg","pendingProps","overflow","treeContext","retryLane","Dg","Eg","Fg","Gg","memoizedProps","Hg","Ig","Jg","Kg","Lg","_owner","_stringRef","refs","Mg","Ng","Og","Pg","Qg","Rg","implementation","Sg","Tg","Ug","Vg","Wg","Xg","Yg","Zg","$g","ah","_currentValue","bh","childLanes","ch","firstContext","lanes","dh","eh","context","memoizedValue","fh","gh","hh","interleaved","ih","jh","kh","updateQueue","baseState","firstBaseUpdate","lastBaseUpdate","shared","pending","effects","lh","mh","eventTime","lane","payload","callback","nh","oh","ph","qh","rh","sh","th","uh","vh","wh","xh","yh","tagName","zh","Ah","Bh","Ch","revealOrder","Dh","Eh","_workInProgressVersionPrimary","Fh","ReactCurrentDispatcher","Gh","Hh","Ih","Jh","Kh","Lh","Mh","Nh","Oh","Ph","Qh","Rh","Sh","Th","baseQueue","queue","Uh","Vh","Wh","lastRenderedReducer","action","hasEagerState","eagerState","lastRenderedState","dispatch","Xh","Yh","Zh","$h","ai","getSnapshot","bi","ci","di","lastEffect","ei","fi","gi","hi","ii","destroy","deps","ji","ki","li","mi","ni","oi","pi","qi","ri","si","ti","ui","vi","wi","xi","yi","zi","Ai","Bi","readContext","useCallback","useContext","useEffect","useImperativeHandle","useInsertionEffect","useLayoutEffect","useMemo","useReducer","useRef","useState","useDebugValue","useDeferredValue","useTransition","useMutableSource","useSyncExternalStore","useId","unstable_isNewReconciler","identifierPrefix","Ci","defaultProps","Di","Ei","isMounted","_reactInternals","enqueueSetState","enqueueReplaceState","enqueueForceUpdate","Fi","shouldComponentUpdate","isPureReactComponent","Gi","contextType","state","updater","Hi","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","Ii","getDerivedStateFromProps","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentWillMount","componentDidMount","Ji","Ki","Li","Mi","Ni","Oi","Pi","Qi","getDerivedStateFromError","componentDidCatch","Ri","componentStack","Si","pingCache","Ti","Ui","Vi","Wi","ReactCurrentOwner","Xi","Yi","Zi","$i","aj","compare","bj","cj","dj","baseLanes","cachePool","transitions","ej","fj","gj","hj","ij","UNSAFE_componentWillUpdate","componentWillUpdate","componentDidUpdate","jj","kj","pendingContext","lj","zj","Aj","Bj","Cj","mj","nj","oj","fallback","pj","qj","sj","dataset","dgst","tj","uj","_reactRetry","rj","subtreeFlags","vj","wj","isBackwards","rendering","renderingStartTime","tail","tailMode","xj","Dj","Ej","Fj","wasMultiple","multiple","suppressHydrationWarning","onClick","onclick","createElementNS","autoFocus","createTextNode","Gj","Hj","Ij","Jj","Kj","WeakSet","Lj","Mj","Nj","Pj","Qj","Rj","Sj","Tj","Uj","Vj","insertBefore","_reactRootContainer","Wj","Xj","Yj","Zj","onCommitFiberUnmount","componentWillUnmount","ak","bk","ck","dk","ek","isHidden","fk","gk","display","hk","ik","jk","kk","__reactInternalSnapshotBeforeUpdate","Vk","lk","mk","nk","ok","pk","qk","rk","sk","tk","Infinity","uk","vk","wk","xk","yk","zk","Ak","Bk","Ck","Dk","callbackNode","expirationTimes","expiredLanes","wc","callbackPriority","ig","Ek","Fk","Gk","Hk","Ik","Jk","Kk","Lk","Mk","Nk","Ok","finishedWork","finishedLanes","Pk","timeoutHandle","Qk","Rk","Sk","Tk","Uk","mutableReadLanes","Bc","Oj","onCommitFiberRoot","mc","onRecoverableError","Wk","onPostCommitFiberRoot","Xk","Yk","$k","isReactComponent","pendingChildren","al","mutableSourceEagerHydrationData","bl","pendingSuspenseBoundaries","dl","el","fl","gl","hl","il","yj","Zk","kl","reportError","ll","_internalRoot","ml","nl","ol","pl","rl","ql","unmount","unstable_scheduleHydration","querySelectorAll","form","sl","usingClientEntryPoint","tl","findFiberByHostInstance","bundleType","rendererPackageName","ul","rendererConfig","overrideHookState","overrideHookStateDeletePath","overrideHookStateRenamePath","overrideProps","overridePropsDeletePath","overridePropsRenamePath","setErrorHandler","setSuspenseHandler","scheduleUpdate","currentDispatcherRef","findHostInstanceByFiber","findHostInstancesForRefresh","scheduleRefresh","scheduleRoot","setRefreshHandler","getCurrentFiber","reconcilerVersion","__REACT_DEVTOOLS_GLOBAL_HOOK__","vl","isDisabled","supportsFiber","inject","createPortal","cl","createRoot","unstable_strictMode","findDOMNode","flushSync","hydrate","hydrateRoot","hydratedSources","_getVersion","_source","unmountComponentAtNode","unstable_batchedUpdates","unstable_renderSubtreeIntoContainer","checkDCE","err","__self","__source","jsx","jsxs","setState","forceUpdate","escape","_status","_result","Children","Component","Fragment","Profiler","PureComponent","StrictMode","Suspense","act","cloneElement","createContext","_currentValue2","_threadCount","Provider","Consumer","_defaultValue","_globalName","createFactory","createRef","forwardRef","isValidElement","lazy","memo","startTransition","unstable_act","undefined","__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE","__SERVER_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE","sortIndex","performance","startTime","expirationTime","priorityLevel","scheduling","isInputPending","MessageChannel","port2","port1","unstable_Profiling","unstable_continueExecution","unstable_forceFrameRate","floor","unstable_getFirstCallbackNode","unstable_next","unstable_pauseExecution","unstable_runWithPriority","delay","unstable_wrapCallback","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","leafPrototypes","getProto","obj","__esModule","ns","definition","chunkId","promises","miniCssF","Function","prop","inProgress","dataWebpackPrefix","script","needAttach","scripts","getElementsByTagName","getAttribute","charset","nc","onScriptComplete","prev","onload","doneFns","head","installedChunks","installedChunkData","errorType","realSrc","request","webpackJsonpCallback","parentChunkLoadingFunction","chunkIds","moreModules","runtime","chunkLoadingGlobal","extendStatics","__extends","__","__assign","__rest","getOwnPropertySymbols","propertyIsEnumerable","__awaiter","thisArg","_arguments","generator","fulfilled","step","rejected","__generator","label","sent","trys","ops","verb","op","__values","__read","__spreadArray","pack","__await","__asyncGenerator","asyncIterator","resume","fulfill","settle","__asyncValues","SuppressedError","genericMessage","_a","proto","InvariantError","_super","_this","framesToPop","invariant","condition","verbosityLevels","verbosityLevel","wrapConsoleMethod","maybe","thunk","prefixCounts","makeUniqueId","prefix","stringifyForDisplay","space","undefId","wrap","args","_i","arg0","getHandledErrorMsg","getFallbackErrorMsg","originalInvariant","newInvariantError","optionalParams","ApolloErrorMessageHandler","arg","messageArgs","__DEV__","isReactNative","product","canUseWeakMap","HermesInternal","canUseWeakSet","canUseSymbol","canUseAsyncIteratorSymbol","canUseDOM","usingJSDOM","canUseLayoutEffect","contextKey","getApolloContext","React","ApolloProvider","client","ApolloContext","parentContext","_createForOfIteratorHelperLoose","allowArrayLike","minLen","_arrayLikeToArray","_unsupportedIterableToArray","arr","len","arr2","_defineProperties","descriptor","_createClass","Constructor","protoProps","staticProps","hasSymbols","hasSymbol","Boolean","getSymbol","SymbolIterator","SymbolObservable","SymbolSpecies","getMethod","getSpecies","ctor","Observable","hostReportError","enqueue","cleanupSubscription","subscription","cleanup","_cleanup","closeSubscription","_observer","_queue","notifySubscription","observer","onNotify","flushSubscription","Subscription","subscriber","subscriptionObserver","SubscriptionObserver","_subscription","_proto2","_subscriber","_proto3","_this2","_this3","_this4","hasSeed","acc","_this5","_len","sources","_key","startNext","flatMap","_this6","subscriptions","outer","completeIfDone","method","isObservable","_step","_iterator","item","_len2","items","_key2","isNonNullObject","getFragmentQueryDocument","fragmentName","actualFragmentName","fragments","definitions","kind","operation","createFragmentMap","symTable","fragment","getFragmentFromSelection","selection","fragmentMap","noop","symbol","defaultDispose","_WeakRef","WeakRef","deref","_WeakMap","_FinalizationRegistry","FinalizationRegistry","register","unregister","WeakCache","dispose","newest","oldest","unfinalizedNodes","finalizationScheduled","keyRef","registry","deleteNode","getNode","older","newer","scheduleFinalization","clean","StrongCache","scheduledCleanup","schedule","AutoCleanedWeakCache","ret","AutoCleanedStrongCache","cacheSizeSymbol","cacheSizes","globalCaches","registerGlobalCache","getSize","getApolloClientMemoryInternals","limits","getCurrentCacheSizes","sizes","print","parser","_b","canonicalStringify","_c","links","linkInfo","queryManager","getDocumentInfo","documentTransforms","transformInfo","documentTransform","_d","getMemoryInternals","getInMemoryCacheMemoryInternals","config","_getApolloCacheMemoryInternals","addTypenameDocumentTransform","inMemoryCache","executeSelectionSet","getWrapperInformation","executeSubSelectedArray","maybeBroadcastWatch","fragmentRegistry","findFragmentSpreads","lookup","transform","getApolloCacheMemoryInternals","fromEntries","fragmentQueryDocuments","isWrapper","isDefined","recurseTransformInfo","right","sortingMap","stableObjectReplacer","reset","everyKeyInOrder","unsortedKey","sortedKeys","sortedKey","sortedObject_1","makeReference","__ref","isReference","valueToObjectRepresentation","argObj","variables","isIntValue","isFloatValue","isBooleanValue","isStringValue","isObjectValue","nestedArgObj_1","fields","isVariable","variableValue","isListValue","listValue","nestedArgArrayObj","isEnumValue","isNullValue","KNOWN_DIRECTIVES","storeKeyNameStringify","getStoreKeyName","fieldName","directives","filterKeys","filteredArgs_1","completeFieldName","stringifiedArgs","setStringify","previous","argumentsObjectFromField","field","argObj_1","resultKeyNameFromField","alias","getTypenameFromResult","selectionSet","selections","isField","__typename","fragments_1","typename","checkDocument","doc","operations","getOperationDefinition","getOperationName","getFragmentDefinitions","getQueryDefinition","queryDef","getMainDefinition","queryDoc","fragmentDefinition","getDefaultValues","defaultValues","defs","variableDefinitions","variable","passthrough","forward","toLink","handler","ApolloLink","isTerminating","empty","leftLink","rightLink","starting","createOperation","transformedOperation","extensions","operationName","transformOperation","OPERATION_FIELDS","validateOperation","second","firstLink","nextLink","setOnError","devAssert","MAX_ARRAY_LENGTH","MAX_RECURSIVE_DEPTH","inspect","formatValue","seenValues","previouslySeenValues","toJSON","isJSONable","jsonValue","array","remaining","formatArray","object","getObjectTag","properties","_ref","formatObject","formatObjectValue","Location","startToken","endToken","Token","line","column","QueryDocumentKeys","Name","Document","OperationDefinition","VariableDefinition","Variable","SelectionSet","Field","Argument","FragmentSpread","InlineFragment","FragmentDefinition","IntValue","FloatValue","StringValue","BooleanValue","NullValue","EnumValue","ListValue","ObjectValue","ObjectField","Directive","NamedType","ListType","NonNullType","SchemaDefinition","OperationTypeDefinition","ScalarTypeDefinition","ObjectTypeDefinition","FieldDefinition","InputValueDefinition","InterfaceTypeDefinition","UnionTypeDefinition","EnumTypeDefinition","EnumValueDefinition","InputObjectTypeDefinition","DirectiveDefinition","SchemaExtension","ScalarTypeExtension","ObjectTypeExtension","InterfaceTypeExtension","UnionTypeExtension","EnumTypeExtension","InputObjectTypeExtension","kindValues","isNode","maybeNode","maybeKind","OperationTypeNode","Kind","BREAK","visit","root","visitor","visitorKeys","enterLeaveMap","getEnterLeaveForKind","inArray","edits","path","ancestors","isLeaving","isEdited","editOffset","editKey","editValue","arrayKey","defineProperties","getOwnPropertyDescriptors","_enterLeaveMap$get","_enterLeaveMap$get2","visitFn","leave","enter","_node$kind","kindVisitor","shouldInclude","directive","isInclusionDirective","directiveArguments","directiveName","ifArgument","ifValue","getInclusionDirectives","evaledValue","hasDirectives","names","nameSet","uniqueCount","hasClientExports","serializeFetchParameter","serialized","parseError","nodeStreamIterator","stream","waiting","onData","chunk","shiftedArr","pair","onEnd","removeListener","readerIterator","reader","read","responseIterator","response","isAsyncIterableIterator","getReader","isReadableStream","isStreamableBlob","arrayBuffer","isBlob","resolved","promiseIterator","pipe","isNodeReadableStream","throwServerError","statusCode","PROTOCOL_ERRORS_SYMBOL","ApolloError","graphQLErrors","protocolErrors","clientErrors","networkError","errorMessage","extraInfo","errors","generateErrorMessage","isNonEmptyArray","mergeDeep","mergeDeepArray","merger","DeepMerger","merge","defaultReconciler","property","reconciler","isObject","pastCopies","sourceKey","targetValue","shallowCopyForMerge","isExecutionPatchIncrementalResult","isApolloPayloadResult","mergeIncrementalData","prevResult","mergedData","incremental","parent_1","parseHeaders","headerText","headersInit","name_1","parseJsonBody","bodyText","parse","getResult","isWhiteSpace","isDigit","isLetter","isNameStart","isNameContinue","dedentBlockStringLines","lines","_firstNonEmptyLine2","commonIndent","MAX_SAFE_INTEGER","firstNonEmptyLine","lastNonEmptyLine","_firstNonEmptyLine","indent","leadingWhitespace","str","charCodeAt","escapedRegExp","escapedReplacer","escapeSequences","printDocASTReducer","varDefs","_ref2","block","_ref3","argsLine","_ref4","_ref5","_ref6","typeCondition","_ref7","_ref8","_ref9","_ref10","isBlockString","escapedValue","isSingleLine","forceLeadingNewLine","hasTrailingTripleQuotes","endsWith","hasTrailingQuote","hasTrailingSlash","forceTrailingNewline","printAsMultipleLines","minimize","skipLeadingNewLine","printBlockString","_ref11","_ref12","_ref13","_ref14","_ref15","_ref16","_ref17","_ref18","_ref19","_ref20","description","operationTypes","_ref21","_ref22","_ref23","interfaces","_ref24","hasMultilineItems","_ref25","_ref26","_ref27","types","_ref28","_ref29","_ref30","_ref31","repeatable","locations","_ref32","_ref33","_ref34","_ref35","_ref36","_ref37","_ref38","maybeArray","separator","_maybeArray$filter$jo","maybeString","_maybeArray$some","printCache","ast","origPrint","fallbackHttpConfig","http","includeQuery","includeExtensions","preserveHeaderCase","headers","accept","defaultPrinter","printer","selectHttpOptionsAndBodyInternal","configs","credentials","normalizedHeaders_1","headerData","originalName","normalizedHeaders","removeDuplicateHeaders","fromError","errorValue","TYPENAME_FIELD","FIELD","NAME","isEmpty","FRAGMENT_SPREAD","nullIfDocIsEmpty","fragmentDef","getFragmentDefinition","getDirectiveMatcher","tests","testConfig","makeInUseGetterFunction","defaultKey","inUse","fragmentSpreads","removeDirectivesFromDocument","getInUseByOperationName","getInUseByFragmentName","getInUse","ancestor","OPERATION_DEFINITION","FRAGMENT_DEFINITION","operationCount","directiveMatcher","shouldRemoveField","nodeDirectives","originalFragmentDefsByPath","firstVisitMadeChanges","fieldOrInlineFragmentVisitor","docWithoutDirectiveSubtrees","_parent","_path","removed","populateTransitiveVars","transitiveVars","childFragmentName","varName","allFragmentNamesUsed","enterVisitor","usedVariableNames_1","varDef","addTypenameToDocument","lastIndexOf","added","buildQueryFromSelectionSet","removeClientSetsFromDocument","backupFetch","fetch","createHttpLink","linkOptions","uri","preferredFetch","useGETForQueries","includeUnusedVariables","requestOptions","fetcher","checkFetcher","linkConfig","fetchOptions","chosenURI","fallbackURI","contextURI","getContext","selectURI","clientAwarenessHeaders","clientAwareness","contextHeaders","contextConfig","transformedQuery","controller","unusedNames","filterOperationVariables","isSubscription","hasDefer","acceptHeader","queryParams","addQueryParam","serializedVariables","serializedExtensions","preFragment","fragmentStart","queryParamsPrefix","newURI","rewriteURIForGET","currentFetch","observerNext","setContext","ctype","nextValue","TextDecoder","decoder","contentType","delimiter","boundaryVal","boundary","running","decode","searchFrom","contentType_1","hasNext","readMultipartBody","handleError","HttpLink","fnToStr","previousComparisons","equal","check","aTag","previouslyCompared","aKeys","definedKeys","bKeys","keyCount","aIterator","isMap","info","aKey","aValue","aCode","full","suffix","fromIndex","nativeCodeSuffix","isDefinedKey","bSet","defaultMakeData","Trie","weakness","makeData","lookupArray","getChildTrie","peek","peekArray","mapFor","removeArray","weak","strong","isObjRef","currentContext","MISSING_VALUE","idCounter","ignored","globalKey","globalHost","Slot","slots","withValue","saved","noContext","parentEntrySlot","arrayFromSet","maybeUnsubscribe","entryOrDep","emptySetPool","POOL_TARGET_SIZE","assert","optionalMessage","valueIs","valueGet","valueCopy","Entry","parents","childValues","dirtyChildren","recomputing","mightBeDirty","rememberParent","recompute","entry","forgetChildren","recomputeNewValue","setDirty","maybeSubscribe","reportClean","setClean","reallyRecompute","reportDirty","eachParent","forgetChild","forget","dependOn","dep","forgetDeps","reportDirtyChild","reportCleanChild","normalizeResult","oldValueCopy","parentCount","parentWasClean","childValue","removeDirtyChild","EntryMethods","depsByKey","depend","entryMethodName","defaultKeyTrie","defaultMakeCacheKey","trie","caches","originalFunction","keyArgs","makeCacheKey","cacheOption","optimistic","dirtyKey","peekKey","forgetKey","getKey","identity","DocumentTransform","resultCache","getCacheKey","cached","resetCache","predicate","transformDocument","stableCacheKeys_1","performWork","cacheKeys","transformedDocument","otherTransform","asyncMap","mapFn","catchFn","promiseQueue","makeCallback","examiner","both","sub","graphQLResultHasError","getGraphQLErrorsFromResult","incrementalResult","iterateObserversSafely","observers","argument","observersWithMethod","obs","fixObservableSubclass","subclass","species","isPromiseLike","NetworkStatus","Concast","addObserver","removeObserver","handlers","latest","notify","nextResultListeners","cancel","iterable","deliverLastMessage","nextOrError","beforeNext","called","isNetworkRequestInFlight","networkStatus","compact","objects","cloneDeep","cloneDeepHelper","val","seen","copy_1","copy_2","equalByQuery","aData","aRest","bData","bRest","equalBySelectionSet","aResult","bResult","seenSelections","selectionHasNonreactiveDirective","resultKey","aResultChild","bResultChild","childSelectionSet","aChildIsArray","bChildIsArray","length_1","directiveIsNonreactive","ObservableQuery","queryInfo","subObserver","defaultSubscriptionObserverErrorCallback","reobserve","tearDownQuery","waitForOwnResult","skipCacheDataFor","fetchPolicy","isTornDown","defaultOptions","watchQuery","defaultFetchPolicy","_f","initialFetchPolicy","queryId","generateQueryId","opDef","queryName","lastQuery","removeQuery","resetDiff","getCurrentResult","saveAsLastResult","getLastResult","loading","hasForcedResolvers","diff","getDiff","returnPartialData","partial","partialRefetch","logMissingFieldErrors","missing","updateLastResult","isDifferentFromLastResult","newResult","hasNonreactiveDirective","getLast","variablesMustMatch","getLastError","resetLastResults","resetQueryStoreErrors","resetErrors","refetch","reobserveOptions","pollInterval","vars","fetchMore","fetchMoreOptions","combinedOptions","qid","originalNetworkStatus","notifyOnNetworkStatusChange","observe","updatedQuerySet","fetchMoreResult","batch","updateQuery","writeQuery","onWatchUpdated","watch","reobserveCacheFirst","subscribeToMore","startGraphQLSubscription","subscriptionData","setOptions","newOptions","silentSetOptions","setVariables","startPolling","updatePolling","stopPolling","applyNextFetchPolicy","nextFetchPolicy","newNetworkStatus","setObservableQuery","ssrMode","pollingInfo","hasObservers","interval","skipPollAttempt","poll","maybeFetch","assumeImmutableResults","reobserveAsConcast","useDisposableConcast","oldVariables","oldFetchPolicy","mergedOptions","finishWaitingForOwnResult","concast","fromLink","reportResult","lastError","isDifferent","errorResult","stopQuery","obsQuery","currentFetchPolicy","isSelectionNode","INLINE_FRAGMENT","cacheSlot","cacheInfoMap","getCacheInfo","forgetCache","rv","makeVar","newValue","broadcastWatches","broadcast","oldListeners","attach","onNextChange","attachCache","LocalState","resolvers","fragmentMatcher","selectionsToResolveCache","addResolvers","setFragmentMatcher","resolverGroup","setResolvers","getResolvers","runResolvers","remoteResult","onlyRunForcedResolvers","resolveDocument","localResult","getFragmentMatcher","clientQuery","serverQuery","prepareContext","identify","addExportedVariables","document_1","buildRootValueFromCache","exportedVariables","shouldForceResolvers","forceResolvers","rootValue_1","rootValue","mainDefinition","selectionsToResolve","collectSelectionsToResolve","definitionOperation","defaultOperationType","execContext","resolveSelectionSet","isClientFieldDescendant","resultsToMerge","resolveField","fieldResult","isInlineFragment","fragmentResult","aliasedFieldName","aliasUsed","defaultResult","resultPromise","resolverType","resolverMap","isClientField","resolveSubSelectedArray","isSingleASTNode","collectByDefinition","definitionNode","matches_1","___","spread","fragmentSelections","destructiveMethodCounts","wrapDestructiveCacheMethod","methodName","original","cancelNotifyTimeout","QueryInfo","lastRequestId","stopped","observableQuery","init","lastDiff","getDiffOptions","updateWatch","oq","updateLastDiff","canonizeResults","setDiff","oldDiff","notifyTimeout","oqListener","fromOptimisticTransaction","shouldNotify","watchOptions","watcher","lastWatch","resetLastWrite","lastWrite","shouldWrite","dmCount","markResult","cacheWriteBehavior","shouldWriteResult","errorPolicy","performTransaction","overwrite","diffOptions","markReady","markError","ignoreErrors","writeWithErrors","IGNORE","QueryManager","queryDeduplication","onBroadcast","localState","defaultContext","fetchCancelFns","transformCache","queryIdCounter","requestIdCounter","mutationIdCounter","inFlightLinkObservables","defaultDocumentTransform","mutationStore","_info","stopQueryNoBroadcast","cancelPendingFetches","mutation","optimisticResponse","updateQueries","refetchQueries","awaitRefetchQueries","updateWithProxyFn","onQueryUpdated","_g","_h","keepRootFields","mutationId","generateMutationId","transformForLink","getVariables","_j","mutationStoreValue","isOptimistic","markMutationOptimistic","broadcastQueries","getObservableFromLink","storeResult","markMutationResult","removeOptimistic","cacheWrites","skipCache","dataId","asQuery","updateQueries_1","currentQueryResult","nextQueryResult","mutationResult","queryVariables","results_1","updateCache","write","isFinalResult","isExecutionPatchInitialResult","DELETE","include","recordOptimisticTransaction","fetchQuery","fetchConcastWithInfo","getQueryStore","store","cacheEntry","defaultVars","generateRequestId","stopQueryInStore","stopQueryInStoreNoBroadcast","clearStore","discardWatches","getObservableQueries","queryNamesAndDocs","legacyQueryOptions","getQuery","included","nameOrDoc","reFetchObservableQueries","includeStandby","observableQueryPromises","makeObservable","hasErrors","hasProtocolErrors","graphQLResultHasProtocolErrors","observablePromise_1","getLocalState","deduplication","inFlightLinkObservables_1","forceFetch","printedServerQuery_1","varJson_1","getResultsFromLink","requestId","linkDocument","aqr","containsDataFromLink","defaults","normalized","fromVariables","sourcesWithInfo","fetchQueryByPolicy","cleanupCancelFn","includedQueriesById","refetchWritePolicy","oldNetworkStatus","readCache","resultsFromCache","fromData","resultsFromLink","newContext","mergeOptions","hasSuggestedDevtools","ApolloClient","resetStoreCallbacks","clearStoreCallbacks","ssrForceFetchDelay","connectToDevTools","__APOLLO_CLIENT__","typeDefs","clientAwarenessName","clientAwarenessVersion","disableNetworkFetches","watchFragment","resetStore","devToolsHookCb","mutations","extract","windowWithDevTools","devtoolsSymbol","__APOLLO_DEVTOOLS_GLOBAL_HOOK__","protocol","nav","__actionHookForDevTools","__requestRaw","onResetStore","onClearStore","setLocalStateFragmentMatcher","setLink","newLink","ApolloCache","getFragmentDoc","updateResult","optimisticId","readQuery","rootId","latestDiff","immediate","readFragment","writeFragment","updateFragment","MissingFieldError","deepFreeze","workSet","shallowFreeze","maybeDeepFreeze","hasOwn","isNullish","defaultDataIdFromObject","_id","keyObject","defaultConfig","dataIdFromObject","addTypename","resultCaching","shouldCanonizeResults","TypeOrFieldNameRegExp","fieldNameFromStoreName","storeFieldName","selectionSetMatchesResult","storeValueIsStoreObject","extractFragmentContext","lookupFragment","delModifier","INVALIDATE","EntityStore","policies","group","rootIds","getFieldValue","objectOrReference","canRead","objOrRef","toReference","objOrIdOrRef","mergeIntoStore","toObject","storeObject","rootTypenamesById","Layer","dependOnExistence","existing","incoming","merged","storeObjectReconciler","caching","fieldsToDirty_1","__exists","hasKeyArgs","changedFields_1","needToMerge_1","allDeleted_1","sharedDetails_1","readField","fieldNameOrOptions","fieldValue","storage","getStorage","checkReference","seenReference","someNonReference","newValue_1","getStoreFieldName","evict","evicted","extraRootIds","getRootIdSet","__META","newData","rest_1","retain","release","ids","snapshot","findChildRefIds","idsToRemove","root_1","found_1","workSet_1","keyMaker","CacheGroup","resetCaching","makeDepKey","maybeDependOnExistenceOfEntity","entityId","supportsResultCaching","Root","seed","stump","Stump","storageTrie","addLayer","layerId","replay","removeLayer","ownStoreObject","parentStoreObject","fromParent","existingObject","incomingObject","existingValue","incomingValue","ObjectCanon","known","pool","passes","keysByJSON","admit","isKnown","isObjectOrArray","pass","copy","shallowCopy","proto_1","array_1","json","firstValueIndex_1","sorted","obj_1","execSelectionSetKeyArgs","StoreReader","knownResults","canon","peekArgs","other","enclosingRef","execSelectionSetImpl","resultCacheMaxSize","varString","execSubSelectedArrayImpl","resetCanon","diffQueryAgainstStore","rootRef","execResult","firstMissing","isFresh","objectsToMerge","missingMerger","handleMissing","resultName","rootIdsByTypename","fragmentMatches","finalResult","frozen","childResult","getTypenameFromStoreObject","assertSelectionSetForIdValue","tree","specifierInfoCache","lookupSpecifierInfo","spec","cacheKey","keyFieldsFnFromSpecifier","specifier","keyFieldsFn","collectSpecifierPaths","schemaKeyPath","extracted","extractKeyPath","keyArgsFnFromSpecifier","keyArgsFn","collected","firstChar","variableName","varKeyPath","directiveName_1","directiveArgs","extractor","getSpecifierPaths","toMerge","paths","paths_1","currentPath_1","normalize","reducer","argsFromFieldSpecifier","nullKeyFieldsFn","simpleKeyArgsFn","_args","mergeTrueFn","mergeObjects","mergeFalseFn","Policies","typePolicies","toBeAdded","supertypeMap","fuzzySubtypes","usingPossibleTypes","setRootTypename","possibleTypes","addPossibleTypes","addTypePolicies","partialContext","ROOT_QUERY","normalizeReadFieldOptions","policy","getTypePolicy","keyFn","specifierOrId","queryType","mutationType","subscriptionType","updateTypePolicy","keyFields","setMerge","getFieldPolicy","old","supertype","getSupertypeSet","subtype","RegExp","policy_1","supertypes_1","regExp","fuzzy","fuzzySupertypes","rest","inbox","createIfMissing","fieldPolicies","supertypeSet","typenameSupertypeSet","workQueue_1","maybeEnqueue_1","needToCheckFuzzySubtypes","checkingFuzzySubtypes","fuzzyString","fieldSpec","specifierOrString","directivesObj","storeKeyNameFromField","readOptions","makeFieldFunctionOptions","getReadFunction","getMergeFunction","parentTypename","childTypename","runMergeFunction","makeMergeObjectsFunction","readFieldArgs","argc","eType","iType","getContextFlavor","clientOnly","deferred","flavored","flavors","StoreWriter","writeToStore","operationDefinition","written","incomingById","processSelectionSet","mergeTree","fieldNodeSet","entityRef","applied","applyMerges","fieldsWithSelectionSets_1","hasSelectionSet_1","childTree","hasMergeFunction_1","existingRef","incomingObj","getChild","parentType","typeDotName","warnings","childTypenames","warnAboutDataLoss","result_1","flattenFields","resultFieldKey","getChildMergeTree","processFieldValue","maybeRecycleChildMergeTree","dataRef","sets","previous_1","mergeMergeTrees","mergeTreeIsEmpty","fieldMap","limitingTrie","flatten","inheritedContext","visitedNode","visited","if","getStorageArgs","e_1","i_1","getValue_1","eVal","iVal","aVal","emptyMergeTreePool","needToMergeMaps","remainingRightKeys_1","leftTree","InMemoryCache","watches","addTypenameTransform","txCount","normalizeConfig","rootStore","optimisticData","resetResultCache","resetResultIdentities","previousReader","storeReader","storeWriter","broadcastWatch","restore","recallCache","resetCaches","idToRemove","newOptimisticData","perform","layer","alreadyDirty","addFragmentsToDocument","DocumentType","didWarnUncachedGetSnapshot","getServerSnapshot","inst","checkIfSnapshotChanged","Query","Mutation","useApolloClient","wrapperSymbol","useQuery","hookName","useHook","clientOrObsQuery","wrappers","wrapper","wrapHook","_useQuery","forceUpdateState","tick","createInternalState","InternalState","updateState","useInternalState","ssrDisabledResult","skipStandbyResult","toQueryResultCache","requiredOperationName","usedOperationName","verifyDocumentType","previousResult","previousData","executeQuery","watchQueryOptions","createWatchQueryOptions","queryHookOptions","getObsQueryOptions","toQueryResult","renderPromises","useOptions","useObservableQuery","handleStoreChange","onNext","setResult","resubscribeAfterError","unsafeHandlePartialRefetch","currentWatchQueryOptions","onCompleted","ssr","skip","globalDefaults","otherOptions","getDefaultFetchPolicy","getSSRObservable","obsQueryFields","ssrAllowed","registerSSRObservable","addObservableQueryPromise","nextResult","handleErrorOrCompleted","error_1","toApolloError","queryResult","resultWithoutPartial","LineRegExp","getLocation","position","lastLineStart","matchAll","printLocation","printSourceLocation","sourceLocation","firstLineColumnOffset","locationOffset","padStart","lineIndex","lineOffset","lineNum","columnOffset","columnNum","locationStr","locationLine","subLineIndex","subLineColumnNum","subLines","printPrefixedLines","subLine","existingLines","padLen","GraphQLError","_this$nodes","_nodeLocations$","rawArgs","nodes","positions","originalError","firstArg","toNormalizedOptions","super","undefinedIfEmpty","nodeLocations","loc","pos","originalExtensions","captureStackTrace","output","formattedError","syntaxError","DirectiveLocation","TokenKind","Lexer","startOfFileToken","SOF","lastToken","token","lineStart","lookahead","EOF","nextToken","readNextToken","COMMENT","isUnicodeScalarValue","isSupplementaryCodePoint","isLeadingSurrogate","isTrailingSurrogate","printCodePointAt","lexer","codePointAt","fromCodePoint","createToken","bodyLength","readComment","BANG","DOLLAR","AMP","PAREN_L","PAREN_R","SPREAD","COLON","EQUALS","AT","BRACKET_L","BRACKET_R","BRACE_L","PIPE","BRACE_R","readBlockString","readString","readNumber","readName","firstCode","isFloat","readDigits","FLOAT","INT","chunkStart","STRING","readEscapedUnicodeVariableWidth","readEscapedUnicodeFixedWidth","readEscapedCharacter","point","readHexDigit","read16BitHexCode","trailingCode","currentLine","blockLines","BLOCK_STRING","instanceOf","process","_value$constructor","className","stringifiedValue","Source","Parser","sourceObj","isSource","_lexer","_tokenCounter","parseName","expectToken","parseDocument","DOCUMENT","many","parseDefinition","parseOperationDefinition","hasDescription","peekDescription","keywordToken","parseSchemaDefinition","parseScalarTypeDefinition","parseObjectTypeDefinition","parseInterfaceTypeDefinition","parseUnionTypeDefinition","parseEnumTypeDefinition","parseInputObjectTypeDefinition","parseDirectiveDefinition","parseFragmentDefinition","parseTypeSystemExtension","unexpected","QUERY","parseSelectionSet","parseOperationType","parseVariableDefinitions","parseDirectives","operationToken","MUTATION","SUBSCRIPTION","optionalMany","parseVariableDefinition","VARIABLE_DEFINITION","parseVariable","parseTypeReference","expectOptionalToken","parseConstValueLiteral","parseConstDirectives","VARIABLE","SELECTION_SET","parseSelection","parseFragment","parseField","nameOrAlias","parseArguments","isConst","parseConstArgument","parseArgument","ARGUMENT","parseValueLiteral","hasTypeCondition","expectOptionalKeyword","parseFragmentName","parseNamedType","expectKeyword","allowLegacyFragmentVariables","parseList","parseObject","advanceLexer","parseStringLiteral","BOOLEAN","NULL","ENUM","LIST","OBJECT","parseObjectField","OBJECT_FIELD","parseDirective","DIRECTIVE","innerType","LIST_TYPE","NON_NULL_TYPE","NAMED_TYPE","parseDescription","parseOperationTypeDefinition","SCHEMA_DEFINITION","OPERATION_TYPE_DEFINITION","SCALAR_TYPE_DEFINITION","parseImplementsInterfaces","parseFieldsDefinition","OBJECT_TYPE_DEFINITION","delimitedMany","parseFieldDefinition","parseArgumentDefs","FIELD_DEFINITION","parseInputValueDef","INPUT_VALUE_DEFINITION","INTERFACE_TYPE_DEFINITION","parseUnionMemberTypes","UNION_TYPE_DEFINITION","parseEnumValuesDefinition","ENUM_TYPE_DEFINITION","parseEnumValueDefinition","parseEnumValueName","ENUM_VALUE_DEFINITION","getTokenDesc","parseInputFieldsDefinition","INPUT_OBJECT_TYPE_DEFINITION","parseSchemaExtension","parseScalarTypeExtension","parseObjectTypeExtension","parseInterfaceTypeExtension","parseUnionTypeExtension","parseEnumTypeExtension","parseInputObjectTypeExtension","SCHEMA_EXTENSION","SCALAR_TYPE_EXTENSION","OBJECT_TYPE_EXTENSION","INTERFACE_TYPE_EXTENSION","UNION_TYPE_EXTENSION","ENUM_TYPE_EXTENSION","INPUT_OBJECT_TYPE_EXTENSION","parseDirectiveLocations","DIRECTIVE_DEFINITION","parseDirectiveLocation","noLocation","getTokenKindDesc","atToken","openKind","parseFn","closeKind","delimiterKind","maxTokens","isPunctuatorTokenKind","docCache","fragmentSourceMap","printFragmentWarnings","experimentalFragmentVariables","string","processFragments","seenKeys","sourceKeySet","parsed","stripLoc","gql","literals","gql_1","extras","disableFragmentWarnings","enableExperimentalFragmentVariables","disableExperimentalFragmentVariables","GET_COUNTRIES","_templateObject","_jsx","_jsxs","countries","country","emoji","capital","_typeof","toPropertyKey","toPrimitive","deepEqual","objectPathMonad","objectPath","splitLength","currentVal","flattenObject","toReturn","flatObject","flatClone","sortObject","noArraySort","localeCompare","out","dest","overwriteGetterForCaching","getterName","isMaybeReadonlyArray","arrayFilterNotEmpty","countUntilNotMatching","matchingFn","idx","appendToArray","addSize","baseSize","_setPrototypeOf","_inheritsLoose","_getPrototypeOf","_isNativeReflectConstruct","_wrapNativeSuper","Wrapper","overwritable","isDevMode","deepFreezeWhenDevMode","tunnelErrorMessage","messageForError","parameters","paramStr","_k","parametersToString","RxError","_Error","mes","getErrorUrl","rxdb","RxTypeError","_TypeError","errorUrlHint","newRxError","newRxTypeError","isBulkWriteConflictError","STORAGE_WRITE_ERROR_CODE_TO_MESSAGE","HOOKS","preAddRxPlugin","preCreateRxDatabase","createRxDatabase","preCreateRxCollection","createRxCollection","createRxState","postDestroyRxCollection","postRemoveRxCollection","preCreateRxSchema","createRxSchema","preCreateRxQuery","prePrepareQuery","createRxDocument","postCreateRxDocument","preCreateRxStorageInstance","preStorageWrite","preMigrateDocument","postMigrateDocument","preDestroyRxDatabase","postRemoveRxDatabase","preReplicationMasterWrite","preReplicationMasterWriteDocumentsHandle","runPluginHooks","hookKey","fun","runAsyncPluginHooks","REGEX_ALL_DOTS","COUCH_NAME_CHARS","randomCouchString","ucfirst","trimDots","isFolderPath","disallowedKeys","digits","getPathSegments","parts","currentSegment","currentPart","isIgnoring","character","isStringIndex","isInteger","assertNotStringIndex","getProperty","pathArray","RX_META_LWT_MINIMUM","getDefaultRxDocumentMeta","lwt","getSchemaByObjectPath","rxJsonSchema","usePath","fillPrimaryKey","primaryPath","jsonSchema","documentData","newPrimary","getComposedPrimaryKeyOfDocumentData","existingPrimary","getPrimaryFieldOfPrimaryKey","compositePrimary","fillWithDefaultSettings","schemaObj","additionalProperties","keyCompression","required","encrypted","_rev","minLength","_attachments","_deleted","_meta","RX_META_SCHEMA","finalFields","getFinalFields","elem","useIndexes","arIndex","getDefaultIndex","internalIndexes","hasIndex","indexStr","minimum","maximum","multipleOf","final","RxSchema","hashFunction","getIndexes","_proto","validateChange","dataBefore","dataAfter","getDocumentPrototype","pathProperties","fullPath","__defineGetter__","get$","get$$","getPrimaryOfDocumentData","useJsonSchema","normalizeRxJsonSchema","isFunction","operate","lift","hasLift","liftedSource","createErrorClass","createImpl","ctorFunc","UnsubscriptionError","arrRemove","initialTeardown","_parentage","_finalizers","_parentage_1","_parentage_1_1","initialFinalizer","_finalizers_1","_finalizers_1_1","finalizer","execFinalizer","teardown","_hasParent","_addParent","_removeParent","EMPTY","EMPTY_SUBSCRIPTION","onUnhandledError","onStoppedNotification","useDeprecatedSynchronousErrorHandling","useDeprecatedNextContext","timeoutProvider","delegate","handle","reportUnhandledError","COMPLETE_NOTIFICATION","createNotification","errorContext","isRoot","errorThrown","Subscriber","destination","isStopped","EMPTY_OBSERVER","SafeSubscriber","handleStoppedNotification","nextNotification","_next","_error","_complete","_bind","ConsumerObserver","partialObserver","handleUnhandledError","observerOrNext","context_1","notification","createOperatorSubscriber","onComplete","onFinalize","OperatorSubscriber","shouldUnsubscribe","closed_1","project","isArrayLike","isPromise","pipeFromArray","fns","operator","isObserver","_trySubscribe","sink","promiseCtor","getPromiseCtor","Symbol_observable","toPromise","isInteropObservable","isAsyncIterable","createInvalidObservableTypeError","isIterable","Symbol_iterator","readableStreamLikeToAsyncGenerator","readableStream","releaseLock","isReadableStreamLike","innerFrom","fromAsyncIterable","iterable_1","iterable_1_1","asyncIterable","asyncIterable_1","asyncIterable_1_1","executeSchedule","parentSubscription","work","scheduleSubscription","mergeMap","resultSelector","concurrent","onBeforeNext","expand","innerSubScheduler","additionalFinalizer","isComplete","checkComplete","outerNext","doInnerSub","innerComplete","innerValue","bufferedValue","mergeInternals","mergeAll","popScheduler","popNumber","observeOn","subscribeOn","scheduleAsyncIterable","scheduled","scheduleObservable","scheduleArray","schedulePromise","scheduleIterable","scheduleReadableStreamLike","concatAll","startWith","distinctUntilChanged","comparator","keySelector","defaultCompare","previousKey","currentKey","ObjectUnsubscribedError","Subject","currentObservers","hasError","thrownError","subject","AnonymousSubject","_throwIfClosed","_checkFinalizedStatuses","_innerSubscribe","asObservable","dateTimestampProvider","ReplaySubject","_bufferSize","_windowTime","_timestampProvider","_buffer","_infiniteTimeWindow","_trimBuffer","adjustedBufferSize","handleReset","onSubscriber","shareReplay","configOrBufferSize","windowTime","bufferSize","refCount","connector","resetOnError","resetOnComplete","resetOnRefCountZero","wrapperSource","connection","resetConnection","hasCompleted","hasErrored","cancelReset","resetAndUnsubscribe","conn","share","ensureNotFalsy","RXJS_SHARE_REPLAY_DEFAULTS","PROMISE_RESOLVE_FALSE","PROMISE_RESOLVE_NULL","PROMISE_RESOLVE_VOID","requestIdlePromiseNoQueue","requestIdleCallback","ms","promiseWait","idlePromiseQueue","getFromMapOrThrow","getFromMapOrCreate","creator","ifWasThere","pluginMissing","pluginKey","keyParts","pluginName","part","_lastNow","twoDecimals","parseFloat","toFixed","getHeightOfRevision","revision","useChars","createRevision","databaseInstanceToken","previousDocData","INTERNAL_STORAGE_NAME","getSingleDocument","storageInstance","documentId","findDocumentsById","throwIfIsStorageWriteError","collection","writeData","writeError","stripAttachmentsDataFromRow","writeRow","stripAttachmentsDataFromDocument","useDoc","attachmentId","attachmentData","attachmentBase64String","atob","attachmentWriteDataToNormalData","flatCloneDocWithMeta","BULK_WRITE_SUCCESS_MAP","getWrappedStorageInstance","database","originalStorageInstance","internals","collectionName","databaseName","bulkWrite","rows","databaseToken","toStorageWriteRows","lockedRun","writeResult","useWriteResult","successArray","getWrittenDocumentsFromBulkWriteResponse","reInsertErrors","documentInDb","reInserts","subResult","subSuccess","preparedQuery","deleted","getAttachmentData","getChangedDocumentsSince","checkpoint","minDeletedTime","storageInstances","changeStream","conflictResultionTasks","resolveConflictResultionTask","taskSolution","isEqual","writeRows","fromMap","errorIds","_index","_index2","_doc","IncrementalWriteQueue","preWrite","postWrite","queueByDocId","isRunning","addWrite","lastKnownDocumentState","modifier","docId","triggerRun","itemsById","_docId","oldData","docs","newestRevisionHeight","findNewestOfDocumentStates","isConflict","rxError","modifierFromPublicToInternal","publicModifier","withoutMeta","docData","stripMetaDataFromDocument","modified","reattachedMeta","basePrototype","isInstanceOfRxDocument","primary","_data","deleted$","deleted$$","getReactivityFactory","fromObservable","getLatest","latestDocData","_docCache","getLatestDocumentData","getCachedRxDocument","changeEvent","isLocal","getDocumentDataOfRxChangeEvent","rxChangeEvent","previousDocumentData","curr","$$","refCollection","collections","findByIds","valuesIterator","findOne","objPath","_propertyCache","valueObj","proxy","lastChar","toMutableJSON","withMetaFields","_updateObj","incrementalUpdate","updateCRDT","putAttachment","getAttachment","allAttachments","allAttachments$","mutationFunction","_saveData","incrementalModify","incrementalWriteQueue","patch","incrementalPatch","beforeDocumentUpdateWrite","isError","_runHooks","removedDocData","deletedData","incrementalRemove","newDoc","createRxDocumentConstructor","BehaviorSubject","EmptyError","insertFirst","previousResults","keyDocumentMap","insertLast","removeFirstItem","removeLastItem","removeExisting","insertAtSortPosition","compareFunction","low","lastMidDoc","high","mid","pushAtSortPosition","sortComparator","orderedActionList","actionFunctions","doNothing","_input","removeFirstInsertLast","removeLastInsertFirst","removeFirstInsertFirst","removeLastInsertLast","replaceExisting","alwaysWrong","wrongHuman","getTime","removeExistingAndInsertAtSortPosition","runFullQueryAgain","unknownAction","characters","makeid","splitStringToChunks","chunkSize","chunks","charsLength","CHAR_CODE_OFFSET","getNumberOfChar","lastOfArray","hasLimit","isFindOne","hasSkip","isDelete","isInsert","isUpdate","wasLimitReached","sortParamsChanged","sortFields","wasInResult","wasFirst","wasLast","wasSortedBeforeFirst","wasSortedAfterLast","isSortedBeforeFirst","isSortedAfterLast","wasMatching","queryMatcher","doesMatchNow","wasResultsEmpty","stateResolveFunctionByIndex","simpleBdd","getSimpleBdd","nodesById","lastLeafNodeChar","leafNodeChunks","internalNodeChunks","idOf0Branch","idOf1Branch","last3","idOf0","idOf1","minimalStringToSimpleBdd","resolveInput","currentNode","currentLevel","resolveWithSimpleBdd","calculateActionName","resolvedActionId","INDEX_MAX","INDEX_MIN","MIN_SAFE_INTEGER","getQueryPlan","selector","hasDescSorting","sortField","sortIrrelevevantFields","schemaPart","currentBestQueryPlan","optimalSortIndexCompareString","currentBestQuality","inclusiveEnd","inclusiveStart","opts","indexField","matcher","operators","matcherOpts","LOGICAL_OPERATORS","partialOpts","operatorValue","startKey","endKey","getMatcherQueryOpts","startKeys","opt","endKeys","queryPlan","sortSatisfiedByIndex","selectorSatisfiedByIndex","isSelectorSatisfiedByIndex","quality","addQuality","pointsPerMatchingKey","nonMinKeyCount","keyValue","nonMaxKeyCount","equalKeyCount","pointsIfNoReSortMustBeDone","rateQueryPlan","LOWER_BOUND_LOGICAL_OPERATORS","UPPER_BOUND_LOGICAL_OPERATORS","hasNonMatchingOperator","$and","$or","satisfieldLowerBound","lowerOperatorFieldNames","lowerLogicOps","hasLowerLogicOp","satisfieldUpperBound","upperOperatorFieldNames","_fieldName","_operation","upperLogicOps","hasUperLogicOp","_fieldName2","MingoError","MAX_LONG","MIN_LONG","MISSING","CYCLE_FOUND_ERROR","ARRAY_PROTO","OBJECT_PROTO","OBJECT_TYPE_RE","Null","Undefined","getConstructor","DEFAULT_HASH_FUNCTION","cycle","STRING_CONVERTERS","members","getMembersOf","objKeys","hash","JS_SIMPLE_TYPES","IMMUTABLE_TYPES_SET","typedArrayToString","toISOString","Int8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","BigInt64Array","BigUint64Array","SORT_ORDER_BY_TYPE","null","boolean","regexp","function","getType","isTypedArray","isBoolean","isString","isNumber","isObjectLike","isDate","isRegExp","isNil","notInArray","isMissing","ensureArray","mergeable","skipValidation","into","buildHashIndex","hashCode","intersection","sortedIndex","smallest","rmap","lhs","stable","found","currIndex","rhs","xs","depth","flatten2","ys","activeProto","groupBy","existingKey","MAX_ARRAY_PUSH","begin","resolve2","subpath","unwrapArray","unwrap","resolveGraph","isIndex","preserveMissing","preserveKeys","filterMissing","NUMBER_RE","walk","buildGraph","isNextArrayIndex","descendArray","removeValue","OPERATOR_NAME_PATTERN","isOperator","expr","$regex","$eq","exprObj","newExpr","ProcessingMode","OperatorType","ComputeOptions","_opts","_local","timestamp","local","getOptions","Context","idKey","collation","processingMode","CLONE_OFF","useStrictMode","scriptEnabled","useGlobalContext","collectionResolver","jsonSchemaValidator","initOptions","ACCUMULATOR","EXPRESSION","PIPELINE","PROJECTION","WINDOW","addOperators","ctx","getOperator","addAccumulatorOps","addExpressionOps","addQueryOps","addPipelineOps","addProjectionOps","addWindowOps","GLOBAL_CONTEXT","useOperators","currentFn","systemVariables","$$ROOT","_obj","_expr","$$CURRENT","$$REMOVE","$$NOW","redactVariables","$$KEEP","$$PRUNE","$$DESCEND","redact","computeValue","copts","callExpression","callAccumulator","Lazy","Iterator","dropItem","DONE","Action","nextVal","iteratees","yieldedValues","isDone","getNext","nextFn","bufferIndex","innerDone","MAP","func","FILTER","TAKE","DROP","createCallback","take","drop","iter","Aggregator","pipeline","CLONE_ALL","CLONE_INPUT","pipelineOperators","operatorKeys","opName","CLONE_OUTPUT","Cursor","projection","$project","fetchAll","buffered","iterators","compose","$skip","$limit","$sort","compiled","compile","whereOperator","processOperator","sortKeys","collationSpec","localeOpt","sensitivity","COLLATION_STRENGTH","strength","caseFirst","numeric","numericOrdering","ignorePunctuation","caseLevel","collator","Intl","Collator","collationComparator","coll","modifiers","groups","createQueryOperator","createExpressionOperator","eq","$ne","$in","$nin","$lt","mingoCmp","$lte","$gt","$gte","isNonBooleanOperator","$elemMatch","format","temp","isNull","isInt","isLong","compareFuncs","bool","decimal","double","int","long","regex","compareType","__nin","bitwise","compute","nums","__eq","__gt","__gte","__lt","__lte","__ne","buildMap","letters","sign","FIXED_POINTS","createTrignometryOperator","fixedPoints","fp","keySet","acos","acosh","asin","asinh","atan","atanh","cos","cosh","RADIANS_FACTOR","PI","DEGREES_FACTOR","sin","sinh","tan","expressionKeys","idOnlyExcluded","validateExpression","ID_KEY","processObject","newObj","foundSlice","foundExclusion","dropKeys","subExpr","subExprObj","subExprKeys","objPathGraph","$nor","$not","__in","$mod","truthy","matched","__elemMatch","$size","$exists","$type","mingoInitDone","normalizeMangoQuery","mangoQuery","normalizedMangoQuery","indexAr","isPrimaryInSort","firstPropertyNameOfObject","fieldsWithLogicalOperator","currentBestIndexForSort","currentFieldsAmount","useIndex","firstWrongIndex","getSortComparator","sortParts","sortBlock","direction","getValueFn","sortPart","valueA","valueB","mingoSortComparator","getQueryMatcher","_schema","mingoQuery","runQueryUpdateFunction","rxQuery","getSortFieldsOfQuery","RXQUERY_QUERY_PARAMS_CACHE","calculateNewResults","rxChangeEvents","eventReduce","useSortComparator","docA","docB","sortComparatorData","getQueryParams","docsData","previousResultsMap","docsDataMap","changed","foundNonOptimizeable","cE","rxChangeEventToEventReduceChangeEvent","eventReduceEvent","actionName","runAction","newResults","QueryCache","_map","getByQuery","stringRep","uncacheRxQuery","queryCache","uncached","countRxQuerySubscribers","refCount$","tryToKeepMax","unExecutedLifetime","defaultCacheReplacementPolicy","_collection","minUnExecutedLifetime","maybeUncache","queriesInCache","_lastEnsureEqual","_creationTime","mustUncache","COLLECTIONS_WITH_RUNNING_CLEANUP","triggerCacheReplacement","rxCollection","requestIdlePromise","destroyed","cacheReplacementPolicy","_queryCache","DocumentCache","changes$","documentCreator","cacheItemByDocId","tasks","docMeta","cacheItem","revisionHeight","events","processTasks","task","getLatestDocumentDataIfExists","getCachedRxDocumentMonad","registryTasks","byRev","cachedRxDocumentWeakRef","cachedRxDocument","createWeakRefWithFallback","mapDocumentsDataToCacheDocs","getCachedRxDocuments","RxQuerySingleResult","docsDataFromStorageInstance","documents","_queryCount","RxQueryBase","_execOverDatabaseCount","_latestChangeEvent","_lastExecStart","_lastExecEnd","_ensureEqualQueue","isFindOneByIdQuery","_setResultData","newResultData","newQueryResult","_execOverDatabase","getPreparedQuery","allowSlowCount","queryObj","mustBeQueried","docsPromise","docIds","docsFromStorage","fromStorageList","queryCollection","throwIfMissing","_ensureEqual","hasConfig","firstValueFrom","stringObj","hookInput","prepareQuery","doesDocumentDataMatch","asRxQuery","_patch","_queryObj","_params","_amount","_$","results$","useResult","docsMap","createRxQuery","_isResultsInSync","currentLatestEventNumber","_changeEventBuffer","getCounter","mustReExec","missedChangeEvents","getFrom","runChangeEvents","reduceByLastOfDoc","previousCount","newCount","didMatchBefore","eventReduceResult","ar1","ar2","row1","row2","areRxDocumentArraysEqual","__ensureEqual","mutateableQuery","INTERNAL_CONTEXT_COLLECTION","INTERNAL_CONTEXT_STORAGE_TOKEN","INTERNAL_STORE_SCHEMA","title","maxLength","enum","sharding","shards","getPrimaryKeyOfInternalDocument","getAllCollectionDocuments","getAllQueryPrepared","STORAGE_TOKEN_DOCUMENT_KEY","STORAGE_TOKEN_DOCUMENT_ID","_collectionNamePrimary","fillObjectDataBeforeInsert","rxSchema","defaultKeys","fillObjectWithDefaults","removeCollectionStorages","databaseInternalStorage","relevantCollectionMetaDocs","metaDoc","removeStorages","isCollection","connectedStorages","row","alreadyAdded","createStorageInstance","multiInstance","devMode","writeDoc","ensureRxCollectionIsNotDestroyed","ChangeEventBuffer","subs","counter","eventCounterMap","eventBulks$","changeEventBulk","bulk","eventBulk","_handleChangeEvents","counterBefore","counterBase","getBuffer","getArrayIndexByPointer","pointer","oldestEvent","oldestCounter","currentIndex","nextEvent","runFrom","changeEvents","constructorForCollection","schemaProto","ormProto","methods","getDocumentOrmPrototype","createNewRxDocument","documentConstructor","jsonData","createRxDocumentWithConstructor","_runHooksSync","defaultConflictHandler","newDocumentState","realMasterState","HOOKS_WHEN","HOOKS_KEYS","hooksApplied","RxCollectionBase","internalStorageInstance","instanceCreationOptions","migrationStrategies","attachments","statics","conflictHandler","timeouts","_incrementalUpsertQueues","synced","hooks","_subs","checkpoint$","onDestroy","onRemove","colProto","when","fnName","parallel","addHook","_applyHookFunctions","asRxCollection","prepare","collectionEventBulks$","listenToRemoveSub","internalStore","databaseStorageToken","storageToken","subDocs","rawEvents","internal","endTime","$emit","_minimumDeletedTime","migrationNeeded","getMigrationState","startMigration","batchSize","migratePromise","insert","bulkInsert","success","insertRows","hasHooks","useDocData","rxDocuments","bulkRemove","rxDocumentMap","rxDocument","removeDocs","successIds","bulkUpsert","insertData","useJsonByDocId","useJson","insertResult","docDataInDb","upsert","bulkResult","incrementalUpsert","docDataFromCache","inserted","_incrementalUpsertEnsureRxDocumentExists","wasInserted","_innerDoc","_incrementalUpsertUpdate","exportJSON","importJSON","_exportedJSON","insertCRDT","boundFun","runName","series","getHooks","initial","promiseSeries","IdleQueue","parallels","_parallels","_qC","_iC","_lHN","_hPM","_pHM","_removeIdlePromise","idleQueue","_timeoutObj","_tryIdleCall","_tryIR","isIdle","_manRes","_resolveOneIdleCall","lock","unlock","wrapCall","maybePromise","prom","timeoutObj","cancelIdlePromise","cancelIdleCallback","RXDB_VERSION","ignoreUnknown","respectType","respectFunctionNames","respectFunctionProperties","unorderedObjects","unorderedArrays","unorderedSets","excludeKeys","excludeValues","replacer","nativeFunc","WordArray","words","sigBytes","encoder","Hex","wordArray","clamp","thatByte","hexChars","bite","Latin1","latin1Str","latin1StrLength","Utf8","utf8Str","unescape","BufferedBlockAlgorithm","_nDataBytes","_minBufferSize","blockSize","_append","_doProcessBlock","_dataWords","_offset","_process","doFlush","processedWords","nBlocksReady","nWordsReady","nBytesReady","Hasher","messageUpdate","SHA256","_hash","H2","gamma0x","gamma0","gamma1x","gamma1","maj","sigma0","t1","nBitsTotal","nBitsLeft","defaultHashSha256","TextEncoder","encode","hashBuffer","_defineProperty","ObliviousSet","ttl","_to","obliviousSet","olderThen","removeTooOldValues","USED_DATABASE_NAMES","RxDatabaseBase","cleanupPolicy","reactivity","rxdbVersion","startupErrors","states","observable$","storageTokenDocument","emittedEventBulkIds","asRxDatabase","rxDatabase","passwordHash","instanceToken","conflictError","databaseStateVersion","codeVersion","existingPasswordHash","ensureStorageTokenDocumentExists","removeCollectionDoc","addCollections","collectionCreators","jsonSchemas","schemas","bulkPutDocs","useArgsByCollectionName","collectionNameWithVersion","collectionDocData","schemaHash","useArgs","hookData","putDocsResult","ensureNoStartupErrors","docInDb","previousSchemaHash","previousSchema","autoMigrate","localDocuments","storageInstanceCreationParams","createRxCollectionStorageInstance","funName","_collections","addState","_name","backup","leaderElector","isLeader","waitForLeadership","migrationStates","dbInternalsStorageInstance","createRxDatabaseStorageInstance","collectionDocs","collectionNames","removedCollectionNames","removeRxDatabase","ignoreDuplicate","throwIfDatabaseNameUsed","PROTOTYPES","RxDocument","RxDocumentPrototype","RxQuery","RxCollection","RxDatabase","ADDED_PLUGINS","ADDED_PLUGIN_NAMES","_rxCollectionProperties","_rxDatabaseProperties","ERROR_MESSAGES","UT1","UT2","UT3","UT4","UT5","UT6","UT7","PL1","PL3","P2","QU1","QU4","QU5","QU6","QU9","QU10","QU11","QU12","QU13","QU14","QU15","QU16","QU17","MQ1","MQ2","MQ3","MQ4","MQ5","MQ6","MQ7","MQ8","DB1","DB2","DB3","DB4","DB5","DB6","DB8","DB11","DB12","DB13","DB14","COL1","COL2","COL3","COL4","COL5","COL6","COL7","COL8","COL9","COL10","COL11","COL12","COL13","COL14","COL15","COL16","COL17","COL18","COL20","COL21","CONFLICT","DOC1","DOC2","DOC3","DOC4","DOC5","DOC6","DOC7","DOC8","DOC9","DOC10","DOC11","DOC13","DOC14","DOC15","DOC16","DOC17","DOC18","DOC19","DOC20","DOC21","DOC22","DOC23","DOC24","DM1","DM2","DM3","DM4","DM5","AT1","EN1","EN2","EN3","EN4","JD1","JD2","JD3","LD1","LD2","LD3","LD4","LD5","LD6","LD7","LD8","RC1","RC2","RC4","RC5","RC6","RC7","RC_PULL","RC_STREAM","RC_PUSH","RC_PUSH_NO_AR","RC_WEBRTC_PEER","RC_COUCHDB_1","RC_COUCHDB_2","RC_OUTDATED","RC_UNAUTHORIZED","RC_FORBIDDEN","SC1","SC2","SC3","SC4","SC6","SC7","SC8","SC10","SC11","SC13","SC14","SC15","SC16","SC17","SC18","SC19","SC20","SC21","SC22","SC23","SC24","SC25","SC26","SC27","SC28","SC29","SC30","SC32","SC33","SC34","SC35","SC36","SC37","SC38","SC39","SC40","SC41","VD1","VD2","S1","GQL1","GQL3","CRDT1","CRDT2","CRDT3","SNH","_rxDocumentProperties","pseudoRxDocument","rxDocumentProperties","ownProperties","prototypeProperties","validateFieldsDeep","checkField","regexStr","checkFieldNameRegex","isNested","traverse","currentObj","currentPath","nextPath","getSchemaPropertyRealPath","shortPath","pathParts","realPath","checkOrmMethods","pseudoInstance","rxCollectionProperties","checkMigrationStrategies","previousVersions","fill","getPreviousVersions","have","should","vNr","strategy","ensureCollectionNameValid","rxDatabaseProperties","validateDatabaseName","validCouchDBStringRegexStr","validCouchDBStringRegex","givenName","checkMangoQuery","massagedSelector","schemaTopLevelFields","fieldOrOperator","schemaIndexes","schemaIndex","areSelectorsSatisfiedByIndex","ensureObjectDoesNotContainRegExp","containsDateInstance","checkWriteRows","_loop","metaFieldName","structuredClone","RXDB_UTILS_GLOBAL","PREMIUM_FLAG_HASH","iframeShown","addDevModeTrackingIframe","hostname","premium","isRxDatabaseFirstTimeInstantiated","iframe","showDevModeWarning","RxDBDevModePlugin","after","validatePrimarySchemaPart","compositePrimaryKey","primaryPathSchemaPart","isFinite","checkPrimaryKey","parentPath","lastPathPart","partParts","parentSchemaPart","indexPaths","indexPath","propPath","ensureDatabaseNameIsValid","topLevelFields","checkOrmDocumentMethods","before","ensurePrimaryKeyValid","validKeys","checkQuery","DexieSymbol","_Dexie","DEXIE_DOCS_TABLE_NAME","DEXIE_CHANGES_TABLE_NAME","DEXIE_ATTACHMENTS_TABLE_NAME","RX_STORAGE_NAME_DEXIE","DEXIE_STATE_DB_BY_NAME","REF_COUNT_PER_DEXIE_DB","DEXIE_PIPE_SUBSTITUTE","dexieReplaceIfStartsWithPipe","withoutFirst","dexieReplaceIfStartsWithPipeRevert","fromStorageToDexie","booleanIndexes","fromStorageToDexieField","fromDexieToStorage","fromDexieToStorageField","getDexieStoreSchema","dexieSchemaRows","getDocsInDb","dexieTable","attachmentObjectId","getBooleanIndexes","checkedFields","mapKeyForKeyRange","rangeFieldToBooleanSubstitute","getKeyRangeByQueryPlan","dexieQuery","skipPlusLimit","keyRange","dexieDb","queryPlanFields","indexName","dexieTx","cursorReq","cursor","argsOrArgArray","PROMISE_RESOLVED_VOID","sleep","resolveWith","randomToken","lastMs","microSeconds","NativeMethod","channelName","micro","messagesCallback","subFns","msgEvent","channelState","onMessage","messageJson","canBeUsed","Deno","_pubkey","averageResponseTime","fillOptionsWithDefaults","originalOptions","webWorkerSupport","idb","fallbackInterval","localstorage","removeTimeout","maxParallelWrites","useFastPath","DB_PREFIX","OBJECT_STORE_ID","TRANSACTION_SETTINGS","getIdb","commitIndexedDBTransaction","tx","getMessagesHigherThan","lastCursorId","keyRangeValue","getAllRequest","rej","openCursorRequest","ev","cleanOldMessages","msgObk","getOldMessages","tooOld","deleteRequest","removeMessagesById","msg","_readLoop","readNewMessages","newerMessages","useMessages","msgObj","uuid","eMIs","messagesCallbackTime","_filterMessage","msgObjA","msgObjB","IndexedDBMethod","IndexedDB","dbName","openRequest","createDatabase","writeBlockPromise","readQueuePromises","readerUuid","writeObject","writeMessage","KEY_PREFIX","getLocalStorage","localStorage","storageKey","ls","setItem","removeItem","LocalstorageMethod","addStorageEventListener","writeObj","createEvent","initEvent","defaultTime","SIMULATE_CHANNELS","SimulateMethod","channel","METHODS","ENFORCED_OPTIONS","OPEN_BROADCAST_CHANNELS","lastId","chooseMethods","useMethod","chooseMethod","_iL","_onML","_addEL","_uMP","_befC","_prepP","_prepareChannel","_post","broadcastChannel","sendPromise","_hasMessageListeners","_addListenerObject","listenerFn","listenerObject","_startListening","_removeListenerObject","_stopListening","postInternal","listenObj","awaitPrepare","isClosed","BROADCAST_CHANNEL_BY_TOKEN","removeBroadcastChannelReference","refObject","addRxStorageMultiInstanceSupport","storageName","instanceCreationParams","providedBroadcastChannel","getBroadcastChannelReference","changesFromOtherInstances$","eventListener","oldChangestream$","otherSources","mergeWith","oldClose","oldRemove","instanceId","shownNonPremiumLog","RxStorageInstanceDexie","settings","documentWrites","ensureNotClosed","categorized","documentKeys","dexieAttachmentsTable","docsInDbMap","docWithDexieInternals","docsInDb","bulkWriteRows","onInsert","onUpdate","newestRow","hasAttachments","bulkInsertDocs","bulkUpdateDocs","eventBulkEvents","attachmentsAdd","attachmentsRemove","attachmentsUpdate","hasDocsInDb","rowAmount","attachmentError","rowId","documentDeleted","previousDeleted","revInDb","updatedRow","previousAttachmentData","newDigest","eventDocumentData","previousEventDocumentData","_event","insertedIsDeleted","categorizeBulkWriteRows","putAttachments","attachment","lastState","dexieCount","minimumDeletedTime","maxDeletionTime","toRemove","removeIds","_digest","statePromise","closeDexieDb","_taskSolution","createDexieStorageInstance","params","dexieDbName","useSettings","dexieStoresSettings","getDexieDbWithTables","RxStorageDexie","compression","ensureRxStorageInstanceParamsAreCorrect","getRxStorageDexie","plugin","plugins","prototypes","hooksObj","addRxPlugin","todoSchema","TodoList","todos","setTodos","setName","setDb","todosList","initializeDatabase","toggleTodo","todo","updatedTodos","placeholder","onChange","todoList","alert","deleteTodo","App","activeTab","setActiveTab","renderTabContent","Countries","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById","reportWebVitals"],"sourceRoot":""}